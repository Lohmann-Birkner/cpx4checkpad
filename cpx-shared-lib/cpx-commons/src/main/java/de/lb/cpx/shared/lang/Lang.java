/* 
 * Copyright (c) 2016 Lohmann & Birkner.
 * NOTICE:  All information contained herein is, and remains
 * the property of Lohmann & Birkner and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Lohmann & Birkner
 * and its suppliers and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Lohmann & Birkner.
 * http://www.lohmann-birkner.de/de/index.php
 *
 * Contributors:
 *    2016  Niemeier - initial API and implementation and/or initial documentation
 */

//WARNING: DON'T EDIT THIS FILE MANUALLY, CHANGES WILL BE DISCARDED
//LOOK FOR MainLangConstantsCreator CLASS TO APPLY AUTOMATICALLY CHANGES OR EDIT SUPER CLASS AbstractLang
package de.lb.cpx.shared.lang;

import java.util.HashMap;

/**
 *
 * @author Dirk Niemeier
 */
public class Lang extends AbstractLang {

    /** <pre>ACG_AGE_BAND_00_04
      * [en] 00-04
      * [de] 00-04</pre>
      * Attention! this value ('00-04') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_3!
      */
    public static final String ACG_AGE_BAND_00_04 = "Acg.Age.Band.00-04";

    /** <pre>ACG_AGE_BAND_05_11
      * [en] 05-11
      * [de] 05-11</pre>
      * Attention! this value ('05-11') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_4!
      */
    public static final String ACG_AGE_BAND_05_11 = "Acg.Age.Band.05-11";

    /** <pre>ACG_AGE_BAND_12_17
      * [en] 12-17
      * [de] 12-17</pre>
      * Attention! this value ('12-17') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_5!
      */
    public static final String ACG_AGE_BAND_12_17 = "Acg.Age.Band.12-17";

    /** <pre>ACG_AGE_BAND_18_34
      * [en] 18-34
      * [de] 18-34</pre>
      * Attention! this value ('18-34') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_6!
      */
    public static final String ACG_AGE_BAND_18_34 = "Acg.Age.Band.18-34";

    /** <pre>ACG_AGE_BAND_35_44
      * [en] 35-44
      * [de] 35-44</pre>
      * Attention! this value ('35-44') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_7!
      */
    public static final String ACG_AGE_BAND_35_44 = "Acg.Age.Band.35-44";

    /** <pre>ACG_AGE_BAND_45_54
      * [en] 45-54
      * [de] 45-54</pre>
      * Attention! this value ('45-54') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_8!
      */
    public static final String ACG_AGE_BAND_45_54 = "Acg.Age.Band.45-54";

    /** <pre>ACG_AGE_BAND_55_64
      * [en] 55-64
      * [de] 55-64</pre>
      */
    public static final String ACG_AGE_BAND_55_64 = "Acg.Age.Band.55-64";

    /** <pre>ACG_AGE_BAND_65_69
      * [en] 65-69
      * [de] 65-69</pre>
      */
    public static final String ACG_AGE_BAND_65_69 = "Acg.Age.Band.65-69";

    /** <pre>ACG_AGE_BAND_70_74
      * [en] 70-74
      * [de] 70-74</pre>
      * Attention! this value ('70-74') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_10!
      */
    public static final String ACG_AGE_BAND_70_74 = "Acg.Age.Band.70-74";

    /** <pre>ACG_AGE_BAND_75_79
      * [en] 75-79
      * [de] 75-79</pre>
      * Attention! this value ('75-79') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_11!
      */
    public static final String ACG_AGE_BAND_75_79 = "Acg.Age.Band.75-79";

    /** <pre>ACG_AGE_BAND_80_84
      * [en] 80-84
      * [de] 80-84</pre>
      * Attention! this value ('80-84') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_12!
      */
    public static final String ACG_AGE_BAND_80_84 = "Acg.Age.Band.80-84";

    /** <pre>ACG_AGE_BAND_85_P
      * [en] 85+
      * [de] 85+</pre>
      * Attention! this value ('85+') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_13!
      */
    public static final String ACG_AGE_BAND_85_P = "Acg.Age.Band.85P";

    /** <pre>ACG_INDEX_TYPE_BTH
      * [en] Diagnosis &amp; Drugs (Both)
      * [de] Diagnosen &amp; Medikamente (Beides)</pre>
      */
    public static final String ACG_INDEX_TYPE_BTH = "Acg.Index.Type.BTH";

    /** <pre>ACG_INDEX_TYPE_ICD
      * [en] Diagnosis
      * [de] Diagnosen</pre>
      * Attention! this value ('Diagnosis') seems to be also defined under the key DIAGNOSIS!
      */
    public static final String ACG_INDEX_TYPE_ICD = "Acg.Index.Type.ICD";

    /** <pre>ACG_INDEX_TYPE_NP
      * [en] Not presend
      * [de] Nicht vorhanden</pre>
      */
    public static final String ACG_INDEX_TYPE_NP = "Acg.Index.Type.NP";

    /** <pre>ACG_INDEX_TYPE_RX
      * [en] Drugs (Rx supplements are prescription or prescription medications)
      * [de] Medikamente (Rx-Präparate sind verschreibungspflichtige bzw. rezeptpflichtige Medikamente)</pre>
      */
    public static final String ACG_INDEX_TYPE_RX = "Acg.Index.Type.Rx";

    /** <pre>ACG_INDEX_TYPE_TRT
      * [en] Treatment
      * [de] Durchgehende Behandlung</pre>
      * Attention! this value ('Treatment') seems to be also defined under the key ICD_TYPE_TREATMENT! this value ('Treatment') seems to be also defined under the key TREATMENT!
      */
    public static final String ACG_INDEX_TYPE_TRT = "Acg.Index.Type.TRT";

    /** <pre>ACTION_ADDED_TOOLTIP
      * [en] See the details of an Action
      * [de] Siehe die Details einer Aktion</pre>
      */
    public static final String ACTION_ADDED_TOOLTIP = "Action.Added.Tooltip";

    /** <pre>ACTION_COMMENT
      * [de] Text der letzten Aktion (Aktion Text)</pre>
      */
    public static final String ACTION_COMMENT = "Action.comment";

    /** <pre>ACTION_CREATE
      * [en] create Action
      * [de] Aktion erstellen</pre>
      */
    public static final String ACTION_CREATE = "Action.create";

    /** <pre>ACTION_CREATION_DATE
      * [en] Action Creation Date (Creation Date)
      * [de] Anlagedatum der Aktion (Anlagedatum)</pre>
      */
    public static final String ACTION_CREATION_DATE = "Action.CreationDate";

    /** <pre>ACTION_MSG_NO_CREATE_RIGHT
      * [en] You do not have right to create any action
      * [de] Sie haben keine Berechtigung, eine Aktion zu erstellen</pre>
      */
    public static final String ACTION_MSG_NO_CREATE_RIGHT = "Action.msg.no.create.right";

    /** <pre>ACTION_MSG_NO_EDIT_RIGHT
      * [en] You do not have right to edit any action
      * [de] Sie haben keine Berechtigung, eine Aktion zu editieren</pre>
      */
    public static final String ACTION_MSG_NO_EDIT_RIGHT = "Action.msg.no.edit.right";

    /** <pre>ACTION_REMOVED_TOOLTIP
      * [en] This Action is removed
      * [de] Diese Aktion wird entfernt</pre>
      */
    public static final String ACTION_REMOVED_TOOLTIP = "Action.Removed.Tooltip";

    /** <pre>ACTION_SUBJECT
      * [en] Action
      * [de] Aktion</pre>
      * Attention! this value ('Action') seems to be also defined under the key EVENT_NAME_ACTION!
      */
    public static final String ACTION_SUBJECT = "Action.Subject";

    /** <pre>ACTION_SUBJECT_LATEST
      * [en] Action (Type of the latest action)
      * [de] Typ der letzten Aktion (Aktion)</pre>
      */
    public static final String ACTION_SUBJECT_LATEST = "Action.subject.latest";

    /** <pre>ACTION_SUBJECTS
      * [en] Action subjects
      * [de] Aktionstypen</pre>
      */
    public static final String ACTION_SUBJECTS = "Action.subjects";

    /** <pre>ACTION_TYPE
      * [en] Action type
      * [de] Aktionstyp</pre>
      */
    public static final String ACTION_TYPE = "Action.type";

    /** <pre>ACTUAL
      * [en] actual
      * [de] Aktuell</pre>
      */
    public static final String ACTUAL = "Actual";

    /** <pre>ADD
      * [en] Add
      * [de] Hinzufügen</pre>
      */
    public static final String ADD = "Add";

    /** <pre>ADD_CASE_ADD_BILL
      * [en] add bill
      * [de] Rechnung zufügen</pre>
      */
    public static final String ADD_CASE_ADD_BILL = "Add.case.add.bill";

    /** <pre>ADD_CASE_ADD_DEPARTMENT
      * [en] Add Department
      * [de] Abteilung hinzufügen</pre>
      */
    public static final String ADD_CASE_ADD_DEPARTMENT = "AddCase.addDepartment";

    /** <pre>ADD_CASE_BILLS
      * [en] bills
      * [de] Rechnungen</pre>
      * Attention! this value ('Bills') seems to be also defined under the key SAP_BILLS!
      */
    public static final String ADD_CASE_BILLS = "Add.case.bills";

    /** <pre>ADD_CASE_CANCEL_CONFIRMATION
      * [en] Do you really want to quit  Case input?
      * [de] Wollen Sie die manuelle Falleingabe wirklich beenden?</pre>
      */
    public static final String ADD_CASE_CANCEL_CONFIRMATION = "AddCase.cancel.confirmation";

    /** <pre>ADD_CASE_DRG_TITLE
      * [en] Group Result / Revenue
      * [de] Grouperergebnis/Erlös</pre>
      */
    public static final String ADD_CASE_DRG_TITLE = "AddCase.Drg.Title";

    /** <pre>ADD_CASE_EDIT_ICD_OPS_DESCRIPTION
      * [en] Add and edit diagnoses and procedures for the stay in the department
      * [de] Zum Aufenthalt in der Abteilung Diagnosen und Prozeduren hinzufügen und bearbeiten</pre>
      */
    public static final String ADD_CASE_EDIT_ICD_OPS_DESCRIPTION = "AddCase.editIcdOpsDescription";

    /** <pre>ADD_CASE_REMOVE_BILL
      * [en] remove bill
      * [de] Rechnung entfernen</pre>
      */
    public static final String ADD_CASE_REMOVE_BILL = "Add.case.remove.bill";

    /** <pre>ADD_CASE_REMOVE_DEPARTMENT
      * [en] Remove Department
      * [de] Abteilung entfernen</pre>
      */
    public static final String ADD_CASE_REMOVE_DEPARTMENT = "AddCase.removeDepartment";

    /** <pre>ADD_CASE_SEARCH_HOSPITAL_OPTIONEN
      * [en] Further hospital search criteria
      * [de] Krankenhaus - weitere Suchkriterien</pre>
      */
    public static final String ADD_CASE_SEARCH_HOSPITAL_OPTIONEN = "AddCase.search.hospital.optionen";

    /** <pre>ADD_CASE_SEARCH_INSURANCE_OPTIONEN
      * [en] Further insurance search criteria
      * [de] Krankenkasse - weitere Suchkriterien</pre>
      */
    public static final String ADD_CASE_SEARCH_INSURANCE_OPTIONEN = "AddCase.search.insurance.optionen";

    /** <pre>ADD_CASE_TITLE
      * [en] Create Case
      * [de] Falleingabe</pre>
      */
    public static final String ADD_CASE_TITLE = "AddCase.Title";

    /** <pre>ADD_CASE_TITLE_EXTENDED
      * [en] Manual case creation: {0} ({1}/{2})
      * [de] Manuelle Falleingabe: {0} {1}/{2}</pre>
      */
    public static final String ADD_CASE_TITLE_EXTENDED = "AddCase.Title.extended";

    /** <pre>ADDITIONAL_DATA
      * [en] Additional Data
      * [de] Zusätzliche Daten</pre>
      */
    public static final String ADDITIONAL_DATA = "AdditionalData";

    /** <pre>ADDRESS
      * [en] Address
      * [de] Anschrift</pre>
      * Attention! this value ('Address') seems to be also defined under the key AUDIT_ADDRESS! this value ('Address') seems to be also defined under the key MDK_ADDRESS!
      */
    public static final String ADDRESS = "Address";

    /** <pre>ADDRESS_CITY
      * [en] City
      * [de] Stadt</pre>
      * Attention! this value ('City') seems to be also defined under the key AUDIT_CITY!
      */
    public static final String ADDRESS_CITY = "Address.city";

    /** <pre>ADDRESS_DIFFER
      * [en] Differend Address
      * [de] Abweichende Anschrift</pre>
      */
    public static final String ADDRESS_DIFFER = "Address.differ";

    /** <pre>ADDRESS_MOBILE_NUMBER
      * [en] Mobile Number
      * [de] Mobilnummer</pre>
      */
    public static final String ADDRESS_MOBILE_NUMBER = "Address.mobileNumber";

    /** <pre>ADDRESS_PHONE_NUMBER
      * [en] Telephone Number
      * [de] Telefonnummer</pre>
      */
    public static final String ADDRESS_PHONE_NUMBER = "Address.phoneNumber";

    /** <pre>ADDRESS_STREET
      * [en] Street
      * [de] Straße</pre>
      */
    public static final String ADDRESS_STREET = "Address.street";

    /** <pre>ADDRESS_TYPE_POSTAL
      * [en] Postal Address
      * [de] Postanschrift</pre>
      */
    public static final String ADDRESS_TYPE_POSTAL = "Address.Type.Postal";

    /** <pre>ADDRESS_TYPE_RESIDENTIAL
      * [en] Residential Address
      * [de] Wohnanschrift</pre>
      */
    public static final String ADDRESS_TYPE_RESIDENTIAL = "Address.Type.Residential";

    /** <pre>ADDRESS_ZIP_CODE
      * [en] ZIP Code
      * [de] Postleitzahl (PLZ)</pre>
      */
    public static final String ADDRESS_ZIP_CODE = "Address.zipCode";

    /** <pre>ADMISSION_BY_LAW
      * [en] Admission By Law
      * [de] GPS (Gesetzlich psych. Stat)</pre>
      */
    public static final String ADMISSION_BY_LAW = "AdmissionByLaw";

    /** <pre>ADMISSION_BY_LAW_UNVOLUNTARY
      * [en] Unvoluntary
      * [de] Unfreiwillig</pre>
      */
    public static final String ADMISSION_BY_LAW_UNVOLUNTARY = "Admission.ByLaw.Unvoluntary";

    /** <pre>ADMISSION_BY_LAW_VOLUNTARY
      * [en] Voluntary
      * [de] Freiwillig</pre>
      */
    public static final String ADMISSION_BY_LAW_VOLUNTARY = "Admission.ByLaw.Voluntary";

    /** <pre>ADMISSION_CAUSE
      * [en] Admission Cause (Adm.-Cause)
      * [de] Aufnahmeanlass (Anlass)</pre>
      */
    public static final String ADMISSION_CAUSE = "AdmissionCause";

    /** <pre>ADMISSION_CAUSE_ADMISSION_AFTER_REHA
      * [en] Admission after prior treatment in a rehabilitation facility
      * [de] Aufnahme nach vorausgegangener Behandlung in einer Rehaeinrichtung</pre>
      */
    public static final String ADMISSION_CAUSE_ADMISSION_AFTER_REHA = "Admission.Cause.AdmissionAfterReha";

    /** <pre>ADMISSION_CAUSE_BIRTH
      * [en] Birth
      * [de] Geburt</pre>
      * Attention! this value ('Birth') seems to be also defined under the key ADMISSION_REASON_BIRTH!
      */
    public static final String ADMISSION_CAUSE_BIRTH = "Admission.Cause.Birth";

    /** <pre>ADMISSION_CAUSE_COMPANION
      * [en] Companion
      * [de] Begleitperson</pre>
      */
    public static final String ADMISSION_CAUSE_COMPANION = "Admission.Cause.Companion";

    /** <pre>ADMISSION_CAUSE_EMERGENCY
      * [en] Emergency
      * [de] Notfall</pre>
      */
    public static final String ADMISSION_CAUSE_EMERGENCY = "Admission.Cause.Emergency";

    /** <pre>ADMISSION_CAUSE_INSTRUCTION_BY_DENTIST
      * [en] Admission by dentist
      * [de] Einweisung durch Zahnarzt</pre>
      */
    public static final String ADMISSION_CAUSE_INSTRUCTION_BY_DENTIST = "Admission.Cause.InstructionByDentist";

    /** <pre>ADMISSION_CAUSE_INSTRUCTION_BY_DOCTOR
      * [en] Admission by doctor
      * [de] Einweisung durch Arzt</pre>
      */
    public static final String ADMISSION_CAUSE_INSTRUCTION_BY_DOCTOR = "Admission.Cause.InstructionByDoctor";

    /** <pre>ADMISSION_CAUSE_TRANSFERRING
      * [en] Transferring
      * [de] Verlegung</pre>
      * Attention! this value ('Transferring') seems to be also defined under the key ICD_TYPE_TRANSFERRING! this value ('Transferring') seems to be also defined under the key TRANSFERRING!
      */
    public static final String ADMISSION_CAUSE_TRANSFERRING = "Admission.Cause.Transferring";

    /** <pre>ADMISSION_CAUSE_TRANSFERRING_FROM_ANOTHER_HOSPITAL
      * [en] Transferring from another hospital (e.g. corporations)
      * [de] Verlegung (Aufnahme) aus einem anderem Krankenhaus i.R.e. Kooperation</pre>
      */
    public static final String ADMISSION_CAUSE_TRANSFERRING_FROM_ANOTHER_HOSPITAL = "Admission.Cause.TransferringFromAnotherHospital";

    /** <pre>ADMISSION_CAUSE_TRANSFERRING_WITHIN_24H
      * [en] Transferring (treatment duration from transferring hospital is within 24 hours)
      * [de] Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden)</pre>
      */
    public static final String ADMISSION_CAUSE_TRANSFERRING_WITHIN_24H = "Admission.Cause.TransferringWithin24h";

    /** <pre>ADMISSION_DATA
      * [en] Admission Data
      * [de] Aufnahmedaten</pre>
      */
    public static final String ADMISSION_DATA = "AdmissionData";

    /** <pre>ADMISSION_DATE
      * [en] Admission Date (Adm.-Date)
      * [de] Aufnahmedatum (Aufn.-Datum)</pre>
      */
    public static final String ADMISSION_DATE = "AdmissionDate";

    /** <pre>ADMISSION_DATE_FOR_2013
      * [en] Admission date is before {0}
      * [de] Aufnahmedatum des Falles vor {0}</pre>
      */
    public static final String ADMISSION_DATE_FOR_2013 = "Admission.date.for.2013";

    /** <pre>ADMISSION_DATE_FROM
      * [en] Admission Date from
      * [de] Aufnahmedatum von</pre>
      */
    public static final String ADMISSION_DATE_FROM = "AdmissionDateFrom";

    /** <pre>ADMISSION_DATE_TO
      * [en] Admission Date to
      * [de] Aufnahmedatum bis</pre>
      */
    public static final String ADMISSION_DATE_TO = "AdmissionDateTo";

    /** <pre>ADMISSION_DEPARTMENT
      * [de] KH interner Kurzname der aufn. FAB (aufn. FAB (int.))</pre>
      */
    public static final String ADMISSION_DEPARTMENT = "Admission.Department";

    /** <pre>ADMISSION_DEPARTMENT_301
      * [de] §301-Schlüssel der FAB (aufn. FAB §301)</pre>
      */
    public static final String ADMISSION_DEPARTMENT_301 = "Admission.Department301";

    /** <pre>ADMISSION_DEPARTMENT_301_NAME
      * [de] §301-Name der FAB (aufn. FAB)</pre>
      */
    public static final String ADMISSION_DEPARTMENT_301_NAME = "Admission.Department301.Name";

    /** <pre>ADMISSION_DEPARTMENT_SHORT
      * [en] Admission Department §. 301 (Adm. 301)
      * [de] Aufnehmende FAB nach §. 301 (Aufn. 301)</pre>
      */
    public static final String ADMISSION_DEPARTMENT_SHORT = "Admission.Department.Short";

    /** <pre>ADMISSION_DIAGNOSIS
      * [en] Admission Diagnosis
      * [de] Aufnahmediagnose</pre>
      */
    public static final String ADMISSION_DIAGNOSIS = "Admission.diagnosis";

    /** <pre>ADMISSION_MODE_DAY_CARE
      * [en] Day care (for DRG)
      * [de] Teilstationäre Versorgung(für teilstationäre DRG-Fallpauschale)</pre>
      */
    public static final String ADMISSION_MODE_DAY_CARE = "AdmissionMode.DayCare";

    /** <pre>ADMISSION_MODE_MAIN_DEPARTMENT
      * [en] MD
      * [de] HA</pre>
      */
    public static final String ADMISSION_MODE_MAIN_DEPARTMENT = "AdmissionMode.MainDepartment";

    /** <pre>ADMISSION_MODE_MAIN_DEPARTMENT_CHARGE_DOCTOR
      * [en] MD/B-ChargeDoc.
      * [de] HA/B-Hon.Arzt</pre>
      */
    public static final String ADMISSION_MODE_MAIN_DEPARTMENT_CHARGE_DOCTOR = "AdmissionMode.MainDepartmentChargeDoctor";

    /** <pre>ADMISSION_MODE_MAIN_DEPARTMENT_MIDWIFE
      * [en] MD/B-Mid.
      * [de] HA/B-Heb.</pre>
      */
    public static final String ADMISSION_MODE_MAIN_DEPARTMENT_MIDWIFE = "AdmissionMode.MainDepartmentMidwife";

    /** <pre>ADMISSION_MODE_NOT_RELEVANT
      * [en] Not Relevant
      * [de] Nicht relevant</pre>
      */
    public static final String ADMISSION_MODE_NOT_RELEVANT = "AdmissionMode.NotRelevant";

    /** <pre>ADMISSION_MODE_SURGEON
      * [en] B-Sur.
      * [de] B-Op.</pre>
      */
    public static final String ADMISSION_MODE_SURGEON = "AdmissionMode.Surgeon";

    /** <pre>ADMISSION_MODE_SURGEON_ANESTHETIST
      * [en] B-Sur./B-Anest.
      * [de] B-Op./B-Anäst.</pre>
      */
    public static final String ADMISSION_MODE_SURGEON_ANESTHETIST = "AdmissionMode.SurgeonAnesthetist";

    /** <pre>ADMISSION_MODE_SURGEON_ANESTHETIST_MIDWIFE
      * [en] B-Op./B-Anest./B-Mid.
      * [de] B-Op./B-Anäst./B-Heb.</pre>
      */
    public static final String ADMISSION_MODE_SURGEON_ANESTHETIST_MIDWIFE = "AdmissionMode.SurgeonAnesthetistMidwife";

    /** <pre>ADMISSION_MODE_SURGEON_MIDWIFE
      * [en] B-Sur./B-Mid.
      * [de] B-Op./B-Heb.</pre>
      */
    public static final String ADMISSION_MODE_SURGEON_MIDWIFE = "AdmissionMode.SurgeonMidwife";

    /** <pre>ADMISSION_REASON
      * [en] Admission Reason (AR12)
      * [de] Aufnahmegrund (Stelle 1 u. 2) (Aufn.-Gr.1.u.2.)</pre>
      */
    public static final String ADMISSION_REASON = "AdmissionReason";

    /** <pre>ADMISSION_REASON_2
      * [en] Admission Reason 2 (AR34)
      * [de] Aufnahmegrund (Stelle 3 u. 4) (Aufn.-Gr.3.u.4.)</pre>
      */
    public static final String ADMISSION_REASON_2 = "AdmissionReason2";

    /** <pre>ADMISSION_REASON_2_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER
      * [en] Traffic accident / sports accident / Other accident (for example, § 116 SGB X)
      * [de] Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)</pre>
      */
    public static final String ADMISSION_REASON_2_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER = "Admission.Reason2.accidentType_traffic_sport_other";

    /** <pre>ADMISSION_REASON_2_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE
      * [en] Accident at work / commuting accident / occupational disease (§ 11 Abs . 4 SGB V)
      * [de] Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)</pre>
      */
    public static final String ADMISSION_REASON_2_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE = "Admission.Reason2.accidentType_work_commuting_and_work-relatedDisease";

    /** <pre>ADMISSION_REASON_2_COST_UNIT_CHANGE_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER
      * [en] Cost unit change - Traffic accident / sports accident / Other accident (for example, § 116 SGB X)
      * [de] Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)</pre>
      */
    public static final String ADMISSION_REASON_2_COST_UNIT_CHANGE_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER = "Admission.Reason2.costUnitChange_accidentType_traffic_sport_other";

    /** <pre>ADMISSION_REASON_2_COST_UNIT_CHANGE_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE
      * [en] Cost unit change - accidents at work / commuting accident / occupational disease (§ 11 para 4 SGB V .)
      * [de] Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)</pre>
      */
    public static final String ADMISSION_REASON_2_COST_UNIT_CHANGE_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE = "Admission.Reason2.costUnitChange_accidentType_work_commuting_and_work-relatedDisease";

    /** <pre>ADMISSION_REASON_2_COST_UNIT_CHANGE_EMERGENCY_CASE
      * [en] Cost unit change - Emergency Case
      * [de] Kostenträgerwechsel - Notfall</pre>
      */
    public static final String ADMISSION_REASON_2_COST_UNIT_CHANGE_EMERGENCY_CASE = "Admission.Reason2.costUnitChange_emergencyCase";

    /** <pre>ADMISSION_REASON_2_COST_UNIT_CHANGE_INDICATION_OF_EXTERNAL_VIOLENCE
      * [en] Cost unit change - Recalling the action of external force
      * [de] Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt</pre>
      */
    public static final String ADMISSION_REASON_2_COST_UNIT_CHANGE_INDICATION_OF_EXTERNAL_VIOLENCE = "Admission.Reason2.costUnitChange_indicationOfExternalViolence";

    /** <pre>ADMISSION_REASON_2_COST_UNIT_CHANGE_WAR_INVALIDS_AND_DISABLED_PEOPLE
      * [en] Cost unit change - War Cripples affliction / War Victims affliction
      * [de] Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden</pre>
      */
    public static final String ADMISSION_REASON_2_COST_UNIT_CHANGE_WAR_INVALIDS_AND_DISABLED_PEOPLE = "Admission.Reason2.costUnitChange_warInvalidsAndDisabledPeople";

    /** <pre>ADMISSION_REASON_2_COST_UNIT_REGULAR_CASE
      * [en] Cost unit change - Regular case
      * [de] Kostenträgerwechsel - Normalfall</pre>
      */
    public static final String ADMISSION_REASON_2_COST_UNIT_REGULAR_CASE = "Admission.Reason2.costUnit_regularCase";

    /** <pre>ADMISSION_REASON_2_EMERGENCY_CASE
      * [en] Emergency Case
      * [de] Notfall</pre>
      */
    public static final String ADMISSION_REASON_2_EMERGENCY_CASE = "Admission.Reason2.emergencyCase";

    /** <pre>ADMISSION_REASON_2_INDICATION_OF_EXTERNAL_VIOLENCE
      * [en] Recalling the action of external force
      * [de] Hinweis auf Einwirkung von äußerer Gewalt</pre>
      */
    public static final String ADMISSION_REASON_2_INDICATION_OF_EXTERNAL_VIOLENCE = "Admission.Reason2.indicationOfExternalViolence";

    /** <pre>ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER
      * [en] Integrated care - Car Accident / Accident Sport / Other accident (for example, § 116 SGB X)
      * [de] Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)</pre>
      */
    public static final String ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER = "Admission.Reason2.integratedHealthCare_accidentType_traffic_sport_other";

    /** <pre>ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE
      * [en] Integrated care - accidents at work / commuting accident / occupational disease (§ 11 para 4 SGB V .)
      * [de] Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)</pre>
      */
    public static final String ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE = "Admission.Reason2.integratedHealthCare_accidentType_work_commuting_and_work-relatedDisease";

    /** <pre>ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_EMERGENCY_CASE
      * [en] Integrated care - Emergency Case
      * [de] Integrierte Versorgung - Notfall</pre>
      */
    public static final String ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_EMERGENCY_CASE = "Admission.Reason2.integratedHealthCare_emergencyCase";

    /** <pre>ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_INDICATION_OF_EXTERNAL_VIOLENCE
      * [en] Integrated care - regard to the action of external force
      * [de] Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt</pre>
      */
    public static final String ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_INDICATION_OF_EXTERNAL_VIOLENCE = "Admission.Reason2.integratedHealthCare_indicationOfExternalViolence";

    /** <pre>ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_REGULAR_CASE
      * [en] Integrated care - Regular case
      * [de] Integrierte Versorgung - Normalfall</pre>
      */
    public static final String ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_REGULAR_CASE = "Admission.Reason2.integratedHealthCare_regularCase";

    /** <pre>ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_WAR_INVALIDS_AND_DISABLED_PEOPLE
      * [en] Integrated care - War Cripples affliction / War Victims affliction
      * [de] Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden</pre>
      */
    public static final String ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_WAR_INVALIDS_AND_DISABLED_PEOPLE = "Admission.Reason2.integratedHealthCare_warInvalidsAndDisabledPeople";

    /** <pre>ADMISSION_REASON_2_REGULAR_CASE
      * [en] Regular case
      * [de] Normalfall</pre>
      */
    public static final String ADMISSION_REASON_2_REGULAR_CASE = "Admission.Reason2.regularCase";

    /** <pre>ADMISSION_REASON_2_WAR_INVALIDS_AND_DISABLED_PEOPLE
      * [en] War Cripples affliction / War Victims affliction
      * [de] Kriegsbeschädigten-Leiden / BVG-Leiden</pre>
      */
    public static final String ADMISSION_REASON_2_WAR_INVALIDS_AND_DISABLED_PEOPLE = "Admission.Reason2.warInvalidsAndDisabledPeople";

    /** <pre>ADMISSION_REASON_BIRTH
      * [en] Birth
      * [de] Geburt</pre>
      * Attention! this value ('Birth') seems to be also defined under the key ADMISSION_CAUSE_BIRTH!
      */
    public static final String ADMISSION_REASON_BIRTH = "Admission.Reason.Birth";

    /** <pre>ADMISSION_REASON_FREE
      * [en] free
      * [de] frei</pre>
      */
    public static final String ADMISSION_REASON_FREE = "Admission.Reason.Free";

    /** <pre>ADMISSION_REASON_HOSPITAL_CARE_INPATIENT
      * [en] Hospital care, inpatient
      * [de] Krankenhausbehandlung, vollstationär</pre>
      */
    public static final String ADMISSION_REASON_HOSPITAL_CARE_INPATIENT = "Admission.Reason.HospitalCareInpatient";

    /** <pre>ADMISSION_REASON_HOSPITAL_CARE_INPATIENT_WITH_EXPECTED_BEFORE_INPATIENT_TREATMENT
      * [en] Hospital care, inpatient with expected before inpatient treatment
      * [de] Krankenhausbehandlung, vollstationär mit vorausgegangener vorstat. Behandlung</pre>
      */
    public static final String ADMISSION_REASON_HOSPITAL_CARE_INPATIENT_WITH_EXPECTED_BEFORE_INPATIENT_TREATMENT = "Admission.Reason.HospitalCareInpatientWithExpectedBeforeInpatientTreatment";

    /** <pre>ADMISSION_REASON_HOSPITAL_DAY_PATIENT
      * [en] Hospital day patient
      * [de] Krankenhausbehandlung teilstationär</pre>
      */
    public static final String ADMISSION_REASON_HOSPITAL_DAY_PATIENT = "Admission.Reason.HospitalDayPatient";

    /** <pre>ADMISSION_REASON_HOSPITAL_TREATMENT_WITHOUT_SUBSEQUENT_HOSPITALIZATION
      * [en] Hospital treatment without subsequent hospitalization
      * [de] Krankenhausbehandlung ohne anschl. stationäre Behandlung</pre>
      */
    public static final String ADMISSION_REASON_HOSPITAL_TREATMENT_WITHOUT_SUBSEQUENT_HOSPITALIZATION = "Admission.Reason.HospitalTreatmentWithoutSubsequentHospitalization";

    /** <pre>ADMISSION_REASON_HOSPITALISATION_TO_ORGAN_REMOVAL
      * [en] Hospitalisation to organ removal
      * [de] Stationäre Aufnahme zur Organentnahme</pre>
      */
    public static final String ADMISSION_REASON_HOSPITALISATION_TO_ORGAN_REMOVAL = "Admission.Reason.HospitalisationToOrganRemoval";

    /** <pre>ADMISSION_REASON_MATERNITY_HOSPITAL
      * [en] Maternity hospital
      * [de] stationäre Entbindung</pre>
      */
    public static final String ADMISSION_REASON_MATERNITY_HOSPITAL = "Admission.Reason.MaternityHospital";

    /** <pre>ADMISSION_REASON_RECOVERY_DUE_COMPLICATION
      * [en] Recovery due complication
      * [de] Wiederaufnahme wg. Komplikation (Fallpauschale)</pre>
      */
    public static final String ADMISSION_REASON_RECOVERY_DUE_COMPLICATION = "Admission.Reason.RecoveryDueComplication";

    /** <pre>ADMISSION_REASON_STATION_EQUIVALENT
      * [en] Station equivalent treatment
      * [de] Stationsäquivalente Behandlung</pre>
      */
    public static final String ADMISSION_REASON_STATION_EQUIVALENT = "Admission.Reason.StationEquivalent";

    /** <pre>ADMISSION_REASON_TRANSITIONAL_CARE
      * [de] Übergangspflege</pre>
      */
    public static final String ADMISSION_REASON_TRANSITIONAL_CARE = "Admission.Reason.Transitional.care";

    /** <pre>ADMISSION_WEEKDAY
      * [en] Admission Date Weekday (Adm. Day)
      * [de] Aufnahmedatum Wochentag (Aufn. WT)</pre>
      */
    public static final String ADMISSION_WEEKDAY = "Admission.Weekday";

    /** <pre>ADMISSION_WEIGHT
      * [en] Admission Weight (Weight)
      * [de] Aufnahmegewicht (Gewicht)</pre>
      */
    public static final String ADMISSION_WEIGHT = "AdmissionWeight";

    /** <pre>ADMISSION_WEIGHT_FROM
      * [en] Weight from
      * [de] Gewicht von</pre>
      */
    public static final String ADMISSION_WEIGHT_FROM = "AdmissionWeight.from";

    /** <pre>ADMISSION_WEIGHT_TO
      * [en] Weight to
      * [de] Gewicht bis</pre>
      */
    public static final String ADMISSION_WEIGHT_TO = "AdmissionWeight.to";

    /** <pre>AGE
      * [en] Age
      * [de] Alter</pre>
      */
    public static final String AGE = "Age";

    /** <pre>AGE_DAYS
      * [en] Days
      * [de] Tage</pre>
      */
    public static final String AGE_DAYS = "Age.days";

    /** <pre>AGE_IN_DAYS
      * [en] Age in Days (Age D.)
      * [de] Alter in Tagen (Alter Tage)</pre>
      */
    public static final String AGE_IN_DAYS = "AgeInDays";

    /** <pre>AGE_IN_DAYS_FROM
      * [en] Age D. from
      * [de] Alter Tage von</pre>
      */
    public static final String AGE_IN_DAYS_FROM = "AgeInDays.from";

    /** <pre>AGE_IN_DAYS_TO
      * [en] Age D. to
      * [de] Alter Tage bis</pre>
      */
    public static final String AGE_IN_DAYS_TO = "AgeInDays.to";

    /** <pre>AGE_IN_YEARS
      * [en] Age in Years (Age)
      * [de] Alter in Jahren (Alter Jahre)</pre>
      */
    public static final String AGE_IN_YEARS = "AgeInYears";

    /** <pre>AGE_IN_YEARS_FROM
      * [en] Age from
      * [de] Alter Jahre von</pre>
      */
    public static final String AGE_IN_YEARS_FROM = "AgeInYears.from";

    /** <pre>AGE_IN_YEARS_TO
      * [en] Age to
      * [de] Alter Jahre bis</pre>
      */
    public static final String AGE_IN_YEARS_TO = "AgeInYears.to";

    /** <pre>AGE_YEARS
      * [en] Years
      * [de] Jahre</pre>
      */
    public static final String AGE_YEARS = "Age.years";

    /** <pre>AMBULANT
      * [en] ambulant
      * [de] ambulant</pre>
      */
    public static final String AMBULANT = "Ambulant";

    /** <pre>ANTIBIOGRAM_RESULT_INTERMEDIATE
      * [en] intermediate
      * [de] intermediär</pre>
      */
    public static final String ANTIBIOGRAM_RESULT_INTERMEDIATE = "Antibiogram.Result.Intermediate";

    /** <pre>ANTIBIOGRAM_RESULT_RESISTENT
      * [en] resistent
      * [de] resistent</pre>
      */
    public static final String ANTIBIOGRAM_RESULT_RESISTENT = "Antibiogram.Result.Resistent";

    /** <pre>ANTIBIOGRAM_RESULT_SENSITIVE
      * [en] sensibel
      * [de] sensibel</pre>
      */
    public static final String ANTIBIOGRAM_RESULT_SENSITIVE = "Antibiogram.Result.Sensitive";

    /** <pre>ANTIBIOTIC_AMIKACIN
      * [en] Amikacin
      * [de] Amikacin</pre>
      */
    public static final String ANTIBIOTIC_AMIKACIN = "Antibiotic.Amikacin";

    /** <pre>ANTIBIOTIC_AMPICILLIN_AMOXICILLIN
      * [en] Ampicillin/Amoxicillin
      * [de] Ampicillin/Amoxicillin</pre>
      */
    public static final String ANTIBIOTIC_AMPICILLIN_AMOXICILLIN = "Antibiotic.AmpicillinAmoxicillin";

    /** <pre>ANTIBIOTIC_AMPICILLIN_SULBACTAM
      * [en] Ampicillin+Sulbactam
      * [de] Ampicillin+Sulbactam</pre>
      */
    public static final String ANTIBIOTIC_AMPICILLIN_SULBACTAM = "Antibiotic.AmpicillinSulbactam";

    /** <pre>ANTIBIOTIC_AZTREONAM
      * [en] Aztreonam
      * [de] Aztreonam</pre>
      */
    public static final String ANTIBIOTIC_AZTREONAM = "Antibiotic.Aztreonam";

    /** <pre>ANTIBIOTIC_CEFACLOR
      * [en] Cefaclor
      * [de] Cefaclor</pre>
      */
    public static final String ANTIBIOTIC_CEFACLOR = "Antibiotic.Cefaclor";

    /** <pre>ANTIBIOTIC_CEFAZOLIN
      * [en] Cefazolin
      * [de] Cefazolin</pre>
      */
    public static final String ANTIBIOTIC_CEFAZOLIN = "Antibiotic.Cefazolin";

    /** <pre>ANTIBIOTIC_CEFEPIM
      * [en] Cefepim
      * [de] Cefepim</pre>
      */
    public static final String ANTIBIOTIC_CEFEPIM = "Antibiotic.Cefepim";

    /** <pre>ANTIBIOTIC_CEFOTAXIM_CEFTRIAXON
      * [en] Cefotaxim/Ceftriaxon
      * [de] Cefotaxim/Ceftriaxon</pre>
      */
    public static final String ANTIBIOTIC_CEFOTAXIM_CEFTRIAXON = "Antibiotic.CefotaximCeftriaxon";

    /** <pre>ANTIBIOTIC_CEFPODOXIM
      * [en] Cefpodoxim
      * [de] Cefpodoxim</pre>
      */
    public static final String ANTIBIOTIC_CEFPODOXIM = "Antibiotic.Cefpodoxim";

    /** <pre>ANTIBIOTIC_CEFTAZIDIM
      * [en] Ceftazidim
      * [de] Ceftazidim</pre>
      */
    public static final String ANTIBIOTIC_CEFTAZIDIM = "Antibiotic.Ceftazidim";

    /** <pre>ANTIBIOTIC_CEFUROXIM_CEFOTIAM
      * [en] Cefuroxim/Cefotiam
      * [de] Cefuroxim/Cefotiam</pre>
      */
    public static final String ANTIBIOTIC_CEFUROXIM_CEFOTIAM = "Antibiotic.CefuroximCefotiam";

    /** <pre>ANTIBIOTIC_CIPROFLOXACIN
      * [en] Ciprofloxacin
      * [de] Ciprofloxacin</pre>
      */
    public static final String ANTIBIOTIC_CIPROFLOXACIN = "Antibiotic.Ciprofloxacin";

    /** <pre>ANTIBIOTIC_CLINDAMYCIN
      * [en] Clindamycin
      * [de] Clindamycin</pre>
      */
    public static final String ANTIBIOTIC_CLINDAMYCIN = "Antibiotic.Clindamycin";

    /** <pre>ANTIBIOTIC_DAPTOMYCIN
      * [en] Daptomycin
      * [de] Daptomycin</pre>
      */
    public static final String ANTIBIOTIC_DAPTOMYCIN = "Antibiotic.Daptomycin";

    /** <pre>ANTIBIOTIC_ERYTHROMYCIN
      * [en] Erythromycin
      * [de] Erythromycin</pre>
      */
    public static final String ANTIBIOTIC_ERYTHROMYCIN = "Antibiotic.Erythromycin";

    /** <pre>ANTIBIOTIC_FOSFOMYCIN
      * [en] Fosfomycin+
      * [de] Fosfomycin+</pre>
      */
    public static final String ANTIBIOTIC_FOSFOMYCIN = "Antibiotic.Fosfomycin";

    /** <pre>ANTIBIOTIC_FUCIDINE
      * [en] Fucidine+
      * [de] Fucidine+</pre>
      */
    public static final String ANTIBIOTIC_FUCIDINE = "Antibiotic.Fucidine";

    /** <pre>ANTIBIOTIC_GENTAMICIN
      * [en] Gentamicin
      * [de] Gentamicin</pre>
      */
    public static final String ANTIBIOTIC_GENTAMICIN = "Antibiotic.Gentamicin";

    /** <pre>ANTIBIOTIC_IMIPENEM
      * [en] Imipenem
      * [de] Imipenem</pre>
      */
    public static final String ANTIBIOTIC_IMIPENEM = "Antibiotic.Imipenem";

    /** <pre>ANTIBIOTIC_LEVOFLOXACIN
      * [en] Levofloxacin
      * [de] Levofloxacin</pre>
      */
    public static final String ANTIBIOTIC_LEVOFLOXACIN = "Antibiotic.Levofloxacin";

    /** <pre>ANTIBIOTIC_LINEZOLID
      * [en] Linezolid
      * [de] Linezolid</pre>
      */
    public static final String ANTIBIOTIC_LINEZOLID = "Antibiotic.Linezolid";

    /** <pre>ANTIBIOTIC_MEROPENEM
      * [en] Meropenem
      * [de] Meropenem</pre>
      */
    public static final String ANTIBIOTIC_MEROPENEM = "Antibiotic.Meropenem";

    /** <pre>ANTIBIOTIC_METRONIDAZOL
      * [en] Metronidazol
      * [de] Metronidazol</pre>
      */
    public static final String ANTIBIOTIC_METRONIDAZOL = "Antibiotic.Metronidazol";

    /** <pre>ANTIBIOTIC_MOXIFLOXACIN
      * [en] Moxifloxacin
      * [de] Moxifloxacin</pre>
      */
    public static final String ANTIBIOTIC_MOXIFLOXACIN = "Antibiotic.Moxifloxacin";

    /** <pre>ANTIBIOTIC_OXACILLIN_FLUCLOXACILL
      * [en] Oxacillin/Flucloxacill.
      * [de] Oxacillin/Flucloxacill.</pre>
      */
    public static final String ANTIBIOTIC_OXACILLIN_FLUCLOXACILL = "Antibiotic.OxacillinFlucloxacill";

    /** <pre>ANTIBIOTIC_PENICILLIN
      * [en] Penicillin
      * [de] Penicillin</pre>
      */
    public static final String ANTIBIOTIC_PENICILLIN = "Antibiotic.Penicillin";

    /** <pre>ANTIBIOTIC_PIPERACILLIN
      * [en] Piperacillin
      * [de] Piperacillin</pre>
      */
    public static final String ANTIBIOTIC_PIPERACILLIN = "Antibiotic.Piperacillin";

    /** <pre>ANTIBIOTIC_PIPERACILLIN_TAZO
      * [en] Piperacillin+Tazo.
      * [de] Piperacillin+Tazo.</pre>
      */
    public static final String ANTIBIOTIC_PIPERACILLIN_TAZO = "Antibiotic.PiperacillinTazo";

    /** <pre>ANTIBIOTIC_RIFAMPICIN
      * [en] Rifampicin+
      * [de] Rifampicin+</pre>
      */
    public static final String ANTIBIOTIC_RIFAMPICIN = "Antibiotic.Rifampicin";

    /** <pre>ANTIBIOTIC_TETRACYCLIN_DOXYCYCLIN
      * [en] Tetracyclin/Doxycyclin
      * [de] Tetracyclin/Doxycyclin</pre>
      */
    public static final String ANTIBIOTIC_TETRACYCLIN_DOXYCYCLIN = "Antibiotic.TetracyclinDoxycyclin";

    /** <pre>ANTIBIOTIC_TIGECYCLIN
      * [en] Tigecyclin
      * [de] Tigecyclin</pre>
      */
    public static final String ANTIBIOTIC_TIGECYCLIN = "Antibiotic.Tigecyclin";

    /** <pre>ANTIBIOTIC_TOBRAMYCIN
      * [en] Tobramycin
      * [de] Tobramycin</pre>
      */
    public static final String ANTIBIOTIC_TOBRAMYCIN = "Antibiotic.Tobramycin";

    /** <pre>ANTIBIOTIC_TRIMETHOPRIM_SULFONAMID
      * [en] Trimethoprim+Sulfonamid
      * [de] Trimethoprim+Sulfonamid</pre>
      */
    public static final String ANTIBIOTIC_TRIMETHOPRIM_SULFONAMID = "Antibiotic.TrimethoprimSulfonamid";

    /** <pre>ANTIBIOTIC_VANCOMYCIN
      * [en] Vancomycin
      * [de] Vancomycin</pre>
      */
    public static final String ANTIBIOTIC_VANCOMYCIN = "Antibiotic.Vancomycin";

    /** <pre>APPLICATION_DEFAULT_TITLE
      * [en] Checkpoint X
      * [de] Checkpoint X</pre>
      */
    public static final String APPLICATION_DEFAULT_TITLE = "Application.Default.Title";

    /** <pre>ARTIFICIAL_RESPIRATION
      * [en] Artificial Respiration
      * [de] Beatmungsstunden</pre>
      */
    public static final String ARTIFICIAL_RESPIRATION = "ArtificialRespiration";

    /** <pre>ARTIFICIAL_VENTILATION
      * [en] Artificial Ventilation (in hours) (Vent. Hrs.)
      * [de] Beatmungsstunden (Beatm.-Std.)</pre>
      */
    public static final String ARTIFICIAL_VENTILATION = "ArtificialVentilation";

    /** <pre>ARTIFICIAL_VENTILATION_FROM
      * [en] Vent. Hrs. from
      * [de] Beatm.-Std. von</pre>
      */
    public static final String ARTIFICIAL_VENTILATION_FROM = "ArtificialVentilation.from";

    /** <pre>ARTIFICIAL_VENTILATION_TO
      * [en] Vent. Hrs. to
      * [de] Beatm.-Std. bis</pre>
      */
    public static final String ARTIFICIAL_VENTILATION_TO = "ArtificialVentilation.to";

    /** <pre>AUDIT_ADDRESS
      * [en] Address
      * [de] Anschrift</pre>
      * Attention! this value ('Address') seems to be also defined under the key ADDRESS! this value ('Address') seems to be also defined under the key MDK_ADDRESS!
      */
    public static final String AUDIT_ADDRESS = "Audit.address";

    /** <pre>AUDIT_ANS_DEADLINE
      * [en] Audit Answer Deadline
      * [de] Frist Antwort</pre>
      */
    public static final String AUDIT_ANS_DEADLINE = "Audit.ansDeadline";

    /** <pre>AUDIT_AREA_CODE
      * [en] Area Code
      * [de] Postleitzahl</pre>
      * Attention! this value ('Area Code') seems to be also defined under the key MDK_AREA_CODE!
      */
    public static final String AUDIT_AREA_CODE = "Audit.areaCode";

    /** <pre>AUDIT_AUDIT_REASONS
      * [en] Audit Reasons (Audit Reasons)
      * [de] Prüfgründe (Prüfgründe)</pre>
      */
    public static final String AUDIT_AUDIT_REASONS = "Audit.AuditReasons";

    /** <pre>AUDIT_CASE_DIALOG
      * [en] Case Dialog
      * [de] Falldialog</pre>
      */
    public static final String AUDIT_CASE_DIALOG = "Audit.caseDialog";

    /** <pre>AUDIT_CASE_DIALOG_BILL_CORR_DEADLINE_ERROR
      * [de] Keinen gültigen Eintrag für die Frist "Rechnungskorrektur Ende Falldialog" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
      */
    public static final String AUDIT_CASE_DIALOG_BILL_CORR_DEADLINE_ERROR = "Audit.caseDialogBillCorrDeadlineError";

    /** <pre>AUDIT_CASE_DIALOG_END_DATE
      * [en] End Date
      * [de] Ende am</pre>
      */
    public static final String AUDIT_CASE_DIALOG_END_DATE = "Audit.caseDialogEndDate";

    /** <pre>AUDIT_CITY
      * [en] City
      * [de] Ort</pre>
      * Attention! this value ('City') seems to be also defined under the key ADDRESS_CITY!
      */
    public static final String AUDIT_CITY = "Audit.City";

    /** <pre>AUDIT_COMMENT
      * [en] Audit Comment
      * [de] Ergebnis/Bemerkung</pre>
      */
    public static final String AUDIT_COMMENT = "Audit.comment";

    /** <pre>AUDIT_DATA_REC_CORR_DEADLINE_ERROR
      * [en] No valid entry is found for the Data Record Correction Deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
      * [de] Keinen gültigen Eintrag für die Frist "Datensatzkorrektur" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
      */
    public static final String AUDIT_DATA_REC_CORR_DEADLINE_ERROR = "Audit.dataRecCorrDeadlineError";

    /** <pre>AUDIT_DATA_RECO_CORR_DEADLINE
      * [en] Data Record Correction
      * [de] Frist Datensatzkorrektur</pre>
      */
    public static final String AUDIT_DATA_RECO_CORR_DEADLINE = "Audit.dataRecoCorrDeadline";

    /** <pre>AUDIT_EDITOR
      * [en] Editor
      * [de] Bearbeiter</pre>
      * Attention! this value ('Editor') seems to be also defined under the key MDK_EDITOR!
      */
    public static final String AUDIT_EDITOR = "Audit.editor";

    /** <pre>AUDIT_FAX
      * [en] Fax
      * [de] Fax</pre>
      * Attention! this value ('Fax') seems to be also defined under the key FAX! this value ('Fax') seems to be also defined under the key MDK_FAX!
      */
    public static final String AUDIT_FAX = "Audit.fax";

    /** <pre>AUDIT_IDENT
      * [en] Insurance Ident
      * [de] IKZ der Krankenkasse (IKZ Krankenkasse)</pre>
      */
    public static final String AUDIT_IDENT = "Audit.ident";

    /** <pre>AUDIT_INFO_LABEL
      * [en] Insurance Informations
      * [de] KK Informationen</pre>
      */
    public static final String AUDIT_INFO_LABEL = "Audit.infoLabel";

    /** <pre>AUDIT_INSU_NAME
      * [en] Insurance Name
      * [de] KK Name</pre>
      * Attention! this value ('Insurance name') seems to be also defined under the key INSURANCE_NAME!
      */
    public static final String AUDIT_INSU_NAME = "Audit.insuName";

    /** <pre>AUDIT_PRE_TRIAL
      * [en] Pre-trial
      * [de] Vorverfahren</pre>
      */
    public static final String AUDIT_PRE_TRIAL = "Audit.preTrial";

    /** <pre>AUDIT_PRE_TRIAL_END_DATE
      * [en] Pre-trial End Date
      * [de] Vorverfahren Ende</pre>
      */
    public static final String AUDIT_PRE_TRIAL_END_DATE = "Audit.preTrialEndDate";

    /** <pre>AUDIT_PREL_PROC_ANS_DEADLINE_ERROR
      * [en] No valid entry is found for the Prel. Proc. Answer deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
      * [de] Keinen gültigen Eintrag für die Frist "Antwort" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
      */
    public static final String AUDIT_PREL_PROC_ANS_DEADLINE_ERROR = "Audit.prelProcAnsDeadlineError";

    /** <pre>AUDIT_PREL_PROC_CLOSED_DEADLINE
      * [en] Audit Closed Deadline
      * [de] Frist Vorverfahren Ende</pre>
      */
    public static final String AUDIT_PREL_PROC_CLOSED_DEADLINE = "Audit.prelProcClosedDeadline";

    /** <pre>AUDIT_PREL_PROC_CLOSED_DEADLINE_ERROR
      * [en] No valid entry is found for the Prel. Proc. Closed deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
      * [de] Keinen gültigen Eintrag für die Frist "Vorverfahren Ende" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
      */
    public static final String AUDIT_PREL_PROC_CLOSED_DEADLINE_ERROR = "Audit.prelProcClosedDeadlineError";

    /** <pre>AUDIT_PROCESS_CREATION_DATE
      * [en] Process Creation
      * [de] Einleitung Prüfverfahren</pre>
      */
    public static final String AUDIT_PROCESS_CREATION_DATE = "Audit.processCreationDate";

    /** <pre>AUDIT_QUOTA_RESULT_ACTUAL_EXAMINATION_QUOTA
      * [en] Actual Examination Quota
      * [de] Aktuelle Prüfquote</pre>
      */
    public static final String AUDIT_QUOTA_RESULT_ACTUAL_EXAMINATION_QUOTA = "AuditQuotaResult.Actual.ExaminationQuota";

    /** <pre>AUDIT_QUOTA_RESULT_BILLED_CASES
      * [en] Billed Cases
      * [de] abgerechnete Fälle</pre>
      */
    public static final String AUDIT_QUOTA_RESULT_BILLED_CASES = "AuditQuotaResult.Billed.Cases";

    /** <pre>AUDIT_QUOTA_RESULT_EXCEEDED_EXAMINATION_QUOTA
      * [en] Examination Quota exceeded
      * [de] Überschreitung Prüfquote</pre>
      */
    public static final String AUDIT_QUOTA_RESULT_EXCEEDED_EXAMINATION_QUOTA = "AuditQuotaResult.Exceeded.ExaminationQuota";

    /** <pre>AUDIT_QUOTA_RESULT_INFORMATION
      * [en] The check rate for the cash register {0} for the quarter {1} / {2} has not yet been reached.Details: Number of inpatient cases: {3}Number of complaints (actual value): {4}Number of complaints (target value) : {5}Quick review rate for the quarter: {6}
      * [de] Die Prüfquote für die Kasse {0} für das Quartal {1}/{2} wurde noch nicht erreicht.Details:Anzahl abgerechnete vollstationäre Fälle: {3}davon zur Beanstandung eingeleitet (Istwert): {4}Max. zulässige Beanstandungen gemäß Prüfquote (Sollwert): {5}Festgesetzte Prüfquote für dieses Quartal: {6} %</pre>
      */
    public static final String AUDIT_QUOTA_RESULT_INFORMATION = "AuditQuotaResult.Information";

    /** <pre>AUDIT_QUOTA_RESULT_MAX_MD_EXAMINATIONS
      * [en] Maximal Examinations
      * [de] MD-Prüfungen maximal</pre>
      */
    public static final String AUDIT_QUOTA_RESULT_MAX_MD_EXAMINATIONS = "AuditQuotaResult.Max.MD.Examinations";

    /** <pre>AUDIT_QUOTA_RESULT_MD_EXAMINATIONS
      * [en] MD-Examinations
      * [de] MD-Prüfungen</pre>
      */
    public static final String AUDIT_QUOTA_RESULT_MD_EXAMINATIONS = "AuditQuotaResult.MD.Examinations";

    /** <pre>AUDIT_QUOTA_RESULT_QUARTER_YEAR_MDREQUEST
      * [en] Quarter / Year MD-Request
      * [de] Quartal / Jahr MD-Anfrage</pre>
      */
    public static final String AUDIT_QUOTA_RESULT_QUARTER_YEAR_MDREQUEST = "AuditQuotaResult.Quarter.Year.MDRequest";

    /** <pre>AUDIT_QUOTA_RESULT_WARNING
      * [en] The checkout rate for the cash register {0} for the quarter {1} / {2} has already been reached!The request is marked as "Examination Quota exceeded".Details: Number of inpatient cases: {3}Number of complaints (actual value): { 4}Number of complaints (target value): {5}Stated inspection quota for the quarter: {6}
      * [de] Die Prüfquote für die Kasse {0} für das Quartal {1}/{2} ist bereits erreicht!Die Anfrage wird mit "Überschreitung Prüfquote" markiert.Details:Anzahl abgerechnete vollstationäre Fälle: {3}davon zur Beanstandung eingeleitet (Istwert): {4}Max. zulässige Beanstandungen gemäß Prüfquote (Sollwert): {5}Festgesetzte Prüfquote für dieses Quartal: {6} %</pre>
      */
    public static final String AUDIT_QUOTA_RESULT_WARNING = "AuditQuotaResult.Warning";

    /** <pre>AUDIT_REASONS_ERROR
      * [en] List of audit reasons is empty. Please configure valid audit reasons!!
      * [de] Die Liste der Prüfgründe ist leer. Bitte konfigurieren Sie gültige Prüfgründe in den Stammdaten!</pre>
      */
    public static final String AUDIT_REASONS_ERROR = "AuditReasons.error";

    /** <pre>AUDIT_REMINDER_CREATE
      * [en] Reminder Create
      * [de] Wiedervorlage erzeugen</pre>
      */
    public static final String AUDIT_REMINDER_CREATE = "Audit.reminderCreate";

    /** <pre>AUDIT_REQUEST_DATE
      * [en] Request Date
      * [de] Aufforderung am</pre>
      */
    public static final String AUDIT_REQUEST_DATE = "Audit.requestDate";

    /** <pre>AUDIT_SENT_ON_DATE
      * [en] Sent On
      * [de] gesendet am</pre>
      */
    public static final String AUDIT_SENT_ON_DATE = "Audit.sentOnDate";

    /** <pre>AUDIT_STATUS
      * [en] Status
      * [de] Status</pre>
      * Attention! this value ('Status') seems to be also defined under the key BILL_STATUS! this value ('Status') seems to be also defined under the key PROCESS_PREVIEW_PROCESS_STATUS! this value ('Status') seems to be also defined under the key RULE_FILTER_DIALOG_RULE_ERROR_STATUS!
      */
    public static final String AUDIT_STATUS = "Audit.status";

    /** <pre>AUDIT_TELEPHONE
      * [en] Telephone
      * [de] Telefon</pre>
      * Attention! this value ('Telephone') seems to be also defined under the key MDK_TELEPHONE!
      */
    public static final String AUDIT_TELEPHONE = "Audit.telephone";

    /** <pre>AUDIT_TELEPHONE_AREA_CODE
      * [en] Telephone Area Code
      * [de] Vorwahl</pre>
      * Attention! this value ('Telephone Area Code') seems to be also defined under the key MDK_TELEPHONE_AREA_CODE!
      */
    public static final String AUDIT_TELEPHONE_AREA_CODE = "Audit.telephoneAreaCode";

    /** <pre>AUDIT_TYPE_COLLECTION
      * [en] Collective case check
      * [de] Sammelprüfung</pre>
      */
    public static final String AUDIT_TYPE_COLLECTION = "AuditType.collection";

    /** <pre>AUDIT_TYPE_SINGLE
      * [en] Single case check
      * [de] Einzelfallprüfung</pre>
      */
    public static final String AUDIT_TYPE_SINGLE = "AuditType.single";

    /** <pre>AUDIT_UPDATE_REQUEST_WINDOW
      * [en] Update a request (Examination/Pre-trial)
      * [de] Anfrage aktualisieren (Prüfanfrage/Vorverfahren)</pre>
      */
    public static final String AUDIT_UPDATE_REQUEST_WINDOW = "Audit.updateRequestWindow";

    /** <pre>AUDIT_USER_COMMENT
      * [en] User Comment
      * [de] Notizen</pre>
      * Attention! this value ('User Comment') seems to be also defined under the key MDK_USER_COMMENT!
      */
    public static final String AUDIT_USER_COMMENT = "Audit.userComment";

    /** <pre>AUTHORIZATION_DIALOG_MESSAGE
      * [en] Your active role {0} does not have the necessary permissions to ''''{1}''''.
      * [de] Ihre aktuelle Rolle {0} verfügt nicht über die notwendige Berechtigung um ''''{1}'''' auszuführen.</pre>
      */
    public static final String AUTHORIZATION_DIALOG_MESSAGE = "Authorization.Dialog.message";

    /** <pre>AUTHORIZATION_DIALOG_MESSAGE_CONTACT
      * [en] Please contact your system administrator.
      * [de] Bitte wenden Sie sich an Ihren Systemadministrator.</pre>
      */
    public static final String AUTHORIZATION_DIALOG_MESSAGE_CONTACT = "Authorization.Dialog.message.contact";

    /** <pre>BASERATE
      * [en] Baserate
      * [de] Basiswert</pre>
      */
    public static final String BASERATE = "Baserate";

    /** <pre>BATCHPROCESSING
      * [en] Batchprocessing
      * [de] Batchverarbeitung</pre>
      */
    public static final String BATCHPROCESSING = "Batchprocessing";

    /** <pre>BATCHPROCESSING_LAST_PROCESS
      * [en] Last batchprocess: {0}
      * [de] Letzte Batchverarbeitung: {0}</pre>
      */
    public static final String BATCHPROCESSING_LAST_PROCESS = "Batchprocessing.lastProcess";

    /** <pre>BATCHPROCESSING_RESULT
      * [en] Result batchprocessing
      * [de] Ergebnis Batchverarbeitung</pre>
      */
    public static final String BATCHPROCESSING_RESULT = "Batchprocessing.result";

    /** <pre>BEGE_DIRECT_FAX
      * [en] Direct Fax No.
      * [de] Fax direkt</pre>
      */
    public static final String BEGE_DIRECT_FAX = "Bege.directFax";

    /** <pre>BEGE_DIRECT_PHONE_NO
      * [en] Direct Phone No.
      * [de] Durchwahl</pre>
      */
    public static final String BEGE_DIRECT_PHONE_NO = "Bege.directPhoneNo";

    /** <pre>BEGE_EDITOR
      * [en] Contact person
      * [de] Ansprechpartner</pre>
      */
    public static final String BEGE_EDITOR = "Bege.editor";

    /** <pre>BEGE_UPDATE_REQUEST_WINDOW
      * [en] Update a request (Insurance Association)
      * [de] Anfrage aktualisieren (Berufsgenossenschaft)</pre>
      */
    public static final String BEGE_UPDATE_REQUEST_WINDOW = "Bege.updateRequestWindow";

    /** <pre>BILL_CORRECTION_DEADLINE
      * [de] Frist bis zur einmaligen Rechnungskorrektur (MD-Anfrage) (Frist Rech.-Korrektur)</pre>
      */
    public static final String BILL_CORRECTION_DEADLINE = "Bill.correction.deadline";

    /** <pre>BILL_CORRECTION_DEADLINE_DAYS
      * [de] Tage bis Rechnungskorrektur MD (Korrektur MD)</pre>
      */
    public static final String BILL_CORRECTION_DEADLINE_DAYS = "Bill.correction.deadline.days";

    /** <pre>BILL_CORRECTION_DEADLINE_FROM
      * [de] Frist Rech.-Korrektur von</pre>
      */
    public static final String BILL_CORRECTION_DEADLINE_FROM = "Bill.correction.deadline.from";

    /** <pre>BILL_CORRECTION_DEADLINE_TO
      * [de] Frist Rech.-Korrektur bis</pre>
      */
    public static final String BILL_CORRECTION_DEADLINE_TO = "Bill.correction.deadline.to";

    /** <pre>BILL_DATE
      * [en] Bill date
      * [de] Rechnungsdatum
      * [de] Fakturadatum</pre>
      */
    public static final String BILL_DATE = "Bill.date";

    /** <pre>BILL_FISCAL_YEAR
      * [en] Year
      * [de] Jahr</pre>
      * Attention! this value ('Year') seems to be also defined under the key BILL_OPEN_ITEM_FISCAL_YEAR!
      */
    public static final String BILL_FISCAL_YEAR = "Bill.fiscalYear";

    /** <pre>BILL_KIND
      * [en] Kind
      * [de] Fakturaart</pre>
      * Attention! this value ('Kind') seems to be also defined under the key CASE_RESOLVE_KIND! this value ('Kind') seems to be also defined under the key CASEFEE_KIND!
      */
    public static final String BILL_KIND = "Bill.kind";

    /** <pre>BILL_NETVALUE
      * [en] Netvalue
      * [de] Betrag</pre>
      */
    public static final String BILL_NETVALUE = "Bill.Netvalue";

    /** <pre>BILL_NO
      * [en] Bill No.
      * [de] Faktura</pre>
      * Attention! this value ('Bill No.') seems to be also defined under the key BILL_POSITION_BILL_NO!
      */
    public static final String BILL_NO = "Bill.No";

    /** <pre>BILL_NUMBER
      * [en] Bill number
      * [de] Rechnungsnummer</pre>
      */
    public static final String BILL_NUMBER = "Bill.number";

    /** <pre>BILL_OPEN_ITEM_ACCOUNTS_RECEIVABLE_NO
      * [en] Accounts Receivable No.
      * [de] Debitorennr</pre>
      */
    public static final String BILL_OPEN_ITEM_ACCOUNTS_RECEIVABLE_NO = "BillOpenItem.AccountsReceivableNo";

    /** <pre>BILL_OPEN_ITEM_AMOUNT_IN_LOCAL_CURR
      * [en] Amount In Local Curr.
      * [de] Betrag</pre>
      */
    public static final String BILL_OPEN_ITEM_AMOUNT_IN_LOCAL_CURR = "BillOpenItem.AmountInLocalCurr";

    /** <pre>BILL_OPEN_ITEM_COMPANY_CODE
      * [en] Company code
      * [de] Buchungskreis</pre>
      */
    public static final String BILL_OPEN_ITEM_COMPANY_CODE = "BillOpenItem.CompanyCode";

    /** <pre>BILL_OPEN_ITEM_CURRENCY_KEY
      * [en] Currency Key
      * [de] Währung</pre>
      */
    public static final String BILL_OPEN_ITEM_CURRENCY_KEY = "BillOpenItem.CurrencyKey";

    /** <pre>BILL_OPEN_ITEM_DEBIT_CREDIT_KEY
      * [en] Debit Credit Key
      * [de] S/H</pre>
      */
    public static final String BILL_OPEN_ITEM_DEBIT_CREDIT_KEY = "BillOpenItem.DebitCreditKey";

    /** <pre>BILL_OPEN_ITEM_FISCAL_YEAR
      * [en] Year
      * [de] Jahr</pre>
      * Attention! this value ('Year') seems to be also defined under the key BILL_FISCAL_YEAR!
      */
    public static final String BILL_OPEN_ITEM_FISCAL_YEAR = "BillOpenItem.FiscalYear";

    /** <pre>BILL_OPEN_ITEM_NET_VALUE
      * [en] Net Value
      * [de] Gesamt</pre>
      */
    public static final String BILL_OPEN_ITEM_NET_VALUE = "BillOpenItem.NetValue";

    /** <pre>BILL_OPEN_ITEM_NUMBER_RECEIPT
      * [en] Number Receipt
      * [de] Belegnr</pre>
      */
    public static final String BILL_OPEN_ITEM_NUMBER_RECEIPT = "BillOpenItem.NumberReceipt";

    /** <pre>BILL_OPEN_ITEM_RECEIPT_DATE_RECEIPT
      * [en] Receipt Date
      * [de] Belegdatum</pre>
      */
    public static final String BILL_OPEN_ITEM_RECEIPT_DATE_RECEIPT = "BillOpenItem.ReceiptDateReceipt";

    /** <pre>BILL_OPEN_ITEM_REF_NO
      * [en] Ref. No.
      * [de] Zuordnung</pre>
      */
    public static final String BILL_OPEN_ITEM_REF_NO = "BillOpenItem.RefNo";

    /** <pre>BILL_OPEN_ITEM_TEXT_DESC
      * [en] Text
      * [de] Bezeichnung</pre>
      * Attention! this value ('Text') seems to be also defined under the key BILL_POSITION_TEXT!
      */
    public static final String BILL_OPEN_ITEM_TEXT_DESC = "BillOpenItem.TextDesc";

    /** <pre>BILL_POSITION_AMOUNT
      * [en] Amount
      * [de] Menge</pre>
      */
    public static final String BILL_POSITION_AMOUNT = "BillPosition.Amount";

    /** <pre>BILL_POSITION_BASE_AMOUNT
      * [en] Base Amount
      * [de] Preis</pre>
      */
    public static final String BILL_POSITION_BASE_AMOUNT = "BillPosition.BaseAmount";

    /** <pre>BILL_POSITION_BILL_NO
      * [en] Bill No.
      * [de] Faktura</pre>
      * Attention! this value ('Bill No.') seems to be also defined under the key BILL_NO!
      */
    public static final String BILL_POSITION_BILL_NO = "BillPosition.BillNo";

    /** <pre>BILL_POSITION_NET_AMOUNT
      * [en] Net Amount
      * [de] Nettowert</pre>
      */
    public static final String BILL_POSITION_NET_AMOUNT = "BillPosition.NetAmount";

    /** <pre>BILL_POSITION_POSITION_NO
      * [en] Position No.
      * [de] Positionsnummer</pre>
      */
    public static final String BILL_POSITION_POSITION_NO = "BillPosition.PositionNo";

    /** <pre>BILL_POSITION_REFERENCE
      * [en] Reference
      * [de] Tarifleistung</pre>
      */
    public static final String BILL_POSITION_REFERENCE = "BillPosition.Reference";

    /** <pre>BILL_POSITION_TEXT
      * [en] Text
      * [de] Bezeichnung</pre>
      * Attention! this value ('Text') seems to be also defined under the key BILL_OPEN_ITEM_TEXT_DESC!
      */
    public static final String BILL_POSITION_TEXT = "BillPosition.Text";

    /** <pre>BILL_POSITIONS
      * [en] bill positions
      * [de] Rechnungspositionen</pre>
      */
    public static final String BILL_POSITIONS = "Bill.positions";

    /** <pre>BILL_RECIPIENT
      * [en] Recipient
      * [de] Regulierer</pre>
      */
    public static final String BILL_RECIPIENT = "Bill.Recipient";

    /** <pre>BILL_REF_CURRENCY
      * [en] Ref. currency
      * [de] Währung</pre>
      */
    public static final String BILL_REF_CURRENCY = "Bill.RefCurrency";

    /** <pre>BILL_REF_TYPE
      * [en] Ref. type
      * [de] Fakturabeleg</pre>
      */
    public static final String BILL_REF_TYPE = "Bill.RefType";

    /** <pre>BILL_STATUS
      * [en] Status
      * [de] Status</pre>
      * Attention! this value ('Status') seems to be also defined under the key AUDIT_STATUS! this value ('Status') seems to be also defined under the key PROCESS_PREVIEW_PROCESS_STATUS! this value ('Status') seems to be also defined under the key RULE_FILTER_DIALOG_RULE_ERROR_STATUS!
      */
    public static final String BILL_STATUS = "Bill.status";

    /** <pre>BILL_TYPE
      * [en] Bill type
      * [de] Fakturatyp
      * [de] Rechnungsart</pre>
      */
    public static final String BILL_TYPE = "Bill.type";

    /** <pre>BILL_TYPE_ENUM_1_WARNING
      * [en] first warning
      * [de] 1. Mahnung</pre>
      */
    public static final String BILL_TYPE_ENUM_1_WARNING = "Bill.type.enum.1.warning";

    /** <pre>BILL_TYPE_ENUM_2_WARNING
      * [en] second warning
      * [de] 2. Mahnung</pre>
      */
    public static final String BILL_TYPE_ENUM_2_WARNING = "Bill.type.enum.2.warning";

    /** <pre>BILL_TYPE_ENUM_CREDIT_STORNO
      * [en] credit/storno bill
      * [de] Gutschrift/Stornierung</pre>
      */
    public static final String BILL_TYPE_ENUM_CREDIT_STORNO = "Bill.type.enum.credit.storno";

    /** <pre>BILL_TYPE_ENUM_FINAL
      * [en] final bill
      * [de] Schlussrechnung</pre>
      */
    public static final String BILL_TYPE_ENUM_FINAL = "Bill.type.enum.final";

    /** <pre>BILL_TYPE_ENUM_FORECAST
      * [en] forecast bill
      * [de] Vorausberechnung</pre>
      */
    public static final String BILL_TYPE_ENUM_FORECAST = "Bill.type.enum.forecast";

    /** <pre>BILL_TYPE_ENUM_PARTIAL
      * [en] partial bill
      * [de] Zwischenrechnung</pre>
      */
    public static final String BILL_TYPE_ENUM_PARTIAL = "Bill.type.enum.partial";

    /** <pre>BILL_TYPE_ENUM_REMINDER
      * [en] reminder bill
      * [de] Zahlungserinnerung</pre>
      */
    public static final String BILL_TYPE_ENUM_REMINDER = "Bill.type.enum.reminder";

    /** <pre>BILL_TYPE_ENUM_SUPPL
      * [en] supplimentary bill
      * [de] Nachtragsrechnung</pre>
      */
    public static final String BILL_TYPE_ENUM_SUPPL = "Bill.type.enum.suppl";

    /** <pre>BILL_VALIDATION_ERROR
      * [en] Need additional information!
      * [de] Zusätzliche Informationen sind erforderlich</pre>
      */
    public static final String BILL_VALIDATION_ERROR = "Bill.validation.error";

    /** <pre>BILL_VALIDATION_INVALID_BILL_NUMBER_LENGTH
      * [en] bill number kann be maximal 10 symbols
      * [de] Rechnungsnummer darf nicht länger als 10 Zeichen sein</pre>
      */
    public static final String BILL_VALIDATION_INVALID_BILL_NUMBER_LENGTH = "BillValidation.invalid.bill.number.length";

    /** <pre>BILL_VALIDATION_INVALID_FEE_KEY
      * [en] one fee key is not valid
      * [de] Mindestens ein Entgeltschlüssel ist nicht korrekt</pre>
      */
    public static final String BILL_VALIDATION_INVALID_FEE_KEY = "BillValidation.invalid.fee.key";

    /** <pre>BILL_VALIDATION_INVALID_FEE_KEY_LENGTH
      * [en] fee key must have 8 symbols
      * [de] Entgeltschüssel muss 8 Zeichen haben</pre>
      */
    public static final String BILL_VALIDATION_INVALID_FEE_KEY_LENGTH = "BillValidation.invalid.fee.key.length";

    /** <pre>BILL_VALIDATION_INVALID_INSURANCE_KEY_LENGTH
      * [en] insurance number has to have 9 symbols
      * [de] Versicherungsnummer muss 9 Zeichen haben</pre>
      */
    public static final String BILL_VALIDATION_INVALID_INSURANCE_KEY_LENGTH = "BillValidation.invalid.insurance.key.length";

    /** <pre>BILL_VALIDATION_NO_FEES
      * [en] Bill has to include fee keys
      * [de] Eine Rechnung muss mindestens ein Entgelt enthalten</pre>
      */
    public static final String BILL_VALIDATION_NO_FEES = "Bill.validation.no.fees";

    /** <pre>BILLING_DATE
      * [en] Billing Date (Bill.-Date)
      * [de] Rechnungsdatum (Rech.-Datum)</pre>
      */
    public static final String BILLING_DATE = "BillingDate";

    /** <pre>BILLING_DATE_FROM
      * [en] Bill.-Date from
      * [de] Rech.-Datum von</pre>
      */
    public static final String BILLING_DATE_FROM = "BillingDate.from";

    /** <pre>BILLING_DATE_TO
      * [en] Bill.-Date to
      * [de] Rech.-Datum bis</pre>
      */
    public static final String BILLING_DATE_TO = "BillingDate.to";

    /** <pre>BILLING_QUARTER
      * [en] Billing Quarter (Bill. Quarter)
      * [de] Rechnungsquartal (Rech.-Quartal)</pre>
      */
    public static final String BILLING_QUARTER = "Billing.Quarter";

    /** <pre>BOOKMARKS
      * [en] bookmarks
      * [de] Textmarken</pre>
      */
    public static final String BOOKMARKS = "Bookmarks";

    /** <pre>CANCEL
      * [en] cancel
      * [de] Abbrechen</pre>
      * Attention! this value ('Cancel') seems to be also defined under the key SAP_REFERENCE_TYPE_CANCELLATION!
      */
    public static final String CANCEL = "Cancel";

    /** <pre>CANCEL_GROUPING
      * [en] cancel Grouping
      * [de] Stoppe Grouping</pre>
      */
    public static final String CANCEL_GROUPING = "CancelGrouping";

    /** <pre>CANCEL_SEARCH
      * [en] Cancel Search
      * [de] Suche abbrechen</pre>
      */
    public static final String CANCEL_SEARCH = "CancelSearch";

    /** <pre>CARE_PERC_ADULT
      * [en] Total 1:1
      * [de] Summe 1:1</pre>
      */
    public static final String CARE_PERC_ADULT = "CarePercAdult";

    /** <pre>CARE_PERC_INF
      * [en] Total 1:1(C/T)
      * [de] Summe 1:1(K/J)</pre>
      */
    public static final String CARE_PERC_INF = "CarePercInf";

    /** <pre>CASE
      * [en] Case
      * [de] Fall</pre>
      * Attention! this value ('Case') seems to be also defined under the key EVENT_NAME_CASE!
      */
    public static final String CASE = "Case";

    /** <pre>CASE_ADDED_TOOLTIP
      * [en] See the details of a Case
      * [de] Siehe die Details eines Falles</pre>
      */
    public static final String CASE_ADDED_TOOLTIP = "Case.Added.Tooltip";

    /** <pre>CASE_CARE_CW
      * [en] CareCW (CW cre.)
      * [de] PflegeCW (CW Pfl.)</pre>
      */
    public static final String CASE_CARE_CW = "Case.CareCW";

    /** <pre>CASE_CARE_CW_FROM
      * [en] CW cre. from
      * [de] PflegeCW von</pre>
      */
    public static final String CASE_CARE_CW_FROM = "Case.CareCW.from";

    /** <pre>CASE_CARE_CW_TO
      * [en] CW cre. to
      * [de] PflegeCW bis</pre>
      */
    public static final String CASE_CARE_CW_TO = "Case.CareCW.to";

    /** <pre>CASE_CARE_CWMAXIMAL
      * [en] CareCW maximal (CW cre. max.)
      * [de] PflegeCW maximal (CW Pfl. max.)</pre>
      */
    public static final String CASE_CARE_CWMAXIMAL = "Case.CareCWmaximal";

    /** <pre>CASE_CARE_CWMAXIMAL_FROM
      * [en] CW cre. max. from
      * [de] PflegeCW max. von</pre>
      */
    public static final String CASE_CARE_CWMAXIMAL_FROM = "Case.CareCWmaximal.from";

    /** <pre>CASE_CARE_CWMAXIMAL_TO
      * [en] CW cre. max. to
      * [de] PflegeCW max. bis</pre>
      */
    public static final String CASE_CARE_CWMAXIMAL_TO = "Case.CareCWmaximal.to";

    /** <pre>CASE_CARE_CWMINIMAL
      * [en] CareCW minimal (CW cre. min.)
      * [de] PflegeCW minimal (CW Pfl. min.)</pre>
      */
    public static final String CASE_CARE_CWMINIMAL = "Case.CareCWminimal";

    /** <pre>CASE_CARE_CWMINIMAL_FROM
      * [en] CW cre. min. from
      * [de] PflegeCW min. von</pre>
      */
    public static final String CASE_CARE_CWMINIMAL_FROM = "Case.CareCWminimal.from";

    /** <pre>CASE_CARE_CWMINIMAL_TO
      * [en] CW cre. min. to
      * [de] PflegeCW min. bis</pre>
      */
    public static final String CASE_CARE_CWMINIMAL_TO = "Case.CareCWminimal.to";

    /** <pre>CASE_CREATE_PROCESS
      * [en] Create process
      * [de] Vorgang erstellen</pre>
      */
    public static final String CASE_CREATE_PROCESS = "Case.create.process";

    /** <pre>CASE_CW_CATALOG
      * [en] Assessment Relation: Main Department (CW Catalog)
      * [de] Bewertungsrelation: Hauptabteilung (CW Katalog)</pre>
      */
    public static final String CASE_CW_CATALOG = "Case.cwCatalog";

    /** <pre>CASE_CW_EFFECTIVE
      * [en] effective CW (CW eff.)
      * [de] Effektiver CW Wert (CW eff.)</pre>
      */
    public static final String CASE_CW_EFFECTIVE = "Case.cwEffective";

    /** <pre>CASE_CW_EFFECTIVE_FROM
      * [en] CW eff. from
      * [de] CW eff. von</pre>
      */
    public static final String CASE_CW_EFFECTIVE_FROM = "Case.cwEffective.from";

    /** <pre>CASE_CW_EFFECTIVE_TO
      * [en] CW eff. to
      * [de] CW eff. bis</pre>
      */
    public static final String CASE_CW_EFFECTIVE_TO = "Case.cwEffective.to";

    /** <pre>CASE_CW_NEGATIVE
      * [en] Total of all negative CW (CW-)
      * [de] Summe aller negativen CW Werte (CW-)</pre>
      */
    public static final String CASE_CW_NEGATIVE = "Case.cwNegative";

    /** <pre>CASE_CW_POSITIVE
      * [en] Total of all positive CW (CW+)
      * [de] Summe aller positiven CW Werte (CW+)</pre>
      */
    public static final String CASE_CW_POSITIVE = "Case.cwPositive";

    /** <pre>CASE_DATA
      * [en] Case data
      * [de] Falldaten</pre>
      */
    public static final String CASE_DATA = "Case.data";

    /** <pre>CASE_DAY_CARE
      * [en] case with day care admission reason
      * [de] vorstationärer Fall</pre>
      */
    public static final String CASE_DAY_CARE = "Case.day.care";

    /** <pre>CASE_DELETE_PROCESS
      * [en] Delete process
      * [de] Vorgang löschen</pre>
      */
    public static final String CASE_DELETE_PROCESS = "Case.delete.process";

    /** <pre>CASE_DELTA_CWMAXIMAL
      * [en] Delta-CW maximal (dCW max)
      * [de] Delta-CW maximal (dCW max.)</pre>
      */
    public static final String CASE_DELTA_CWMAXIMAL = "Case.DeltaCWmaximal";

    /** <pre>CASE_DELTA_CWMAXIMAL_FROM
      * [en] dCW max from
      * [de] dCW max. von</pre>
      */
    public static final String CASE_DELTA_CWMAXIMAL_FROM = "Case.DeltaCWmaximal.from";

    /** <pre>CASE_DELTA_CWMAXIMAL_TO
      * [en] dCW max to
      * [de] dCW max. bis</pre>
      */
    public static final String CASE_DELTA_CWMAXIMAL_TO = "Case.DeltaCWmaximal.to";

    /** <pre>CASE_DELTA_CWMINIMAL
      * [en] DeltaCW minimal (dCWmin)
      * [de] Delta-CW minimal (dCW min.)</pre>
      */
    public static final String CASE_DELTA_CWMINIMAL = "Case.DeltaCWminimal";

    /** <pre>CASE_DELTA_CWMINIMAL_FROM
      * [en] dCWmin from
      * [de] dCW min. von</pre>
      */
    public static final String CASE_DELTA_CWMINIMAL_FROM = "Case.DeltaCWminimal.from";

    /** <pre>CASE_DELTA_CWMINIMAL_TO
      * [en] dCWmin to
      * [de] dCW min. bis</pre>
      */
    public static final String CASE_DELTA_CWMINIMAL_TO = "Case.DeltaCWminimal.to";

    /** <pre>CASE_DELTA_REVENUE_MAXIMAL
      * [en] Delta-Revenue maximal (dRevenue max.)
      * [de] Delta-Erlös maximal (dErlös max.)</pre>
      */
    public static final String CASE_DELTA_REVENUE_MAXIMAL = "Case.DeltaRevenueMaximal";

    /** <pre>CASE_DELTA_REVENUE_MAXIMAL_FROM
      * [en] dRevenue max. from
      * [de] dErlös max. von</pre>
      */
    public static final String CASE_DELTA_REVENUE_MAXIMAL_FROM = "Case.DeltaRevenueMaximal.from";

    /** <pre>CASE_DELTA_REVENUE_MAXIMAL_TO
      * [en] dRevenue max. to
      * [de] dErlös max. bis</pre>
      */
    public static final String CASE_DELTA_REVENUE_MAXIMAL_TO = "Case.DeltaRevenueMaximal.to";

    /** <pre>CASE_DELTA_REVENUE_MINIMAL
      * [en] Delta-Revenue minimal (dRevenue min.)
      * [de] Delta-Erlös minimal (dErlös min.)</pre>
      */
    public static final String CASE_DELTA_REVENUE_MINIMAL = "Case.DeltaRevenueMinimal";

    /** <pre>CASE_DELTA_REVENUE_MINIMAL_FROM
      * [en] dRevenue min. from
      * [de] dErlös min. von</pre>
      */
    public static final String CASE_DELTA_REVENUE_MINIMAL_FROM = "Case.DeltaRevenueMinimal.from";

    /** <pre>CASE_DELTA_REVENUE_MINIMAL_TO
      * [en] dRevenue min. to
      * [de] dErlös min. bis</pre>
      */
    public static final String CASE_DELTA_REVENUE_MINIMAL_TO = "Case.DeltaRevenueMinimal.to";

    /** <pre>CASE_DETAILS
      * [en] Case Details
      * [de] Fall Einzelheiten</pre>
      */
    public static final String CASE_DETAILS = "CaseDetails";

    /** <pre>CASE_DETAILS_CANCEL_REASON_CASE_MERGE
      * [en] Case merging
      * [de] Fallzusammenführung</pre>
      * Attention! this value ('Case merging') seems to be also defined under the key CASE_MERGING! this value ('Case merging') seems to be also defined under the key RISK_AREA_CASE_MERGE!
      */
    public static final String CASE_DETAILS_CANCEL_REASON_CASE_MERGE = "CaseDetailsCancelReason.CaseMerge";

    /** <pre>CASE_DETAILS_CANCEL_REASON_KIS
      * [en] KIS
      * [de] KIS</pre>
      */
    public static final String CASE_DETAILS_CANCEL_REASON_KIS = "CaseDetailsCancelReason.Kis";

    /** <pre>CASE_DETAILS_CANCEL_REASON_USER
      * [en] manual cancellation
      * [de] manuelle Stornierung</pre>
      */
    public static final String CASE_DETAILS_CANCEL_REASON_USER = "CaseDetailsCancelReason.user";

    /** <pre>CASE_DETAILS_DATE_1
      * [en] Date 1
      * [de] Datum 1</pre>
      */
    public static final String CASE_DETAILS_DATE_1 = "CaseDetails.Date1";

    /** <pre>CASE_DETAILS_DATE_2
      * [en] Date 2
      * [de] Datum 2</pre>
      */
    public static final String CASE_DETAILS_DATE_2 = "CaseDetails.Date2";

    /** <pre>CASE_DETAILS_DATE_3
      * [en] Date 3
      * [de] Datum 3</pre>
      */
    public static final String CASE_DETAILS_DATE_3 = "CaseDetails.Date3";

    /** <pre>CASE_DETAILS_DATE_4
      * [en] Date 4
      * [de] Datum 4</pre>
      */
    public static final String CASE_DETAILS_DATE_4 = "CaseDetails.Date4";

    /** <pre>CASE_DETAILS_DATE_5
      * [en] Date 5
      * [de] Datum 5</pre>
      */
    public static final String CASE_DETAILS_DATE_5 = "CaseDetails.Date5";

    /** <pre>CASE_DETAILS_DOUBLE_1
      * [en] Double 1
      * [de] Gleitkommazahl 1</pre>
      */
    public static final String CASE_DETAILS_DOUBLE_1 = "CaseDetails.Double1";

    /** <pre>CASE_DETAILS_DOUBLE_2
      * [en] Double 2
      * [de] Gleitkommazahl 2</pre>
      */
    public static final String CASE_DETAILS_DOUBLE_2 = "CaseDetails.Double2";

    /** <pre>CASE_DETAILS_DOUBLE_3
      * [en] Double 3
      * [de] Gleitkommazahl 3</pre>
      */
    public static final String CASE_DETAILS_DOUBLE_3 = "CaseDetails.Double3";

    /** <pre>CASE_DETAILS_DOUBLE_4
      * [en] Double 4
      * [de] Gleitkommazahl 4</pre>
      */
    public static final String CASE_DETAILS_DOUBLE_4 = "CaseDetails.Double4";

    /** <pre>CASE_DETAILS_DOUBLE_5
      * [en] Double 5
      * [de] Gleitkommazahl 5</pre>
      */
    public static final String CASE_DETAILS_DOUBLE_5 = "CaseDetails.Double5";

    /** <pre>CASE_DETAILS_INT_1
      * [en] Int 1
      * [de] Int 1</pre>
      */
    public static final String CASE_DETAILS_INT_1 = "CaseDetails.Int1";

    /** <pre>CASE_DETAILS_INT_10
      * [en] Int 10
      * [de] Int 10</pre>
      */
    public static final String CASE_DETAILS_INT_10 = "CaseDetails.Int10";

    /** <pre>CASE_DETAILS_INT_2
      * [en] Int 2
      * [de] Int 2</pre>
      */
    public static final String CASE_DETAILS_INT_2 = "CaseDetails.Int2";

    /** <pre>CASE_DETAILS_INT_3
      * [en] Int 3
      * [de] Int 3</pre>
      */
    public static final String CASE_DETAILS_INT_3 = "CaseDetails.Int3";

    /** <pre>CASE_DETAILS_INT_4
      * [en] Int 4
      * [de] Int 4</pre>
      */
    public static final String CASE_DETAILS_INT_4 = "CaseDetails.Int4";

    /** <pre>CASE_DETAILS_INT_5
      * [en] Int 5
      * [de] Int 5</pre>
      */
    public static final String CASE_DETAILS_INT_5 = "CaseDetails.Int5";

    /** <pre>CASE_DETAILS_INT_6
      * [en] Int 6
      * [de] Int 6</pre>
      */
    public static final String CASE_DETAILS_INT_6 = "CaseDetails.Int6";

    /** <pre>CASE_DETAILS_INT_7
      * [en] Int 7
      * [de] Int 7</pre>
      */
    public static final String CASE_DETAILS_INT_7 = "CaseDetails.Int7";

    /** <pre>CASE_DETAILS_INT_8
      * [en] Int 8
      * [de] Int 8</pre>
      */
    public static final String CASE_DETAILS_INT_8 = "CaseDetails.Int8";

    /** <pre>CASE_DETAILS_INT_9
      * [en] Int 9
      * [de] Int 9</pre>
      */
    public static final String CASE_DETAILS_INT_9 = "CaseDetails.Int9";

    /** <pre>CASE_DETAILS_STRING_1
      * [en] String 1
      * [de] String 1</pre>
      */
    public static final String CASE_DETAILS_STRING_1 = "CaseDetails.String1";

    /** <pre>CASE_DETAILS_STRING_10
      * [en] String 10
      * [de] String 10</pre>
      */
    public static final String CASE_DETAILS_STRING_10 = "CaseDetails.String10";

    /** <pre>CASE_DETAILS_STRING_2
      * [en] String 2
      * [de] String 2</pre>
      */
    public static final String CASE_DETAILS_STRING_2 = "CaseDetails.String2";

    /** <pre>CASE_DETAILS_STRING_3
      * [en] String 3
      * [de] String 3</pre>
      */
    public static final String CASE_DETAILS_STRING_3 = "CaseDetails.String3";

    /** <pre>CASE_DETAILS_STRING_4
      * [en] String 4
      * [de] String 4</pre>
      */
    public static final String CASE_DETAILS_STRING_4 = "CaseDetails.String4";

    /** <pre>CASE_DETAILS_STRING_5
      * [en] String 5
      * [de] String 5</pre>
      */
    public static final String CASE_DETAILS_STRING_5 = "CaseDetails.String5";

    /** <pre>CASE_DETAILS_STRING_6
      * [en] String 6
      * [de] String 6</pre>
      */
    public static final String CASE_DETAILS_STRING_6 = "CaseDetails.String6";

    /** <pre>CASE_DETAILS_STRING_7
      * [en] String 7
      * [de] String 7</pre>
      */
    public static final String CASE_DETAILS_STRING_7 = "CaseDetails.String7";

    /** <pre>CASE_DETAILS_STRING_8
      * [en] String 8
      * [de] String 8</pre>
      */
    public static final String CASE_DETAILS_STRING_8 = "CaseDetails.String8";

    /** <pre>CASE_DETAILS_STRING_9
      * [en] String 9
      * [de] String 9</pre>
      */
    public static final String CASE_DETAILS_STRING_9 = "CaseDetails.String9";

    /** <pre>CASE_DOES_NOT_EXIST
      * [en] Case does not exist
      * [de] Der Fall wurde nicht gefunden</pre>
      */
    public static final String CASE_DOES_NOT_EXIST = "CaseDoesNotExist";

    /** <pre>CASE_DOES_NOT_EXIST_WITH_REASON
      * [en] Case with ID {0} does not exist. Maybe this case was already deleted by another user meantime.
      * [de] Der Fall mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.</pre>
      */
    public static final String CASE_DOES_NOT_EXIST_WITH_REASON = "CaseDoesNotExistWithReason";

    /** <pre>CASE_FILE_FINALISATION
      * [en] Case File Finalisation
      * [de] Fallabschluss</pre>
      */
    public static final String CASE_FILE_FINALISATION = "CaseFileFinalisation";

    /** <pre>CASE_IS_LOCKED
      * [en] Case {0} was already opened by {1} since {2}
      * [de] Der Fall {0} wird bereits von {1} seit {2} Uhr bearbeitet</pre>
      */
    public static final String CASE_IS_LOCKED = "CaseIsLocked";

    /** <pre>CASE_LOCKED
      * [en] Locked (L)
      * [de] Gesperrt (G)</pre>
      */
    public static final String CASE_LOCKED = "CaseLocked";

    /** <pre>CASE_MANAGEMENT
      * [en] Case Management
      * [de] Fall Management</pre>
      */
    public static final String CASE_MANAGEMENT = "CaseManagement";

    /** <pre>CASE_MANAGEMENT_WARNING_CHANGE_LOCALISATION
      * [en] Changing the localisation will result in the creation of an new Icd! Are you sure?
      * [de] Das Ändern der Lokalisation führt zu der Erzeugung einer neuen ICD! Sind Sie sich sicher?</pre>
      */
    public static final String CASE_MANAGEMENT_WARNING_CHANGE_LOCALISATION = "CaseManagement.Warning.ChangeLocalisation";

    /** <pre>CASE_MANAGEMENT_WARNING_SELECT_DEPARTMENT
      * [en] Choose a Department!
      * [de] Wählen Sie eine Fachabteilung/(Station)!</pre>
      */
    public static final String CASE_MANAGEMENT_WARNING_SELECT_DEPARTMENT = "CaseManagement.Warning.SelectDepartment";

    /** <pre>CASE_MERGE_MATH_REV_MERG_CASE
      * [en] Revenue merged case
      * [de] Erlös Fallzusammenführung</pre>
      */
    public static final String CASE_MERGE_MATH_REV_MERG_CASE = "Case.merge.math.RevMergCase";

    /** <pre>CASE_MERGE_MATH_REV_SUM_ORG_CASES
      * [en] Sum revenue original Cases
      * [de] Summe Erlöse Originalfälle</pre>
      */
    public static final String CASE_MERGE_MATH_REV_SUM_ORG_CASES = "Case.merge.math.RevSumOrgCases";

    /** <pre>CASE_MERGE_TAB_SECTION_CASE_DATA
      * [en] Overview case data
      * [de] Übersicht Falldaten</pre>
      */
    public static final String CASE_MERGE_TAB_SECTION_CASE_DATA = "Case.merge.tab.section.caseData";

    /** <pre>CASE_MERGE_TAB_SECTION_DETECTED_REASONS
      * [en] Detected reasons
      * [de] Ermittelte Gründe</pre>
      */
    public static final String CASE_MERGE_TAB_SECTION_DETECTED_REASONS = "Case.merge.tab.section.detectedReasons";

    /** <pre>CASE_MERGING
      * [en] Case merging
      * [de] Fallzusammenführung</pre>
      * Attention! this value ('Case merging') seems to be also defined under the key CASE_DETAILS_CANCEL_REASON_CASE_MERGE! this value ('Case merging') seems to be also defined under the key RISK_AREA_CASE_MERGE!
      */
    public static final String CASE_MERGING = "Case.merging";

    /** <pre>CASE_MERGING_CASE
      * [en] Merged Case (Mrg. Case)
      * [de] Zusammengeführter Fall (Zusammengef. Fall)</pre>
      */
    public static final String CASE_MERGING_CASE = "Case.merging.case";

    /** <pre>CASE_MERGING_CASE_LEADING
      * [en] Leading case
      * [de] Führender Fall</pre>
      */
    public static final String CASE_MERGING_CASE_LEADING = "Case.merging.case.leading";

    /** <pre>CASE_MERGING_CASE_ORGINAL
      * [en] Original Case (Org.)
      * [de] Original Fall (Org.)</pre>
      */
    public static final String CASE_MERGING_CASE_ORGINAL = "Case.merging.case.orginal";

    /** <pre>CASE_MERGING_CONDITION_EIGHT_DRG
      * [en] Readmission via complication (RA via complication)
      * [de] Wiederaufnahme wegen Komplikation (WA wg. Komplikation)</pre>
      */
    public static final String CASE_MERGING_CONDITION_EIGHT_DRG = "Case.merging.condition.eight.drg";

    /** <pre>CASE_MERGING_CONDITION_EIGHT_PEPP
      * [en] 1.Fall letztes Jahr vor Umstieg (1.Fall letztes Jahr vor Umstieg)
      * [de] 1.Fall letztes Jahr vor Umstieg (1.Fall letztes Jahr vor Umstieg)</pre>
      */
    public static final String CASE_MERGING_CONDITION_EIGHT_PEPP = "Case.merging.condition.eight.pepp";

    /** <pre>CASE_MERGING_CONDITION_FIVE_DRG
      * [en] First DRG Partition  M or A (Part. M or A)
      * [de] Erste DRG Partition M oder A (Part. M oder A)</pre>
      */
    public static final String CASE_MERGING_CONDITION_FIVE_DRG = "Case.merging.condition.five.drg";

    /** <pre>CASE_MERGING_CONDITION_FIVE_PEPP
      * [en] Both same PEPP (Both same PEPP)
      * [de] Beide in bewerteter PEPP (Beide in bewert. PEPP)</pre>
      */
    public static final String CASE_MERGING_CONDITION_FIVE_PEPP = "Case.merging.condition.five.pepp";

    /** <pre>CASE_MERGING_CONDITION_FOUR_DRG
      * [en] Same MDC**Same MDC
      * [de] Gleiche MDC (Gleiche MDC)</pre>
      */
    public static final String CASE_MERGING_CONDITION_FOUR_DRG = "Case.merging.condition.four.drg";

    /** <pre>CASE_MERGING_CONDITION_FOUR_PEPP
      * [en] Same SK (Same SK)
      * [de] Gleiche SK (Gleiche SK)</pre>
      */
    public static final String CASE_MERGING_CONDITION_FOUR_PEPP = "Case.merging.condition.four.pepp";

    /** <pre>CASE_MERGING_CONDITION_NINE_DRG
      * [en] Summary**Summary
      * [de] Zusammenfassung (Zusammenfassung)</pre>
      */
    public static final String CASE_MERGING_CONDITION_NINE_DRG = "Case.merging.condition.nine.drg";

    /** <pre>CASE_MERGING_CONDITION_NINE_PEPP
      * [en] Summary (Summary)
      * [de] Zusammenfassung (Zusammenfassung)</pre>
      */
    public static final String CASE_MERGING_CONDITION_NINE_PEPP = "Case.merging.condition.nine.pepp";

    /** <pre>CASE_MERGING_CONDITION_ONE_DRG
      * [en] Within High (Within High trim point)
      * [de] Innerhalb oberer Grenzverweildauer (Innerhalb OGVD)</pre>
      */
    public static final String CASE_MERGING_CONDITION_ONE_DRG = "Case.merging.condition.one.drg";

    /** <pre>CASE_MERGING_CONDITION_ONE_PEPP
      * [en] Within 21 Days (Within 21 D.)
      * [de] Innerhalb 21 Tage (Innerhalb 21 T.)</pre>
      */
    public static final String CASE_MERGING_CONDITION_ONE_PEPP = "Case.merging.condition.one.pepp";

    /** <pre>CASE_MERGING_CONDITION_SEVEN_DRG
      * [en] Catalog-Exception (Cat.-Exception)
      * [de] Katalog-Ausnahme (Kat.-Ausnahme)</pre>
      */
    public static final String CASE_MERGING_CONDITION_SEVEN_DRG = "Case.merging.condition.seven.drg";

    /** <pre>CASE_MERGING_CONDITION_SEVEN_PEPP
      * [en] 1.Fall aus vorletztem Jahr (1.Fall aus vorletztem Jahr)
      * [de] 1.Fall aus vorletztem Jahr (1.Fall aus vorletztem Jahr)</pre>
      */
    public static final String CASE_MERGING_CONDITION_SEVEN_PEPP = "Case.merging.condition.seven.pepp";

    /** <pre>CASE_MERGING_CONDITION_SIX_DRG
      * [en] Second DRG Partition O (Second a. Part. O)
      * [de] Zweite DRG Partition O (Zweite a. Part. O)</pre>
      */
    public static final String CASE_MERGING_CONDITION_SIX_DRG = "Case.merging.condition.six.drg";

    /** <pre>CASE_MERGING_CONDITION_SIX_PEPP
      * [en] Both day-/fullpatient (Both day-/fullpatient)
      * [de] Beide teil- bzw. vollstationär (Beide teil- bzw. vollstat.)</pre>
      */
    public static final String CASE_MERGING_CONDITION_SIX_PEPP = "Case.merging.condition.six.pepp";

    /** <pre>CASE_MERGING_CONDITION_TEN_DRG
      * [en] New case (New case)
      * [de] Neuer Fall (Neuer Fall)</pre>
      * Attention! this value ('New case***New case') seems to be also defined under the key CASE_MERGING_CONDITION_TEN_PEPP!
      */
    public static final String CASE_MERGING_CONDITION_TEN_DRG = "Case.merging.condition.ten.drg";

    /** <pre>CASE_MERGING_CONDITION_TEN_PEPP
      * [en] New case (New case)
      * [de] Neuer Fall (Neuer Fall)</pre>
      * Attention! this value ('New case***New case') seems to be also defined under the key CASE_MERGING_CONDITION_TEN_DRG!
      */
    public static final String CASE_MERGING_CONDITION_TEN_PEPP = "Case.merging.condition.ten.pepp";

    /** <pre>CASE_MERGING_CONDITION_THREE_DRG
      * [en] Same ADRG (Same ADRG)
      * [de] Gleiche ADRG (Gleiche ADRG)</pre>
      */
    public static final String CASE_MERGING_CONDITION_THREE_DRG = "Case.merging.condition.three.drg";

    /** <pre>CASE_MERGING_CONDITION_THREE_PEPP
      * [en] Same year (Same year)
      * [de] Gleiches Jahr (Gleiches Jahr)</pre>
      */
    public static final String CASE_MERGING_CONDITION_THREE_PEPP = "Case.merging.condition.three.pepp";

    /** <pre>CASE_MERGING_CONDITION_TWO_DRG
      * [en] Within 30 Days (Within 30 D.)
      * [de] Innerhalb 30 Tage (Innerhalb 30 T.)</pre>
      */
    public static final String CASE_MERGING_CONDITION_TWO_DRG = "Case.merging.condition.two.drg";

    /** <pre>CASE_MERGING_CONDITION_TWO_PEPP
      * [en] Within 120 Days (Within 120 D.)
      * [de] Innerhalb 120 Tage (Innerhalb 120 T.)</pre>
      */
    public static final String CASE_MERGING_CONDITION_TWO_PEPP = "Case.merging.condition.two.pepp";

    /** <pre>CASE_MERGING_DO_MERGE
      * [en] Merge case
      * [de] Fallzusammenführung simulieren</pre>
      */
    public static final String CASE_MERGING_DO_MERGE = "Case.merging.do.merge";

    /** <pre>CASE_MERGING_DO_MERGE_AND_SAVE
      * [en] Merge case &amp; save
      * [de] Fall zusammenführen &amp; speichern</pre>
      */
    public static final String CASE_MERGING_DO_MERGE_AND_SAVE = "Case.merging.do.mergeAndSave";

    /** <pre>CASE_MERGING_DO_SAVE
      * [en] Save case
      * [de] Fall speichern</pre>
      */
    public static final String CASE_MERGING_DO_SAVE = "Case.merging.do.save";

    /** <pre>CASE_MERGING_DO_SAVE_AND_OPEN
      * [en] Save case and open
      * [de] Fall speichern und öffnen</pre>
      */
    public static final String CASE_MERGING_DO_SAVE_AND_OPEN = "Case.merging.do.saveAndOpen";

    /** <pre>CASE_MERGING_ID
      * [en] Merging ID (Mrg. ID)
      * [de] Zusammenführungs ID (Zusf. ID)</pre>
      */
    public static final String CASE_MERGING_ID = "Case.merging.id";

    /** <pre>CASE_MERGING_JOB_COMPLETED
      * [en] Completed
      * [de] Erfolgreich</pre>
      * Attention! this value ('completed') seems to be also defined under the key JOB_STATUS_COMPLETED!
      */
    public static final String CASE_MERGING_JOB_COMPLETED = "Case.merging.job.completed";

    /** <pre>CASE_MERGING_JOB_FAILED
      * [en] Failed
      * [de] Gescheitert</pre>
      * Attention! this value ('Failed') seems to be also defined under the key FAILED! this value ('failed') seems to be also defined under the key JOB_STATUS_FAILED!
      */
    public static final String CASE_MERGING_JOB_FAILED = "Case.merging.job.failed";

    /** <pre>CASE_MERGING_JOB_INITIALIZING
      * [en] Initializing
      * [de] Wird initialisiert</pre>
      * Attention! this value ('initializing') seems to be also defined under the key JOB_STAUTS_INITIALIZING!
      */
    public static final String CASE_MERGING_JOB_INITIALIZING = "Case.merging.job.initializing";

    /** <pre>CASE_MERGING_JOB_STARTED
      * [en] Determine cases to merge
      * [de] Zusammenführbare Fälle werden ermittelt</pre>
      */
    public static final String CASE_MERGING_JOB_STARTED = "Case.merging.job.started";

    /** <pre>CASE_MERGING_JOB_STARTING
      * [en] Starting case merging
      * [de] Fallzusammenführung wird gestartet</pre>
      */
    public static final String CASE_MERGING_JOB_STARTING = "Case.merging.job.starting";

    /** <pre>CASE_MERGING_JOB_STOPPED
      * [en] Stopped
      * [de] Angehalten</pre>
      * Attention! this value ('stopped') seems to be also defined under the key JOB_STATUS_STOPPED!
      */
    public static final String CASE_MERGING_JOB_STOPPED = "Case.merging.job.stopped";

    /** <pre>CASE_MERGING_JOB_STOPPING
      * [en] Stopping case merging
      * [de] Fallzusammenführung wird beendet</pre>
      */
    public static final String CASE_MERGING_JOB_STOPPING = "Case.merging.job.stopping";

    /** <pre>CASE_MERGING_START_PROCESS
      * [en] Determine cases
      * [de] Fälle ermitteln</pre>
      */
    public static final String CASE_MERGING_START_PROCESS = "Case.merging.start.process";

    /** <pre>CASE_MERGING_STOP_PROCESS
      * [en] Stop
      * [de] Stop</pre>
      */
    public static final String CASE_MERGING_STOP_PROCESS = "Case.merging.stop.process";

    /** <pre>CASE_MERGING_TABLE_PLACEHOLDER
      * [en] No merged cases determined
      * [de] Keine zusammenführbaren Fälle ermittelt</pre>
      */
    public static final String CASE_MERGING_TABLE_PLACEHOLDER = "Case.merging.table.placeholder";

    /** <pre>CASE_MERGING_WARNING_GROUPED
      * [en] Apparently, not all cases are grouped with model: {0}!Cases that are not grouped are ignored!Continue?
      * [de] Nicht alle Fälle scheinen mit dem Groupermodel: {0} eine Fallpauschale zu haben!Fälle ohne Fallpauschale werden bei der Ermittlung von zusammenführbaren Fällen ignoriert!Trotzdem fortfahren?</pre>
      */
    public static final String CASE_MERGING_WARNING_GROUPED = "Case.merging.warning.grouped";

    /** <pre>CASE_NUMBER
      * [en] Case Number (Case Number)
      * [de] Fallnummer (Fallnummer)</pre>
      */
    public static final String CASE_NUMBER = "CaseNumber";

    /** <pre>CASE_NUMERIC_1
      * [de] Zahl 1</pre>
      */
    public static final String CASE_NUMERIC_1 = "Case.Numeric1";

    /** <pre>CASE_NUMERIC_10
      * [de] Zahl 10</pre>
      */
    public static final String CASE_NUMERIC_10 = "Case.Numeric10";

    /** <pre>CASE_NUMERIC_2
      * [de] Zahl 2</pre>
      */
    public static final String CASE_NUMERIC_2 = "Case.Numeric2";

    /** <pre>CASE_NUMERIC_3
      * [de] Zahl 3</pre>
      */
    public static final String CASE_NUMERIC_3 = "Case.Numeric3";

    /** <pre>CASE_NUMERIC_4
      * [de] Zahl 4</pre>
      */
    public static final String CASE_NUMERIC_4 = "Case.Numeric4";

    /** <pre>CASE_NUMERIC_5
      * [de] Zahl 5</pre>
      */
    public static final String CASE_NUMERIC_5 = "Case.Numeric5";

    /** <pre>CASE_NUMERIC_6
      * [de] Zahl 6</pre>
      */
    public static final String CASE_NUMERIC_6 = "Case.Numeric6";

    /** <pre>CASE_NUMERIC_7
      * [de] Zahl 7</pre>
      */
    public static final String CASE_NUMERIC_7 = "Case.Numeric7";

    /** <pre>CASE_NUMERIC_8
      * [de] Zahl 8</pre>
      */
    public static final String CASE_NUMERIC_8 = "Case.Numeric8";

    /** <pre>CASE_NUMERIC_9
      * [de] Zahl 9</pre>
      */
    public static final String CASE_NUMERIC_9 = "Case.Numeric9";

    /** <pre>CASE_OPEN_PROCESS
      * [en] Open process
      * [de] Vorgang öffnen</pre>
      */
    public static final String CASE_OPEN_PROCESS = "Case.open.process";

    /** <pre>CASE_REMOVED_TOOLTIP
      * [en] This case is Removed
      * [de] Dieser Fall wird entfernt</pre>
      */
    public static final String CASE_REMOVED_TOOLTIP = "Case.Removed.Tooltip";

    /** <pre>CASE_RESOLVE_CCL
      * [en] CCL
      * [de] CCL</pre>
      */
    public static final String CASE_RESOLVE_CCL = "CaseResolve.CCL";

    /** <pre>CASE_RESOLVE_CW
      * [en] CW
      * [de] CW</pre>
      * Attention! this value ('CW') seems to be also defined under the key CW!
      */
    public static final String CASE_RESOLVE_CW = "CaseResolve.CW";

    /** <pre>CASE_RESOLVE_CW_EFF
      * [en] eff. CW
      * [de] eff. CW</pre>
      */
    public static final String CASE_RESOLVE_CW_EFF = "CaseResolve.CW.eff";

    /** <pre>CASE_RESOLVE_CWCATALOG
      * [en] CW-Catalog
      * [de] CW-Katalog</pre>
      */
    public static final String CASE_RESOLVE_CWCATALOG = "CaseResolve.CWCatalog";

    /** <pre>CASE_RESOLVE_DATE
      * [en] Date
      * [de] Datum</pre>
      * Attention! this value ('Date') seems to be also defined under the key PROCESS_DATE!
      */
    public static final String CASE_RESOLVE_DATE = "CaseResolve.Date";

    /** <pre>CASE_RESOLVE_DRG
      * [en] DRG
      * [de] DRG</pre>
      * Attention! this value ('DRG') seems to be also defined under the key CASE_TYPE_DRG! this value ('DRG') seems to be also defined under the key DRG! this value ('DRG') seems to be also defined under the key DRG_SHORTCUT! this value ('DRG') seems to be also defined under the key FEE_GROUP_DRG! this value ('DRG') seems to be also defined under the key ICD_TYPE_DRG! this value ('DRG') seems to be also defined under the key RULES_DRG!
      */
    public static final String CASE_RESOLVE_DRG = "CaseResolve.DRG";

    /** <pre>CASE_RESOLVE_ESTIMATED_RULES
      * [en] Estimated Rules
      * [de] Prüfregelanschläge</pre>
      */
    public static final String CASE_RESOLVE_ESTIMATED_RULES = "CaseResolve.estimatedRules";

    /** <pre>CASE_RESOLVE_GROUP_RESULT_CODE
      * [en] R
      * [de] R</pre>
      */
    public static final String CASE_RESOLVE_GROUP_RESULT_CODE = "CaseResolve.GroupResultCode";

    /** <pre>CASE_RESOLVE_ICD
      * [en] ICD
      * [de] ICD</pre>
      */
    public static final String CASE_RESOLVE_ICD = "CaseResolve.ICD";

    /** <pre>CASE_RESOLVE_ICD_TEXT
      * [en] ICD-Text
      * [de] ICD-Text</pre>
      */
    public static final String CASE_RESOLVE_ICD_TEXT = "CaseResolve.ICD-Text";

    /** <pre>CASE_RESOLVE_ICD_UNCORRECTED_CW
      * [en] unc. CW
      * [de] unkorr. CW</pre>
      */
    public static final String CASE_RESOLVE_ICD_UNCORRECTED_CW = "CaseResolve.ICD.UncorrectedCW";

    /** <pre>CASE_RESOLVE_KIND
      * [en] Kind
      * [de] Art</pre>
      * Attention! this value ('Kind') seems to be also defined under the key BILL_KIND! this value ('Kind') seems to be also defined under the key CASEFEE_KIND!
      */
    public static final String CASE_RESOLVE_KIND = "CaseResolve.Kind";

    /** <pre>CASE_RESOLVE_LOCALISATION
      * [en] Localisation (Loc.)
      * [de] Lokalisation (Lok.)</pre>
      */
    public static final String CASE_RESOLVE_LOCALISATION = "CaseResolve.localisation";

    /** <pre>CASE_RESOLVE_MD
      * [en] MD
      * [de] HD</pre>
      * Attention! this value ('MD') seems to be also defined under the key DEPARTMENT_TYPE_MAIN_DEPARTMENT! this value ('MD') seems to be also defined under the key REQUEST_TYPE_MDK!
      */
    public static final String CASE_RESOLVE_MD = "CaseResolve.md";

    /** <pre>CASE_RESOLVE_OPS
      * [en] OPS
      * [de] OPS</pre>
      * Attention! this value ('OPS') seems to be also defined under the key RULES_CHECKRESULT_TYP_OPS!
      */
    public static final String CASE_RESOLVE_OPS = "CaseResolve.OPS";

    /** <pre>CASE_RESOLVE_OPS_TEXT
      * [en] OPS-Text
      * [de] OPS-Text</pre>
      */
    public static final String CASE_RESOLVE_OPS_TEXT = "CaseResolve.OPS-TEXT";

    /** <pre>CASE_RESOLVE_RULES
      * [en] Rules
      * [de] Regeln</pre>
      */
    public static final String CASE_RESOLVE_RULES = "CaseResolve.Rules";

    /** <pre>CASE_RESOLVE_RULES_CATEGORIE
      * [en] Categorie
      * [de] Kategorie</pre>
      */
    public static final String CASE_RESOLVE_RULES_CATEGORIE = "CaseResolve.Rules.Categorie";

    /** <pre>CASE_RESOLVE_RULES_DELTA_CHARGE
      * [en] dCharge
      * [de] dEntgelt</pre>
      */
    public static final String CASE_RESOLVE_RULES_DELTA_CHARGE = "CaseResolve.Rules.DeltaCharge";

    /** <pre>CASE_RESOLVE_RULES_DELTA_COST_WEIGHT
      * [en] dCW
      * [de] dCW</pre>
      */
    public static final String CASE_RESOLVE_RULES_DELTA_COST_WEIGHT = "CaseResolve.Rules.DeltaCostWeight";

    /** <pre>CASE_RESOLVE_RULES_DESCRIPTION
      * [en] Description
      * [de] Bezeichnung</pre>
      * Attention! this value ('Description') seems to be also defined under the key DESCRIPTION!
      */
    public static final String CASE_RESOLVE_RULES_DESCRIPTION = "CaseResolve.Rules.Description";

    /** <pre>CASE_RESOLVE_RULES_DRGSIMULATION
      * [en] DRG Simulation (DRG Sim.)
      * [de] DRG Simulation (DRG Sim.)</pre>
      */
    public static final String CASE_RESOLVE_RULES_DRGSIMULATION = "CaseResolve.Rules.DRGSimulation";

    /** <pre>CASE_RESOLVE_RULES_ID
      * [en] Identifier
      * [de] Nummer</pre>
      */
    public static final String CASE_RESOLVE_RULES_ID = "CaseResolve.Rules.Id";

    /** <pre>CASE_RESOLVE_RULES_PEPPSIMULATION
      * [en] PEPP (PEPP Sim.)
      * [de] PEPP Simulation (PEPP Sim.)</pre>
      */
    public static final String CASE_RESOLVE_RULES_PEPPSIMULATION = "CaseResolve.Rules.PEPPSimulation";

    /** <pre>CASE_RESOLVE_RULES_PROPOSAL
      * [en] Proposal
      * [de] Vorschlag</pre>
      */
    public static final String CASE_RESOLVE_RULES_PROPOSAL = "CaseResolve.Rules.Proposal";

    /** <pre>CASE_RESOLVE_RULES_RELATION
      * [en] Relation
      * [de] Bezug</pre>
      */
    public static final String CASE_RESOLVE_RULES_RELATION = "CaseResolve.Rules.Relation";

    /** <pre>CASE_RESOLVE_RULES_TYPE
      * [en] Type
      * [de] Type</pre>
      * Attention! this value ('Type') seems to be also defined under the key WORKFLOW_TYPE!
      */
    public static final String CASE_RESOLVE_RULES_TYPE = "CaseResolve.Rules.Type";

    /** <pre>CASE_RESOLVE_SECUNDARY_ICD
      * [en] sec. ICD
      * [de] s. ICD</pre>
      */
    public static final String CASE_RESOLVE_SECUNDARY_ICD = "CaseResolve.secundaryICD";

    /** <pre>CASE_RESOLVE_SUPPLEMENTARY_CHARGE
      * [en] SC
      * [de] Zusatz-/ergänz. Tagesentgelte</pre>
      */
    public static final String CASE_RESOLVE_SUPPLEMENTARY_CHARGE = "CaseResolve.supplementaryCharge";

    /** <pre>CASE_RESOLVE_SUPPLEMENTARY_VALUE
      * [en] SC-Value
      * [de] ZE-Betrag</pre>
      */
    public static final String CASE_RESOLVE_SUPPLEMENTARY_VALUE = "CaseResolve.supplementaryValue";

    /** <pre>CASE_RESOLVE_USED_FOR_GROUPING
      * [en] G
      * [de] G</pre>
      * Attention! this value ('g') seems to be also defined under the key RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_5!
      */
    public static final String CASE_RESOLVE_USED_FOR_GROUPING = "CaseResolve.UsedForGrouping";

    /** <pre>CASE_RESOLVED
      * [en] Case resolved
      * [de] Fall abgeschlossen</pre>
      */
    public static final String CASE_RESOLVED = "Case.resolved";

    /** <pre>CASE_SIMULATON_ACTIONS
      * [en] Actions
      * [de] Aktionen</pre>
      */
    public static final String CASE_SIMULATON_ACTIONS = "Case.simulaton.actions";

    /** <pre>CASE_STATUS
      * [en] Case Status (Status)
      * [de] Fallstatus (Status)</pre>
      */
    public static final String CASE_STATUS = "CaseStatus";

    /** <pre>CASE_STATUS_CLOSED
      * [en] Closed
      * [de] Geschlossen</pre>
      * Attention! this value ('closed') seems to be also defined under the key PROCESS_STATUS_REMINDER_CLOSED! this value ('closed') seems to be also defined under the key WORKFLOW_STATE_CLOSED!
      */
    public static final String CASE_STATUS_CLOSED = "CaseStatus.Closed";

    /** <pre>CASE_STATUS_IN_PROGRESS
      * [en] In Progress
      * [de] In Bearbeitung</pre>
      */
    public static final String CASE_STATUS_IN_PROGRESS = "CaseStatus.InProgress";

    /** <pre>CASE_STATUS_NEW
      * [en] New
      * [de] Neu</pre>
      */
    public static final String CASE_STATUS_NEW = "CaseStatus.New";

    /** <pre>CASE_STATUS_NEW_VERSION
      * [en] New Version
      * [de] Neue Version</pre>
      */
    public static final String CASE_STATUS_NEW_VERSION = "CaseStatus.NewVersion";

    /** <pre>CASE_STATUS_SAP_CLOSED
      * [en] SAP closed
      * [de] SAP geschlossen</pre>
      */
    public static final String CASE_STATUS_SAP_CLOSED = "CaseStatus.SapClosed";

    /** <pre>CASE_STATUS_STANDARD
      * [en] Standard
      * [de] Standard</pre>
      */
    public static final String CASE_STATUS_STANDARD = "CaseStatus.Standard";

    /** <pre>CASE_STATUS_SUGGESTION
      * [en] Suggestion
      * [de] Vorschlag</pre>
      */
    public static final String CASE_STATUS_SUGGESTION = "CaseStatus.Suggestion";

    /** <pre>CASE_STRING_1
      * [de] Text 1</pre>
      */
    public static final String CASE_STRING_1 = "Case.String1";

    /** <pre>CASE_STRING_10
      * [de] Text 10</pre>
      */
    public static final String CASE_STRING_10 = "Case.String10";

    /** <pre>CASE_STRING_2
      * [de] Text 2</pre>
      */
    public static final String CASE_STRING_2 = "Case.String2";

    /** <pre>CASE_STRING_3
      * [de] Text 3</pre>
      */
    public static final String CASE_STRING_3 = "Case.String3";

    /** <pre>CASE_STRING_4
      * [de] Text 4</pre>
      */
    public static final String CASE_STRING_4 = "Case.String4";

    /** <pre>CASE_STRING_5
      * [de] Text 5</pre>
      */
    public static final String CASE_STRING_5 = "Case.String5";

    /** <pre>CASE_STRING_6
      * [de] Text 6</pre>
      */
    public static final String CASE_STRING_6 = "Case.String6";

    /** <pre>CASE_STRING_7
      * [de] Text 7</pre>
      */
    public static final String CASE_STRING_7 = "Case.String7";

    /** <pre>CASE_STRING_8
      * [de] Text 8</pre>
      */
    public static final String CASE_STRING_8 = "Case.String8";

    /** <pre>CASE_STRING_9
      * [de] Text 9</pre>
      */
    public static final String CASE_STRING_9 = "Case.String9";

    /** <pre>CASE_TYPE
      * [en] Case Type (Case Type)
      * [de] Abrechnungsart (Abrechnungsart)</pre>
      */
    public static final String CASE_TYPE = "CaseType";

    /** <pre>CASE_TYPE_AMBU_OP
      * [en] Ambu OP
      * [de] Ambu OP</pre>
      */
    public static final String CASE_TYPE_AMBU_OP = "CaseType.AmbuOP";

    /** <pre>CASE_TYPE_DRG
      * [en] DRG
      * [de] DRG</pre>
      * Attention! this value ('DRG') seems to be also defined under the key CASE_RESOLVE_DRG! this value ('DRG') seems to be also defined under the key DRG! this value ('DRG') seems to be also defined under the key DRG_SHORTCUT! this value ('DRG') seems to be also defined under the key FEE_GROUP_DRG! this value ('DRG') seems to be also defined under the key ICD_TYPE_DRG! this value ('DRG') seems to be also defined under the key RULES_DRG!
      */
    public static final String CASE_TYPE_DRG = "CaseType.DRG";

    /** <pre>CASE_TYPE_OTHER
      * [en] Other
      * [de] Andere</pre>
      * Attention! this value ('other') seems to be also defined under the key DRG_PARTITION_OTHER! this value ('Other') seems to be also defined under the key REQUEST_TYPE_OTHER! this value ('Other') seems to be also defined under the key RISK_AREA_OTHER!
      */
    public static final String CASE_TYPE_OTHER = "CaseType.OTHER";

    /** <pre>CASE_TYPE_PEPP
      * [en] PEPP
      * [de] PEPP</pre>
      * Attention! this value ('PEPP') seems to be also defined under the key RULES_PEPP_GROUPERSTATE!
      */
    public static final String CASE_TYPE_PEPP = "CaseType.PEPP";

    /** <pre>CASE_TYPE_PIA
      * [en] PIA
      * [de] PIA</pre>
      * Attention! this value ('PIA') seems to be also defined under the key PIA!
      */
    public static final String CASE_TYPE_PIA = "CaseType.PIA";

    /** <pre>CASE_TYPE_PRE_ADMISSION_TERMINATORS
      * [en] pre-admission terminators
      * [de] vorstat. Abbrecher</pre>
      */
    public static final String CASE_TYPE_PRE_ADMISSION_TERMINATORS = "CaseType.PreAdmissionTerminators";

    /** <pre>CASE_TYPE_PSY
      * [en] Psychosomatic
      * [de] Psychosomatik</pre>
      * Attention! this value ('Psychosomatic') seems to be also defined under the key PSY!
      */
    public static final String CASE_TYPE_PSY = "CaseType.PSY";

    /** <pre>CASECREATION_FAILED
      * [en] Case creation failed!
      * [de] Fall konnte nicht angelegt werden!</pre>
      */
    public static final String CASECREATION_FAILED = "Casecreation.failed";

    /** <pre>CASECREATION_SUCCESS
      * [en] Case successfully created!
      * [de] Fall wurde erfolgreich angelegt!</pre>
      */
    public static final String CASECREATION_SUCCESS = "Casecreation.success";

    /** <pre>CASEFEE
      * [en] Case Fees
      * [de] Entgelte</pre>
      */
    public static final String CASEFEE = "Casefee";

    /** <pre>CASEFEE_COUNT
      * [en] Count
      * [de] Anzahl</pre>
      */
    public static final String CASEFEE_COUNT = "Casefee.count";

    /** <pre>CASEFEE_DAYSOFF
      * [en] Days without Calculation
      * [de] Tage ohne Berechnung</pre>
      */
    public static final String CASEFEE_DAYSOFF = "Casefee.daysoff";

    /** <pre>CASEFEE_FROM
      * [en] Billing from
      * [de] Abrechnung von</pre>
      */
    public static final String CASEFEE_FROM = "Casefee.from";

    /** <pre>CASEFEE_INFO
      * [en] Case fees of {0}
      * [de] Entgelte von {0}</pre>
      */
    public static final String CASEFEE_INFO = "Casefee.info";

    /** <pre>CASEFEE_KIND
      * [en] Kind
      * [de] Art</pre>
      * Attention! this value ('Kind') seems to be also defined under the key BILL_KIND! this value ('Kind') seems to be also defined under the key CASE_RESOLVE_KIND!
      */
    public static final String CASEFEE_KIND = "Casefee.kind";

    /** <pre>CASEFEE_SUM
      * [en] Total
      * [de] Summe</pre>
      */
    public static final String CASEFEE_SUM = "Casefee.sum";

    /** <pre>CASEFEE_TO
      * [en] Billing to
      * [de] Abrechnung bis</pre>
      */
    public static final String CASEFEE_TO = "Casefee.to";

    /** <pre>CASEFEE_VALUE
      * [en] Value
      * [de] Betrag</pre>
      * Attention! this value ('value') seems to be also defined under the key PROCESS_BASERATE_PEPP_VALUE!
      */
    public static final String CASEFEE_VALUE = "Casefee.value";

    /** <pre>CASELIST_CSV_EXPORT_DIAG
      * [en] Caselist is exporting as CSV
      * [de] Fallliste wird als CSV exportiert</pre>
      */
    public static final String CASELIST_CSV_EXPORT_DIAG = "Caselist.csv.export.diag";

    /** <pre>CASELIST_EXCEL_EXPORT_DIAG
      * [en] Caselist is exporting as Excel
      * [de] Fallliste wird als Excel exportiert</pre>
      */
    public static final String CASELIST_EXCEL_EXPORT_DIAG = "Caselist.excel.export.diag";

    /** <pre>CASES
      * [en] Cases
      * [de] Fälle</pre>
      */
    public static final String CASES = "Cases";

    /** <pre>CATALOG
      * [en] Catalog
      * [de] Katalog</pre>
      */
    public static final String CATALOG = "Catalog";

    /** <pre>CATALOG_AOP_CATALOG
      * [en] AOP-Katalog
      * [de] AOP-Katalog</pre>
      */
    public static final String CATALOG_AOP_CATALOG = "Catalog.aop.catalog";

    /** <pre>CATALOG_AOP_CATEGORY
      * [en] Kategorie
      * [de] Kategorie</pre>
      * Attention! this value ('Kategorie') seems to be also defined under the key RULE_FILTER_DIALOG_RULE_CATEGORY!
      */
    public static final String CATALOG_AOP_CATEGORY = "Catalog.aop.category";

    /** <pre>CATALOG_AOP_CATEGORY_DESCRIPTION_1
      * [en] Leistungen, die in der Regel ambulant erbracht werden können
      * [de] Leistungen, die in der Regel ambulant erbracht werden können</pre>
      */
    public static final String CATALOG_AOP_CATEGORY_DESCRIPTION_1 = "Catalog.aop.category.description.1";

    /** <pre>CATALOG_AOP_CATEGORY_DESCRIPTION_2
      * [en] Leistungen, bei denen sowohl eine ambulante, als auch stationäre Durchführung möglich ist
      * [de] Leistungen, bei denen sowohl eine ambulante, als auch stationäre Durchführung möglich ist</pre>
      */
    public static final String CATALOG_AOP_CATEGORY_DESCRIPTION_2 = "Catalog.aop.category.description.2";

    /** <pre>CATALOG_AOP_SHEET
      * [en] Abschnitt
      * [de] Abschnitt</pre>
      */
    public static final String CATALOG_AOP_SHEET = "Catalog.aop.sheet";

    /** <pre>CATALOG_DIALOG_CONFIRM
      * [en] Confirm
      * [de] Bestätigen</pre>
      */
    public static final String CATALOG_DIALOG_CONFIRM = "CatalogDialog.Confirm";

    /** <pre>CATALOG_DIALOG_DIAGNOSES
      * [en] Diagnoses
      * [de] Diagnosen</pre>
      */
    public static final String CATALOG_DIALOG_DIAGNOSES = "CatalogDialog.Diagnoses";

    /** <pre>CATALOG_DIALOG_PROCEDURES
      * [en] Procedures
      * [de] Prozeduren</pre>
      * Attention! this value ('Procedures') seems to be also defined under the key RISK_AREA_PROCEDURES!
      */
    public static final String CATALOG_DIALOG_PROCEDURES = "CatalogDialog.Procedures";

    /** <pre>CATALOG_DIALOG_REMOVE
      * [en] Remove
      * [de] Löschen</pre>
      * Attention! this value ('Remove') seems to be also defined under the key EVENT_OPERATION_REMOVE!
      */
    public static final String CATALOG_DIALOG_REMOVE = "CatalogDialog.Remove";

    /** <pre>CATALOG_DIALOG_REMOVE_ALL
      * [en] Remove all
      * [de] Alle löschen</pre>
      */
    public static final String CATALOG_DIALOG_REMOVE_ALL = "CatalogDialog.RemoveAll";

    /** <pre>CATALOG_DIALOG_SEARCH
      * [en] Search...
      * [de] Suchen...</pre>
      */
    public static final String CATALOG_DIALOG_SEARCH = "CatalogDialog.Search";

    /** <pre>CATALOG_DOWNLOAD_BASERATES
      * [en] Baserates
      * [de] Baserates</pre>
      */
    public static final String CATALOG_DOWNLOAD_BASERATES = "Catalog.download.baserates";

    /** <pre>CATALOG_DOWNLOAD_CATALOGS
      * [en] Catalogs
      * [de] Kataloge</pre>
      */
    public static final String CATALOG_DOWNLOAD_CATALOGS = "Catalog.download.catalogs";

    /** <pre>CATALOG_DOWNLOAD_CORE_DATA
      * [en] Core data
      * [de] Stammdaten</pre>
      */
    public static final String CATALOG_DOWNLOAD_CORE_DATA = "Catalog.download.core_data";

    /** <pre>CATALOG_DOWNLOAD_DAILY_FEE
      * [en] Daily Fees
      * [de] Tagesentgelte</pre>
      */
    public static final String CATALOG_DOWNLOAD_DAILY_FEE = "Catalog.download.dailyFee";

    /** <pre>CATALOG_DOWNLOAD_DEPARTMENTS
      * [en] Departments
      * [de] Abteilungen</pre>
      * Attention! this value ('Departments') seems to be also defined under the key DEPARTMENTS!
      */
    public static final String CATALOG_DOWNLOAD_DEPARTMENTS = "Catalog.download.departments";

    /** <pre>CATALOG_DOWNLOAD_DOCTORS
      * [en] Doctors
      * [de] Ärzte</pre>
      */
    public static final String CATALOG_DOWNLOAD_DOCTORS = "Catalog.download.doctors";

    /** <pre>CATALOG_DOWNLOAD_DRG_FEE
      * [en] DRG Supp. Fees
      * [de] DRG Zusatzentgelte</pre>
      */
    public static final String CATALOG_DOWNLOAD_DRG_FEE = "Catalog.download.drgFee";

    /** <pre>CATALOG_DOWNLOAD_HOSPITALS
      * [en] Hospitals
      * [de] Krankenhäuser</pre>
      */
    public static final String CATALOG_DOWNLOAD_HOSPITALS = "Catalog.download.hospitals";

    /** <pre>CATALOG_DOWNLOAD_INSURANCE_COMPANYS
      * [en] Insurances
      * [de] Krankenkassen</pre>
      * Attention! this value ('Insurances') seems to be also defined under the key INSURANCES!
      */
    public static final String CATALOG_DOWNLOAD_INSURANCE_COMPANYS = "Catalog.download.insurance_companys";

    /** <pre>CATALOG_DOWNLOAD_PEPP_FEE
      * [en] PEPP Supp. Fees
      * [de] PEPP Zusatzentgelte</pre>
      */
    public static final String CATALOG_DOWNLOAD_PEPP_FEE = "Catalog.download.peppFee";

    /** <pre>CATALOG_DOWNLOAD_PROGRESS_CATALOG_DOWNLOADED
      * [en] {0} was downloaded
      * [de] {0} wurde heruntergeladen</pre>
      */
    public static final String CATALOG_DOWNLOAD_PROGRESS_CATALOG_DOWNLOADED = "Catalog.download.progress.catalog_downloaded";

    /** <pre>CATALOG_DOWNLOAD_PROGRESS_CATALOG_DROPPED
      * [en] {0} was dropped
      * [de] {0} wurde gelöscht</pre>
      */
    public static final String CATALOG_DOWNLOAD_PROGRESS_CATALOG_DROPPED = "Catalog.download.progress.catalog_dropped";

    /** <pre>CATALOG_DOWNLOAD_PROGRESS_CATALOG_WILL_DOWNLOAD
      * [en] Will download {0}
      * [de] Lade {0} herunter</pre>
      */
    public static final String CATALOG_DOWNLOAD_PROGRESS_CATALOG_WILL_DOWNLOAD = "Catalog.download.progress.catalog_will_download";

    /** <pre>CATALOG_DOWNLOAD_PROGRESS_CATALOG_WILL_DROP
      * [en] Will drop {0}
      * [de] Lösche {0}</pre>
      */
    public static final String CATALOG_DOWNLOAD_PROGRESS_CATALOG_WILL_DROP = "Catalog.download.progress.catalog_will_drop";

    /** <pre>CATALOG_DOWNLOAD_PROGRESS_DOWNLOAD_FINISHED
      * [en] Download has finished...
      * [de] Herunterladen wurde beendet...</pre>
      */
    public static final String CATALOG_DOWNLOAD_PROGRESS_DOWNLOAD_FINISHED = "Catalog.download.progress.download_finished";

    /** <pre>CATALOG_DOWNLOAD_PROGRESS_DOWNLOAD_STARTED
      * [en] Download has started...
      * [de] Herunterladen wurde gestartet...</pre>
      */
    public static final String CATALOG_DOWNLOAD_PROGRESS_DOWNLOAD_STARTED = "Catalog.download.progress.download_started";

    /** <pre>CATALOG_DOWNLOAD_PROGRESS_PRIMING
      * [en] Priming...
      * [de] Vorbereiten...</pre>
      */
    public static final String CATALOG_DOWNLOAD_PROGRESS_PRIMING = "Catalog.download.progress.priming";

    /** <pre>CATALOG_DOWNLOAD_PROGRESS_SYNCHRONIZATION_FINISHED
      * [en] Synchronization with server was finished
      * [de] Synchronisation mit Server abgeschlossen</pre>
      */
    public static final String CATALOG_DOWNLOAD_PROGRESS_SYNCHRONIZATION_FINISHED = "Catalog.download.progress.synchronization_finished";

    /** <pre>CATALOG_DOWNLOAD_PROGRESS_SYNCHRONIZATION_STARTED
      * [en] Check if client is up to date...
      * [de] Prüfe, ob der Client auf dem neuesten Stand ist...</pre>
      */
    public static final String CATALOG_DOWNLOAD_PROGRESS_SYNCHRONIZATION_STARTED = "Catalog.download.progress.synchronization_started";

    /** <pre>CATALOG_DOWNLOAD_TITLE
      * [en] CPX is loading...
      * [de] checkpoint x wird geladen...</pre>
      */
    public static final String CATALOG_DOWNLOAD_TITLE = "Catalog.download.title";

    /** <pre>CATALOG_DOWNLOAD_WINDOW_TITLE
      * [en] Loading catalogs and core data
      * [de] Kataloge und Stammdaten laden</pre>
      */
    public static final String CATALOG_DOWNLOAD_WINDOW_TITLE = "Catalog.download.window_title";

    /** <pre>CATALOG_DRG_CARE_DESC
      * [en] {0} Day(s), equals {1}
      * [de] {0} Tag(e), entspr. {1}</pre>
      */
    public static final String CATALOG_DRG_CARE_DESC = "Catalog.drg.care.desc";

    /** <pre>CATALOG_DRG_CARE_TITLE
      * [en] Cost weight (Care)
      * [de] Kostengewicht (Pflege)</pre>
      */
    public static final String CATALOG_DRG_CARE_TITLE = "Catalog.drg.care.title";

    /** <pre>CATALOG_DRG_COSTWEIGHT
      * [en] Cost weight (DRG)
      * [de] Kostengewicht (DRG)</pre>
      */
    public static final String CATALOG_DRG_COSTWEIGHT = "Catalog.drg.costweight";

    /** <pre>CATALOG_DRG_EFF_CW
      * [en] eff. CW {0}
      * [de] eff. CW {0}</pre>
      */
    public static final String CATALOG_DRG_EFF_CW = "Catalog.drg.effCw";

    /** <pre>CATALOG_DRG_FIRST_DAY_DEDUCTION
      * [en] 1. day of deduction
      * [de] 1. Tag mit Abschlag</pre>
      */
    public static final String CATALOG_DRG_FIRST_DAY_DEDUCTION = "Catalog.drg.firstDayDeduction";

    /** <pre>CATALOG_DRG_FIRST_DAY_SURCHARGE
      * [en] 1. day of surcharge
      * [de] 1. Tag zusätzliches Entgelt</pre>
      */
    public static final String CATALOG_DRG_FIRST_DAY_SURCHARGE = "Catalog.drg.firstDaySurcharge";

    /** <pre>CATALOG_DRG_LOS
      * [en] Average length of stay
      * [de] Mittlere Verweildauer</pre>
      */
    public static final String CATALOG_DRG_LOS = "Catalog.drg.los";

    /** <pre>CATALOG_DRG_MDC
      * [en] MDC {0}
      * [de] MDC {0}</pre>
      */
    public static final String CATALOG_DRG_MDC = "Catalog.drg.mdc";

    /** <pre>CATALOG_DRG_NEGO_DESC
      * [en] Negotiated Fee per day {0}{1}, {2} day(s)
      * [de] Vereinbartes Entgeld pro Tag {0}{1}, {2} Tag(e)</pre>
      */
    public static final String CATALOG_DRG_NEGO_DESC = "Catalog.drg.nego.desc";

    /** <pre>CATALOG_DRG_NEGO_REVENUE
      * [en] Negotiated Fee per day {0}{1}, {2} day(s) ({3}{4})
      * [de] Vereinbartes Entgeld pro Tag {0}{1}, {2} Tag(e) ({3}{4})</pre>
      */
    public static final String CATALOG_DRG_NEGO_REVENUE = "Catalog.drg.nego.revenue";

    /** <pre>CATALOG_DRG_NEGO_TITLE
      * [en] Negotiated Fee
      * [de] Tagesgleiches Entgelt</pre>
      */
    public static final String CATALOG_DRG_NEGO_TITLE = "Catalog.drg.nego.title";

    /** <pre>CATALOG_DRG_UNK_CW
      * [en] unc. CW {0}
      * [de] unkorr. CW {0}</pre>
      */
    public static final String CATALOG_DRG_UNK_CW = "Catalog.drg.unkCw";

    /** <pre>CATALOG_ICD_ERROR
      * [en] [ICD Catalog {0} : Has no value]
      * [de] [ICD Katalog {0} : Hat keinen Bezeichner]</pre>
      */
    public static final String CATALOG_ICD_ERROR = "Catalog.Icd.Error";

    /** <pre>CATALOG_MDC_PRE
      * [en] PRE-MDC
      * [de] PRÄ-MDC</pre>
      */
    public static final String CATALOG_MDC_PRE = "Catalog.mdc.pre";

    /** <pre>CATALOG_MENU_NO_UPDATE_CHANGES_FOUND
      * [en] no changes at {0}
      * [de] Keine Änderungen um {0} Uhr</pre>
      */
    public static final String CATALOG_MENU_NO_UPDATE_CHANGES_FOUND = "Catalog.menu.no_update_changes_found";

    /** <pre>CATALOG_MENU_NO_UPDATES_FOUND
      * [en] Catalogs have not been changed
      * [de] Kataloge wurden nicht geändert</pre>
      */
    public static final String CATALOG_MENU_NO_UPDATES_FOUND = "Catalog.menu.no_updates_found";

    /** <pre>CATALOG_MENU_UPDATE
      * [en] Update catalogs
      * [de] Kataloge aktualisieren</pre>
      */
    public static final String CATALOG_MENU_UPDATE = "Catalog.menu.update";

    /** <pre>CATALOG_MENU_UPDATE_CHANGES_FOUND
      * [en] {0} changes at {1}
      * [de] {0} Änderungen um {1}</pre>
      */
    public static final String CATALOG_MENU_UPDATE_CHANGES_FOUND = "Catalog.menu.update_changes_found";

    /** <pre>CATALOG_OPS_ERROR
      * [en] [OPS Catalog {0} : Has no value]
      * [de] [OPS Katalog {0} : Hat keinen Bezeichner]</pre>
      */
    public static final String CATALOG_OPS_ERROR = "Catalog.Ops.Error";

    /** <pre>CATALOG_PEPP_SC
      * [en] SK {0}
      * [de] SK {0}</pre>
      */
    public static final String CATALOG_PEPP_SC = "Catalog.pepp.sc";

    /** <pre>CATALOG_SK_PRE
      * [en] Error-PEPP and other PEPP
      * [de] Fehler-PEPP und sonstige PEPP</pre>
      */
    public static final String CATALOG_SK_PRE = "Catalog.sk.pre";

    /** <pre>CATALOG_UPDATE_NOTIFICATION
      * [en] The server has an update of catalog data available!
      * [de] Auf dem Server steht ein Update der Katalogdaten zur Verfügung!</pre>
      */
    public static final String CATALOG_UPDATE_NOTIFICATION = "Catalog.update.notification";

    /** <pre>CHARACTERS
      * [en] Characters
      * [de] Zeichen</pre>
      */
    public static final String CHARACTERS = "Characters";

    /** <pre>CHECKRESULT_RESULT
      * [en] Result checkresult
      * [de] Ergebnis Fallprüfung</pre>
      */
    public static final String CHECKRESULT_RESULT = "Checkresult.result";

    /** <pre>CLIENT_ERROR_CONFIGURATION
      * [en] Client user configuration file seems to be corrupted:
      * [de] Die Konfigurationsdatei des Client-Benutzers scheint beschädigt zu sein:</pre>
      */
    public static final String CLIENT_ERROR_CONFIGURATION = "Client.Error.configuration";

    /** <pre>COMMENT
      * [en] Comment
      * [de] Kommentar</pre>
      * Attention! this value ('Comment') seems to be also defined under the key VERSIONCONTROLL_COMMENT!
      */
    public static final String COMMENT = "Comment";

    /** <pre>COMMON_CASE_DATA
      * [en] Common Case Data
      * [de] Allgemeine Falldaten</pre>
      */
    public static final String COMMON_CASE_DATA = "CommonCaseData";

    /** <pre>CONFIRMATION_DEFAULT_TEXT
      * [en] Do you really want to do this action?
      * [de] Wollen sie diese Aktion wirklich durchführen?</pre>
      */
    public static final String CONFIRMATION_DEFAULT_TEXT = "Confirmation.default.text";

    /** <pre>CONFIRMATION_NO
      * [en] No
      * [de] Nein</pre>
      * Attention! this value ('No') seems to be also defined under the key DRG_CORR_TYPE_NO!
      */
    public static final String CONFIRMATION_NO = "Confirmation.no";

    /** <pre>CONFIRMATION_YES
      * [en] Yes
      * [de] Ja</pre>
      */
    public static final String CONFIRMATION_YES = "Confirmation.yes";

    /** <pre>CONFORMATION
      * [en] Confirmation
      * [de] Bestätigung</pre>
      * Attention! this value ('Confirmation') seems to be also defined under the key TEMPLATE_CONFIRMATION!
      */
    public static final String CONFORMATION = "Conformation";

    /** <pre>CONTEXT_MENU_OPENPATIENT
      * [en] open health status
      * [de] Gesundheitszustand öffnen</pre>
      */
    public static final String CONTEXT_MENU_OPENPATIENT = "ContextMenu.openpatient";

    /** <pre>CONTINUE
      * [en] Continue
      * [de] Weiter</pre>
      */
    public static final String CONTINUE = "Continue";

    /** <pre>COUNT_CASES
      * [en] Count Cases
      * [de] Anzahl Fälle</pre>
      */
    public static final String COUNT_CASES = "CountCases";

    /** <pre>COUNT_PROC
      * [en] Count of procedures (∑ OPS)
      * [de] Anzahl der Prozeduren (Anz. OPS)</pre>
      */
    public static final String COUNT_PROC = "CountProc";

    /** <pre>COUNT_PROC_FROM
      * [en] ∑ OPS from
      * [de] Anz. OPS von</pre>
      */
    public static final String COUNT_PROC_FROM = "CountProc.from";

    /** <pre>COUNT_PROC_TO
      * [en] ∑ OPS to
      * [de] Anz. OPS bis</pre>
      */
    public static final String COUNT_PROC_TO = "CountProc.to";

    /** <pre>COUNT_SD
      * [en] Count of secondary diagnoses (∑ SD)
      * [de] Anzahl der Nebendiagnosen (Anz. ND)</pre>
      */
    public static final String COUNT_SD = "CountSD";

    /** <pre>COUNT_SD_FROM
      * [en] ∑ SD from
      * [de] Anz. ND von</pre>
      */
    public static final String COUNT_SD_FROM = "CountSD.from";

    /** <pre>COUNT_SD_TO
      * [en] ∑ SD to
      * [de] Anz. ND bis</pre>
      */
    public static final String COUNT_SD_TO = "CountSD.to";

    /** <pre>COUNTRY
      * [en] Country
      * [de] Staat</pre>
      */
    public static final String COUNTRY = "Country";

    /** <pre>COUNTRY_AUSTRIA
      * [en] Austria
      * [de] Österreich</pre>
      */
    public static final String COUNTRY_AUSTRIA = "Country.Austria";

    /** <pre>COUNTRY_ENGLAND
      * [en] England
      * [de] England</pre>
      */
    public static final String COUNTRY_ENGLAND = "Country.England";

    /** <pre>COUNTRY_FRANCE
      * [en] France
      * [de] Frankreich</pre>
      */
    public static final String COUNTRY_FRANCE = "Country.France";

    /** <pre>COUNTRY_GERMANY
      * [en] Germany
      * [de] Deutschland</pre>
      */
    public static final String COUNTRY_GERMANY = "Country.Germany";

    /** <pre>COUNTRY_SWITZERLAND
      * [en] Switzerland
      * [de] Schweiz</pre>
      */
    public static final String COUNTRY_SWITZERLAND = "Country.Switzerland";

    /** <pre>COURT_FILE_NUMBER
      * [en] court file number
      * [de] Aktenzeichen (Gericht) (Akt.-Z. (Gericht))</pre>
      */
    public static final String COURT_FILE_NUMBER = "CourtFileNumber";

    /** <pre>CREATE
      * [en] Create
      * [de] Anlegen</pre>
      * Attention! this value ('Create') seems to be also defined under the key EVENT_OPERATION_CREATE!
      */
    public static final String CREATE = "Create";

    /** <pre>CREATED_FROM
      * [en] from {0}
      * [de] von {0}</pre>
      * Attention! this value ('from {0}') seems to be also defined under the key MODIFIED_FROM!
      */
    public static final String CREATED_FROM = "CreatedFrom";

    /** <pre>CREATED_ON
      * [en] Created on {0}
      * [de] Angelegt am {0}</pre>
      */
    public static final String CREATED_ON = "CreatedOn";

    /** <pre>CREATION_DATE
      * [en] Creation Date (Creation Date)
      * [de] Anlagedatum des Falles (Anlagedatum)</pre>
      */
    public static final String CREATION_DATE = "CreationDate";

    /** <pre>CREATION_DATE_DOCUMENT
      * [en] Creation Date
      * [de] Anlagedatum</pre>
      */
    public static final String CREATION_DATE_DOCUMENT = "CreationDate.Document";

    /** <pre>CREATION_DATE_FROM
      * [en] Creation Date from
      * [de] Anlagedatum von</pre>
      */
    public static final String CREATION_DATE_FROM = "CreationDate.from";

    /** <pre>CREATION_DATE_TO
      * [en] Creation Date to
      * [de] Anlagedatum bis</pre>
      */
    public static final String CREATION_DATE_TO = "CreationDate.to";

    /** <pre>CURRENCY_SYMBOL
      * [en] €
      * [de] €</pre>
      */
    public static final String CURRENCY_SYMBOL = "Currency.symbol";

    /** <pre>CW
      * [en] CW
      * [de] CW</pre>
      * Attention! this value ('CW') seems to be also defined under the key CASE_RESOLVE_CW!
      */
    public static final String CW = "Cw";

    /** <pre>DAILY_FEE
      * [en] Daily Fee
      * [de] Tagesentgelt</pre>
      */
    public static final String DAILY_FEE = "DailyFee";

    /** <pre>DAILY_FEE_MATH_PEPP
      * [en] CW ({0}) X ({1}) Days X Baserate ({2}) from {3} to {4}
      * [de] CW ({0}) X ({1}) Tage X Baserate ({2}) von {3} bis {4}</pre>
      */
    public static final String DAILY_FEE_MATH_PEPP = "DailyFee.math.pepp";

    /** <pre>DAILY_FEE_VALUE
      * [en] DF-Value
      * [de] ET-Betrag</pre>
      */
    public static final String DAILY_FEE_VALUE = "DailyFeeValue";

    /** <pre>DATA_RECORD_CORRECTION_DEADLINE
      * [de] Frist bis zur Datenkorrektur im Vorverfahren (Frist Dat.-Korrektur)</pre>
      */
    public static final String DATA_RECORD_CORRECTION_DEADLINE = "Data.record.correction.deadline";

    /** <pre>DATA_RECORD_CORRECTION_DEADLINE_DAYS
      * [de] Tage bis Datenkorrektur Vorverfahren (Datenkorrektur)</pre>
      */
    public static final String DATA_RECORD_CORRECTION_DEADLINE_DAYS = "Data.record.correction.deadline.days";

    /** <pre>DATA_RECORD_CORRECTION_DEADLINE_FROM
      * [de] Frist Dat.-Korrektur von</pre>
      */
    public static final String DATA_RECORD_CORRECTION_DEADLINE_FROM = "Data.record.correction.deadline.from";

    /** <pre>DATA_RECORD_CORRECTION_DEADLINE_TO
      * [de] Frist Dat.-Korrektur bis</pre>
      */
    public static final String DATA_RECORD_CORRECTION_DEADLINE_TO = "Data.record.correction.deadline.to";

    /** <pre>DATE_FORMAT
      * [en] yyyy-MM-dd
      * [de] dd.MM.yyyy</pre>
      */
    public static final String DATE_FORMAT = "DateFormat";

    /** <pre>DATE_FORMAT_DEVIDER
      * [en] -
      * [de] .</pre>
      */
    public static final String DATE_FORMAT_DEVIDER = "DateFormat.devider";

    /** <pre>DATE_OF_ACCIDENT
      * [en] Date of Accident
      * [de] Unfalldatum</pre>
      */
    public static final String DATE_OF_ACCIDENT = "DateOfAccident";

    /** <pre>DATE_OF_ADMISSION
      * [en] Admission Date
      * [de] Aufnahmetag</pre>
      */
    public static final String DATE_OF_ADMISSION = "DateOfAdmission";

    /** <pre>DATE_OF_BIRTH
      * [en] Date of Birth (Birth)
      * [de] Geburtsdatum (Geb.-Datum)</pre>
      */
    public static final String DATE_OF_BIRTH = "DateOfBirth";

    /** <pre>DATE_OF_BIRTH_FROM
      * [en] Birth from
      * [de] Geb.-Datum von</pre>
      */
    public static final String DATE_OF_BIRTH_FROM = "DateOfBirth.from";

    /** <pre>DATE_OF_BIRTH_TO
      * [en] Birth to
      * [de] Geb.-Datum bis</pre>
      */
    public static final String DATE_OF_BIRTH_TO = "DateOfBirth.to";

    /** <pre>DATE_TIME_FORMAT
      * [en] yyyy-MM-dd HH:mm:ss
      * [de] dd.MM.yyyy HH:mm:ss</pre>
      */
    public static final String DATE_TIME_FORMAT = "DateTimeFormat";

    /** <pre>DATES
      * [en] Dates
      * [de] Datumsangaben</pre>
      */
    public static final String DATES = "Dates";

    /** <pre>DAY_CARE
      * [en] DayCare
      * [de] Teilstationär</pre>
      */
    public static final String DAY_CARE = "DayCare";

    /** <pre>DAY_FRIDAY
      * [en] Friday (Fr)
      * [de] Freitag (Fr)</pre>
      */
    public static final String DAY_FRIDAY = "Day.Friday";

    /** <pre>DAY_MONDAY
      * [en] Monday (Mo)
      * [de] Montag (Mo)</pre>
      */
    public static final String DAY_MONDAY = "Day.Monday";

    /** <pre>DAY_SATURDAY
      * [en] Saturday (Sa)
      * [de] Samstag (Sa)</pre>
      */
    public static final String DAY_SATURDAY = "Day.Saturday";

    /** <pre>DAY_SUNDAY
      * [en] Sunday (Su)
      * [de] Sonntag (So)</pre>
      */
    public static final String DAY_SUNDAY = "Day.Sunday";

    /** <pre>DAY_THURSDAY
      * [en] Thursday (Th)
      * [de] Donnerstag (Do)</pre>
      */
    public static final String DAY_THURSDAY = "Day.Thursday";

    /** <pre>DAY_TUESDAY
      * [en] Tuesday (Tu)
      * [de] Dienstag (Di)</pre>
      */
    public static final String DAY_TUESDAY = "Day.Tuesday";

    /** <pre>DAY_WEDNESDAY
      * [en] Wednesday (We)
      * [de] Mittwoch (Mi)</pre>
      */
    public static final String DAY_WEDNESDAY = "Day.Wednesday";

    /** <pre>DAYS_CALCULATED
      * [en] Days calculated
      * [de] Berechnete Abwesenheit</pre>
      */
    public static final String DAYS_CALCULATED = "Days.calculated";

    /** <pre>DAYS_INTENSIV
      * [en] Days intensiv
      * [de] Tage Intensiv</pre>
      */
    public static final String DAYS_INTENSIV = "DaysIntensiv";

    /** <pre>DAYS_SIMUL_NO_DEDUCTION_CARE
      * [en] without deduction care
      * [de] ohne Pflege</pre>
      */
    public static final String DAYS_SIMUL_NO_DEDUCTION_CARE = "Days.simul.no.deduction.care";

    /** <pre>DAYS_SIMUL_WITH_DEDUCTION_CARE
      * [en] with deduction care
      * [de] mit Pflege</pre>
      */
    public static final String DAYS_SIMUL_WITH_DEDUCTION_CARE = "Days.simul.with.deduction.care";

    /** <pre>DAYS_SIMULATED
      * [en] Days simulated
      * [de] Simulationstage</pre>
      */
    public static final String DAYS_SIMULATED = "Days.simulated";

    /** <pre>DAYS_STAY
      * [en] Days' stay
      * [de] Belegtage</pre>
      */
    public static final String DAYS_STAY = "Days.stay";

    /** <pre>DAYS_STAY_PEPP
      * [de] Berechnungstage</pre>
      */
    public static final String DAYS_STAY_PEPP = "Days.stay.pepp";

    /** <pre>DAYS_SURCHARGE
      * [en] Days Surcharge
      * [de] Zuschlagstage</pre>
      */
    public static final String DAYS_SURCHARGE = "DaysSurcharge";

    /** <pre>DAYS_UNBILLED_COMMENT_DIALOG
      * [de] Hinweis</pre>
      */
    public static final String DAYS_UNBILLED_COMMENT_DIALOG = "DaysUnbilled.comment.dialog";

    /** <pre>DAYS_UNBILLED_DIALOG
      * [en] Unbilled days may not exceed the Length Of Stay(LOS)
      * [de] Anzahl Tage der Abwesenheit darf nicht größer als die Anzahl der Belegtage sein.</pre>
      */
    public static final String DAYS_UNBILLED_DIALOG = "DaysUnbilled.Dialog";

    /** <pre>DAYS_UNBILLED_DIALOG_CONFIRM
      * [en] Information
      * [de] Information</pre>
      * Attention! this value ('Information') seems to be also defined under the key RULE_FILTER_DIALOG_INFORMATION_RULES!
      */
    public static final String DAYS_UNBILLED_DIALOG_CONFIRM = "DaysUnbilled.Dialog.confirm";

    /** <pre>DEADLINES_ERROR
      * [en] List of deadlines is empty. Please configure valid deadlines!!
      * [de] Die Liste der Fristen ist leer. Bitte konfigurieren Sie gültige Fristen in den Stammdaten!</pre>
      */
    public static final String DEADLINES_ERROR = "Deadlines.error";

    /** <pre>DEATAIL_CASE_DATA
      * [en] Detailed case data
      * [de] Detailed case data</pre>
      */
    public static final String DEATAIL_CASE_DATA = "DeatailCaseData";

    /** <pre>DEDUCTION
      * [en] Deduction
      * [de] Abschlag</pre>
      * Attention! this value ('Deduction') seems to be also defined under the key DRG_CORR_TYPE_DEDUCTION!
      */
    public static final String DEDUCTION = "Deduction";

    /** <pre>DELETE
      * [en] Delete
      * [de] Löschen</pre>
      */
    public static final String DELETE = "Delete";

    /** <pre>DELETE_DOCUMENT
      * [en] Do you really want to delete the document?
      * [de] Wollen Sie das Dokument wirklich löschen?</pre>
      */
    public static final String DELETE_DOCUMENT = "Delete.document";

    /** <pre>DELETE_ERROR_CASE_MAIN_CASE
      * [en] Can not delete service with main case.
      * [de] Löschen einer Leistung mit einem Hauptfall ist nicht möglich.</pre>
      */
    public static final String DELETE_ERROR_CASE_MAIN_CASE = "Delete.Error.Case.MainCase";

    /** <pre>DELETE_REMINDER
      * [en] Do you really want to delete the reminder?
      * [de] Wollen Sie die Wiedervorlage wirklich löschen?</pre>
      */
    public static final String DELETE_REMINDER = "Delete.reminder";

    /** <pre>DELETE_SERVICE
      * [en] Do you really want to delete the service?
      * [de] Wollen Sie die Leistung wirklich entfernen?</pre>
      */
    public static final String DELETE_SERVICE = "Delete.service";

    /** <pre>DEPARTMENT_GROUPING
      * [en] Department Grouping
      * [de] Abteilungs-Grouping</pre>
      */
    public static final String DEPARTMENT_GROUPING = "DepartmentGrouping";

    /** <pre>DEPARTMENT_MAIN_DIAGNOSIS
      * [en] Department MD (DMD)
      * [de] Fachabteilungs-Hauptdiagnose (FAB-HD)</pre>
      */
    public static final String DEPARTMENT_MAIN_DIAGNOSIS = "Department.mainDiagnosis";

    /** <pre>DEPARTMENT_MAIN_DIAGNOSIS_ERROR
      * [en] No DMD was set
      * [de] Es wurde keine BHD gesetzt</pre>
      */
    public static final String DEPARTMENT_MAIN_DIAGNOSIS_ERROR = "Department.mainDiagnosis.error";

    /** <pre>DEPARTMENT_MAIN_DIAGNOSIS_ERROR_INDEX
      * [en] No DMD was set on Position {0}
      * [de] Es wurde keine BHD an der Position {0} gesetzt</pre>
      */
    public static final String DEPARTMENT_MAIN_DIAGNOSIS_ERROR_INDEX = "Department.mainDiagnosis.error.index";

    /** <pre>DEPARTMENT_MAIN_DIAGNOSIS_TOOLTIP
      * [en] DMD for department: {0}
      * [de] BHD für FAB: {0}</pre>
      */
    public static final String DEPARTMENT_MAIN_DIAGNOSIS_TOOLTIP = "Department.mainDiagnosis.tooltip";

    /** <pre>DEPARTMENT_TITLE
      * [en] Department
      * [de] Abteilung § 301*</pre>
      */
    public static final String DEPARTMENT_TITLE = "Department.Title";

    /** <pre>DEPARTMENT_TYPE_MAIN_DEPARTMENT
      * [en] MD
      * [de] HA</pre>
      * Attention! this value ('MD') seems to be also defined under the key CASE_RESOLVE_MD! this value ('MD') seems to be also defined under the key REQUEST_TYPE_MDK!
      */
    public static final String DEPARTMENT_TYPE_MAIN_DEPARTMENT = "Department.Type.MainDepartment";

    /** <pre>DEPARTMENT_TYPE_SLIP_DEPARTMENT
      * [en] SD
      * [de] BA</pre>
      */
    public static final String DEPARTMENT_TYPE_SLIP_DEPARTMENT = "Department.Type.SlipDepartment";

    /** <pre>DEPARTMENT_TYPE_SPECIAL_INSTITUTION
      * [en] SI
      * [de] BE</pre>
      */
    public static final String DEPARTMENT_TYPE_SPECIAL_INSTITUTION = "Department.Type.SpecialInstitution";

    /** <pre>DEPARTMENT_VALIDATION_ERROR
      * [en] Additional information required
      * [de] Zusätzliche Informationen sind erforderlich</pre>
      */
    public static final String DEPARTMENT_VALIDATION_ERROR = "Department.validation.error";

    /** <pre>DEPARTMENT_VALIDATION_ICD_COUNT_ERROR
      * [en] One or more diagnoses required
      * [de] Es sind eine oder mehr Diagnosen erforderlich</pre>
      */
    public static final String DEPARTMENT_VALIDATION_ICD_COUNT_ERROR = "Department.validation.icd.count.error";

    /** <pre>DEPARTMENTS
      * [en] Departments
      * [de] Abteilungen</pre>
      * Attention! this value ('Departments') seems to be also defined under the key CATALOG_DOWNLOAD_DEPARTMENTS!
      */
    public static final String DEPARTMENTS = "Departments";

    /** <pre>DEPARTMENTS_WARD_DATE_FORMAT
      * [en] dd/MM/yyyy HH:mm
      * [de] dd.MM.yyyy HH:mm</pre>
      */
    public static final String DEPARTMENTS_WARD_DATE_FORMAT = "Departments.Ward.DateFormat";

    /** <pre>DESCRIPTION
      * [en] Description
      * [de] Beschreibung</pre>
      * Attention! this value ('Description') seems to be also defined under the key CASE_RESOLVE_RULES_DESCRIPTION!
      */
    public static final String DESCRIPTION = "Description";

    /** <pre>DETAIL_CASE_DATA
      * [de] Detail Falldaten</pre>
      */
    public static final String DETAIL_CASE_DATA = "DetailCaseData";

    /** <pre>DETAILED_VIEW_MAIN_LABEL
      * [en] Details about selected event
      * [de] Details zum ausgewählten Ereignis</pre>
      */
    public static final String DETAILED_VIEW_MAIN_LABEL = "DetailedViewMainLabel";

    /** <pre>DF_VALUE_TOOLTIP
      * [en] {0} ({1} x {2}) x {3} from {4} to {5}
      * [de] {0} ({1} x {2}) x {3} von {4} bis {5}</pre>
      */
    public static final String DF_VALUE_TOOLTIP = "DfValue.tooltip";

    /** <pre>DIAGNOSIS
      * [en] Diagnosis
      * [de] Diagnose</pre>
      * Attention! this value ('Diagnosis') seems to be also defined under the key ACG_INDEX_TYPE_ICD!
      */
    public static final String DIAGNOSIS = "Diagnosis";

    /** <pre>DIAGNOSIS_REF_TYPE_ADDITIONAL_FROM
      * [en] Additional diagnose from
      * [de] Zusatzdiagnose von</pre>
      */
    public static final String DIAGNOSIS_REF_TYPE_ADDITIONAL_FROM = "Diagnosis.refType.AdditionalFrom";

    /** <pre>DIAGNOSIS_REF_TYPE_ADDITIONAL_TO
      * [en] Additional diagnose to selected ICD
      * [de] Zusatzdiagnose zu gewählter ICD</pre>
      */
    public static final String DIAGNOSIS_REF_TYPE_ADDITIONAL_TO = "Diagnosis.refType.AdditionalTo";

    /** <pre>DIAGNOSIS_REF_TYPE_ASTERISK_FROM
      * [en] Asterisk diagnose from
      * [de] Sterndiagnose von</pre>
      */
    public static final String DIAGNOSIS_REF_TYPE_ASTERISK_FROM = "Diagnosis.refType.AsteriskFrom";

    /** <pre>DIAGNOSIS_REF_TYPE_DAGGER_FROM
      * [en] Dagger diagnose from
      * [de] Kreuzdiagnose von</pre>
      */
    public static final String DIAGNOSIS_REF_TYPE_DAGGER_FROM = "Diagnosis.refType.DaggerFrom";

    /** <pre>DIALOG_BATCH_GROUPING
      * [en] Batch-Results
      * [de] Batch-Ergebnisse</pre>
      */
    public static final String DIALOG_BATCH_GROUPING = "Dialog.batch.grouping";

    /** <pre>DIALOG_BATCH_GROUPING_CMIEFF
      * [en] CMI eff.
      * [de] CMI eff.</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_CMIEFF = "Dialog.batch.grouping.cmieff";

    /** <pre>DIALOG_BATCH_GROUPING_CMIEFF_TOOLTIP
      * [en] Sum of CW of all cases, after correction with catalog data
      * [de] Summe aller Case weights aller gegroupten Fälle nach Berücksichtigung aller Zu- oder Abschläge</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_CMIEFF_TOOLTIP = "Dialog.batch.grouping.cmieff.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_CWDIFFNEG
      * [en] CW-Difference negativ
      * [de] CW-Differenz negativ</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_CWDIFFNEG = "Dialog.batch.grouping.cwdiffneg";

    /** <pre>DIALOG_BATCH_GROUPING_CWDIFFNEG_TOOLTIP
      * [en] Sum of max negativ dCW of all cases, computed with rules (Role:{0})
      * [de] Summe über alle Fälle: Durch die Prüfregeln ermittelter maximaler negativer dCW eines Falles (Rolle:{0})</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_CWDIFFNEG_TOOLTIP = "Dialog.batch.grouping.cwdiffneg.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_CWDIFFPOS
      * [en] CW-Difference positiv
      * [de] CW-Differenz positiv</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_CWDIFFPOS = "Dialog.batch.grouping.cwdiffpos";

    /** <pre>DIALOG_BATCH_GROUPING_CWDIFFPOS_TOOLTIP
      * [en] Sum of max positiv dCW of all cases, computed with rules (Role:{0})
      * [de] Summe über alle Fälle: Durch die Prüfregeln ermittelter maximaler positiver dCW eines Falles (Rolle:{0})</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_CWDIFFPOS_TOOLTIP = "Dialog.batch.grouping.cwdiffpos.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_DAYPRECARE
      * [en] Day/Pre-Care
      * [de] teil/vorstationäre</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_DAYPRECARE = "Dialog.batch.grouping.dayprecare";

    /** <pre>DIALOG_BATCH_GROUPING_DAYPRECARE_TOOLTIP
      * [en] Count of pre-care cases
      * [de] Anzahl der Fälle, die nicht vollstationär aufgenommen wurden</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_DAYPRECARE_TOOLTIP = "Dialog.batch.grouping.dayprecare.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_DAYSEXTERN
      * [en] Days extern
      * [de] Belegungstage ausserhalb</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_DAYSEXTERN = "Dialog.batch.grouping.daysextern";

    /** <pre>DIALOG_BATCH_GROUPING_DAYSEXTERN_TOOLTIP
      * [en] Sum of days, which are not considered due to legal regulations
      * [de] entsprechen den Tagen außerhalb der Gültigkeit des KHEntgG, also z.B. BPflV</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_DAYSEXTERN_TOOLTIP = "Dialog.batch.grouping.daysextern.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_DRGRESULT
      * [en] Drg-Result
      * [de] DRG-Ergebnis</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_DRGRESULT = "Dialog.batch.grouping.drgresult";

    /** <pre>DIALOG_BATCH_GROUPING_ERRORDRGPEPP
      * [en] Error DRG/PEPP
      * [de] Fehler DRG/PEPP</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_ERRORDRGPEPP = "Dialog.batch.grouping.errordrgpepp";

    /** <pre>DIALOG_BATCH_GROUPING_ERRORDRGPEPP_TOOLTIP
      * [en] Count of cases, with error DRG or PEPP
      * [de] Anzahl der Fälle, für die ein Fehler DRG oder PEPP  ermittelt wurde</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_ERRORDRGPEPP_TOOLTIP = "Dialog.batch.grouping.errordrgpepp.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_GROUPEDCASES
      * [en] grouped Cases
      * [de] gegroupte Fälle</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_GROUPEDCASES = "Dialog.batch.grouping.groupedcases";

    /** <pre>DIALOG_BATCH_GROUPING_GROUPEDCASES_TOOLTIP
      * [en] gegroupte Fälle
      * [de] gegroupte Fälle</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_GROUPEDCASES_TOOLTIP = "Dialog.batch.grouping.groupedcases.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_INTENSIVCARE
      * [en] Intensivcare
      * [de] Intensivtage</pre>
      * Attention! this value ('Intensivcare') seems to be also defined under the key DIALOG_BATCH_GROUPING_INTENSIVCARE_TOOLTIP!
      */
    public static final String DIALOG_BATCH_GROUPING_INTENSIVCARE = "Dialog.batch.grouping.intensivcare";

    /** <pre>DIALOG_BATCH_GROUPING_INTENSIVCARE_TOOLTIP
      * [en] Intensivcare
      * [de] Intensivtage</pre>
      * Attention! this value ('Intensivcare') seems to be also defined under the key DIALOG_BATCH_GROUPING_INTENSIVCARE!
      */
    public static final String DIALOG_BATCH_GROUPING_INTENSIVCARE_TOOLTIP = "Dialog.batch.grouping.intensivcare.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_KORROGVD
      * [en] corr. HTP
      * [de] korr. OGVD</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_KORROGVD = "Dialog.batch.grouping.korrogvd";

    /** <pre>DIALOG_BATCH_GROUPING_KORROGVD_TOOLTIP
      * [en] Count of cases, which CW differs from catalog value due to a higher HTP
      * [de] Anzahl der Fälle, deren CW auf Grund Überschreitung der OGVD vom Fallpauschalenkatalogwert abweicht</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_KORROGVD_TOOLTIP = "Dialog.batch.grouping.korrogvd.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_KORRTRANS
      * [en] korr. Trans.
      * [de] korr. Verl.</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_KORRTRANS = "Dialog.batch.grouping.korrtrans";

    /** <pre>DIALOG_BATCH_GROUPING_KORRTRANS_TOOLTIP
      * [en] Count of cases, which CW differs from catalog value due to lower MTP on admission- or discharge reason "Transferring"
      * [de] Anzahl der Fälle, deren CW auf Grund einer Unterschreitung der MVD bei Aufnahme- oder Entlassungsgrund „Verlegung“ vom Fallpauschalenkatalogwert abweicht</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_KORRTRANS_TOOLTIP = "Dialog.batch.grouping.korrtrans.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_KORRUGVD
      * [en] corr. LTP
      * [de] korr. UGVD</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_KORRUGVD = "Dialog.batch.grouping.korrugvd";

    /** <pre>DIALOG_BATCH_GROUPING_KORRUGVD_TOOLTIP
      * [en] Count of cases, which CW differs from catalog value due to a lower LTP
      * [de] Anzahl der Fälle, deren CW auf Grund Unterschreitung der UGVD vom Fallpauschalenkatalogwert abweicht</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_KORRUGVD_TOOLTIP = "Dialog.batch.grouping.korrugvd.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_LOS
      * [en] LOS
      * [de] VWD</pre>
      * Attention! this value ('LoS') seems to be also defined under the key LOS!
      */
    public static final String DIALOG_BATCH_GROUPING_LOS = "Dialog.batch.grouping.los";

    /** <pre>DIALOG_BATCH_GROUPING_LOS_TOOLTIP
      * [en] Average LOS for all grouped cases
      * [de] Durchschnittliche Verweildauer aller gegroupten Fälle</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_LOS_TOOLTIP = "Dialog.batch.grouping.los.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_NDI
      * [en] NDI
      * [de] NDI</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_NDI = "Dialog.batch.grouping.ndi";

    /** <pre>DIALOG_BATCH_GROUPING_NDI_TOOLTIP
      * [en] Secondary-Diagnosis-Index (average count of secondary diagnosis/case)
      * [de] Neben-Diagnosen-Index (durchschnittliche Anzahl von Nebendiagnosen/Fall)</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_NDI_TOOLTIP = "Dialog.batch.grouping.ndi.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_NINERDIAG
      * [en] #.9 Diag.
      * [de] #.9 Diag.</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_NINERDIAG = "Dialog.batch.grouping.ninerdiag";

    /** <pre>DIALOG_BATCH_GROUPING_NINERDIAG_TOOLTIP
      * [en] Count of secondary diagnosis, which are coded with end digit of 9
      * [de] Anzahl der Nebendiagnosen in dem Datensatz, die mit der unspezifischen Endziffer 9 verschlüsselt wurden</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_NINERDIAG_TOOLTIP = "Dialog.batch.grouping.ninerdiag.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_NURSINGDAYS
      * [en] Nursingdays
      * [de] Pflegetage</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_NURSINGDAYS = "Dialog.batch.grouping.nursingdays";

    /** <pre>DIALOG_BATCH_GROUPING_NURSINGDAYS_TOOLTIP
      * [en] Sum of LOS from all cases
      * [de] Summe der Verweildauertage aller gegroupten Fälle</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_NURSINGDAYS_TOOLTIP = "Dialog.batch.grouping.nursingdays.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_PCCL
      * [en] PCCL
      * [de] PCCL</pre>
      * Attention! this value ('PCCL') seems to be also defined under the key PCCL! this value ('PCCL') seems to be also defined under the key RULES_TXT_PCCL_DIS!
      */
    public static final String DIALOG_BATCH_GROUPING_PCCL = "Dialog.batch.grouping.pccl";

    /** <pre>DIALOG_BATCH_GROUPING_PCCL_TOOLTIP
      * [en] Average PCCL-value of all cases
      * [de] Durchschnittlicher patientenbezogener  klinischer Komplexitätsgrad aller gegroupten Fälle</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_PCCL_TOOLTIP = "Dialog.batch.grouping.pccl.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_RULES_CHECKRESULTS
      * [en] Checkresult
      * [de] Prüfergebnis</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_RULES_CHECKRESULTS = "Dialog.batch.grouping.rules.checkresults";

    /** <pre>DIALOG_BATCH_GROUPING_RULES_CLUES
      * [en] Clues
      * [de] Hinweise</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_RULES_CLUES = "Dialog.batch.grouping.rules.clues";

    /** <pre>DIALOG_BATCH_GROUPING_RULES_ERROR
      * [en] Error
      * [de] Fehler</pre>
      * Attention! this value ('Error') seems to be also defined under the key TEMPLATE_ERROR_TITLE!
      */
    public static final String DIALOG_BATCH_GROUPING_RULES_ERROR = "Dialog.batch.grouping.rules.error";

    /** <pre>DIALOG_BATCH_GROUPING_RULES_TYP
      * [en] Typ
      * [de] Typ</pre>
      * Attention! this value ('Typ') seems to be also defined under the key RULE_FILTER_DIALOG_RULE_TYPE!
      */
    public static final String DIALOG_BATCH_GROUPING_RULES_TYP = "Dialog.batch.grouping.rules.typ";

    /** <pre>DIALOG_BATCH_GROUPING_RULES_WARNING
      * [en] Warning
      * [de] Warnung</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_RULES_WARNING = "Dialog.batch.grouping.rules.warning";

    /** <pre>DIALOG_BATCH_GROUPING_TOTALCASES
      * [en] Total Cases
      * [de] Fallanzahl ges.</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_TOTALCASES = "Dialog.batch.grouping.totalcases";

    /** <pre>DIALOG_BATCH_GROUPING_TOTALCASES_TOOLTIP
      * [en] Total of all cases in Database (including cases, for which no DRG/PEPP could be computed)
      * [de] Anzahl aller Fälle in der Datenbank (mit teil- und vorstationären Fällen, denen eine DRG/PEPP zugewiesen werden konnte)</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_TOTALCASES_TOOLTIP = "Dialog.batch.grouping.totalcases.tooltip";

    /** <pre>DIALOG_BATCH_GROUPING_UNKCMI
      * [en] unk. CMI
      * [de] unkorr. CMI</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_UNKCMI = "Dialog.batch.grouping.unkcmi";

    /** <pre>DIALOG_BATCH_GROUPING_UNKCMI_TOOLTIP
      * [en] Average CW of all cases before correction with catalog data
      * [de] Durchschnittliches Kostengewicht (CW) aller gegroupten Fälle vor Korrektur durch Zu- oder Abschläge (Werte des Fallpauschalenkatalogs)</pre>
      */
    public static final String DIALOG_BATCH_GROUPING_UNKCMI_TOOLTIP = "Dialog.batch.grouping.unkcmi.tooltip";

    /** <pre>DIALOG_QUESTION_DELETE
      * [en] Do you really want to drop {0} ?
      * [de] Wollen Sie {0} wirklich löschen?</pre>
      */
    public static final String DIALOG_QUESTION_DELETE = "Dialog.question.delete";

    /** <pre>DIFFERENCE
      * [en] Difference
      * [de] Differenz</pre>
      */
    public static final String DIFFERENCE = "Difference";

    /** <pre>DIFFERENCE_CURRENCY
      * [en] Difference {0}
      * [de] Differenz {0}</pre>
      */
    public static final String DIFFERENCE_CURRENCY = "Difference.currency";

    /** <pre>DIFFERENCE_DAYS
      * [en] Difference days
      * [de] Differenz Tage</pre>
      */
    public static final String DIFFERENCE_DAYS = "Difference.days";

    /** <pre>DIR_OPEN_IN_EXPLORER_TEXT
      * [en] Click to select directory in Windows Explorer
      * [de] Klicken um den Ordner im Windows Explorer zu öffnen</pre>
      */
    public static final String DIR_OPEN_IN_EXPLORER_TEXT = "Dir.open.in.explorer.text";

    /** <pre>DISCHARGE
      * [en] Discharge
      * [de] Entlassung</pre>
      * Attention! this value ('Discharge') seems to be also defined under the key ICD_TYPE_DISCHARGE!
      */
    public static final String DISCHARGE = "Discharge";

    /** <pre>DISCHARGE_DATE
      * [en] Date of Discharge (Dis.-Date)
      * [de] Entlassungsdatum (Entl.-Datum)</pre>
      */
    public static final String DISCHARGE_DATE = "DischargeDate";

    /** <pre>DISCHARGE_DATE_BEFORE_ADMISSION_DATE
      * [en] Discharge date is set before the admission date
      * [de] Entlassungsdatum ist vor dem Aufnahmedatum gesetzt</pre>
      */
    public static final String DISCHARGE_DATE_BEFORE_ADMISSION_DATE = "Discharge.date.before.admission.date";

    /** <pre>DISCHARGE_DATE_FROM
      * [en] Dis.-Date from
      * [de] Entl.-Datum von</pre>
      */
    public static final String DISCHARGE_DATE_FROM = "DischargeDate.from";

    /** <pre>DISCHARGE_DATE_TO
      * [en] Dis.-Date to
      * [de] Entl.-Datum bis</pre>
      */
    public static final String DISCHARGE_DATE_TO = "DischargeDate.to";

    /** <pre>DISCHARGE_DEPARTMENT
      * [en] Discharge Department
      * [de] KH interner Kurzname der entl. FAB (entl. FAB (int.))</pre>
      */
    public static final String DISCHARGE_DEPARTMENT = "Discharge.Department";

    /** <pre>DISCHARGE_DEPARTMENT_301
      * [de] §301-Schlüssel der FAB (entl. FAB §301)</pre>
      */
    public static final String DISCHARGE_DEPARTMENT_301 = "Discharge.Department301";

    /** <pre>DISCHARGE_DEPARTMENT_301_NAME
      * [de] §301-Name der FAB (entl. FAB)</pre>
      */
    public static final String DISCHARGE_DEPARTMENT_301_NAME = "Discharge.Department301.Name";

    /** <pre>DISCHARGE_DEPARTMENT_SHORT
      * [en] Discharge Department §. 301 (Dis. 301)
      * [de] Entlassene FAB nach §. 301 (Entl. 301)</pre>
      */
    public static final String DISCHARGE_DEPARTMENT_SHORT = "Discharge.Department.Short";

    /** <pre>DISCHARGE_REASON
      * [en] Discharge Reason (DR12)
      * [de] Entlassungsgrund (Stelle 1 u. 2) (Entl.-Gr.1.u.2.)</pre>
      */
    public static final String DISCHARGE_REASON = "DischargeReason";

    /** <pre>DISCHARGE_REASON_2
      * [en] Discharge Reason 2
      * [de] Entlassungsgrund (Stelle 3) (Entl.-Gr.3)</pre>
      */
    public static final String DISCHARGE_REASON_2 = "DischargeReason2";

    /** <pre>DISCHARGE_REASON_2_ABLE_TO_WORK
      * [en] able to work
      * [de] arbeitsfähig entlassen</pre>
      */
    public static final String DISCHARGE_REASON_2_ABLE_TO_WORK = "Discharge.Reason2.ableToWork";

    /** <pre>DISCHARGE_REASON_2_ABLE_TO_WORK_NEED_RESPIRATION_WEANING
      * [de] arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung</pre>
      */
    public static final String DISCHARGE_REASON_2_ABLE_TO_WORK_NEED_RESPIRATION_WEANING = "Discharge.Reason2.ableToWork.NeedRespirationWeaning";

    /** <pre>DISCHARGE_REASON_2_ABLE_TO_WORK_NO_NEED_RESPIRATION_WEANING
      * [de] arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung</pre>
      */
    public static final String DISCHARGE_REASON_2_ABLE_TO_WORK_NO_NEED_RESPIRATION_WEANING = "Discharge.Reason2.ableToWork.NoNeedRespirationWeaning";

    /** <pre>DISCHARGE_REASON_2_ABLE_TO_WORK_VENTILATED_NO_PRESCRIPTION
      * [de] arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung</pre>
      */
    public static final String DISCHARGE_REASON_2_ABLE_TO_WORK_VENTILATED_NO_PRESCRIPTION = "Discharge.Reason2.ableToWorkVentilated.NoPrescription";

    /** <pre>DISCHARGE_REASON_2_ABLE_TO_WORK_VENTILATED_NO_SPECIFIED
      * [de] arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV</pre>
      */
    public static final String DISCHARGE_REASON_2_ABLE_TO_WORK_VENTILATED_NO_SPECIFIED = "Discharge.Reason2.ableToWorkVentilated.NoSpecified";

    /** <pre>DISCHARGE_REASON_2_NOT_SPECIFIED
      * [en] not specified
      * [de] keine Angabe</pre>
      */
    public static final String DISCHARGE_REASON_2_NOT_SPECIFIED = "Discharge.Reason2.notSpecified";

    /** <pre>DISCHARGE_REASON_2_UNABLE_TO_WORK
      * [en] unable to work
      * [de] arbeitsunfähig entlassen</pre>
      */
    public static final String DISCHARGE_REASON_2_UNABLE_TO_WORK = "Discharge.Reason2.unableToWork";

    /** <pre>DISCHARGE_REASON_CASE_STATEMENTS_WHEN_SWITCHING_BETWEEN_INPATIENT_AND_DAYCARE_TREATMENT
      * [en] Case statements (internal transfer) when switching between in-patient and day-care treatment
      * [de] Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung</pre>
      */
    public static final String DISCHARGE_REASON_CASE_STATEMENTS_WHEN_SWITCHING_BETWEEN_INPATIENT_AND_DAYCARE_TREATMENT = "Discharge.Reason.CaseStatementsWhenSwitchingBetweenInpatientAndDaycareTreatment";

    /** <pre>DISCHARGE_REASON_CHANGES_IN_RESPONSIBILITIES_OF_PAYERS
      * [en] Changes in responsibilities of payers
      * [de] Zuständigkeitswechsel des Kostenträger</pre>
      */
    public static final String DISCHARGE_REASON_CHANGES_IN_RESPONSIBILITIES_OF_PAYERS = "Discharge.Reason.ChangesInResponsibilitiesOfPayers";

    /** <pre>DISCHARGE_REASON_COMPLETED_TREATMENT_AGAINST_MEDICAL_ADVICE
      * [en] completed treatment against medical advice
      * [de] Behandlung gegen ärztlichen Rat beendet</pre>
      */
    public static final String DISCHARGE_REASON_COMPLETED_TREATMENT_AGAINST_MEDICAL_ADVICE = "Discharge.Reason.CompletedTreatmentAgainstMedicalAdvice";

    /** <pre>DISCHARGE_REASON_COMPLETED_TREATMENT_AGAINST_MEDICAL_ADVICE_INPATIENT_TREATMENT
      * [en] completed treatment against medical advice, inpatient treatment
      * [de] Behandlung gegen ärztlichen Rat beendet, nachstationäre Behandlung</pre>
      */
    public static final String DISCHARGE_REASON_COMPLETED_TREATMENT_AGAINST_MEDICAL_ADVICE_INPATIENT_TREATMENT = "Discharge.Reason.CompletedTreatmentAgainstMedicalAdviceInpatientTreatment";

    /** <pre>DISCHARGE_REASON_COMPLETED_TREATMENT_FOR_OTHER_REASONS
      * [en] completed treatment for other reasons
      * [de] Behandlung aus sonstigen Gründen beendet</pre>
      */
    public static final String DISCHARGE_REASON_COMPLETED_TREATMENT_FOR_OTHER_REASONS = "Discharge.Reason.CompletedTreatmentForOtherReasons";

    /** <pre>DISCHARGE_REASON_COMPLETED_TREATMENT_FOR_OTHER_REASONS_INPATIENT_TREATMENT
      * [en] completed treatment for other reasons, inpatient treatment
      * [de] Behandlung aus sonstigen Gründen beendet, nachstationäre Behandlung</pre>
      */
    public static final String DISCHARGE_REASON_COMPLETED_TREATMENT_FOR_OTHER_REASONS_INPATIENT_TREATMENT = "Discharge.Reason.CompletedTreatmentForOtherReasonsInpatientTreatment";

    /** <pre>DISCHARGE_REASON_COMPLETED_TREATMENT_REGULARLY
      * [en] completed treatment regularly
      * [de] Behandlung regulär beendet</pre>
      */
    public static final String DISCHARGE_REASON_COMPLETED_TREATMENT_REGULARLY = "Discharge.Reason.CompletedTreatmentRegularly";

    /** <pre>DISCHARGE_REASON_COMPLETED_WITH_TRANSFER_IN_TEMPORARY_CARE
      * [de] Behandlung regulär beendet, Überleitung in die Übergangspflege</pre>
      */
    public static final String DISCHARGE_REASON_COMPLETED_WITH_TRANSFER_IN_TEMPORARY_CARE = "Discharge.Reason.CompletedWithTransferInTemporaryCare";

    /** <pre>DISCHARGE_REASON_DEATH
      * [en] Death
      * [de] Tod</pre>
      */
    public static final String DISCHARGE_REASON_DEATH = "Discharge.Reason.Death";

    /** <pre>DISCHARGE_REASON_DISMISSAL_AND_SUBSEQUENT_RECOVERY
      * [en] Dismissal and subsequent recovery
      * [de] Entlassung mit nachfolgender Wiederaufnahme</pre>
      */
    public static final String DISCHARGE_REASON_DISMISSAL_AND_SUBSEQUENT_RECOVERY = "Discharge.Reason.DismissalAndSubsequentRecovery";

    /** <pre>DISCHARGE_REASON_DISMISSAL_AT_THE_END_OF_RECORDING_IN_THE_PREVIOUS_YEAR
      * [en] Dismissal at the end of recording in the previous year
      * [de] Entlassung zum Jahresende bei Aufnahme im Vorjahr</pre>
      */
    public static final String DISCHARGE_REASON_DISMISSAL_AT_THE_END_OF_RECORDING_IN_THE_PREVIOUS_YEAR = "Discharge.Reason.DismissalAtTheEndOfRecordingInThePreviousYear";

    /** <pre>DISCHARGE_REASON_DISMISSAL_BEFORE_RESUMING_WITH_RECLASSIFICATION
      * [en] Dismissal before resuming with reclassification
      * [de] Entlassung vor Wiederaufnahme mit Neueinstufung</pre>
      */
    public static final String DISCHARGE_REASON_DISMISSAL_BEFORE_RESUMING_WITH_RECLASSIFICATION = "Discharge.Reason.DismissalBeforeResumingWithReclassification";

    /** <pre>DISCHARGE_REASON_DISMISSAL_BEFORE_RESUMING_WITH_RECLASSIFICATION_FOR_COMPLICATION
      * [en] Dismissal before resuming with reclassification for complication
      * [de] Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation</pre>
      */
    public static final String DISCHARGE_REASON_DISMISSAL_BEFORE_RESUMING_WITH_RECLASSIFICATION_FOR_COMPLICATION = "Discharge.Reason.DismissalBeforeResumingWithReclassificationForComplication";

    /** <pre>DISCHARGE_REASON_DISMISSAL_END_STATION_EQUIVALENT
      * [en] Dismissal from  station equivalent treatment (Department 0004)
      * [de] Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung – für Pseudofachabteilung 0004)</pre>
      */
    public static final String DISCHARGE_REASON_DISMISSAL_END_STATION_EQUIVALENT = "Discharge.Reason.DismissalEndStationEquivalent";

    /** <pre>DISCHARGE_REASON_DISMISSAL_FOR_START_STATION_EQUIVALENT
      * [en] Dismissal into station equivalent treatment
      * [de] Beginn eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung)</pre>
      */
    public static final String DISCHARGE_REASON_DISMISSAL_FOR_START_STATION_EQUIVALENT = "Discharge.Reason.DismissalForStartStationEquivalent";

    /** <pre>DISCHARGE_REASON_DISMISSAL_IN_A_HOSPICE
      * [en] Dismissal in a hospice
      * [de] Entlassung in ein Hospiz</pre>
      */
    public static final String DISCHARGE_REASON_DISMISSAL_IN_A_HOSPICE = "Discharge.Reason.DismissalInA_Hospice";

    /** <pre>DISCHARGE_REASON_DISMISSAL_IN_A_NURSING_FACILITY
      * [en] Dismissal in a nursing facility
      * [de] Entlassung in eine Pflegeeinrichtung</pre>
      */
    public static final String DISCHARGE_REASON_DISMISSAL_IN_A_NURSING_FACILITY = "Discharge.Reason.DismissalInA_NursingFacility";

    /** <pre>DISCHARGE_REASON_DISMISSAL_IN_A_REHABILITATION_FACILITY
      * [en] Dismissal in a rehabilitation facility
      * [de] Entlassung in eine Rehabilitationseinrichtung</pre>
      */
    public static final String DISCHARGE_REASON_DISMISSAL_IN_A_REHABILITATION_FACILITY = "Discharge.Reason.DismissalInA_RehabilitationFacility";

    /** <pre>DISCHARGE_REASON_DISMISSAL_TRANSFER_WITH_BREATHING_1
      * [en] Transfer of a ventilated patient to an organized residential unit
      * [de] Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit</pre>
      */
    public static final String DISCHARGE_REASON_DISMISSAL_TRANSFER_WITH_BREATHING_1 = "Discharge.Reason.DismissalTransferWithBreathing.1";

    /** <pre>DISCHARGE_REASON_DISMISSAL_TRANSFER_WITH_BREATHING_2
      * [en] Treatment ended normally, transferring a ventilated patient to a residential unit
      * [de] Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit</pre>
      */
    public static final String DISCHARGE_REASON_DISMISSAL_TRANSFER_WITH_BREATHING_2 = "Discharge.Reason.DismissalTransferWithBreathing.2";

    /** <pre>DISCHARGE_REASON_EXTERNAL_INSTALLATION_FOR_PSYCHIATRIC_TREATMENT
      * [en] External installation for psychiatric treatment
      * [de] Externe Verlegung zur psychiatrischen Behandlung</pre>
      */
    public static final String DISCHARGE_REASON_EXTERNAL_INSTALLATION_FOR_PSYCHIATRIC_TREATMENT = "Discharge.Reason.ExternalInstallationForPsychiatricTreatment";

    /** <pre>DISCHARGE_REASON_EXTERNAL_TRANSFER_TO_ANOTHER_HOSPITAL_AND_SUBSEQUENT_REDEPLOYMENT_OR_INTERNAL_INSTALLATION_WITH_ALTERNATING_BETWEEN_THE_SCOPES
      * [en] external transfer to another hospital and subsequent redeployment or internal installation with alternating between the scopes of BPflV and KHEntgG and subsequent relocation
      * [de] externe Verlegung in ein anderes Krankenhaus und nachfolgende Rückverlegung oder interne Verlegung mit Wechsel zwischen den Geltungsbereichen der BPflV und des KHEntgG und nachfolgende Rückverlegung</pre>
      */
    public static final String DISCHARGE_REASON_EXTERNAL_TRANSFER_TO_ANOTHER_HOSPITAL_AND_SUBSEQUENT_REDEPLOYMENT_OR_INTERNAL_INSTALLATION_WITH_ALTERNATING_BETWEEN_THE_SCOPES = "Discharge.Reason.ExternalTransferToAnotherHospitalAndSubsequentRedeploymentOrInternalInstallationWithAlternatingBetweenTheScopes";

    /** <pre>DISCHARGE_REASON_INTERNAL_INSTALLATION_WITH_ALTERNATING_BETWEEN_THE_SCOPES
      * [en] Internal installation with alternating between the scopes
      * [de] interne Verlegung mit Wechsel zwischen den Geltungsbereichen</pre>
      */
    public static final String DISCHARGE_REASON_INTERNAL_INSTALLATION_WITH_ALTERNATING_BETWEEN_THE_SCOPES = "Discharge.Reason.InternalInstallationWithAlternatingBetweenTheScopes";

    /** <pre>DISCHARGE_REASON_INTERNAL_RELOCATION
      * [en] Internal relocation
      * [de] Interne Verlegung</pre>
      */
    public static final String DISCHARGE_REASON_INTERNAL_RELOCATION = "Discharge.Reason.InternalRelocation";

    /** <pre>DISCHARGE_REASON_LAYING_TO_ANOTHER_HOSPITAL_COOPERATION
      * [en] Laying to another hospital cooperation
      * [de] Verlegung in ein anderes Krankenhaus i.R.e. Kooperation</pre>
      */
    public static final String DISCHARGE_REASON_LAYING_TO_ANOTHER_HOSPITAL_COOPERATION = "Discharge.Reason.LayingToAnotherHospitalCooperation";

    /** <pre>DISCHARGE_REASON_RELOCATION
      * [en] relocation
      * [de] Rückverlegung</pre>
      */
    public static final String DISCHARGE_REASON_RELOCATION = "Discharge.Reason.Relocation";

    /** <pre>DISCHARGE_REASON_START_EXTERNAL_STAY_WITH_ABSENCE_THROUGH_MIDNIGHT
      * [en] Start external stay with absence through midnight
      * [de] Beginn externer Aufenthalt mit Abwesenheit über Mitternacht</pre>
      */
    public static final String DISCHARGE_REASON_START_EXTERNAL_STAY_WITH_ABSENCE_THROUGH_MIDNIGHT = "Discharge.Reason.StartExternalStayWithAbsenceThroughMidnight";

    /** <pre>DISCHARGE_REASON_TERMINATION_EXTERNAL_STAY_WITH_ABSENCE_THROUGH_MIDNIGHT
      * [en] Termination external stay with absence through midnight
      * [de] Beendigung externer Aufenthalt mit Abwesenheit über Mitternacht</pre>
      */
    public static final String DISCHARGE_REASON_TERMINATION_EXTERNAL_STAY_WITH_ABSENCE_THROUGH_MIDNIGHT = "Discharge.Reason.TerminationExternalStayWithAbsenceThroughMidnight";

    /** <pre>DISCHARGE_REASON_TRANSFER_TO_ANOTHER_HOSPITAL
      * [en] Transfer to another hospital
      * [de] Verlegung in ein anderes Krankenhaus</pre>
      */
    public static final String DISCHARGE_REASON_TRANSFER_TO_ANOTHER_HOSPITAL = "Discharge.Reason.TransferToAnotherHospital";

    /** <pre>DISCHARGE_REASON_TREATMENT_TERMINATE_REGULARLY_PROVIDED_INPATIENT_TREATMENT
      * [en] Treatment terminate regularly provided inpatient treatment
      * [de] Behandlung regulär beendet, nachstationäre Behandlung vorgesehen</pre>
      */
    public static final String DISCHARGE_REASON_TREATMENT_TERMINATE_REGULARLY_PROVIDED_INPATIENT_TREATMENT = "Discharge.Reason.TreatmentTerminateRegularlyProvidedInpatientTreatment";

    /** <pre>DISCHARGE_WEEKDAY
      * [en] Discharge Date Weekday (Dis. Day)
      * [de] Entlassungsdatum Wochentag (Entl. WT)</pre>
      */
    public static final String DISCHARGE_WEEKDAY = "Discharge.Weekday";

    /** <pre>DOCTOR_IDENT
      * [en] Doctor Identifier
      * [de] Doctor Identifier</pre>
      */
    public static final String DOCTOR_IDENT = "Doctor.ident";

    /** <pre>DOCTOR_INDENT
      * [de] IKZ einweis. Arzt (IKZ einweis. Arzt)</pre>
      */
    public static final String DOCTOR_INDENT = "Doctor.indent";

    /** <pre>DOCUMENT
      * [en] Document
      * [de] Dokument</pre>
      * Attention! this value ('Document') seems to be also defined under the key EVENT_NAME_DOCUMENT!
      */
    public static final String DOCUMENT = "Document";

    /** <pre>DOCUMENT_ADD
      * [en] Add Document
      * [de] Dokument hinzufügen</pre>
      * Attention! this value ('add Document') seems to be also defined under the key DOCUMENT_CREATE!
      */
    public static final String DOCUMENT_ADD = "Document.add";

    /** <pre>DOCUMENT_ADDED_TOOLTIP
      * [en] Open this Document
      * [de] Öffnen Sie dieses Dokument</pre>
      */
    public static final String DOCUMENT_ADDED_TOOLTIP = "Document.Added.Tooltip";

    /** <pre>DOCUMENT_CREATE
      * [en] add Document
      * [de] Dokument hinzufügen</pre>
      * Attention! this value ('Add Document') seems to be also defined under the key DOCUMENT_ADD!
      */
    public static final String DOCUMENT_CREATE = "Document.create";

    /** <pre>DOCUMENT_DATE
      * [de] Dokumentendatum</pre>
      */
    public static final String DOCUMENT_DATE = "Document.date";

    /** <pre>DOCUMENT_LOCATION
      * [en] location
      * [de] Ort</pre>
      */
    public static final String DOCUMENT_LOCATION = "Document.location";

    /** <pre>DOCUMENT_NAME
      * [en] Document name
      * [de] Dokumentenname</pre>
      */
    public static final String DOCUMENT_NAME = "Document.name";

    /** <pre>DOCUMENT_PATH
      * [en] Document path
      * [de] Dokumentenpfad</pre>
      */
    public static final String DOCUMENT_PATH = "Document.path";

    /** <pre>DOCUMENT_REMOVED_TOOLTIP
      * [en] This Document is removed
      * [de] Dieses Dokument wird entfernt</pre>
      */
    public static final String DOCUMENT_REMOVED_TOOLTIP = "Document.Removed.Tooltip";

    /** <pre>DOCUMENT_SIZE
      * [en] Document size
      * [de] Dokumentgröße</pre>
      */
    public static final String DOCUMENT_SIZE = "Document.size";

    /** <pre>DOCUMENT_TYPE
      * [en] Document type
      * [de] Dokumententyp</pre>
      */
    public static final String DOCUMENT_TYPE = "Document.type";

    /** <pre>DOCUMENT_TYPE_MDK_REPORT
      * [en] MD Report
      * [de] MD-Gutachten</pre>
      */
    public static final String DOCUMENT_TYPE_MDK_REPORT = "DocumentType.MdkReport";

    /** <pre>DOCUMENT_TYPES
      * [de] Dokumententypen</pre>
      */
    public static final String DOCUMENT_TYPES = "Document.types";

    /** <pre>DOCUMENTATION
      * [en] Documentation
      * [de] Dokumentation</pre>
      */
    public static final String DOCUMENTATION = "Documentation";

    /** <pre>DOCUMENTATION_CASE_EVALUATION
      * [en] Case evaluation
      * [de] Fallbeurteilung</pre>
      */
    public static final String DOCUMENTATION_CASE_EVALUATION = "Documentation.case.evaluation";

    /** <pre>DOCUMENTATION_CASE_EVALUATION_TEXT
      * [en] Notes can be placed here for the case evaluation.These notes will be shown in the case report.
      * [de] Hier können Bemerkungen zu der Beurteilung des Falls angegeben werden.Diese werden automatisch in einen neuen Fallreport übernommen.</pre>
      */
    public static final String DOCUMENTATION_CASE_EVALUATION_TEXT = "Documentation.case.evaluation.text";

    /** <pre>DOCUMENTATION_FULL_RISK
      * [en] Estimated Full Risk in Percent
      * [de] Risiko in % (ges.) (Risiko in % (ges.))</pre>
      */
    public static final String DOCUMENTATION_FULL_RISK = "Documentation.full.risk";

    /** <pre>DOCUMENTATION_FULL_WASTE
      * [en] Estimated Full Waste in Euro
      * [de] Verlustvol. in € (ges.) (Verlustvol. in € (ges.))</pre>
      */
    public static final String DOCUMENTATION_FULL_WASTE = "Documentation.full.waste";

    /** <pre>DOCUMENTATION_MENU_IS_ACTIVE
      * [en] Is active
      * [de] Ist Aktiv</pre>
      */
    public static final String DOCUMENTATION_MENU_IS_ACTIVE = "Documentation.menu.isActive";

    /** <pre>DOCUMENTATION_MENU_SET_ACTIVE
      * [en] Set active
      * [de] Auf Aktiv setzen</pre>
      */
    public static final String DOCUMENTATION_MENU_SET_ACTIVE = "Documentation.menu.setActive";

    /** <pre>DOCUMENTATION_NO_RISK_CONTENT
      * [en] No Risk Area Selected
      * [de] kein Risikobereich ausgewählt</pre>
      */
    public static final String DOCUMENTATION_NO_RISK_CONTENT = "Documentation.no.risk.content";

    /** <pre>DOCUMENTATION_RISK
      * [en] Estimated Risk in Percent
      * [de] Risiko in % (Risiko in %)</pre>
      */
    public static final String DOCUMENTATION_RISK = "Documentation.risk";

    /** <pre>DOCUMENTATION_RISK_AREA
      * [en] Risk Areas
      * [de] Risikobereiche</pre>
      */
    public static final String DOCUMENTATION_RISK_AREA = "Documentation.risk.area";

    /** <pre>DOCUMENTATION_RISK_DESCRIPTION_TEXT_1
      * [en] Hier können Sie die Risiken und Verlustvolumen der eventuellen MD -Anfrage/-Kürzung abgeben.
      * [de] Hier können Sie die Risiken und Verlustvolumen der eventuellen MD-Anfrage/-Kürzung angeben.</pre>
      */
    public static final String DOCUMENTATION_RISK_DESCRIPTION_TEXT_1 = "Documentation.risk.description.text1";

    /** <pre>DOCUMENTATION_RISK_DESCRIPTION_TEXT_2
      * [en] Die auf dem Basis der Regelverletzungen geschätzte Werte sind in den grauen Felder vorgegeben.
      * [de] Die auf der Basis der Regelverletzungen geschätzten Werte sind in den grauen Felder vorgegeben.</pre>
      */
    public static final String DOCUMENTATION_RISK_DESCRIPTION_TEXT_2 = "Documentation.risk.description.text2";

    /** <pre>DOCUMENTATION_RISK_FROM_RULES
      * [en] From Rules
      * [de] Aus Regelverletzungen</pre>
      */
    public static final String DOCUMENTATION_RISK_FROM_RULES = "Documentation.risk.from.rules";

    /** <pre>DOCUMENTATION_RISK_FULL_RISK
      * [en] Full Risk
      * [de] Gesamtrisiko</pre>
      */
    public static final String DOCUMENTATION_RISK_FULL_RISK = "Documentation.risk.full.risk";

    /** <pre>DOCUMENTATION_RISK_SET
      * [en] Risks set
      * [de] Risiken gesetzt</pre>
      */
    public static final String DOCUMENTATION_RISK_SET = "Documentation.risk.set";

    /** <pre>DOCUMENTATION_TYPE_REVIEW
      * [en] Case review
      * [de] Fallbeurteilung</pre>
      */
    public static final String DOCUMENTATION_TYPE_REVIEW = "Documentation.type.review";

    /** <pre>DOCUMENTATION_TYPE_RISK_REVIEW
      * [en] Risk review
      * [de] Risikobeurteilung</pre>
      */
    public static final String DOCUMENTATION_TYPE_RISK_REVIEW = "Documentation.type.risk.review";

    /** <pre>DOCUMENTATION_WASTE
      * [en] Estimated Waste in Euro
      * [de] Verlustvol. in € (Verlustvol. in €)</pre>
      */
    public static final String DOCUMENTATION_WASTE = "Documentation.waste";

    /** <pre>DRAFT_TYPES
      * [en] Draft types
      * [de] Vorlagen</pre>
      */
    public static final String DRAFT_TYPES = "Draft.types";

    /** <pre>DRG
      * [en] DRG
      * [de] Diagnosebezogene Fallgruppen (DRG)</pre>
      * Attention! this value ('DRG') seems to be also defined under the key CASE_RESOLVE_DRG! this value ('DRG') seems to be also defined under the key CASE_TYPE_DRG! this value ('DRG') seems to be also defined under the key DRG_SHORTCUT! this value ('DRG') seems to be also defined under the key FEE_GROUP_DRG! this value ('DRG') seems to be also defined under the key ICD_TYPE_DRG! this value ('DRG') seems to be also defined under the key RULES_DRG!
      */
    public static final String DRG = "DRG";

    /** <pre>DRG_AND_PEPP_COLUMN
      * [de] DRG/PEPP (DRG/PEPP)</pre>
      */
    public static final String DRG_AND_PEPP_COLUMN = "Drg.and.pepp.column";

    /** <pre>DRG_CASE_DAY_CARE
      * [en] DRG case with day care admission reason
      * [de] Teil- oder vorstationärer DRG - Fall</pre>
      */
    public static final String DRG_CASE_DAY_CARE = "Drg.case.day.care";

    /** <pre>DRG_CATALOG
      * [en] DRG catalog
      * [de] DRG Katalog</pre>
      */
    public static final String DRG_CATALOG = "Drg.catalog";

    /** <pre>DRG_CODE
      * [en] DRG-Code
      * [de] DRG-Code</pre>
      */
    public static final String DRG_CODE = "Drg.code";

    /** <pre>DRG_COLUMN
      * [de] DRG (DRG)</pre>
      */
    public static final String DRG_COLUMN = "Drg.column";

    /** <pre>DRG_CORR_TYPE_DEDUCTION
      * [en] Deduction
      * [de] Abzug</pre>
      * Attention! this value ('Deduction') seems to be also defined under the key DEDUCTION!
      */
    public static final String DRG_CORR_TYPE_DEDUCTION = "Drg.CorrType.Deduction";

    /** <pre>DRG_CORR_TYPE_DEDUCTION_TRANSFER
      * [en] Deduction Transfer
      * [de] Abzug Verlegung</pre>
      */
    public static final String DRG_CORR_TYPE_DEDUCTION_TRANSFER = "Drg.CorrType.DeductionTransfer";

    /** <pre>DRG_CORR_TYPE_DEDUCTION_TRANSFER_ADMISSION
      * [en] Deduction Admission Transfer
      * [de] Abzug Aufnahme Verlegung</pre>
      */
    public static final String DRG_CORR_TYPE_DEDUCTION_TRANSFER_ADMISSION = "Drg.CorrType.DeductionTransferAdmission";

    /** <pre>DRG_CORR_TYPE_DEDUCTION_TRANSFER_DISCHARGE
      * [en] Deduction Discharge Transfer
      * [de] Abzug Entlassung Verlegung</pre>
      */
    public static final String DRG_CORR_TYPE_DEDUCTION_TRANSFER_DISCHARGE = "Drg.CorrType.DeductionTransferDischarge";

    /** <pre>DRG_CORR_TYPE_NO
      * [en] No
      * [de] Nein</pre>
      * Attention! this value ('No') seems to be also defined under the key CONFIRMATION_NO!
      */
    public static final String DRG_CORR_TYPE_NO = "Drg.CorrType.No";

    /** <pre>DRG_CORR_TYPE_SURCHARGE
      * [en] Surcharge
      * [de] Zuschlag</pre>
      * Attention! this value ('Surcharge') seems to be also defined under the key SURCHARGE!
      */
    public static final String DRG_CORR_TYPE_SURCHARGE = "Drg.CorrType.Surcharge";

    /** <pre>DRG_DATA
      * [en] DRG-Data
      * [de] DRG-Daten</pre>
      */
    public static final String DRG_DATA = "Drg.data";

    /** <pre>DRG_EXTERN
      * [en] DRG KIS
      * [de] DRG KIS</pre>
      */
    public static final String DRG_EXTERN = "Drg.extern";

    /** <pre>DRG_LOCAL
      * [en] DRG CPX
      * [de] DRG CPX</pre>
      */
    public static final String DRG_LOCAL = "Drg.local";

    /** <pre>DRG_PARTITION_MEDICAL
      * [en] medical
      * [de] medizinisch</pre>
      */
    public static final String DRG_PARTITION_MEDICAL = "DrgPartition.Medical";

    /** <pre>DRG_PARTITION_OTHER
      * [en] other
      * [de] andere</pre>
      * Attention! this value ('Other') seems to be also defined under the key CASE_TYPE_OTHER! this value ('Other') seems to be also defined under the key REQUEST_TYPE_OTHER! this value ('Other') seems to be also defined under the key RISK_AREA_OTHER!
      */
    public static final String DRG_PARTITION_OTHER = "DrgPartition.Other";

    /** <pre>DRG_PARTITION_SURGICAL
      * [en] surgical
      * [de] operative</pre>
      */
    public static final String DRG_PARTITION_SURGICAL = "DrgPartition.Surgical";

    /** <pre>DRG_SHORTCUT
      * [en] DRG
      * [de] DRG</pre>
      * Attention! this value ('DRG') seems to be also defined under the key CASE_RESOLVE_DRG! this value ('DRG') seems to be also defined under the key CASE_TYPE_DRG! this value ('DRG') seems to be also defined under the key DRG! this value ('DRG') seems to be also defined under the key FEE_GROUP_DRG! this value ('DRG') seems to be also defined under the key ICD_TYPE_DRG! this value ('DRG') seems to be also defined under the key RULES_DRG!
      */
    public static final String DRG_SHORTCUT = "Drg.shortcut";

    /** <pre>DRG_TEXT
      * [en] DRG-Text
      * [de] DRG-Text</pre>
      */
    public static final String DRG_TEXT = "Drg.text";

    /** <pre>DURATION_DECLARATION
      * [en] Declaration
      * [de] Angabe</pre>
      */
    public static final String DURATION_DECLARATION = "Duration.declaration";

    /** <pre>DURATION_FROM
      * [en] from
      * [de] von</pre>
      * Attention! this value ('From') seems to be also defined under the key INPUT_NUMBER_FROM!
      */
    public static final String DURATION_FROM = "Duration.from";

    /** <pre>DURATION_TIME
      * [en] time
      * [de] Uhrzeit</pre>
      */
    public static final String DURATION_TIME = "Duration.time";

    /** <pre>DURATION_TO
      * [en] to
      * [de] Ablauf bis</pre>
      * Attention! this value ('To') seems to be also defined under the key INPUT_NUMBER_TO!
      */
    public static final String DURATION_TO = "Duration.to";

    /** <pre>EDIT
      * [en] Edit
      * [de] Bearbeiten</pre>
      */
    public static final String EDIT = "Edit";

    /** <pre>ERROR
      * [en] Error (E)
      * [de] Fehler (F)</pre>
      */
    public static final String ERROR = "Error";

    /** <pre>ERROR_COULD_NOT_DELETE
      * [en] Could not delete item!
      * [de] Das ausgewählte Element konnte nicht gelöscht werden!</pre>
      */
    public static final String ERROR_COULD_NOT_DELETE = "Error.couldNotDelete";

    /** <pre>ERROR_OCCURED
      * [en] Error occured, please try again
      * [de] Ein Fehler ist aufgetreten, versuchen Sie es bitte erneut</pre>
      */
    public static final String ERROR_OCCURED = "ErrorOccured";

    /** <pre>ERROR_VERSION_COULD_NOT_CREATE
      * [en] A new version could not be created!
      * [de] Es konnte keine neue Version angelegt werden!</pre>
      */
    public static final String ERROR_VERSION_COULD_NOT_CREATE = "Error.Version.CouldNotCreate";

    /** <pre>ERROR_VERSION_COULD_NOT_REMOVE
      * [en] this version could not be removed!
      * [de] Die Version konnte nicht entfernt werden!</pre>
      */
    public static final String ERROR_VERSION_COULD_NOT_REMOVE = "Error.Version.CouldNotRemove";

    /** <pre>EVENT_NAME_ACTION
      * [en] Action
      * [de] Aktion</pre>
      * Attention! this value ('Action') seems to be also defined under the key ACTION_SUBJECT!
      */
    public static final String EVENT_NAME_ACTION = "Event.Name.Action";

    /** <pre>EVENT_NAME_CASE
      * [en] Case
      * [de] Fall</pre>
      * Attention! this value ('Case') seems to be also defined under the key CASE!
      */
    public static final String EVENT_NAME_CASE = "Event.Name.Case";

    /** <pre>EVENT_NAME_DOCUMENT
      * [en] Document
      * [de] Dokument</pre>
      * Attention! this value ('Document') seems to be also defined under the key DOCUMENT!
      */
    public static final String EVENT_NAME_DOCUMENT = "Event.Name.Document";

    /** <pre>EVENT_NAME_INKA
      * [en] INKA Message
      * [de] INKA-Nachricht</pre>
      */
    public static final String EVENT_NAME_INKA = "Event.Name.Inka";

    /** <pre>EVENT_NAME_KAIN
      * [en] KAIN Message
      * [de] KAIN-Nachricht</pre>
      */
    public static final String EVENT_NAME_KAIN = "Event.Name.Kain";

    /** <pre>EVENT_NAME_PATIENT
      * [en] Patient
      * [de] Patient</pre>
      * Attention! this value ('Patient') seems to be also defined under the key PATIENT!
      */
    public static final String EVENT_NAME_PATIENT = "Event.Name.Patient";

    /** <pre>EVENT_NAME_PROCESS
      * [en] Process
      * [de] Vorgang</pre>
      */
    public static final String EVENT_NAME_PROCESS = "Event.Name.Process";

    /** <pre>EVENT_NAME_PROCESS_FINALISATION
      * [en] Process Finalisation
      * [de] Vorgangsabschluss</pre>
      * Attention! this value ('Process finalisation') seems to be also defined under the key PROCESS_FINALISATION!
      */
    public static final String EVENT_NAME_PROCESS_FINALISATION = "Event.Name.ProcessFinalisation";

    /** <pre>EVENT_NAME_REMINDER
      * [en] Reminder
      * [de] Wiedervorlage</pre>
      * Attention! this value ('Reminder') seems to be also defined under the key REMINDER_SUBJECT!
      */
    public static final String EVENT_NAME_REMINDER = "Event.Name.Reminder";

    /** <pre>EVENT_NAME_REQUEST
      * [en] Request
      * [de] Anfrage</pre>
      * Attention! this value ('Request') seems to be also defined under the key PLACE_OF_REG_REQUEST!
      */
    public static final String EVENT_NAME_REQUEST = "Event.Name.Request";

    /** <pre>EVENT_OPERATION_CHANGE_ASSIGNED_USER
      * [en] Change assigned user
      * [de] Bearbeiter ändern</pre>
      */
    public static final String EVENT_OPERATION_CHANGE_ASSIGNED_USER = "Event.Operation.ChangeAssignedUser";

    /** <pre>EVENT_OPERATION_CREATE
      * [en] Create
      * [de] Anlegen</pre>
      * Attention! this value ('Create') seems to be also defined under the key CREATE!
      */
    public static final String EVENT_OPERATION_CREATE = "Event.Operation.Create";

    /** <pre>EVENT_OPERATION_CREATE_ITEM
      * [en] Create {0}
      * [de] {0} anlegen</pre>
      */
    public static final String EVENT_OPERATION_CREATE_ITEM = "Event.Operation.CreateItem";

    /** <pre>EVENT_OPERATION_EDIT
      * [en] Change
      * [de] Ändern</pre>
      * Attention! this value ('change') seems to be also defined under the key MENU_CHANGE!
      */
    public static final String EVENT_OPERATION_EDIT = "Event.Operation.Edit";

    /** <pre>EVENT_OPERATION_EDIT_ITEM
      * [en] Change {0}
      * [de] {0} editieren</pre>
      */
    public static final String EVENT_OPERATION_EDIT_ITEM = "Event.Operation.EditItem";

    /** <pre>EVENT_OPERATION_OPEN
      * [en] Open
      * [de] Öffnen</pre>
      * Attention! this value ('open') seems to be also defined under the key PROCESS_STATUS_REMINDER_OPEN! this value ('open') seems to be also defined under the key REMINDER_UNFINISHED_STATUS! this value ('open') seems to be also defined under the key WORKFLOW_STATE_OPEN!
      */
    public static final String EVENT_OPERATION_OPEN = "Event.Operation.Open";

    /** <pre>EVENT_OPERATION_OPEN_ITEM
      * [en] Open {0}
      * [de] {0} öffnen</pre>
      */
    public static final String EVENT_OPERATION_OPEN_ITEM = "Event.Operation.OpenItem";

    /** <pre>EVENT_OPERATION_REMOVE
      * [en] Remove
      * [de] Entfernen</pre>
      * Attention! this value ('Remove') seems to be also defined under the key CATALOG_DIALOG_REMOVE!
      */
    public static final String EVENT_OPERATION_REMOVE = "Event.Operation.Remove";

    /** <pre>EVENT_OPERATION_REMOVE_ITEM
      * [en] Remove {0}
      * [de] {0} entfernen</pre>
      */
    public static final String EVENT_OPERATION_REMOVE_ITEM = "Event.Operation.RemoveItem";

    /** <pre>EVENT_REMOVED
      * [en] {0} was removed
      * [de] {0} wurde gelöscht</pre>
      */
    public static final String EVENT_REMOVED = "Event.Removed";

    /** <pre>EVENT_TYPE
      * [en] Event type
      * [de] Ereignistyp</pre>
      */
    public static final String EVENT_TYPE = "EventType";

    /** <pre>EVENT_TYPE_ACTION_ADDED
      * [en] Action of type {0} is generated (Added actions)
      * [de] Aktion angelegt: Typ: {0} (Aktion angelegt)</pre>
      */
    public static final String EVENT_TYPE_ACTION_ADDED = "EventType.Action.Added";

    /** <pre>EVENT_TYPE_ACTION_CHANGED
      * [en] Action of type {0} is changed (Changed actions)
      * [de] Aktion geändert: Typ: {0} (Aktion geändert)</pre>
      */
    public static final String EVENT_TYPE_ACTION_CHANGED = "EventType.Action.Changed";

    /** <pre>EVENT_TYPE_ACTION_REMOVED
      * [en] Action {0} was removed (Removed actions)
      * [de] Aktion gelöscht: Typ: {0} (Aktion gelöscht)</pre>
      */
    public static final String EVENT_TYPE_ACTION_REMOVED = "EventType.Action.Removed";

    /** <pre>EVENT_TYPE_CASE_ADDED
      * [en] Case of type {0} is added: Case number: {1} (Added cases)
      * [de] Fall hinzugefügt: Typ: {0}, Fallnummer: {1} (Fall hinzugefügt)</pre>
      */
    public static final String EVENT_TYPE_CASE_ADDED = "EventType.Case.Added";

    /** <pre>EVENT_TYPE_CASE_REMOVED
      * [en] case with number {1} has been removed (Removed cases)
      * [de] Fall entfernt: Fallnummer: {1} (Fall entfernt)</pre>
      */
    public static final String EVENT_TYPE_CASE_REMOVED = "EventType.Case.Removed";

    /** <pre>EVENT_TYPE_DOCUMENT_ADDED
      * [en] Document added: type {0}, file name {1} (Added documents)
      * [de] Dokument hinzugefügt: Typ: {0}, Dateiname: {1} (Dokumente hinzugefügt)</pre>
      */
    public static final String EVENT_TYPE_DOCUMENT_ADDED = "EventType.Document.Added";

    /** <pre>EVENT_TYPE_DOCUMENT_REMOVED
      * [en] document of type {0} with document name {1} has been removed (Removed documents)
      * [de] Dokument entfernt: Typ: {0}, Dateinamen: {1} (Dokument entfernt)</pre>
      */
    public static final String EVENT_TYPE_DOCUMENT_REMOVED = "EventType.Document.Removed";

    /** <pre>EVENT_TYPE_INKA_CANCELLED
      * [en] INKA message cancelled (INKA message cancelled)
      * [de] INKA Nachricht storniert (INKA Nachricht storniert)</pre>
      */
    public static final String EVENT_TYPE_INKA_CANCELLED = "EventType.Inka.Cancelled";

    /** <pre>EVENT_TYPE_INKA_SENT
      * [en] INKA message sent (INKA message sent)
      * [de] INKA Nachricht gesendet (INKA Nachricht gesendet)</pre>
      */
    public static final String EVENT_TYPE_INKA_SENT = "EventType.Inka.Sent";

    /** <pre>EVENT_TYPE_INKA_STORED
      * [en] INKA message stored (INKA message stored)
      * [de] INKA Nachricht gespeichert (INKA Nachricht gespeichert)</pre>
      */
    public static final String EVENT_TYPE_INKA_STORED = "EventType.Inka.Stored";

    /** <pre>EVENT_TYPE_INKA_UPDATED
      * [en] INKA message updated (INKA message updated)
      * [de] INKA Nachricht aktualisiert (INKA Nachricht aktualisiert)</pre>
      */
    public static final String EVENT_TYPE_INKA_UPDATED = "EventType.Inka.Updated";

    /** <pre>EVENT_TYPE_KAIN_RECEIVED
      * [en] KAIN message received (KAIN message received)
      * [de] KAIN Nachricht eingegangen (KAIN Nachricht eingegangen)</pre>
      */
    public static final String EVENT_TYPE_KAIN_RECEIVED = "EventType.Kain.Received";

    /** <pre>EVENT_TYPE_PROCESS_CLOSED
      * [en] Process closed (Closed processes)
      * [de] Vorgang abgeschlossen (Vorgang abgeschlossen)</pre>
      */
    public static final String EVENT_TYPE_PROCESS_CLOSED = "EventType.Process.Closed";

    /** <pre>EVENT_TYPE_PROCESS_CONTINUED
      * [de] Vorgang fortgesetzt (Vorgang fortgesetzt)</pre>
      */
    public static final String EVENT_TYPE_PROCESS_CONTINUED = "EventType.Process.Continued";

    /** <pre>EVENT_TYPE_PROCESS_PAUSED
      * [de] Vorgang pausiert (Vorgang pausiert)</pre>
      */
    public static final String EVENT_TYPE_PROCESS_PAUSED = "EventType.Process.Paused";

    /** <pre>EVENT_TYPE_PROCESS_REOPENED
      * [en] Process reopened (Process reopened)
      * [de] Vorgang erneut geöffnet (Vorgang erneut geöffnet)</pre>
      */
    public static final String EVENT_TYPE_PROCESS_REOPENED = "EventType.Process.Reopened";

    /** <pre>EVENT_TYPE_PROCESS_SUBJECT_CHANGED
      * [en] Process subject changed (Changed process-subjects)
      * [de] Vorgangsart geändert (Vorgangsart geändert)</pre>
      */
    public static final String EVENT_TYPE_PROCESS_SUBJECT_CHANGED = "EventType.Process.Subject.Changed";

    /** <pre>EVENT_TYPE_PROCESS_SUBJECT_CHANGED_DESCRIPTION
      * [en] Process subject changed from: {0} to: {1}
      * [de] Vorgangsart geändert von {0} auf {1}</pre>
      */
    public static final String EVENT_TYPE_PROCESS_SUBJECT_CHANGED_DESCRIPTION = "EventType.Process.Subject.Changed.description";

    /** <pre>EVENT_TYPE_PROCESS_SUBJECT_DELETE_DESCRIPTION
      * [de] Vorgangstyp {0} entfernt</pre>
      */
    public static final String EVENT_TYPE_PROCESS_SUBJECT_DELETE_DESCRIPTION = "EventType.Process.Subject.delete.description";

    /** <pre>EVENT_TYPE_PROCESS_SUBJECT_SET_DESCRIPTION
      * [en] {1} set as process-subject
      * [de] {1} als Vorgangstyp gesetzt</pre>
      */
    public static final String EVENT_TYPE_PROCESS_SUBJECT_SET_DESCRIPTION = "EventType.Process.Subject.Set.description";

    /** <pre>EVENT_TYPE_PROCESS_USER_CHANGED
      * [en] Process user changed (Changed process-users)
      * [de] Vorgangs-Bearbeiter geändert (Vorgangs-Bearbeiter geändert)</pre>
      */
    public static final String EVENT_TYPE_PROCESS_USER_CHANGED = "EventType.Process.User.Changed";

    /** <pre>EVENT_TYPE_PROCESS_USER_CHANGED_DESCRIPTION
      * [en] Process user changed from: {0} to: {1}
      * [de] Vorgangs-Bearbeiter geändert von {0} auf {1}</pre>
      */
    public static final String EVENT_TYPE_PROCESS_USER_CHANGED_DESCRIPTION = "EventType.Process.User.Changed.description";

    /** <pre>EVENT_TYPE_PROCESS_USER_DELETE_DESCRIPTION
      * [de] Bearbeiter {0} entfernt</pre>
      */
    public static final String EVENT_TYPE_PROCESS_USER_DELETE_DESCRIPTION = "EventType.Process.User.delete.description";

    /** <pre>EVENT_TYPE_PROCESS_USER_SET_DESCRIPTION
      * [en] {1} set as process-user
      * [de] {1} als Bearbeiter gesetzt</pre>
      */
    public static final String EVENT_TYPE_PROCESS_USER_SET_DESCRIPTION = "EventType.Process.User.Set.description";

    /** <pre>EVENT_TYPE_REMINDER_ASSIGNED
      * [en] Reminder assigned (Assigned reminders)
      * [de] Wiedervorlage zugewiesen (Wiedervorlage zugewiesen)</pre>
      */
    public static final String EVENT_TYPE_REMINDER_ASSIGNED = "EventType.Reminder.Assigned";

    /** <pre>EVENT_TYPE_REMINDER_CHANGED
      * [en] Reminder changed: type {0}, due date: {1}, assigned to: {2}, status: {3} (Changed reminders)
      * [de] Wiedervorlage geändert:  Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3} (Wiedervorlage geändert)</pre>
      */
    public static final String EVENT_TYPE_REMINDER_CHANGED = "EventType.Reminder.Changed";

    /** <pre>EVENT_TYPE_REMINDER_CREATED
      * [en] Reminder created: type {0}, due date: {1}, assigned to: {2}, status: {3} (Created reminders)
      * [de] Wiedervorlage angelegt: Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3} (Wiedervorlage angelegt)</pre>
      */
    public static final String EVENT_TYPE_REMINDER_CREATED = "EventType.Reminder.Created";

    /** <pre>EVENT_TYPE_REMINDER_EXPIRES
      * [en] Reminder Expired: type {0}, due date: {1}, assigned to: {2}, status: {3} (Expired reminders)
      * [de] Wiedervorlage abgelaufen: Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3} (Wiedervorlage abgelaufen)</pre>
      */
    public static final String EVENT_TYPE_REMINDER_EXPIRES = "EventType.Reminder.Expires";

    /** <pre>EVENT_TYPE_REMINDER_REMOVED
      * [en] Reminder {0} was removed (Removed reminders)
      * [de] Wiedervorlage gelöscht: Typ: {0} (Wiedervorlage gelöscht)</pre>
      */
    public static final String EVENT_TYPE_REMINDER_REMOVED = "EventType.Reminder.Removed";

    /** <pre>EVENT_TYPE_REQUEST_CREATED
      * [en] Request added: type {0}, Institution name: {1}, {2} (Created requests)
      * [de] Anfrage angelegt: Typ: {0}, Institutionsname {1}, {2} (Anfrage angelegt)</pre>
      */
    public static final String EVENT_TYPE_REQUEST_CREATED = "EventType.Request.Created";

    /** <pre>EVENT_TYPE_REQUEST_REMOVED
      * [en] Request removed: Typ {0} (Removed requests)
      * [de] Anfrage gelöscht: Typ: {0} (Anfrage gelöscht)</pre>
      */
    public static final String EVENT_TYPE_REQUEST_REMOVED = "EventType.Request.Removed";

    /** <pre>EVENT_TYPE_REQUEST_UPDATED
      * [en] Request changed: Typ {0}, Institutionsname: {1}, {2} (Changed requests)
      * [de] Anfrage geändert: Typ: {0}, Institutionsname {1}, {2} (Anfrage geändert)</pre>
      */
    public static final String EVENT_TYPE_REQUEST_UPDATED = "EventType.Request.Updated";

    /** <pre>EXCEPTION
      * [en] Exception
      * [de] Ausnahme</pre>
      */
    public static final String EXCEPTION = "Exception";

    /** <pre>EXIT
      * [en] Exit
      * [de] Beenden</pre>
      * Attention! this value ('Exit') seems to be also defined under the key LOGIN_EXIT!
      */
    public static final String EXIT = "Exit";

    /** <pre>EXPORT_TYPE_CSV
      * [en] CSV (comma-separated values)
      * [de] CSV (Kommagetrennte Werte)</pre>
      */
    public static final String EXPORT_TYPE_CSV = "Export.Type.CSV";

    /** <pre>EXPORT_TYPE_EXCEL
      * [en] Excel (Microsoft Excel)
      * [de] Excel (Microsoft Excel)</pre>
      */
    public static final String EXPORT_TYPE_EXCEL = "Export.Type.EXCEL";

    /** <pre>EXPORT_TYPE_XML
      * [de] Xml (Xml-Format)</pre>
      */
    public static final String EXPORT_TYPE_XML = "Export.Type.XML";

    /** <pre>EXTERN_VERSIONS
      * [en] HIS-Versions
      * [de] KIS-Versionen</pre>
      */
    public static final String EXTERN_VERSIONS = "ExternVersions";

    /** <pre>EXTERNAL_OCCUPANCY
      * [en] External Occupancy
      * [de] Belegabteilung</pre>
      */
    public static final String EXTERNAL_OCCUPANCY = "ExternalOccupancy";

    /** <pre>FAILED
      * [en] Failed
      * [de] Fehlgeschlagen</pre>
      * Attention! this value ('Failed') seems to be also defined under the key CASE_MERGING_JOB_FAILED! this value ('failed') seems to be also defined under the key JOB_STATUS_FAILED!
      */
    public static final String FAILED = "Failed";

    /** <pre>FALL_MAIN_FEHLER
      * [de] Basis Fall nicht vorhanden</pre>
      */
    public static final String FALL_MAIN_FEHLER = "Fall.main.Fehler";

    /** <pre>FAX
      * [en] Fax
      * [de] Fax</pre>
      * Attention! this value ('Fax') seems to be also defined under the key AUDIT_FAX! this value ('Fax') seems to be also defined under the key MDK_FAX!
      */
    public static final String FAX = "Fax";

    /** <pre>FEE_CODE_VALIDATION
      * [de] Ungültiger Entgelteintrag. Bitte geben Sie einen gültigen Eintrag ein!</pre>
      */
    public static final String FEE_CODE_VALIDATION = "FeeCode.validation";

    /** <pre>FEE_GROUP
      * [en] Fee Group
      * [de] Entgeltbereich</pre>
      */
    public static final String FEE_GROUP = "FeeGroup";

    /** <pre>FEE_GROUP_APPENDIX_3
      * [en] Appendix 3
      * [de] Anlage 3</pre>
      */
    public static final String FEE_GROUP_APPENDIX_3 = "FeeGroup.Appendix3";

    /** <pre>FEE_GROUP_APPENDIX_3_WITHOUT_FINAL_INVOICE
      * [en] Appendix 3 without final invoice
      * [de] Anlage 3 ohne Schlussrechnung</pre>
      */
    public static final String FEE_GROUP_APPENDIX_3_WITHOUT_FINAL_INVOICE = "FeeGroup.Appendix3WithoutFinalInvoice";

    /** <pre>FEE_GROUP_APPENDIX_3_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
      * [en] Appendix 3 without final invoice and without Discharge
      * [de] Anlage 3 ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String FEE_GROUP_APPENDIX_3_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE = "FeeGroup.Appendix3WithoutFinalInvoiceAndWithoutDischarge";

    /** <pre>FEE_GROUP_BEFORE_INPATIENT
      * [en] before inpatient
      * [de] vorstationär</pre>
      * Attention! this value ('Before inpatient') seems to be also defined under the key ICD_TYPE_BEFORE_INPATIENT!
      */
    public static final String FEE_GROUP_BEFORE_INPATIENT = "FeeGroup.BeforeInpatient";

    /** <pre>FEE_GROUP_BEFORE_INPATIENT_ALONE_WITH_FINAL_INVOICE
      * [en] Before stationary (alone) (with final invoice)
      * [de] vorstationär mit Schlussrechnung</pre>
      */
    public static final String FEE_GROUP_BEFORE_INPATIENT_ALONE_WITH_FINAL_INVOICE = "FeeGroup.BeforeInpatientAloneWithFinalInvoice";

    /** <pre>FEE_GROUP_BEFORE_INPATIENT_WITHOUT_FINAL_INVOICE
      * [en] before inpatient without final invoice
      * [de] vorstationär ohne Schlussrechnung</pre>
      */
    public static final String FEE_GROUP_BEFORE_INPATIENT_WITHOUT_FINAL_INVOICE = "FeeGroup.BeforeInpatientWithoutFinalInvoice";

    /** <pre>FEE_GROUP_BEFORE_INPATIENT_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
      * [en] before inpatient without final invoice and without Discharge
      * [de] vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String FEE_GROUP_BEFORE_INPATIENT_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE = "FeeGroup.BeforeInpatientWithoutFinalInvoiceAndWithoutDischarge";

    /** <pre>FEE_GROUP_BPFLV
      * [en] BPflV
      * [de] BPflV</pre>
      */
    public static final String FEE_GROUP_BPFLV = "FeeGroup.BPFLV";

    /** <pre>FEE_GROUP_BPFLV_WITHOUT_FINAL_INVOICE
      * [en] BPflV without final invoice
      * [de] BPflV ohne Schlussrechnung</pre>
      */
    public static final String FEE_GROUP_BPFLV_WITHOUT_FINAL_INVOICE = "FeeGroup.BPFLV_WithoutFinalInvoice";

    /** <pre>FEE_GROUP_BPFLV_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
      * [en] BPflV without final invoice and without Discharge
      * [de] BPflV ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String FEE_GROUP_BPFLV_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE = "FeeGroup.BPFLV_WithoutFinalInvoiceAndWithoutDischarge";

    /** <pre>FEE_GROUP_DAK_INTERNAL_CHARGES
      * [en] DAK internal charges
      * [de] DAK-interne Entgelte</pre>
      */
    public static final String FEE_GROUP_DAK_INTERNAL_CHARGES = "FeeGroup.DAK_InternalCharges";

    /** <pre>FEE_GROUP_DAK_INTERNAL_CHARGES_WITHOUT_FINAL_INVOICE
      * [en] DAK internal charges without final invoice
      * [de] DAK-interne Entgelte ohne Schlussrechnung</pre>
      */
    public static final String FEE_GROUP_DAK_INTERNAL_CHARGES_WITHOUT_FINAL_INVOICE = "FeeGroup.DAK_InternalChargesWithoutFinalInvoice";

    /** <pre>FEE_GROUP_DAK_INTERNAL_CHARGES_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
      * [en] DAK internal charges without final invoice and without Discharge
      * [de] DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String FEE_GROUP_DAK_INTERNAL_CHARGES_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE = "FeeGroup.DAK_InternalChargesWithoutFinalInvoiceAndWithoutDischarge";

    /** <pre>FEE_GROUP_DMP
      * [en] DMP
      * [de] DMP</pre>
      */
    public static final String FEE_GROUP_DMP = "FeeGroup.DMP";

    /** <pre>FEE_GROUP_DMP_WITHOUT_FINAL_INVOICE
      * [en] DMP without final invoice
      * [de] DMP ohne Schlussrechnung</pre>
      */
    public static final String FEE_GROUP_DMP_WITHOUT_FINAL_INVOICE = "FeeGroup.DMP_WithoutFinalInvoice";

    /** <pre>FEE_GROUP_DMP_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
      * [en] DMP without final invoice and without Discharge
      * [de] DMP ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String FEE_GROUP_DMP_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE = "FeeGroup.DMP_WithoutFinalInvoiceAndWithoutDischarge";

    /** <pre>FEE_GROUP_DRG
      * [en] DRG
      * [de] DRG</pre>
      * Attention! this value ('DRG') seems to be also defined under the key CASE_RESOLVE_DRG! this value ('DRG') seems to be also defined under the key CASE_TYPE_DRG! this value ('DRG') seems to be also defined under the key DRG! this value ('DRG') seems to be also defined under the key DRG_SHORTCUT! this value ('DRG') seems to be also defined under the key ICD_TYPE_DRG! this value ('DRG') seems to be also defined under the key RULES_DRG!
      */
    public static final String FEE_GROUP_DRG = "FeeGroup.DRG";

    /** <pre>FEE_GROUP_DRG_WITHOUT_FINAL_INVOICE
      * [en] DRG without final invoice
      * [de] DRG ohne Schlussrechnung</pre>
      */
    public static final String FEE_GROUP_DRG_WITHOUT_FINAL_INVOICE = "FeeGroup.DRG_WithoutFinalInvoice";

    /** <pre>FEE_GROUP_DRG_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
      * [en] DRG without final invoice and without Discharge
      * [de] DRG ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String FEE_GROUP_DRG_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE = "FeeGroup.DRG_WithoutFinalInvoiceAndWithoutDischarge";

    /** <pre>FEE_GROUP_HOSPITAL_INDIVIDUAL_PEPP_ANNEX_1B_INPATIENT_AND_2B_PARTIAL_INPATIENT_WITH_FINAL_INVOICE
      * [en] Hospital Individual PEPP Annex 1b (inpatient) and 2b (partial inpatient) (with final invoice)
      * [de] Krankenhausindividuelle PEPP Anlage 1b (vollst) und 2b (teilstat) (mit Schlussrechnung)</pre>
      */
    public static final String FEE_GROUP_HOSPITAL_INDIVIDUAL_PEPP_ANNEX_1B_INPATIENT_AND_2B_PARTIAL_INPATIENT_WITH_FINAL_INVOICE = "FeeGroup.HospitalIndividualPEPP_Annex1bInpatientAnd2bPartialInpatientWithFinalInvoice";

    /** <pre>FEE_GROUP_IV_FULL_INPATIENT_AND_DAY_PATIENT_WITH_FINAL_INVOICE
      * [en] IV full inpatient and day patient (with final invoice)
      * [de] IV vollstat und teilstat (mit Schlussrechnung)</pre>
      */
    public static final String FEE_GROUP_IV_FULL_INPATIENT_AND_DAY_PATIENT_WITH_FINAL_INVOICE = "FeeGroup.IV_FullInpatientAndDayPatientWithFinalInvoice";

    /** <pre>FEE_GROUP_IV_INTEGRATED_CARE
      * [en] IV (integrated care)
      * [de] IV (integrierte Versorgung)</pre>
      */
    public static final String FEE_GROUP_IV_INTEGRATED_CARE = "FeeGroup.IV_IntegratedCare";

    /** <pre>FEE_GROUP_IV_INTEGRATED_CARE_WITHOUT_FINAL_INVOICE
      * [en] IV (integrated care) without final invoice
      * [de] IV (integrierte Versorgung) ohne Schlussrechnung</pre>
      */
    public static final String FEE_GROUP_IV_INTEGRATED_CARE_WITHOUT_FINAL_INVOICE = "FeeGroup.IV_IntegratedCareWithoutFinalInvoice";

    /** <pre>FEE_GROUP_IV_INTEGRATED_CARE_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
      * [en] IV (integrated care) without final invoice and without Discharge
      * [de] IV (integrierte Versorgung) ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String FEE_GROUP_IV_INTEGRATED_CARE_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE = "FeeGroup.IV_IntegratedCareWithoutFinalInvoiceAndWithoutDischarge";

    /** <pre>FEE_GROUP_MODEL_PROJECTS
      * [en] Model projects
      * [de] Modellvorhaben</pre>
      */
    public static final String FEE_GROUP_MODEL_PROJECTS = "FeeGroup.ModelProjects";

    /** <pre>FEE_GROUP_MODEL_PROJECTS_WITH_FINAL_INVOICE
      * [en] Model projects (with final invoice)
      * [de] Modellvorhaben (mit Schlussrechnung)</pre>
      */
    public static final String FEE_GROUP_MODEL_PROJECTS_WITH_FINAL_INVOICE = "FeeGroup.ModelProjectsWithFinalInvoice";

    /** <pre>FEE_GROUP_MODEL_PROJECTS_WITHOUT_FINAL_INVOICE
      * [en] Model projects without final invoice
      * [de] Modellvorhaben ohne Schlussrechnung</pre>
      */
    public static final String FEE_GROUP_MODEL_PROJECTS_WITHOUT_FINAL_INVOICE = "FeeGroup.ModelProjectsWithoutFinalInvoice";

    /** <pre>FEE_GROUP_MODEL_PROJECTS_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
      * [en] Model projects without final invoice and without Discharge
      * [de] Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String FEE_GROUP_MODEL_PROJECTS_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE = "FeeGroup.ModelProjectsWithoutFinalInvoiceAndWithoutDischarge";

    /** <pre>FEE_GROUP_NUB
      * [en] NUB
      * [de] NUB</pre>
      */
    public static final String FEE_GROUP_NUB = "FeeGroup.NUB";

    /** <pre>FEE_GROUP_NUB_WITHOUT_FINAL_INVOICE
      * [en] NUB without final invoice
      * [de] NUB ohne Schlussrechnung</pre>
      */
    public static final String FEE_GROUP_NUB_WITHOUT_FINAL_INVOICE = "FeeGroup.NUB_WithoutFinalInvoice";

    /** <pre>FEE_GROUP_NUB_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
      * [en] NUB without final invoice and without Discharge
      * [de] NUB ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String FEE_GROUP_NUB_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE = "FeeGroup.NUB_WithoutFinalInvoiceAndWithoutDischarge";

    /** <pre>FEE_GROUP_PARTIAL_PAYMENT_WITHOUT_FINAL_INVOICE_WITH_DISMISSAL
      * [en] Partial payment (without final invoice / with dismissal)
      * [de] Teilzahlung (ohne Schlussrechnung / mit ENTL)</pre>
      */
    public static final String FEE_GROUP_PARTIAL_PAYMENT_WITHOUT_FINAL_INVOICE_WITH_DISMISSAL = "FeeGroup.PartialPaymentWithoutFinalInvoiceWithDismissal";

    /** <pre>FEE_GROUP_PARTIAL_PAYMENT_WITHOUT_FINAL_INVOICE_WITHOUT_DISMISSAL
      * [en] Partial payment (without final invoice / without dismissal)
      * [de] Teilzahlung (ohne Schlussrechnung / ohne ENTL)</pre>
      */
    public static final String FEE_GROUP_PARTIAL_PAYMENT_WITHOUT_FINAL_INVOICE_WITHOUT_DISMISSAL = "FeeGroup.PartialPaymentWithoutFinalInvoiceWithoutDismissal";

    /** <pre>FEE_GROUP_PEPP_ANNEX_1A_INPATIENT_AND_2A_PARTIAL_INPATIENT_WITH_FINAL_INVOICE
      * [en] PEPP Annex 1a (inpatient) and 2a (partial inpatient) (with final invoice)
      * [de] PEPP Anlage 1a (vollstat) und 2a (teilstat) (mit Schlussrechnung)</pre>
      */
    public static final String FEE_GROUP_PEPP_ANNEX_1A_INPATIENT_AND_2A_PARTIAL_INPATIENT_WITH_FINAL_INVOICE = "FeeGroup.PEPP_Annex1aInpatientAnd2aPartialInpatientWithFinalInvoice";

    /** <pre>FEE_GROUP_SEPARATE_CHARGES
      * [en] separate charges
      * [de] gesonderte Entgelte</pre>
      */
    public static final String FEE_GROUP_SEPARATE_CHARGES = "FeeGroup.SeparateCharges";

    /** <pre>FEE_GROUP_SEPARATE_CHARGES_WITHOUT_FINAL_INVOICE
      * [en] separate charges without final invoice
      * [de] gesonderte Entgelte ohne Schlussrechnung</pre>
      */
    public static final String FEE_GROUP_SEPARATE_CHARGES_WITHOUT_FINAL_INVOICE = "FeeGroup.SeparateChargesWithoutFinalInvoice";

    /** <pre>FEE_GROUP_SEPARATE_CHARGES_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
      * [en] separate charges without final invoice and without Discharge
      * [de] gesonderte Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String FEE_GROUP_SEPARATE_CHARGES_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE = "FeeGroup.SeparateChargesWithoutFinalInvoiceAndWithoutDischarge";

    /** <pre>FEE_GROUP_SPECIAL_FACILITIES_WITHOUT_FINAL_INVOICE
      * [en] Special facilities without final invoice
      * [de] Besondere Einrichtungen ohne Schlussrechnung</pre>
      */
    public static final String FEE_GROUP_SPECIAL_FACILITIES_WITHOUT_FINAL_INVOICE = "FeeGroup.SpecialFacilitiesWithoutFinalInvoice";

    /** <pre>FEE_GROUP_SPECIAL_INSTITUTIONS
      * [en] Special institutions
      * [de] Besondere Einrichtungen</pre>
      */
    public static final String FEE_GROUP_SPECIAL_INSTITUTIONS = "FeeGroup.SpecialInstitutions";

    /** <pre>FEE_GROUP_SPECIAL_INSTITUTIONS_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
      * [en] Special institutions without final invoice and without Discharge
      * [de] Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String FEE_GROUP_SPECIAL_INSTITUTIONS_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE = "FeeGroup.SpecialInstitutionsWithoutFinalInvoiceAndWithoutDischarge";

    /** <pre>FEE_PLACEHOLDER
      * [en] no fees added
      * [de] Keine Entgelte zugefügt</pre>
      */
    public static final String FEE_PLACEHOLDER = "Fee.placeholder";

    /** <pre>FILE
      * [en] File
      * [de] Datei</pre>
      */
    public static final String FILE = "File";

    /** <pre>FILE_ADD
      * [en] Add file
      * [de] Datei hinzufügen</pre>
      */
    public static final String FILE_ADD = "File.add";

    /** <pre>FILE_ALREADY_EXISTS
      * [en] File {0} already exists
      * [de] Datei {0} ist bereits vorhanden</pre>
      */
    public static final String FILE_ALREADY_EXISTS = "File.alreadyExists";

    /** <pre>FILE_ARCHIVE_ERROR_CAN_NOT_ACCESS
      * [en] File {0} could not be archived, because there was a security error: {1}
      * [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil ein Zugriffsproblem aufgetreten ist: {1}</pre>
      */
    public static final String FILE_ARCHIVE_ERROR_CAN_NOT_ACCESS = "File.archive.error.can.not.access";

    /** <pre>FILE_ARCHIVE_ERROR_CAN_NOT_WRITE
      * [en] File {0} could not be archived, because you did not have writing permissions: {1}
      * [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil die Schreibrechte fehlen: {1}</pre>
      */
    public static final String FILE_ARCHIVE_ERROR_CAN_NOT_WRITE = "File.archive.error.can.not.write";

    /** <pre>FILE_ARCHIVE_ERROR_PARENT_IS_FILE
      * [en] File {0} could not be archived, because a file was selected: {1}
      * [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, da eine Datei als Verzeichnis ausgewählt wurde: {1}</pre>
      */
    public static final String FILE_ARCHIVE_ERROR_PARENT_IS_FILE = "File.archive.error.parent.is.file";

    /** <pre>FILE_ARCHIVE_ERROR_PARENT_NOT_FOUND
      * [en] File {0} could not be archived, because the directory: {1} could not be created
      * [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil das Verzeichnis nicht angelegt werden konnte: {1}</pre>
      */
    public static final String FILE_ARCHIVE_ERROR_PARENT_NOT_FOUND = "File.archive.error.parent.not.found";

    /** <pre>FILE_DONT_EXISTS
      * [en] File do not exist
      * [de] Datei nicht vorhanden</pre>
      */
    public static final String FILE_DONT_EXISTS = "File.dontExists";

    /** <pre>FILE_IMPORT_ERRORS
      * [de] Import der Datei: {0} wurde mit Fehler(n) abgeschlossen!!</pre>
      */
    public static final String FILE_IMPORT_ERRORS = "File.import.errors";

    /** <pre>FILE_IMPORT_SUCCESS
      * [de] Import der Datei: {0} war erfolgreich!</pre>
      */
    public static final String FILE_IMPORT_SUCCESS = "File.import.success";

    /** <pre>FILE_NUMBER_EDIT_TOOLTIP
      * [de] Um {0} zu bearbeiten, klicken Sie hier.</pre>
      */
    public static final String FILE_NUMBER_EDIT_TOOLTIP = "FileNumber.edit.tooltip";

    /** <pre>FILE_NUMBER_SAVE_TOOLTIP
      * [de] Zum Abspeicheren drücken Sie die Enter Taste</pre>
      */
    public static final String FILE_NUMBER_SAVE_TOOLTIP = "FileNumber.save.tooltip";

    /** <pre>FILE_OPEN
      * [en] Open file
      * [de] Datei öffnen</pre>
      */
    public static final String FILE_OPEN = "File.open";

    /** <pre>FILE_OPEN_IN_EXPLORER_TEXT
      * [en] Click to select file in Windows Explorer
      * [de] Klicken um die Datei im Windows Explorer zu öffnen</pre>
      */
    public static final String FILE_OPEN_IN_EXPLORER_TEXT = "File.open.in.explorer.text";

    /** <pre>FILE_SAVE
      * [en] Save file
      * [de] Datei speichern</pre>
      */
    public static final String FILE_SAVE = "File.save";

    /** <pre>FILTER
      * [en] Filter
      * [de] Filter</pre>
      */
    public static final String FILTER = "Filter";

    /** <pre>FILTER_ABOVE
      * [en] {0} filter(s) above
      * [de] {0} Filter weiter oben</pre>
      */
    public static final String FILTER_ABOVE = "FilterAbove";

    /** <pre>FILTER_BELOW
      * [en] {0} filter(s) below
      * [de] {0} Filter weiter unten</pre>
      */
    public static final String FILTER_BELOW = "FilterBelow";

    /** <pre>FILTER_CASES_CANCEL
      * [en] All canceled cases
      * [de] Alle stornierte Fälle</pre>
      */
    public static final String FILTER_CASES_CANCEL = "Filter.cases.cancel";

    /** <pre>FILTER_CASES_CANCEL_NOT
      * [en] All not canceled cases
      * [de] Alle nicht stornierte Fälle</pre>
      */
    public static final String FILTER_CASES_CANCEL_NOT = "Filter.cases.cancel.not";

    /** <pre>FILTER_CASES_LOCK
      * [en] All locked cases
      * [de] Alle gesperrte Fälle</pre>
      */
    public static final String FILTER_CASES_LOCK = "Filter.cases.lock";

    /** <pre>FILTER_CASES_UNLOCK
      * [de] Alle nicht gesperrte Fälle</pre>
      */
    public static final String FILTER_CASES_UNLOCK = "Filter.cases.unlock";

    /** <pre>FILTER_MORE
      * [en] more
      * [de] weitere</pre>
      */
    public static final String FILTER_MORE = "Filter.more";

    /** <pre>FILTER_NO
      * [en] no filter
      * [de] Kein Filter</pre>
      */
    public static final String FILTER_NO = "Filter.no";

    /** <pre>FILTER_PRIO
      * [en] All with Prio
      * [de] Alle mit Priorität</pre>
      */
    public static final String FILTER_PRIO = "Filter.prio";

    /** <pre>FILTER_PRIO_NO
      * [en] All without Prio
      * [de] Alle ohne Priorität</pre>
      */
    public static final String FILTER_PRIO_NO = "Filter.prio.no";

    /** <pre>FILTER_PROCESS_CANCEL
      * [en] All canceled processes
      * [de] Alle stornierte Vorgänge</pre>
      */
    public static final String FILTER_PROCESS_CANCEL = "Filter.process.cancel";

    /** <pre>FILTER_PROCESS_CANCEL_NOT
      * [en] All not canceled processes
      * [de] Alle nicht stornierte Vorgänge</pre>
      */
    public static final String FILTER_PROCESS_CANCEL_NOT = "Filter.process.cancel.not";

    /** <pre>FILTER_PROCESS_LOCK
      * [en] All locked processes
      * [de] Alle gesperrte Vorgänge</pre>
      */
    public static final String FILTER_PROCESS_LOCK = "Filter.process.lock";

    /** <pre>FILTER_PROCESS_UNLOCK
      * [en] All unlocked processes
      * [de] Alle nicht gesperrte Vorgänge</pre>
      */
    public static final String FILTER_PROCESS_UNLOCK = "Filter.process.unlock";

    /** <pre>FILTER_REMEINDER_CLOSE
      * [en] All finished
      * [de] Alle abgearbeiteten</pre>
      */
    public static final String FILTER_REMEINDER_CLOSE = "Filter.remeinder.close";

    /** <pre>FILTER_REMEINDER_OPEN
      * [en] All opened
      * [de] Alle offenen</pre>
      */
    public static final String FILTER_REMEINDER_OPEN = "Filter.remeinder.open";

    /** <pre>FIRST_NAME
      * [en] First Name
      * [de] Vorname</pre>
      * Attention! this value ('First Name') seems to be also defined under the key PATIENT_FIRST_NAME!
      */
    public static final String FIRST_NAME = "FirstName";

    /** <pre>FLOWRATE_STATUS_TEXT
      * [en] Case details per second: {0}
      * [de] Falldetails pro Sekunde: {0}</pre>
      */
    public static final String FLOWRATE_STATUS_TEXT = "Flowrate.status.text";

    /** <pre>FLOWRATE_STATUS_TEXT_PATIENT
      * [en] Patients per second: {0}
      * [de] Patienten pro Sekunde: {0}</pre>
      */
    public static final String FLOWRATE_STATUS_TEXT_PATIENT = "Flowrate.status.text.patient";

    /** <pre>FUNCTIONS
      * [en] Functions
      * [de] Funktionen</pre>
      */
    public static final String FUNCTIONS = "Functions";

    /** <pre>GENDER
      * [en] Gender
      * [de] Geschlecht (Geschl.)</pre>
      */
    public static final String GENDER = "Gender";

    /** <pre>GENDER_DIVERSE
      * [en] diverse
      * [de] divers</pre>
      */
    public static final String GENDER_DIVERSE = "Gender.Diverse";

    /** <pre>GENDER_FEMALE
      * [en] female
      * [de] weiblich</pre>
      * Attention! this value ('Female') seems to be also defined under the key PATIENT_SEX_FEMALE!
      */
    public static final String GENDER_FEMALE = "Gender.Female";

    /** <pre>GENDER_MALE
      * [en] male
      * [de] männlich</pre>
      * Attention! this value ('Male') seems to be also defined under the key PATIENT_SEX_MALE!
      */
    public static final String GENDER_MALE = "Gender.Male";

    /** <pre>GENDER_SALUTATION_DIVERSE
      * [en] Mr./Ms.
      * [de] Herr/Frau</pre>
      * Attention! this value ('Mr./Ms.') seems to be also defined under the key GENDER_SALUTATION_UNDEFINED! this value ('Mr./Ms.') seems to be also defined under the key GENDER_SALUTATION_UNKNOWN!
      */
    public static final String GENDER_SALUTATION_DIVERSE = "Gender.Salutation.Diverse";

    /** <pre>GENDER_SALUTATION_FEMALE
      * [en] Ms.
      * [de] Frau</pre>
      */
    public static final String GENDER_SALUTATION_FEMALE = "Gender.Salutation.Female";

    /** <pre>GENDER_SALUTATION_MALE
      * [en] Mr.
      * [de] Herr</pre>
      */
    public static final String GENDER_SALUTATION_MALE = "Gender.Salutation.Male";

    /** <pre>GENDER_SALUTATION_UNDEFINED
      * [en] Mr./Ms.
      * [de] Herr/Frau</pre>
      * Attention! this value ('Mr./Ms.') seems to be also defined under the key GENDER_SALUTATION_DIVERSE! this value ('Mr./Ms.') seems to be also defined under the key GENDER_SALUTATION_UNKNOWN!
      */
    public static final String GENDER_SALUTATION_UNDEFINED = "Gender.Salutation.Undefined";

    /** <pre>GENDER_SALUTATION_UNKNOWN
      * [en] Mr./Ms.
      * [de] Herr/Frau</pre>
      * Attention! this value ('Mr./Ms.') seems to be also defined under the key GENDER_SALUTATION_DIVERSE! this value ('Mr./Ms.') seems to be also defined under the key GENDER_SALUTATION_UNDEFINED!
      */
    public static final String GENDER_SALUTATION_UNKNOWN = "Gender.Salutation.Unknown";

    /** <pre>GENDER_UNDEFINED
      * [en] undefined
      * [de] unbestimmt</pre>
      */
    public static final String GENDER_UNDEFINED = "Gender.Undefined";

    /** <pre>GENDER_UNKNOWN
      * [en] unknown
      * [de] unbekannt</pre>
      * Attention! this value ('Unknown') seems to be also defined under the key PATIENT_SEX_UNKNOWN!
      */
    public static final String GENDER_UNKNOWN = "Gender.Unknown";

    /** <pre>GENERAL
      * [en] General
      * [de] Allgemein</pre>
      */
    public static final String GENERAL = "General";

    /** <pre>GERM_GROWTH_AFTER_ENRICHMENT
      * [en] after enrichment
      * [de] nach Anreicherung</pre>
      */
    public static final String GERM_GROWTH_AFTER_ENRICHMENT = "Germ.Growth.AfterEnrichment";

    /** <pre>GERM_GROWTH_ISOLATED
      * [en] isolated
      * [de] ganz vereinzelt</pre>
      */
    public static final String GERM_GROWTH_ISOLATED = "Germ.Growth.Isolated";

    /** <pre>GERM_GROWTH_MODERATELY
      * [en] moderately
      * [de] mäßig viel</pre>
      */
    public static final String GERM_GROWTH_MODERATELY = "Germ.Growth.Moderately";

    /** <pre>GERM_GROWTH_NO_INFORMATION
      * [en] no information
      * [de] keine Information</pre>
      */
    public static final String GERM_GROWTH_NO_INFORMATION = "Germ.Growth.NoInformation";

    /** <pre>GERM_GROWTH_NONE
      * [en] none
      * [de] nicht nachgewiesen</pre>
      */
    public static final String GERM_GROWTH_NONE = "Germ.Growth.None";

    /** <pre>GERM_GROWTH_PLENTY
      * [en] plenty
      * [de] reichlich</pre>
      */
    public static final String GERM_GROWTH_PLENTY = "Germ.Growth.Plenty";

    /** <pre>GERM_GROWTH_SCATTERED
      * [en] scattered
      * [de] vereinzelt</pre>
      */
    public static final String GERM_GROWTH_SCATTERED = "Germ.Growth.Scattered";

    /** <pre>GROUP_RELEVANT_CODE_FOR_DRG_PEPP_MAPPING_USED_EXCEPT_TO_SATISFY_THE_TEMPORAL_AND_OR_LOGIC_CONDITION_WITHIN_AN_OPD_CONSTRUCT
      * [en] For the DRG / PEPP mapping used, except to satisfy the temporal and / or logic condition within an OPD construct
      * [de] Für die DRG/PEPP-Zuordnung verwendet, ausgenommen zur Erfüllung der zeitlichen und/oder logischen Bedingung innerhalb eines OPD-Konstrukts</pre>
      */
    public static final String GROUP_RELEVANT_CODE_FOR_DRG_PEPP_MAPPING_USED_EXCEPT_TO_SATISFY_THE_TEMPORAL_AND_OR_LOGIC_CONDITION_WITHIN_AN_OPD_CONSTRUCT = "GroupRelevantCode.ForDRG_PEPP_MappingUsedExceptToSatisfyTheTemporalAndOrLogicConditionWithinAnOPD_Construct";

    /** <pre>GROUP_RELEVANT_CODE_NOT_USED_FOR_DRG_PEPP_ASSIGNMENT
      * [en] Not used for the DRG / PEPP - assignment
      * [de] Nicht für die DRG/PEPP-Zuordnung verwendet</pre>
      */
    public static final String GROUP_RELEVANT_CODE_NOT_USED_FOR_DRG_PEPP_ASSIGNMENT = "GroupRelevantCode.NotUsedForDRG_PEPP_Assignment";

    /** <pre>GROUP_RELEVANT_CODE_USED_TO_MEET_THE_LOGICAL_AND_TEMPORAL_CONDITION_OF_OPD_CONSTRUCT
      * [en] used to meet the logical and temporal condition of OPD construct
      * [de] verwendet zur Erfüllung der logischen und zeitlichen Bedingung eines OPD-Konstrukts</pre>
      */
    public static final String GROUP_RELEVANT_CODE_USED_TO_MEET_THE_LOGICAL_AND_TEMPORAL_CONDITION_OF_OPD_CONSTRUCT = "GroupRelevantCode.UsedToMeetTheLogicalAndTemporalConditionOfOPD_Construct";

    /** <pre>GROUP_RELEVANT_CODE_USING_BOTH_OPD_BY_A_CONSTRUCT_AS_ALSO_OTHERWISE
      * [en] Using both OPD by a construct as also otherwise (i.e., 1 + 2)
      * [de] Verwendung sowohl durch ein OPD-Konstrukt wie auch anderweitig (also 1+2)</pre>
      */
    public static final String GROUP_RELEVANT_CODE_USING_BOTH_OPD_BY_A_CONSTRUCT_AS_ALSO_OTHERWISE = "GroupRelevantCode.UsingBothOPD_ByA_ConstructAsAlsoOtherwise";

    /** <pre>GROUP_RESULT_CODE_VALID_AGE_CONFLICT
      * [en] age conflict
      * [de] Alterskonflikt</pre>
      */
    public static final String GROUP_RESULT_CODE_VALID_AGE_CONFLICT = "GroupResult.Code.Valid.ageConflict";

    /** <pre>GROUP_RESULT_CODE_VALID_DUPLICATE
      * [en] duplicate
      * [de] Duplikat</pre>
      */
    public static final String GROUP_RESULT_CODE_VALID_DUPLICATE = "GroupResult.Code.Valid.duplicate";

    /** <pre>GROUP_RESULT_CODE_VALID_GENDER_CONFLICT
      * [en] gender conflict
      * [de] Geschlechtskonflikt</pre>
      */
    public static final String GROUP_RESULT_CODE_VALID_GENDER_CONFLICT = "GroupResult.Code.Valid.genderConflict";

    /** <pre>GROUP_RESULT_CODE_VALID_INVALID
      * [en] invalid Code
      * [de] Ungültiger Code</pre>
      */
    public static final String GROUP_RESULT_CODE_VALID_INVALID = "GroupResult.Code.Valid.invalid";

    /** <pre>GROUP_RESULT_CODE_VALID_VALID
      * [en] valid Code
      * [de] Gültiger Code</pre>
      */
    public static final String GROUP_RESULT_CODE_VALID_VALID = "GroupResult.Code.Valid.valid";

    /** <pre>GROUP_RESULT_NO_RESULT
      * [en] There are no Grouperresults!
      * [de] Es liegen noch keine Grouperergebnisse vor!</pre>
      */
    public static final String GROUP_RESULT_NO_RESULT = "GroupResult.NoResult";

    /** <pre>GROUP_RESULT_PDX_IMPROPER_PDX_CODE
      * [en] Invalid main diagnosis
      * [de] Unzulässige Hauptdiagnose</pre>
      */
    public static final String GROUP_RESULT_PDX_IMPROPER_PDX_CODE = "GroupResult.Pdx.improper_pdx_code";

    /** <pre>GROUP_RESULT_PDX_INVALID_PDX_CODE
      * [en] Invalid ICD-10-GM-Code as the main diagnosis
      * [de] Ungültiger ICD-10-GM-Kode als Hauptdiagnose</pre>
      */
    public static final String GROUP_RESULT_PDX_INVALID_PDX_CODE = "GroupResult.Pdx.invalid_pdx_code";

    /** <pre>GROUP_RESULT_PDX_VALID_PDX_CODE
      * [en] Valid main diagnosis
      * [de] Gültige Hauptdiagnose</pre>
      */
    public static final String GROUP_RESULT_PDX_VALID_PDX_CODE = "GroupResult.Pdx.valid_pdx_code";

    /** <pre>GROUP_RESULT_PDX_VWXY_PDX_CODE
      * [en] V-,W-,X-,Y-Code as the main diagnosis
      * [de] V-,W-,X-,Y-Kode als Hauptdiagnose</pre>
      */
    public static final String GROUP_RESULT_PDX_VWXY_PDX_CODE = "GroupResult.Pdx.vwxy_pdx_code";

    /** <pre>GROUPER_EINSTELLUNGEN_CONFIRM
      * [en] The currently set modeler model is for the year {0} . Created cases are rooted with this grouper model!  nDo you want to continue with this setting?
      * [de] Das aktuell eingestellte Groupermodell ist für das Jahr {0} Die angelegten Fälle werden mit diesem Groupermodell gegroupt!Wollen Sie mit dieser Einstellung fortfahren?</pre>
      */
    public static final String GROUPER_EINSTELLUNGEN_CONFIRM = "Grouper.Einstellungen.Confirm";

    /** <pre>GROUPER_ERROR_UNGROUPABLE
      * [en] Case is not groupable, Plese check the data!
      * [de] Fall ist nicht gruppierbar, Prüfen Sie die Daten!</pre>
      */
    public static final String GROUPER_ERROR_UNGROUPABLE = "Grouper.Error.Ungroupable";

    /** <pre>GROUPER_MDC_OR_SK_INFANT_DAY_CARE
      * [en] Child and Adolescent Psychiatry, part stationary (TKJ)
      * [de] Kinder- und Jugendpsychiatrie, teilstationär (TKJ)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_INFANT_DAY_CARE = "Grouper.MdcOrSk.InfantDayCare";

    /** <pre>GROUPER_MDC_OR_SK_INFANT_INPATIENT_CARE
      * [en] Child and adolescent psychiatry, inpatient (PKJ)
      * [de] Kinder- und Jugendpsychiatrie, vollstationär (PKJ)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_INFANT_INPATIENT_CARE = "Grouper.MdcOrSk.InfantInpatientCare";

    /** <pre>GROUPER_MDC_OR_SK_MDC_01
      * [en] Diseases and disorders of the eye (01)
      * [de] Krankheiten und Störungen des Nervensystems (01)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_01 = "Grouper.MdcOrSk.mdc01";

    /** <pre>GROUPER_MDC_OR_SK_MDC_02
      * [en] Diseases and disorders of the ear (02)
      * [de] Krankheiten und Störungen des Auges (02)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_02 = "Grouper.MdcOrSk.mdc02";

    /** <pre>GROUPER_MDC_OR_SK_MDC_03
      * [en] Diseases of the nose, mouth and neck (03)
      * [de] Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO) (03)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_03 = "Grouper.MdcOrSk.mdc03";

    /** <pre>GROUPER_MDC_OR_SK_MDC_04
      * [en] Diseases and disorders of the respiratory system (04)
      * [de] Krankheiten und Störungen der Atmungsorgane (04)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_04 = "Grouper.MdcOrSk.mdc04";

    /** <pre>GROUPER_MDC_OR_SK_MDC_05
      * [en] Diseases and disorders of the circulatory system (05)
      * [de] Krankheiten und Störungen des Kreislaufsystems (05)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_05 = "Grouper.MdcOrSk.mdc05";

    /** <pre>GROUPER_MDC_OR_SK_MDC_06
      * [en] Diseases and disorders of the digestive organs (06)
      * [de] Krankheiten und Störungen der Verdauungsorgane (06)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_06 = "Grouper.MdcOrSk.mdc06";

    /** <pre>GROUPER_MDC_OR_SK_MDC_07
      * [en] Diseases and disorders of hepato biliary system and pancreas (07)
      * [de] Krankheiten und Störungen an hepatobiliärem System und Pankreas (07)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_07 = "Grouper.MdcOrSk.mdc07";

    /** <pre>GROUPER_MDC_OR_SK_MDC_08
      * [en] Diseases and disorders of the musculoskeletal system and connective tissue (08)
      * [de] Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe (08)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_08 = "Grouper.MdcOrSk.mdc08";

    /** <pre>GROUPER_MDC_OR_SK_MDC_09
      * [en] Diseases and disorders of the skin, subcutaneous tissue and breast (09)
      * [de] Krankheiten und Störungen an Haut, Unterhaut und Mamma (09)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_09 = "Grouper.MdcOrSk.mdc09";

    /** <pre>GROUPER_MDC_OR_SK_MDC_10
      * [en] Endocrine, nutritional and metabolic diseases (10)
      * [de] Endokrine, Ernährungs- und Stoffwechselkrankheiten (10)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_10 = "Grouper.MdcOrSk.mdc10";

    /** <pre>GROUPER_MDC_OR_SK_MDC_11
      * [en] Diseases and disorders of the urinary organs (11)
      * [de] Krankheiten und Störungen der Harnorgane (11)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_11 = "Grouper.MdcOrSk.mdc11";

    /** <pre>GROUPER_MDC_OR_SK_MDC_12
      * [en] Diseases and disorders of the male reproductive system (12)
      * [de] Krankheiten und Störungen der männlichen Geschlechtsorgane (12)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_12 = "Grouper.MdcOrSk.mdc12";

    /** <pre>GROUPER_MDC_OR_SK_MDC_13
      * [en] Diseases and disorders of the female reproductive organs (13)
      * [de] Krankheiten und Störungen der weiblichen Geschlechtsorgane (13)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_13 = "Grouper.MdcOrSk.mdc13";

    /** <pre>GROUPER_MDC_OR_SK_MDC_14
      * [en] Pregnancy, childbirth and postpartum (14)
      * [de] Schwangerschaft, Geburt und Wochenbett (14)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_14 = "Grouper.MdcOrSk.mdc14";

    /** <pre>GROUPER_MDC_OR_SK_MDC_15
      * [en] newborn (15)
      * [de] Neugeborene (15)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_15 = "Grouper.MdcOrSk.mdc15";

    /** <pre>GROUPER_MDC_OR_SK_MDC_16
      * [en] Diseases of the blood, the blood-forming organs and the immune system (16)
      * [de] Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems (16)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_16 = "Grouper.MdcOrSk.mdc16";

    /** <pre>GROUPER_MDC_OR_SK_MDC_17
      * [en] Hematologic and solid neoplasms (17)
      * [de] Hämatologische und solide Neubildungen (17)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_17 = "Grouper.MdcOrSk.mdc17";

    /** <pre>GROUPER_MDC_OR_SK_MDC_18_A
      * [en] HIV (18A)
      * [de] HIV (18A)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_18_A = "Grouper.MdcOrSk.mdc18A";

    /** <pre>GROUPER_MDC_OR_SK_MDC_18_B
      * [en] Infectious and parasitic diseases (18B)
      * [de] Infektiöse und parasitäre Krankheiten (18B)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_18_B = "Grouper.MdcOrSk.mdc18B";

    /** <pre>GROUPER_MDC_OR_SK_MDC_19
      * [en] Mental diseases and disorders (19)
      * [de] Psychische Krankheiten und Störungen (19)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_19 = "Grouper.MdcOrSk.mdc19";

    /** <pre>GROUPER_MDC_OR_SK_MDC_20
      * [en] Alcohol and drug use, and alcohol and drug -induced mental disorders (20)
      * [de] Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen (20)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_20 = "Grouper.MdcOrSk.mdc20";

    /** <pre>GROUPER_MDC_OR_SK_MDC_21_A
      * [en] Poly trauma (21A)
      * [de] Polytrauma (21A)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_21_A = "Grouper.MdcOrSk.mdc21A";

    /** <pre>GROUPER_MDC_OR_SK_MDC_21_B
      * [en] Injury, poisoning and toxic effects of drugs and medicines (21B)
      * [de] Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten (21B)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_21_B = "Grouper.MdcOrSk.mdc21B";

    /** <pre>GROUPER_MDC_OR_SK_MDC_22
      * [en] burns (22)
      * [de] Verbrennungen (22)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_22 = "Grouper.MdcOrSk.mdc22";

    /** <pre>GROUPER_MDC_OR_SK_MDC_23
      * [en] Factors influencing health, and other health care utilization (23)
      * [de] Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens (23)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_23 = "Grouper.MdcOrSk.mdc23";

    /** <pre>GROUPER_MDC_OR_SK_MDC_24
      * [en] Other DRGs (24)
      * [de] Sonstige DRGs (24)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_24 = "Grouper.MdcOrSk.mdc24";

    /** <pre>GROUPER_MDC_OR_SK_MDC_25
      * [en] Semi-stationary paediatric diagnostics and treatment (25)
      * [de] Teilstationäre pädiatrische Diagnostik und Behandlung (25)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_25 = "Grouper.MdcOrSk.mdc25";

    /** <pre>GROUPER_MDC_OR_SK_MDC_PRE
      * [en] Diseases and disorders of the nervous system (PRE)
      * [de] Sonderfälle (Beatmungsfälle, Transplantationen u. ä.)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_MDC_PRE = "Grouper.MdcOrSk.mdcPre";

    /** <pre>GROUPER_MDC_OR_SK_PSYCHO_DAY_CARE
      * [en] Psychiatry, day patient (TPY)
      * [de] Psychiatrie, teilstationär (TPY)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_PSYCHO_DAY_CARE = "Grouper.MdcOrSk.PsychoDayCare";

    /** <pre>GROUPER_MDC_OR_SK_PSYCHO_INPATIENT_CARE
      * [en] Psychiatry, inpatient (PSY)
      * [de] Psychiatrie, vollstationär (PSY)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_PSYCHO_INPATIENT_CARE = "Grouper.MdcOrSk.PsychoInpatientCare";

    /** <pre>GROUPER_MDC_OR_SK_PSYCHOSOMATIC_DAY_CARE
      * [en] Psychosomatics, day patient (TPO)
      * [de] Psychosomatik, teilstationär (TPO)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_PSYCHOSOMATIC_DAY_CARE = "Grouper.MdcOrSk.PsychosomaticDayCare";

    /** <pre>GROUPER_MDC_OR_SK_PSYCHOSOMATIC_INPATIENT_CARE
      * [en] Psychosomatics, inpatient (PSO)
      * [de] Psychosomatik, vollstationär (PSO)</pre>
      */
    public static final String GROUPER_MDC_OR_SK_PSYCHOSOMATIC_INPATIENT_CARE = "Grouper.MdcOrSk.PsychosomaticInpatientCare";

    /** <pre>GROUPER_OPS_RES_TYPE_NOR_INVALID_DATE
      * [en] NonOR procedure with conflict OPS date
      * [de] NonOR-Prozedur mit Konflikt OPS-Datum</pre>
      */
    public static final String GROUPER_OPS_RES_TYPE_NOR_INVALID_DATE = "Grouper.Ops.ResType.NorInvalidDate";

    /** <pre>GROUPER_OPS_RES_TYPE_NOR_INVALID_LOC
      * [en] NonOR procedure with conflict subsidiary risk label
      * [de] NonOR-Prozedur mit Konflikt Zusatzkennzeichen</pre>
      */
    public static final String GROUPER_OPS_RES_TYPE_NOR_INVALID_LOC = "Grouper.Ops.ResType.NorInvalidLoc";

    /** <pre>GROUPER_OPS_RES_TYPE_NOR_INVALID_LOC_AND_DATE
      * [en] NonOR procedure with conflict subsidiary risk label and OPS date
      * [de] NonOR-Prozedur mit Konflikt Zusatzkennzeichen und OPS-Datum</pre>
      */
    public static final String GROUPER_OPS_RES_TYPE_NOR_INVALID_LOC_AND_DATE = "Grouper.Ops.ResType.NorInvalidLocAndDate";

    /** <pre>GROUPER_OPS_RES_TYPE_NOR_OPS
      * [en] NonOR procedure
      * [de] NonOR-Prozedur</pre>
      */
    public static final String GROUPER_OPS_RES_TYPE_NOR_OPS = "Grouper.Ops.ResType.NorOps";

    /** <pre>GROUPER_OPS_RES_TYPE_OR_INVALID_DATE
      * [en] OR procedure with conflict OPS date
      * [de] OR-Prozedur mit Konflikt OPS-Datum</pre>
      */
    public static final String GROUPER_OPS_RES_TYPE_OR_INVALID_DATE = "Grouper.Ops.ResType.OrInvalidDate";

    /** <pre>GROUPER_OPS_RES_TYPE_OR_INVALID_LOC
      * [en] OR procedure with conflict subsidiary risk label
      * [de] OR-Prozedur mit Konflikt Zusatzkennzeichen</pre>
      */
    public static final String GROUPER_OPS_RES_TYPE_OR_INVALID_LOC = "Grouper.Ops.ResType.OrInvalidLoc";

    /** <pre>GROUPER_OPS_RES_TYPE_OR_INVALID_LOC_AND_DATE
      * [en] OR procedure with conflict subsidiary risk label and OPS date
      * [de] OR-Prozedur mit Konflikt Zusatzkennzeichen und OPS-Datum</pre>
      */
    public static final String GROUPER_OPS_RES_TYPE_OR_INVALID_LOC_AND_DATE = "Grouper.Ops.ResType.OrInvalidLocAndDate";

    /** <pre>GROUPER_OPS_RES_TYPE_OR_OPS
      * [en] OR procedure
      * [de] OR-Prozedur</pre>
      */
    public static final String GROUPER_OPS_RES_TYPE_OR_OPS = "Grouper.Ops.ResType.OrOps";

    /** <pre>GROUPER_OPS_RES_TYPE_SRG
      * [en] SRG (neither OR nor NonOR procedure)
      * [de] SRG (weder OR noch NonOR-Prozedur)</pre>
      */
    public static final String GROUPER_OPS_RES_TYPE_SRG = "Grouper.Ops.ResType.Srg";

    /** <pre>GROUPER_OPS_RES_TYPE_SRG_INVALID_DATE
      * [en] SRG with conflict OPS date
      * [de] SRG mit Konflikt OPS-Datum</pre>
      */
    public static final String GROUPER_OPS_RES_TYPE_SRG_INVALID_DATE = "Grouper.Ops.ResType.SrgInvalidDate";

    /** <pre>GROUPER_OPS_RES_TYPE_SRG_INVALID_LOC
      * [en] SRG with conflict subsidiary risk label
      * [de] SRG mit Konflikt Zusatzkennzeichen</pre>
      */
    public static final String GROUPER_OPS_RES_TYPE_SRG_INVALID_LOC = "Grouper.Ops.ResType.SrgInvalidLoc";

    /** <pre>GROUPER_OPS_RES_TYPE_SRG_INVALID_LOC_AND_DATE
      * [en] SRG with conflict subsidiary risk label and OPS date
      * [de] SRG mit Konflikt Zusatzkennzeichen und OPS-Datum</pre>
      */
    public static final String GROUPER_OPS_RES_TYPE_SRG_INVALID_LOC_AND_DATE = "Grouper.Ops.ResType.SrgInvalidLocAndDate";

    /** <pre>GROUPER_STATUS_GST_OK
      * [en] Gst Ok
      * [de] Normale Gruppierung</pre>
      */
    public static final String GROUPER_STATUS_GST_OK = "Grouper.Status.GstOk";

    /** <pre>GROUPER_STATUS_INACCEPTABLE_PRINCIPAL_ICD
      * [en] Inacceptable Principal Icd
      * [de] Diagnose-Code als Hauptdiagnose nicht zulässig</pre>
      */
    public static final String GROUPER_STATUS_INACCEPTABLE_PRINCIPAL_ICD = "Grouper.Status.InacceptablePrincipalIcd";

    /** <pre>GROUPER_STATUS_INVALID_ADM_DIS_REASON_MODE
      * [en] Invalid Admission Reason Mode
      * [de] Ungültiger Entlassungsgrund, Aufnahmeanlass oder Aufnahmegrund</pre>
      */
    public static final String GROUPER_STATUS_INVALID_ADM_DIS_REASON_MODE = "Grouper.Status.InvalidAdmDisReasonMode";

    /** <pre>GROUPER_STATUS_INVALID_AGE
      * [en] Invalid Age
      * [de] Ungültiges Alter</pre>
      */
    public static final String GROUPER_STATUS_INVALID_AGE = "Grouper.Status.InvalidAge";

    /** <pre>GROUPER_STATUS_INVALID_CASE
      * [en] Invalid Case
      * [de] Ungültiger Fall</pre>
      */
    public static final String GROUPER_STATUS_INVALID_CASE = "Grouper.Status.InvalidCase";

    /** <pre>GROUPER_STATUS_INVALID_GENDER
      * [en] Invalid Gender
      * [de] Ungültiges Geschlecht</pre>
      */
    public static final String GROUPER_STATUS_INVALID_GENDER = "Grouper.Status.InvalidGender";

    /** <pre>GROUPER_STATUS_INVALID_LOS
      * [en] Invalid LOS
      * [de] Ungültige Verweildauer</pre>
      */
    public static final String GROUPER_STATUS_INVALID_LOS = "Grouper.Status.InvalidLos";

    /** <pre>GROUPER_STATUS_INVALID_PRINCIPAL_ICD
      * [en] Invalid Principal Icd
      * [de] Ungültige oder fehlende Hauptdiagnose</pre>
      */
    public static final String GROUPER_STATUS_INVALID_PRINCIPAL_ICD = "Grouper.Status.InvalidPrincipalIcd";

    /** <pre>GROUPER_STATUS_INVALID_WEIGHT
      * [en] Invalid Weight
      * [de] Ungültiges Aufnahmegewicht</pre>
      */
    public static final String GROUPER_STATUS_INVALID_WEIGHT = "Grouper.Status.InvalidWeight";

    /** <pre>HEALTH_INSURANCE
      * [en] Health Insurance
      * [de] Krankenkasse</pre>
      * Attention! this value ('health insurance') seems to be also defined under the key IDENT_CLASS_ID10!
      */
    public static final String HEALTH_INSURANCE = "HealthInsurance";

    /** <pre>HELP
      * [en] Help
      * [de] Hilfe</pre>
      */
    public static final String HELP = "Help";

    /** <pre>HIS_VERSION
      * [en] HIS-Version
      * [de] KIS-Version</pre>
      */
    public static final String HIS_VERSION = "HisVersion";

    /** <pre>HISTORY_ACTION_CREATED
      * [en] Action {0} created (Created actions)
      * [de] Aktion {0} angelegt (Aktion angelegt)</pre>
      */
    public static final String HISTORY_ACTION_CREATED = "History.Action.created";

    /** <pre>HISTORY_SECTION
      * [en] History
      * [de] Historie</pre>
      */
    public static final String HISTORY_SECTION = "History.section";

    /** <pre>HISTORY_UPCOMING_EVENTS
      * [en] UPCOMING EVENTS WILL COME HERE!!
      * [de] Nächste Arbeitsschritte</pre>
      */
    public static final String HISTORY_UPCOMING_EVENTS = "History.upcoming.events";

    /** <pre>HOLIDAY
      * [en] Holiday
      * [de] Urlaub</pre>
      */
    public static final String HOLIDAY = "Holiday";

    /** <pre>HOSPITAL
      * [en] Hospital
      * [de] Krankenhaus</pre>
      */
    public static final String HOSPITAL = "Hospital";

    /** <pre>HOSPITAL_IDENT
      * [en] Hospital Identifier
      * [de] IKZ des Krankenhauses (IKZ Krankenhaus)</pre>
      */
    public static final String HOSPITAL_IDENT = "HospitalIdent";

    /** <pre>HOSPITAL_IDENTIFIER
      * [en] Hospital
      * [de] Krankenhaus IKZ (Krankenhaus)</pre>
      */
    public static final String HOSPITAL_IDENTIFIER = "HospitalIdentifier";

    /** <pre>HOSPITAL_NAME
      * [en] Hospital Name
      * [de] Krankenhausname</pre>
      */
    public static final String HOSPITAL_NAME = "HospitalName";

    /** <pre>HOSPITALIZATION
      * [en] Hospitalization
      * [de] Einweisung</pre>
      * Attention! this value ('Hospitalization') seems to be also defined under the key ICD_TYPE_HOSPITALIZATION!
      */
    public static final String HOSPITALIZATION = "Hospitalization";

    /** <pre>HOSPITALIZATION_DIAGNOSIS
      * [en] Hospitalization Diagnosis
      * [de] Einweisungsdiagnose</pre>
      */
    public static final String HOSPITALIZATION_DIAGNOSIS = "Hospitalization.diagnosis";

    /** <pre>HOURS_OF_MECHANICAL_VENTILATION
      * [en] Hours of Mechanical Ventilation
      * [de] Beatmungsdauer</pre>
      */
    public static final String HOURS_OF_MECHANICAL_VENTILATION = "HoursOfMechanicalVentilation";

    /** <pre>ICD_PLACEHOLDER
      * [en] No diagnoses added
      * [de] Keine Diagnosen hinzugefügt</pre>
      */
    public static final String ICD_PLACEHOLDER = "Icd.placeholder";

    /** <pre>ICD_REF_TYPE_ADDITION
      * [en] Addition
      * [de] Zusatz</pre>
      */
    public static final String ICD_REF_TYPE_ADDITION = "Icd.RefType.Addition";

    /** <pre>ICD_REF_TYPE_ADDITION_TO
      * [en] AdditionTo
      * [de] Zusatz zu</pre>
      */
    public static final String ICD_REF_TYPE_ADDITION_TO = "Icd.RefType.AdditionTo";

    /** <pre>ICD_REF_TYPE_CROSS
      * [en] Cross
      * [de] Kreuz</pre>
      */
    public static final String ICD_REF_TYPE_CROSS = "Icd.RefType.Cross";

    /** <pre>ICD_REF_TYPE_STAR
      * [en] Star
      * [de] Stern</pre>
      */
    public static final String ICD_REF_TYPE_STAR = "Icd.RefType.Star";

    /** <pre>ICD_TYPE_ADMISSION
      * [en] Admission
      * [de] Aufnahme</pre>
      */
    public static final String ICD_TYPE_ADMISSION = "IcdType.Admission";

    /** <pre>ICD_TYPE_AFTER_INPATIENT
      * [en] After inpatient
      * [de] Nachstationäre</pre>
      */
    public static final String ICD_TYPE_AFTER_INPATIENT = "IcdType.AfterInpatient";

    /** <pre>ICD_TYPE_BEFORE_INPATIENT
      * [en] Before inpatient
      * [de] Vorstationäre</pre>
      * Attention! this value ('before inpatient') seems to be also defined under the key FEE_GROUP_BEFORE_INPATIENT!
      */
    public static final String ICD_TYPE_BEFORE_INPATIENT = "IcdType.BeforeInpatient";

    /** <pre>ICD_TYPE_BILLING
      * [en] Billing
      * [de] Abrechnungs-</pre>
      */
    public static final String ICD_TYPE_BILLING = "IcdType.Billing";

    /** <pre>ICD_TYPE_CARE
      * [en] Care
      * [de] Pflege</pre>
      */
    public static final String ICD_TYPE_CARE = "IcdType.Care";

    /** <pre>ICD_TYPE_DEPARTMENT_ADMISSION
      * [en] Department Admission
      * [de] Fachabteilung Aufnahme</pre>
      */
    public static final String ICD_TYPE_DEPARTMENT_ADMISSION = "IcdType.DepartmentAdmission";

    /** <pre>ICD_TYPE_DEPARTMENT_DISCHARGE
      * [en] Department Discharge
      * [de] Fachabteilung Entlassung</pre>
      */
    public static final String ICD_TYPE_DEPARTMENT_DISCHARGE = "IcdType.DepartmentDischarge";

    /** <pre>ICD_TYPE_DEPARTMENT_TREATMENT
      * [en] Department Treatment
      * [de] Fachabteilung Behandlung</pre>
      */
    public static final String ICD_TYPE_DEPARTMENT_TREATMENT = "IcdType.DepartmentTreatment";

    /** <pre>ICD_TYPE_DISCHARGE
      * [en] Discharge
      * [de] Entlassung</pre>
      * Attention! this value ('Discharge') seems to be also defined under the key DISCHARGE!
      */
    public static final String ICD_TYPE_DISCHARGE = "IcdType.Discharge";

    /** <pre>ICD_TYPE_DISCHARGE_AMBULANT
      * [en] Discharge - ambulant
      * [de] Entlassung - ambulant</pre>
      */
    public static final String ICD_TYPE_DISCHARGE_AMBULANT = "IcdType.DischargeAmbulant";

    /** <pre>ICD_TYPE_DRG
      * [en] DRG
      * [de] DRG</pre>
      * Attention! this value ('DRG') seems to be also defined under the key CASE_RESOLVE_DRG! this value ('DRG') seems to be also defined under the key CASE_TYPE_DRG! this value ('DRG') seems to be also defined under the key DRG! this value ('DRG') seems to be also defined under the key DRG_SHORTCUT! this value ('DRG') seems to be also defined under the key FEE_GROUP_DRG! this value ('DRG') seems to be also defined under the key RULES_DRG!
      */
    public static final String ICD_TYPE_DRG = "IcdType.DRG";

    /** <pre>ICD_TYPE_HOSPITALIZATION
      * [en] Hospitalization
      * [de] Einweisung</pre>
      * Attention! this value ('Hospitalization') seems to be also defined under the key HOSPITALIZATION!
      */
    public static final String ICD_TYPE_HOSPITALIZATION = "IcdType.Hospitalization";

    /** <pre>ICD_TYPE_POSTOPERATIVE
      * [en] Postoperative
      * [de] Postoperativ</pre>
      */
    public static final String ICD_TYPE_POSTOPERATIVE = "IcdType.Postoperative";

    /** <pre>ICD_TYPE_PREOPERATIVE
      * [en] Preoperative
      * [de] Präoperativ</pre>
      */
    public static final String ICD_TYPE_PREOPERATIVE = "IcdType.Preoperative";

    /** <pre>ICD_TYPE_RISK
      * [en] Risk
      * [de] Risiko</pre>
      * Attention! this value ('risk') seems to be also defined under the key PROCESS_FINALISATION_RISK!
      */
    public static final String ICD_TYPE_RISK = "IcdType.Risk";

    /** <pre>ICD_TYPE_TRANSFERRING
      * [en] Transferring
      * [de] Verlegung</pre>
      * Attention! this value ('Transferring') seems to be also defined under the key ADMISSION_CAUSE_TRANSFERRING! this value ('Transferring') seems to be also defined under the key TRANSFERRING!
      */
    public static final String ICD_TYPE_TRANSFERRING = "IcdType.Transferring";

    /** <pre>ICD_TYPE_TREATMENT
      * [en] Treatment
      * [de] Behandlung</pre>
      * Attention! this value ('Treatment') seems to be also defined under the key ACG_INDEX_TYPE_TRT! this value ('Treatment') seems to be also defined under the key TREATMENT!
      */
    public static final String ICD_TYPE_TREATMENT = "IcdType.Treatment";

    /** <pre>ICD_TYPE_WORK
      * [en] Work
      * [de] Arbeits</pre>
      */
    public static final String ICD_TYPE_WORK = "IcdType.Work";

    /** <pre>ICDCATALOG
      * [en] ICD Catalog
      * [de] ICD Katalog</pre>
      */
    public static final String ICDCATALOG = "ICDCatalog";

    /** <pre>ICDCODE
      * [en] Main diagnosis (MD)
      * [de] Hauptdiagnose (HD)</pre>
      */
    public static final String ICDCODE = "ICDCode";

    /** <pre>IDENT_CLASS_ID10
      * [en] health insurance
      * [de] Krankenversicherungsträger</pre>
      * Attention! this value ('Health Insurance') seems to be also defined under the key HEALTH_INSURANCE!
      */
    public static final String IDENT_CLASS_ID10 = "IdentClass.ID10";

    /** <pre>IDENT_CLASS_ID11
      * [en] pension insurance
      * [de] Rentenversicherungsträger</pre>
      */
    public static final String IDENT_CLASS_ID11 = "IdentClass.ID11";

    /** <pre>IDENT_CLASS_ID12
      * [en] Accident insurance institutions
      * [de] Unfallversicherungsträger</pre>
      */
    public static final String IDENT_CLASS_ID12 = "IdentClass.ID12";

    /** <pre>IDENT_CLASS_ID13
      * [en] Welfare agency
      * [de] Sozialhilfeträger</pre>
      */
    public static final String IDENT_CLASS_ID13 = "IdentClass.ID13";

    /** <pre>IDENT_CLASS_ID14
      * [en] Federal agency for work
      * [de] Bundesagentur für Arbeit</pre>
      */
    public static final String IDENT_CLASS_ID14 = "IdentClass.ID14";

    /** <pre>IDENT_CLASS_ID15
      * [en] Pension offices and Orthopedic Supplies Set
      * [de] Versorgungsämter und Orthopädische Versorgungsstellen</pre>
      */
    public static final String IDENT_CLASS_ID15 = "IdentClass.ID15";

    /** <pre>IDENT_CLASS_ID16
      * [en] private health insurance
      * [de] Private Krankenversicherungen</pre>
      */
    public static final String IDENT_CLASS_ID16 = "IdentClass.ID16";

    /** <pre>IDENT_CLASS_ID17
      * [en] health authorities
      * [de] Gesundheitsämter</pre>
      */
    public static final String IDENT_CLASS_ID17 = "IdentClass.ID17";

    /** <pre>IDENT_CLASS_ID18
      * [en] Care funds of the health insurance
      * [de] Pflegekassen der Krankenversicherungsträger</pre>
      */
    public static final String IDENT_CLASS_ID18 = "IdentClass.ID18";

    /** <pre>IDENT_CLASS_ID19
      * [en] Support the Community's tasks and medical service of health insurance (MD) and the Medical Service Social (MDS)
      * [de] Träger der Gemeinschaftsaufgaben und Medizinischer Dienst der Krankenversicherung (MD) sowie Medizinischer Dienst der Sozialversicherung (MDS)</pre>
      */
    public static final String IDENT_CLASS_ID19 = "IdentClass.ID19";

    /** <pre>IDENT_CLASS_ID20
      * [en] Panel physician associations and doctors incl. Selbstabrechnender doctors (as evaluators doctors)
      * [de] Kassenärztliche Vereinigungen und Ärzte einschl. selbstabrechnender Ärzte (z.B. Gutachterärzte)</pre>
      */
    public static final String IDENT_CLASS_ID20 = "IdentClass.ID20";

    /** <pre>IDENT_CLASS_ID21
      * [en] Kassen dental associations and dentists incl. Selbstabrechnender dentists (as consultant)
      * [de] Kassenzahnärztliche Vereinigungen und Zahnärzte einschl. selbstabrechnender Zahnärzte (z.B. Gutachter)</pre>
      */
    public static final String IDENT_CLASS_ID21 = "IdentClass.ID21";

    /** <pre>IDENT_CLASS_ID22
      * [en] Private medical clearing centers
      * [de] Privatärztliche Verrechnungsstellen</pre>
      */
    public static final String IDENT_CLASS_ID22 = "IdentClass.ID22";

    /** <pre>IDENT_CLASS_ID26
      * [en] Hospitals, hospital pharmacies
      * [de] Krankenhäuser, Krankenhausapotheken</pre>
      */
    public static final String IDENT_CLASS_ID26 = "IdentClass.ID26";

    /** <pre>IDENT_CLASS_ID27
      * [en] Polyclinics, Integrated care, practice clinics
      * [de] Polikliniken, Integrierte Versorgung, Praxiskliniken</pre>
      */
    public static final String IDENT_CLASS_ID27 = "IdentClass.ID27";

    /** <pre>IDENT_CLASS_ID29
      * [en] Medical and technical laboratories, X-ray and Dental Technology, Institute of Pathology, Radiation and Hygiene Institute
      * [de] Medizinische und technische Labore, Röntgen- und Zahntechnik, Institut für Pathologie, Strahlen- und Hygieneinstitute</pre>
      */
    public static final String IDENT_CLASS_ID29 = "IdentClass.ID29";

    /** <pre>IDENT_CLASS_ID30
      * [en] pharmacies
      * [de] Apotheken</pre>
      */
    public static final String IDENT_CLASS_ID30 = "IdentClass.ID30";

    /** <pre>IDENT_CLASS_ID31
      * [en] Optometrists, Ophthalmologists (point of service provision, for example, contact lenses)
      * [de] Augenoptiker, Augenärzte (als Erbringer von Leistungen, z.B. Kontaktlinsen)</pre>
      */
    public static final String IDENT_CLASS_ID31 = "IdentClass.ID31";

    /** <pre>IDENT_CLASS_ID32
      * [en] Audiologist, otolaryngologists (point of service provision, for example, hearing aids)
      * [de] Hörgeräte-Akustiker, HNO-Ärzte (als Erbringer von Leistungen, z.B. Hörgeräteversorgung)</pre>
      */
    public static final String IDENT_CLASS_ID32 = "IdentClass.ID32";

    /** <pre>IDENT_CLASS_ID33
      * [en] Orthopedic technician, bandages, medical supply stores, medical and hospital supplies, Stomafachhandel Aids
      * [de] Orthopädiemechaniker, Bandagisten, Sanitätshäuser, Arzt- und Krankenhausbedarf, Stomafachhandel, Hilfsmittel</pre>
      */
    public static final String IDENT_CLASS_ID33 = "IdentClass.ID33";

    /** <pre>IDENT_CLASS_ID34
      * [en] Orthopädieschuhmacher, orthopedists (point of service provision, as deposits)
      * [de] Orthopädieschuhmacher, Orthopäden (als Erbringer von Leistungen, z.B. Einlagen)</pre>
      */
    public static final String IDENT_CLASS_ID34 = "IdentClass.ID34";

    /** <pre>IDENT_CLASS_ID35
      * [en] Wigs (hairdressers)
      * [de] Perückenmacher (Friseure)</pre>
      */
    public static final String IDENT_CLASS_ID35 = "IdentClass.ID35";

    /** <pre>IDENT_CLASS_ID39
      * [en] Podiatrists, med. Chiropodists
      * [de] Podologen, med. Fußpfleger</pre>
      */
    public static final String IDENT_CLASS_ID39 = "IdentClass.ID39";

    /** <pre>IDENT_CLASS_ID40
      * [en] Speech therapist, speech therapy therapist, special education
      * [de] Logopäden, Sprachheilbehandler, Sonderschullehrer</pre>
      */
    public static final String IDENT_CLASS_ID40 = "IdentClass.ID40";

    /** <pre>IDENT_CLASS_ID42
      * [en] See schools
      * [de] Sehschulen</pre>
      */
    public static final String IDENT_CLASS_ID42 = "IdentClass.ID42";

    /** <pre>IDENT_CLASS_ID43
      * [en] Med. Spa therapists, masseurs, practices for physical therapy, orthopedic surgeons (point of service provision, for example, massages), spas, Kurpacker
      * [de] Med. Bademeister, Masseure, Praxen für physikalische Therapie, Orthopäden (als Erbringer von Leistungen, z.B. Massagen), Kurbäder, Kurpacker</pre>
      */
    public static final String IDENT_CLASS_ID43 = "IdentClass.ID43";

    /** <pre>IDENT_CLASS_ID44
      * [en] Physiotherapists, practices for physiotherapy, sports clubs, antenatal exercises, Rehabilitationssport-, Herzsport- and disabled sports groups, functional training groups, gyms, riding therapy
      * [de] Krankengymnasten, Physiotherapeuten, Praxen für Physiotherapie, Sportvereine, Schwangerschaftsgymnastik, Rehabilitationssport-, Herzsport- und Behindertensportgruppen, Funktionstrainingsgruppen, Sportstudios, Reittherapie</pre>
      */
    public static final String IDENT_CLASS_ID44 = "IdentClass.ID44";

    /** <pre>IDENT_CLASS_ID45
      * [en] midwives
      * [de] Hebammen</pre>
      */
    public static final String IDENT_CLASS_ID45 = "IdentClass.ID45";

    /** <pre>IDENT_CLASS_ID46
      * [en] Sick and elderly carers, housekeepers, hospice nurse, power and industrial auxiliary ring
      * [de] Kranken- und Altenpfleger, Haushaltshilfen, Hauspfleger, Maschinen- und Betriebshilfsring</pre>
      */
    public static final String IDENT_CLASS_ID46 = "IdentClass.ID46";

    /** <pre>IDENT_CLASS_ID47
      * [en] health resorts
      * [de] Kurverwaltungen</pre>
      */
    public static final String IDENT_CLASS_ID47 = "IdentClass.ID47";

    /** <pre>IDENT_CLASS_ID48
      * [en] Employment and addiction therapists design and child therapy, occupational therapy, expressive therapy
      * [de] Beschäftigungs- und Suchttherapeuten, Gestaltungs- und Kindertherapie, Ergotherapie, Künstlerische Therapie</pre>
      */
    public static final String IDENT_CLASS_ID48 = "IdentClass.ID48";

    /** <pre>IDENT_CLASS_ID49
      * [en] Other therapeutic assistants, psychologists, psychotherapists, teaching aids, sociotherapy, Breakfast conveyor, special education, mobility manager, sign language interpreters, eurythmy therapists, social pediatric centers, after-care service PEKIP
      * [de] Sonstige therapeutische Hilfspersonen, Psychologen, Psychotherapeuten, Unterrichtshilfen, Soziotherapie, Frühfördereinrichtung, Sonderpädagogen, Mobilitätstrainer, Gebärdensprachdolmetscher, Heileurythmisten, Sozialpädiatrische Zentren, Nachsorgeeinrichtungen, PEKIP</pre>
      */
    public static final String IDENT_CLASS_ID49 = "IdentClass.ID49";

    /** <pre>IDENT_CLASS_ID50
      * [en] Charitable organizations, diaconal and social centers, community nurses, support groups, parishes, municipalities (care services, health, social care and nursing stations)
      * [de] Caritative Organisationen, Diakonie- und Sozialstationen, Gemeindeschwestern, Selbsthilfegruppen, Kirchengemeinden, Stadtverwaltungen (Pflegedienste, Kranken-, Sozial- und Schwesternstationen)</pre>
      */
    public static final String IDENT_CLASS_ID50 = "IdentClass.ID50";

    /** <pre>IDENT_CLASS_ID51
      * [en] Care homes, day and respite care, special education centers, centers Sozialtherapeutische
      * [de] Alten- und Pflegeheime, Tages- und Kurzzeitpflege, Sonderschulheime, Sozialtherapeutische Zentren</pre>
      */
    public static final String IDENT_CLASS_ID51 = "IdentClass.ID51";

    /** <pre>IDENT_CLASS_ID52
      * [en] Contract homes without medical institutions
      * [de] Vertragshäuser ohne medizinische Einrichtungen</pre>
      */
    public static final String IDENT_CLASS_ID52 = "IdentClass.ID52";

    /** <pre>IDENT_CLASS_ID53
      * [en] Facilities for vocational rehabilitation measures
      * [de] Einrichtungen für Maßnahmen der beruflichen Rehabilitation</pre>
      */
    public static final String IDENT_CLASS_ID53 = "IdentClass.ID53";

    /** <pre>IDENT_CLASS_ID54
      * [en] Outpatient and mobile rehabilitation facilities
      * [de] Ambulante und mobile Rehabilitationseinrichtungen</pre>
      */
    public static final String IDENT_CLASS_ID54 = "IdentClass.ID54";

    /** <pre>IDENT_CLASS_ID57
      * [en] Stationary prevention and rehabilitation facilities
      * [de] Stationäre Vorsorge- und Rehabilitationseinrichtungen</pre>
      */
    public static final String IDENT_CLASS_ID57 = "IdentClass.ID57";

    /** <pre>IDENT_CLASS_ID59
      * [en] Other providers of services i. P of the SGB
      * [de] Sonstige Erbringer von Leistungen i. S. des SGB</pre>
      */
    public static final String IDENT_CLASS_ID59 = "IdentClass.ID59";

    /** <pre>IDENT_CLASS_ID60
      * [en] Ambulance companies, doctors and providers in the emergency medical care
      * [de] Krankentransportunternehmen, Ärzte als Leistungserbringer in der notfallärztlichen Versorgung</pre>
      */
    public static final String IDENT_CLASS_ID60 = "IdentClass.ID60";

    /** <pre>IDENT_CLASS_ID65
      * [en] Undertakers
      * [de] Bestattungsunternehmen</pre>
      */
    public static final String IDENT_CLASS_ID65 = "IdentClass.ID65";

    /** <pre>IDENT_CLASS_ID66
      * [en] Clearinghouses, data centers, accounting inspection
      * [de] Abrechnungsstellen, Rechenzentren, Rechnungsprüfstellen</pre>
      */
    public static final String IDENT_CLASS_ID66 = "IdentClass.ID66";

    /** <pre>IDENT_CLASS_ID89
      * [en] Group indicator grouping several IK
      * [de] Gruppenkennzeichen zur Zusammenfassung mehrerer IK</pre>
      */
    public static final String IDENT_CLASS_ID89 = "IdentClass.ID89";

    /** <pre>IDENT_CLASS_ID93
      * [en] aid agencies
      * [de] Beihilfestellen</pre>
      */
    public static final String IDENT_CLASS_ID93 = "IdentClass.ID93";

    /** <pre>IDENT_CLASS_ID94
      * [en] Care funds outside the statutory health insurance
      * [de] Pflegekassen außerhalb der gesetzlichen Krankenversicherung</pre>
      */
    public static final String IDENT_CLASS_ID94 = "IdentClass.ID94";

    /** <pre>IDENT_CLASS_ID95
      * [en] Health insurance outside the statutory health insurance
      * [de] Krankenversicherungsträger außerhalb der gesetzlichen Krankenversicherung</pre>
      */
    public static final String IDENT_CLASS_ID95 = "IdentClass.ID95";

    /** <pre>IDENT_CLASS_ID96
      * [en] Authorities of the federal and state governments, courts
      * [de] Behörden des Bundes und der Länder, Gerichte</pre>
      */
    public static final String IDENT_CLASS_ID96 = "IdentClass.ID96";

    /** <pre>IDENT_CLASS_ID97
      * [en] Reserved for internal administrative-free use in the institutions
      * [de] Reserviert zur verwaltungsinternen freien Verwendung bei den Institutionen</pre>
      */
    public static final String IDENT_CLASS_ID97 = "IdentClass.ID97";

    /** <pre>IDENT_NUMBER
      * [en] Ident. Number
      * [de] IK-Nummer</pre>
      */
    public static final String IDENT_NUMBER = "IdentNumber";

    /** <pre>INFORM_SUPPORT
      * [en] Inform Support
      * [de] Support informieren</pre>
      */
    public static final String INFORM_SUPPORT = "InformSupport";

    /** <pre>INFORMATION
      * [en] Information (I)
      * [de] Information (I)</pre>
      */
    public static final String INFORMATION = "Information";

    /** <pre>INITIATION_TEST_PROCESSES
      * [en] Initiation test processes
      * [de] Einleitung Prüfverfahren (Einleitung Prüfv.)</pre>
      */
    public static final String INITIATION_TEST_PROCESSES = "InitiationTestProcesses";

    /** <pre>INITIATION_TEST_PROCESSES_FROM
      * [en] Initiation test processes from
      * [de] Einleitung Prüfv. von</pre>
      */
    public static final String INITIATION_TEST_PROCESSES_FROM = "InitiationTestProcesses.from";

    /** <pre>INITIATION_TEST_PROCESSES_TO
      * [en] Initiation test processes to
      * [de] Einleitung Prüfv. bis</pre>
      */
    public static final String INITIATION_TEST_PROCESSES_TO = "InitiationTestProcesses.to";

    /** <pre>INPUT_DATE_ERROR
      * [en] {0} no correct date
      * [de] {0} ist kein korrektes Datum</pre>
      */
    public static final String INPUT_DATE_ERROR = "Input.date.error";

    /** <pre>INPUT_DATE_FROM
      * [en] From date
      * [de] Von Datum</pre>
      */
    public static final String INPUT_DATE_FROM = "Input.date.from";

    /** <pre>INPUT_DATE_TO
      * [en] To date
      * [de] Bis Datum</pre>
      */
    public static final String INPUT_DATE_TO = "Input.date.to";

    /** <pre>INPUT_NUMBER_FROM
      * [en] From
      * [de] Von</pre>
      * Attention! this value ('from') seems to be also defined under the key DURATION_FROM!
      */
    public static final String INPUT_NUMBER_FROM = "Input.number.from";

    /** <pre>INPUT_NUMBER_TO
      * [en] To
      * [de] Bis</pre>
      * Attention! this value ('to') seems to be also defined under the key DURATION_TO!
      */
    public static final String INPUT_NUMBER_TO = "Input.number.to";

    /** <pre>INPUT_TIME_ERROR
      * [en] {0} no correct time
      * [de] {0} ist keine korrekte Zeit</pre>
      */
    public static final String INPUT_TIME_ERROR = "Input.time.error";

    /** <pre>INPUT_TIME_FROM
      * [en] From time
      * [de] Von Uhrzeit</pre>
      */
    public static final String INPUT_TIME_FROM = "Input.time.from";

    /** <pre>INPUT_TIME_TO
      * [en] To time
      * [de] Bis Uhrzeit</pre>
      */
    public static final String INPUT_TIME_TO = "Input.time.to";

    /** <pre>INS_SHORT
      * [en] Insurance (Insurance Group)
      * [de] Kasse (Versicherungs-/Krankenkassengruppen)</pre>
      */
    public static final String INS_SHORT = "Ins.Short";

    /** <pre>INS_SHORT_AOK
      * [en] AOK
      * [de] AOK</pre>
      */
    public static final String INS_SHORT_AOK = "Ins.Short.AOK";

    /** <pre>INS_SHORT_BARMER
      * [en] Barmer
      * [de] Barmer</pre>
      */
    public static final String INS_SHORT_BARMER = "Ins.Short.Barmer";

    /** <pre>INS_SHORT_BG
      * [en] BG
      * [de] BG</pre>
      */
    public static final String INS_SHORT_BG = "Ins.Short.BG";

    /** <pre>INS_SHORT_BKK
      * [en] BKK
      * [de] BKK</pre>
      */
    public static final String INS_SHORT_BKK = "Ins.Short.BKK";

    /** <pre>INS_SHORT_DAK
      * [en] DAK
      * [de] DAK</pre>
      */
    public static final String INS_SHORT_DAK = "Ins.Short.DAK";

    /** <pre>INS_SHORT_GEK
      * [en] GEK
      * [de] GEK</pre>
      */
    public static final String INS_SHORT_GEK = "Ins.Short.GEK";

    /** <pre>INS_SHORT_HA_MUE
      * [en] HaMü
      * [de] HaMü</pre>
      */
    public static final String INS_SHORT_HA_MUE = "Ins.Short.HaMue";

    /** <pre>INS_SHORT_HEK
      * [en] HEK
      * [de] HEK</pre>
      */
    public static final String INS_SHORT_HEK = "Ins.Short.HEK";

    /** <pre>INS_SHORT_HZK
      * [en] HZK
      * [de] HZK</pre>
      */
    public static final String INS_SHORT_HZK = "Ins.Short.HZK";

    /** <pre>INS_SHORT_IKK
      * [en] IKK
      * [de] IKK</pre>
      */
    public static final String INS_SHORT_IKK = "Ins.Short.IKK";

    /** <pre>INS_SHORT_KEH
      * [en] KEH
      * [de] KEH</pre>
      */
    public static final String INS_SHORT_KEH = "Ins.Short.KEH";

    /** <pre>INS_SHORT_KKH
      * [en] KKH
      * [de] KKH</pre>
      */
    public static final String INS_SHORT_KKH = "Ins.Short.KKH";

    /** <pre>INS_SHORT_KNAPPSCHAFT
      * [en] Knappschaft
      * [de] Knappschaft</pre>
      */
    public static final String INS_SHORT_KNAPPSCHAFT = "Ins.Short.Knappschaft";

    /** <pre>INS_SHORT_SBK
      * [en] SBK
      * [de] SBK</pre>
      */
    public static final String INS_SHORT_SBK = "Ins.Short.SBK";

    /** <pre>INS_SHORT_SOZIALAMT
      * [en] Sozialamt
      * [de] Sozialamt</pre>
      */
    public static final String INS_SHORT_SOZIALAMT = "Ins.Short.Sozialamt";

    /** <pre>INS_SHORT_TKK
      * [en] TKK
      * [de] TK</pre>
      */
    public static final String INS_SHORT_TKK = "Ins.Short.TKK";

    /** <pre>INS_STATUS_FAMILY_INSURANCE
      * [en] family insurance
      * [de] Familienversichert</pre>
      */
    public static final String INS_STATUS_FAMILY_INSURANCE = "Ins.Status.familyInsurance";

    /** <pre>INS_STATUS_RETIREES_AND_DEPENDENTS
      * [en] Retirees and dependents
      * [de] Rentner und Angehörige</pre>
      */
    public static final String INS_STATUS_RETIREES_AND_DEPENDENTS = "Ins.Status.RetireesAndDependents";

    /** <pre>INS_STATUS_SELF_INSURED
      * [en] self insured
      * [de] Selber versichert</pre>
      */
    public static final String INS_STATUS_SELF_INSURED = "Ins.Status.selfInsured";

    /** <pre>INSURANCE
      * [en] Insurance
      * [de] Versicherung</pre>
      * Attention! this value ('Insurance') seems to be also defined under the key REQUEST_TYPE_INSURANCE!
      */
    public static final String INSURANCE = "Insurance";

    /** <pre>INSURANCE_ASSOCIATION
      * [en] Insurance Association
      * [de] Berufsgenossenschaft</pre>
      * Attention! this value ('Insurance Association') seems to be also defined under the key REQUEST_TYPE_INSURANCE_ASSOCIATION!
      */
    public static final String INSURANCE_ASSOCIATION = "InsuranceAssociation";

    /** <pre>INSURANCE_ASSOCIATION_NAME
      * [en] Assoc. Name
      * [de] BG-Name</pre>
      */
    public static final String INSURANCE_ASSOCIATION_NAME = "InsuranceAssociation.Name";

    /** <pre>INSURANCE_BILL_RECIVED
      * [en] Insurance Recived Bill Date
      * [de] Eingang Rech.-datum  Kasse (Eingang Rech.-datum Kasse)</pre>
      */
    public static final String INSURANCE_BILL_RECIVED = "Insurance.bill.recived";

    /** <pre>INSURANCE_BILL_RECIVED_FROM
      * [de] Eingang Rech.-datum Kasse von</pre>
      */
    public static final String INSURANCE_BILL_RECIVED_FROM = "Insurance.bill.recived.from";

    /** <pre>INSURANCE_BILL_RECIVED_TO
      * [de] Eingang Rech.-datum Kasse bis</pre>
      */
    public static final String INSURANCE_BILL_RECIVED_TO = "Insurance.bill.recived.to";

    /** <pre>INSURANCE_COMPANY
      * [en] Insurance Company (Insurance Comp.)
      * [de] Versicherung (Versicherung)</pre>
      */
    public static final String INSURANCE_COMPANY = "Insurance.company";

    /** <pre>INSURANCE_DATA
      * [en] Insurance Data
      * [de] Versicherungsdaten</pre>
      */
    public static final String INSURANCE_DATA = "Insurance.data";

    /** <pre>INSURANCE_FEHLER
      * [de] IKZ der Versicherung nicht vorhanden</pre>
      */
    public static final String INSURANCE_FEHLER = "Insurance.Fehler";

    /** <pre>INSURANCE_IDENT
      * [en] Insurance Identifier
      * [de] IKZ der Versicherung (Versicherung)</pre>
      */
    public static final String INSURANCE_IDENT = "Insurance.Ident";

    /** <pre>INSURANCE_INSUREE
      * [en] Insuree
      * [de] Versicherungsnehmer</pre>
      */
    public static final String INSURANCE_INSUREE = "Insurance.Insuree";

    /** <pre>INSURANCE_NAME
      * [en] Insurance name
      * [de] Versicherungsname (Vers.-Name)</pre>
      * Attention! this value ('Insurance Name') seems to be also defined under the key AUDIT_INSU_NAME!
      */
    public static final String INSURANCE_NAME = "Insurance.name";

    /** <pre>INSURANCE_NUMBER
      * [en] Insurance Number
      * [de] Versicherten-Nummer (Vers.-Nr.)</pre>
      */
    public static final String INSURANCE_NUMBER = "Insurance.number";

    /** <pre>INSURANCE_NUMBER_FEHLER
      * [de] Versichertennummer des Patienten bei der Versicherung  nicht vorhanden</pre>
      */
    public static final String INSURANCE_NUMBER_FEHLER = "Insurance.number.Fehler";

    /** <pre>INSURANCE_STATUS
      * [en] Insurance Status
      * [de] Versicherungsstatus</pre>
      */
    public static final String INSURANCE_STATUS = "Insurance.status";

    /** <pre>INSURANCE_TYPE
      * [en] Insurancetype
      * [de] Art der Kasse</pre>
      */
    public static final String INSURANCE_TYPE = "Insurance.Type";

    /** <pre>INSURANCE_VALID_FROM_TO
      * [en] Valid From-To
      * [de] Gültig von/bis</pre>
      */
    public static final String INSURANCE_VALID_FROM_TO = "Insurance.validFromTo";

    /** <pre>INSURANCES
      * [en] Insurances
      * [de] Versicherungen</pre>
      * Attention! this value ('Insurances') seems to be also defined under the key CATALOG_DOWNLOAD_INSURANCE_COMPANYS!
      */
    public static final String INSURANCES = "Insurances";

    /** <pre>IS_NOT_SUPPORTED
      * [en] is not supported:
      * [de] wird nicht unterstützt (Minimum benötigt:</pre>
      */
    public static final String IS_NOT_SUPPORTED = "IsNotSupported";

    /** <pre>ITEM_LOCKED
      * [en] Locked (Lock)
      * [de] Gesperrt (Sperre)</pre>
      */
    public static final String ITEM_LOCKED = "ItemLocked";

    /** <pre>JOB_LOCK_ERROR_DATABASE
      * [en] Database is locked by {0} because of {1} since {2}!
      * [de] Datenbank ist gesperrt durch {0} wegen {1} seit {2} Uhr!</pre>
      */
    public static final String JOB_LOCK_ERROR_DATABASE = "Job.Lock.Error.Database";

    /** <pre>JOB_LOCK_ERROR_OPEN_CASES
      * [en] Please close open case or cases to proceed!
      * [de] Bitte den Fall oder die Fälle schließen um fortzufahren!</pre>
      */
    public static final String JOB_LOCK_ERROR_OPEN_CASES = "Job.Lock.Error.OpenCases";

    /** <pre>JOB_STATUS_COMPLETED
      * [en] completed
      * [de] Erfolgreich</pre>
      * Attention! this value ('Completed') seems to be also defined under the key CASE_MERGING_JOB_COMPLETED!
      */
    public static final String JOB_STATUS_COMPLETED = "Job.status.completed";

    /** <pre>JOB_STATUS_FAILED
      * [en] failed
      * [de] Gescheitert</pre>
      * Attention! this value ('Failed') seems to be also defined under the key CASE_MERGING_JOB_FAILED! this value ('Failed') seems to be also defined under the key FAILED!
      */
    public static final String JOB_STATUS_FAILED = "Job.status.failed";

    /** <pre>JOB_STATUS_STARTED
      * [en] execute Task
      * [de] Wird durchgeführt</pre>
      */
    public static final String JOB_STATUS_STARTED = "Job.status.started";

    /** <pre>JOB_STATUS_STARTING
      * [en] start Task
      * [de] Wird gestartet</pre>
      */
    public static final String JOB_STATUS_STARTING = "Job.status.starting";

    /** <pre>JOB_STATUS_STOPPED
      * [en] stopped
      * [de] Angehalten</pre>
      * Attention! this value ('Stopped') seems to be also defined under the key CASE_MERGING_JOB_STOPPED!
      */
    public static final String JOB_STATUS_STOPPED = "Job.status.stopped";

    /** <pre>JOB_STATUS_STOPPING
      * [en] cancel Task
      * [de] Wird beendet</pre>
      */
    public static final String JOB_STATUS_STOPPING = "Job.status.stopping";

    /** <pre>JOB_STAUTS_INITIALIZING
      * [en] initializing
      * [de] Wird initialisiert</pre>
      * Attention! this value ('Initializing') seems to be also defined under the key CASE_MERGING_JOB_INITIALIZING!
      */
    public static final String JOB_STAUTS_INITIALIZING = "Job.stauts.initializing";

    /** <pre>JOBS
      * [en] Jobs
      * [de] Jobs</pre>
      */
    public static final String JOBS = "Jobs";

    /** <pre>LAB_DATA
      * [en] Laboratory data
      * [de] Labordaten</pre>
      */
    public static final String LAB_DATA = "Lab.data";

    /** <pre>LAB_DATA_ANALYSIS
      * [en] Analysis (Analysis)
      * [de] Analyse (Analyse)</pre>
      */
    public static final String LAB_DATA_ANALYSIS = "Lab.Data.Analysis";

    /** <pre>LAB_DATA_ANALYSIS_DATE
      * [en] Analysis Date (Analysis Date)
      * [de] Datum Analyse (Datum Analyse)</pre>
      */
    public static final String LAB_DATA_ANALYSIS_DATE = "Lab.Data.AnalysisDate";

    /** <pre>LAB_DATA_BENCHMARK
      * [en] Benchmark (Benchmark)
      * [de] Bewertung (Bewertung)</pre>
      */
    public static final String LAB_DATA_BENCHMARK = "Lab.Data.Benchmark";

    /** <pre>LAB_DATA_CATEGORY
      * [en] Category (Category)
      * [de] Kategorie (Kategorie)</pre>
      */
    public static final String LAB_DATA_CATEGORY = "Lab.Data.Category";

    /** <pre>LAB_DATA_COMMENT
      * [en] Comment (Comment)
      * [de] Kommentar (Kommentar)</pre>
      */
    public static final String LAB_DATA_COMMENT = "Lab.Data.Comment";

    /** <pre>LAB_DATA_DESCRIPTION
      * [en] Description (Description)
      * [de] Beschreibung (Beschreibung)</pre>
      */
    public static final String LAB_DATA_DESCRIPTION = "Lab.Data.Description";

    /** <pre>LAB_DATA_GROUP
      * [en] Group (Group)
      * [de] Gruppe (Gruppe)</pre>
      */
    public static final String LAB_DATA_GROUP = "Lab.Data.Group";

    /** <pre>LAB_DATA_KIS_EXTERN_KEY
      * [en] KIS-External (KIS-External)
      * [de] KIS-Extern (KIS-Extern)</pre>
      */
    public static final String LAB_DATA_KIS_EXTERN_KEY = "Lab.Data.KisExternKey";

    /** <pre>LAB_DATA_LAB_DATE
      * [en] Document Date (Document Date)
      * [de] Dokumenten-Datum (Dokumenten-Datum)</pre>
      */
    public static final String LAB_DATA_LAB_DATE = "Lab.Data.LabDate";

    /** <pre>LAB_DATA_LOCK_DEL
      * [en] LockDel (LockDel)
      * [de] LockDel (LockDel)</pre>
      */
    public static final String LAB_DATA_LOCK_DEL = "Lab.Data.LockDel";

    /** <pre>LAB_DATA_MAX_LIMIT
      * [en] Max Limit (Max Limit)
      * [de] Max-Limit (Max-Limit)</pre>
      */
    public static final String LAB_DATA_MAX_LIMIT = "Lab.Data.MaxLimit";

    /** <pre>LAB_DATA_METHOD
      * [en] Method (Method)
      * [de] Methode (Methode)</pre>
      */
    public static final String LAB_DATA_METHOD = "Lab.Data.Method";

    /** <pre>LAB_DATA_MIN_LIMIT
      * [en] Min Limit (Min Limit)
      * [de] Min-Limit (Min-Limit)</pre>
      */
    public static final String LAB_DATA_MIN_LIMIT = "Lab.Data.MinLimit";

    /** <pre>LAB_DATA_POSITION
      * [en] Pos. (Pos.)
      * [de] Pos. (Pos.)</pre>
      */
    public static final String LAB_DATA_POSITION = "Lab.Data.Position";

    /** <pre>LAB_DATA_RANGE
      * [en] Normal Value (Normal Value)
      * [de] Normalwert (Normalwert)</pre>
      */
    public static final String LAB_DATA_RANGE = "Lab.Data.Range";

    /** <pre>LAB_DATA_TEXT
      * [en] Result value (Result value)
      * [de] Wert/Text (Wert/Text)</pre>
      */
    public static final String LAB_DATA_TEXT = "Lab.Data.Text";

    /** <pre>LAB_DATA_UNIT
      * [en] Unit (Unit)
      * [de] Einheit (Einheit)</pre>
      */
    public static final String LAB_DATA_UNIT = "Lab.Data.Unit";

    /** <pre>LAB_DATA_VALUE
      * [en] result value (result value)
      * [de] Ergebniswert (Ergebniswert)</pre>
      */
    public static final String LAB_DATA_VALUE = "Lab.Data.Value";

    /** <pre>LAB_DATA_VALUE_2
      * [en] result value 2 (result value 2)
      * [de] Ergebniswert2 (Ergebniswert2)</pre>
      */
    public static final String LAB_DATA_VALUE_2 = "Lab.Data.Value2";

    /** <pre>LANGUAGE
      * [en] Language
      * [de] Sprache</pre>
      */
    public static final String LANGUAGE = "Language";

    /** <pre>LAWER_FILE_NUMBER
      * [en] lawer filen number
      * [de] Aktenzeichen (RA) (Akt.-Z. (RA))</pre>
      */
    public static final String LAWER_FILE_NUMBER = "LawerFileNumber";

    /** <pre>LENGTH_OF_STAY
      * [en] Length of Stay (LoS)
      * [de] Verweildauer (VWD)</pre>
      */
    public static final String LENGTH_OF_STAY = "LengthOfStay";

    /** <pre>LENGTH_OF_STAY_FROM
      * [en] LoS from (LoS)
      * [de] Verweildauer von (VWD)</pre>
      */
    public static final String LENGTH_OF_STAY_FROM = "LengthOfStayFrom";

    /** <pre>LENGTH_OF_STAY_TO
      * [en] LoS to (LoS)
      * [de] Verweildauer bis (VWD)</pre>
      */
    public static final String LENGTH_OF_STAY_TO = "LengthOfStayTo";

    /** <pre>LEVEL_ALL
      * [en] Alle Meldungen werden ungefiltert ausgegeben
      * [de] Alle Meldungen werden ungefiltert ausgegeben</pre>
      */
    public static final String LEVEL_ALL = "Level.all";

    /** <pre>LEVEL_CONFIG
      * [en] Informationen zur Konfiguration
      * [de] Informationen zur Konfiguration</pre>
      */
    public static final String LEVEL_CONFIG = "Level.config";

    /** <pre>LEVEL_DEBUG
      * [en] allgemeines Debugging (Auffinden von Fehlern)
      * [de] allgemeines Debugging (Auffinden von Fehlern)</pre>
      */
    public static final String LEVEL_DEBUG = "Level.debug";

    /** <pre>LEVEL_ERROR
      * [en] Fehler (Ausnahme wurde abgefangen. Bearbeitung wurde alternativ fortgesetzt)
      * [de] Fehler (Ausnahme wurde abgefangen. Bearbeitung wurde alternativ fortgesetzt)</pre>
      */
    public static final String LEVEL_ERROR = "Level.error";

    /** <pre>LEVEL_FATAL
      * [en] Kritischer Fehler, Programmabbruch
      * [de] Kritischer Fehler, Programmabbruch</pre>
      */
    public static final String LEVEL_FATAL = "Level.fatal";

    /** <pre>LEVEL_FINEST
      * [en] Ausgabe feinster Informationen
      * [de] Ausgabe feinster Informationen</pre>
      */
    public static final String LEVEL_FINEST = "Level.finest";

    /** <pre>LEVEL_INFO
      * [en] allgemeine Informationen
      * [de] allgemeine Informationen</pre>
      */
    public static final String LEVEL_INFO = "Level.info";

    /** <pre>LEVEL_OFF
      * [en] Logging ist deaktiviert
      * [de] Logging ist deaktiviert</pre>
      */
    public static final String LEVEL_OFF = "Level.off";

    /** <pre>LEVEL_TRACE
      * [en] ausführlicheres Debugging, Kommentare
      * [de] ausführlicheres Debugging, Kommentare</pre>
      */
    public static final String LEVEL_TRACE = "Level.trace";

    /** <pre>LEVEL_WARNING
      * [en] Auftreten einer unerwarteten Situation
      * [de] Auftreten einer unerwarteten Situation</pre>
      */
    public static final String LEVEL_WARNING = "Level.warning";

    /** <pre>LOCAL_VERSIONS
      * [en] CP-Versions
      * [de] CPX-Versionen</pre>
      */
    public static final String LOCAL_VERSIONS = "LocalVersions";

    /** <pre>LOCALISATION_BILATERAL
      * [en] both sides (b)
      * [de] beidseitig (b)</pre>
      */
    public static final String LOCALISATION_BILATERAL = "Localisation.bilateral";

    /** <pre>LOCALISATION_LEFT
      * [en] left (l)
      * [de] links (l)</pre>
      */
    public static final String LOCALISATION_LEFT = "Localisation.left";

    /** <pre>LOCALISATION_RIGHT
      * [en] right (r)
      * [de] rechts (r)</pre>
      */
    public static final String LOCALISATION_RIGHT = "Localisation.right";

    /** <pre>LOCK_CASE_ENTRY_MESSAGE
      * [en] Hospital case {0} is already opened by user {1} since {2}!
      * [de] Der Fall {0} ist seit {2} Uhr bereits von Nutzer {1} geöffnet!</pre>
      */
    public static final String LOCK_CASE_ENTRY_MESSAGE = "Lock.Case.Entry.Message";

    /** <pre>LOCK_PROCESS_ENTRY_MESSAGE
      * [en] Process {0} is already opened by user {1} since {2}!
      * [de] Der Vorgang {0} ist seit {2} Uhr bereits von Nutzer {1} geöffnet!</pre>
      */
    public static final String LOCK_PROCESS_ENTRY_MESSAGE = "Lock.Process.Entry.Message";

    /** <pre>LOGIN_DATABASE
      * [en] Database
      * [de] Datenbank</pre>
      */
    public static final String LOGIN_DATABASE = "Login.Database";

    /** <pre>LOGIN_ERROR_MESSAGE
      * [en] Error happened when I tried to connect configuration service.Please check these possible reasons:
      * [de] Ein Fehler ist aufgetreten . Bitte überprüfen Sie diese möglichen Gründe:</pre>
      */
    public static final String LOGIN_ERROR_MESSAGE = "Login.Error.Message";

    /** <pre>LOGIN_ERROR_MESSAGE_CONFIGURATION
      * [en] The configuration file is not available
      * [de] Die Konfigurationsdatei ist nicht verfügbar</pre>
      */
    public static final String LOGIN_ERROR_MESSAGE_CONFIGURATION = "Login.Error.Message.configuration";

    /** <pre>LOGIN_ERROR_MESSAGE_CONFIGURATION_INVALID
      * [en] The configuration file is faulty
      * [de] Die Konfigurationsdatei ist fehlerhaft</pre>
      */
    public static final String LOGIN_ERROR_MESSAGE_CONFIGURATION_INVALID = "Login.Error.Message.configuration.invalid";

    /** <pre>LOGIN_ERROR_MESSAGE_SERVER
      * [en] No connection to Checkpoint X Server possible
      * [de] Keine Verbindung zum Checkpoint X Server möglich</pre>
      */
    public static final String LOGIN_ERROR_MESSAGE_SERVER = "Login.Error.Message.server";

    /** <pre>LOGIN_EXIT
      * [en] Exit
      * [de] Beenden</pre>
      * Attention! this value ('Exit') seems to be also defined under the key EXIT!
      */
    public static final String LOGIN_EXIT = "Login.Exit";

    /** <pre>LOGIN_FAILED_ACCOUNT_EXPIRED
      * [en] Account has been expired or becomes valid in the future
      * [de] Benutzerkonto ist entweder abgelaufen oder noch nicht gültig</pre>
      */
    public static final String LOGIN_FAILED_ACCOUNT_EXPIRED = "Login.Failed.AccountExpired";

    /** <pre>LOGIN_FAILED_ACCOUNT_INVALID
      * [en] Account is not valid anymore
      * [de] Benutzerkonto ist nicht mehr gültig</pre>
      */
    public static final String LOGIN_FAILED_ACCOUNT_INVALID = "Login.Failed.AccountInvalid";

    /** <pre>LOGIN_FAILED_CLIENT_ID_DOES_NOT_MATCH
      * [en] Passed Client ID {0} does not match with with session Client ID
      * [de] Übergebene Client ID {0} stimmt nicht mit der Client ID in der Session überein</pre>
      */
    public static final String LOGIN_FAILED_CLIENT_ID_DOES_NOT_MATCH = "Login.Failed.ClientIdDoesNotMatch";

    /** <pre>LOGIN_FAILED_CLIENT_ID_MISSING
      * [en] No Client ID passed
      * [de] Es wurde keine Client ID angegeben</pre>
      */
    public static final String LOGIN_FAILED_CLIENT_ID_MISSING = "Login.Failed.ClientIdMissing";

    /** <pre>LOGIN_FAILED_DATABASE_DOES_NOT_EXIST
      * [en] Database {0} does not exist
      * [de] Datenbank {0} existiert nicht</pre>
      */
    public static final String LOGIN_FAILED_DATABASE_DOES_NOT_EXIST = "Login.Failed.DatabaseDoesNotExist";

    /** <pre>LOGIN_FAILED_DATABASE_IS_NOT_AVAILABLE
      * [en] Database {0} is not available: {1}
      * [de] Datenbank {0} ist nicht verfügbar: {1}</pre>
      */
    public static final String LOGIN_FAILED_DATABASE_IS_NOT_AVAILABLE = "Login.Failed.DatabaseIsNotAvailable";

    /** <pre>LOGIN_FAILED_DATABASE_NO_RIGHT
      * [en] Role ''''{0}'''' has no permission for database {1}
      * [de] Die Rolle ''''{0}'''' hat keine Berechtigung für die Datenbank {1}</pre>
      */
    public static final String LOGIN_FAILED_DATABASE_NO_RIGHT = "Login.Failed.Database.noRight";

    /** <pre>LOGIN_FAILED_DATABASE_NO_RIGHT_OTHER_ROLE
      * [en] You can use this database with your role ''''{0}''''.
      * [de] Mit Ihrer Rolle ''''{0}'''' können Sie mit dieser Datenbank arbeiten.</pre>
      */
    public static final String LOGIN_FAILED_DATABASE_NO_RIGHT_OTHER_ROLE = "Login.Failed.Database.noRight.Other.Role";

    /** <pre>LOGIN_FAILED_DATABASE_NO_RIGHT_OTHER_ROLE_1
      * [en] Do you want to continue with this role?
      * [de] Wollen Sie mit dieser Rolle die Anmeldung fortsetzen?</pre>
      */
    public static final String LOGIN_FAILED_DATABASE_NO_RIGHT_OTHER_ROLE_1 = "Login.Failed.Database.noRight.Other.Role.1";

    /** <pre>LOGIN_FAILED_NO_DATABASE_SELECTED
      * [en] No database selected
      * [de] Es wurde keine Datenbank angegeben</pre>
      */
    public static final String LOGIN_FAILED_NO_DATABASE_SELECTED = "Login.Failed.NoDatabaseSelected";

    /** <pre>LOGIN_FAILED_NO_LICENSE
      * [en] There's no CPX license installed
      * [de] Es wurde keine checkpoint x-Lizenz gefunden</pre>
      */
    public static final String LOGIN_FAILED_NO_LICENSE = "Login.Failed.No.License";

    /** <pre>LOGIN_FAILED_NO_VALID_LICENSE
      * [en] CPX License is expired. The License was valid till {0}
      * [de] checkpoint x-Lizenz ist abgelaufen. Die Lizenz war gültig bis {0}</pre>
      */
    public static final String LOGIN_FAILED_NO_VALID_LICENSE = "Login.Failed.No.Valid.License";

    /** <pre>LOGIN_FAILED_PASSWORD_INVALID
      * [en] Password invalid
      * [de] Passwort ungültig</pre>
      */
    public static final String LOGIN_FAILED_PASSWORD_INVALID = "Login.Failed.PasswordInvalid";

    /** <pre>LOGIN_FAILED_PASSWORD_MISSING
      * [en] No password passed
      * [de] Es wurde kein Passwort angegeben</pre>
      */
    public static final String LOGIN_FAILED_PASSWORD_MISSING = "Login.Failed.PasswordMissing";

    /** <pre>LOGIN_FAILED_USERNAME_INVALID
      * [en] Name invalid
      * [de] Name ungültig</pre>
      */
    public static final String LOGIN_FAILED_USERNAME_INVALID = "Login.Failed.UsernameInvalid";

    /** <pre>LOGIN_FAILED_USERNAME_MISSING
      * [en] No user name passed
      * [de] Es wurde kein Benutzername angegeben</pre>
      */
    public static final String LOGIN_FAILED_USERNAME_MISSING = "Login.Failed.UsernameMissing";

    /** <pre>LOGIN_LOGIN
      * [en] Login
      * [de] Einloggen</pre>
      */
    public static final String LOGIN_LOGIN = "Login.Login";

    /** <pre>LOGIN_PASSWORD
      * [en] Password
      * [de] Passwort</pre>
      */
    public static final String LOGIN_PASSWORD = "Login.Password";

    /** <pre>LOGIN_START_TEAMVIEWER
      * [en] Start Teamviewer
      * [de] Starte Teamviewer</pre>
      */
    public static final String LOGIN_START_TEAMVIEWER = "Login.StartTeamviewer";

    /** <pre>LOGIN_SUPPORT_AND_CONTACT
      * [en] Support &amp; Contact Details
      * [de] Support &amp; Kontaktdaten</pre>
      */
    public static final String LOGIN_SUPPORT_AND_CONTACT = "Login.SupportAndContact";

    /** <pre>LOGIN_USER
      * [en] User
      * [de] Benutzer</pre>
      */
    public static final String LOGIN_USER = "Login.User";

    /** <pre>LOS
      * [en] LoS
      * [de] VWD</pre>
      * Attention! this value ('LOS') seems to be also defined under the key DIALOG_BATCH_GROUPING_LOS!
      */
    public static final String LOS = "LOS";

    /** <pre>LOS_ALTERATION
      * [en] Los Alteration?
      * [de] Tage simuliert (Tage sim.)</pre>
      */
    public static final String LOS_ALTERATION = "LosAlteration";

    /** <pre>LOS_ALTERATION_FROM
      * [en] Los Alteration from
      * [de] Tage sim. von</pre>
      */
    public static final String LOS_ALTERATION_FROM = "LosAlteration.from";

    /** <pre>LOS_ALTERATION_TO
      * [en] Los Alteration to
      * [de] Tage sim. bis</pre>
      */
    public static final String LOS_ALTERATION_TO = "LosAlteration.to";

    /** <pre>LUMP_SUM
      * [en] Lump Sum
      * [de] Pauschale</pre>
      */
    public static final String LUMP_SUM = "LumpSum";

    /** <pre>MAIN_AUDIT_REASON
      * [en] Main audit reason
      * [de] Hauptprüfgrund</pre>
      */
    public static final String MAIN_AUDIT_REASON = "MainAuditReason";

    /** <pre>MAIN_DEPARTMENT
      * [en] Main Department
      * [de] Hauptabteilung</pre>
      */
    public static final String MAIN_DEPARTMENT = "MainDepartment";

    /** <pre>MAIN_DIAGNOSIS_ERROR
      * [de] Eine Stern- oder Zusatzdiagnose kann nicht als Hauptdiagnose gesetzt werden.</pre>
      */
    public static final String MAIN_DIAGNOSIS_ERROR = "MainDiagnosis.Error";

    /** <pre>MD_AUDIT_QUOTA
      * [en] MD auditquotas
      * [de] MD Prüfquote</pre>
      */
    public static final String MD_AUDIT_QUOTA = "Md.audit.quota";

    /** <pre>MD_MASTERDATA
      * [en] MD masterdata
      * [de] MD Stammdaten</pre>
      */
    public static final String MD_MASTERDATA = "Md.masterdata";

    /** <pre>MDC
      * [en] MDC
      * [de] Hauptdiagnosegruppe/Strukturkategorie (MDC/SK)</pre>
      * Attention! this value ('MDC') seems to be also defined under the key RULES_DRG_MDC!
      */
    public static final String MDC = "MDC";

    /** <pre>MDK_ADDRESS
      * [en] Address
      * [de] Anschrift</pre>
      * Attention! this value ('Address') seems to be also defined under the key ADDRESS! this value ('Address') seems to be also defined under the key AUDIT_ADDRESS!
      */
    public static final String MDK_ADDRESS = "Mdk.address";

    /** <pre>MDK_ADDRESS_VALIDATE
      * [en] Invalid Address. Please provide valid entry.
      * [de] Ungültige Adresse. Bitte geben Sie einen gültigen Eintrag an.</pre>
      */
    public static final String MDK_ADDRESS_VALIDATE = "Mdk.addressValidate";

    /** <pre>MDK_AREA_CODE
      * [en] Area Code
      * [de] Postleitzahl</pre>
      * Attention! this value ('Area Code') seems to be also defined under the key AUDIT_AREA_CODE!
      */
    public static final String MDK_AREA_CODE = "Mdk.areaCode";

    /** <pre>MDK_AUDIT_COMPLETION_DEADLINE
      * [en] Mdk Audit Completion Deadline
      * [de] Frist Abschluss MD-Prüfung</pre>
      */
    public static final String MDK_AUDIT_COMPLETION_DEADLINE = "Mdk.AuditCompletionDeadline";

    /** <pre>MDK_AUDIT_COMPLETION_DEADLINE_DAYS
      * [de] Tage bis Abschluss Vorverfahren (Abschluss Vorverf.)</pre>
      */
    public static final String MDK_AUDIT_COMPLETION_DEADLINE_DAYS = "Mdk.audit.completion.deadline.days";

    /** <pre>MDK_AUDIT_COMPLETION_DEADLINE_ERROR
      * [en] No valid entry is found for the audit completion deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
      * [de] Keinen gültigen Eintrag für die Frist "Abschluss MD-Prüfung" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
      */
    public static final String MDK_AUDIT_COMPLETION_DEADLINE_ERROR = "Mdk.auditCompletionDeadlineError";

    /** <pre>MDK_AUDIT_COMPLETION_DEADLINE_FROM
      * [de] Frist Vv Abschluss von</pre>
      */
    public static final String MDK_AUDIT_COMPLETION_DEADLINE_FROM = "Mdk.audit.completion.deadline.from";

    /** <pre>MDK_AUDIT_COMPLETION_DEADLINE_TO
      * [de] Frist Vv Abschluss bis</pre>
      */
    public static final String MDK_AUDIT_COMPLETION_DEADLINE_TO = "Mdk.audit.completion.deadline.to";

    /** <pre>MDK_AUDIT_REASONS
      * [en] Audit Reasons (Audit Reasons)
      * [de] Prüfgründe (Prüfgründe)</pre>
      */
    public static final String MDK_AUDIT_REASONS = "Mdk.AuditReasons";

    /** <pre>MDK_BILL_CORRECTION_DEADLINE
      * [en] Bill Correction Deadline
      * [de] Frist einmalige Rechnungskorrektur</pre>
      */
    public static final String MDK_BILL_CORRECTION_DEADLINE = "Mdk.billCorrectionDeadline";

    /** <pre>MDK_BILL_CORRECTION_DEADLINE_ERROR
      * [en] No valid entry is found for the bill correction deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
      * [de] Keinen gültigen Eintrag für die Frist "Einmalige Rechnungskorrektur" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
      */
    public static final String MDK_BILL_CORRECTION_DEADLINE_ERROR = "Mdk.billCorrectionDeadlineError";

    /** <pre>MDK_COMMENT
      * [en] Mdk Comment
      * [de] MD-Ergebnis/Bemerkung</pre>
      */
    public static final String MDK_COMMENT = "Mdk.comment";

    /** <pre>MDK_CONTINUATION_FEE_DEADLINE_ERROR
      * [en] No valid entry is found for the continuation fee deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
      * [de] Keinen gültigen Eintrag für die Frist "Fortsetzungpauschale gezahlt" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
      */
    public static final String MDK_CONTINUATION_FEE_DEADLINE_ERROR = "Mdk.continuationFeeDeadlineError";

    /** <pre>MDK_CONTINUATION_FEE_PAID
      * [en] Continuation Fee Paid
      * [de] Fortsetzungspauschale gezahlt</pre>
      */
    public static final String MDK_CONTINUATION_FEE_PAID = "Mdk.continuationFeePaid";

    /** <pre>MDK_CREATE_REQUEST_WINDOW
      * [en] Create a request
      * [de] Anfrage anlegen</pre>
      */
    public static final String MDK_CREATE_REQUEST_WINDOW = "Mdk.createRequestWindow";

    /** <pre>MDK_DEADLINE_FOR_SUBMISSION
      * [en] Deadline For Submission
      * [de] Abgabefrist bis</pre>
      */
    public static final String MDK_DEADLINE_FOR_SUBMISSION = "Mdk.deadlineForSubmission";

    /** <pre>MDK_DEPARTMENT
      * [en] Mdk Department
      * [de] MD-Dienststelle</pre>
      */
    public static final String MDK_DEPARTMENT = "Mdk.department";

    /** <pre>MDK_DEPARTMENT_VALIDATE
      * [en] Invalid MD Department. Please provide valid entry.
      * [de] Ungültige MD-Dienststelle. Bitte geben Sie einen gültigen Eintrag an.</pre>
      */
    public static final String MDK_DEPARTMENT_VALIDATE = "Mdk.DepartmentValidate";

    /** <pre>MDK_DOCUMENT_DELIVER_AND_CONTINUATION_FEE_DEADLINES_ERROR
      * [en] No valid entry is found for the document deliver and continuation fee deadlines in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
      * [de] Keinen gültigen Eintrag für die Frist "Abgabefrist Unterlagen" und "Fortsetzungpauschale gezahlt" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
      */
    public static final String MDK_DOCUMENT_DELIVER_AND_CONTINUATION_FEE_DEADLINES_ERROR = "Mdk.documentDeliverAndContinuationFeeDeadlinesError";

    /** <pre>MDK_DOCUMENT_DELIVER_DEADLINE
      * [de] Frist bis zum Versenden der Unterlagen an den MD (Frist Versand)</pre>
      */
    public static final String MDK_DOCUMENT_DELIVER_DEADLINE = "Mdk.document.deliver.deadline";

    /** <pre>MDK_DOCUMENT_DELIVER_DEADLINE_DAYS
      * [de] Tage bis Versand MD-Unterlagen (Unterlagen MD)</pre>
      */
    public static final String MDK_DOCUMENT_DELIVER_DEADLINE_DAYS = "Mdk.document.deliver.deadline.days";

    /** <pre>MDK_DOCUMENT_DELIVER_DEADLINE_ERROR
      * [en] No valid entry is found for the document deliver deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
      * [de] Keinen gültigen Eintrag für die Frist "Abgabefrist Unterlagen" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
      */
    public static final String MDK_DOCUMENT_DELIVER_DEADLINE_ERROR = "Mdk.documentDeliverDeadlineError";

    /** <pre>MDK_DOCUMENT_DELIVER_DEADLINE_FROM
      * [de] Frist Versand von</pre>
      */
    public static final String MDK_DOCUMENT_DELIVER_DEADLINE_FROM = "Mdk.document.deliver.deadline.from";

    /** <pre>MDK_DOCUMENT_DELIVER_DEADLINE_TO
      * [de] Frist Versand bis</pre>
      */
    public static final String MDK_DOCUMENT_DELIVER_DEADLINE_TO = "Mdk.document.deliver.deadline.to";

    /** <pre>MDK_DOCUMENT_DELIVERED
      * [en] Document Delivered at
      * [de] gesendet am</pre>
      */
    public static final String MDK_DOCUMENT_DELIVERED = "Mdk.documentDelivered";

    /** <pre>MDK_DOCUMENT_REQUEST
      * [en] Document Request at
      * [de] angefordert am</pre>
      */
    public static final String MDK_DOCUMENT_REQUEST = "Mdk.documentRequest";

    /** <pre>MDK_DOCUMENTS
      * [en] MD Documents
      * [de] MD-Unterlagen</pre>
      */
    public static final String MDK_DOCUMENTS = "Mdk.documents";

    /** <pre>MDK_EDITOR
      * [en] Editor
      * [de] Bearbeiter</pre>
      * Attention! this value ('Editor') seems to be also defined under the key AUDIT_EDITOR!
      */
    public static final String MDK_EDITOR = "Mdk.editor";

    /** <pre>MDK_EMAIL
      * [en] Email Address
      * [de] Mail-Adresse</pre>
      */
    public static final String MDK_EMAIL = "Mdk.Email";

    /** <pre>MDK_EMPTY_MDK_DATA_DIALOG
      * [en] Either request was created without selecting any MD or selected MD was deleted after creating this MD request. Please select required MD.
      * [de] Entweder wurde eine Anfrage angelegt ohne einen MD auszuwählen oder der ausgewählte MD wurde nach dem Anlegen dieser MD-Anfrage gelöscht. Bitte benötigten MD auswählen.</pre>
      */
    public static final String MDK_EMPTY_MDK_DATA_DIALOG = "Mdk.emptyMdkDataDialog";

    /** <pre>MDK_EXTENDED_AUDIT_REASONS
      * [en] Extended Audit Reasons
      * [de] Erweiterte Prüfgründe</pre>
      */
    public static final String MDK_EXTENDED_AUDIT_REASONS = "Mdk.ExtendedAuditReasons";

    /** <pre>MDK_FAX
      * [en] Fax
      * [de] Fax</pre>
      * Attention! this value ('Fax') seems to be also defined under the key AUDIT_FAX! this value ('Fax') seems to be also defined under the key FAX!
      */
    public static final String MDK_FAX = "Mdk.fax";

    /** <pre>MDK_FAX_VALIDATE
      * [en] Invalid Fax No. Please provide valid entry.
      * [de] Ungültige Faxnummer. Bitte geben Sie einen gültigen Eintrag an.</pre>
      */
    public static final String MDK_FAX_VALIDATE = "Mdk.faxValidate";

    /** <pre>MDK_INFORMATIONS
      * [en] MD Informations
      * [de] MD-Informationen</pre>
      */
    public static final String MDK_INFORMATIONS = "Mdk.informations";

    /** <pre>MDK_MAIL_ADDRESS_VALIDATE
      * [en] Invalid Email-address. Please provide valid entry.
      * [de] Ungültige Mail-Adresse. Bitte geben Sie einen gültigen Eintrag an.</pre>
      */
    public static final String MDK_MAIL_ADDRESS_VALIDATE = "Mdk.mailAddressValidate";

    /** <pre>MDK_NAME
      * [en] MD Name
      * [de] MD-Name</pre>
      */
    public static final String MDK_NAME = "Mdk.name";

    /** <pre>MDK_NAME_VALIDATE
      * [en] Invalid MD Name. Please provide valid entry.
      * [de] Ungültiger MD-Name. Bitte geben Sie einen gültigen Eintrag an.</pre>
      */
    public static final String MDK_NAME_VALIDATE = "Mdk.NameValidate";

    /** <pre>MDK_PHONE_NO_VALIDATE
      * [en] Invalid Telephone No. Please provide valid entry.
      * [de] Ungültige Telefonnummer. Bitte geben Sie einen gültigen Eintrag an.</pre>
      */
    public static final String MDK_PHONE_NO_VALIDATE = "Mdk.phoneNoValidate";

    /** <pre>MDK_PHONE_PREFIX_VALIDATE
      * [en] Invalid Telephone-prefix. Please provide valid entry.
      * [de] Ungültige Vorwahl. Bitte geben Sie einen gültigen Eintrag an.</pre>
      */
    public static final String MDK_PHONE_PREFIX_VALIDATE = "Mdk.phonePrefixValidate";

    /** <pre>MDK_PROCESS_START_DATE
      * [en] Process Start Date
      * [de] Einleitung Prüfverfahren Kasse</pre>
      */
    public static final String MDK_PROCESS_START_DATE = "Mdk.processStartDate";

    /** <pre>MDK_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE
      * [en] No valid entry is found for the Proposal Subsequent Proceedings Deadline  in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
      * [de] Keinen gültigen Eintrag für die Frist "Frist Vorschlag Nachverfahren"  in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
      */
    public static final String MDK_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE = "Mdk.proposalSubsequentProceedingsDeadline";

    /** <pre>MDK_REPORT_CREATION_DATE
      * [en] Report Creation Date
      * [de] Gutachtendatum</pre>
      * Attention! this value ('Report Creation Date') seems to be also defined under the key MDK_REPORT_CREATION_DATE_EQUAL!
      */
    public static final String MDK_REPORT_CREATION_DATE = "Mdk.reportCreationDate";

    /** <pre>MDK_REPORT_CREATION_DATE_EQUAL
      * [en] Report Creation Date
      * [de] Gutachtendatum</pre>
      * Attention! this value ('Report Creation Date') seems to be also defined under the key MDK_REPORT_CREATION_DATE!
      */
    public static final String MDK_REPORT_CREATION_DATE_EQUAL = "Mdk.reportCreationDateEqual";

    /** <pre>MDK_REPORT_CREATION_DATE_FROM
      * [en] Report Creation Date from
      * [de] Gutachtendatum von</pre>
      */
    public static final String MDK_REPORT_CREATION_DATE_FROM = "Mdk.reportCreationDateFrom";

    /** <pre>MDK_REPORT_CREATION_DATE_TO
      * [en] Report Creation Date to
      * [de] Gutachtendatum bis</pre>
      */
    public static final String MDK_REPORT_CREATION_DATE_TO = "Mdk.reportCreationDateTo";

    /** <pre>MDK_REPORT_CREATION_QUARTER
      * [en] Report Creation Quarter
      * [de] Gutachten-Quartal</pre>
      */
    public static final String MDK_REPORT_CREATION_QUARTER = "Mdk.reportCreationQuarter";

    /** <pre>MDK_REPORT_RECEIVE_DATE
      * [en] Report Receive Date
      * [de] Eingang Gutachten</pre>
      */
    public static final String MDK_REPORT_RECEIVE_DATE = "Mdk.reportReceiveDate";

    /** <pre>MDK_START_AUDIT
      * [en] Mdk Start Audit
      * [de] Einleitung MD-Prüfung</pre>
      * Attention! this value ('Mdk Start Audit') seems to be also defined under the key MDK_START_AUDIT_EQUAL!
      */
    public static final String MDK_START_AUDIT = "Mdk.startAudit";

    /** <pre>MDK_START_AUDIT_EQUAL
      * [en] Mdk Start Audit
      * [de] Einl. MD-Prüfung</pre>
      * Attention! this value ('Mdk Start Audit') seems to be also defined under the key MDK_START_AUDIT!
      */
    public static final String MDK_START_AUDIT_EQUAL = "Mdk.startAuditEqual";

    /** <pre>MDK_START_AUDIT_EXTENDED
      * [en] Mdk Start Audit Extended
      * [de] Einleitung erweiterte MD-Prüfung</pre>
      * Attention! this value ('Mdk Start Audit Extended') seems to be also defined under the key MDK_START_AUDIT_EXTENDED_EQUAL!
      */
    public static final String MDK_START_AUDIT_EXTENDED = "Mdk.startAuditExtended";

    /** <pre>MDK_START_AUDIT_EXTENDED_EQUAL
      * [en] Mdk Start Audit Extended
      * [de] Einl. erw. MD-Prüfung</pre>
      * Attention! this value ('Mdk Start Audit Extended') seems to be also defined under the key MDK_START_AUDIT_EXTENDED!
      */
    public static final String MDK_START_AUDIT_EXTENDED_EQUAL = "Mdk.startAuditExtendedEqual";

    /** <pre>MDK_START_AUDIT_EXTENDED_FROM
      * [en] Mdk Start Audit Extended from
      * [de] Einl. erw. MD-Prüfung von</pre>
      */
    public static final String MDK_START_AUDIT_EXTENDED_FROM = "Mdk.startAuditExtendedFrom";

    /** <pre>MDK_START_AUDIT_EXTENDED_TO
      * [en] Mdk Start Audit Extended to
      * [de] Einl. erw. MD-Prüfung bis</pre>
      */
    public static final String MDK_START_AUDIT_EXTENDED_TO = "Mdk.startAuditExtendedTo";

    /** <pre>MDK_START_AUDIT_FROM
      * [en] Mdk Start Audit from
      * [de] Einl. MD-Prüfung von</pre>
      */
    public static final String MDK_START_AUDIT_FROM = "Mdk.startAuditFrom";

    /** <pre>MDK_START_AUDIT_QUARTER
      * [en] Quartal Einleitung MD-Prüfung
      * [de] Quartal Einleitung MD-Prüfung</pre>
      */
    public static final String MDK_START_AUDIT_QUARTER = "Mdk.startAuditQuarter";

    /** <pre>MDK_START_AUDIT_TO
      * [en] Mdk Start Audit to
      * [de] Einl. MD-Prüfung bis</pre>
      */
    public static final String MDK_START_AUDIT_TO = "Mdk.startAuditTo";

    /** <pre>MDK_STATUS
      * [en] Request State
      * [de] Status der Anfrage (Anfrage-Status)</pre>
      * Attention! this value ('Request State') seems to be also defined under the key REQUEST_STATUS!
      */
    public static final String MDK_STATUS = "Mdk.status";

    /** <pre>MDK_SUBSEQUENT_PROCEEDING
      * [en] subsequent Proceeding
      * [de] Fort bezahlt am</pre>
      */
    public static final String MDK_SUBSEQUENT_PROCEEDING = "Mdk.subsequentProceeding";

    /** <pre>MDK_SUBSEQUENT_PROCEEDING_DATE
      * [en] subsequent proceeding date
      * [de] Nachverfahren (Nachverfahren)</pre>
      */
    public static final String MDK_SUBSEQUENT_PROCEEDING_DATE = "Mdk.subsequent.Proceeding.date";

    /** <pre>MDK_SUBSEQUENT_PROCEEDING_DATE_FORM
      * [en] Nsubsequent proceeding date from
      * [de] Nachverfahren von</pre>
      */
    public static final String MDK_SUBSEQUENT_PROCEEDING_DATE_FORM = "Mdk.subsequent.Proceeding.date.form";

    /** <pre>MDK_SUBSEQUENT_PROCEEDING_DATE_TO
      * [en] subsequent proceeding date to
      * [de] Nachverfahren bis</pre>
      */
    public static final String MDK_SUBSEQUENT_PROCEEDING_DATE_TO = "Mdk.subsequent.Proceeding.date.to";

    /** <pre>MDK_TELEPHONE
      * [en] Telephone
      * [de] Telefon</pre>
      * Attention! this value ('Telephone') seems to be also defined under the key AUDIT_TELEPHONE!
      */
    public static final String MDK_TELEPHONE = "Mdk.telephone";

    /** <pre>MDK_TELEPHONE_AREA_CODE
      * [en] Telephone Area Code
      * [de] Vorwahl</pre>
      * Attention! this value ('Telephone Area Code') seems to be also defined under the key AUDIT_TELEPHONE_AREA_CODE!
      */
    public static final String MDK_TELEPHONE_AREA_CODE = "Mdk.telephoneAreaCode";

    /** <pre>MDK_UPDATE_REQUEST_WINDOW
      * [en] Update a request (MD)
      * [de] Anfrage aktualisieren (MD)</pre>
      */
    public static final String MDK_UPDATE_REQUEST_WINDOW = "Mdk.updateRequestWindow";

    /** <pre>MDK_USER_COMMENT
      * [en] User Comment
      * [de] Eigene Notizen</pre>
      * Attention! this value ('User Comment') seems to be also defined under the key AUDIT_USER_COMMENT!
      */
    public static final String MDK_USER_COMMENT = "Mdk.userComment";

    /** <pre>MDK_ZIP_CODE_VALIDATE
      * [en] Invalid Zipcode. Please provide valid entry.
      * [de] Ungültige Postleitzahl. Bitte geben Sie einen gültigen Eintrag an.</pre>
      */
    public static final String MDK_ZIP_CODE_VALIDATE = "Mdk.zipCodeValidate";

    /** <pre>MENU_BATCH_GROUPING
      * [en] Batchgrouping
      * [de] Batchgroupen</pre>
      */
    public static final String MENU_BATCH_GROUPING = "Menu.batch.grouping";

    /** <pre>MENU_BATCH_GROUPING_DETAILS_FILTER
      * [en] Case version filter
      * [de] Fallversionen</pre>
      */
    public static final String MENU_BATCH_GROUPING_DETAILS_FILTER = "Menu.batch.grouping.detailsFilter";

    /** <pre>MENU_BATCH_GROUPING_DETAILS_FILTER_ACTUAL_BOTH
      * [en] current case versions (incl. KIS)
      * [de] aktuelle Fallversionen (inkl. KIS)</pre>
      */
    public static final String MENU_BATCH_GROUPING_DETAILS_FILTER_ACTUAL_BOTH = "Menu.batch.grouping.detailsFilter.ActualBoth";

    /** <pre>MENU_BATCH_GROUPING_DETAILS_FILTER_ACTUAL_LOCAL
      * [en] current local case versions
      * [de] lokale aktuelle Fallversionen</pre>
      */
    public static final String MENU_BATCH_GROUPING_DETAILS_FILTER_ACTUAL_LOCAL = "Menu.batch.grouping.detailsFilter.ActualLocal";

    /** <pre>MENU_BATCH_GROUPING_DETAILS_FILTER_ALL
      * [en] all case versions
      * [de] Alle Fallversionen</pre>
      */
    public static final String MENU_BATCH_GROUPING_DETAILS_FILTER_ALL = "Menu.batch.grouping.detailsFilter.All";

    /** <pre>MENU_BATCH_GROUPING_DETAILS_FILTER_TOOLTIP
      * [de] Es können alle Fälle der KIS-Version gegroupt werden. Die bestehende Checkpoint DRG-Version bleibt unberührt. Alle Fallversionen zu groupen kann sehr lange dauern!</pre>
      */
    public static final String MENU_BATCH_GROUPING_DETAILS_FILTER_TOOLTIP = "Menu.batch.grouping.detailsFilter.tooltip";

    /** <pre>MENU_BATCH_GROUPING_DO_FOR_ACTUAL_ROLE_ONLY
      * [en] Save Results for current Role
      * [de] Ergebnisse für aktuelle Rolle speichern</pre>
      */
    public static final String MENU_BATCH_GROUPING_DO_FOR_ACTUAL_ROLE_ONLY = "Menu.batch.grouping.doForActualRoleOnly";

    /** <pre>MENU_BATCH_GROUPING_DO_FOR_ACTUAL_ROLE_ONLY_TOOLTIP
      * [de] Die Prüfregelergebnisse werden nur für die eigene Rolle gespeichert.Für Benutzer mit einer anderen Rolle sind die Prüfregelergebnisse nicht sichtbar.</pre>
      */
    public static final String MENU_BATCH_GROUPING_DO_FOR_ACTUAL_ROLE_ONLY_TOOLTIP = "Menu.batch.grouping.doForActualRoleOnly.tooltip";

    /** <pre>MENU_BATCH_GROUPING_DO_HISTORY_CASES
      * [en] check with history
      * [de] fallübergreifend</pre>
      */
    public static final String MENU_BATCH_GROUPING_DO_HISTORY_CASES = "Menu.batch.grouping.doHistoryCases";

    /** <pre>MENU_BATCH_GROUPING_DO_HISTORY_CASES_TOOLTIP
      * [en] use rules for check of history cases for patient
      * [de] Es werden fallübergreifende Regeln an die Fälle abgewendet</pre>
      */
    public static final String MENU_BATCH_GROUPING_DO_HISTORY_CASES_TOOLTIP = "Menu.batch.grouping.doHistoryCases.tooltip";

    /** <pre>MENU_BATCH_GROUPING_DO_RULES
      * [en] with automatic Case Check
      * [de] mit automatischer Fallprüfung</pre>
      */
    public static final String MENU_BATCH_GROUPING_DO_RULES = "Menu.batch.grouping.doRules";

    /** <pre>MENU_BATCH_GROUPING_DO_RULES_SIMULATE
      * [en] with automatic Case Correction
      * [de] mit automatischer Fallkorrektur</pre>
      */
    public static final String MENU_BATCH_GROUPING_DO_RULES_SIMULATE = "Menu.batch.grouping.doRulesSimulate";

    /** <pre>MENU_BATCH_GROUPING_DO_RULES_SIMULATE_TOOLTIP
      * [de] Bei den angeschlagenen Regeln werden die Regelempfehlungen ausgewertet und eine eventuelle Erlösdifferenz, CW-positiv und CW–negativ zusammengefasst, ausgegeben.</pre>
      */
    public static final String MENU_BATCH_GROUPING_DO_RULES_SIMULATE_TOOLTIP = "Menu.batch.grouping.doRulesSimulate.tooltip";

    /** <pre>MENU_BATCH_GROUPING_DO_RULES_TOOLTIP
      * [de] Alle Fälle werden mit den aktivierten Regeln des entsprechenden Jahres geprüft.</pre>
      */
    public static final String MENU_BATCH_GROUPING_DO_RULES_TOOLTIP = "Menu.batch.grouping.doRules.tooltip";

    /** <pre>MENU_BATCH_GROUPING_DO_SIMULATE
      * [en] DRG/PEPP Simulation
      * [de] DRG/PEPP Simulation</pre>
      */
    public static final String MENU_BATCH_GROUPING_DO_SIMULATE = "Menu.batch.grouping.doSimulate";

    /** <pre>MENU_BATCH_GROUPING_DO_SIMULATE_TOOLTIP
      * [de] Für jede Nebendiagnose des Falles wird eine DRG/PEPP Simulation durchgeführt,indem diese als Hauptdiagnose ausgewählt wird.</pre>
      */
    public static final String MENU_BATCH_GROUPING_DO_SIMULATE_TOOLTIP = "Menu.batch.grouping.doSimulate.tooltip";

    /** <pre>MENU_BATCH_GROUPING_GROUPED
      * [en] Only Cases without DRG/PEPP
      * [de] Nur Fälle ohne DRG/PEPP</pre>
      */
    public static final String MENU_BATCH_GROUPING_GROUPED = "Menu.batch.grouping.grouped";

    /** <pre>MENU_BATCH_GROUPING_GROUPED_TOOLTIP
      * [de] Es werden nur Fälle gegroupt,die noch kein DRG- bzw. PEPP-Ergebnis enthalten.</pre>
      */
    public static final String MENU_BATCH_GROUPING_GROUPED_TOOLTIP = "Menu.batch.grouping.grouped.tooltip";

    /** <pre>MENU_BATCH_GROUPING_LAST_RESULTS
      * [en] Last Results
      * [de] Letzte Ergebnisse</pre>
      */
    public static final String MENU_BATCH_GROUPING_LAST_RESULTS = "Menu.batch.grouping.lastResults";

    /** <pre>MENU_BATCH_GROUPING_MED_AND_REMEDIES
      * [en] GK Check
      * [de] GK Prüfung</pre>
      */
    public static final String MENU_BATCH_GROUPING_MED_AND_REMEDIES = "Menu.batch.grouping.medAndRemedies";

    /** <pre>MENU_BATCH_GROUPING_MED_AND_REMEDIES_TOOLTIP
      * [de] Bei der Regelauswertung werden auch die Regeln angewendet, die Medikamenten-,Heil- und Hilfsmittelkriterien beinhalten.</pre>
      */
    public static final String MENU_BATCH_GROUPING_MED_AND_REMEDIES_TOOLTIP = "Menu.batch.grouping.medAndRemedies.tooltip";

    /** <pre>MENU_BATCH_GROUPING_SETTINGS
      * [en] Settings
      * [de] Einstellungen</pre>
      */
    public static final String MENU_BATCH_GROUPING_SETTINGS = "Menu.batch.grouping.settings";

    /** <pre>MENU_BATCH_GROUPING_START
      * [en] Start
      * [de] Ermitteln</pre>
      */
    public static final String MENU_BATCH_GROUPING_START = "Menu.batch.grouping.start";

    /** <pre>MENU_BATCH_GROUPING_SUPPLEMENTARY_FEE
      * [en] Distribute Fee
      * [de] Zusatzentgelte verteilen</pre>
      */
    public static final String MENU_BATCH_GROUPING_SUPPLEMENTARY_FEE = "Menu.batch.grouping.supplementaryFee";

    /** <pre>MENU_BATCH_GROUPING_SUPPLEMENTARY_FEE_TOOLTIP
      * [de] Die Zusatzentgelte werden entsprechend der OPS-Codes zugeordnet</pre>
      */
    public static final String MENU_BATCH_GROUPING_SUPPLEMENTARY_FEE_TOOLTIP = "Menu.batch.grouping.supplementaryFee.tooltip";

    /** <pre>MENU_BATCH_GROUPING_USED_RULES
      * [en] Rules to use
      * [de] Regelauswahl</pre>
      */
    public static final String MENU_BATCH_GROUPING_USED_RULES = "Menu.batch.grouping.usedRules";

    /** <pre>MENU_BATCH_INFO_GROUPED
      * [en] cases to group: {0}
      * [de] Fallversionen zu groupen: {0}</pre>
      */
    public static final String MENU_BATCH_INFO_GROUPED = "Menu.batch.info.grouped";

    /** <pre>MENU_CHANGE
      * [en] change
      * [de] Wechseln</pre>
      * Attention! this value ('Change') seems to be also defined under the key EVENT_OPERATION_EDIT!
      */
    public static final String MENU_CHANGE = "Menu.change";

    /** <pre>MENU_CLOSE
      * [en] close
      * [de] Schließen</pre>
      */
    public static final String MENU_CLOSE = "Menu.close";

    /** <pre>MENU_DATABASE_CHANGE
      * [en] Change database
      * [de] Datenbank wechseln...</pre>
      */
    public static final String MENU_DATABASE_CHANGE = "Menu.Database.change";

    /** <pre>MENU_DATABASE_CHANGE_VALIDATION_DB_SAME
      * [en] Choose a different database
      * [de] Bitte eine unterschiedliche Datenbank wählen</pre>
      */
    public static final String MENU_DATABASE_CHANGE_VALIDATION_DB_SAME = "Menu.Database.change.validation.db.same";

    /** <pre>MENU_DATABASE_CHANGE_VALIDATION_DB_SELECTION
      * [en] Choose a database
      * [de] Bitte eine Datenbank wählen</pre>
      * Attention! this value ('Choose a database') seems to be also defined under the key MENU_USER_CHANGE_VALIDATION_DB_SELECTION!
      */
    public static final String MENU_DATABASE_CHANGE_VALIDATION_DB_SELECTION = "Menu.Database.change.validation.db.selection";

    /** <pre>MENU_DATABASE_STATUSTEXT
      * [en] Database: {0}
      * [de] Datenbank: {0}</pre>
      */
    public static final String MENU_DATABASE_STATUSTEXT = "Menu.Database.Statustext";

    /** <pre>MENU_GROUPER_SETTINGS
      * [en] Grouper Settings
      * [de] Grouper Einstellungen</pre>
      */
    public static final String MENU_GROUPER_SETTINGS = "Menu.Grouper.Settings";

    /** <pre>MENU_GROUPER_STATUSTEXT
      * [en] Grouper: {0}
      * [de] Grouper: {0}</pre>
      */
    public static final String MENU_GROUPER_STATUSTEXT = "Menu.Grouper.Statustext";

    /** <pre>MENU_ROLE_CHANGE
      * [en] Change the active role of the user...
      * [de] Aktive Rolle ändern...</pre>
      */
    public static final String MENU_ROLE_CHANGE = "Menu.Role.change";

    /** <pre>MENU_ROLE_CHANGE_VALIDATION_SELECTION
      * [en] Please choose a role
      * [de] Bitte eine Rolle wählen</pre>
      */
    public static final String MENU_ROLE_CHANGE_VALIDATION_SELECTION = "Menu.Role.change.validation.selection";

    /** <pre>MENU_SEARCH_FILTER
      * [en] Searchfilter
      * [de] Suchfilter</pre>
      */
    public static final String MENU_SEARCH_FILTER = "Menu.search.filter";

    /** <pre>MENU_SERVER_STATUSTEXT
      * [en] Server: {0}:{1}
      * [de] Server: {0}:{1}</pre>
      */
    public static final String MENU_SERVER_STATUSTEXT = "Menu.Server.Statustext";

    /** <pre>MENU_USER_CHANGE
      * [en] Change user
      * [de] Benutzer wechseln...</pre>
      */
    public static final String MENU_USER_CHANGE = "Menu.User.change";

    /** <pre>MENU_USER_CHANGE_PROFILE_IMAGE
      * [en] Change profile image
      * [de] Profilbild ändern</pre>
      */
    public static final String MENU_USER_CHANGE_PROFILE_IMAGE = "Menu.User.Change.Profile.Image";

    /** <pre>MENU_USER_CHANGE_VALIDATION_DB_SELECTION
      * [en] Choose a database
      * [de] Bitte eine Datenbank wählen</pre>
      * Attention! this value ('Choose a database') seems to be also defined under the key MENU_DATABASE_CHANGE_VALIDATION_DB_SELECTION!
      */
    public static final String MENU_USER_CHANGE_VALIDATION_DB_SELECTION = "Menu.User.change.validation.db.selection";

    /** <pre>MENU_USER_LOGIN_STATUSTEXT
      * [en] logged in since {0}
      * [de] eingeloggt seit {0} Uhr</pre>
      */
    public static final String MENU_USER_LOGIN_STATUSTEXT = "Menu.User.Login.Statustext";

    /** <pre>MENU_USER_NAME_STATUSTEXT
      * [en] Name: {0}
      * [de] Name: {0}</pre>
      */
    public static final String MENU_USER_NAME_STATUSTEXT = "Menu.User.Name.Statustext";

    /** <pre>MENU_USER_ROLE_STATUSTEXT
      * [en] Role: {0}
      * [de] Rolle: {0}</pre>
      */
    public static final String MENU_USER_ROLE_STATUSTEXT = "Menu.User.Role.Statustext";

    /** <pre>MENU_USER_STATUSTEXT
      * [en] Username: {0}
      * [de] Benutzername: {0}</pre>
      */
    public static final String MENU_USER_STATUSTEXT = "Menu.User.Statustext";

    /** <pre>MENU_WIZARD_BACK
      * [en] Back
      * [de] Zurück</pre>
      */
    public static final String MENU_WIZARD_BACK = "Menu.Wizard.Back";

    /** <pre>MENU_WIZARD_NEXT
      * [en] Next
      * [de] Weiter</pre>
      */
    public static final String MENU_WIZARD_NEXT = "Menu.Wizard.Next";

    /** <pre>MESSAGE_CASE_DATE_NOT_VALID
      * [en] The admision year  {0} is not supporten by Grouper any more
      * [de] Das Aufnahmejahr {0} wird nicht mehr vom Grouper unterstützt</pre>
      */
    public static final String MESSAGE_CASE_DATE_NOT_VALID = "Message.case.date.not.valid";

    /** <pre>MESSAGE_CASE_HAS_NO_DISCHARGE_DATE
      * [en] The case does not have a discharge date
      * [de] Der Fall hat kein Entlassungsdatum</pre>
      */
    public static final String MESSAGE_CASE_HAS_NO_DISCHARGE_DATE = "Message.case.has.no.discharge.date";

    /** <pre>MESSAGE_CASE_NOT_GROUPED
      * [en] The case was not grouped with the model '{0}'
      * [de] Der Fall wurde mit dem Groupermodel {0} noch nicht gegroupt</pre>
      */
    public static final String MESSAGE_CASE_NOT_GROUPED = "Message.case.not.grouped";

    /** <pre>MIDWIFE
      * [en] Midwife
      * [de] Hebamme</pre>
      */
    public static final String MIDWIFE = "Midwife";

    /** <pre>MODE_OF_ADMISSION
      * [en] Mode of Admission
      * [de] Erbringungsart</pre>
      */
    public static final String MODE_OF_ADMISSION = "ModeOfAdmission";

    /** <pre>MODE_OF_ADMISSION_DEPARTMENT
      * [en] Departmenttype
      * [de] Abteilungstyp</pre>
      */
    public static final String MODE_OF_ADMISSION_DEPARTMENT = "ModeOfAdmission.Department";

    /** <pre>MODIFICATION_DATE
      * [en] Modification Date
      * [de] Änderungsdatum</pre>
      */
    public static final String MODIFICATION_DATE = "ModificationDate";

    /** <pre>MODIFIED_FROM
      * [en] from {0}
      * [de] von {0}</pre>
      * Attention! this value ('from {0}') seems to be also defined under the key CREATED_FROM!
      */
    public static final String MODIFIED_FROM = "ModifiedFrom";

    /** <pre>MODIFIED_ON
      * [en] Modified on {0}
      * [de] Geändert am {0}</pre>
      */
    public static final String MODIFIED_ON = "ModifiedOn";

    /** <pre>MS_EXCEL_NOT_FOUND
      * [en] Microsoft Excel was not found!
      * [de] Microsoft Excel wurde nicht gefunden!</pre>
      */
    public static final String MS_EXCEL_NOT_FOUND = "MsExcelNotFound";

    /** <pre>MS_EXCEL_VERSION
      * [en] The Microsoft Excel Version
      * [de] Die Microsoft Excel Version</pre>
      */
    public static final String MS_EXCEL_VERSION = "MsExcelVersion";

    /** <pre>MS_OFFICE_DISABLED
      * [en] Ms Office was deactivated, it is out of use now!
      * [de] Die Verwendung von Microsoft Office wurde deaktiviert!</pre>
      */
    public static final String MS_OFFICE_DISABLED = "MsOfficeDisabled";

    /** <pre>MS_OFFICE_NOT_FOUND
      * [en] Microsoft Office was not found!
      * [de] Es wurde keine Office-Installation gefunden</pre>
      */
    public static final String MS_OFFICE_NOT_FOUND = "MsOfficeNotFound";

    /** <pre>MS_OFFICE_VERSION
      * [en] The Microsoft Office Version
      * [de] Die Microsoft Office Version</pre>
      */
    public static final String MS_OFFICE_VERSION = "MsOfficeVersion";

    /** <pre>MS_OUTLOOK_NOT_FOUND
      * [en] Microsoft Outlook was nou found!
      * [de] Microsoft Outlook wurde nicht gefunden!</pre>
      */
    public static final String MS_OUTLOOK_NOT_FOUND = "MsOutlookNotFound";

    /** <pre>MS_OUTLOOK_VERSION
      * [en] The Microsoft Outlook Version
      * [de] Die Microsoft Outlook Version</pre>
      */
    public static final String MS_OUTLOOK_VERSION = "MsOutlookVersion";

    /** <pre>MS_WORD_NOT_FOUND
      * [en] Microsoft Word was not found!
      * [de] Microsoft Word wurde nicht gefunden!</pre>
      */
    public static final String MS_WORD_NOT_FOUND = "MsWordNotFound";

    /** <pre>MS_WORD_VERSION
      * [en] The Microsoft Word Version
      * [de] Die Microsoft Word Version</pre>
      */
    public static final String MS_WORD_VERSION = "MsWordVersion";

    /** <pre>MSG_CACHE_ALREADY_CLEAR
      * [en] Cache ist bereits geleert
      * [de] Cache ist bereits geleert</pre>
      */
    public static final String MSG_CACHE_ALREADY_CLEAR = "Msg.cache.already.clear";

    /** <pre>MSG_CLEAR_CACHE
      * [en] Cache wurde erfolgreich geleert!Entfernte Einträge:
      * [de] Cache wurde erfolgreich geleert!Entfernte Einträge:</pre>
      */
    public static final String MSG_CLEAR_CACHE = "Msg.clear.cache";

    /** <pre>MSG_NO_RIGHT_BLANK
      * [en] You do not have right to {0} any {1}
      * [de] Sie haben keine Berechtigung, eine {0} zu {1}</pre>
      */
    public static final String MSG_NO_RIGHT_BLANK = "Msg.no.right.blank";

    /** <pre>MSG_NO_RIGHT_OTHER_BLANK
      * [en] You do not have right to {0} any {1} from another user
      * [de] Sie haben keine Berechtigung, eine {0} anderer Nutzer zu {1}</pre>
      */
    public static final String MSG_NO_RIGHT_OTHER_BLANK = "Msg.no.right.other.blank";

    /** <pre>NEGOTIABLE
      * [en] Negotiable
      * [de] Verhandelbar</pre>
      */
    public static final String NEGOTIABLE = "Negotiable";

    /** <pre>NEW_RULE
      * [en] nnew rule
      * [de] neue Regel</pre>
      */
    public static final String NEW_RULE = "New.rule";

    /** <pre>NEW_RULE_TABLE
      * [en] new rule table
      * [de] neue Regeltabelle</pre>
      */
    public static final String NEW_RULE_TABLE = "New.rule.table";

    /** <pre>NEW_RULE_TYPE
      * [en] new rule type
      * [de] neuer Regeltyp</pre>
      */
    public static final String NEW_RULE_TYPE = "New.rule.type";

    /** <pre>NO_ADMISSION_CAUSE_FOUND
      * [en] Admission cause is not set
      * [de] Aufnahmeanlass ist nicht gesetzt</pre>
      */
    public static final String NO_ADMISSION_CAUSE_FOUND = "No.admission.cause.found";

    /** <pre>NO_ADMISSION_DATE_FOUND
      * [en] Admission date is not set
      * [de] Aufnahmedatum des Falles ist nicht gesetzt</pre>
      */
    public static final String NO_ADMISSION_DATE_FOUND = "No.admission.date.found";

    /** <pre>NO_ADMISSION_MODE_FOUND
      * [en] Admission mode is not set
      * [de] Erbringungsart des DRG - Falles wurde ist nicht gesetzt</pre>
      */
    public static final String NO_ADMISSION_MODE_FOUND = "No.admission.mode.found";

    /** <pre>NO_ADMISSION_REASON_34_FOUND
      * [en] Admission reason 34 is not set
      * [de] Aufnahmegrund 34 ist nicht gesetzt</pre>
      */
    public static final String NO_ADMISSION_REASON_34_FOUND = "No.admission.reason34.found";

    /** <pre>NO_ADMISSION_REASON_FOUND
      * [en] Admission reason 12 is not set
      * [de] Aufnahmegrund 12 ist nicht gesetzt</pre>
      */
    public static final String NO_ADMISSION_REASON_FOUND = "No.admission.reason.found";

    /** <pre>NO_CASE_DETAILS_FOUND
      * [en] Case details is not found
      * [de] Falleigenschaften des Falles sind nicht vorhanden</pre>
      */
    public static final String NO_CASE_DETAILS_FOUND = "No.case.details.found";

    /** <pre>NO_CASE_RESOLVES
      * [en] No Case Resolves
      * [de] Keine Prüfregelanschläge</pre>
      */
    public static final String NO_CASE_RESOLVES = "NoCaseResolves";

    /** <pre>NO_CATEGORY
      * [en] No category
      * [de] Keine Kategorie</pre>
      */
    public static final String NO_CATEGORY = "No.category";

    /** <pre>NO_DEPARMENT_ADMMISION_DATE
      * [en] Admission date of the not admission department is not set
      * [de] Aufnahmedatum der nicht aufnehmenden Bewegung ist nicht gesetzt</pre>
      */
    public static final String NO_DEPARMENT_ADMMISION_DATE = "No.deparment.admmision.date";

    /** <pre>NO_DEPARTMENT_CODED
      * [en] There are no departments in case coded
      * [de] Im Fall sind keine Bewegungen gesetzt</pre>
      */
    public static final String NO_DEPARTMENT_CODED = "No.department.coded";

    /** <pre>NO_DEPARTMENT_DISCHARGE_DATE
      * [en] Discharge date of the not discharge department is not set
      * [de] Entlassungsdatum der nicht entlassenden Bewegung ist nicht gesetzt</pre>
      */
    public static final String NO_DEPARTMENT_DISCHARGE_DATE = "No.department.discharge.date";

    /** <pre>NO_DISCHARGE_DATE_FOUND
      * [en] Discharge date is not set
      * [de] Entlassungsdatum des Falles ist nicht gesetzt</pre>
      */
    public static final String NO_DISCHARGE_DATE_FOUND = "No.discharge.date.found";

    /** <pre>NO_DISCHARGE_REASON_3_FOUND
      * [en] Discharge reason 3 is not set
      * [de] Entlassungsgrund 3 des Falles ist nicht gesetzt</pre>
      */
    public static final String NO_DISCHARGE_REASON_3_FOUND = "No.discharge.reason3.found";

    /** <pre>NO_DISCHARGE_REASON_FOUND
      * [en] Discharge reason 12 is not set
      * [de] Entlassungsgrund 12 des Falles ist nicht gesetzt</pre>
      */
    public static final String NO_DISCHARGE_REASON_FOUND = "No.discharge.reason.found";

    /** <pre>NO_HOSPITAL_CASE
      * [en] Hospital case is null
      * [de] es wurde kein Fall an Grouper übergeben</pre>
      */
    public static final String NO_HOSPITAL_CASE = "No.hospital.case";

    /** <pre>NO_RULE_TYPE_FOUND_4_RULE
      * [de] in der XML - Regel ist Regeltype definiert, der micht in DB gefunden ist und micht importiert wurde</pre>
      */
    public static final String NO_RULE_TYPE_FOUND_4_RULE = "No.rule.type.found.4.rule";

    /** <pre>NO_RULE_TYPE_FOUND_4_RULE_VALIDATION
      * [en] Rules type is not fount in the import file. It will be created by import
      * [de] In der zu importierenden Datei ist der Regeltyp nicht vorhanden. Dieser wird beim Import angelegt</pre>
      */
    public static final String NO_RULE_TYPE_FOUND_4_RULE_VALIDATION = "No.rule.type.found.4.rule.validation";

    /** <pre>NO_RULES_4_IMPORT_FOUND
      * [en] There are no rules in import file
      * [de] die Datei beinhaltet keine Regeln</pre>
      */
    public static final String NO_RULES_4_IMPORT_FOUND = "No.rules.4.import.found";

    /** <pre>NO_SEARCH_RESULTS
      * [en] No search results
      * [de] keine Suchergebnisse</pre>
      */
    public static final String NO_SEARCH_RESULTS = "NoSearchResults";

    /** <pre>NO_TABLE_FOUND
      * [en] rule table is not found and can not be imported from file
      * [de] Die in der Regellogik benutzte Tabelle ist nicht in der XML und nicht in DB gefunden</pre>
      */
    public static final String NO_TABLE_FOUND = "No.table.found";

    /** <pre>NO_TABLE_FOUND_VALIDATION
      * [de] Die in der Regellogik benutzte Tabelle ist  der XML nicht vorhanden</pre>
      */
    public static final String NO_TABLE_FOUND_VALIDATION = "No.table.found.validation";

    /** <pre>NO_TABLE_IN_XML_BUT_IN_DB_FOUND
      * [en] rule table is not found in xml but in Pool
      * [de] Die in der Regellogik benutzte Tabelle ist nicht in der XML gefunden, aber in DB vorhanden</pre>
      */
    public static final String NO_TABLE_IN_XML_BUT_IN_DB_FOUND = "No.table.in.xml.but.in.db.found";

    /** <pre>NOT_DEFINED_CASE_TYPE
      * [en] Undefined type of the hospital case
      * [de] Typ des Falles ist unbekannt(DRG oder PEPP)</pre>
      */
    public static final String NOT_DEFINED_CASE_TYPE = "Not.defined.case.type";

    /** <pre>NUMBER
      * [en] Number {0}
      * [de] Nummer {0}</pre>
      */
    public static final String NUMBER = "Number";

    /** <pre>NUMBER_FORMAT_DECIMAL
      * [en] .
      * [de] ,</pre>
      */
    public static final String NUMBER_FORMAT_DECIMAL = "NumberFormat.Decimal";

    /** <pre>OPEN_CASE
      * [en] Open case
      * [de] Fall öffnen</pre>
      * Attention! this value ('Open case') seems to be also defined under the key WORKING_LIST_CONTEXT_MENU_OPEN!
      */
    public static final String OPEN_CASE = "OpenCase";

    /** <pre>OPEN_CASES
      * [en] Open cases
      * [de] Geöffnete Fälle</pre>
      */
    public static final String OPEN_CASES = "OpenCases";

    /** <pre>OPEN_PROCESSES
      * [en] Open processes
      * [de] Geöffnete Vorgänge</pre>
      */
    public static final String OPEN_PROCESSES = "OpenProcesses";

    /** <pre>OPS_PLACEHOLDER
      * [en] No procedures added
      * [de] Keine Prozeduren hinzugefügt</pre>
      */
    public static final String OPS_PLACEHOLDER = "Ops.placeholder";

    /** <pre>OPSCODE
      * [en] Procedure
      * [de] Prozedur</pre>
      */
    public static final String OPSCODE = "OPSCode";

    /** <pre>OPSCODE_VALIDATION
      * [en] Invalid OPS code. Please enter a valid entry!
      * [de] Ungültiger OPS Code. Bitte geben Sie einen gültigen Eintrag ein!</pre>
      */
    public static final String OPSCODE_VALIDATION = "OPSCode.validation";

    /** <pre>ORGAN_BODY
      * [en] Body
      * [de] ganzer Körper</pre>
      */
    public static final String ORGAN_BODY = "Organ.Body";

    /** <pre>ORGAN_BREATHING
      * [en] Breathing
      * [de] Atmung</pre>
      */
    public static final String ORGAN_BREATHING = "Organ.Breathing";

    /** <pre>ORGAN_CARDIOVASCULA
      * [en] Cardiovascula
      * [de] Herz-Kreislauf</pre>
      */
    public static final String ORGAN_CARDIOVASCULA = "Organ.Cardiovascula";

    /** <pre>ORGAN_ENDOCRINE
      * [en] Endocrine
      * [de] Endokrin</pre>
      */
    public static final String ORGAN_ENDOCRINE = "Organ.Endocrine";

    /** <pre>ORGAN_ENT
      * [en] Ent
      * [de] HNO</pre>
      */
    public static final String ORGAN_ENT = "Organ.Ent";

    /** <pre>ORGAN_EYES
      * [en] Eyes
      * [de] Augen</pre>
      */
    public static final String ORGAN_EYES = "Organ.Eyes";

    /** <pre>ORGAN_GASTROINTESTINAL
      * [en] Gastrointestinal
      * [de] Gastrointestinal</pre>
      */
    public static final String ORGAN_GASTROINTESTINAL = "Organ.Gastrointestinal";

    /** <pre>ORGAN_GYNECOLOGY
      * [en] Gynecology
      * [de] Gynäkologie</pre>
      */
    public static final String ORGAN_GYNECOLOGY = "Organ.Gynecology";

    /** <pre>ORGAN_HEMATOLOGY
      * [en] Hematology
      * [de] Hämatologie</pre>
      */
    public static final String ORGAN_HEMATOLOGY = "Organ.Hematology";

    /** <pre>ORGAN_KIDNEY
      * [en] Kidney
      * [de] Niere</pre>
      */
    public static final String ORGAN_KIDNEY = "Organ.Kidney";

    /** <pre>ORGAN_MUSCULOSKELETAL
      * [en] Musculoskeletal
      * [de] Muskel-Skelett</pre>
      */
    public static final String ORGAN_MUSCULOSKELETAL = "Organ.Musculoskeletal";

    /** <pre>ORGAN_NEUROLOGY
      * [en] Neurology
      * [de] Neurologie</pre>
      */
    public static final String ORGAN_NEUROLOGY = "Organ.Neurology";

    /** <pre>ORGAN_PSYCHOSOCIAL
      * [en] Psychosocial
      * [de] Psychosozial</pre>
      */
    public static final String ORGAN_PSYCHOSOCIAL = "Organ.Psychosocial";

    /** <pre>ORGAN_SKIN
      * [en] Skin
      * [de] Haut</pre>
      */
    public static final String ORGAN_SKIN = "Organ.Skin";

    /** <pre>ORGAN_TEETH
      * [en] Teeth
      * [de] Zähne</pre>
      */
    public static final String ORGAN_TEETH = "Organ.Teeth";

    /** <pre>ORGAN_URINARY_ORGANS
      * [en] UrinaryOrgans
      * [de] Genital/Harnorgane</pre>
      */
    public static final String ORGAN_URINARY_ORGANS = "Organ.UrinaryOrgans";

    /** <pre>ORIGIN_HOSPITAL
      * [en] Origin Hospital Identifier
      * [de] IKZ einweis. KH (IKZ einweis. KH)</pre>
      */
    public static final String ORIGIN_HOSPITAL = "OriginHospital";

    /** <pre>PATIENT
      * [en] Patient
      * [de] Patient</pre>
      * Attention! this value ('Patient') seems to be also defined under the key EVENT_NAME_PATIENT!
      */
    public static final String PATIENT = "Patient";

    /** <pre>PATIENT_CASES
      * [en] Patient cases
      * [de] Patientenfälle</pre>
      */
    public static final String PATIENT_CASES = "PatientCases";

    /** <pre>PATIENT_DATA
      * [en] Patient Data
      * [de] Patientendaten</pre>
      */
    public static final String PATIENT_DATA = "PatientData";

    /** <pre>PATIENT_DETAILS
      * [en] Patient Details
      * [de] Patient Einzelheiten</pre>
      */
    public static final String PATIENT_DETAILS = "PatientDetails";

    /** <pre>PATIENT_FIRST_NAME
      * [en] First Name
      * [de] Vorname</pre>
      * Attention! this value ('First Name') seems to be also defined under the key FIRST_NAME!
      */
    public static final String PATIENT_FIRST_NAME = "PatientFirstName";

    /** <pre>PATIENT_FULL_NAME
      * [en] Family name, Forename
      * [de] Name, Vorname</pre>
      */
    public static final String PATIENT_FULL_NAME = "PatientFullName";

    /** <pre>PATIENT_IGNORED
      * [en] Patient numbers ({0})  in the first step are ignored because this case is assigned to other patient, PatientNumber ({1})
      * [de] Patienten-Daten (Patienten-Nummer {0}) im ersten Schritt, werden ignoriert, da dieser Fall einem anderen Patienten zugeordnet ist, Patienten-Nummer ({1})</pre>
      */
    public static final String PATIENT_IGNORED = "Patient.ignored";

    /** <pre>PATIENT_LAST_NAME
      * [en] Last Name
      * [de] Nachname</pre>
      */
    public static final String PATIENT_LAST_NAME = "PatientLastName";

    /** <pre>PATIENT_NAME
      * [en] Family name and forename of Patient (Patient)
      * [de] Patientenname (Patient)</pre>
      */
    public static final String PATIENT_NAME = "PatientName";

    /** <pre>PATIENT_NUMBER
      * [en] Patient Number (Pat.No.)
      * [de] Patientennummer (Pat.-Nr.)</pre>
      */
    public static final String PATIENT_NUMBER = "PatientNumber";

    /** <pre>PATIENT_SEX_FEMALE
      * [en] Female
      * [de] weiblich</pre>
      * Attention! this value ('female') seems to be also defined under the key GENDER_FEMALE!
      */
    public static final String PATIENT_SEX_FEMALE = "PatientSexFemale";

    /** <pre>PATIENT_SEX_MALE
      * [en] Male
      * [de] männlich</pre>
      * Attention! this value ('male') seems to be also defined under the key GENDER_MALE!
      */
    public static final String PATIENT_SEX_MALE = "PatientSexMale";

    /** <pre>PATIENT_SEX_UNDEFINED
      * [de] unbestimmt</pre>
      */
    public static final String PATIENT_SEX_UNDEFINED = "PatientSexUndefined";

    /** <pre>PATIENT_SEX_UNKNOWN
      * [en] Unknown
      * [de] unbekannt</pre>
      * Attention! this value ('unknown') seems to be also defined under the key GENDER_UNKNOWN!
      */
    public static final String PATIENT_SEX_UNKNOWN = "PatientSexUnknown";

    /** <pre>PATIENT_WEIGHT_MEASURE_GRAM
      * [en] Gram
      * [de] Gramm</pre>
      */
    public static final String PATIENT_WEIGHT_MEASURE_GRAM = "PatientWeightMeasureGram";

    /** <pre>PAY_CLASS
      * [en] PayClass
      * [de] Vergütungsklasse</pre>
      */
    public static final String PAY_CLASS = "PayClass";

    /** <pre>PAY_GRADE
      * [en] PayGrade
      * [de] Vergütungsstufe</pre>
      */
    public static final String PAY_GRADE = "PayGrade";

    /** <pre>PCCL
      * [en] PCCL
      * [de] PCCL</pre>
      * Attention! this value ('PCCL') seems to be also defined under the key DIALOG_BATCH_GROUPING_PCCL! this value ('PCCL') seems to be also defined under the key RULES_TXT_PCCL_DIS!
      */
    public static final String PCCL = "PCCL";

    /** <pre>PEPP
      * [en] PEPP (PEPP)
      * [de] PEPP (PEPP)</pre>
      */
    public static final String PEPP = "PEPP";

    /** <pre>PEPP_CATALOG
      * [en] PEPP catalog
      * [de] PEPP Katalog</pre>
      */
    public static final String PEPP_CATALOG = "Pepp.catalog";

    /** <pre>PEPP_CATALOG_LAYOUT
      * [en] Costweight full {0} for {1} days, equals {2} per day
      * [de] Kostengewicht gesamt {0} für {1} Tage, entspr. {2} pro Tag</pre>
      */
    public static final String PEPP_CATALOG_LAYOUT = "Pepp.catalog.layout";

    /** <pre>PEPP_COLUMN
      * [de] PEPP (PEPP)</pre>
      */
    public static final String PEPP_COLUMN = "Pepp.column";

    /** <pre>PEPP_PAY_TYPE_COMPENSATION_CLASS
      * [en] Compensation Class
      * [de] Vergütungsklasse</pre>
      */
    public static final String PEPP_PAY_TYPE_COMPENSATION_CLASS = "Pepp.PayType.CompensationClass";

    /** <pre>PEPP_PAY_TYPE_COMPENSATION_LEVEL
      * [en] Compensation Level
      * [de] Vergütungsstufe</pre>
      */
    public static final String PEPP_PAY_TYPE_COMPENSATION_LEVEL = "Pepp.PayType.CompensationLevel";

    /** <pre>PEPP_TEXT
      * [en] PEPP-Text
      * [de] PEPP-Text</pre>
      */
    public static final String PEPP_TEXT = "Pepp.text";

    /** <pre>PIA
      * [en] PIA
      * [de] PIA</pre>
      * Attention! this value ('PIA') seems to be also defined under the key CASE_TYPE_PIA!
      */
    public static final String PIA = "PIA";

    /** <pre>PLACE_OF_REG_BEFORE_BILLING
      * [en] Before Billing
      * [de] Bei Rechnungsstellung</pre>
      */
    public static final String PLACE_OF_REG_BEFORE_BILLING = "PlaceOfReg.BeforeBilling";

    /** <pre>PLACE_OF_REG_REQUEST
      * [en] Request
      * [de] Bei Anfrage</pre>
      * Attention! this value ('Request') seems to be also defined under the key EVENT_NAME_REQUEST!
      */
    public static final String PLACE_OF_REG_REQUEST = "PlaceOfReg.Request";

    /** <pre>PLACE_OF_REG_REQUEST_EXTENSION
      * [en] Request Extension
      * [de] Anfrageerweiterung</pre>
      */
    public static final String PLACE_OF_REG_REQUEST_EXTENSION = "PlaceOfReg.RequestExtension";

    /** <pre>PLACE_OF_REG_REQUEST_FINALISATION
      * [en] Request Finalisation
      * [de] Vorgangsabschluss</pre>
      */
    public static final String PLACE_OF_REG_REQUEST_FINALISATION = "PlaceOfReg.RequestFinalisation";

    /** <pre>PLEASE_WAIT
      * [en] Please wait...
      * [de] Bitte warten...</pre>
      */
    public static final String PLEASE_WAIT = "PleaseWait";

    /** <pre>PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE
      * [de] Frist bis zur Antwort des Vorverfahrens, der Prüfanfrage (Frist Antwort)</pre>
      */
    public static final String PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE = "Preliminar.proceedins.answer.deadline";

    /** <pre>PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_DAYS
      * [de] Tage bis Antwort Vorverfahren, Antwort Vorverf. (Antwort)</pre>
      */
    public static final String PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_DAYS = "Preliminar.proceedins.answer.deadline.days";

    /** <pre>PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_FROM
      * [de] Frist Antwort von</pre>
      */
    public static final String PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_FROM = "Preliminar.proceedins.answer.deadline.from";

    /** <pre>PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_TO
      * [de] Frist Antwort bis</pre>
      */
    public static final String PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_TO = "Preliminar.proceedins.answer.deadline.to";

    /** <pre>PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE
      * [de] Frist bis Abschluss der MD-Prüfung (Frist MD-Abschl.)</pre>
      */
    public static final String PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE = "Preliminar.proceedins.closed.deadline";

    /** <pre>PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_DAYS
      * [de] Tage bis Abschluss MD-Prüfung (Abschluss MD)</pre>
      */
    public static final String PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_DAYS = "Preliminar.proceedins.closed.deadline.days";

    /** <pre>PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_FROM
      * [de] Frist MD-Abschl. von</pre>
      */
    public static final String PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_FROM = "Preliminar.proceedins.closed.deadline.from";

    /** <pre>PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_TO
      * [de] Frist MD-Abschl. bis</pre>
      */
    public static final String PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_TO = "Preliminar.proceedins.closed.deadline.to";

    /** <pre>PRIORITY_HIGH
      * [en] high Priority
      * [de] hohe Priorität (Prio)</pre>
      * Attention! this value ('high Priority') seems to be also defined under the key REMINDER_HIGH_PRIORITY!
      */
    public static final String PRIORITY_HIGH = "Priority.High";

    /** <pre>PROCEED
      * [en] Do you want to proceed? (Proceed?)
      * [de] Wollen sie fortfahren? (Fortfahren?)</pre>
      */
    public static final String PROCEED = "Proceed";

    /** <pre>PROCESS_BASERATE_PEPP
      * [en] Used baserates for IKZ {0}
      * [de] Verwendete Basiswert für IKZ {0}</pre>
      */
    public static final String PROCESS_BASERATE_PEPP = "Process.baserate.pepp";

    /** <pre>PROCESS_BASERATE_PEPP_VALID_FROM
      * [en] valid From
      * [de] Gültig von</pre>
      */
    public static final String PROCESS_BASERATE_PEPP_VALID_FROM = "Process.baserate.pepp.validFrom";

    /** <pre>PROCESS_BASERATE_PEPP_VALIDTO
      * [en] valid to
      * [de] Gültig bis</pre>
      */
    public static final String PROCESS_BASERATE_PEPP_VALIDTO = "Process.baserate.pepp.validto";

    /** <pre>PROCESS_BASERATE_PEPP_VALUE
      * [en] value
      * [de] Wert</pre>
      * Attention! this value ('Value') seems to be also defined under the key CASEFEE_VALUE!
      */
    public static final String PROCESS_BASERATE_PEPP_VALUE = "Process.baserate.pepp.value";

    /** <pre>PROCESS_BASERATE_TOOLTIP
      * [en] Baserates of {0} with admission date {1}.
      * [de] Baserates ermittelt von {0} mit dem Aufnahmedatum {1}</pre>
      */
    public static final String PROCESS_BASERATE_TOOLTIP = "Process.baserate.tooltip";

    /** <pre>PROCESS_CLOSED_TOOLTIP
      * [en] See Details of this Process
      * [de] Siehe Details zu diesem Vorgang</pre>
      * Attention! this value ('See Details of this Process') seems to be also defined under the key PROCESS_SUBJECT_CHANGED_TOOLTIP! this value ('See Details of this Process') seems to be also defined under the key PROCESS_USER_CHANGED_TOOLTIP!
      */
    public static final String PROCESS_CLOSED_TOOLTIP = "Process.Closed.Tooltip";

    /** <pre>PROCESS_COMPLETION
      * [en] Complete process
      * [de] Vorgang abschließen</pre>
      */
    public static final String PROCESS_COMPLETION = "Process.completion";

    /** <pre>PROCESS_COMPLETION_FINAL_VALUES
      * [en] Values final
      * [de] Werte final</pre>
      */
    public static final String PROCESS_COMPLETION_FINAL_VALUES = "Process.completion.final.values";

    /** <pre>PROCESS_COMPLETION_FINALISATION
      * [en] Date of finalisation
      * [de] Datum Abschluss</pre>
      */
    public static final String PROCESS_COMPLETION_FINALISATION = "Process.completion.finalisation";

    /** <pre>PROCESS_COMPLETION_INITAL_VALUES
      * [en] Values initial
      * [de] Werte initial</pre>
      */
    public static final String PROCESS_COMPLETION_INITAL_VALUES = "Process.completion.inital.values";

    /** <pre>PROCESS_CONFIRM
      * [en] Open process {0}?
      * [de] Vorgang {0} öffnen?</pre>
      */
    public static final String PROCESS_CONFIRM = "Process.confirm";

    /** <pre>PROCESS_CREATE_BUTTON
      * [en] Create Process new
      * [de] Vorgang neu anlegen</pre>
      */
    public static final String PROCESS_CREATE_BUTTON = "Process.Create.Button";

    /** <pre>PROCESS_CREATION_TITLE
      * [en] Create a new Process
      * [de] Neuen Vorgang erstellen</pre>
      */
    public static final String PROCESS_CREATION_TITLE = "Process.creation.Title";

    /** <pre>PROCESS_DATE
      * [en] Date
      * [de] Datum</pre>
      * Attention! this value ('Date') seems to be also defined under the key CASE_RESOLVE_DATE!
      */
    public static final String PROCESS_DATE = "Process.Date";

    /** <pre>PROCESS_DEADLINE_EXPIRED
      * [de] Frist abgelaufen</pre>
      */
    public static final String PROCESS_DEADLINE_EXPIRED = "Process.deadline.expired";

    /** <pre>PROCESS_DEADLINE_OPEN
      * [de] Frist offen</pre>
      */
    public static final String PROCESS_DEADLINE_OPEN = "Process.deadline.open";

    /** <pre>PROCESS_DOES_NOT_EXIST
      * [en] Process does not exist
      * [de] Der Vorgang wurde nicht gefunden</pre>
      */
    public static final String PROCESS_DOES_NOT_EXIST = "ProcessDoesNotExist";

    /** <pre>PROCESS_DOES_NOT_EXIST_WITH_REASON
      * [en] Process with ID {0} does not exist. Maybe this process was already deleted by another user meantime.
      * [de] Der Vorgang mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.</pre>
      */
    public static final String PROCESS_DOES_NOT_EXIST_WITH_REASON = "ProcessDoesNotExistWithReason";

    /** <pre>PROCESS_EDITING
      * [en] Process editing...
      * [de] Vorgangsbearbeitung...</pre>
      */
    public static final String PROCESS_EDITING = "ProcessEditing";

    /** <pre>PROCESS_ERROR_CORE_DATA
      * [en] One or more List(s) of core data could not be loaded for the process date {0} !No valid period of time found is set
      * [de] Eine oder mehrere Liste(n) mit Stammdaten konnte(n) für das Vorgangsdatum {0} nicht geladen werden.Keine gültige Zeitspanne konfiguert.</pre>
      */
    public static final String PROCESS_ERROR_CORE_DATA = "Process.error.core_data";

    /** <pre>PROCESS_ERROR_OPEN
      * [en] Process can not be opened!
      * [de] Vorgang konnte nicht geöffnet werden!</pre>
      */
    public static final String PROCESS_ERROR_OPEN = "Process.error.open";

    /** <pre>PROCESS_FINAL
      * [en] Final
      * [de] Final</pre>
      */
    public static final String PROCESS_FINAL = "Process.final";

    /** <pre>PROCESS_FINAL_AUDIT_REASONS
      * [en] Audit Reasons by Case Finalisation
      * [de] Prüfgründe des Vorgangabschlusses (Prüfgr. des Vorgangabschl.)</pre>
      */
    public static final String PROCESS_FINAL_AUDIT_REASONS = "Process.final.audit.reasons";

    /** <pre>PROCESS_FINALISATION
      * [en] Process finalisation
      * [de] Vorgangsabschluss</pre>
      * Attention! this value ('Process Finalisation') seems to be also defined under the key EVENT_NAME_PROCESS_FINALISATION!
      */
    public static final String PROCESS_FINALISATION = "Process.finalisation";

    /** <pre>PROCESS_FINALISATION_CLOSING_DATE
      * [en] closing date
      * [de] Abschlussdatum (Abschlussdatum)</pre>
      */
    public static final String PROCESS_FINALISATION_CLOSING_DATE = "Process.finalisation.closing.date";

    /** <pre>PROCESS_FINALISATION_CLOSING_DATE_FROM
      * [en] closing date from
      * [de] Abschlussdatum von</pre>
      */
    public static final String PROCESS_FINALISATION_CLOSING_DATE_FROM = "Process.finalisation.closing.date.from";

    /** <pre>PROCESS_FINALISATION_CLOSING_DATE_TO
      * [en] closing date to
      * [de] Abschlussdatum bis</pre>
      */
    public static final String PROCESS_FINALISATION_CLOSING_DATE_TO = "Process.finalisation.closing.date.to";

    /** <pre>PROCESS_FINALISATION_CW_CARE_DIFF
      * [en] Care CW diff (Care CW diff)
      * [de] Pflege CW Diff (Pfl. CW Diff)</pre>
      */
    public static final String PROCESS_FINALISATION_CW_CARE_DIFF = "Process.finalisation.cw.care.Diff";

    /** <pre>PROCESS_FINALISATION_CW_CARE_DIFF_FROM
      * [en] Care CW diff to
      * [de] Pfl. CW Diff von</pre>
      * Attention! this value ('Care CW diff to') seems to be also defined under the key PROCESS_FINALISATION_CW_CARE_DIFF_TO!
      */
    public static final String PROCESS_FINALISATION_CW_CARE_DIFF_FROM = "Process.finalisation.cw.care.Diff.from";

    /** <pre>PROCESS_FINALISATION_CW_CARE_DIFF_TO
      * [en] Care CW diff to
      * [de] Pfl. CW Diff bis</pre>
      * Attention! this value ('Care CW diff to') seems to be also defined under the key PROCESS_FINALISATION_CW_CARE_DIFF_FROM!
      */
    public static final String PROCESS_FINALISATION_CW_CARE_DIFF_TO = "Process.finalisation.cw.care.Diff.to";

    /** <pre>PROCESS_FINALISATION_CW_CARE_FINAL
      * [en] Care CW final (Care CW final)
      * [de] Pflege CW Final (Pfl. CW Final)</pre>
      */
    public static final String PROCESS_FINALISATION_CW_CARE_FINAL = "Process.finalisation.cw.care.Final";

    /** <pre>PROCESS_FINALISATION_CW_CARE_FINAL_FROM
      * [en] Care CW final to
      * [de] Pfl. CW Final von</pre>
      */
    public static final String PROCESS_FINALISATION_CW_CARE_FINAL_FROM = "Process.finalisation.cw.care.Final.from";

    /** <pre>PROCESS_FINALISATION_CW_CARE_FINAL_TO
      * [en] Care CW final from
      * [de] Pfl. CW Final bis</pre>
      */
    public static final String PROCESS_FINALISATION_CW_CARE_FINAL_TO = "Process.finalisation.cw.care.Final.to";

    /** <pre>PROCESS_FINALISATION_CW_CARE_INITIAL
      * [en] Care CW initial (initial)
      * [de] Pflege CW Initial (Pfl. CW Initial)</pre>
      */
    public static final String PROCESS_FINALISATION_CW_CARE_INITIAL = "Process.finalisation.cw.care.initial";

    /** <pre>PROCESS_FINALISATION_CW_CARE_INITIAL_FROM
      * [en] Care CW initial from
      * [de] Pfl. CW Initial von</pre>
      */
    public static final String PROCESS_FINALISATION_CW_CARE_INITIAL_FROM = "Process.finalisation.cw.care.initial.from";

    /** <pre>PROCESS_FINALISATION_CW_CARE_INITIAL_TO
      * [en] Care CW initial to
      * [de] Pfl. CW Initial bis</pre>
      */
    public static final String PROCESS_FINALISATION_CW_CARE_INITIAL_TO = "Process.finalisation.cw.care.initial.to";

    /** <pre>PROCESS_FINALISATION_CW_DIFF
      * [en] CW diff (CW diff)
      * [de] CW Diff (CW Diff)</pre>
      */
    public static final String PROCESS_FINALISATION_CW_DIFF = "Process.finalisation.cw.Diff";

    /** <pre>PROCESS_FINALISATION_CW_DIFF_FROM
      * [en] CW diff from
      * [de] CW Diff von</pre>
      */
    public static final String PROCESS_FINALISATION_CW_DIFF_FROM = "Process.finalisation.cw.Diff.from";

    /** <pre>PROCESS_FINALISATION_CW_DIFF_TO
      * [en] CW diff to
      * [de] CW Diff bis</pre>
      */
    public static final String PROCESS_FINALISATION_CW_DIFF_TO = "Process.finalisation.cw.Diff.to";

    /** <pre>PROCESS_FINALISATION_CW_FINAL
      * [en] CW final (CW final)
      * [de] CW Final (CW Final)</pre>
      */
    public static final String PROCESS_FINALISATION_CW_FINAL = "Process.finalisation.cw.Final";

    /** <pre>PROCESS_FINALISATION_CW_FINAL_FROM
      * [en] CW final from
      * [de] CW Final von</pre>
      */
    public static final String PROCESS_FINALISATION_CW_FINAL_FROM = "Process.finalisation.cw.Final.from";

    /** <pre>PROCESS_FINALISATION_CW_FINAL_TO
      * [en] CW final to
      * [de] CW Final bis</pre>
      */
    public static final String PROCESS_FINALISATION_CW_FINAL_TO = "Process.finalisation.cw.Final.to";

    /** <pre>PROCESS_FINALISATION_CW_INITIAL
      * [en] CW initial (initial)
      * [de] CW Initial (CW Initial)</pre>
      */
    public static final String PROCESS_FINALISATION_CW_INITIAL = "Process.finalisation.cw.initial";

    /** <pre>PROCESS_FINALISATION_CW_INITIAL_FROM
      * [en] CW initial from
      * [de] CW Initial von</pre>
      */
    public static final String PROCESS_FINALISATION_CW_INITIAL_FROM = "Process.finalisation.cw.initial.from";

    /** <pre>PROCESS_FINALISATION_CW_INITIAL_TO
      * [en] CW initial to
      * [de] CW Initial bis</pre>
      */
    public static final String PROCESS_FINALISATION_CW_INITIAL_TO = "Process.finalisation.cw.initial.to";

    /** <pre>PROCESS_FINALISATION_DRG_FINAL
      * [en] DRG final (DRG final)
      * [de] DRG Final (DRG Final)</pre>
      */
    public static final String PROCESS_FINALISATION_DRG_FINAL = "Process.finalisation.drg.Final";

    /** <pre>PROCESS_FINALISATION_DRG_INITIAL
      * [en] DRG initial (DRG initial)
      * [de] DRG Initial (DRG Initial)</pre>
      */
    public static final String PROCESS_FINALISATION_DRG_INITIAL = "Process.finalisation.drg.initial";

    /** <pre>PROCESS_FINALISATION_ERROR_NO_MAIN_REVIEW_CAUSE
      * [en] No main audit reason is set.
      * [de] Es wurde kein Hauptprüfgrund angegeben.</pre>
      */
    public static final String PROCESS_FINALISATION_ERROR_NO_MAIN_REVIEW_CAUSE = "Process.finalisation.error.noMainReviewCause";

    /** <pre>PROCESS_FINALISATION_LOS_DIFF
      * [en] Los diff (Los diff)
      * [de] VWD Diff (VWD Diff)</pre>
      */
    public static final String PROCESS_FINALISATION_LOS_DIFF = "Process.finalisation.los.Diff";

    /** <pre>PROCESS_FINALISATION_LOS_DIFF_FROM
      * [en] Los diff from
      * [de] VWD Diff von</pre>
      */
    public static final String PROCESS_FINALISATION_LOS_DIFF_FROM = "Process.finalisation.los.Diff.from";

    /** <pre>PROCESS_FINALISATION_LOS_DIFF_TO
      * [en] Los diff to
      * [de] VWD Diff bis</pre>
      */
    public static final String PROCESS_FINALISATION_LOS_DIFF_TO = "Process.finalisation.los.Diff.to";

    /** <pre>PROCESS_FINALISATION_LOS_FINAL
      * [en] Los final (Los Final)
      * [de] VWD Final (VWD Final)</pre>
      */
    public static final String PROCESS_FINALISATION_LOS_FINAL = "Process.finalisation.los.Final";

    /** <pre>PROCESS_FINALISATION_LOS_FINAL_FROM
      * [en] Los final from
      * [de] VWD Final von</pre>
      */
    public static final String PROCESS_FINALISATION_LOS_FINAL_FROM = "Process.finalisation.los.Final.from";

    /** <pre>PROCESS_FINALISATION_LOS_FINAL_TO
      * [en] Los final to
      * [de] VWD Final bis</pre>
      */
    public static final String PROCESS_FINALISATION_LOS_FINAL_TO = "Process.finalisation.los.Final.to";

    /** <pre>PROCESS_FINALISATION_LOS_INITIAL
      * [en] Los initial (Los initial)
      * [de] VWD Initial (VWD Initial)</pre>
      */
    public static final String PROCESS_FINALISATION_LOS_INITIAL = "Process.finalisation.los.initial";

    /** <pre>PROCESS_FINALISATION_LOS_INITIAL_FROM
      * [en] Los initial from
      * [de] VWD Initial von</pre>
      */
    public static final String PROCESS_FINALISATION_LOS_INITIAL_FROM = "Process.finalisation.los.initial.from";

    /** <pre>PROCESS_FINALISATION_LOS_INITIAL_TO
      * [en] Los initial to
      * [de] VWD Initial bis</pre>
      */
    public static final String PROCESS_FINALISATION_LOS_INITIAL_TO = "Process.finalisation.los.initial.to";

    /** <pre>PROCESS_FINALISATION_MAIN_CASE_STORNO
      * [en] Process is closed without comparison because base case is canceled
      * [de] Vorgang wird ohne Vergleich geschlossen, da der Basisfall storniert ist.</pre>
      */
    public static final String PROCESS_FINALISATION_MAIN_CASE_STORNO = "Process.finalisation.mainCase.storno";

    /** <pre>PROCESS_FINALISATION_NO_RIGHT
      * [en] No authorization for process completion
      * [de] Keine Berechtingung zum Vorgangabschloss.</pre>
      */
    public static final String PROCESS_FINALISATION_NO_RIGHT = "Process.finalisation.noRight";

    /** <pre>PROCESS_FINALISATION_PENALTY_FEE
      * [de] Strafzahlung (Strafzahlung)</pre>
      */
    public static final String PROCESS_FINALISATION_PENALTY_FEE = "Process.finalisation.penalty.fee";

    /** <pre>PROCESS_FINALISATION_PENALTY_FEE_FROM
      * [de] Strafzahlung von</pre>
      */
    public static final String PROCESS_FINALISATION_PENALTY_FEE_FROM = "Process.finalisation.penalty.fee.from";

    /** <pre>PROCESS_FINALISATION_PENALTY_FEE_TO
      * [de] Strafzahlung bis</pre>
      */
    public static final String PROCESS_FINALISATION_PENALTY_FEE_TO = "Process.finalisation.penalty.fee.to";

    /** <pre>PROCESS_FINALISATION_PROCEED
      * [en] Is the process still to be completed?
      * [de] Soll der Vorgang trotzdem abgeschlossen werden?</pre>
      */
    public static final String PROCESS_FINALISATION_PROCEED = "Process.finalisation.proceed";

    /** <pre>PROCESS_FINALISATION_READONLY_MESSAGE
      * [en] Process completion opens in read-only mode
      * [de] Vorgangsabschluss wird im schreibgeschützten Modus geöffnet.</pre>
      */
    public static final String PROCESS_FINALISATION_READONLY_MESSAGE = "Process.finalisation.readonly.message";

    /** <pre>PROCESS_FINALISATION_READONLY_REASON
      * [en] The reason for this: {0}
      * [de] Der Grund dafür: {0}</pre>
      */
    public static final String PROCESS_FINALISATION_READONLY_REASON = "Process.finalisation.readonly.reason";

    /** <pre>PROCESS_FINALISATION_RESULT
      * [en] process result
      * [de] Vorgangsergebnis</pre>
      */
    public static final String PROCESS_FINALISATION_RESULT = "Process.finalisation.result";

    /** <pre>PROCESS_FINALISATION_RESULT_DELTA
      * [en] Res. Delta (Result delta)
      * [de] Ergebnis Delta (Erg. Delta)</pre>
      */
    public static final String PROCESS_FINALISATION_RESULT_DELTA = "Process.finalisation.result.delta";

    /** <pre>PROCESS_FINALISATION_RESULT_DELTA_FROM
      * [en] Res. delta from
      * [de] Erg. Delta von</pre>
      */
    public static final String PROCESS_FINALISATION_RESULT_DELTA_FROM = "Process.finalisation.result.delta.from";

    /** <pre>PROCESS_FINALISATION_RESULT_DELTA_TO
      * [en] Res. delta to
      * [de] Erg. Delta bis</pre>
      */
    public static final String PROCESS_FINALISATION_RESULT_DELTA_TO = "Process.finalisation.result.delta.to";

    /** <pre>PROCESS_FINALISATION_RESULT_DELTE
      * [en] Result Delta
      * [de] Result Delta</pre>
      */
    public static final String PROCESS_FINALISATION_RESULT_DELTE = "Process.finalisation.result.delte";

    /** <pre>PROCESS_FINALISATION_RESULTS
      * [en] Process results
      * [de] Vorgangsergebnisse</pre>
      */
    public static final String PROCESS_FINALISATION_RESULTS = "Process.finalisation.results";

    /** <pre>PROCESS_FINALISATION_REVENUE_DIFF
      * [en] Revenue diff
      * [de] Erlös Diff</pre>
      */
    public static final String PROCESS_FINALISATION_REVENUE_DIFF = "Process.finalisation.revenue.Diff";

    /** <pre>PROCESS_FINALISATION_REVENUE_DIFF_FROM
      * [en] Revenue Diff from
      * [de] Erlös Diff von</pre>
      */
    public static final String PROCESS_FINALISATION_REVENUE_DIFF_FROM = "Process.finalisation.revenue.Diff.from";

    /** <pre>PROCESS_FINALISATION_REVENUE_DIFF_TO
      * [en] Revenue Diff to
      * [de] Erlös Diff bis</pre>
      */
    public static final String PROCESS_FINALISATION_REVENUE_DIFF_TO = "Process.finalisation.revenue.Diff.to";

    /** <pre>PROCESS_FINALISATION_REVENUE_FINAL
      * [en] Revenue Final
      * [de] Erlös Final</pre>
      */
    public static final String PROCESS_FINALISATION_REVENUE_FINAL = "Process.finalisation.revenue.Final";

    /** <pre>PROCESS_FINALISATION_REVENUE_FINAL_FROM
      * [en] Revenue Final from
      * [de] Erlös Final von</pre>
      */
    public static final String PROCESS_FINALISATION_REVENUE_FINAL_FROM = "Process.finalisation.revenue.Final.from";

    /** <pre>PROCESS_FINALISATION_REVENUE_FINAL_TO
      * [en] Revenue Final to
      * [de] Erlös Final bis</pre>
      */
    public static final String PROCESS_FINALISATION_REVENUE_FINAL_TO = "Process.finalisation.revenue.Final.to";

    /** <pre>PROCESS_FINALISATION_REVENUE_INIT
      * [en] Revenue Initial
      * [de] Erlös Initial</pre>
      * Attention! this value ('Revenue Initial') seems to be also defined under the key PROCESS_FINALISATION_REVENUE_INITIAL!
      */
    public static final String PROCESS_FINALISATION_REVENUE_INIT = "Process.finalisation.revenue.Init";

    /** <pre>PROCESS_FINALISATION_REVENUE_INIT_FROM
      * [en] Revenue Initial from
      * [de] Erlös Initial von</pre>
      */
    public static final String PROCESS_FINALISATION_REVENUE_INIT_FROM = "Process.finalisation.revenue.Init.from";

    /** <pre>PROCESS_FINALISATION_REVENUE_INIT_TO
      * [en] Revenue Initial to
      * [de] Erlös Initial bis</pre>
      */
    public static final String PROCESS_FINALISATION_REVENUE_INIT_TO = "Process.finalisation.revenue.Init.to";

    /** <pre>PROCESS_FINALISATION_REVENUE_INITIAL
      * [en] Revenue Initial
      * [de] Erlös Initial</pre>
      * Attention! this value ('Revenue Initial') seems to be also defined under the key PROCESS_FINALISATION_REVENUE_INIT!
      */
    public static final String PROCESS_FINALISATION_REVENUE_INITIAL = "Process.finalisation.revenue.initial";

    /** <pre>PROCESS_FINALISATION_RISK
      * [en] risk
      * [de] Risiko</pre>
      * Attention! this value ('Risk') seems to be also defined under the key ICD_TYPE_RISK!
      */
    public static final String PROCESS_FINALISATION_RISK = "Process.finalisation.risk";

    /** <pre>PROCESS_FINALISATION_SAVED_MONEY
      * [en] Saved money (Saved money in €)
      * [de] Verlustvolumnen in € (Verlustvol.)</pre>
      */
    public static final String PROCESS_FINALISATION_SAVED_MONEY = "Process.finalisation.saved.money";

    /** <pre>PROCESS_FINALISATION_SAVED_MONEY_FROM
      * [en] Saved money from
      * [de] Verlustvol. von</pre>
      */
    public static final String PROCESS_FINALISATION_SAVED_MONEY_FROM = "Process.finalisation.saved.money.from";

    /** <pre>PROCESS_FINALISATION_SAVED_MONEY_TO
      * [en] Saved money to
      * [de] Verlustvol. bis</pre>
      */
    public static final String PROCESS_FINALISATION_SAVED_MONEY_TO = "Process.finalisation.saved.money.to";

    /** <pre>PROCESS_FINALISATION_SUPPLFEE_DIFF
      * [en] Supplfee diff (Supplfee)
      * [de] ZE Diff (ZE Diff)</pre>
      */
    public static final String PROCESS_FINALISATION_SUPPLFEE_DIFF = "Process.finalisation.supplfee.Diff";

    /** <pre>PROCESS_FINALISATION_SUPPLFEE_DIFF_FROM
      * [en] Supplfee diff from
      * [de] ZE Diff von</pre>
      */
    public static final String PROCESS_FINALISATION_SUPPLFEE_DIFF_FROM = "Process.finalisation.supplfee.Diff.from";

    /** <pre>PROCESS_FINALISATION_SUPPLFEE_DIFF_TO
      * [en] Supplfee diff to
      * [de] ZE Diff bis</pre>
      */
    public static final String PROCESS_FINALISATION_SUPPLFEE_DIFF_TO = "Process.finalisation.supplfee.Diff.to";

    /** <pre>PROCESS_FINALISATION_SUPPLFEE_FINAL
      * [en] Supplfee final (Supplfee final)
      * [de] ZE Final (ZE Final)</pre>
      */
    public static final String PROCESS_FINALISATION_SUPPLFEE_FINAL = "Process.finalisation.supplfee.Final";

    /** <pre>PROCESS_FINALISATION_SUPPLFEE_FINAL_FROM
      * [en] Supplfee final from
      * [de] ZE Final von</pre>
      */
    public static final String PROCESS_FINALISATION_SUPPLFEE_FINAL_FROM = "Process.finalisation.supplfee.Final.from";

    /** <pre>PROCESS_FINALISATION_SUPPLFEE_FINAL_TO
      * [en] Supplfee final to
      * [de] ZE Final bis</pre>
      */
    public static final String PROCESS_FINALISATION_SUPPLFEE_FINAL_TO = "Process.finalisation.supplfee.Final.to";

    /** <pre>PROCESS_FINALISATION_SUPPLFEE_INITIAL
      * [en] Supplfee initial (Supplfee initial)
      * [de] ZE Initial (ZE Initial)</pre>
      */
    public static final String PROCESS_FINALISATION_SUPPLFEE_INITIAL = "Process.finalisation.supplfee.initial";

    /** <pre>PROCESS_FINALISATION_SUPPLFEE_INITIAL_FROM
      * [en] Supplfee initial from
      * [de] ZE Initial von</pre>
      */
    public static final String PROCESS_FINALISATION_SUPPLFEE_INITIAL_FROM = "Process.finalisation.supplfee.initial.from";

    /** <pre>PROCESS_FINALISATION_SUPPLFEE_INITIAL_TO
      * [en] Supplfee initial to
      * [de] ZE Initial bis</pre>
      */
    public static final String PROCESS_FINALISATION_SUPPLFEE_INITIAL_TO = "Process.finalisation.supplfee.initial.to";

    /** <pre>PROCESS_FINALISATION_VERSION_COMPARISON_NOTALLOWED
      * [de] Vergleich der Version(en) ist nicht möglich, da der Basisfall storniert ist.</pre>
      */
    public static final String PROCESS_FINALISATION_VERSION_COMPARISON_NOTALLOWED = "Process.finalisation.version.comparison.notallowed";

    /** <pre>PROCESS_FINALISATION_VERSION_SELECT
      * [en] Version selection for process finalisation (Select Version)
      * [de] Versionen für Fallabschluss auswählen (Version auswählen)</pre>
      */
    public static final String PROCESS_FINALISATION_VERSION_SELECT = "Process.finalisation.version.select";

    /** <pre>PROCESS_INITIAL
      * [en] Initial
      * [de] Initial</pre>
      */
    public static final String PROCESS_INITIAL = "Process.initial";

    /** <pre>PROCESS_INKA_KEY
      * [de] INKA Sclüssel (INKA Schl.)</pre>
      */
    public static final String PROCESS_INKA_KEY = "Process.inka.key";

    /** <pre>PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION
      * [de] KAIN Datum der Entscheidung (Entsch. Datum)</pre>
      */
    public static final String PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION = "Process.kain.date.benefit.law.decision";

    /** <pre>PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION_FROM
      * [de] Entsch. Datum von</pre>
      */
    public static final String PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION_FROM = "Process.kain.date.benefit.law.decision.from";

    /** <pre>PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION_TO
      * [de] Entsch. Datum bis</pre>
      */
    public static final String PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION_TO = "Process.kain.date.benefit.law.decision.to";

    /** <pre>PROCESS_KAIN_KEY
      * [de] KAIN Schlüssel (KAIN Schl.)</pre>
      */
    public static final String PROCESS_KAIN_KEY = "Process.kain.key";

    /** <pre>PROCESS_LIST_DATE_FORMAT
      * [en] dd/MM/yyyy HH:mm:ss
      * [de] dd.MM.yyyy HH:mm:ss</pre>
      */
    public static final String PROCESS_LIST_DATE_FORMAT = "Process.List.DateFormat";

    /** <pre>PROCESS_MAIN_CASE_ERROR
      * [en] MainCase of the process is null. Please add main case to this process!!
      * [de] Hauptfall des Vorgangs ist nicht gesetzt. Bitte fügen Sie einen Hauptfall zu diesem Vorgang hinzu!</pre>
      */
    public static final String PROCESS_MAIN_CASE_ERROR = "Process.mainCase.error";

    /** <pre>PROCESS_MODIFICATION_USER
      * [en] last Issuer of process (change of)
      * [de] Letzter Bearbeiter des Vorganges (Änderung von)</pre>
      */
    public static final String PROCESS_MODIFICATION_USER = "Process.ModificationUser";

    /** <pre>PROCESS_MODIFICATION_USER_LAST
      * [de] Letzter Bearbeiter des Vorganges (Änderung von)</pre>
      */
    public static final String PROCESS_MODIFICATION_USER_LAST = "Process.ModificationUser.Last";

    /** <pre>PROCESS_NUMBER
      * [en] Process No.
      * [de] Vorgangs-Nr.</pre>
      * Attention! this value ('Process No.') seems to be also defined under the key WORKFLOW_NUMBER!
      */
    public static final String PROCESS_NUMBER = "Process.Number";

    /** <pre>PROCESS_PREVIEW_ANSWER
      * [en] Preliminary Proceedings Answer Deadline
      * [de] Frist Vorverfahren Antwort</pre>
      */
    public static final String PROCESS_PREVIEW_ANSWER = "ProcessPreview.answer";

    /** <pre>PROCESS_PREVIEW_AUDIT_COMPLETION
      * [en] MD Audit Completion Deadline
      * [de] Frist Abschluss der MD-Prüfung</pre>
      */
    public static final String PROCESS_PREVIEW_AUDIT_COMPLETION = "ProcessPreview.auditCompletion";

    /** <pre>PROCESS_PREVIEW_AUDIT_REASONS
      * [en] Audit Resons
      * [de] Prüfgründe (Prüfgründe)</pre>
      */
    public static final String PROCESS_PREVIEW_AUDIT_REASONS = "ProcessPreview.auditReasons";

    /** <pre>PROCESS_PREVIEW_BILL_CORR
      * [en] MD Bill Correction Deadline
      * [de] Frist MD-Rechnungskorrektur</pre>
      */
    public static final String PROCESS_PREVIEW_BILL_CORR = "ProcessPreview.billCorr";

    /** <pre>PROCESS_PREVIEW_CASE_NO
      * [en] Case No.
      * [de] Fallnummer</pre>
      */
    public static final String PROCESS_PREVIEW_CASE_NO = "ProcessPreview.caseNo";

    /** <pre>PROCESS_PREVIEW_CLOSED
      * [en] Preliminary Proceedings Closed Deadline
      * [de] Frist Vorverfahren-Abschluss</pre>
      */
    public static final String PROCESS_PREVIEW_CLOSED = "ProcessPreview.closed";

    /** <pre>PROCESS_PREVIEW_DATA_REC_CORRECTION
      * [en] Data Record Correction Deadline
      * [de] Frist Datensatzkorrektur</pre>
      */
    public static final String PROCESS_PREVIEW_DATA_REC_CORRECTION = "ProcessPreview.dataRecCorrection";

    /** <pre>PROCESS_PREVIEW_DEADLINES
      * [en] Deadlines
      * [de] Fristen</pre>
      */
    public static final String PROCESS_PREVIEW_DEADLINES = "ProcessPreview.deadlines";

    /** <pre>PROCESS_PREVIEW_DOC_DELIVER
      * [en] MD Document Deliver Deadline
      * [de] Abgabefrist Unterlagen</pre>
      */
    public static final String PROCESS_PREVIEW_DOC_DELIVER = "ProcessPreview.docDeliver";

    /** <pre>PROCESS_PREVIEW_PROCESS_STATUS
      * [en] Status
      * [de] Status</pre>
      * Attention! this value ('Status') seems to be also defined under the key AUDIT_STATUS! this value ('Status') seems to be also defined under the key BILL_STATUS! this value ('Status') seems to be also defined under the key RULE_FILTER_DIALOG_RULE_ERROR_STATUS!
      */
    public static final String PROCESS_PREVIEW_PROCESS_STATUS = "ProcessPreview.processStatus";

    /** <pre>PROCESS_PREVIEW_PROCESS_TOPIC
      * [en] Process Topic
      * [de] Vorgangsart</pre>
      * Attention! this value ('Process Topic') seems to be also defined under the key PROCESS_TOPIC!
      */
    public static final String PROCESS_PREVIEW_PROCESS_TOPIC = "ProcessPreview.processTopic";

    /** <pre>PROCESS_PREVIEW_REQUEST_TYPE
      * [en] Request type
      * [de] Anfragetyp</pre>
      */
    public static final String PROCESS_PREVIEW_REQUEST_TYPE = "ProcessPreview.requestType";

    /** <pre>PROCESS_REVIEW_COMPLETION_DEADLINE_DATE
      * [de] Frist bis zu dem Abschluß des Erörterungsverfahrens (EV Abschlußfrist)</pre>
      */
    public static final String PROCESS_REVIEW_COMPLETION_DEADLINE_DATE = "Process.review.completion.deadline.date";

    /** <pre>PROCESS_REVIEW_COMPLETION_DEADLINE_DATE_FROM
      * [de] EV Abschlußfrist von</pre>
      */
    public static final String PROCESS_REVIEW_COMPLETION_DEADLINE_DATE_FROM = "Process.review.completion.deadline.date.from";

    /** <pre>PROCESS_REVIEW_COMPLETION_DEADLINE_DATE_TO
      * [de] EV Abschlußfrist bis</pre>
      */
    public static final String PROCESS_REVIEW_COMPLETION_DEADLINE_DATE_TO = "Process.review.completion.deadline.date.to";

    /** <pre>PROCESS_REVIEW_COMPLETION_DEADLINE_DAYS
      * [de] Tage bis Abschluß EV (EV Abschluß)</pre>
      */
    public static final String PROCESS_REVIEW_COMPLETION_DEADLINE_DAYS = "Process.review.completion.deadline.days";

    /** <pre>PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE
      * [de] Frist für die Krankenasse eine Antwort zu EV zu geben (EV Antwortfrist KK)</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE = "Process.review.deadline.answer.insurance.date";

    /** <pre>PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE_FROM
      * [de] EV Antwortfrist KK von</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE_FROM = "Process.review.deadline.answer.insurance.date.from";

    /** <pre>PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE_TO
      * [de] EV Antwortfrist KK bis</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE_TO = "Process.review.deadline.answer.insurance.date.to";

    /** <pre>PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DAYS
      * [de] Tage für Antwort der KK (EV Antwort KK)</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DAYS = "Process.review.deadline.answer.insurance.days";

    /** <pre>PROCESS_REVIEW_DEADLINE_DATE
      * [de] Frist bis zu dem Start des Erörterungsverfahrens (EV Frist bis)</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_DATE = "Process.review.deadline.date";

    /** <pre>PROCESS_REVIEW_DEADLINE_DATE_FROM
      * [de] EV Frist bis von</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_DATE_FROM = "Process.review.deadline.date.from";

    /** <pre>PROCESS_REVIEW_DEADLINE_DATE_TO
      * [de] EV Frist bis bis</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_DATE_TO = "Process.review.deadline.date.to";

    /** <pre>PROCESS_REVIEW_DEADLINE_DAYS
      * [de] Tage bis zu Ende des Fristes für Starten EV (EV Start)</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_DAYS = "Process.review.deadline.days";

    /** <pre>PROCESS_REVIEW_DEADLINE_EXTENDED_DATE
      * [de] Verlängerte Frist für das Starten des Erörterungsverfahrens (EV Fristverl.)</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_EXTENDED_DATE = "Process.review.deadline.extended.date";

    /** <pre>PROCESS_REVIEW_DEADLINE_EXTENDED_DATE_FROM
      * [de] EV Fristverl. von</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_EXTENDED_DATE_FROM = "Process.review.deadline.extended.date.from";

    /** <pre>PROCESS_REVIEW_DEADLINE_EXTENDED_DATE_TO
      * [de] EV Fristverl. bis</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_EXTENDED_DATE_TO = "Process.review.deadline.extended.date.to";

    /** <pre>PROCESS_REVIEW_DEADLINE_EXTENDED_DAYS
      * [de] Tage bis zum Ende des verlängerten Fristes für Starten EV (EV Startverl.)</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_EXTENDED_DAYS = "Process.review.deadline.extended.days";

    /** <pre>PROCESS_REVIEW_DEADLINE_SEND_ON_DATE
      * [de] Nachsendefrist der angefordenten Dokumenten bei EV bis (EV Nachsendefrist)</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_SEND_ON_DATE = "Process.review.deadline.send.on.date";

    /** <pre>PROCESS_REVIEW_DEADLINE_SEND_ON_DATE_FROM
      * [de] EV Nachsendefrist von</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_SEND_ON_DATE_FROM = "Process.review.deadline.send.on.date.from";

    /** <pre>PROCESS_REVIEW_DEADLINE_SEND_ON_DATE_TO
      * [de] EV Nachsendefrist bis</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_SEND_ON_DATE_TO = "Process.review.deadline.send.on.date.to";

    /** <pre>PROCESS_REVIEW_DEADLINE_SEND_ON_DAYS
      * [de] Tage für Nachsenden der Unterlagen EV (EV Unterlagen)</pre>
      */
    public static final String PROCESS_REVIEW_DEADLINE_SEND_ON_DAYS = "Process.review.deadline.send.on.days";

    /** <pre>PROCESS_SELECT_TASK
      * [en] Select next task
      * [de] Nächste Aufgabe wählen</pre>
      */
    public static final String PROCESS_SELECT_TASK = "Process.select.task";

    /** <pre>PROCESS_START_DATE
      * [en] Process start date (Start date)
      * [de] Anlagedatum des Vorganges (Vorgangsdatum)</pre>
      */
    public static final String PROCESS_START_DATE = "ProcessStartDate";

    /** <pre>PROCESS_START_DATE_FROM
      * [en] Start date from
      * [de] Anlagedatum von</pre>
      */
    public static final String PROCESS_START_DATE_FROM = "ProcessStartDate.from";

    /** <pre>PROCESS_START_DATE_TO
      * [en] Start date to
      * [de] Anlagedatum bis</pre>
      */
    public static final String PROCESS_START_DATE_TO = "ProcessStartDate.to";

    /** <pre>PROCESS_STATUS_CLOSE
      * [en] Close process
      * [de] Vorgang schließen</pre>
      */
    public static final String PROCESS_STATUS_CLOSE = "Process.status.close";

    /** <pre>PROCESS_STATUS_CLOSED
      * [en] Process is closed
      * [de] Vorgang wurde geschlossen</pre>
      */
    public static final String PROCESS_STATUS_CLOSED = "Process.status.closed";

    /** <pre>PROCESS_STATUS_OPEN
      * [en] Process is open
      * [de] Vorgang wird bearbeitet</pre>
      */
    public static final String PROCESS_STATUS_OPEN = "Process.status.open";

    /** <pre>PROCESS_STATUS_REMINDER
      * [en] Status of Reminder (WV Status)
      * [de] Status der Wiedervorlage (WV Status)</pre>
      */
    public static final String PROCESS_STATUS_REMINDER = "Process.status.reminder";

    /** <pre>PROCESS_STATUS_REMINDER_CLOSED
      * [en] closed
      * [de] abgearbeitet</pre>
      * Attention! this value ('Closed') seems to be also defined under the key CASE_STATUS_CLOSED! this value ('closed') seems to be also defined under the key WORKFLOW_STATE_CLOSED!
      */
    public static final String PROCESS_STATUS_REMINDER_CLOSED = "Process.status.reminder.closed";

    /** <pre>PROCESS_STATUS_REMINDER_OPEN
      * [en] open
      * [de] offen</pre>
      * Attention! this value ('Open') seems to be also defined under the key EVENT_OPERATION_OPEN! this value ('open') seems to be also defined under the key REMINDER_UNFINISHED_STATUS! this value ('open') seems to be also defined under the key WORKFLOW_STATE_OPEN!
      */
    public static final String PROCESS_STATUS_REMINDER_OPEN = "Process.status.reminder.open";

    /** <pre>PROCESS_STATUS_REOPEN
      * [en] Reopen process
      * [de] Vorgang neu öffnen</pre>
      */
    public static final String PROCESS_STATUS_REOPEN = "Process.status.reopen";

    /** <pre>PROCESS_STATUS_REOPENED
      * [en] Process is reopened
      * [de] Vorgang wurde wieder geöffnet</pre>
      */
    public static final String PROCESS_STATUS_REOPENED = "Process.status.reopened";

    /** <pre>PROCESS_SUBJECT_CHANGED_TOOLTIP
      * [en] See Details of this Process
      * [de] Siehe Details zu diesem Vorgang</pre>
      * Attention! this value ('See Details of this Process') seems to be also defined under the key PROCESS_CLOSED_TOOLTIP! this value ('See Details of this Process') seems to be also defined under the key PROCESS_USER_CHANGED_TOOLTIP!
      */
    public static final String PROCESS_SUBJECT_CHANGED_TOOLTIP = "Process.SubjectChanged.Tooltip";

    /** <pre>PROCESS_TOPIC
      * [en] Process Topic
      * [de] Vorgangsart (Vorgangsart)</pre>
      * Attention! this value ('Process Topic') seems to be also defined under the key PROCESS_PREVIEW_PROCESS_TOPIC!
      */
    public static final String PROCESS_TOPIC = "Process.topic";

    /** <pre>PROCESS_TOPICS
      * [en] Process topics
      * [de] Vorgangsarten</pre>
      */
    public static final String PROCESS_TOPICS = "Process.topics";

    /** <pre>PROCESS_TYPE_HOSPITAL
      * [de] Krankenhaus</pre>
      */
    public static final String PROCESS_TYPE_HOSPITAL = "ProcessType.Hospital";

    /** <pre>PROCESS_TYPE_INSURANCE
      * [de] Krankenkasse</pre>
      * Attention! this value ('Krankenkasse') seems to be also defined under the key RULES_TXT_CRIT_HEALTH_ENSURANCE_DIS!
      */
    public static final String PROCESS_TYPE_INSURANCE = "ProcessType.Insurance";

    /** <pre>PROCESS_USER
      * [en] User assigned the task for editing (Editor)
      * [de] Vorgangsbearbeiter (Bearbeiter)</pre>
      */
    public static final String PROCESS_USER = "Process.user";

    /** <pre>PROCESS_USER_CHANGED_TOOLTIP
      * [en] See Details of this Process
      * [de] Siehe Details zu diesem Vorgang</pre>
      * Attention! this value ('See Details of this Process') seems to be also defined under the key PROCESS_CLOSED_TOOLTIP! this value ('See Details of this Process') seems to be also defined under the key PROCESS_SUBJECT_CHANGED_TOOLTIP!
      */
    public static final String PROCESS_USER_CHANGED_TOOLTIP = "Process.UserChanged.Tooltip";

    /** <pre>PROCESSES
      * [en] Processes
      * [de] Vorgänge</pre>
      */
    public static final String PROCESSES = "Processes";

    /** <pre>PROCESSES_AVAILABLITY
      * [en] List of available Processes
      * [de] Liste der verfügbaren Vorgänge</pre>
      */
    public static final String PROCESSES_AVAILABLITY = "Processes.Availablity";

    /** <pre>PROCESSES_AVAILABLITY_DIALOG
      * [en] Available Processes
      * [de] Vorhandene Vorgänge</pre>
      */
    public static final String PROCESSES_AVAILABLITY_DIALOG = "Processes.Availablity.Dialog";

    /** <pre>PROCESSLIST_CSV_EXPORT_DIAG
      * [en] Processlist is exporting as CSVdocumentation.menu.isActive=Is active:
      * [de] Vorgangliste wird als CSV exportiert</pre>
      */
    public static final String PROCESSLIST_CSV_EXPORT_DIAG = "Processlist.csv.export.diag";

    /** <pre>PROCESSLIST_EXCEL_EXPORT_DIAG
      * [en] Processlist is exporting as Excel
      * [de] Vorgangliste wird als Excel exportiert</pre>
      */
    public static final String PROCESSLIST_EXCEL_EXPORT_DIAG = "Processlist.excel.export.diag";

    /** <pre>PROMPT_TEXTFIELD_TEXT
      * [en] Search events
      * [de] Suchtext eingeben</pre>
      */
    public static final String PROMPT_TEXTFIELD_TEXT = "PromptTextfieldText";

    /** <pre>PSY
      * [en] Psychosomatic
      * [de] Psychosomatik</pre>
      * Attention! this value ('Psychosomatic') seems to be also defined under the key CASE_TYPE_PSY!
      */
    public static final String PSY = "PSY";

    /** <pre>QUARTER_1
      * [en] Q1
      * [de] Q1</pre>
      */
    public static final String QUARTER_1 = "Quarter.1";

    /** <pre>QUARTER_2
      * [en] Q2
      * [de] Q2</pre>
      */
    public static final String QUARTER_2 = "Quarter.2";

    /** <pre>QUARTER_3
      * [en] Q3
      * [de] Q3</pre>
      */
    public static final String QUARTER_3 = "Quarter.3";

    /** <pre>QUARTER_4
      * [en] Q4
      * [de] Q4</pre>
      */
    public static final String QUARTER_4 = "Quarter.4";

    /** <pre>QUOTA_LIST
      * [en] Quota List
      * [de] Prüfquotenliste</pre>
      */
    public static final String QUOTA_LIST = "QuotaList";

    /** <pre>READMISSION
      * [en] Readmission
      * [de] Wiederaufnahme</pre>
      */
    public static final String READMISSION = "Readmission";

    /** <pre>READONLY_DOC_ITEM_AOP
      * [en] AOP
      * [de] AOP</pre>
      */
    public static final String READONLY_DOC_ITEM_AOP = "Readonly.doc.item.aop";

    /** <pre>READONLY_DOC_ITEM_AOP_FILE_NAME
      * [en] AOP-Katalog_
      * [de] AOP-Katalog_</pre>
      */
    public static final String READONLY_DOC_ITEM_AOP_FILE_NAME = "Readonly.doc.item.aop.file.name";

    /** <pre>READONLY_DOC_ITEM_DKR_DRG
      * [en] Deutsche Kodierrichtlinien DRG
      * [de] Deutsche Kodierrichtlinien DRG</pre>
      */
    public static final String READONLY_DOC_ITEM_DKR_DRG = "Readonly.doc.item.dkr.drg";

    /** <pre>READONLY_DOC_ITEM_DKR_DRG_FILE_NAME
      * [en] Deutsche_Kodierrichtlinien_Version_
      * [de] Deutsche_Kodierrichtlinien_Version_</pre>
      */
    public static final String READONLY_DOC_ITEM_DKR_DRG_FILE_NAME = "Readonly.doc.item.dkr.drg.file.name";

    /** <pre>READONLY_DOC_ITEM_DKR_PEPP
      * [en] Deutsche Kodierrichtlinien PEPP
      * [de] Deutsche Kodierrichtlinien PEPP</pre>
      */
    public static final String READONLY_DOC_ITEM_DKR_PEPP = "Readonly.doc.item.dkr.pepp";

    /** <pre>READONLY_DOC_ITEM_DKR_PEPP_FILE_NAME
      * [en] DKR-Psych_Version_
      * [de] DKR-Psych_Version_</pre>
      */
    public static final String READONLY_DOC_ITEM_DKR_PEPP_FILE_NAME = "Readonly.doc.item.dkr.pepp.file.name";

    /** <pre>READONLY_DOC_ITEM_HELP
      * [en] Handbuch
      * [de] Handbuch</pre>
      */
    public static final String READONLY_DOC_ITEM_HELP = "Readonly.doc.item.help";

    /** <pre>READONLY_DOC_ITEM_HELP_FILE_NAME
      * [en] hilfefunktion_cpx
      * [de] hilfefunktion_cpx</pre>
      */
    public static final String READONLY_DOC_ITEM_HELP_FILE_NAME = "Readonly.doc.item.help.file.name";

    /** <pre>READONLY_DOC_ITEM_MD_RECOMENDATION
      * [en] MD Empfehlungen
      * [de] MD Empfehlungen</pre>
      */
    public static final String READONLY_DOC_ITEM_MD_RECOMENDATION = "Readonly.doc.item.md.recomendation";

    /** <pre>READONLY_DOC_ITEM_MD_RECOMENDATION_FILE_NAME
      * [en] MD_Kodierempfehlungen
      * [de] MD_Kodierempfehlungen</pre>
      */
    public static final String READONLY_DOC_ITEM_MD_RECOMENDATION_FILE_NAME = "Readonly.doc.item.md.recomendation.file.name";

    /** <pre>READONLY_DOC_ITEM_WARD_COMPECATING_THERAPY
      * [en] Stationsersetzende Behandlungsmethoden
      * [de] Stationsersetzende Behandlungsmethoden</pre>
      */
    public static final String READONLY_DOC_ITEM_WARD_COMPECATING_THERAPY = "Readonly.doc.item.ward.compecating.therapy";

    /** <pre>READONLY_DOC_ITEM_WARD_COMPECATING_THERAPY_FILE_NAME
      * [en] Stationsersetzende_Behandlungsmethoden
      * [de] Stationsersetzende_Behandlungsmethoden</pre>
      */
    public static final String READONLY_DOC_ITEM_WARD_COMPECATING_THERAPY_FILE_NAME = "Readonly.doc.item.ward.compecating.therapy.file.name";

    /** <pre>REMINDER_ASSIGNED_TOOLTIP
      * [en] See the details of a Reminder
      * [de] Siehe die Details einer Wiedervorlage</pre>
      * Attention! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CHANGED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CREATED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_EXPIRED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_REMOVED_TOOLTIP!
      */
    public static final String REMINDER_ASSIGNED_TOOLTIP = "Reminder.Assigned.Tooltip";

    /** <pre>REMINDER_CHANGED_TOOLTIP
      * [en] See the details of a Reminder
      * [de] Siehe die Details einer Wiedervorlage</pre>
      * Attention! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_ASSIGNED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CREATED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_EXPIRED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_REMOVED_TOOLTIP!
      */
    public static final String REMINDER_CHANGED_TOOLTIP = "Reminder.Changed.Tooltip";

    /** <pre>REMINDER_COMMENT
      * [en] REM Comment
      * [de] WV Kommentar (WV Kommentar)</pre>
      */
    public static final String REMINDER_COMMENT = "Reminder.comment";

    /** <pre>REMINDER_CREATE
      * [en] create Reminder
      * [de] Wiedervorlage erstellen</pre>
      */
    public static final String REMINDER_CREATE = "Reminder.create";

    /** <pre>REMINDER_CREATED_TOOLTIP
      * [en] See the details of a Reminder
      * [de] Siehe die Details einer Wiedervorlage</pre>
      * Attention! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_ASSIGNED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CHANGED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_EXPIRED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_REMOVED_TOOLTIP!
      */
    public static final String REMINDER_CREATED_TOOLTIP = "Reminder.Created.Tooltip";

    /** <pre>REMINDER_CREATION_DATE
      * [en] REM created
      * [de] WV angelegt</pre>
      */
    public static final String REMINDER_CREATION_DATE = "Reminder.CreationDate";

    /** <pre>REMINDER_DUEDATE_IS_BLANK
      * [en] not set
      * [de] nicht gesetzt</pre>
      * Attention! this value ('not set') seems to be also defined under the key VERSION_RISK_TYPE_NOT_SET!
      */
    public static final String REMINDER_DUEDATE_IS_BLANK = "Reminder.Duedate.IsBlank";

    /** <pre>REMINDER_EXPIRED_TOOLTIP
      * [en] See the details of a Reminder
      * [de] Siehe die Details einer Wiedervorlage</pre>
      * Attention! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_ASSIGNED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CHANGED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CREATED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_REMOVED_TOOLTIP!
      */
    public static final String REMINDER_EXPIRED_TOOLTIP = "Reminder.Expired.Tooltip";

    /** <pre>REMINDER_FINISHED
      * [en] Reminder has been Finished (Finished reminders)
      * [de] abgearbeitet (Wiedervorlage abgearbeitet)</pre>
      */
    public static final String REMINDER_FINISHED = "Reminder.finished";

    /** <pre>REMINDER_FINISHED_DATE
      * [en] Finished Date
      * [de] Abgearbeitet am</pre>
      */
    public static final String REMINDER_FINISHED_DATE = "Reminder.FinishedDate";

    /** <pre>REMINDER_FINISHED_STATUS
      * [en] finished
      * [de] abgearbeitet</pre>
      */
    public static final String REMINDER_FINISHED_STATUS = "Reminder.finishedStatus";

    /** <pre>REMINDER_HIGH_PRIORITY
      * [en] high Priority
      * [de] hohe Priorität</pre>
      * Attention! this value ('high Priority') seems to be also defined under the key PRIORITY_HIGH!
      */
    public static final String REMINDER_HIGH_PRIORITY = "Reminder.HighPriority";

    /** <pre>REMINDER_LATEST
      * [en] latest open Reminder (latest Reminder)
      * [de] Fälligkeitsdatum der offenen Wiedervorlage (WV Fälligkeit)</pre>
      */
    public static final String REMINDER_LATEST = "Reminder.latest";

    /** <pre>REMINDER_LATEST_FROM
      * [en] Reminder from
      * [de] Fällig von</pre>
      */
    public static final String REMINDER_LATEST_FROM = "Reminder.latest.from";

    /** <pre>REMINDER_LATEST_TO
      * [en] Reminder to
      * [de] Fällig bis</pre>
      */
    public static final String REMINDER_LATEST_TO = "Reminder.latest.to";

    /** <pre>REMINDER_MODE_SHOW_ALL
      * [en] All reminders
      * [de] alle Wiedervorlagen</pre>
      */
    public static final String REMINDER_MODE_SHOW_ALL = "Reminder.mode.show.all";

    /** <pre>REMINDER_MODE_SHOW_CLOSED
      * [en] Closed reminders
      * [de] abgearbeitete Wiedervorlagen</pre>
      */
    public static final String REMINDER_MODE_SHOW_CLOSED = "Reminder.mode.show.closed";

    /** <pre>REMINDER_MODE_SHOW_OPEN
      * [en] Open reminders
      * [de] offene Wiedervorlagen</pre>
      */
    public static final String REMINDER_MODE_SHOW_OPEN = "Reminder.mode.show.open";

    /** <pre>REMINDER_RECEIVER
      * [en] REM Receiver
      * [de] WV Empfänger (WV Empfänger)</pre>
      */
    public static final String REMINDER_RECEIVER = "Reminder.Receiver";

    /** <pre>REMINDER_REMOVED_TOOLTIP
      * [en] See the details of a Reminder
      * [de] Siehe die Details einer Wiedervorlage</pre>
      * Attention! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_ASSIGNED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CHANGED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CREATED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_EXPIRED_TOOLTIP!
      */
    public static final String REMINDER_REMOVED_TOOLTIP = "Reminder.Removed.Tooltip";

    /** <pre>REMINDER_SENDER
      * [en] REM Sender
      * [de] WV Sender</pre>
      */
    public static final String REMINDER_SENDER = "Reminder.Sender";

    /** <pre>REMINDER_SUBJECT
      * [en] Reminder
      * [de] WV Art (WV Art)</pre>
      * Attention! this value ('Reminder') seems to be also defined under the key EVENT_NAME_REMINDER!
      */
    public static final String REMINDER_SUBJECT = "Reminder.Subject";

    /** <pre>REMINDER_SUBJECT_WAITING_FOR_MDK_REPORT
      * [en] Waiting for MD report
      * [de] Warten auf MD-Gutachten</pre>
      */
    public static final String REMINDER_SUBJECT_WAITING_FOR_MDK_REPORT = "ReminderSubject.WaitingForMdkReport";

    /** <pre>REMINDER_SUBJECTS
      * [en] Reminders
      * [de] Wiedervorlagearten (WV Arten)</pre>
      * Attention! this value ('Reminders') seems to be also defined under the key REMINDERS!
      */
    public static final String REMINDER_SUBJECTS = "Reminder.Subjects";

    /** <pre>REMINDER_TYPE
      * [en] REM type
      * [de] Art der Wiedervorlage</pre>
      */
    public static final String REMINDER_TYPE = "Reminder.type";

    /** <pre>REMINDER_UNFINISHED_STATUS
      * [en] open
      * [de] offen</pre>
      * Attention! this value ('Open') seems to be also defined under the key EVENT_OPERATION_OPEN! this value ('open') seems to be also defined under the key PROCESS_STATUS_REMINDER_OPEN! this value ('open') seems to be also defined under the key WORKFLOW_STATE_OPEN!
      */
    public static final String REMINDER_UNFINISHED_STATUS = "Reminder.unfinishedStatus";

    /** <pre>REMINDER_UPDATE_HEADER
      * [en] Update Reminder
      * [de] Wiedervorlage aktualisieren</pre>
      */
    public static final String REMINDER_UPDATE_HEADER = "Reminder.updateHeader";

    /** <pre>REMINDER_USER_IS_BLANK
      * [en] not assigned
      * [de] nicht zugewiesen</pre>
      */
    public static final String REMINDER_USER_IS_BLANK = "Reminder.User.IsBlank";

    /** <pre>REMINDER_VALIDATION_ERROR_NO_VALID_RECEIVER
      * [en] WV Empfänger nicht vorhanden
      * [de] WV Empfänger nicht vorhanden</pre>
      */
    public static final String REMINDER_VALIDATION_ERROR_NO_VALID_RECEIVER = "Reminder.validation.error.noValidReceiver";

    /** <pre>REMINDER_VALIDATION_WARNING_NO_RECEIVER
      * [en] Kein WV Empfänger eingetragen
      * [de] Kein WV Empfänger eingetragen</pre>
      */
    public static final String REMINDER_VALIDATION_WARNING_NO_RECEIVER = "Reminder.validation.warning.noReceiver";

    /** <pre>REMINDERS
      * [en] Reminders
      * [de] Wiedervorlagen</pre>
      * Attention! this value ('Reminders') seems to be also defined under the key REMINDER_SUBJECTS!
      */
    public static final String REMINDERS = "Reminders";

    /** <pre>RENAME
      * [en] Rename
      * [de] Umbenennen</pre>
      */
    public static final String RENAME = "Rename";

    /** <pre>REPORT_CANCELLED
      * [en] Report Generation is Cancelled
      * [de] Berichtsgenerierung wird abgebrochen</pre>
      */
    public static final String REPORT_CANCELLED = "Report.cancelled";

    /** <pre>REPORT_DIALOG_CONTENT_TEXT
      * [en] Report is Generating
      * [de] Report wird generiert</pre>
      */
    public static final String REPORT_DIALOG_CONTENT_TEXT = "Report.dialog.contentText";

    /** <pre>REPORT_DIALOG_HEADER_TEXT
      * [en] Note
      * [de] Hinweis</pre>
      * Attention! this value ('Note') seems to be also defined under the key WIEDERVORLAGE_COMMENT_DIALOG!
      */
    public static final String REPORT_DIALOG_HEADER_TEXT = "Report.dialog.headerText";

    /** <pre>REPORT_FAILED
      * [en] Report Generation is Failed
      * [de] Berichtsgenerierung ist fehlgeschlagen</pre>
      */
    public static final String REPORT_FAILED = "Report.failed";

    /** <pre>REPORT_FILE_CHOOSER_TILE
      * [en] Create PDF documentation
      * [de] PDF-Dokumentation erstellen</pre>
      */
    public static final String REPORT_FILE_CHOOSER_TILE = "Report.fileChooser.tile";

    /** <pre>REPORT_GENERATE
      * [en] Create report
      * [de] Report erstellen</pre>
      */
    public static final String REPORT_GENERATE = "Report.generate";

    /** <pre>REPORT_OPEN
      * [en] Show report
      * [de] Report anzeigen</pre>
      */
    public static final String REPORT_OPEN = "Report.open";

    /** <pre>REPORT_SAVE_AND_OPEN
      * [en] Save report
      * [de] Report speichern</pre>
      */
    public static final String REPORT_SAVE_AND_OPEN = "Report.SaveAndOpen";

    /** <pre>REQUEST_ADDED_TOOLTIP
      * [en] Update this Request
      * [de] Aktualisieren Sie diese Anfrage</pre>
      */
    public static final String REQUEST_ADDED_TOOLTIP = "Request.Added.Tooltip";

    /** <pre>REQUEST_CREATE
      * [en] create Request
      * [de] Anfrage erstellen</pre>
      */
    public static final String REQUEST_CREATE = "Request.create";

    /** <pre>REQUEST_CREATION_DATE
      * [en] Request Creation Date (Creation Date)
      * [de] Anlagedatum der Anfrage (Anlagedatum)</pre>
      */
    public static final String REQUEST_CREATION_DATE = "Request.CreationDate";

    /** <pre>REQUEST_REPORT_DATE
      * [en] Report date
      * [de] Gutachtendatum (Guta.-Datum)</pre>
      */
    public static final String REQUEST_REPORT_DATE = "RequestReportDate";

    /** <pre>REQUEST_REPORT_DATE_FROM
      * [en] Report date from
      * [de] Gutachtendatum von</pre>
      */
    public static final String REQUEST_REPORT_DATE_FROM = "RequestReportDateFrom";

    /** <pre>REQUEST_REPORT_DATE_TO
      * [en] Report date to
      * [de] Gutachtendatum bis</pre>
      */
    public static final String REQUEST_REPORT_DATE_TO = "RequestReportDateTo";

    /** <pre>REQUEST_STATUS
      * [en] Request State
      * [de] Status der Anfrage (Anfr.-Status)</pre>
      * Attention! this value ('Request State') seems to be also defined under the key MDK_STATUS!
      */
    public static final String REQUEST_STATUS = "Request.status";

    /** <pre>REQUEST_TYPE
      * [de] Anfragetyp</pre>
      */
    public static final String REQUEST_TYPE = "RequestType";

    /** <pre>REQUEST_TYPE_EV
      * [de] Erörterungsverfahren</pre>
      */
    public static final String REQUEST_TYPE_EV = "RequestType.EV";

    /** <pre>REQUEST_TYPE_EXAMINATION
      * [en] Examination/Pre-trial Request
      * [de] Prüfanfrage/Vorverfahren</pre>
      */
    public static final String REQUEST_TYPE_EXAMINATION = "RequestType.Examination";

    /** <pre>REQUEST_TYPE_INSURANCE
      * [en] Insurance
      * [de] Versicherung</pre>
      * Attention! this value ('Insurance') seems to be also defined under the key INSURANCE!
      */
    public static final String REQUEST_TYPE_INSURANCE = "RequestType.Insurance";

    /** <pre>REQUEST_TYPE_INSURANCE_ASSOCIATION
      * [en] Insurance Association
      * [de] Berufsgenossenschaft</pre>
      * Attention! this value ('Insurance Association') seems to be also defined under the key INSURANCE_ASSOCIATION!
      */
    public static final String REQUEST_TYPE_INSURANCE_ASSOCIATION = "RequestType.InsuranceAssociation";

    /** <pre>REQUEST_TYPE_MDK
      * [en] MD
      * [de] Medizinischer Dienst</pre>
      * Attention! this value ('MD') seems to be also defined under the key CASE_RESOLVE_MD! this value ('MD') seems to be also defined under the key DEPARTMENT_TYPE_MAIN_DEPARTMENT!
      */
    public static final String REQUEST_TYPE_MDK = "RequestType.Mdk";

    /** <pre>REQUEST_TYPE_OTHER
      * [en] Other
      * [de] Sonstiges</pre>
      * Attention! this value ('Other') seems to be also defined under the key CASE_TYPE_OTHER! this value ('other') seems to be also defined under the key DRG_PARTITION_OTHER! this value ('Other') seems to be also defined under the key RISK_AREA_OTHER!
      */
    public static final String REQUEST_TYPE_OTHER = "RequestType.Other";

    /** <pre>RESULT
      * [en] Ergebnis
      * [de] Ergebnis</pre>
      * Attention! this value ('Ergebnis') seems to be also defined under the key RULES_TXT_RESULT!
      */
    public static final String RESULT = "Result";

    /** <pre>REVENUE
      * [en] Revenue
      * [de] Erlös</pre>
      */
    public static final String REVENUE = "Revenue";

    /** <pre>REVENUE_MATH_DRG_CARE
      * [en] care CW {0} x Care-Baserate {1}
      * [de] PflegeCW {0} x Pflege-Baserate {1}</pre>
      */
    public static final String REVENUE_MATH_DRG_CARE = "Revenue.math.drg.care";

    /** <pre>REVENUE_MATH_DRG_CARE_GRADE
      * [en] Care-Baserate {0} from {1} to {2}: {3} Days = {4}
      * [de] Pflege-Baserate {0}{1} von {2} bis {3}: {4} Tage</pre>
      */
    public static final String REVENUE_MATH_DRG_CARE_GRADE = "Revenue.math.drg.care.grade";

    /** <pre>REVENUE_MATH_DRG_CARE_GRADE_LAYOUT
      * [de] Pflege-Erlös: bei PflegeCW {0} (CW pro Tag {1} x {2} Tag(e))</pre>
      */
    public static final String REVENUE_MATH_DRG_CARE_GRADE_LAYOUT = "Revenue.math.drg.care.grade.layout";

    /** <pre>REVENUE_MATH_DRG_CARE_GRADE_LAYOUT_CARE_REVENUE
      * [en] for CareCW {0} (CW in day {1} x {2} days)
      * [de] for CareCW {0} (CW in day {1} x {2} days)</pre>
      */
    public static final String REVENUE_MATH_DRG_CARE_GRADE_LAYOUT_CARE_REVENUE = "Revenue.math.drg.care.grade.layoutCare-Revenue";

    /** <pre>REVENUE_MATH_DRG_CARE_LAYOUT
      * [en] Care-Revenue: (Care-Baserate {0}{1} x CareCW {2}) x CareDay(s) {3}
      * [de] Pflege-Erlös: (Pflege-Baserate {0}{1} x PflegeCW {2}) x Pflegetage {3}</pre>
      */
    public static final String REVENUE_MATH_DRG_CARE_LAYOUT = "Revenue.math.drg.care.layout";

    /** <pre>REVENUE_MATH_DRG_CASE
      * [en] eff. CW {0} x Drg-Baserate {1}
      * [de] eff. CW {0} x DRG-Baserate {1}</pre>
      */
    public static final String REVENUE_MATH_DRG_CASE = "Revenue.math.drg.case";

    /** <pre>REVENUE_MATH_DRG_CATALOG_LAYOUT
      * [en] Catalog-Revenue: DRG-Baserate {0}{1} x CatalogCW {2}
      * [de] Katalog-Erlös: DRG-Baserate {0}{1} x KatalogCW {2}</pre>
      */
    public static final String REVENUE_MATH_DRG_CATALOG_LAYOUT = "Revenue.math.drg.catalog.layout";

    /** <pre>REVENUE_MATH_DRG_CORR_DEDUCTION_LAYOUT
      * [en] Deduction: (DRG-Baserate {0}{1} x corr.CW {2}) x corr.Day(s) {3}
      * [de] Abschlag: (DRG-Baserate {0}{1} x korr.CW {2}) x korr.Tag(e) {3}</pre>
      */
    public static final String REVENUE_MATH_DRG_CORR_DEDUCTION_LAYOUT = "Revenue.math.drg.corr.deduction.layout";

    /** <pre>REVENUE_MATH_DRG_CORR_SURCHARGE_LAYOUT
      * [en] Surcharge: (DRG-Baserate {0}{1} x corr.CW {2}) x corr.Day(s) {3}
      * [de] Zuschlag: (DRG-Baserate {0}{1} x korr.CW {2}) x korr.Tag(e) {3}</pre>
      */
    public static final String REVENUE_MATH_DRG_CORR_SURCHARGE_LAYOUT = "Revenue.math.drg.corr.surcharge.layout";

    /** <pre>REVENUE_MATH_DRG_DAY_FEE
      * [en] Day Fee {0}{1} x Day(s) {2}
      * [de] Entgelt-Erlös: Tagesentgelt {0}{1} x Tag(e) {2}</pre>
      */
    public static final String REVENUE_MATH_DRG_DAY_FEE = "Revenue.math.drg.day.fee";

    /** <pre>REVENUE_MATH_PEPP_CWDAY
      * [en] CW in day({0})
      * [de] CW pro Tag({0})</pre>
      */
    public static final String REVENUE_MATH_PEPP_CWDAY = "Revenue.math.pepp.cwday";

    /** <pre>REVENUE_MATH_PEPP_GT_2015
      * [en] Compensation-Grade:  {0} (revenue=  CW in day({1}) x Baserate from {3} to {4} ({4})X  ({5}) Days
      * [de] Vergütungsklasse:{0}, Erlös= CW pro Tag ({1}) x Baserate von {2} bis {3}({4}) X ({5}) Tage</pre>
      */
    public static final String REVENUE_MATH_PEPP_GT_2015 = "Revenue.math.pepp.gt2015";

    /** <pre>REVENUE_MATH_PEPP_LT_2015
      * [en] Compensation-Level: {0} (revenue=  CW in day({1}) x Baserate from {2} to {3} ({4})X  ({5}) Days
      * [de] Vergütungsstufe:{0}, Erlös=CW pro Tag ({1}) x Baserate von {2} bis {3} ({4}) X ({5}) Tage</pre>
      */
    public static final String REVENUE_MATH_PEPP_LT_2015 = "Revenue.math.pepp.lt2015";

    /** <pre>REVENUE_PEPP
      * [de] PEPP-Erlös</pre>
      */
    public static final String REVENUE_PEPP = "Revenue.pepp";

    /** <pre>REVENUE_PEPP_DAILY_DAY
      * [de] ET-Erlös</pre>
      */
    public static final String REVENUE_PEPP_DAILY_DAY = "Revenue.pepp.DailyDay";

    /** <pre>REVENUE_PEPP_SUPPLFEE
      * [de] ZP-Erlös</pre>
      */
    public static final String REVENUE_PEPP_SUPPLFEE = "Revenue.pepp.supplfee";

    /** <pre>REVIEW_AFTER_MD
      * [de] Erörterungsverfahren nach MD-Prüfung</pre>
      */
    public static final String REVIEW_AFTER_MD = "Review.after.md";

    /** <pre>REVIEW_ANSWERED_DATE
      * [de] geantwortet am</pre>
      */
    public static final String REVIEW_ANSWERED_DATE = "Review.answered.date";

    /** <pre>REVIEW_AUDIT_REASONS
      * [de] Prüfgründe</pre>
      */
    public static final String REVIEW_AUDIT_REASONS = "Review.audit.reasons";

    /** <pre>REVIEW_COMMENT
      * [de] Kommentar</pre>
      */
    public static final String REVIEW_COMMENT = "Review.comment";

    /** <pre>REVIEW_COMPLETED_DATE
      * [de] abgeschloßen am</pre>
      */
    public static final String REVIEW_COMPLETED_DATE = "Review.completed.date";

    /** <pre>REVIEW_COMPLETION
      * [de] Abschluß EV</pre>
      */
    public static final String REVIEW_COMPLETION = "Review.completion";

    /** <pre>REVIEW_COMPLETION_DEADLINE_DATE
      * [de] Abschlußfrist bis</pre>
      */
    public static final String REVIEW_COMPLETION_DEADLINE_DATE = "Review.completion.deadline.date";

    /** <pre>REVIEW_DEADLINE_ANSWER_INSURANCE_DATE
      * [de] Antwortfrist KK</pre>
      */
    public static final String REVIEW_DEADLINE_ANSWER_INSURANCE_DATE = "Review.deadline.answer.insurance.date";

    /** <pre>REVIEW_DEADLINE_DATE
      * [de] EV Frist bis</pre>
      */
    public static final String REVIEW_DEADLINE_DATE = "Review.deadline.date";

    /** <pre>REVIEW_DEADLINE_EXTENDED_DATE
      * [de] EV Fristverlängerung</pre>
      */
    public static final String REVIEW_DEADLINE_EXTENDED_DATE = "Review.deadline.extended.date";

    /** <pre>REVIEW_DEADLINE_SEND_ON_DATE
      * [de] Nachsendefrist bis</pre>
      */
    public static final String REVIEW_DEADLINE_SEND_ON_DATE = "Review.deadline.send.on.date";

    /** <pre>REVIEW_EXPERTISE_DATE
      * [de] Gutachtendatum</pre>
      */
    public static final String REVIEW_EXPERTISE_DATE = "Review.expertise.date";

    /** <pre>REVIEW_EXPERTISE_IN_DATE
      * [de] Eingang Gutachten</pre>
      */
    public static final String REVIEW_EXPERTISE_IN_DATE = "Review.expertise.in.date";

    /** <pre>REVIEW_INSURANCE_NAME
      * [de] Versicherungsname</pre>
      */
    public static final String REVIEW_INSURANCE_NAME = "Review.insurance.name";

    /** <pre>REVIEW_INSURANCE_NUMBER
      * [de] IKZ der Versicherung</pre>
      */
    public static final String REVIEW_INSURANCE_NUMBER = "Review.insurance.number";

    /** <pre>REVIEW_INSURANCE_WORKER
      * [de] Bearbeiter</pre>
      * Attention! this value ('Bearbeiter') seems to be also defined under the key REVIEW_MD_WORKER!
      */
    public static final String REVIEW_INSURANCE_WORKER = "Review.insurance.worker";

    /** <pre>REVIEW_MD_NAME
      * [de] MD-Name</pre>
      */
    public static final String REVIEW_MD_NAME = "Review.md.name";

    /** <pre>REVIEW_MD_WORKER
      * [de] Bearbeiter</pre>
      * Attention! this value ('Bearbeiter') seems to be also defined under the key REVIEW_INSURANCE_WORKER!
      */
    public static final String REVIEW_MD_WORKER = "Review.md.worker";

    /** <pre>REVIEW_REMINDER
      * [de] Wiedervorlage</pre>
      */
    public static final String REVIEW_REMINDER = "Review.reminder";

    /** <pre>REVIEW_REQUEST_STATUS
      * [de] Status der Anfrage</pre>
      */
    public static final String REVIEW_REQUEST_STATUS = "Review.request.status";

    /** <pre>REVIEW_SEND_ON_DOCUMENTS
      * [de] Nachsenden der Dokumenten EV</pre>
      */
    public static final String REVIEW_SEND_ON_DOCUMENTS = "Review.send.on.documents";

    /** <pre>REVIEW_SENT_DATE
      * [de] gesendet am</pre>
      */
    public static final String REVIEW_SENT_DATE = "Review.sent.date";

    /** <pre>REVIEW_START_AUDIT_INSURANCE
      * [de] Einleitung Prüfverfahren Kasse</pre>
      */
    public static final String REVIEW_START_AUDIT_INSURANCE = "Review.start.audit.insurance";

    /** <pre>REVIEW_START_AUDIT_MD
      * [de] Einleitung MD-Prüfung</pre>
      */
    public static final String REVIEW_START_AUDIT_MD = "Review.start.audit.md";

    /** <pre>REVIEW_START_DATE
      * [de] eingeleitet</pre>
      */
    public static final String REVIEW_START_DATE = "Review.start.date";

    /** <pre>REVIEW_UPDATE_REQUEST_WINDOW
      * [de] Anfrage aktualisieren (Erörterungsverfahren)</pre>
      */
    public static final String REVIEW_UPDATE_REQUEST_WINDOW = "Review.updateRequestWindow";

    /** <pre>RISK_AREA
      * [en] Riskarea (R.A)
      * [de] Prüfbereich (Prüfbr.)</pre>
      */
    public static final String RISK_AREA = "RiskArea";

    /** <pre>RISK_AREA_CASE_MERGE
      * [en] Case merging
      * [de] Fallzusammenführung</pre>
      * Attention! this value ('Case merging') seems to be also defined under the key CASE_DETAILS_CANCEL_REASON_CASE_MERGE! this value ('Case merging') seems to be also defined under the key CASE_MERGING!
      */
    public static final String RISK_AREA_CASE_MERGE = "RiskArea.CaseMerge";

    /** <pre>RISK_AREA_DRG_PEPP
      * [en] DRG/PEPP
      * [de] DRG/PEPP</pre>
      */
    public static final String RISK_AREA_DRG_PEPP = "RiskArea.DrgPepp";

    /** <pre>RISK_AREA_MAIN_DIAGNOSES
      * [en] Main diagnoses
      * [de] Hauptdiagnose</pre>
      */
    public static final String RISK_AREA_MAIN_DIAGNOSES = "RiskArea.MainDiagnoses";

    /** <pre>RISK_AREA_OTHER
      * [en] Other
      * [de] Sonstiges</pre>
      * Attention! this value ('Other') seems to be also defined under the key CASE_TYPE_OTHER! this value ('other') seems to be also defined under the key DRG_PARTITION_OTHER! this value ('Other') seems to be also defined under the key REQUEST_TYPE_OTHER!
      */
    public static final String RISK_AREA_OTHER = "RiskArea.Other";

    /** <pre>RISK_AREA_OTHER_FEE_SURCHARGE
      * [en] Other Fees and Surcharges
      * [de] Sonstige Entgelte und Zuschläge</pre>
      */
    public static final String RISK_AREA_OTHER_FEE_SURCHARGE = "RiskArea.OtherFeeSurcharge";

    /** <pre>RISK_AREA_PRIMARY_MISALLOC
      * [en] Primary misallocation
      * [de] Primäre Fehlbelegung</pre>
      */
    public static final String RISK_AREA_PRIMARY_MISALLOC = "RiskArea.PrimaryMisalloc";

    /** <pre>RISK_AREA_PROCEDURES
      * [en] Procedures
      * [de] Prozeduren</pre>
      * Attention! this value ('Procedures') seems to be also defined under the key CATALOG_DIALOG_PROCEDURES!
      */
    public static final String RISK_AREA_PROCEDURES = "RiskArea.Procedures";

    /** <pre>RISK_AREA_SECONDARY_DIAGNOSIS
      * [en] Secondary diagnosis
      * [de] Nebendiagnosen</pre>
      */
    public static final String RISK_AREA_SECONDARY_DIAGNOSIS = "RiskArea.SecondaryDiagnosis";

    /** <pre>RISK_AREA_SECONDARY_MISALLOC
      * [en] Secondary misallocation (Length of stay)
      * [de] Sekundäre Fehlbelegung (VWD)</pre>
      */
    public static final String RISK_AREA_SECONDARY_MISALLOC = "RiskArea.SecondaryMisalloc";

    /** <pre>RISK_EDITOR_RISK_AUDIT_VALUE
      * [en] Audit-Risk (A.-R.)
      * [de] Anfrage-Risiko (Anfr.-R.)</pre>
      */
    public static final String RISK_EDITOR_RISK_AUDIT_VALUE = "Risk.editor.risk.audit.value";

    /** <pre>RISK_EDITOR_RISK_WASTE_DEFAULT_VALUE
      * [en] Deficit-Value (D.-V.)
      * [de] Verlustwert (Verl.-W.)</pre>
      */
    public static final String RISK_EDITOR_RISK_WASTE_DEFAULT_VALUE = "Risk.editor.risk.waste.default.value";

    /** <pre>RISK_EDITOR_RISK_WASTE_VALUE
      * [en] Deficit-Risk (D.-R.)
      * [de] Verlust-Risiko (Verl.-R.)</pre>
      */
    public static final String RISK_EDITOR_RISK_WASTE_VALUE = "Risk.editor.risk.waste.value";

    /** <pre>RISK_PERCENT_TOTAL
      * [en] Risk in %
      * [de] Risiko in %</pre>
      * Attention! this value ('Risk in %') seems to be also defined under the key RISK_PERCENT_TOTAL_EQUAL!
      */
    public static final String RISK_PERCENT_TOTAL = "Risk.Percent.Total";

    /** <pre>RISK_PERCENT_TOTAL_EQUAL
      * [en] Risk in %
      * [de] Risiko in %</pre>
      * Attention! this value ('Risk in %') seems to be also defined under the key RISK_PERCENT_TOTAL!
      */
    public static final String RISK_PERCENT_TOTAL_EQUAL = "Risk.Percent.Total.Equal";

    /** <pre>RISK_PERCENT_TOTAL_FROM
      * [en] Risk in % from
      * [de] Risiko in % von</pre>
      */
    public static final String RISK_PERCENT_TOTAL_FROM = "Risk.Percent.Total.From";

    /** <pre>RISK_PERCENT_TOTAL_TO
      * [en] Risk in % to
      * [de] Risiko in % bis</pre>
      */
    public static final String RISK_PERCENT_TOTAL_TO = "Risk.Percent.Total.To";

    /** <pre>RISK_PLACE_OF_REG
      * [en] Place of risk registration
      * [de] Ort der Risikoerfassung</pre>
      */
    public static final String RISK_PLACE_OF_REG = "Risk.PlaceOfReg";

    /** <pre>RISK_VALUE_TOTAL
      * [en] Risk in €
      * [de] Risiko in €</pre>
      * Attention! this value ('Risk in €') seems to be also defined under the key RISK_VALUE_TOTAL_EQUAL!
      */
    public static final String RISK_VALUE_TOTAL = "Risk.Value.Total";

    /** <pre>RISK_VALUE_TOTAL_EQUAL
      * [en] Risk in €
      * [de] Risiko in €</pre>
      * Attention! this value ('Risk in €') seems to be also defined under the key RISK_VALUE_TOTAL!
      */
    public static final String RISK_VALUE_TOTAL_EQUAL = "Risk.Value.Total.Equal";

    /** <pre>RISK_VALUE_TOTAL_FROM
      * [en] Risk in € from
      * [de] Risiko in € von</pre>
      */
    public static final String RISK_VALUE_TOTAL_FROM = "Risk.Value.Total.From";

    /** <pre>RISK_VALUE_TOTAL_TO
      * [en] Risk in € to
      * [de] Risiko in € bis</pre>
      */
    public static final String RISK_VALUE_TOTAL_TO = "Risk.Value.Total.To";

    /** <pre>ROLES
      * [en] Roles
      * [de] Rollen</pre>
      */
    public static final String ROLES = "Roles";

    /** <pre>ROW_NUM
      * [en] Row Number (Row)
      * [de] Zeilennummer (Zeile)</pre>
      */
    public static final String ROW_NUM = "RowNum";

    /** <pre>ROW_NUM_FROM
      * [en] Row Number von
      * [de] Zeilennummer von</pre>
      */
    public static final String ROW_NUM_FROM = "RowNum.from";

    /** <pre>ROW_NUM_TO
      * [en] Row Number bis
      * [de] Zeilennummer bis</pre>
      */
    public static final String ROW_NUM_TO = "RowNum.to";

    /** <pre>RULE_CALCULATION
      * [en] Calculation
      * [de] Berechnung</pre>
      */
    public static final String RULE_CALCULATION = "Rule.calculation";

    /** <pre>RULE_CHECK_CODE_ERROR
      * [en] Error on validation of code {0}
      * [de] Fehler beim Prüfung des Codes {0}</pre>
      */
    public static final String RULE_CHECK_CODE_ERROR = "Rule.check.code.error";

    /** <pre>RULE_CODES_4_YEAR_NOT_VALID
      * [en] Values {0} for the year {1} are not valid
      * [de] Die Werte {0} für das Jahr {1} müssen angepasst werden</pre>
      */
    public static final String RULE_CODES_4_YEAR_NOT_VALID = "Rule.codes.4.year.not.valid";

    /** <pre>RULE_COLUMN_CAPTION
      * [en] caption (caption)
      * [de] Bezeichnung (Bezeichnung)</pre>
      */
    public static final String RULE_COLUMN_CAPTION = "Rule.column.caption";

    /** <pre>RULE_COLUMN_CATEGORY
      * [en] category (category)
      * [de] Kategorie (Kategorie)</pre>
      */
    public static final String RULE_COLUMN_CATEGORY = "Rule.column.category";

    /** <pre>RULE_COLUMN_IDENT
      * [en] ident number (ident number)
      * [de] Identnummer (Identnummer)</pre>
      */
    public static final String RULE_COLUMN_IDENT = "Rule.column.ident";

    /** <pre>RULE_COLUMN_MESSAGE
      * [en] rule error (!)
      * [de] Regelfehler (!)</pre>
      */
    public static final String RULE_COLUMN_MESSAGE = "Rule.column.message";

    /** <pre>RULE_COLUMN_NUMBER
      * [en] rule number (rule number)
      * [de] Regelnummer (Regelnummer)</pre>
      */
    public static final String RULE_COLUMN_NUMBER = "Rule.column.number";

    /** <pre>RULE_COLUMN_RELEVACE
      * [de] Relevanz (Relevanz)</pre>
      */
    public static final String RULE_COLUMN_RELEVACE = "Rule.column.relevace";

    /** <pre>RULE_COLUMN_RULE_NOT_SELECTED
      * [de] Irrelevant (Irrelevant)</pre>
      */
    public static final String RULE_COLUMN_RULE_NOT_SELECTED = "Rule.column.rule.not.selected";

    /** <pre>RULE_COLUMN_RULE_SELECTED
      * [de] Relevant (Relevant)</pre>
      */
    public static final String RULE_COLUMN_RULE_SELECTED = "Rule.column.rule.selected";

    /** <pre>RULE_COLUMN_STATUS
      * [en] Error type (Error type)
      * [de] Fehlerart (Fehlerart)</pre>
      */
    public static final String RULE_COLUMN_STATUS = "Rule.column.status";

    /** <pre>RULE_COLUMN_SUGGESTION
      * [en] suggestion (suggestion)
      * [de] Vorschlag (Vorschlag)</pre>
      */
    public static final String RULE_COLUMN_SUGGESTION = "Rule.column.suggestion";

    /** <pre>RULE_COLUMN_TYPE
      * [en] type (type)
      * [de] Typ (Typ)</pre>
      */
    public static final String RULE_COLUMN_TYPE = "Rule.column.type";

    /** <pre>RULE_DELTA_REVENUE
      * [en] Delta revenue
      * [de] Erlös Delta</pre>
      */
    public static final String RULE_DELTA_REVENUE = "Rule.delta.revenue";

    /** <pre>RULE_ESTIMATED
      * [en] Estimated
      * [de] Geschätztes</pre>
      */
    public static final String RULE_ESTIMATED = "Rule.estimated";

    /** <pre>RULE_FILTER_BUTTON_TEXT
      * [de] Regelfilter</pre>
      */
    public static final String RULE_FILTER_BUTTON_TEXT = "Rule.filter.button.text";

    /** <pre>RULE_FILTER_DIALOG_ALL_RULES_SELECTION
      * [de] Alle selektieren</pre>
      */
    public static final String RULE_FILTER_DIALOG_ALL_RULES_SELECTION = "Rule.filter.dialog.AllRulesSelection";

    /** <pre>RULE_FILTER_DIALOG_ERROR_RULES
      * [de] Fehler</pre>
      */
    public static final String RULE_FILTER_DIALOG_ERROR_RULES = "Rule.filter.dialog.ErrorRules";

    /** <pre>RULE_FILTER_DIALOG_INFORMATION_RULES
      * [de] Information</pre>
      * Attention! this value ('Information') seems to be also defined under the key DAYS_UNBILLED_DIALOG_CONFIRM!
      */
    public static final String RULE_FILTER_DIALOG_INFORMATION_RULES = "Rule.filter.dialog.InformationRules";

    /** <pre>RULE_FILTER_DIALOG_POOL
      * [de] Regelpool</pre>
      */
    public static final String RULE_FILTER_DIALOG_POOL = "Rule.filter.dialog.pool";

    /** <pre>RULE_FILTER_DIALOG_POOL_YEAR
      * [de] Jahr</pre>
      */
    public static final String RULE_FILTER_DIALOG_POOL_YEAR = "Rule.filter.dialog.poolYear";

    /** <pre>RULE_FILTER_DIALOG_RESET_BUTTON
      * [de] Zurücksetzen</pre>
      */
    public static final String RULE_FILTER_DIALOG_RESET_BUTTON = "Rule.filter.dialog.resetButton";

    /** <pre>RULE_FILTER_DIALOG_RULE_CATEGORY
      * [de] Kategorie</pre>
      * Attention! this value ('Kategorie') seems to be also defined under the key CATALOG_AOP_CATEGORY!
      */
    public static final String RULE_FILTER_DIALOG_RULE_CATEGORY = "Rule.filter.dialog.RuleCategory";

    /** <pre>RULE_FILTER_DIALOG_RULE_DESCRIPTION
      * [de] Bezeichnung</pre>
      */
    public static final String RULE_FILTER_DIALOG_RULE_DESCRIPTION = "Rule.filter.dialog.RuleDescription";

    /** <pre>RULE_FILTER_DIALOG_RULE_ERROR_STATUS
      * [de] Status</pre>
      * Attention! this value ('Status') seems to be also defined under the key AUDIT_STATUS! this value ('Status') seems to be also defined under the key BILL_STATUS! this value ('Status') seems to be also defined under the key PROCESS_PREVIEW_PROCESS_STATUS!
      */
    public static final String RULE_FILTER_DIALOG_RULE_ERROR_STATUS = "Rule.filter.dialog.RuleErrorStatus";

    /** <pre>RULE_FILTER_DIALOG_RULE_IDENT
      * [de] Ident-Nummer</pre>
      */
    public static final String RULE_FILTER_DIALOG_RULE_IDENT = "Rule.filter.dialog.RuleIdent";

    /** <pre>RULE_FILTER_DIALOG_RULE_NUMBER
      * [de] Nummer</pre>
      */
    public static final String RULE_FILTER_DIALOG_RULE_NUMBER = "Rule.filter.dialog.RuleNumber";

    /** <pre>RULE_FILTER_DIALOG_RULE_SUGGESTION
      * [de] Vorschlag</pre>
      * Attention! this value ('Vorschlag') seems to be also defined under the key RULES_TXT_COMPLAINT_SUGGESTION!
      */
    public static final String RULE_FILTER_DIALOG_RULE_SUGGESTION = "Rule.filter.dialog.RuleSuggestion";

    /** <pre>RULE_FILTER_DIALOG_RULE_TYPE
      * [de] Typ</pre>
      * Attention! this value ('Typ') seems to be also defined under the key DIALOG_BATCH_GROUPING_RULES_TYP!
      */
    public static final String RULE_FILTER_DIALOG_RULE_TYPE = "Rule.filter.dialog.RuleType";

    /** <pre>RULE_FILTER_DIALOG_WARNING_RULES
      * [de] Warnung</pre>
      */
    public static final String RULE_FILTER_DIALOG_WARNING_RULES = "Rule.filter.dialog.WarningRules";

    /** <pre>RULE_HAS_ERRORS
      * [en] rule has a validation error
      * [de] Regel hat Validierungsfehler</pre>
      */
    public static final String RULE_HAS_ERRORS = "Rule.has.errors";

    /** <pre>RULE_LIST
      * [en] Rule List
      * [de] Regelliste</pre>
      */
    public static final String RULE_LIST = "RuleList";

    /** <pre>RULE_MESSAGE_CATALOG_TRANSFER_DIALOG_WARNING
      * [en] There are still errors regarding the catalog transfer from {0} to {1} present in this rule.If this rule is saved, these errors will not be shown again!Save anyway?
      * [de] In der Regel befinden sich noch potenzielle Fehler aus der Prüfung mit den Überleitungstabellen {0} zu {1}.Durch den Speicher-Vorgang akzeptieren Sie diese Fehler und im weiteren werden diese nicht mehr angezeigt!Trotzdem speichern?</pre>
      */
    public static final String RULE_MESSAGE_CATALOG_TRANSFER_DIALOG_WARNING = "Rule.message.catalog.transfer.dialog.warning";

    /** <pre>RULE_NO_CONTENT_FOUND
      * [en] Rule has no content
      * [de] Regel hat kein Rumpf</pre>
      */
    public static final String RULE_NO_CONTENT_FOUND = "Rule.no.content.found";

    /** <pre>RULE_RESULT
      * [en] Rules result
      * [de] Ergebnis der Regel</pre>
      */
    public static final String RULE_RESULT = "Rule.result";

    /** <pre>RULE_SUGG_CONDITION_NOT_COMPLETE
      * [en] Suggestion term is not complete, no value set in the WHEN - condition
      * [de] Der Wert ist in WENN-Bedingung nicht gesetzt, Vorschlagsterm ist nicht vollständig</pre>
      */
    public static final String RULE_SUGG_CONDITION_NOT_COMPLETE = "Rule.sugg.condition.not.complete";

    /** <pre>RULE_SUGG_TERM_NOT_COMPLETE
      * [en] Suggestion term is not complete, no value set
      * [de] Vorschlasterm ist nicht vollständig</pre>
      */
    public static final String RULE_SUGG_TERM_NOT_COMPLETE = "Rule.sugg.term.not.complete";

    /** <pre>RULE_TABLE_CODES_NOT_VALID
      * [en] The rule table {0} contains invalide codes {1}
      * [de] Die Tabelle {0} enthält nicht valide Code(s) {1}</pre>
      */
    public static final String RULE_TABLE_CODES_NOT_VALID = "Rule.table.codes.not.valid";

    /** <pre>RULE_TABLE_COMMENT_TOOLTIP
      * [en] "Comment to the table content"
      * [de] "Notiz zu Tabellennihalt"</pre>
      */
    public static final String RULE_TABLE_COMMENT_TOOLTIP = "Rule.table.comment.tooltip";

    /** <pre>RULE_TABLE_CONTENT
      * [en] Table content
      * [de] Tabelleninhalt</pre>
      */
    public static final String RULE_TABLE_CONTENT = "Rule.table.content";

    /** <pre>RULE_TABLE_HAS_ERRORS
      * [en] rule table has a validation error
      * [de] Regeltable hat Validierungsfehler</pre>
      */
    public static final String RULE_TABLE_HAS_ERRORS = "Rule.table.has.errors";

    /** <pre>RULE_TABLE_MESSAGE_CATALOG_TRANSFER_DIALOG_WARNING
      * [en] There are still errors regarding the catalog transfer from {0} to {1} present in this rule table.If this rule table is saved, these errors will not be shown again!Save anyway?
      * [de] In der Regeltabelle befinden sich noch potenzielle Fehler aus der Prüfung mit den Überleitungstabellen {0} zu {1}.Durch den Speicher-Vorgang akzeptieren Sie diese Fehler und im weiteren werden diese nicht mehr angezeigt!Trotzdem speichern?</pre>
      */
    public static final String RULE_TABLE_MESSAGE_CATALOG_TRANSFER_DIALOG_WARNING = "Rule.table.message.catalog.transfer.dialog.warning";

    /** <pre>RULE_TABLE_NOTE
      * [en] Table comment
      * [de] Tabellennotiz</pre>
      */
    public static final String RULE_TABLE_NOTE = "Rule.table.note";

    /** <pre>RULE_TERM_NOT_COMPLETE
      * [en] Rule term is not complete
      * [de] Regelterm ist nicht vollständig</pre>
      */
    public static final String RULE_TERM_NOT_COMPLETE = "Rule.term.not.complete";

    /** <pre>RULE_TYPE_FOUND_IN_DB
      * [en] rule type foung in database
      * [de] Regeltyp gefunden in DB</pre>
      */
    public static final String RULE_TYPE_FOUND_IN_DB = "Rule.type.found.in.db";

    /** <pre>RULE_TYPE_IMPORTED
      * [en] rule type imported
      * [de] Regeltyp importiert</pre>
      */
    public static final String RULE_TYPE_IMPORTED = "Rule.type.imported";

    /** <pre>RULE_TYPE_NOT_FOUND
      * [en] rule type is not found
      * [de] Regeltyp is nicht gefunden</pre>
      */
    public static final String RULE_TYPE_NOT_FOUND = "Rule.type.not.found";

    /** <pre>RULE_TYPE_OTHER_DISPLAY_TEXT
      * [de] Regeltyp is nicht gefunden</pre>
      */
    public static final String RULE_TYPE_OTHER_DISPLAY_TEXT = "Rule.type.other.display.text";

    /** <pre>RULE_VALIDATION_CHECK_CATALOG_TRANSFER_TABLE
      * [en] check with transfer tables
      * [de] gegen den Überleitungstabellen prüfen</pre>
      */
    public static final String RULE_VALIDATION_CHECK_CATALOG_TRANSFER_TABLE = "Rule.validation.check.catalog.transfer.table";

    /** <pre>RULE_VALIDATION_CODE_ERROR
      * [en] eror in code
      * [de] Fehler in Code</pre>
      */
    public static final String RULE_VALIDATION_CODE_ERROR = "Rule.validation.code.error";

    /** <pre>RULE_VALIDATION_NO_VALUE
      * [en] no value found
      * [de] kein Wert gefunden</pre>
      */
    public static final String RULE_VALIDATION_NO_VALUE = "Rule.validation.no.value";

    /** <pre>RULE_VALIDATION_RULE_NO_CONTENT
      * [en] rule is empty
      * [de] die Regel hat keine Inhalt</pre>
      */
    public static final String RULE_VALIDATION_RULE_NO_CONTENT = "Rule.validation.rule.no.content";

    /** <pre>RULE_VALIDATION_RULE_NOT_VALID
      * [en] rules syntax is erroneous
      * [de] Regelsyntax ist fehlerhaft</pre>
      */
    public static final String RULE_VALIDATION_RULE_NOT_VALID = "Rule.validation.rule.not.valid";

    /** <pre>RULE_VALIDATION_RULE_WITHOUT_TABLES
      * [en] tables for rule not found
      * [de] Regeltabellen für die Regel sind nicht vorhanden</pre>
      */
    public static final String RULE_VALIDATION_RULE_WITHOUT_TABLES = "Rule.validation.rule.without.tables";

    /** <pre>RULE_VALIDATION_SUGG_CHECK_BOTH
      * [en] check suggestion and condition
      * [de] Regelvorschlag und Bedignung prüfen</pre>
      */
    public static final String RULE_VALIDATION_SUGG_CHECK_BOTH = "Rule.validation.sugg.check.both";

    /** <pre>RULE_VALIDATION_SUGG_NO_VALUE
      * [en] suggestion is not complete
      * [de] Regelvorschlag ist nicht vollständig</pre>
      */
    public static final String RULE_VALIDATION_SUGG_NO_VALUE = "Rule.validation.sugg.no.value";

    /** <pre>RULE_VALIDATION_VALUE_NOT_IN_CATALOG
      * [en] Code value is not fount in catalog
      * [de] der Wert ist nicht im Katalog</pre>
      */
    public static final String RULE_VALIDATION_VALUE_NOT_IN_CATALOG = "Rule.validation.value.not.in.catalog";

    /** <pre>RULE_VALIDATION_YEAR_NOT_VALID
      * [en] rule year is not valid
      * [de] Das Jahr ist nicht gültig</pre>
      */
    public static final String RULE_VALIDATION_YEAR_NOT_VALID = "Rule.validation.year.not.valid";

    /** <pre>RULE_WL
      * [en] Rule Editor Working List
      * [de] Rule Editor Working List</pre>
      */
    public static final String RULE_WL = "Rule.wl";

    /** <pre>RULES_01_BPFLV
      * [en] 01 - BPflV
      * [de] 01 - BPflV</pre>
      */
    public static final String RULES_01_BPFLV = "Rules.01.bpflv";

    /** <pre>RULES_02_DRG_ANLAGE_1
      * [en] 02 - DRG Anlage 1
      * [de] 02 - DRG Anlage 1</pre>
      */
    public static final String RULES_02_DRG_ANLAGE_1 = "Rules.02.drg.anlage.1";

    /** <pre>RULES_03_NUB
      * [en] 03 - NUB
      * [de] 03 - NUB</pre>
      */
    public static final String RULES_03_NUB = "Rules.03.nub";

    /** <pre>RULES_04_SONSTIGE_ENTGELTE_ANLAGE
      * [en] 04 - Sonstige Entgelte Anlage
      * [de] 04 - Sonstige Entgelte Anlage</pre>
      */
    public static final String RULES_04_SONSTIGE_ENTGELTE_ANLAGE = "Rules.04.sonstige.entgelte.anlage";

    /** <pre>RULES_05_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN
      * [en] 05 - andere Sonstige Entgelte / Besondere Einrichtungen
      * [de] 05 - andere Sonstige Entgelte / Besondere Einrichtungen</pre>
      */
    public static final String RULES_05_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN = "Rules.05.andere.sonstige.entgelte.besondere.einrichtungen";

    /** <pre>RULES_06_VORSTATIONAER
      * [en] 06 - vorstationär
      * [de] 06 - vorstationär</pre>
      */
    public static final String RULES_06_VORSTATIONAER = "Rules.06.vorstationaer";

    /** <pre>RULES_07_DAK_INTERNE_ENTGELTE
      * [en] 07 - DAK-interne Entgelte
      * [de] 07 - DAK-interne Entgelte</pre>
      */
    public static final String RULES_07_DAK_INTERNE_ENTGELTE = "Rules.07.dak.interne.entgelte";

    /** <pre>RULES_08_IV
      * [en] 08 - IV
      * [de] 08 - IV</pre>
      */
    public static final String RULES_08_IV = "Rules.08.iv";

    /** <pre>RULES_09_MODELLVORHABEN
      * [en] 09 - Modellvorhaben
      * [de] 09 - Modellvorhaben</pre>
      */
    public static final String RULES_09_MODELLVORHABEN = "Rules.09.modellvorhaben";

    /** <pre>RULES_0_UNBEKANNT
      * [en] 0 - unbekannt
      * [de] 0 - unbekannt</pre>
      */
    public static final String RULES_0_UNBEKANNT = "Rules.0.unbekannt";

    /** <pre>RULES_10_DMP
      * [en] 10 - DMP
      * [de] 10 - DMP</pre>
      */
    public static final String RULES_10_DMP = "Rules.10.dmp";

    /** <pre>RULES_11_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004
      * [en] 11 - gesonderte Entgelte aus den Jahren 2003/2004
      * [de] 11 - gesonderte Entgelte aus den Jahren 2003/2004</pre>
      */
    public static final String RULES_11_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004 = "Rules.11.gesonderte.entgelte.aus.den.jahren.20032004";

    /** <pre>RULES_12_BPFLV_OHNE_SCHLUSSRECHNUNG
      * [en] 12 - BPflV ohne Schlussrechnung
      * [de] 12 - BPflV ohne Schlussrechnung</pre>
      */
    public static final String RULES_12_BPFLV_OHNE_SCHLUSSRECHNUNG = "Rules.12.bpflv.ohne.schlussrechnung";

    /** <pre>RULES_13_DRG_ANLAGE_1_OHNE_SCHLUSSRECHNUNG
      * [en] 13 - DRG Anlage 1 ohne Schlussrechnung
      * [de] 13 - DRG Anlage 1 ohne Schlussrechnung</pre>
      */
    public static final String RULES_13_DRG_ANLAGE_1_OHNE_SCHLUSSRECHNUNG = "Rules.13.drg.anlage.1.ohne.schlussrechnung";

    /** <pre>RULES_14_NUB_OHNE_SCHLUSSRECHNUNG
      * [en] 14 - NUB ohne Schlussrechnung
      * [de] 14 - NUB ohne Schlussrechnung</pre>
      */
    public static final String RULES_14_NUB_OHNE_SCHLUSSRECHNUNG = "Rules.14.nub.ohne.schlussrechnung";

    /** <pre>RULES_15_SONSTIGE_ENTGELTE_ANLAGE_OHNE_SCHLUSSRECHNUNG
      * [en] 15 - Sonstige Entgelte Anlage ohne Schlussrechnung
      * [de] 15 - Sonstige Entgelte Anlage ohne Schlussrechnung</pre>
      */
    public static final String RULES_15_SONSTIGE_ENTGELTE_ANLAGE_OHNE_SCHLUSSRECHNUNG = "Rules.15.sonstige.entgelte.anlage.ohne.schlussrechnung";

    /** <pre>RULES_16_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN_OHNE_SCHLUSSRECHNUNG
      * [en] 16 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung
      * [de] 16 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung</pre>
      */
    public static final String RULES_16_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN_OHNE_SCHLUSSRECHNUNG = "Rules.16.andere.sonstige.entgelte.besondere.einrichtungen.ohne.schlussrechnung";

    /** <pre>RULES_17_VORSTATIONAER_OHNE_SCHLUSSRECHNUNG
      * [en] 17 - vorstationär ohne Schlussrechnung
      * [de] 17 - vorstationär ohne Schlussrechnung</pre>
      */
    public static final String RULES_17_VORSTATIONAER_OHNE_SCHLUSSRECHNUNG = "Rules.17.vorstationaer.ohne.schlussrechnung";

    /** <pre>RULES_18_DAK_INTERNE_ENTGELTE_OHNE_SCHLUSSRECHNUNG
      * [en] 18 - DAK-interne Entgelte ohne Schlussrechnung
      * [de] 18 - DAK-interne Entgelte ohne Schlussrechnung</pre>
      */
    public static final String RULES_18_DAK_INTERNE_ENTGELTE_OHNE_SCHLUSSRECHNUNG = "Rules.18.dak.interne.entgelte.ohne.schlussrechnung";

    /** <pre>RULES_19_IV_OHNE_SCHLUSSRECHNUNG
      * [en] 19 - IV ohne Schlussrechnung
      * [de] 19 - IV ohne Schlussrechnung</pre>
      */
    public static final String RULES_19_IV_OHNE_SCHLUSSRECHNUNG = "Rules.19.iv.ohne.schlussrechnung";

    /** <pre>RULES_1_MAENNLICH
      * [en] 1 - männlich
      * [de] 1 - männlich</pre>
      */
    public static final String RULES_1_MAENNLICH = "Rules.1.maennlich";

    /** <pre>RULES_1_PFLEGESTUFE_1
      * [en] 1 - Pflegestufe 1
      * [de] 1 - Pflegestufe 1</pre>
      */
    public static final String RULES_1_PFLEGESTUFE_1 = "Rules.1.pflegestufe.1";

    /** <pre>RULES_20_MODELLVORHABEN_OHNE_SCHLUSSRECHNUNG
      * [en] 20 - Modellvorhaben ohne Schlussrechnung
      * [de] 20 - Modellvorhaben ohne Schlussrechnung</pre>
      */
    public static final String RULES_20_MODELLVORHABEN_OHNE_SCHLUSSRECHNUNG = "Rules.20.modellvorhaben.ohne.schlussrechnung";

    /** <pre>RULES_21_DMP_OHNE_SCHLUSSRECHNUNG
      * [en] 21 - DMP ohne Schlussrechnung
      * [de] 21 - DMP ohne Schlussrechnung</pre>
      */
    public static final String RULES_21_DMP_OHNE_SCHLUSSRECHNUNG = "Rules.21.dmp.ohne.schlussrechnung";

    /** <pre>RULES_22_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004_OHNE_SCHLUSSRECHNUNG
      * [en] 22 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung
      * [de] 22 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung</pre>
      */
    public static final String RULES_22_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004_OHNE_SCHLUSSRECHNUNG = "Rules.22.gesonderte.entgelte.aus.den.jahren.20032004.ohne.schlussrechnung";

    /** <pre>RULES_23_BPFLV_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
      * [en] 23 - BPflV ohne Schlussrechnung und ohne Entlassungsanzeige
      * [de] 23 - BPflV ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String RULES_23_BPFLV_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE = "Rules.23.bpflv.ohne.schlussrechnung.und.ohne.entlassungsanzeige";

    /** <pre>RULES_23_PFLEGEHILFSMITTEL
      * [en] 23 - Pflegehilfsmittel
      * [de] 23 - Pflegehilfsmittel</pre>
      */
    public static final String RULES_23_PFLEGEHILFSMITTEL = "Rules.23.pflegehilfsmittel";

    /** <pre>RULES_24_DRG_ANLAGE_1_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
      * [en] 24 - DRG Anlage 1 ohne Schlussrechnung und ohne Entlassungsanzeige
      * [de] 24 - DRG Anlage 1 ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String RULES_24_DRG_ANLAGE_1_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE = "Rules.24.drg.anlage.1.ohne.schlussrechnung.und.ohne.entlassungsanzeige";

    /** <pre>RULES_24_PFLEGEHILFSMITTEL_MIT_LEIHWEISER_UEBERLASSUNG
      * [en] 24 - Pflegehilfsmittel mit leihweiser Überlassung
      * [de] 24 - Pflegehilfsmittel mit leihweiser Überlassung</pre>
      */
    public static final String RULES_24_PFLEGEHILFSMITTEL_MIT_LEIHWEISER_UEBERLASSUNG = "Rules.24.pflegehilfsmittel.mit.leihweiser.ueberlassung";

    /** <pre>RULES_24_ZUM_VERBRAUCH_BESTIMMTE_PFLEGEHILFSMITTEL
      * [en] 24 - zum Verbrauch bestimmte Pflegehilfsmittel
      * [de] 24 - zum Verbrauch bestimmte Pflegehilfsmittel</pre>
      */
    public static final String RULES_24_ZUM_VERBRAUCH_BESTIMMTE_PFLEGEHILFSMITTEL = "Rules.24.zum.verbrauch.bestimmte.pflegehilfsmittel";

    /** <pre>RULES_25_NUB_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
      * [en] 25 - NUB ohne Schlussrechnung und ohne Entlassungsanzeige
      * [de] 25 - NUB ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String RULES_25_NUB_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE = "Rules.25.nub.ohne.schlussrechnung.und.ohne.entlassungsanzeige";

    /** <pre>RULES_26_SONSTIGE_ENTGELTE_ANLAGE_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
      * [en] 26 - Sonstige Entgelte Anlage ohne Schlussrechnung und ohne Entlassungsanzeige
      * [de] 26 - Sonstige Entgelte Anlage ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String RULES_26_SONSTIGE_ENTGELTE_ANLAGE_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE = "Rules.26.sonstige.entgelte.anlage.ohne.schlussrechnung.und.ohne.entlassungsanzeige";

    /** <pre>RULES_27_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
      * [en] 27 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige
      * [de] 27 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String RULES_27_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE = "Rules.27.andere.sonstige.entgelte.besondere.einrichtungen.ohne.schlussrechnung.und.ohne.entlassungsanzeige";

    /** <pre>RULES_28_VORSTATIONAER_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
      * [en] 28 - vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige
      * [de] 28 - vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String RULES_28_VORSTATIONAER_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE = "Rules.28.vorstationaer.ohne.schlussrechnung.und.ohne.entlassungsanzeige";

    /** <pre>RULES_29_DAK_INTERNE_ENTGELTE_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
      * [en] 29 - DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige
      * [de] 29 - DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String RULES_29_DAK_INTERNE_ENTGELTE_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE = "Rules.29.dak.interne.entgelte.ohne.schlussrechnung.und.ohne.entlassungsanzeige";

    /** <pre>RULES_2_PFLEGESTUFE_2
      * [en] 2 - Pflegestufe 2
      * [de] 2 - Pflegestufe 2</pre>
      */
    public static final String RULES_2_PFLEGESTUFE_2 = "Rules.2.pflegestufe.2";

    /** <pre>RULES_2_WEIBLICH
      * [en] 2 - weiblich
      * [de] 2 - weiblich</pre>
      */
    public static final String RULES_2_WEIBLICH = "Rules.2.weiblich";

    /** <pre>RULES_30_IV_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
      * [en] 30 - IV ohne Schlussrechnung und ohne Entlassungsanzeige
      * [de] 30 - IV ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String RULES_30_IV_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE = "Rules.30.iv.ohne.schlussrechnung.und.ohne.entlassungsanzeige";

    /** <pre>RULES_31_MODELLVORHABEN_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
      * [en] 31 - Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige
      * [de] 31 - Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String RULES_31_MODELLVORHABEN_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE = "Rules.31.modellvorhaben.ohne.schlussrechnung.und.ohne.entlassungsanzeige";

    /** <pre>RULES_32_DMP_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
      * [en] 32 - DMP ohne Schlussrechnung und ohne Entlassungsanzeige
      * [de] 32 - DMP ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String RULES_32_DMP_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE = "Rules.32.dmp.ohne.schlussrechnung.und.ohne.entlassungsanzeige";

    /** <pre>RULES_33_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
      * [en] 33 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung und ohne Entlassungsanzeige
      * [de] 33 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
      */
    public static final String RULES_33_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE = "Rules.33.gesonderte.entgelte.aus.den.jahren.20032004.ohne.schlussrechnung.und.ohne.entlassungsanzeige";

    /** <pre>RULES_3_PFLEGESTUFE_3
      * [en] 3 - Pflegestufe 3
      * [de] 3 - Pflegestufe 3</pre>
      */
    public static final String RULES_3_PFLEGESTUFE_3 = "Rules.3.pflegestufe.3";

    /** <pre>RULES_3_UNBESTIMMT
      * [en] 3 - unbestimmt
      * [de] 3 - unbestimmt</pre>
      */
    public static final String RULES_3_UNBESTIMMT = "Rules.3.unbestimmt";

    /** <pre>RULES_4_DIVERSE
      * [en] 4 - diverse
      * [de] 4 - divers</pre>
      */
    public static final String RULES_4_DIVERSE = "Rules.4.diverse";

    /** <pre>RULES_4_HAERTEFALL_PFLEGESTUFE_3
      * [en] 4 - Härtefall (Pflegestufe 3+)
      * [de] 4 - Härtefall (Pflegestufe 3+)</pre>
      */
    public static final String RULES_4_HAERTEFALL_PFLEGESTUFE_3 = "Rules.4.haertefall.pflegestufe.3";

    /** <pre>RULES_70_PFLEGESACHLEISTUNG
      * [en] 70 - Pflegesachleistung
      * [de] 70 - Pflegesachleistung</pre>
      */
    public static final String RULES_70_PFLEGESACHLEISTUNG = "Rules.70.pflegesachleistung";

    /** <pre>RULES_71_PFLEGEGELD
      * [en] 71 - Pflegegeld
      * [de] 71 - Pflegegeld</pre>
      */
    public static final String RULES_71_PFLEGEGELD = "Rules.71.pflegegeld";

    /** <pre>RULES_72_HAEUSLICHER_BERATUNGSEINSATZ
      * [en] 72 - häuslicher Beratungseinsatz
      * [de] 72 - häuslicher Beratungseinsatz</pre>
      */
    public static final String RULES_72_HAEUSLICHER_BERATUNGSEINSATZ = "Rules.72.haeuslicher.beratungseinsatz";

    /** <pre>RULES_73_PFLEGE_BEI_VERHINDERUNG_DER_PFLEGEPERSON
      * [en] 73 - Pflege bei Verhinderung der Pflegeperson
      * [de] 73 - Pflege bei Verhinderung der Pflegeperson</pre>
      */
    public static final String RULES_73_PFLEGE_BEI_VERHINDERUNG_DER_PFLEGEPERSON = "Rules.73.pflege.bei.verhinderung.der.pflegeperson";

    /** <pre>RULES_74_MASSNAHMEN_IM_WOHNUMFELD
      * [en] 74 - Maßnahmen im Wohnumfeld
      * [de] 74 - Maßnahmen im Wohnumfeld</pre>
      */
    public static final String RULES_74_MASSNAHMEN_IM_WOHNUMFELD = "Rules.74.massnahmen.im.wohnumfeld";

    /** <pre>RULES_75_TEILSTATIONAERE_PFLEGE_TAGES_NACHTPFLEGE
      * [en] 75 - Teilstationäre Pflege (Tages-/ Nachtpflege)
      * [de] 75 - Teilstationäre Pflege (Tages-/ Nachtpflege)</pre>
      */
    public static final String RULES_75_TEILSTATIONAERE_PFLEGE_TAGES_NACHTPFLEGE = "Rules.75.teilstationaere.pflege.tages.nachtpflege";

    /** <pre>RULES_76_KURZZEITPFLEGE
      * [en] 76 - Kurzzeitpflege
      * [de] 76 - Kurzzeitpflege</pre>
      */
    public static final String RULES_76_KURZZEITPFLEGE = "Rules.76.kurzzeitpflege";

    /** <pre>RULES_77_VOLLSTATIONRE_PFLEGE
      * [en] 77 - Vollstationre Pflege
      * [de] 77 - Vollstationre Pflege</pre>
      */
    public static final String RULES_77_VOLLSTATIONRE_PFLEGE = "Rules.77.vollstationre.pflege";

    /** <pre>RULES_78_VOLLSTATIONRE_PFLEGE_MIT_ZUSCHUSS
      * [en] 78 - Vollstationre Pflege mit Zuschuß
      * [de] 78 - Vollstationre Pflege mit Zuschuß</pre>
      */
    public static final String RULES_78_VOLLSTATIONRE_PFLEGE_MIT_ZUSCHUSS = "Rules.78.vollstationre.pflege.mit.zuschuss";

    /** <pre>RULES_79_VOLLSTATIONRE_PFLEGE_IN_BEHINDERTENEINRICHTUNG
      * [en] 79 - Vollstationre Pflege in Behinderteneinrichtung
      * [de] 79 - Vollstationre Pflege in Behinderteneinrichtung</pre>
      */
    public static final String RULES_79_VOLLSTATIONRE_PFLEGE_IN_BEHINDERTENEINRICHTUNG = "Rules.79.vollstationre.pflege.in.behinderteneinrichtung";

    /** <pre>RULES_7A_BEREUNGSLEISTUNG_BIS_30_06_2008
      * [en] 7A - Bereungsleistung bis 30.06.2008
      * [de] 7A - Bereungsleistung bis 30.06.2008</pre>
      */
    public static final String RULES_7A_BEREUNGSLEISTUNG_BIS_30_06_2008 = "Rules.7a.bereungsleistung.bis.30.06.2008";

    /** <pre>RULES_7B_STUNDENWEISE_ERSATZPFLEGE
      * [en] 7B - stundenweise Ersatzpflege
      * [de] 7B - stundenweise Ersatzpflege</pre>
      */
    public static final String RULES_7B_STUNDENWEISE_ERSATZPFLEGE = "Rules.7b.stundenweise.ersatzpflege";

    /** <pre>RULES_7C_BEREUNGSLEISTUNG_MAXIMALBETRAG
      * [en] 7C - Bereungsleistung Maximalbetrag
      * [de] 7C - Bereungsleistung Maximalbetrag</pre>
      */
    public static final String RULES_7C_BEREUNGSLEISTUNG_MAXIMALBETRAG = "Rules.7c.bereungsleistung.maximalbetrag";

    /** <pre>RULES_7D_BEREUNGSLEISTUNG_GRUNDBETRAG
      * [en] 7D - Bereungsleistung Grundbetrag
      * [de] 7D - Bereungsleistung Grundbetrag</pre>
      */
    public static final String RULES_7D_BEREUNGSLEISTUNG_GRUNDBETRAG = "Rules.7d.bereungsleistung.grundbetrag";

    /** <pre>RULES_7E_BONUSZAHLUNG_AN_VOLLSTATIONAERE_PFLEGEEINRICHTUNGEN_BEI_RUECKSTUFUNG
      * [en] 7E - Bonuszahlung an vollstationäre Pflegeeinrichtungen bei Rückstufung
      * [de] 7E - Bonuszahlung an vollstationäre Pflegeeinrichtungen bei Rückstufung</pre>
      */
    public static final String RULES_7E_BONUSZAHLUNG_AN_VOLLSTATIONAERE_PFLEGEEINRICHTUNGEN_BEI_RUECKSTUFUNG = "Rules.7e.bonuszahlung.an.vollstationaere.pflegeeinrichtungen.bei.rueckstufung";

    /** <pre>RULES_7F_KURZZEITPFLEGE_FUER_KINDER_IN_NICHTVERTRAGSEINRICHTUNGEN
      * [en] 7F - Kurzzeitpflege für Kinder in Nichtvertragseinrichtungen
      * [de] 7F - Kurzzeitpflege für Kinder in Nichtvertragseinrichtungen</pre>
      */
    public static final String RULES_7F_KURZZEITPFLEGE_FUER_KINDER_IN_NICHTVERTRAGSEINRICHTUNGEN = "Rules.7f.kurzzeitpflege.fuer.kinder.in.nichtvertragseinrichtungen";

    /** <pre>RULES_7G_ERSTBERATUNG
      * [en] 7G - Erstberatung
      * [de] 7G - Erstberatung</pre>
      */
    public static final String RULES_7G_ERSTBERATUNG = "Rules.7g.erstberatung";

    /** <pre>RULES_7H_FOLGEBERATUNG
      * [en] 7H - Folgeberatung
      * [de] 7H - Folgeberatung</pre>
      */
    public static final String RULES_7H_FOLGEBERATUNG = "Rules.7h.folgeberatung";

    /** <pre>RULES_7P_BEWILLIGUNG_PFLEGEGELD
      * [en] 7P - Bewilligung Pflegegeld
      * [de] 7P - Bewilligung Pflegegeld</pre>
      */
    public static final String RULES_7P_BEWILLIGUNG_PFLEGEGELD = "Rules.7p.bewilligung.pflegegeld";

    /** <pre>RULES_7S_BEWILLIGUNG_PFLEGESACHLEISTUNG
      * [en] 7S - Bewilligung Pflegesachleistung
      * [de] 7S - Bewilligung Pflegesachleistung</pre>
      */
    public static final String RULES_7S_BEWILLIGUNG_PFLEGESACHLEISTUNG = "Rules.7s.bewilligung.pflegesachleistung";

    /** <pre>RULES_9_UNBEKANNT
      * [en] 9 - unbekannt
      * [de] 9 - unbekannt</pre>
      */
    public static final String RULES_9_UNBEKANNT = "Rules.9.unbekannt";

    /** <pre>RULES_ALTERINJAHREN
      * [en] AlterInJahren
      * [de] AlterInJahren</pre>
      */
    public static final String RULES_ALTERINJAHREN = "Rules.alterinjahren";

    /** <pre>RULES_ALTERINTAGEN
      * [en] AlterInTagen
      * [de] AlterInTagen</pre>
      */
    public static final String RULES_ALTERINTAGEN = "Rules.alterintagen";

    /** <pre>RULES_ANZAHLABTEILUNGEN
      * [en] AnzahlAbteilungen
      * [de] AnzahlAbteilungen</pre>
      */
    public static final String RULES_ANZAHLABTEILUNGEN = "Rules.anzahlabteilungen";

    /** <pre>RULES_ANZAHLNEBENDIAGNOSEN
      * [en] AnzahlNebendiagnosen
      * [de] AnzahlNebendiagnosen</pre>
      */
    public static final String RULES_ANZAHLNEBENDIAGNOSEN = "Rules.anzahlnebendiagnosen";

    /** <pre>RULES_ANZAHLPROZEDUREN
      * [en] AnzahlProzeduren
      * [de] AnzahlProzeduren</pre>
      */
    public static final String RULES_ANZAHLPROZEDUREN = "Rules.anzahlprozeduren";

    /** <pre>RULES_ATCCODE
      * [en] ATCCode
      * [de] ATCCode</pre>
      */
    public static final String RULES_ATCCODE = "Rules.atccode";

    /** <pre>RULES_AUFENTHALTKLEINER_24H
      * [en] AufenthaltKleiner24h
      * [de] AufenthaltKleiner24h</pre>
      */
    public static final String RULES_AUFENTHALTKLEINER_24H = "Rules.aufenthaltkleiner24h";

    /** <pre>RULES_AUFNAHMEDIAGNOSETYPE
      * [en] AufnahmediagnoseType
      * [de] AufnahmediagnoseType</pre>
      */
    public static final String RULES_AUFNAHMEDIAGNOSETYPE = "Rules.aufnahmediagnosetype";

    /** <pre>RULES_AUFNEHMENDEFACHABTEILUNG
      * [en] AufnehmendeFachabteilung
      * [de] AufnehmendeFachabteilung</pre>
      */
    public static final String RULES_AUFNEHMENDEFACHABTEILUNG = "Rules.aufnehmendefachabteilung";

    /** <pre>RULES_BEHANDELNDEFACHABTEILUNG
      * [en] BehandelndeFachabteilung
      * [de] BehandelndeFachabteilung</pre>
      */
    public static final String RULES_BEHANDELNDEFACHABTEILUNG = "Rules.behandelndefachabteilung";

    /** <pre>RULES_CASE_CASE_DAYS
      * [en] Pflegetage
      * [de] Pflegetage</pre>
      * Attention! this value ('Pflegetage') seems to be also defined under the key RULES_PFLEGETAGE!
      */
    public static final String RULES_CASE_CASE_DAYS = "Rules.case.case.days";

    /** <pre>RULES_CASE_DATES
      * [en] Falldaten
      * [de] Falldaten</pre>
      */
    public static final String RULES_CASE_DATES = "Rules.case.dates";

    /** <pre>RULES_CASE_DISCHARGE_DATE
      * [en] Entlassungsdatum
      * [de] Entlassungsdatum</pre>
      */
    public static final String RULES_CASE_DISCHARGE_DATE = "Rules.case.discharge.date";

    /** <pre>RULES_CASE_SPEC
      * [en] Abteilung
      * [de] Abteilung</pre>
      */
    public static final String RULES_CASE_SPEC = "Rules.case.spec";

    /** <pre>RULES_CHECKRESULT_TYP_OPS
      * [en] OPS
      * [de] OPS</pre>
      * Attention! this value ('OPS') seems to be also defined under the key CASE_RESOLVE_OPS!
      */
    public static final String RULES_CHECKRESULT_TYP_OPS = "Rules.checkresult.typ.ops";

    /** <pre>RULES_COL_ADRG
      * [en] ADRG
      * [de] ADRG</pre>
      */
    public static final String RULES_COL_ADRG = "Rules.col.adrg";

    /** <pre>RULES_COL_CASENR
      * [en] Fallnummer
      * [de] Fallnummer</pre>
      */
    public static final String RULES_COL_CASENR = "Rules.col.casenr";

    /** <pre>RULES_COL_OPDATUM
      * [en] Datum
      * [de] Datum</pre>
      */
    public static final String RULES_COL_OPDATUM = "Rules.col.opdatum";

    /** <pre>RULES_CRIT_ACG_ADG_CODES
      * [en] acg_ADG_Code
      * [de] acg_ADG_Code</pre>
      */
    public static final String RULES_CRIT_ACG_ADG_CODES = "Rules.crit.acg.adg.codes";

    /** <pre>RULES_CRIT_ACG_ADG_CODES_DIS
      * [en] ACG: ADG-Code
      * [de] ACG: ADG-Code</pre>
      */
    public static final String RULES_CRIT_ACG_ADG_CODES_DIS = "Rules.crit.acg.adg.codes.dis";

    /** <pre>RULES_CRIT_ACG_ADG_CODES_TOOLTIP
      * [en] 32 nicht exkluxive Gruppen. Eine ADG ist eine Morbiditätsgruppe, die Schwere und Dauer des Zustandes des Patienten beschreibt. Aggregierte diagnostischen Gruppen. Die Bausteine des ACG-Systems. Jeder ADG-Code ist eine Gruppierung von Diagnose-Codes, die ähnlich im Hinblick auf die Schwere und Wahrscheinlichkeit der Persistenz der Gesundheitszustand im Laufe der Zeit sind.
      * [de] 32 nicht exkluxive Gruppen. Eine ADG ist eine Morbiditätsgruppe, die Schwere und Dauer des Zustandes des Patienten beschreibt. Aggregierte diagnostischen Gruppen. Die Bausteine des ACG-Systems. Jeder ADG-Code ist eine Gruppierung von Diagnose-Codes, die ähnlich im Hinblick auf die Schwere und Wahrscheinlichkeit der Persistenz der Gesundheitszustand im Laufe der Zeit sind.</pre>
      */
    public static final String RULES_CRIT_ACG_ADG_CODES_TOOLTIP = "Rules.crit.acg.adg.codes.tooltip";

    /** <pre>RULES_CRIT_ACG_ADG_CODES_TOOLTIP_1
      * [en] Format: Alphanumerisch (Beispiel 29)
      * [de] Format: Alphanumerisch (Beispiel 29)</pre>
      */
    public static final String RULES_CRIT_ACG_ADG_CODES_TOOLTIP_1 = "Rules.crit.acg.adg.codes.tooltip.1";

    /** <pre>RULES_CRIT_ACG_ADG_VECTOR
      * [en] acg_ADG_Vektor
      * [de] acg_ADG_Vektor</pre>
      */
    public static final String RULES_CRIT_ACG_ADG_VECTOR = "Rules.crit.acg.adg.vector";

    /** <pre>RULES_CRIT_ACG_ADG_VECTOR_DIS
      * [en] ACG: ADG-Vektor
      * [de] ACG: ADG-Vektor</pre>
      */
    public static final String RULES_CRIT_ACG_ADG_VECTOR_DIS = "Rules.crit.acg.adg.vector.dis";

    /** <pre>RULES_CRIT_ACG_ADG_VECTOR_TOOLTIP
      * [en] Ein Vektor von Nullen und Einsen, um anzuzeigen, welchem ADG-Code dieser Patienten zuzuornden ist. Eine "1" in der fünften Position zeigt, dass der Patient ADG 5 zugewiesen wurde. Hinweis: ADG15 und ASG19 sind nicht mehr in Gebrauch und somit sollte immer Null sein.
      * [de] Ein Vektor von Nullen und Einsen, um anzuzeigen, welchem ADG-Code dieser Patienten zuzuornden ist. Eine "1" in der fünften Position zeigt, dass der Patient ADG 5 zugewiesen wurde. Hinweis: ADG15 und ASG19 sind nicht mehr in Gebrauch und somit sollte immer Null sein.</pre>
      */
    public static final String RULES_CRIT_ACG_ADG_VECTOR_TOOLTIP = "Rules.crit.acg.adg.vector.tooltip";

    /** <pre>RULES_CRIT_ACG_ADG_VECTOR_TOOLTIP_1
      * [en] Format: Alphanumerisch (Beispiel ADG0000000000100000000000001000000000)
      * [de] Format: Alphanumerisch (Beispiel ADG0000000000100000000000001000000000)</pre>
      */
    public static final String RULES_CRIT_ACG_ADG_VECTOR_TOOLTIP_1 = "Rules.crit.acg.adg.vector.tooltip.1";

    /** <pre>RULES_CRIT_ACG_AGE
      * [en] acg_alter
      * [de] acg_alter</pre>
      */
    public static final String RULES_CRIT_ACG_AGE = "Rules.crit.acg.age";

    /** <pre>RULES_CRIT_ACG_AGE_BAND
      * [en] acg_altersgruppe
      * [de] acg_altersgruppe</pre>
      */
    public static final String RULES_CRIT_ACG_AGE_BAND = "Rules.crit.acg.age.band";

    /** <pre>RULES_CRIT_ACG_AGE_BAND_DIS
      * [en] ACG: Altersgruppe
      * [de] ACG: Altersgruppe</pre>
      */
    public static final String RULES_CRIT_ACG_AGE_BAND_DIS = "Rules.crit.acg.age.band.dis";

    /** <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_10
      * [en] 70-74
      * [de] 70-74</pre>
      * Attention! this value ('70-74') seems to be also defined under the key ACG_AGE_BAND_70_74!
      */
    public static final String RULES_CRIT_ACG_AGE_BAND_TOOLTIP_10 = "Rules.crit.acg.age.band.tooltip.10";

    /** <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_11
      * [en] 75-79
      * [de] 75-79</pre>
      * Attention! this value ('75-79') seems to be also defined under the key ACG_AGE_BAND_75_79!
      */
    public static final String RULES_CRIT_ACG_AGE_BAND_TOOLTIP_11 = "Rules.crit.acg.age.band.tooltip.11";

    /** <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_12
      * [en] 80-84
      * [de] 80-84</pre>
      * Attention! this value ('80-84') seems to be also defined under the key ACG_AGE_BAND_80_84!
      */
    public static final String RULES_CRIT_ACG_AGE_BAND_TOOLTIP_12 = "Rules.crit.acg.age.band.tooltip.12";

    /** <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_13
      * [en] 85+
      * [de] 85+</pre>
      * Attention! this value ('85+') seems to be also defined under the key ACG_AGE_BAND_85_P!
      */
    public static final String RULES_CRIT_ACG_AGE_BAND_TOOLTIP_13 = "Rules.crit.acg.age.band.tooltip.13";

    /** <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_2
      * [en] &amp;lt;0
      * [de] &amp;lt;0</pre>
      */
    public static final String RULES_CRIT_ACG_AGE_BAND_TOOLTIP_2 = "Rules.crit.acg.age.band.tooltip.2";

    /** <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_3
      * [en] 00-04
      * [de] 00-04</pre>
      * Attention! this value ('00-04') seems to be also defined under the key ACG_AGE_BAND_00_04!
      */
    public static final String RULES_CRIT_ACG_AGE_BAND_TOOLTIP_3 = "Rules.crit.acg.age.band.tooltip.3";

    /** <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_4
      * [en] 05-11
      * [de] 05-11</pre>
      * Attention! this value ('05-11') seems to be also defined under the key ACG_AGE_BAND_05_11!
      */
    public static final String RULES_CRIT_ACG_AGE_BAND_TOOLTIP_4 = "Rules.crit.acg.age.band.tooltip.4";

    /** <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_5
      * [en] 12-17
      * [de] 12-17</pre>
      * Attention! this value ('12-17') seems to be also defined under the key ACG_AGE_BAND_12_17!
      */
    public static final String RULES_CRIT_ACG_AGE_BAND_TOOLTIP_5 = "Rules.crit.acg.age.band.tooltip.5";

    /** <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_6
      * [en] 18-34
      * [de] 18-34</pre>
      * Attention! this value ('18-34') seems to be also defined under the key ACG_AGE_BAND_18_34!
      */
    public static final String RULES_CRIT_ACG_AGE_BAND_TOOLTIP_6 = "Rules.crit.acg.age.band.tooltip.6";

    /** <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_7
      * [en] 35-44
      * [de] 35-44</pre>
      * Attention! this value ('35-44') seems to be also defined under the key ACG_AGE_BAND_35_44!
      */
    public static final String RULES_CRIT_ACG_AGE_BAND_TOOLTIP_7 = "Rules.crit.acg.age.band.tooltip.7";

    /** <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_8
      * [en] 45-54
      * [de] 45-54</pre>
      * Attention! this value ('45-54') seems to be also defined under the key ACG_AGE_BAND_45_54!
      */
    public static final String RULES_CRIT_ACG_AGE_BAND_TOOLTIP_8 = "Rules.crit.acg.age.band.tooltip.8";

    /** <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_9
      * [en] 55-69
      * [de] 55-69</pre>
      */
    public static final String RULES_CRIT_ACG_AGE_BAND_TOOLTIP_9 = "Rules.crit.acg.age.band.tooltip.9";

    /** <pre>RULES_CRIT_ACG_AGE_DIS
      * [en] ACG: Alter
      * [de] ACG: Alter</pre>
      */
    public static final String RULES_CRIT_ACG_AGE_DIS = "Rules.crit.acg.age.dis";

    /** <pre>RULES_CRIT_ACG_AGE_TOOLTIP
      * [en] Alter aus den ACG Daten
      * [de] Alter aus den ACG Daten</pre>
      */
    public static final String RULES_CRIT_ACG_AGE_TOOLTIP = "Rules.crit.acg.age.tooltip";

    /** <pre>RULES_CRIT_ACG_AGE_TOOLTIP_1
      * [en] Format: ganze Zahl (Beispiel 25)
      * [de] Format: ganze Zahl (Beispiel 25)</pre>
      */
    public static final String RULES_CRIT_ACG_AGE_TOOLTIP_1 = "Rules.crit.acg.age.tooltip.1";

    /** <pre>RULES_CRIT_ACG_ARTHRITIS_CONDITION
      * [en] acg_Arthritis_vorhanden
      * [de] acg_Arthritis_vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_ARTHRITIS_CONDITION = "Rules.crit.acg.arthritis.condition";

    /** <pre>RULES_CRIT_ACG_ARTHRITIS_CONDITION_DIS
      * [en] ACG: Arthritis vorhanden
      * [de] ACG: Arthritis vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_ARTHRITIS_CONDITION_DIS = "Rules.crit.acg.arthritis.condition.dis";

    /** <pre>RULES_CRIT_ACG_ASTHMA_CONDITION
      * [en] acg_Asthma_vorhanden
      * [de] acg_Asthma_vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_ASTHMA_CONDITION = "Rules.crit.acg.asthma.condition";

    /** <pre>RULES_CRIT_ACG_ASTHMA_CONDITION_DIS
      * [en] ACG: Asthma vorhanden
      * [de] ACG: Asthma vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_ASTHMA_CONDITION_DIS = "Rules.crit.acg.asthma.condition.dis";

    /** <pre>RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT
      * [en] acg_Anzahl_chronischer_Erkrankungen
      * [de] acg_Anzahl_chronischer_Erkrankungen</pre>
      */
    public static final String RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT = "Rules.crit.acg.chronic.condition.count";

    /** <pre>RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT_DIS
      * [en] ACG: Anzahl chronischer Erkrankungen
      * [de] ACG: Anzahl chronischer Erkrankungen</pre>
      */
    public static final String RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT_DIS = "Rules.crit.acg.chronic.condition.count.dis";

    /** <pre>RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT_TOOLTIP
      * [en] Anzahl chronischer Erkrankungen (Basis EDC-Gruppe): Ein Zählimpuls von ADGs die Triggerdiagnoses enthalten, die einen chronischen Zustand mit bedeutenden erwarteten Dauer- und Resoruceanforderungen anzeigen.
      * [de] Anzahl chronischer Erkrankungen (Basis EDC-Gruppe): Ein Zählimpuls von ADGs die Triggerdiagnoses enthalten, die einen chronischen Zustand mit bedeutenden erwarteten Dauer- und Resoruceanforderungen anzeigen.</pre>
      */
    public static final String RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT_TOOLTIP = "Rules.crit.acg.chronic.condition.count.tooltip";

    /** <pre>RULES_CRIT_ACG_CODE
      * [en] acg_Code
      * [de] acg_Code</pre>
      */
    public static final String RULES_CRIT_ACG_CODE = "Rules.crit.acg.code";

    /** <pre>RULES_CRIT_ACG_CODE_DIS
      * [en] ACG: ACG-Code
      * [de] ACG: ACG-Code</pre>
      */
    public static final String RULES_CRIT_ACG_CODE_DIS = "Rules.crit.acg.code.dis";

    /** <pre>RULES_CRIT_ACG_CODE_TOOLTIP
      * [en] Ermittelter ACG-Code für diesen Patienten. Der ACG-Code wird für jeden einzelnen Patienten zugewiesen. ACGs weisen Personen eindeutige, gegenseitig exklusive Morbiditätskategorien zu, basierend auf einem Erkrankungsmodell und auf dem erwarteten Ressourcenbedarf.
      * [de] Ermittelter ACG-Code für diesen Patienten. Der ACG-Code wird für jeden einzelnen Patienten zugewiesen. ACGs weisen Personen eindeutige, gegenseitig exklusive Morbiditätskategorien zu, basierend auf einem Erkrankungsmodell und auf dem erwarteten Ressourcenbedarf.</pre>
      */
    public static final String RULES_CRIT_ACG_CODE_TOOLTIP = "Rules.crit.acg.code.tooltip";

    /** <pre>RULES_CRIT_ACG_CODE_TOOLTIP_1
      * [en] Format: Alphanumerisch Beispiel(4100)
      * [de] Format: Alphanumerisch Beispiel(4100)</pre>
      */
    public static final String RULES_CRIT_ACG_CODE_TOOLTIP_1 = "Rules.crit.acg.code.tooltip.1";

    /** <pre>RULES_CRIT_ACG_CONDITION_TOOLTIP_2
      * [en] NP - Zustand nicht vorhanden
      * [de] NP - Zustand nicht vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_CONDITION_TOOLTIP_2 = "Rules.crit.acg.condition.tooltip.2";

    /** <pre>RULES_CRIT_ACG_CONDITION_TOOLTIP_3
      * [en] BTH - Erkrankung identifiziert durch ICD-und ATC-Codes
      * [de] BTH - Erkrankung identifiziert durch ICD-und ATC-Codes</pre>
      */
    public static final String RULES_CRIT_ACG_CONDITION_TOOLTIP_3 = "Rules.crit.acg.condition.tooltip.3";

    /** <pre>RULES_CRIT_ACG_CONDITION_TOOLTIP_5
      * [en] RX - Erkrankung identifiziert durch ATC-Codes
      * [de] RX - Erkrankung identifiziert durch ATC-Codes</pre>
      */
    public static final String RULES_CRIT_ACG_CONDITION_TOOLTIP_5 = "Rules.crit.acg.condition.tooltip.5";

    /** <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_10
      * [en] 9 - 98-99 Perzentile
      * [de] 9 - 98-99 Perzentile</pre>
      */
    public static final String RULES_CRIT_ACG_COST_BAND_TOOLTIP_10 = "Rules.crit.acg.cost.band.tooltip.10";

    /** <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_2
      * [en] 1 - 1-1 Perzentile
      * [de] 1 - 1-1 Perzentile</pre>
      */
    public static final String RULES_CRIT_ACG_COST_BAND_TOOLTIP_2 = "Rules.crit.acg.cost.band.tooltip.2";

    /** <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_3
      * [en] 2 - 11-25 Perzentile
      * [de] 2 - 11-25 Perzentile</pre>
      */
    public static final String RULES_CRIT_ACG_COST_BAND_TOOLTIP_3 = "Rules.crit.acg.cost.band.tooltip.3";

    /** <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_4
      * [en] 3 - 26-50 Perzentile
      * [de] 3 - 26-50 Perzentile</pre>
      */
    public static final String RULES_CRIT_ACG_COST_BAND_TOOLTIP_4 = "Rules.crit.acg.cost.band.tooltip.4";

    /** <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_5
      * [en] 4 - 51-75 Perzentile
      * [de] 4 - 51-75 Perzentile</pre>
      */
    public static final String RULES_CRIT_ACG_COST_BAND_TOOLTIP_5 = "Rules.crit.acg.cost.band.tooltip.5";

    /** <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_6
      * [en] 5 - 76-90 Perzentile
      * [de] 5 - 76-90 Perzentile</pre>
      */
    public static final String RULES_CRIT_ACG_COST_BAND_TOOLTIP_6 = "Rules.crit.acg.cost.band.tooltip.6";

    /** <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_7
      * [en] 6 - 91-93 Perzentile
      * [de] 6 - 91-93 Perzentile</pre>
      */
    public static final String RULES_CRIT_ACG_COST_BAND_TOOLTIP_7 = "Rules.crit.acg.cost.band.tooltip.7";

    /** <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_8
      * [en] 7 - 94-95 Perzentile
      * [de] 7 - 94-95 Perzentile</pre>
      */
    public static final String RULES_CRIT_ACG_COST_BAND_TOOLTIP_8 = "Rules.crit.acg.cost.band.tooltip.8";

    /** <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_9
      * [en] 8 - 96-97 Perzentile
      * [de] 8 - 96-97 Perzentile</pre>
      */
    public static final String RULES_CRIT_ACG_COST_BAND_TOOLTIP_9 = "Rules.crit.acg.cost.band.tooltip.9";

    /** <pre>RULES_CRIT_ACG_COST_TOOLTIP_1
      * [en] Format: Fließkommazahl Beispiel(125000,00)
      * [de] Format: Fließkommazahl Beispiel(125000,00)</pre>
      */
    public static final String RULES_CRIT_ACG_COST_TOOLTIP_1 = "Rules.crit.acg.cost.tooltip.1";

    /** <pre>RULES_CRIT_ACG_CRI_TOOLTIP_1
      * [en] Format: Fließkommazahl (Beispiel 0,639023466)
      * [de] Format: Fließkommazahl (Beispiel 0,639023466)</pre>
      */
    public static final String RULES_CRIT_ACG_CRI_TOOLTIP_1 = "Rules.crit.acg.cri.tooltip.1";

    /** <pre>RULES_CRIT_ACG_DEPRESSION
      * [en] acg_Depression_vorhanden
      * [de] acg_Depression_vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_DEPRESSION = "Rules.crit.acg.depression";

    /** <pre>RULES_CRIT_ACG_DEPRESSION_DIS
      * [en] ACG: Depression vorhanden
      * [de] ACG: Depression vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_DEPRESSION_DIS = "Rules.crit.acg.depression.dis";

    /** <pre>RULES_CRIT_ACG_DIABETES
      * [en] acg_Diabetes_vorhanden
      * [de] acg_Diabetes_vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_DIABETES = "Rules.crit.acg.diabetes";

    /** <pre>RULES_CRIT_ACG_DIABETES_DIS
      * [en] ACG: Diabetes vorhanden
      * [de] ACG: Diabetes vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_DIABETES_DIS = "Rules.crit.acg.diabetes.dis";

    /** <pre>RULES_CRIT_ACG_EDC
      * [en] acg_EDC_Code
      * [de] acg_EDC_Code</pre>
      */
    public static final String RULES_CRIT_ACG_EDC = "Rules.crit.acg.edc";

    /** <pre>RULES_CRIT_ACG_EDC_DIS
      * [en] ACG: EDC-Code
      * [de] ACG: EDC-Code</pre>
      */
    public static final String RULES_CRIT_ACG_EDC_DIS = "Rules.crit.acg.edc.dis";

    /** <pre>RULES_CRIT_ACG_EDC_TOOLTIP
      * [en] Zugeordnete EDC-Code (Expanded Diagnosis Cluster): EDC gruppieren verschiedene Krankheiten und Zustände ausschließlich auf der Basis von ICD-10-Codes und stellen einen klinischen Zusammenhang zum Case-Mix her. Alle ermittelten EDC-Codes für diesen Patienten. Die EDC Taxonomie identifiziert Patienten mit bestimmten Krankheiten oder Symptomen
      * [de] Zugeordnete EDC-Code (Expanded Diagnosis Cluster): EDC gruppieren verschiedene Krankheiten und Zustände ausschließlich auf der Basis von ICD-10-Codes und stellen einen klinischen Zusammenhang zum Case-Mix her. Alle ermittelten EDC-Codes für diesen Patienten. Die EDC Taxonomie identifiziert Patienten mit bestimmten Krankheiten oder Symptomen</pre>
      */
    public static final String RULES_CRIT_ACG_EDC_TOOLTIP = "Rules.crit.acg.edc.tooltip";

    /** <pre>RULES_CRIT_ACG_EDC_TOOLTIP_1
      * [en] Format: Alphanumerisch (Beispiel MUS06)
      * [de] Format: Alphanumerisch (Beispiel MUS06)</pre>
      */
    public static final String RULES_CRIT_ACG_EDC_TOOLTIP_1 = "Rules.crit.acg.edc.tooltip.1";

    /** <pre>RULES_CRIT_ACG_FRAILTY_FLAG
      * [en] acg_Gebrechlichkeits-Indikator
      * [de] acg_Gebrechlichkeits-Indikator</pre>
      */
    public static final String RULES_CRIT_ACG_FRAILTY_FLAG = "Rules.crit.acg.frailty.flag";

    /** <pre>RULES_CRIT_ACG_FRAILTY_FLAG_DIS
      * [en] ACG: Gebrechlichkeits-Indikator
      * [de] ACG: Gebrechlichkeits-Indikator</pre>
      */
    public static final String RULES_CRIT_ACG_FRAILTY_FLAG_DIS = "Rules.crit.acg.frailty.flag.dis";

    /** <pre>RULES_CRIT_ACG_FRAILTY_FLAG_TOOLTIP
      * [en] Kennzeichen für jedes der 11 Cluster, die für diagnostische diskreten Bedingungen im Einklang mit Gebrechlichkeit stehen (z.B . Mangelernährung, Demenz, Inkontinenz, Schwierigkeiten beim Gehen)
      * [de] Kennzeichen für jedes der 11 Cluster, die für diagnostische diskreten Bedingungen im Einklang mit Gebrechlichkeit stehen (z.B . Mangelernährung, Demenz, Inkontinenz, Schwierigkeiten beim Gehen)</pre>
      */
    public static final String RULES_CRIT_ACG_FRAILTY_FLAG_TOOLTIP = "Rules.crit.acg.frailty.flag.tooltip";

    /** <pre>RULES_CRIT_ACG_FRAILTY_FLAG_TOOLTIP_1
      * [en] Format: Alphanumerisch (Beispiel N)
      * [de] Format: Alphanumerisch (Beispiel N)</pre>
      */
    public static final String RULES_CRIT_ACG_FRAILTY_FLAG_TOOLTIP_1 = "Rules.crit.acg.frailty.flag.tooltip.1";

    /** <pre>RULES_CRIT_ACG_HEART_FC_CONDITION
      * [en] acg_Herzinsuffizienz_vorhanden
      * [de] acg_Herzinsuffizienz_vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_HEART_FC_CONDITION = "Rules.crit.acg.heart.fc.condition";

    /** <pre>RULES_CRIT_ACG_HEART_FC_CONDITION_DIS
      * [en] ACG: Herzinsuffizienz vorhanden
      * [de] ACG: Herzinsuffizienz vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_HEART_FC_CONDITION_DIS = "Rules.crit.acg.heart.fc.condition.dis";

    /** <pre>RULES_CRIT_ACG_HOS_DOMINANT_COUNT
      * [en] acg_ADGAnzahlTop
      * [de] acg_ADGAnzahlTop</pre>
      */
    public static final String RULES_CRIT_ACG_HOS_DOMINANT_COUNT = "Rules.crit.acg.hos.dominant.count";

    /** <pre>RULES_CRIT_ACG_HOS_DOMINANT_COUNT_DIS
      * [en] ACG: Anzahl ADGs mit hoher KRH-Wahrscheinlichkeit
      * [de] ACG: Anzahl ADGs mit hoher KRH-Wahrscheinlichkeit</pre>
      */
    public static final String RULES_CRIT_ACG_HOS_DOMINANT_COUNT_DIS = "Rules.crit.acg.hos.dominant.count.dis";

    /** <pre>RULES_CRIT_ACG_HOS_DOMINANT_COUNT_TOOLTIP
      * [en] Anzahl ADGs mit hoher (&amp;gt;50%) Wahrscheinlichkeit einer künftigen Krankenhausaufnahme.
      * [de] Anzahl ADGs mit hoher (&amp;gt;50%) Wahrscheinlichkeit einer künftigen Krankenhausaufnahme.</pre>
      */
    public static final String RULES_CRIT_ACG_HOS_DOMINANT_COUNT_TOOLTIP = "Rules.crit.acg.hos.dominant.count.tooltip";

    /** <pre>RULES_CRIT_ACG_HYPERLIPIDEMIA
      * [en] acg_Fettstoffwechselstörungen_vorhanden
      * [de] acg_Fettstoffwechselstörungen_vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_HYPERLIPIDEMIA = "Rules.crit.acg.hyperlipidemia";

    /** <pre>RULES_CRIT_ACG_HYPERLIPIDEMIA_DIS
      * [en] ACG: Fettstoffwechselstörungen vorhanden
      * [de] ACG: Fettstoffwechselstörungen vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_HYPERLIPIDEMIA_DIS = "Rules.crit.acg.hyperlipidemia.dis";

    /** <pre>RULES_CRIT_ACG_HYPERTENSION
      * [en] acg_Bluthochdruck_vorhanden
      * [de] acg_Bluthochdruck_vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_HYPERTENSION = "Rules.crit.acg.hypertension";

    /** <pre>RULES_CRIT_ACG_HYPERTENSION_DIS
      * [en] ACG: Bluthochdruck vorhanden
      * [de] ACG: Bluthochdruck vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_HYPERTENSION_DIS = "Rules.crit.acg.hypertension.dis";

    /** <pre>RULES_CRIT_ACG_ISCHEMIC_HEART_DC
      * [en] acg_koronare_Herzkrankheit_vorhanden
      * [de] acg_koronare_Herzkrankheit_vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_ISCHEMIC_HEART_DC = "Rules.crit.acg.ischemic.heart.dc";

    /** <pre>RULES_CRIT_ACG_ISCHEMIC_HEART_DC_DIS
      * [en] ACG: Koronare Herzkrankheit vorhanden
      * [de] ACG: Koronare Herzkrankheit vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_ISCHEMIC_HEART_DC_DIS = "Rules.crit.acg.ischemic.heart.dc.dis";

    /** <pre>RULES_CRIT_ACG_LOW_BACK_PAIN
      * [en] acg_Rückenbeschwerden_vorhanden
      * [de] acg_Rückenbeschwerden_vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_LOW_BACK_PAIN = "Rules.crit.acg.low.back.pain";

    /** <pre>RULES_CRIT_ACG_LOW_BACK_PAIN_DIS
      * [en] ACG: Rückenbeschwerden vorhanden
      * [de] ACG: Rückenbeschwerden vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_LOW_BACK_PAIN_DIS = "Rules.crit.acg.low.back.pain.dis";

    /** <pre>RULES_CRIT_ACG_MAJOR_ADG_COUNT
      * [en] acg_HauptADGsAnzahl
      * [de] acg_HauptADGsAnzahl</pre>
      */
    public static final String RULES_CRIT_ACG_MAJOR_ADG_COUNT = "Rules.crit.acg.major.adg.count";

    /** <pre>RULES_CRIT_ACG_MAJOR_ADG_COUNT_DIS
      * [en] ACG: Anzahl Haupt ADGs
      * [de] ACG: Anzahl Haupt ADGs</pre>
      */
    public static final String RULES_CRIT_ACG_MAJOR_ADG_COUNT_DIS = "Rules.crit.acg.major.adg.count.dis";

    /** <pre>RULES_CRIT_ACG_MAJOR_ADG_COUNT_TOOLTIP
      * [en] Anzahl der Haupt-ADGs,  welche diesem Patienten zugeordnet sind. Ein Haupt-ADG ist ein ADG  mit erheblichen Auswirkungen auf den gleichzeitigen oder zukünftigen Ressourcenverbrauch. Es gibt separate Haupt-ADGs für Kinder und Erwachsene
      * [de] Anzahl der Haupt-ADGs,  welche diesem Patienten zugeordnet sind. Ein Haupt-ADG ist ein ADG  mit erheblichen Auswirkungen auf den gleichzeitigen oder zukünftigen Ressourcenverbrauch. Es gibt separate Haupt-ADGs für Kinder und Erwachsene</pre>
      */
    public static final String RULES_CRIT_ACG_MAJOR_ADG_COUNT_TOOLTIP = "Rules.crit.acg.major.adg.count.tooltip";

    /** <pre>RULES_CRIT_ACG_MAJOR_RXMG
      * [en] acg_HRxMG_Codes
      * [de] acg_HRxMG_Codes</pre>
      */
    public static final String RULES_CRIT_ACG_MAJOR_RXMG = "Rules.crit.acg.major.rxmg";

    /** <pre>RULES_CRIT_ACG_MAJOR_RXMG_DIS_1
      * [en] ACG: MEDCs auf Basis der Medikamente
      * [de] ACG: MEDCs auf Basis der Medikamente</pre>
      */
    public static final String RULES_CRIT_ACG_MAJOR_RXMG_DIS_1 = "Rules.crit.acg.major.rxmg.dis.1";

    /** <pre>RULES_CRIT_ACG_MAJOR_RXMG_TOOLTIP
      * [en] Hauptgruppen Morbiditäts Codes, Medikamten-Basis: Basis-Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten.
      * [de] Hauptgruppen Morbiditäts Codes, Medikamten-Basis: Basis-Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten.</pre>
      */
    public static final String RULES_CRIT_ACG_MAJOR_RXMG_TOOLTIP = "Rules.crit.acg.major.rxmg.tooltip";

    /** <pre>RULES_CRIT_ACG_MAJOR_RXMG_TOOLTIP_1
      * [en] Format: Alphanumerisch (Beispiel 12)
      * [de] Format: Alphanumerisch (Beispiel 12)</pre>
      */
    public static final String RULES_CRIT_ACG_MAJOR_RXMG_TOOLTIP_1 = "Rules.crit.acg.major.rxmg.tooltip.1";

    /** <pre>RULES_CRIT_ACG_MEDC
      * [en] acg_MEDC_Code
      * [de] acg_MEDC_Code</pre>
      */
    public static final String RULES_CRIT_ACG_MEDC = "Rules.crit.acg.medc";

    /** <pre>RULES_CRIT_ACG_MEDC_DIS
      * [en] ACG: MEDC-Code
      * [de] ACG: MEDC-Code</pre>
      */
    public static final String RULES_CRIT_ACG_MEDC_DIS = "Rules.crit.acg.medc.dis";

    /** <pre>RULES_CRIT_ACG_MEDC_TOOLTIP
      * [en] Haupt-Diagnosen-Cluster erweitert. Alle der MEDC-Codes für diesen Patienten. Die EDC Taxonomie gliedert sich in breite klinische Kategorien, genannt MEDCs.
      * [de] Haupt-Diagnosen-Cluster erweitert. Alle der MEDC-Codes für diesen Patienten. Die EDC Taxonomie gliedert sich in breite klinische Kategorien, genannt MEDCs.</pre>
      */
    public static final String RULES_CRIT_ACG_MEDC_TOOLTIP = "Rules.crit.acg.medc.tooltip";

    /** <pre>RULES_CRIT_ACG_MEDC_TOOLTIP_1
      * [en] Format: Alphanumerisch (Beispiel MUS)
      * [de] Format: Alphanumerisch (Beispiel MUS)</pre>
      */
    public static final String RULES_CRIT_ACG_MEDC_TOOLTIP_1 = "Rules.crit.acg.medc.tooltip.1";

    /** <pre>RULES_CRIT_ACG_OB_PUL_DISEASE_CONDITION
      * [en] acg_chronische_obstruktive_Lungenerkrankung_vorhanden
      * [de] acg_chronische_obstruktive_Lungenerkrankung_vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_OB_PUL_DISEASE_CONDITION = "Rules.crit.acg.ob.pul.disease.condition";

    /** <pre>RULES_CRIT_ACG_OB_PUL_DISEASE_CONDITION_DIS
      * [en] ACG: chronische obstruktive Lungenerkrankung vorhanden
      * [de] ACG: chronische obstruktive Lungenerkrankung vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_OB_PUL_DISEASE_CONDITION_DIS = "Rules.crit.acg.ob.pul.disease.condition.dis";

    /** <pre>RULES_CRIT_ACG_PHARMA_COST
      * [en] acg_Medi_Kosten
      * [de] acg_Medi_Kosten</pre>
      */
    public static final String RULES_CRIT_ACG_PHARMA_COST = "Rules.crit.acg.pharma.cost";

    /** <pre>RULES_CRIT_ACG_PHARMA_COST_BAND
      * [en] acg_Medi_KostGruppe
      * [de] acg_Medi_KostGruppe</pre>
      */
    public static final String RULES_CRIT_ACG_PHARMA_COST_BAND = "Rules.crit.acg.pharma.cost.band";

    /** <pre>RULES_CRIT_ACG_PHARMA_COST_BAND_DIS
      * [en] ACG: Med Kosten Gruppe
      * [de] ACG: Med Kosten Gruppe</pre>
      */
    public static final String RULES_CRIT_ACG_PHARMA_COST_BAND_DIS = "Rules.crit.acg.pharma.cost.band.dis";

    /** <pre>RULES_CRIT_ACG_PHARMA_COST_BAND_TOOLTIP_1_1
      * [en] 0 - 0 Medikamentenkosten
      * [de] 0 - 0 Medikamentenkosten</pre>
      */
    public static final String RULES_CRIT_ACG_PHARMA_COST_BAND_TOOLTIP_1_1 = "Rules.crit.acg.pharma.cost.band.tooltip.1.1";

    /** <pre>RULES_CRIT_ACG_PHARMA_COST_DIS
      * [en] ACG: Kosten für Medikamente
      * [de] ACG: Kosten für Medikamente</pre>
      */
    public static final String RULES_CRIT_ACG_PHARMA_COST_DIS = "Rules.crit.acg.pharma.cost.dis";

    /** <pre>RULES_CRIT_ACG_PHARMA_COST_TOOLTIP
      * [en] Gesamte Medikamentenkosten während des Zeitraums
      * [de] Gesamte Medikamentenkosten während des Zeitraums</pre>
      */
    public static final String RULES_CRIT_ACG_PHARMA_COST_TOOLTIP = "Rules.crit.acg.pharma.cost.tooltip";

    /** <pre>RULES_CRIT_ACG_PREGNANT
      * [en] acg_schwangerschaft
      * [de] acg_schwangerschaft</pre>
      */
    public static final String RULES_CRIT_ACG_PREGNANT = "Rules.crit.acg.pregnant";

    /** <pre>RULES_CRIT_ACG_PREGNANT_DIS
      * [en] ACG: Schwangerschaft
      * [de] ACG: Schwangerschaft</pre>
      */
    public static final String RULES_CRIT_ACG_PREGNANT_DIS = "Rules.crit.acg.pregnant.dis";

    /** <pre>RULES_CRIT_ACG_PREGNANT_TOOLTIP_3
      * [en] 1 - Patientin war schwanger während Beobachtungszeitraum
      * [de] 1 - Patientin war schwanger während Beobachtungszeitraum</pre>
      */
    public static final String RULES_CRIT_ACG_PREGNANT_TOOLTIP_3 = "Rules.crit.acg.pregnant.tooltip.3";

    /** <pre>RULES_CRIT_ACG_PREGNANTTOOLTIP_2
      * [en] 0 - Patientin war nicht schwanger während Beobachtungszeitraum
      * [de] 0 - Patientin war nicht schwanger während Beobachtungszeitraum</pre>
      */
    public static final String RULES_CRIT_ACG_PREGNANTTOOLTIP_2 = "Rules.crit.acg.pregnanttooltip.2";

    /** <pre>RULES_CRIT_ACG_PROBABILITY_HIGH_PC
      * [en] acg_MediTop
      * [de] acg_MediTop</pre>
      */
    public static final String RULES_CRIT_ACG_PROBABILITY_HIGH_PC = "Rules.crit.acg.probability.high.pc";

    /** <pre>RULES_CRIT_ACG_PROBABILITY_HIGH_PC_DIS
      * [en] ACG: Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten
      * [de] ACG: Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten</pre>
      */
    public static final String RULES_CRIT_ACG_PROBABILITY_HIGH_PC_DIS = "Rules.crit.acg.probability.high.pc.dis";

    /** <pre>RULES_CRIT_ACG_PROBABILITY_HIGH_PC_TOOLTIP
      * [en] Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Apothekenkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Arzneimittelkosten  verursacht, im Jahr, welches der Beorbachtungsperiode folgt
      * [de] Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Apothekenkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Arzneimittelkosten  verursacht, im Jahr, welches der Beorbachtungsperiode folgt</pre>
      */
    public static final String RULES_CRIT_ACG_PROBABILITY_HIGH_PC_TOOLTIP = "Rules.crit.acg.probability.high.pc.tooltip";

    /** <pre>RULES_CRIT_ACG_PROBABILITY_HIGH_PC_TOOLTIP_1
      * [en] Format: Fließkommazahl (Beispiel 0,01)
      * [de] Format: Fließkommazahl (Beispiel 0,01)</pre>
      */
    public static final String RULES_CRIT_ACG_PROBABILITY_HIGH_PC_TOOLTIP_1 = "Rules.crit.acg.probability.high.pc.tooltip.1";

    /** <pre>RULES_CRIT_ACG_PROBABILITY_HIGH_TC
      * [en] acg_GesamtTop5
      * [de] acg_GesamtTop5</pre>
      */
    public static final String RULES_CRIT_ACG_PROBABILITY_HIGH_TC = "Rules.crit.acg.probability.high.tc";

    /** <pre>RULES_CRIT_ACG_PROBABILITY_HIGH_TC_DIS
      * [en] ACG: Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten
      * [de] ACG: Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten</pre>
      */
    public static final String RULES_CRIT_ACG_PROBABILITY_HIGH_TC_DIS = "Rules.crit.acg.probability.high.tc.dis";

    /** <pre>RULES_CRIT_ACG_PROBABILITY_HIGH_TC_TOOLTIP
      * [en] Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Gesamtkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Gesamtkosten (einschließlich Apothekenkosten) verursacht, im Jahr, welches der Beobachtungsperiode folgt
      * [de] Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Gesamtkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Gesamtkosten (einschließlich Apothekenkosten) verursacht, im Jahr, welches der Beobachtungsperiode folgt</pre>
      */
    public static final String RULES_CRIT_ACG_PROBABILITY_HIGH_TC_TOOLTIP = "Rules.crit.acg.probability.high.tc.tooltip";

    /** <pre>RULES_CRIT_ACG_RENAL_FC
      * [en] acg_Niereninsuffizienz_vorhanden
      * [de] acg_Niereninsuffizienz_vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_RENAL_FC = "Rules.crit.acg.renal.fc";

    /** <pre>RULES_CRIT_ACG_RENAL_FC_DIS
      * [en] ACG: Niereninsuffizienz vorhanden
      * [de] ACG: Niereninsuffizienz vorhanden</pre>
      */
    public static final String RULES_CRIT_ACG_RENAL_FC_DIS = "Rules.crit.acg.renal.fc.dis";

    /** <pre>RULES_CRIT_ACG_RESCALED_PHARMA_CRI
      * [en] acg_MediKostenIndexGewichtet
      * [de] acg_MediKostenIndexGewichtet</pre>
      */
    public static final String RULES_CRIT_ACG_RESCALED_PHARMA_CRI = "Rules.crit.acg.rescaled.pharma.cri";

    /** <pre>RULES_CRIT_ACG_RESCALED_PHARMA_CRI_DIS
      * [en] ACG: Index Medikamentenkosten, gewichtet
      * [de] ACG: Index Medikamentenkosten, gewichtet</pre>
      */
    public static final String RULES_CRIT_ACG_RESCALED_PHARMA_CRI_DIS = "Rules.crit.acg.rescaled.pharma.cri.dis";

    /** <pre>RULES_CRIT_ACG_RESCALED_PHARMA_CRI_TOOLTIP
      * [en] Kostenindex für zukünftige Medikamentenkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1,0
      * [de] Kostenindex für zukünftige Medikamentenkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1,0</pre>
      */
    public static final String RULES_CRIT_ACG_RESCALED_PHARMA_CRI_TOOLTIP = "Rules.crit.acg.rescaled.pharma.cri.tooltip";

    /** <pre>RULES_CRIT_ACG_RESCALED_TOTAL_CRI
      * [en] acg_GesamtkostenIndexGewichtet
      * [de] acg_GesamtkostenIndexGewichtet</pre>
      */
    public static final String RULES_CRIT_ACG_RESCALED_TOTAL_CRI = "Rules.crit.acg.rescaled.total.cri";

    /** <pre>RULES_CRIT_ACG_RESCALED_TOTAL_CRI_DIS
      * [en] ACG: Index aller Kosten, gewichtet
      * [de] ACG: Index aller Kosten, gewichtet</pre>
      */
    public static final String RULES_CRIT_ACG_RESCALED_TOTAL_CRI_DIS = "Rules.crit.acg.rescaled.total.cri.dis";

    /** <pre>RULES_CRIT_ACG_RESCALED_TOTAL_CRI_TOOLTIP
      * [en] Kostenindex für zukünftige Gesamkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1, Untergruppeanalysen stellen Vergleiche zu den lokalen Normen zur Verfügung
      * [de] Kostenindex für zukünftige Gesamkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1, Untergruppeanalysen stellen Vergleiche zu den lokalen Normen zur Verfügung</pre>
      */
    public static final String RULES_CRIT_ACG_RESCALED_TOTAL_CRI_TOOLTIP = "Rules.crit.acg.rescaled.total.cri.tooltip";

    /** <pre>RULES_CRIT_ACG_RUB
      * [en] acg_RUB
      * [de] acg_RUB</pre>
      */
    public static final String RULES_CRIT_ACG_RUB = "Rules.crit.acg.rub";

    /** <pre>RULES_CRIT_ACG_RUB_DIS
      * [en] ACG: RUB
      * [de] ACG: RUB</pre>
      */
    public static final String RULES_CRIT_ACG_RUB_DIS = "Rules.crit.acg.rub.dis";

    /** <pre>RULES_CRIT_ACG_RUB_TOOLTIP_1
      * [en] 0 - Keine oder nur ungültige Dx
      * [de] 0 - Keine oder nur ungültige Dx</pre>
      */
    public static final String RULES_CRIT_ACG_RUB_TOOLTIP_1 = "Rules.crit.acg.rub.tooltip.1";

    /** <pre>RULES_CRIT_ACG_RUB_TOOLTIP_2
      * [en] 1 - Gesund, kein Verbrauch
      * [de] 1 - Gesund, kein Verbrauch</pre>
      */
    public static final String RULES_CRIT_ACG_RUB_TOOLTIP_2 = "Rules.crit.acg.rub.tooltip.2";

    /** <pre>RULES_CRIT_ACG_RUB_TOOLTIP_3
      * [en] 2 - Geringer Verbrauch
      * [de] 2 - Geringer Verbrauch</pre>
      */
    public static final String RULES_CRIT_ACG_RUB_TOOLTIP_3 = "Rules.crit.acg.rub.tooltip.3";

    /** <pre>RULES_CRIT_ACG_RUB_TOOLTIP_4
      * [en] 3 - Mittlerer Verbrauch
      * [de] 3 - Mittlerer Verbrauch</pre>
      */
    public static final String RULES_CRIT_ACG_RUB_TOOLTIP_4 = "Rules.crit.acg.rub.tooltip.4";

    /** <pre>RULES_CRIT_ACG_RUB_TOOLTIP_5
      * [en] 4 - Erhöhter Verbrauch
      * [de] 4 - Erhöhter Verbrauch</pre>
      */
    public static final String RULES_CRIT_ACG_RUB_TOOLTIP_5 = "Rules.crit.acg.rub.tooltip.5";

    /** <pre>RULES_CRIT_ACG_RUB_TOOLTIP_6
      * [en] 5 - Sehr hoher Verbrauch
      * [de] 5 - Sehr hoher Verbrauch</pre>
      */
    public static final String RULES_CRIT_ACG_RUB_TOOLTIP_6 = "Rules.crit.acg.rub.tooltip.6";

    /** <pre>RULES_CRIT_ACG_RXMG
      * [en] acg_RxMG_Code
      * [de] acg_RxMG_Code</pre>
      */
    public static final String RULES_CRIT_ACG_RXMG = "Rules.crit.acg.rxmg";

    /** <pre>RULES_CRIT_ACG_RXMG_DIS_1
      * [en] ACG: EDCs auf Basis der Medikamente
      * [de] ACG: EDCs auf Basis der Medikamente</pre>
      */
    public static final String RULES_CRIT_ACG_RXMG_DIS_1 = "Rules.crit.acg.rxmg.dis.1";

    /** <pre>RULES_CRIT_ACG_RXMG_TOOLTIP
      * [en] Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten
      * [de] Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten</pre>
      */
    public static final String RULES_CRIT_ACG_RXMG_TOOLTIP = "Rules.crit.acg.rxmg.tooltip";

    /** <pre>RULES_CRIT_ACG_SEX
      * [en] acg_geschlecht
      * [de] acg_geschlecht</pre>
      */
    public static final String RULES_CRIT_ACG_SEX = "Rules.crit.acg.sex";

    /** <pre>RULES_CRIT_ACG_SEX_DIS
      * [en] ACG: Geschlecht
      * [de] ACG: Geschlecht</pre>
      */
    public static final String RULES_CRIT_ACG_SEX_DIS = "Rules.crit.acg.sex.dis";

    /** <pre>RULES_CRIT_ACG_SEX_TOOLTIP_1
      * [en] Format: ganze Zahl (Beispiel 1)
      * [de] Format: ganze Zahl (Beispiel 1)</pre>
      */
    public static final String RULES_CRIT_ACG_SEX_TOOLTIP_1 = "Rules.crit.acg.sex.tooltip.1";

    /** <pre>RULES_CRIT_ACG_TOTAL_COST
      * [en] acg_Gesamtkosten
      * [de] acg_Gesamtkosten</pre>
      */
    public static final String RULES_CRIT_ACG_TOTAL_COST = "Rules.crit.acg.total.cost";

    /** <pre>RULES_CRIT_ACG_TOTAL_COST_BAND
      * [en] acg_Gesamt_KostGruppe
      * [de] acg_Gesamt_KostGruppe</pre>
      */
    public static final String RULES_CRIT_ACG_TOTAL_COST_BAND = "Rules.crit.acg.total.cost.band";

    /** <pre>RULES_CRIT_ACG_TOTAL_COST_BAND_DIS
      * [en] ACG: Gesamt Kosten Gruppe
      * [de] ACG: Gesamt Kosten Gruppe</pre>
      */
    public static final String RULES_CRIT_ACG_TOTAL_COST_BAND_DIS = "Rules.crit.acg.total.cost.band.dis";

    /** <pre>RULES_CRIT_ACG_TOTAL_COST_BAND_TOOLTIP_1_1
      * [en] 0 - 0 Gesamtkosten
      * [de] 0 - 0 Gesamtkosten</pre>
      */
    public static final String RULES_CRIT_ACG_TOTAL_COST_BAND_TOOLTIP_1_1 = "Rules.crit.acg.total.cost.band.tooltip.1.1";

    /** <pre>RULES_CRIT_ACG_TOTAL_COST_DIS
      * [en] ACG: Gesamtkosten
      * [de] ACG: Gesamtkosten</pre>
      */
    public static final String RULES_CRIT_ACG_TOTAL_COST_DIS = "Rules.crit.acg.total.cost.dis";

    /** <pre>RULES_CRIT_ACG_TOTAL_COST_TOOLTIP
      * [en] Gesamtkosten incl. Medikamentenkosten
      * [de] Gesamtkosten incl. Medikamentenkosten</pre>
      */
    public static final String RULES_CRIT_ACG_TOTAL_COST_TOOLTIP = "Rules.crit.acg.total.cost.tooltip";

    /** <pre>RULES_CRIT_ACG_UNSCALED_PHARMA_CRI
      * [en] acg_MediKostenIndexUngewichtet
      * [de] acg_MediKostenIndexUngewichtet</pre>
      */
    public static final String RULES_CRIT_ACG_UNSCALED_PHARMA_CRI = "Rules.crit.acg.unscaled.pharma.cri";

    /** <pre>RULES_CRIT_ACG_UNSCALED_PHARMA_CRI_DIS
      * [en] ACG: Index Medikamentenkosten, ungewichtet
      * [de] ACG: Index Medikamentenkosten, ungewichtet</pre>
      */
    public static final String RULES_CRIT_ACG_UNSCALED_PHARMA_CRI_DIS = "Rules.crit.acg.unscaled.pharma.cri.dis";

    /** <pre>RULES_CRIT_ACG_UNSCALED_PHARMA_CRI_TOOLTIP
      * [en] Kostenindex für zukünftige Medikamentenkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG vorbestimmtes Modell PRI für ApothekeN-Kosten. Die geschätzten Arzneimittelkosten für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0), wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalysen stellen Vergleiche zu den nationalen Normen zur Verfügung).
      * [de] Kostenindex für zukünftige Medikamentenkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG vorbestimmtes Modell PRI für ApothekeN-Kosten. Die geschätzten Arzneimittelkosten für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0), wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalysen stellen Vergleiche zu den nationalen Normen zur Verfügung).</pre>
      */
    public static final String RULES_CRIT_ACG_UNSCALED_PHARMA_CRI_TOOLTIP = "Rules.crit.acg.unscaled.pharma.cri.tooltip";

    /** <pre>RULES_CRIT_ACG_UNSCALED_TOTAL_CRI
      * [en] acg_GesamtkostenIndexUngewichtet
      * [de] acg_GesamtkostenIndexUngewichtet</pre>
      */
    public static final String RULES_CRIT_ACG_UNSCALED_TOTAL_CRI = "Rules.crit.acg.unscaled.total.cri";

    /** <pre>RULES_CRIT_ACG_UNSCALED_TOTAL_CRI_DIS
      * [en] ACG: Index aller Kosten, ungewichtet
      * [de] ACG: Index aller Kosten, ungewichtet</pre>
      */
    public static final String RULES_CRIT_ACG_UNSCALED_TOTAL_CRI_DIS = "Rules.crit.acg.unscaled.total.cri.dis";

    /** <pre>RULES_CRIT_ACG_UNSCALED_TOTAL_CRI_TOOLTIP
      * [en] Kostenindex für zukünftige Gesamkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG P.M. Index (PRI) für ACG P.M. für Voraussage Gesamtkosten. Die geschätzten Gesamtkosten (einschließlich Apothekenkosten) für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0) wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalyse stellen Vergleiche zu den nationalen Normen zur Verfügung.
      * [de] Kostenindex für zukünftige Gesamkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG P.M. Index (PRI) für ACG P.M. für Voraussage Gesamtkosten. Die geschätzten Gesamtkosten (einschließlich Apothekenkosten) für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0) wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalyse stellen Vergleiche zu den nationalen Normen zur Verfügung.</pre>
      */
    public static final String RULES_CRIT_ACG_UNSCALED_TOTAL_CRI_TOOLTIP = "Rules.crit.acg.unscaled.total.cri.tooltip";

    /** <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_10
      * [en] 08 - Stationäre Aufnahme zur Organentnahme
      * [de] 08 - Stationäre Aufnahme zur Organentnahme</pre>
      */
    public static final String RULES_CRIT_ADM_1_TYPE_TOOLTIP_10 = "Rules.crit.adm1.type.tooltip.10";

    /** <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_11
      * [en] 10 - Stationsäquivalente Behandlung
      * [de] 10 - Stationsäquivalente Behandlung</pre>
      */
    public static final String RULES_CRIT_ADM_1_TYPE_TOOLTIP_11 = "Rules.crit.adm1.type.tooltip.11";

    /** <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_12
      * [de] 11 - Übergangspflege</pre>
      */
    public static final String RULES_CRIT_ADM_1_TYPE_TOOLTIP_12 = "Rules.crit.adm1.type.tooltip.12";

    /** <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_3
      * [en] 01 - Krankenhausbehandlung, vollstationär
      * [de] 01 - Krankenhausbehandlung, vollstationär</pre>
      */
    public static final String RULES_CRIT_ADM_1_TYPE_TOOLTIP_3 = "Rules.crit.adm1.type.tooltip.3";

    /** <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_4
      * [en] 02 - Krankenhausbehandlung, vollstationär mit voraus. vorstat. Behandlung
      * [de] 02 - Krankenhausbehandlung, vollstationär mit voraus. vorstat. Behandlung</pre>
      */
    public static final String RULES_CRIT_ADM_1_TYPE_TOOLTIP_4 = "Rules.crit.adm1.type.tooltip.4";

    /** <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_5
      * [en] 03 - Krankenhausbehandlung teilstationär
      * [de] 03 - Krankenhausbehandlung teilstationär</pre>
      */
    public static final String RULES_CRIT_ADM_1_TYPE_TOOLTIP_5 = "Rules.crit.adm1.type.tooltip.5";

    /** <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_6
      * [en] 04 - Krankenhausbehandlung ohne anschl. stationäre Behandlung
      * [de] 04 - Krankenhausbehandlung ohne anschl. stationäre Behandlung</pre>
      */
    public static final String RULES_CRIT_ADM_1_TYPE_TOOLTIP_6 = "Rules.crit.adm1.type.tooltip.6";

    /** <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_7
      * [en] 05 - stationäre Entbindung
      * [de] 05 - stationäre Entbindung</pre>
      */
    public static final String RULES_CRIT_ADM_1_TYPE_TOOLTIP_7 = "Rules.crit.adm1.type.tooltip.7";

    /** <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_8
      * [en] 06 - Geburt
      * [de] 06 - Geburt</pre>
      */
    public static final String RULES_CRIT_ADM_1_TYPE_TOOLTIP_8 = "Rules.crit.adm1.type.tooltip.8";

    /** <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_9
      * [en] 07 - Wiederaufnahme wg. Komplikation (Fallpauschale)
      * [de] 07 - Wiederaufnahme wg. Komplikation (Fallpauschale)</pre>
      */
    public static final String RULES_CRIT_ADM_1_TYPE_TOOLTIP_9 = "Rules.crit.adm1.type.tooltip.9";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_10
      * [en] 22 - Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
      * [de] 22 - Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_10 = "Rules.crit.adm2.type.tooltip.10";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_11
      * [en] 23 - Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
      * [de] 23 - Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_11 = "Rules.crit.adm2.type.tooltip.11";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_12
      * [en] 24 - Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt
      * [de] 24 - Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_12 = "Rules.crit.adm2.type.tooltip.12";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_13
      * [en] 26 - Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden
      * [de] 26 - Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_13 = "Rules.crit.adm2.type.tooltip.13";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_14
      * [en] 27 - Kostenträgerwechsel - Notfall
      * [de] 27 - Kostenträgerwechsel - Notfall</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_14 = "Rules.crit.adm2.type.tooltip.14";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_15
      * [en] 41 - Integrierte Versorgung - Normalfall
      * [de] 41 - Integrierte Versorgung - Normalfall</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_15 = "Rules.crit.adm2.type.tooltip.15";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_16
      * [en] 42 - Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
      * [de] 42 - Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_16 = "Rules.crit.adm2.type.tooltip.16";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_17
      * [en] 43 - Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
      * [de] 43 - Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_17 = "Rules.crit.adm2.type.tooltip.17";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_18
      * [en] 44 - Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt
      * [de] 44 - Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_18 = "Rules.crit.adm2.type.tooltip.18";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_19
      * [en] 46 - Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden
      * [de] 46 - Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_19 = "Rules.crit.adm2.type.tooltip.19";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_20
      * [en] 47 - Integrierte Versorgung - Notfall
      * [de] 47 - Integrierte Versorgung - Notfall</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_20 = "Rules.crit.adm2.type.tooltip.20";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_3
      * [en] 01 - Normalfall
      * [de] 01 - Normalfall</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_3 = "Rules.crit.adm2.type.tooltip.3";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_4
      * [en] 02 - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
      * [de] 02 - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_4 = "Rules.crit.adm2.type.tooltip.4";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_5
      * [en] 03 - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
      * [de] 03 - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_5 = "Rules.crit.adm2.type.tooltip.5";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_6
      * [en] 04 - Hinweis auf Einwirkung von äußerer Gewalt
      * [de] 04 - Hinweis auf Einwirkung von äußerer Gewalt</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_6 = "Rules.crit.adm2.type.tooltip.6";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_7
      * [en] 06 - Kriegsbeschädigten-Leiden / BVG-Leiden
      * [de] 06 - Kriegsbeschädigten-Leiden / BVG-Leiden</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_7 = "Rules.crit.adm2.type.tooltip.7";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_8
      * [en] 07 - Notfall
      * [de] 07 - Notfall</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_8 = "Rules.crit.adm2.type.tooltip.8";

    /** <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_9
      * [en] 21 - Kostenträgerwechsel - Normalfall
      * [de] 21 - Kostenträgerwechsel - Normalfall</pre>
      */
    public static final String RULES_CRIT_ADM_2_TYPE_TOOLTIP_9 = "Rules.crit.adm2.type.tooltip.9";

    /** <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_10
      * [en] B - Begleitperson
      * [de] B - Begleitperson</pre>
      */
    public static final String RULES_CRIT_ADM_CAUSE_TOOLTIP_10 = "Rules.crit.adm.cause.tooltip.10";

    /** <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_11
      * [en] A - Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden)
      * [de] A - Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden)</pre>
      */
    public static final String RULES_CRIT_ADM_CAUSE_TOOLTIP_11 = "Rules.crit.adm.cause.tooltip.11";

    /** <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_3
      * [en] E - Einweisung durch Arzt
      * [de] E - Einweisung durch Arzt</pre>
      */
    public static final String RULES_CRIT_ADM_CAUSE_TOOLTIP_3 = "Rules.crit.adm.cause.tooltip.3";

    /** <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_4
      * [en] Z - Einweisung durch Zahnarzt
      * [de] Z - Einweisung durch Zahnarzt</pre>
      */
    public static final String RULES_CRIT_ADM_CAUSE_TOOLTIP_4 = "Rules.crit.adm.cause.tooltip.4";

    /** <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_5
      * [en] N - Notfall
      * [de] N - Notfall</pre>
      */
    public static final String RULES_CRIT_ADM_CAUSE_TOOLTIP_5 = "Rules.crit.adm.cause.tooltip.5";

    /** <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_6
      * [en] R - Aufnahme nach vorausgehender Behandlung in einer Rehaeinrichtung
      * [de] R - Aufnahme nach vorausgehender Behandlung in einer Rehaeinrichtung</pre>
      */
    public static final String RULES_CRIT_ADM_CAUSE_TOOLTIP_6 = "Rules.crit.adm.cause.tooltip.6";

    /** <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_8
      * [en] K - Verlegung (Aufnahme) aus einem anderen Krankenhaus i.R.e. Kooperation
      * [de] K - Verlegung (Aufnahme) aus einem anderen Krankenhaus i.R.e. Kooperation</pre>
      */
    public static final String RULES_CRIT_ADM_CAUSE_TOOLTIP_8 = "Rules.crit.adm.cause.tooltip.8";

    /** <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_9
      * [en] G - Geburt
      * [de] G - Geburt</pre>
      */
    public static final String RULES_CRIT_ADM_CAUSE_TOOLTIP_9 = "Rules.crit.adm.cause.tooltip.9";

    /** <pre>RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_3
      * [en] Mo(1) - Montag
      * [de] Mo(1) - Montag</pre>
      */
    public static final String RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_3 = "Rules.crit.admission.week.day.tooltip.3";

    /** <pre>RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_4
      * [en] Di(2) - Dinstag
      * [de] Di(2) - Dinstag</pre>
      */
    public static final String RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_4 = "Rules.crit.admission.week.day.tooltip.4";

    /** <pre>RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_5
      * [en] Mi(3) - Mittwoch
      * [de] Mi(3) - Mittwoch</pre>
      */
    public static final String RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_5 = "Rules.crit.admission.week.day.tooltip.5";

    /** <pre>RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_6
      * [en] Do(4) - Donnerstag
      * [de] Do(4) - Donnerstag</pre>
      */
    public static final String RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_6 = "Rules.crit.admission.week.day.tooltip.6";

    /** <pre>RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_7
      * [en] Fr(5) - Freitag
      * [de] Fr(5) - Freitag</pre>
      */
    public static final String RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_7 = "Rules.crit.admission.week.day.tooltip.7";

    /** <pre>RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_8
      * [en] Sa(6) - Samstag
      * [de] Sa(6) - Samstag</pre>
      */
    public static final String RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_8 = "Rules.crit.admission.week.day.tooltip.8";

    /** <pre>RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_9
      * [en] So(0) - Sonntag
      * [de] So(0) - Sonntag</pre>
      */
    public static final String RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_9 = "Rules.crit.admission.week.day.tooltip.9";

    /** <pre>RULES_CRIT_AMBU_CARE_CARE_LEVEL
      * [en] ambu_Pflegestufe
      * [de] ambu_Pflegestufe</pre>
      */
    public static final String RULES_CRIT_AMBU_CARE_CARE_LEVEL = "Rules.crit.ambu.care.care.level";

    /** <pre>RULES_CRIT_AMBU_CARE_CARE_LEVEL_DIS
      * [en] Pflegedaten: Pflegestufe
      * [de] Pflegedaten: Pflegestufe</pre>
      */
    public static final String RULES_CRIT_AMBU_CARE_CARE_LEVEL_DIS = "Rules.crit.ambu.care.care.level.dis";

    /** <pre>RULES_CRIT_AMBU_CARE_PROVIDED_FROM
      * [en] ambu_Pflegeleistung_von
      * [de] ambu_Pflegeleistung_von</pre>
      */
    public static final String RULES_CRIT_AMBU_CARE_PROVIDED_FROM = "Rules.crit.ambu.care.provided.from";

    /** <pre>RULES_CRIT_AMBU_CARE_PROVIDED_FROM_DIS
      * [en] Pflegedaten: Pflegeleistung von
      * [de] Pflegedaten: Pflegeleistung von</pre>
      */
    public static final String RULES_CRIT_AMBU_CARE_PROVIDED_FROM_DIS = "Rules.crit.ambu.care.provided.from.dis";

    /** <pre>RULES_CRIT_AMBU_CARE_PROVIDED_FROM_TOOLTIP
      * [en] Der erste Tag der aufgebrachten Leistung
      * [de] Der erste Tag der aufgebrachten Leistung</pre>
      */
    public static final String RULES_CRIT_AMBU_CARE_PROVIDED_FROM_TOOLTIP = "Rules.crit.ambu.care.provided.from.tooltip";

    /** <pre>RULES_CRIT_AMBU_CARE_PROVIDED_TO
      * [en] ambu_Pflegeleistung_bis
      * [de] ambu_Pflegeleistung_bis</pre>
      */
    public static final String RULES_CRIT_AMBU_CARE_PROVIDED_TO = "Rules.crit.ambu.care.provided.to";

    /** <pre>RULES_CRIT_AMBU_CARE_PROVIDED_TO_DIS
      * [en] Pflegedaten: Pflegeleistung bis
      * [de] Pflegedaten: Pflegeleistung bis</pre>
      */
    public static final String RULES_CRIT_AMBU_CARE_PROVIDED_TO_DIS = "Rules.crit.ambu.care.provided.to.dis";

    /** <pre>RULES_CRIT_AMBU_CARE_PROVIDED_TO_TOOLTIP
      * [en] Der letzte Tag der aufgebrachten Leistung
      * [de] Der letzte Tag der aufgebrachten Leistung</pre>
      */
    public static final String RULES_CRIT_AMBU_CARE_PROVIDED_TO_TOOLTIP = "Rules.crit.ambu.care.provided.to.tooltip";

    /** <pre>RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_3
      * [en] 0 - nicht gesetzt
      * [de] 0 - nicht gesetzt</pre>
      */
    public static final String RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_3 = "Rules.crit.aux.diag.type.tooltip.3";

    /** <pre>RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_4
      * [en] 1 - Kreuzdiagnose
      * [de] 1 - Kreuzdiagnose</pre>
      */
    public static final String RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_4 = "Rules.crit.aux.diag.type.tooltip.4";

    /** <pre>RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_5
      * [en] 2 - Sterndiagnose
      * [de] 2 - Sterndiagnose</pre>
      */
    public static final String RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_5 = "Rules.crit.aux.diag.type.tooltip.5";

    /** <pre>RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_6
      * [en] 3 - Zusatzdiagnose
      * [de] 3 - Zusatzdiagnose</pre>
      */
    public static final String RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_6 = "Rules.crit.aux.diag.type.tooltip.6";

    /** <pre>RULES_CRIT_CARE_STATE_TOOLTIP_10
      * [en] Pflegegrad 4
      * [de] Pflegegrad 4</pre>
      */
    public static final String RULES_CRIT_CARE_STATE_TOOLTIP_10 = "Rules.crit.care.state.tooltip.10";

    /** <pre>RULES_CRIT_CARE_STATE_TOOLTIP_11
      * [en] Pflegegrad 5
      * [de] Pflegegrad 5</pre>
      */
    public static final String RULES_CRIT_CARE_STATE_TOOLTIP_11 = "Rules.crit.care.state.tooltip.11";

    /** <pre>RULES_CRIT_CARE_STATE_TOOLTIP_7
      * [en] Pflegegrad 1
      * [de] Pflegegrad 1</pre>
      */
    public static final String RULES_CRIT_CARE_STATE_TOOLTIP_7 = "Rules.crit.care.state.tooltip.7";

    /** <pre>RULES_CRIT_CARE_STATE_TOOLTIP_8
      * [en] Pflegegrad 2
      * [de] Pflegegrad 2</pre>
      */
    public static final String RULES_CRIT_CARE_STATE_TOOLTIP_8 = "Rules.crit.care.state.tooltip.8";

    /** <pre>RULES_CRIT_CARE_STATE_TOOLTIP_9
      * [en] Pflegegrad 3
      * [de] Pflegegrad 3</pre>
      */
    public static final String RULES_CRIT_CARE_STATE_TOOLTIP_9 = "Rules.crit.care.state.tooltip.9";

    /** <pre>RULES_CRIT_CLINIC_CASE_COSTS_TOOLTIP
      * [en] Gesamtkosten enes Falls
      * [de] Gesamtkosten enes Falls</pre>
      */
    public static final String RULES_CRIT_CLINIC_CASE_COSTS_TOOLTIP = "Rules.crit.clinic.case.costs.tooltip";

    /** <pre>RULES_CRIT_DIS_TYPE_3_TOOLTIP_3
      * [en] 1 - arbeitsfähig
      * [de] 1 - arbeitsfähig</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_3_TOOLTIP_3 = "Rules.crit.dis.type3.tooltip.3";

    /** <pre>RULES_CRIT_DIS_TYPE_3_TOOLTIP_4
      * [en] 2 - nicht arbeitsfähig
      * [de] 2 - nicht arbeitsfähig</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_3_TOOLTIP_4 = "Rules.crit.dis.type3.tooltip.4";

    /** <pre>RULES_CRIT_DIS_TYPE_3_TOOLTIP_5
      * [en] 9 - keine Angabe
      * [de] 9 - keine Angabe</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_3_TOOLTIP_5 = "Rules.crit.dis.type3.tooltip.5";

    /** <pre>RULES_CRIT_DIS_TYPE_3_TOOLTIP_6
      * [en] 3 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung
      * [de] 3 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_3_TOOLTIP_6 = "Rules.crit.dis.type3.tooltip.6";

    /** <pre>RULES_CRIT_DIS_TYPE_3_TOOLTIP_7
      * [en] 4 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung
      * [de] 4 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_3_TOOLTIP_7 = "Rules.crit.dis.type3.tooltip.7";

    /** <pre>RULES_CRIT_DIS_TYPE_3_TOOLTIP_8
      * [en] 5 - arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung
      * [de] 5 - arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_3_TOOLTIP_8 = "Rules.crit.dis.type3.tooltip.8";

    /** <pre>RULES_CRIT_DIS_TYPE_3_TOOLTIP_9
      * [en] 6 - arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV
      * [de] 6 - arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_3_TOOLTIP_9 = "Rules.crit.dis.type3.tooltip.9";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_10
      * [en] 08 - Verlegung in ein anderes Krankenhaus i.R.e. Kooperation
      * [de] 08 - Verlegung in ein anderes Krankenhaus i.R.e. Kooperation</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_10 = "Rules.crit.dis.type.tooltip.10";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_11
      * [en] 09 - Entlassung in eine Rehabilitationseinrichtung
      * [de] 09 - Entlassung in eine Rehabilitationseinrichtung</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_11 = "Rules.crit.dis.type.tooltip.11";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_12
      * [en] 10 - Entlassung in eine Pflegeeinrichtung
      * [de] 10 - Entlassung in eine Pflegeeinrichtung</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_12 = "Rules.crit.dis.type.tooltip.12";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_13
      * [en] 11 - Entlassung in ein Hospiz
      * [de] 11 - Entlassung in ein Hospiz</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_13 = "Rules.crit.dis.type.tooltip.13";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_14
      * [en] 12 - Interne Verlegung
      * [de] 12 - Interne Verlegung</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_14 = "Rules.crit.dis.type.tooltip.14";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_15
      * [en] 13 - Externe Verlegung zur psychiatrischen Behandlung
      * [de] 13 - Externe Verlegung zur psychiatrischen Behandlung</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_15 = "Rules.crit.dis.type.tooltip.15";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_16
      * [en] 14 - Behandlung aus sonstigen Gründen beendet, nachstationäre Beh.
      * [de] 14 - Behandlung aus sonstigen Gründen beendet, nachstationäre Beh.</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_16 = "Rules.crit.dis.type.tooltip.16";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_17
      * [en] 15 - Behandlung gegen ärztlichen Rat beendet, nachstationäre Beh.
      * [de] 15 - Behandlung gegen ärztlichen Rat beendet, nachstationäre Beh.</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_17 = "Rules.crit.dis.type.tooltip.17";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_18
      * [en] 17 - interne Verlegung mit Wechsel zwischen den Geltungsbereichen
      * [de] 17 - interne Verlegung mit Wechsel zwischen den Geltungsbereichen</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_18 = "Rules.crit.dis.type.tooltip.18";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_19
      * [en] 18 - Rückverlegung
      * [de] 18 - Rückverlegung</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_19 = "Rules.crit.dis.type.tooltip.19";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_20
      * [en] 19 - Entlassung vor Wiederaufnahme mit Neueinstufung
      * [de] 19 - Entlassung vor Wiederaufnahme mit Neueinstufung</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_20 = "Rules.crit.dis.type.tooltip.20";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_21
      * [en] 20 - Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation
      * [de] 20 - Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_21 = "Rules.crit.dis.type.tooltip.21";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_22
      * [en] 21 - Entlassung mit nachfolgender Wiederaufnahme
      * [de] 21 - Entlassung mit nachfolgender Wiederaufnahme</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_22 = "Rules.crit.dis.type.tooltip.22";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_23
      * [en] 22 - Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung
      * [de] 22 - Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_23 = "Rules.crit.dis.type.tooltip.23";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_26
      * [en] 23 - Beginn eines externen Aufenthalts mit Abwesenheit ücber Mitternacht (BPflV-Bereich - für verlegende Fachabteilung)
      * [de] 23 - Beginn eines externen Aufenthalts mit Abwesenheit ücber Mitternacht (BPflV-Bereich - für verlegende Fachabteilung)</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_26 = "Rules.crit.dis.type.tooltip.26";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_27
      * [en] 24 - Beendigung eines externen Aufenthalts mit Abwesenheit über Mitternacht (BPflVBereich - für Pseudo-Fachabteilung 0003)
      * [de] 24 - Beendigung eines externen Aufenthalts mit Abwesenheit über Mitternacht (BPflVBereich - für Pseudo-Fachabteilung 0003)</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_27 = "Rules.crit.dis.type.tooltip.27";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_28
      * [en] 25 - Entlassung zum Jahresende bei Aufnahme im Vorjahr
      * [de] 25 - Entlassung zum Jahresende bei Aufnahme im Vorjahr</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_28 = "Rules.crit.dis.type.tooltip.28";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_29
      * [en] 26 - Beginn  eines  Zeitraumes  ohne  direkten Patientenkontakt  (stationsäquivalente Behandlung) (für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)
      * [de] 26 - Beginn  eines  Zeitraumes  ohne  direkten Patientenkontakt  (stationsäquivalente Behandlung) (für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_29 = "Rules.crit.dis.type.tooltip.29";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_3
      * [en] 01 - Behandlung regulär beendet
      * [de] 01 - Behandlung regulär beendet</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_3 = "Rules.crit.dis.type.tooltip.3";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_30
      * [en] 27 - Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung für Pseudofachabteilung 0004(für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)
      * [de] 27 - Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung für Pseudofachabteilung 0004(für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_30 = "Rules.crit.dis.type.tooltip.30";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_31
      * [en] 28 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit
      * [de] 28 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_31 = "Rules.crit.dis.type.tooltip.31";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_32
      * [en] 29 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit
      * [de] 29 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_32 = "Rules.crit.dis.type.tooltip.32";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_33
      * [en] 30 - Behandlung regulär beendet, Überleitung in die Übergangspflege
      * [de] 30 - Behandlung regulär beendet, Überleitung in die Übergangspflege</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_33 = "Rules.crit.dis.type.tooltip.33";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_4
      * [en] 02 - Behandlung regulär beendet, nachstationäre Behandlung vorgesehen
      * [de] 02 - Behandlung regulär beendet, nachstationäre Behandlung vorgesehen</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_4 = "Rules.crit.dis.type.tooltip.4";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_5
      * [en] 03 - Behandlung aus sonstigen Gründen beendet
      * [de] 03 - Behandlung aus sonstigen Gründen beendet</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_5 = "Rules.crit.dis.type.tooltip.5";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_6
      * [en] 04 - Behandlung gegen ärztlichen Rat beendet
      * [de] 04 - Behandlung gegen ärztlichen Rat beendet</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_6 = "Rules.crit.dis.type.tooltip.6";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_7
      * [en] 05 - Zuständigkeitswechsel des Kostenträger
      * [de] 05 - Zuständigkeitswechsel des Kostenträger</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_7 = "Rules.crit.dis.type.tooltip.7";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_8
      * [en] 06 - Verlegung in ein anderes Krankenhaus
      * [de] 06 - Verlegung in ein anderes Krankenhaus</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_8 = "Rules.crit.dis.type.tooltip.8";

    /** <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_9
      * [en] 07 - Tod
      * [de] 07 - Tod</pre>
      */
    public static final String RULES_CRIT_DIS_TYPE_TOOLTIP_9 = "Rules.crit.dis.type.tooltip.9";

    /** <pre>RULES_CRIT_DRGPARTITION_TOOLTIP_3
      * [en] O - operative Behandlung
      * [de] O - operative Behandlung</pre>
      */
    public static final String RULES_CRIT_DRGPARTITION_TOOLTIP_3 = "Rules.crit.drgpartition.tooltip.3";

    /** <pre>RULES_CRIT_DRGPARTITION_TOOLTIP_4
      * [en] A - eine nichtoperative, jedoch invasive Behandlung
      * [de] A - eine nichtoperative, jedoch invasive Behandlung</pre>
      */
    public static final String RULES_CRIT_DRGPARTITION_TOOLTIP_4 = "Rules.crit.drgpartition.tooltip.4";

    /** <pre>RULES_CRIT_DRGPARTITION_TOOLTIP_5
      * [en] M - eine rein medizinische Behandlung ohne Eingriffe.
      * [de] M - eine rein medizinische Behandlung ohne Eingriffe.</pre>
      */
    public static final String RULES_CRIT_DRGPARTITION_TOOLTIP_5 = "Rules.crit.drgpartition.tooltip.5";

    /** <pre>RULES_CRIT_INSURANCE_STATUS_TOOLTIP_2
      * [en] 0 - kein
      * [de] 0 - kein</pre>
      */
    public static final String RULES_CRIT_INSURANCE_STATUS_TOOLTIP_2 = "Rules.crit.insurance.status.tooltip.2";

    /** <pre>RULES_CRIT_INSURANCE_STATUS_TOOLTIP_3
      * [en] 1 - selbst versichert
      * [de] 1 - selbst versichert</pre>
      */
    public static final String RULES_CRIT_INSURANCE_STATUS_TOOLTIP_3 = "Rules.crit.insurance.status.tooltip.3";

    /** <pre>RULES_CRIT_INSURANCE_STATUS_TOOLTIP_4
      * [en] 3 - familienversichert
      * [de] 3 - familienversichert</pre>
      */
    public static final String RULES_CRIT_INSURANCE_STATUS_TOOLTIP_4 = "Rules.crit.insurance.status.tooltip.4";

    /** <pre>RULES_CRIT_INSURANCE_STATUS_TOOLTIP_5
      * [en] 5 - Rentner &amp; Angehörige
      * [de] 5 - Rentner &amp; Angehörige</pre>
      */
    public static final String RULES_CRIT_INSURANCE_STATUS_TOOLTIP_5 = "Rules.crit.insurance.status.tooltip.5";

    /** <pre>RULES_CRIT_LOSLESS_24H_TOOLTIP_3
      * [en] 0 - Verweildauer &amp;gt;= 24
      * [de] 0 - Verweildauer &amp;gt;= 24</pre>
      */
    public static final String RULES_CRIT_LOSLESS_24H_TOOLTIP_3 = "Rules.crit.losless24h.tooltip.3";

    /** <pre>RULES_CRIT_LOSLESS_24H_TOOLTIP_4
      * [en] 1 - Verweildauer &amp;lt; 24
      * [de] 1 - Verweildauer &amp;lt; 24</pre>
      */
    public static final String RULES_CRIT_LOSLESS_24H_TOOLTIP_4 = "Rules.crit.losless24h.tooltip.4";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_10
      * [en] 08 - Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe
      * [de] 08 - Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_10 = "Rules.crit.mdc.tooltip.10";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_11
      * [en] 09 - Krankheiten und Störungen an Haut, Unterhaut und Mamma
      * [de] 09 - Krankheiten und Störungen an Haut, Unterhaut und Mamma</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_11 = "Rules.crit.mdc.tooltip.11";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_12
      * [en] 10 - Endokrine, Ernährungs- und Stoffwechselkrankheiten
      * [de] 10 - Endokrine, Ernährungs- und Stoffwechselkrankheiten</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_12 = "Rules.crit.mdc.tooltip.12";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_13
      * [en] 11 - Krankheiten und Störungen der Harnorgane
      * [de] 11 - Krankheiten und Störungen der Harnorgane</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_13 = "Rules.crit.mdc.tooltip.13";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_14
      * [en] 12 - Krankheiten und Störungen der männlichen Geschlechtsorgane
      * [de] 12 - Krankheiten und Störungen der männlichen Geschlechtsorgane</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_14 = "Rules.crit.mdc.tooltip.14";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_15
      * [en] 13 - Krankheiten und Störungen der weiblichen Geschlechtsorgane
      * [de] 13 - Krankheiten und Störungen der weiblichen Geschlechtsorgane</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_15 = "Rules.crit.mdc.tooltip.15";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_16
      * [en] 14 - Schwangerschaft, Geburt und Wochenbett
      * [de] 14 - Schwangerschaft, Geburt und Wochenbett</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_16 = "Rules.crit.mdc.tooltip.16";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_17
      * [en] 15 - Neugeborene
      * [de] 15 - Neugeborene</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_17 = "Rules.crit.mdc.tooltip.17";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_18
      * [en] 16 - Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems
      * [de] 16 - Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_18 = "Rules.crit.mdc.tooltip.18";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_19
      * [en] 17 - Hämatologische und solide Neubildungen
      * [de] 17 - Hämatologische und solide Neubildungen</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_19 = "Rules.crit.mdc.tooltip.19";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_2
      * [en] 00 - unbekannt
      * [de] 00 - unbekannt</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_2 = "Rules.crit.mdc.tooltip.2";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_20
      * [en] 18A - HIV
      * [de] 18A - HIV</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_20 = "Rules.crit.mdc.tooltip.20";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_21
      * [en] 18B - Infektiöse und parasitäre Erkrankungen
      * [de] 18B - Infektiöse und parasitäre Erkrankungen</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_21 = "Rules.crit.mdc.tooltip.21";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_22
      * [en] 19 - Psychische Krankheiten
      * [de] 19 - Psychische Krankheiten</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_22 = "Rules.crit.mdc.tooltip.22";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_23
      * [en] 20 - Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen
      * [de] 20 - Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_23 = "Rules.crit.mdc.tooltip.23";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_24
      * [en] 21A - Polytrauma
      * [de] 21A - Polytrauma</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_24 = "Rules.crit.mdc.tooltip.24";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_25
      * [en] 21B - Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten
      * [de] 21B - Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_25 = "Rules.crit.mdc.tooltip.25";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_26
      * [en] 22 - Verbrennungen
      * [de] 22 - Verbrennungen</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_26 = "Rules.crit.mdc.tooltip.26";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_27
      * [en] 23 - Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens
      * [de] 23 - Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_27 = "Rules.crit.mdc.tooltip.27";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_28
      * [en] PRE - PRÄ - MDC
      * [de] 24 - Sonstige DRGs</pre>
      * Attention! this value ('PRE - PRÄ - MDC') seems to be also defined under the key RULES_CRIT_MDC_TOOLTIP_30!
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_28 = "Rules.crit.mdc.tooltip.28";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_29
      * [de] 25 - Teilstationäre pädiatrische Diagnostik und Behandlung</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_29 = "Rules.crit.mdc.tooltip.29";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_3
      * [en] 01 - Krankheiten und Störungen des Nervensystems
      * [de] 01 - Krankheiten und Störungen des Nervensystems</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_3 = "Rules.crit.mdc.tooltip.3";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_30
      * [de] PRE - PRÄ - MDC</pre>
      * Attention! this value ('PRE - PRÄ - MDC') seems to be also defined under the key RULES_CRIT_MDC_TOOLTIP_28!
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_30 = "Rules.crit.mdc.tooltip.30";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_4
      * [en] 02 - Krankheiten und Störungen des Auges
      * [de] 02 - Krankheiten und Störungen des Auges</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_4 = "Rules.crit.mdc.tooltip.4";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_5
      * [en] 03 - Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO)
      * [de] 03 - Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO)</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_5 = "Rules.crit.mdc.tooltip.5";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_6
      * [en] 04 - Krankheiten und Störungen der Atmungsorgane
      * [de] 04 - Krankheiten und Störungen der Atmungsorgane</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_6 = "Rules.crit.mdc.tooltip.6";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_7
      * [en] 05 - Krankheiten und Störungen des Kreislaufsystems
      * [de] 05 - Krankheiten und Störungen des Kreislaufsystems</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_7 = "Rules.crit.mdc.tooltip.7";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_8
      * [en] 06 - Krankheiten und Störungen der Verdauungsorgane
      * [de] 06 - Krankheiten und Störungen der Verdauungsorgane</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_8 = "Rules.crit.mdc.tooltip.8";

    /** <pre>RULES_CRIT_MDC_TOOLTIP_9
      * [en] 07 - Krankheiten und Störungen an hepatobiliärem System und Pankreas
      * [de] 07 - Krankheiten und Störungen an hepatobiliärem System und Pankreas</pre>
      */
    public static final String RULES_CRIT_MDC_TOOLTIP_9 = "Rules.crit.mdc.tooltip.9";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_10
      * [en] E.
      * [de] E.</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_10 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.10";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_11
      * [en] µmol
      * [de] µmol</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_11 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.11";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_12
      * [en] FIP.-E.
      * [de] FIP.-E.</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_12 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.12";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_13
      * [en] Mio.I.E.
      * [de] Mio.I.E.</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_13 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.13";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_14
      * [en] BE
      * [de] BE</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_14 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.14";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_15
      * [en] Vol.-%
      * [de] Vol.-%</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_15 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.15";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_16
      * [en] Gew.-%
      * [de] Gew.-%</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_16 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.16";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_17
      * [en] %V/V, mmol
      * [de] %V/V, mmol</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_17 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.17";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_18
      * [en] Mio E.
      * [de] Mio E.</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_18 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.18";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_19
      * [en] ng
      * [de] ng</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_19 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.19";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_20
      * [en] MSE
      * [de] MSE</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_20 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.20";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_21
      * [en] mg (MW)
      * [de] mg (MW)</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_21 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.21";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_22
      * [en] g (MW)
      * [de] g (MW)</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_22 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.22";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_23
      * [en] Sprühstoß
      * [de] Sprühstoß</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_23 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.23";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_24
      * [en] Aerosolstoß
      * [de] Aerosolstoß</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_24 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.24";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_25
      * [en] cm¢2
      * [de] cm¢2</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_25 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.25";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_26
      * [en] µl
      * [de] µl</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_26 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.26";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_27
      * [en] Ph.Eur.-E.
      * [de] Ph.Eur.-E.</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_27 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.27";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_28
      * [en] nl
      * [de] nl</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_28 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.28";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_29
      * [en] pg
      * [de] pg</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_29 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.29";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_3
      * [en] mg
      * [de] mg</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_3 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.3";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_31
      * [en] Keime
      * [de] Keime</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_31 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.31";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_32
      * [en] Mio.-Keime
      * [de] Mio.-Keime</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_32 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.32";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_33
      * [en] mPa*s
      * [de] mPa*s</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_33 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.33";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_4
      * [en] ml
      * [de] ml</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_4 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.4";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_5
      * [en] g
      * [de] g</pre>
      * Attention! this value ('G') seems to be also defined under the key CASE_RESOLVE_USED_FOR_GROUPING!
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_5 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.5";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_6
      * [en] l
      * [de] l</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_6 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.6";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_7
      * [en] µg
      * [de] µg</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_7 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.7";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_8
      * [en] I.E.
      * [de] I.E.</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_8 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.8";

    /** <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_9
      * [en] %
      * [de] %</pre>
      */
    public static final String RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_9 = "Rules.crit.medicament.perscript.dosage.unit.tooltip.9";

    /** <pre>RULES_CRIT_MRSA_AGE_TOOLTIP_1
      * [en] Alter aus der Satzart 100 im Berichtsjahr
      * [de] Alter aus der Satzart 100 im Berichtsjahr</pre>
      */
    public static final String RULES_CRIT_MRSA_AGE_TOOLTIP_1 = "Rules.crit.mrsa.age.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_AGE_TOOLTIP_2
      * [en] Format: ganze Zahl, bis zu 3stellig
      * [de] Format: ganze Zahl, bis zu 3stellig</pre>
      */
    public static final String RULES_CRIT_MRSA_AGE_TOOLTIP_2 = "Rules.crit.mrsa.age.tooltip.2";

    /** <pre>RULES_CRIT_MRSA_AGG_TOOLTIP_1
      * [en] Vom BVA festgelegte Alters- und Geschlechtsgruppen
      * [de] Vom BVA festgelegte Alters- und Geschlechtsgruppen</pre>
      */
    public static final String RULES_CRIT_MRSA_AGG_TOOLTIP_1 = "Rules.crit.mrsa.agg.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_AGG_TOOLTIP_2
      * [en] Format: 1-bis 2-stellig, ganze Zahl (Beispiel 23)
      * [de] Format: 1-bis 2-stellig, ganze Zahl (Beispiel 23)</pre>
      */
    public static final String RULES_CRIT_MRSA_AGG_TOOLTIP_2 = "Rules.crit.mrsa.agg.tooltip.2";

    /** <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_2
      * [en] A - ausgeschlossene Doagnose
      * [de] A - ausgeschlossene Doagnose</pre>
      */
    public static final String RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_2 = "Rules.crit.mrsa.ambulant.diag.qualification.tooltip.2";

    /** <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_3
      * [en] G - gesicherte Diagnose
      * [de] G - gesicherte Diagnose</pre>
      */
    public static final String RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_3 = "Rules.crit.mrsa.ambulant.diag.qualification.tooltip.3";

    /** <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_4
      * [en] V - Verdachtsdiagnose
      * [de] V - Verdachtsdiagnose</pre>
      */
    public static final String RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_4 = "Rules.crit.mrsa.ambulant.diag.qualification.tooltip.4";

    /** <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_5
      * [en] Z - Zustand nach der betreffenden Diagnose
      * [de] Z - Zustand nach der betreffenden Diagnose</pre>
      */
    public static final String RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_5 = "Rules.crit.mrsa.ambulant.diag.qualification.tooltip.5";

    /** <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_6
      * [en] 0 - sonstige
      * [de] 0 - sonstige</pre>
      */
    public static final String RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_6 = "Rules.crit.mrsa.ambulant.diag.qualification.tooltip.6";

    /** <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_2
      * [en] 1 - 1. Quartal
      * [de] 1 - 1. Quartal</pre>
      */
    public static final String RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_2 = "Rules.crit.mrsa.ambulant.diag.quater.tooltip_2";

    /** <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_3
      * [en] 2 - 2. Quartal
      * [de] 2 - 2. Quartal</pre>
      */
    public static final String RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_3 = "Rules.crit.mrsa.ambulant.diag.quater.tooltip_3";

    /** <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_4
      * [en] 3 - 3. Quartal
      * [de] 3 - 3. Quartal</pre>
      */
    public static final String RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_4 = "Rules.crit.mrsa.ambulant.diag.quater.tooltip_4";

    /** <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_5
      * [en] 4 - 4. Quartal
      * [de] 4 - 4. Quartal</pre>
      */
    public static final String RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_5 = "Rules.crit.mrsa.ambulant.diag.quater.tooltip_5";

    /** <pre>RULES_CRIT_MRSA_AMBULANT_DISEASE_NUMBER_TOOLTIP
      * [en] Krankheitsgruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden
      * [de] Krankheitsgruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden</pre>
      */
    public static final String RULES_CRIT_MRSA_AMBULANT_DISEASE_NUMBER_TOOLTIP = "Rules.crit.mrsa.ambulant.disease.number.tooltip";

    /** <pre>RULES_CRIT_MRSA_AMBULANT_DXG_TOOLTIP
      * [en] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden
      * [de] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden</pre>
      */
    public static final String RULES_CRIT_MRSA_AMBULANT_DXG_TOOLTIP = "Rules.crit.mrsa.ambulant.dxg.tooltip";

    /** <pre>RULES_CRIT_MRSA_AMBULANT_HMG_REL_DXG_TOOLTIP
      * [en] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden, die auch zu einer HMG führt
      * [de] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden, die auch zu einer HMG führt</pre>
      */
    public static final String RULES_CRIT_MRSA_AMBULANT_HMG_REL_DXG_TOOLTIP = "Rules.crit.mrsa.ambulant.hmg.rel.dxg.tooltip";

    /** <pre>RULES_CRIT_MRSA_BLOOD_PURIFICATION_EXPENDURE_TOOLTIP_1
      * [en] Summe aller Ausgaben für Sachkosten bei extrakorporaler Blutreinigung zu einem Versicherten (SA 700)
      * [de] Summe aller Ausgaben für Sachkosten bei extrakorporaler Blutreinigung zu einem Versicherten (SA 700)</pre>
      */
    public static final String RULES_CRIT_MRSA_BLOOD_PURIFICATION_EXPENDURE_TOOLTIP_1 = "Rules.crit.mrsa.blood.purification.expendure.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_DANTIST_EXPENDURE_TOOLTIP_1
      * [en] Summe aller Ausgaben für Zahnärzte zu einem Versicherten (SA 700)
      * [de] Summe aller Ausgaben für Zahnärzte zu einem Versicherten (SA 700)</pre>
      */
    public static final String RULES_CRIT_MRSA_DANTIST_EXPENDURE_TOOLTIP_1 = "Rules.crit.mrsa.dantist.expendure.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_DDD_TOOLTIP
      * [en] Daily Defined Dosis zu einem Medikament anhand PZN bzw. ATC
      * [de] Daily Defined Dosis zu einem Medikament anhand PZN bzw. ATC</pre>
      */
    public static final String RULES_CRIT_MRSA_DDD_TOOLTIP = "Rules.crit.mrsa.ddd.tooltip";

    /** <pre>RULES_CRIT_MRSA_DEAD_TOOLTIP_3
      * [en] 1 - verstorben
      * [de] 1 - verstorben</pre>
      */
    public static final String RULES_CRIT_MRSA_DEAD_TOOLTIP_3 = "Rules.crit.mrsa.dead.tooltip.3";

    /** <pre>RULES_CRIT_MRSA_DEAD_TOOLTIP_4
      * [en] 0 - sonst
      * [de] 0 - sonst</pre>
      */
    public static final String RULES_CRIT_MRSA_DEAD_TOOLTIP_4 = "Rules.crit.mrsa.dead.tooltip.4";

    /** <pre>RULES_CRIT_MRSA_DIAG_AMBULANT_HMG_REL_TOOLTIP_1_3
      * [en] 1 - vorhanden
      * [de] 1 - vorhanden</pre>
      */
    public static final String RULES_CRIT_MRSA_DIAG_AMBULANT_HMG_REL_TOOLTIP_1_3 = "Rules.crit.mrsa.diag.ambulant.hmg.rel.tooltip.1.3";

    /** <pre>RULES_CRIT_MRSA_DIAG_AMBULANT_HMG_REL_TOOLTIP_1_4
      * [en] 0 - nicht vorhanden
      * [de] 0 - nicht vorhanden</pre>
      */
    public static final String RULES_CRIT_MRSA_DIAG_AMBULANT_HMG_REL_TOOLTIP_1_4 = "Rules.crit.mrsa.diag.ambulant.hmg.rel.tooltip.1.4";

    /** <pre>RULES_CRIT_MRSA_DIAG_AMBULANT_TOOLTIP_1
      * [en] Diagnosen, die von einem niedergelassenen Arzt kodiert worden sind aus der Satzart 600. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
      * [de] Diagnosen, die von einem niedergelassenen Arzt kodiert worden sind aus der Satzart 600. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code</pre>
      */
    public static final String RULES_CRIT_MRSA_DIAG_AMBULANT_TOOLTIP_1 = "Rules.crit.mrsa.diag.ambulant.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_DIAG_HOSP_TOOLTIP_1
      * [en] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
      * [de] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code</pre>
      */
    public static final String RULES_CRIT_MRSA_DIAG_HOSP_TOOLTIP_1 = "Rules.crit.mrsa.diag.hosp.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_DMP_DAYS_TOOLTIP_1
      * [en] DMP-Tage aus Satzart 10
      * [de] DMP-Tage aus Satzart 10</pre>
      */
    public static final String RULES_CRIT_MRSA_DMP_DAYS_TOOLTIP_1 = "Rules.crit.mrsa.dmp.days.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_DMP_DAYS_TOOLTIP_2
      * [en] Anzahl der DMP-Versichertentage des Versicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV
      * [de] Anzahl der DMP-Versichertentage des Versicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV</pre>
      */
    public static final String RULES_CRIT_MRSA_DMP_DAYS_TOOLTIP_2 = "Rules.crit.mrsa.dmp.days.tooltip.2";

    /** <pre>RULES_CRIT_MRSA_DOC_EXPENDURE_TOOLTIP_1
      * [en] Summe aller Ausgaben für Ärzte zu einem Versicherten (SA 700)
      * [de] Summe aller Ausgaben für Ärzte zu einem Versicherten (SA 700)</pre>
      */
    public static final String RULES_CRIT_MRSA_DOC_EXPENDURE_TOOLTIP_1 = "Rules.crit.mrsa.doc.expendure.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_DRUGSTORE_EXPENDURE_TOOLTIP_1
      * [en] Summe aller Ausgaben für Apotheken zu einem Versicherten (SA 700)
      * [de] Summe aller Ausgaben für Apotheken zu einem Versicherten (SA 700)</pre>
      */
    public static final String RULES_CRIT_MRSA_DRUGSTORE_EXPENDURE_TOOLTIP_1 = "Rules.crit.mrsa.drugstore.expendure.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_DXG_TOOLTIP_1
      * [en] Grundlage der Klassifikation ist die Gruppierung von ICD-Diagnosen zu klinisch homogenen diagnostischen Gruppen - den DxGruppen (DxG).
      * [de] Grundlage der Klassifikation ist die Gruppierung von ICD-Diagnosen zu klinisch homogenen diagnostischen Gruppen - den DxGruppen (DxG).</pre>
      */
    public static final String RULES_CRIT_MRSA_DXG_TOOLTIP_1 = "Rules.crit.mrsa.dxg.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_DXG_TOOLTIP_2
      * [en] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 464)
      * [de] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 464)</pre>
      */
    public static final String RULES_CRIT_MRSA_DXG_TOOLTIP_2 = "Rules.crit.mrsa.dxg.tooltip.2";

    /** <pre>RULES_CRIT_MRSA_EMG_TOOLTIP_1
      * [en] Vom BVA festgelegte Erwerbsminderungsgruppen
      * [de] Vom BVA festgelegte Erwerbsminderungsgruppen</pre>
      */
    public static final String RULES_CRIT_MRSA_EMG_TOOLTIP_1 = "Rules.crit.mrsa.emg.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_EMG_TOOLTIP_2
      * [en] Format: 1-stellig, ganze Zahl (Beispiel: 3)
      * [de] Format: 1-stellig, ganze Zahl (Beispiel: 3)</pre>
      */
    public static final String RULES_CRIT_MRSA_EMG_TOOLTIP_2 = "Rules.crit.mrsa.emg.tooltip.2";

    /** <pre>RULES_CRIT_MRSA_FORMAT_MONEY_TOOLTIP
      * [en] Format: bis zu 7stellige Zahl mit 2 Nachkommastellen (Beispiel: 5895,25)
      * [de] Format: bis zu 7stellige Zahl mit 2 Nachkommastellen (Beispiel: 5895,25)</pre>
      */
    public static final String RULES_CRIT_MRSA_FORMAT_MONEY_TOOLTIP = "Rules.crit.mrsa.format.money.tooltip";

    /** <pre>RULES_CRIT_MRSA_FULL_EXPENDURE_TOOLTIP_1
      * [en] Summe aller Ausgaben zu einem Versicherten (SA 700)
      * [de] Summe aller Ausgaben zu einem Versicherten (SA 700)</pre>
      */
    public static final String RULES_CRIT_MRSA_FULL_EXPENDURE_TOOLTIP_1 = "Rules.crit.mrsa.full.expendure.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_FULL_REVENUE_TOOLTIP_1
      * [en] Summe aller Erlöse aus den HMGs, AGGs, EMGs
      * [de] Summe aller Erlöse aus den HMGs, AGGs, EMGs</pre>
      */
    public static final String RULES_CRIT_MRSA_FULL_REVENUE_TOOLTIP_1 = "Rules.crit.mrsa.full.revenue.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_HMG_NUMBER_TOOLTIP_1
      * [en] Anzahl aller ermittelten HMGs unter Berücksichtigung der Hierarchisierung
      * [de] Anzahl aller ermittelten HMGs unter Berücksichtigung der Hierarchisierung</pre>
      */
    public static final String RULES_CRIT_MRSA_HMG_NUMBER_TOOLTIP_1 = "Rules.crit.mrsa.hmg.number.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_HMG_NUMBER_TOOLTIP_2
      * [en] Format: ganze Zahl, bis zu 3stellig (Beispiel: 25)
      * [de] Format: ganze Zahl, bis zu 3stellig (Beispiel: 25)</pre>
      */
    public static final String RULES_CRIT_MRSA_HMG_NUMBER_TOOLTIP_2 = "Rules.crit.mrsa.hmg.number.tooltip.2";

    /** <pre>RULES_CRIT_MRSA_HMG_TOOLTIP_2
      * [en] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 72)
      * [de] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 72)</pre>
      */
    public static final String RULES_CRIT_MRSA_HMG_TOOLTIP_2 = "Rules.crit.mrsa.hmg.tooltip.2";

    /** <pre>RULES_CRIT_MRSA_HOSP_DISEASE_NUMBER_TOOLTIP
      * [en] Krankheitsgruppe,  die anhand einer ICD von einem Krankenhaus kodiert worden ist
      * [de] Krankheitsgruppe,  die anhand einer ICD von einem Krankenhaus kodiert worden ist</pre>
      */
    public static final String RULES_CRIT_MRSA_HOSP_DISEASE_NUMBER_TOOLTIP = "Rules.crit.mrsa.hosp.disease.number.tooltip";

    /** <pre>RULES_CRIT_MRSA_HOSP_DXG_TOOLTIP
      * [en] Diagnosegruppe, die anhand einer ICD von einem Krankenhaus kodiert worden sind
      * [de] Diagnosegruppe, die anhand einer ICD von einem Krankenhaus kodiert worden sind</pre>
      */
    public static final String RULES_CRIT_MRSA_HOSP_DXG_TOOLTIP = "Rules.crit.mrsa.hosp.dxg..tooltip";

    /** <pre>RULES_CRIT_MRSA_HOSP_EXPENDURE_TOOLTIP_1
      * [en] Summe aller Ausgaben für KH zu einem Versicherten (SA 700)
      * [de] Summe aller Ausgaben für KH zu einem Versicherten (SA 700)</pre>
      */
    public static final String RULES_CRIT_MRSA_HOSP_EXPENDURE_TOOLTIP_1 = "Rules.crit.mrsa.hosp.expendure.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_HOSP_HMG_REL_DXG_TOOLTIP
      * [en] Diagnosengruppe, die durch eine ICD von einem Krankenhaus kodiert worden ist, die auch zu einer HMG führt
      * [de] Diagnosengruppe, die durch eine ICD von einem Krankenhaus kodiert worden ist, die auch zu einer HMG führt</pre>
      */
    public static final String RULES_CRIT_MRSA_HOSP_HMG_REL_DXG_TOOLTIP = "Rules.crit.mrsa.hosp.hmg.rel.dxg.tooltip";

    /** <pre>RULES_CRIT_MRSA_INSURANCE_DAYS_TOOLTIP_1
      * [en] Versichertentage aus Satzart 100
      * [de] Versichertentage aus Satzart 100</pre>
      */
    public static final String RULES_CRIT_MRSA_INSURANCE_DAYS_TOOLTIP_1 = "Rules.crit.mrsa.insurance.days.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_INSURANCE_DAYS_TOOLTIP_2
      * [en] Versichertentage des Ver-sicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV
      * [de] Versichertentage des Ver-sicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV</pre>
      */
    public static final String RULES_CRIT_MRSA_INSURANCE_DAYS_TOOLTIP_2 = "Rules.crit.mrsa.insurance.days.tooltip.2";

    /** <pre>RULES_CRIT_MRSA_MEDGROUP_TOOLTIP_1
      * [en] 80 RSA relevante Krankheiten, die Von Bundesversicherungsamt definiert wurden. 3799 ICD-10 Codes wurden den Krankheiten zugeordnet (24_Anhang_4 der BVA Festlegungen)
      * [de] 80 RSA relevante Krankheiten, die Von Bundesversicherungsamt definiert wurden. 3799 ICD-10 Codes wurden den Krankheiten zugeordnet (24_Anhang_4 der BVA Festlegungen)</pre>
      */
    public static final String RULES_CRIT_MRSA_MEDGROUP_TOOLTIP_1 = "Rules.crit.mrsa.medgroup.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_MEDGROUP_TOOLTIP_2
      * [en] Format: 1 bis 2stellig, ganze Zahl (Beispiel: 18)
      * [de] Format: 1 bis 2stellig, ganze Zahl (Beispiel: 18)</pre>
      */
    public static final String RULES_CRIT_MRSA_MEDGROUP_TOOLTIP_2 = "Rules.crit.mrsa.medgroup.tooltip.2";

    /** <pre>RULES_CRIT_MRSA_OTHER_SERVICES_EXPENDURE_TOOLTIP_1
      * [en] Summe aller Ausgaben für Heil- und Hilfsmittel zu einem Versicherten (SA 700)
      * [de] Summe aller Ausgaben für Heil- und Hilfsmittel zu einem Versicherten (SA 700)</pre>
      */
    public static final String RULES_CRIT_MRSA_OTHER_SERVICES_EXPENDURE_TOOLTIP_1 = "Rules.crit.mrsa.other.services.expendure.tooltip.1";

    /** <pre>RULES_CRIT_MRSA_PUCKNUMBER_TOOLTIP
      * [en] Anzahl der Packungen zu einem Medikament
      * [de] Anzahl der Packungen zu einem Medikament</pre>
      */
    public static final String RULES_CRIT_MRSA_PUCKNUMBER_TOOLTIP = "Rules.crit.mrsa.pucknumber.tooltip";

    /** <pre>RULES_CRIT_MRSA_PZNCODE_TOOLTIP_2
      * [en] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können.
      * [de] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können.</pre>
      */
    public static final String RULES_CRIT_MRSA_PZNCODE_TOOLTIP_2 = "Rules.crit.mrsa.pzncode.tooltip.2";

    /** <pre>RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2
      * [en] Format: Fließkommazahl (Beispiel: 2.5)
      * [de] Format: Fließkommazahl (Beispiel: 2.5)</pre>
      * Attention! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_31_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_32_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_33_GESAMTPZNDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_43_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_44_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_45_GESAMTPZNDOSIERUNG!
      */
    public static final String RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2 = "Rules.crit.mrsa.pzndosage.tooltip.2";

    /** <pre>RULES_CRIT_MRSA_REDUCTION_EARNING_CAPACITY_TOOLTIP
      * [en] Anzahl der EMR-Versichertentage im Berichtsjahr
      * [de] Anzahl der EMR-Versichertentage im Berichtsjahr</pre>
      */
    public static final String RULES_CRIT_MRSA_REDUCTION_EARNING_CAPACITY_TOOLTIP = "Rules.crit.mrsa.reduction.earning.capacity.tooltip";

    /** <pre>RULES_CRIT_MRSA_SUPEREROGATION_DMP_EXPENDURE_TOOLTIP_1
      * [en] Summe aller Ausgaben für Mehrleistungen DMP zu einem Versicherten (SA 700)
      * [de] Summe aller Ausgaben für Mehrleistungen DMP zu einem Versicherten (SA 700)</pre>
      */
    public static final String RULES_CRIT_MRSA_SUPEREROGATION_DMP_EXPENDURE_TOOLTIP_1 = "Rules.crit.mrsa.supererogation.dmp.expendure.tooltip.1";

    /** <pre>RULES_CRIT_PCCL_TOOLTIP_10
      * [en] 6 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016
      * [de] 6 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016</pre>
      */
    public static final String RULES_CRIT_PCCL_TOOLTIP_10 = "Rules.crit.pccl.tooltip.10";

    /** <pre>RULES_CRIT_PCCL_TOOLTIP_2
      * [en] 0 - keine Komplikationen und Komorbiditäten (CC)
      * [de] 0 - keine Komplikationen und Komorbiditäten (CC)</pre>
      */
    public static final String RULES_CRIT_PCCL_TOOLTIP_2 = "Rules.crit.pccl.tooltip.2";

    /** <pre>RULES_CRIT_PCCL_TOOLTIP_3
      * [en] 1 - leichte Komplikationen und Komorbiditäten (CC)
      * [de] 1 - leichte Komplikationen und Komorbiditäten (CC)</pre>
      */
    public static final String RULES_CRIT_PCCL_TOOLTIP_3 = "Rules.crit.pccl.tooltip.3";

    /** <pre>RULES_CRIT_PCCL_TOOLTIP_4
      * [en] 2 - mäßig schwere Komplikationen und Komorbiditäten (CC)
      * [de] 2 - mäßig schwere Komplikationen und Komorbiditäten (CC)</pre>
      */
    public static final String RULES_CRIT_PCCL_TOOLTIP_4 = "Rules.crit.pccl.tooltip.4";

    /** <pre>RULES_CRIT_PCCL_TOOLTIP_5
      * [en] 3 - schwere Komplikationen und Komorbiditäten (CC)
      * [de] 3 - schwere Komplikationen und Komorbiditäten (CC)</pre>
      */
    public static final String RULES_CRIT_PCCL_TOOLTIP_5 = "Rules.crit.pccl.tooltip.5";

    /** <pre>RULES_CRIT_PCCL_TOOLTIP_6
      * [en] 4 - äußerst schwere Komplikationen und Komorbiditäten (CC)
      * [de] 4 - äußerst schwere Komplikationen und Komorbiditäten (CC)</pre>
      */
    public static final String RULES_CRIT_PCCL_TOOLTIP_6 = "Rules.crit.pccl.tooltip.6";

    /** <pre>RULES_CRIT_PCCL_TOOLTIP_9
      * [en] 5 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016
      * [de] 5 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016</pre>
      */
    public static final String RULES_CRIT_PCCL_TOOLTIP_9 = "Rules.crit.pccl.tooltip.9";

    /** <pre>RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_3
      * [en] R(1) - Rechts
      * [de] R(1) - Rechts</pre>
      */
    public static final String RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_3 = "Rules.crit.princ.diag.loc.tooltip.3";

    /** <pre>RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_4
      * [en] L(2) - Links
      * [de] L(2) - Links</pre>
      */
    public static final String RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_4 = "Rules.crit.princ.diag.loc.tooltip.4";

    /** <pre>RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_5
      * [en] B(3) - Beidseitig
      * [de] B(3) - Beidseitig</pre>
      */
    public static final String RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_5 = "Rules.crit.princ.diag.loc.tooltip.5";

    /** <pre>RULES_CRIT_PSYCHO_STATE_TOOLTIP_2
      * [en] 1 - freiwillig
      * [de] 1 - freiwillig</pre>
      */
    public static final String RULES_CRIT_PSYCHO_STATE_TOOLTIP_2 = "Rules.crit.psycho.state.tooltip.2";

    /** <pre>RULES_CRIT_PSYCHO_STATE_TOOLTIP_3
      * [en] 2 - unfreiwillig
      * [de] 2 - unfreiwillig</pre>
      */
    public static final String RULES_CRIT_PSYCHO_STATE_TOOLTIP_3 = "Rules.crit.psycho.state.tooltip.3";

    /** <pre>RULES_CRIT_RECHNUNG_ART_TOOLTIP_3
      * [en] 11 - Zwischenrechnung
      * [de] 11 - Zwischenrechnung</pre>
      */
    public static final String RULES_CRIT_RECHNUNG_ART_TOOLTIP_3 = "Rules.crit.rechnung.art.tooltip.3";

    /** <pre>RULES_CRIT_RECHNUNG_ART_TOOLTIP_4
      * [en] 12 - Schlußrechnung
      * [de] 12 - Schlußrechnung</pre>
      */
    public static final String RULES_CRIT_RECHNUNG_ART_TOOLTIP_4 = "Rules.crit.rechnung.art.tooltip.4";

    /** <pre>RULES_CRIT_RECHNUNG_ART_TOOLTIP_5
      * [en] 13 - Nachtragsrechnung
      * [de] 13 - Nachtragsrechnung</pre>
      */
    public static final String RULES_CRIT_RECHNUNG_ART_TOOLTIP_5 = "Rules.crit.rechnung.art.tooltip.5";

    /** <pre>RULES_CRIT_SK_TOOLTIP_1
      * [en] 'PRE' - Prä-Strukturkategorie (PEPP P001Z-PF02Z)
      * [de] 'PRE' - Prä-Strukturkategorie (PEPP P001Z-PF02Z)</pre>
      */
    public static final String RULES_CRIT_SK_TOOLTIP_1 = "Rules.crit.sk.tooltip.1";

    /** <pre>RULES_CRIT_SK_TOOLTIP_2
      * [en] 'TKJ' - Kinder- und Jugendpsychiatrie, teilstationär (PEPP TK04Z-TK99Z)
      * [de] 'TKJ' - Kinder- und Jugendpsychiatrie, teilstationär (PEPP TK04Z-TK99Z)</pre>
      */
    public static final String RULES_CRIT_SK_TOOLTIP_2 = "Rules.crit.sk.tooltip.2";

    /** <pre>RULES_CRIT_SK_TOOLTIP_3
      * [en] 'TPO' - Psychosomatik, teilstationär (PEPP TP20Z-TP99Z)
      * [de] 'TPO' - Psychosomatik, teilstationär (PEPP TP20Z-TP99Z)</pre>
      */
    public static final String RULES_CRIT_SK_TOOLTIP_3 = "Rules.crit.sk.tooltip.3";

    /** <pre>RULES_CRIT_SK_TOOLTIP_4
      * [en] 'TPY' - Psychiatrie, teilstationär (PEPP TA02Z-TA99Z)
      * [de] 'TPY' - Psychiatrie, teilstationär (PEPP TA02Z-TA99Z)</pre>
      */
    public static final String RULES_CRIT_SK_TOOLTIP_4 = "Rules.crit.sk.tooltip.4";

    /** <pre>RULES_CRIT_SK_TOOLTIP_5
      * [en] 'PKJ' - Kinder- und Jugendpsychiatrie, vollstationär (PEPP PK01Z-PK99Z)
      * [de] 'PKJ' - Kinder- und Jugendpsychiatrie, vollstationär (PEPP PK01Z-PK99Z)</pre>
      */
    public static final String RULES_CRIT_SK_TOOLTIP_5 = "Rules.crit.sk.tooltip.5";

    /** <pre>RULES_CRIT_SK_TOOLTIP_6
      * [en] 'PSO' - Psychosomatik, vollstationär (PEPP PP00Z-PP99Z)
      * [de] 'PSO' - Psychosomatik, vollstationär (PEPP PP00Z-PP99Z)</pre>
      */
    public static final String RULES_CRIT_SK_TOOLTIP_6 = "Rules.crit.sk.tooltip.6";

    /** <pre>RULES_CRIT_SK_TOOLTIP_7
      * [en] 'PSY' - Psychiatrie, vollstationär (PEPP PA01A-PA99Z)
      * [de] 'PSY' - Psychiatrie, vollstationär (PEPP PA01A-PA99Z)</pre>
      */
    public static final String RULES_CRIT_SK_TOOLTIP_7 = "Rules.crit.sk.tooltip.7";

    /** <pre>RULES_DIAGNOSELOKALISATION
      * [en] DiagnoseLokalisation
      * [de] DiagnoseLokalisation</pre>
      */
    public static final String RULES_DIAGNOSELOKALISATION = "Rules.diagnoselokalisation";

    /** <pre>RULES_DIAGNOSETYPE
      * [en] DiagnoseType
      * [de] DiagnoseType</pre>
      */
    public static final String RULES_DIAGNOSETYPE = "Rules.diagnosetype";

    /** <pre>RULES_DOSIERUNGSEINHEIT
      * [en] Dosierungseinheit
      * [de] Dosierungseinheit</pre>
      */
    public static final String RULES_DOSIERUNGSEINHEIT = "Rules.dosierungseinheit";

    /** <pre>RULES_DRG
      * [en] DRG
      * [de] DRG</pre>
      * Attention! this value ('DRG') seems to be also defined under the key CASE_RESOLVE_DRG! this value ('DRG') seems to be also defined under the key CASE_TYPE_DRG! this value ('DRG') seems to be also defined under the key DRG! this value ('DRG') seems to be also defined under the key DRG_SHORTCUT! this value ('DRG') seems to be also defined under the key FEE_GROUP_DRG! this value ('DRG') seems to be also defined under the key ICD_TYPE_DRG!
      */
    public static final String RULES_DRG = "Rules.drg";

    /** <pre>RULES_DRG_MDC
      * [en] MDC
      * [de] MDC</pre>
      * Attention! this value ('MDC') seems to be also defined under the key MDC!
      */
    public static final String RULES_DRG_MDC = "Rules.drg.mdc";

    /** <pre>RULES_DSA_PRIM_SEC_LIST_MODEL_DIAGNOSE
      * [en] Diagnose
      * [de] Diagnose</pre>
      */
    public static final String RULES_DSA_PRIM_SEC_LIST_MODEL_DIAGNOSE = "Rules.DsaPrimSecListModel.diagnose";

    /** <pre>RULES_EINWEISENDERARZT
      * [en] EinweisenderArzt
      * [de] EinweisenderArzt</pre>
      */
    public static final String RULES_EINWEISENDERARZT = "Rules.einweisenderarzt";

    /** <pre>RULES_EINWEISENDESKRANKENHAUS
      * [en] EinweisendesKrankenhaus
      * [de] EinweisendesKrankenhaus</pre>
      */
    public static final String RULES_EINWEISENDESKRANKENHAUS = "Rules.einweisendeskrankenhaus";

    /** <pre>RULES_ENTGELTABRECHNUNGBIS
      * [en] EntgeltabrechnungBis
      * [de] EntgeltabrechnungBis</pre>
      */
    public static final String RULES_ENTGELTABRECHNUNGBIS = "Rules.entgeltabrechnungbis";

    /** <pre>RULES_ENTGELTABRECHNUNGVON
      * [en] EntgeltabrechnungVon
      * [de] EntgeltabrechnungVon</pre>
      */
    public static final String RULES_ENTGELTABRECHNUNGVON = "Rules.entgeltabrechnungvon";

    /** <pre>RULES_ENTGELTANZAHLJEENTGELT
      * [en] EntgeltanzahlJeEntgelt
      * [de] EntgeltanzahlJeEntgelt</pre>
      */
    public static final String RULES_ENTGELTANZAHLJEENTGELT = "Rules.entgeltanzahljeentgelt";

    /** <pre>RULES_ENTGELTSUMME
      * [en] EntgeltSumme
      * [de] EntgeltSumme</pre>
      */
    public static final String RULES_ENTGELTSUMME = "Rules.entgeltsumme";

    /** <pre>RULES_ENTGELTSUMMEJEENTGELT
      * [en] EntgeltsummeJeEntgelt
      * [de] EntgeltsummeJeEntgelt</pre>
      */
    public static final String RULES_ENTGELTSUMMEJEENTGELT = "Rules.entgeltsummejeentgelt";

    /** <pre>RULES_ENTLASSENDEFACHABTEILUNG
      * [en] EntlassendeFachabteilung
      * [de] EntlassendeFachabteilung</pre>
      */
    public static final String RULES_ENTLASSENDEFACHABTEILUNG = "Rules.entlassendefachabteilung";

    /** <pre>RULES_GENDER_MASCULINE
      * [en] m
      * [de] m</pre>
      */
    public static final String RULES_GENDER_MASCULINE = "Rules.gender.masculine";

    /** <pre>RULES_GESAMTATCDOSIERUNG
      * [en] GesamtATCDosierung
      * [de] GesamtATCDosierung</pre>
      */
    public static final String RULES_GESAMTATCDOSIERUNG = "Rules.gesamtatcdosierung";

    /** <pre>RULES_GESAMTATCPREIS
      * [en] GesamtATCPreis
      * [de] GesamtATCPreis</pre>
      */
    public static final String RULES_GESAMTATCPREIS = "Rules.gesamtatcpreis";

    /** <pre>RULES_GESAMTMPREIS
      * [en] GesamtMPreis
      * [de] GesamtMPreis</pre>
      */
    public static final String RULES_GESAMTMPREIS = "Rules.gesamtmpreis";

    /** <pre>RULES_GESAMTPZNDOSIERUNG
      * [en] GesamtPZNDosierung
      * [de] GesamtPZNDosierung</pre>
      */
    public static final String RULES_GESAMTPZNDOSIERUNG = "Rules.gesamtpzndosierung";

    /** <pre>RULES_GESAMTPZNPREIS
      * [en] GesamtPZNPreis
      * [de] GesamtPZNPreis</pre>
      */
    public static final String RULES_GESAMTPZNPREIS = "Rules.gesamtpznpreis";

    /** <pre>RULES_GK_RSA_AGG
      * [en] GK_RSA_AGG
      * [de] GK_RSA_AGG</pre>
      */
    public static final String RULES_GK_RSA_AGG = "Rules.gk.rsa.agg";

    /** <pre>RULES_GK_RSA_ALTER
      * [en] GK_RSA_Alter
      * [de] GK_RSA_Alter</pre>
      */
    public static final String RULES_GK_RSA_ALTER = "Rules.gk.rsa.alter";

    /** <pre>RULES_GK_RSA_AMBULANTEDXG
      * [en] GK_RSA_AmbulanteDxG
      * [de] GK_RSA_AmbulanteDxG</pre>
      */
    public static final String RULES_GK_RSA_AMBULANTEDXG = "Rules.gk.rsa.ambulantedxg";

    /** <pre>RULES_GK_RSA_AMBULANTEHMGRELEVANTEDXG
      * [en] GK_RSA_AmbulanteHMGRelevanteDxG
      * [de] GK_RSA_AmbulanteHMGRelevanteDxG</pre>
      */
    public static final String RULES_GK_RSA_AMBULANTEHMGRELEVANTEDXG = "Rules.gk.rsa.ambulantehmgrelevantedxg";

    /** <pre>RULES_GK_RSA_AMBULANTEKRANKHEITSNUMMER
      * [en] GK_RSA_AmbulanteKrankheitsnummer
      * [de] GK_RSA_AmbulanteKrankheitsnummer</pre>
      */
    public static final String RULES_GK_RSA_AMBULANTEKRANKHEITSNUMMER = "Rules.gk.rsa.ambulantekrankheitsnummer";

    /** <pre>RULES_GK_RSA_APOTHEKENAUSGABEN
      * [en] GK_RSA_ApothekenAusgaben
      * [de] GK_RSA_ApothekenAusgaben</pre>
      */
    public static final String RULES_GK_RSA_APOTHEKENAUSGABEN = "Rules.gk.rsa.apothekenausgaben";

    /** <pre>RULES_GK_RSA_ARZTAUSGABEN
      * [en] GK_RSA_ArztAusgaben
      * [de] GK_RSA_ArztAusgaben</pre>
      */
    public static final String RULES_GK_RSA_ARZTAUSGABEN = "Rules.gk.rsa.arztausgaben";

    /** <pre>RULES_GK_RSA_ATCCODE
      * [en] GK_RSA_ATCCode
      * [de] GK_RSA_ATCCode</pre>
      */
    public static final String RULES_GK_RSA_ATCCODE = "Rules.gk.rsa.atccode";

    /** <pre>RULES_GK_RSA_AUSGABENGESAMT
      * [en] GK_RSA_AusgabenGesamt
      * [de] GK_RSA_AusgabenGesamt</pre>
      */
    public static final String RULES_GK_RSA_AUSGABENGESAMT = "Rules.gk.rsa.ausgabengesamt";

    /** <pre>RULES_GK_RSA_DDD
      * [en] GK_RSA_DDD
      * [de] GK_RSA_DDD</pre>
      */
    public static final String RULES_GK_RSA_DDD = "Rules.gk.rsa.ddd";

    /** <pre>RULES_GK_RSA_DIAGNOSEAMBULANT
      * [en] GK_RSA_DiagnoseAmbulant
      * [de] GK_RSA_DiagnoseAmbulant</pre>
      */
    public static final String RULES_GK_RSA_DIAGNOSEAMBULANT = "Rules.gk.rsa.diagnoseambulant";

    /** <pre>RULES_GK_RSA_DIAGNOSEAMBULANTHMGRELEVANT
      * [en] GK_RSA_DiagnoseAmbulantHMGRelevant
      * [de] GK_RSA_DiagnoseAmbulantHMGRelevant</pre>
      */
    public static final String RULES_GK_RSA_DIAGNOSEAMBULANTHMGRELEVANT = "Rules.gk.rsa.diagnoseambulanthmgrelevant";

    /** <pre>RULES_GK_RSA_DIAGNOSESTATIONAER
      * [en] GK_RSA_DiagnoseStationaer
      * [de] GK_RSA_DiagnoseStationaer</pre>
      */
    public static final String RULES_GK_RSA_DIAGNOSESTATIONAER = "Rules.gk.rsa.diagnosestationaer";

    /** <pre>RULES_GK_RSA_DIAGNOSESTATIONAERHMGRELEVANT
      * [en] GK_RSA_DiagnoseStationaerHMGRelevant
      * [de] GK_RSA_DiagnoseStationaerHMGRelevant</pre>
      */
    public static final String RULES_GK_RSA_DIAGNOSESTATIONAERHMGRELEVANT = "Rules.gk.rsa.diagnosestationaerhmgrelevant";

    /** <pre>RULES_GK_RSA_DMPTAGE
      * [en] GK_RSA_DMPTage
      * [de] GK_RSA_DMPTage</pre>
      */
    public static final String RULES_GK_RSA_DMPTAGE = "Rules.gk.rsa.dmptage";

    /** <pre>RULES_GK_RSA_DXG
      * [en] GK_RSA_DxG
      * [de] GK_RSA_DxG</pre>
      */
    public static final String RULES_GK_RSA_DXG = "Rules.gk.rsa.dxg";

    /** <pre>RULES_GK_RSA_ELRLOESGESAMT
      * [en] GK_RSA_ElrloesGesamt
      * [de] GK_RSA_ElrloesGesamt</pre>
      */
    public static final String RULES_GK_RSA_ELRLOESGESAMT = "Rules.gk.rsa.elrloesgesamt";

    /** <pre>RULES_GK_RSA_EMG
      * [en] GK_RSA_EMG
      * [de] GK_RSA_EMG</pre>
      */
    public static final String RULES_GK_RSA_EMG = "Rules.gk.rsa.emg";

    /** <pre>RULES_GK_RSA_ERWERBSMINDERUNGSTAGE
      * [en] GK_RSA_Erwerbsminderungstage
      * [de] GK_RSA_Erwerbsminderungstage</pre>
      */
    public static final String RULES_GK_RSA_ERWERBSMINDERUNGSTAGE = "Rules.gk.rsa.erwerbsminderungstage";

    /** <pre>RULES_GK_RSA_EXTBLUTREINIGUNGAUSGABEN
      * [en] GK_RSA_ExtBlutreinigungAusgaben
      * [de] GK_RSA_ExtBlutreinigungAusgaben</pre>
      */
    public static final String RULES_GK_RSA_EXTBLUTREINIGUNGAUSGABEN = "Rules.gk.rsa.extblutreinigungausgaben";

    /** <pre>RULES_GK_RSA_GESCHLECHT
      * [en] GK_RSA_Geschlecht
      * [de] GK_RSA_Geschlecht</pre>
      */
    public static final String RULES_GK_RSA_GESCHLECHT = "Rules.gk.rsa.geschlecht";

    /** <pre>RULES_GK_RSA_HAUPTDIAGNOSESTATIONAER
      * [en] GK_RSA_HauptdiagnoseStationaer
      * [de] GK_RSA_HauptdiagnoseStationaer</pre>
      */
    public static final String RULES_GK_RSA_HAUPTDIAGNOSESTATIONAER = "Rules.gk.rsa.hauptdiagnosestationaer";

    /** <pre>RULES_GK_RSA_HMG
      * [en] GK_RSA_HMG
      * [de] GK_RSA_HMG</pre>
      */
    public static final String RULES_GK_RSA_HMG = "Rules.gk.rsa.hmg";

    /** <pre>RULES_GK_RSA_HMGANZAHL
      * [en] GK_RSA_HMGAnzahl
      * [de] GK_RSA_HMGAnzahl</pre>
      */
    public static final String RULES_GK_RSA_HMGANZAHL = "Rules.gk.rsa.hmganzahl";

    /** <pre>RULES_GK_RSA_KHAUSGABEN
      * [en] GK_RSA_KHAusgaben
      * [de] GK_RSA_KHAusgaben</pre>
      */
    public static final String RULES_GK_RSA_KHAUSGABEN = "Rules.gk.rsa.khausgaben";

    /** <pre>RULES_GK_RSA_KRANKHEITSGRUPPE
      * [en] GK_RSA_Krankheitsgruppe
      * [de] GK_RSA_Krankheitsgruppe</pre>
      */
    public static final String RULES_GK_RSA_KRANKHEITSGRUPPE = "Rules.gk.rsa.krankheitsgruppe";

    /** <pre>RULES_GK_RSA_MEHRLEISTUNGDMP
      * [en] GK_RSA_MehrleistungDMP
      * [de] GK_RSA_MehrleistungDMP</pre>
      */
    public static final String RULES_GK_RSA_MEHRLEISTUNGDMP = "Rules.gk.rsa.mehrleistungdmp";

    /** <pre>RULES_GK_RSA_NEBENDIAGNOSESTATIONAER
      * [en] GK_RSA_NebendiagnoseStationaer
      * [de] GK_RSA_NebendiagnoseStationaer</pre>
      */
    public static final String RULES_GK_RSA_NEBENDIAGNOSESTATIONAER = "Rules.gk.rsa.nebendiagnosestationaer";

    /** <pre>RULES_GK_RSA_PACKUNGANZAHL
      * [en] GK_RSA_PackungAnzahl
      * [de] GK_RSA_PackungAnzahl</pre>
      */
    public static final String RULES_GK_RSA_PACKUNGANZAHL = "Rules.gk.rsa.packunganzahl";

    /** <pre>RULES_GK_RSA_PZNCODE
      * [en] GK_RSA_PZNCode
      * [de] GK_RSA_PZNCode</pre>
      */
    public static final String RULES_GK_RSA_PZNCODE = "Rules.gk.rsa.pzncode";

    /** <pre>RULES_GK_RSA_PZNGESAMTDOSIS
      * [en] GK_RSA_PZNGesamtdosis
      * [de] GK_RSA_PZNGesamtdosis</pre>
      */
    public static final String RULES_GK_RSA_PZNGESAMTDOSIS = "Rules.gk.rsa.pzngesamtdosis";

    /** <pre>RULES_GK_RSA_QUALIFIZIERUNGDIAGNOSENAMBULANT
      * [en] GK_RSA_QualifizierungDiagnosenAmbulant
      * [de] GK_RSA_QualifizierungDiagnosenAmbulant</pre>
      */
    public static final String RULES_GK_RSA_QUALIFIZIERUNGDIAGNOSENAMBULANT = "Rules.gk.rsa.qualifizierungdiagnosenambulant";

    /** <pre>RULES_GK_RSA_QUARTALDIAGNOSENAMBULANT
      * [en] GK_RSA_QuartalDiagnosenAmbulant
      * [de] GK_RSA_QuartalDiagnosenAmbulant</pre>
      */
    public static final String RULES_GK_RSA_QUARTALDIAGNOSENAMBULANT = "Rules.gk.rsa.quartaldiagnosenambulant";

    /** <pre>RULES_GK_RSA_SOLEASUGABEN
      * [en] GK_RSA_SoLeAsugaben
      * [de] GK_RSA_SoLeAsugaben</pre>
      */
    public static final String RULES_GK_RSA_SOLEASUGABEN = "Rules.gk.rsa.soleasugaben";

    /** <pre>RULES_GK_RSA_STATIONAEREDXG
      * [en] GK_RSA_StationaereDxG
      * [de] GK_RSA_StationaereDxG</pre>
      */
    public static final String RULES_GK_RSA_STATIONAEREDXG = "Rules.gk.rsa.stationaeredxg";

    /** <pre>RULES_GK_RSA_STATIONAEREHMGRELEVANTEDXG
      * [en] GK_RSA_StationaereHMGRelevanteDxG
      * [de] GK_RSA_StationaereHMGRelevanteDxG</pre>
      */
    public static final String RULES_GK_RSA_STATIONAEREHMGRELEVANTEDXG = "Rules.gk.rsa.stationaerehmgrelevantedxg";

    /** <pre>RULES_GK_RSA_STATIONAEREKRANKHEITSNUMMER
      * [en] GK_RSA_StationaereKrankheitsnummer
      * [de] GK_RSA_StationaereKrankheitsnummer</pre>
      */
    public static final String RULES_GK_RSA_STATIONAEREKRANKHEITSNUMMER = "Rules.gk.rsa.stationaerekrankheitsnummer";

    /** <pre>RULES_GK_RSA_VERSICHERTENTAGE
      * [en] GK_RSA_Versichertentage
      * [de] GK_RSA_Versichertentage</pre>
      */
    public static final String RULES_GK_RSA_VERSICHERTENTAGE = "Rules.gk.rsa.versichertentage";

    /** <pre>RULES_GK_RSA_VERSTORBEN
      * [en] GK_RSA_Verstorben
      * [de] GK_RSA_Verstorben</pre>
      */
    public static final String RULES_GK_RSA_VERSTORBEN = "Rules.gk.rsa.verstorben";

    /** <pre>RULES_GK_RSA_ZAHNARZTAUSGABEN
      * [en] GK_RSA_ZahnarztAusgaben
      * [de] GK_RSA_ZahnarztAusgaben</pre>
      */
    public static final String RULES_GK_RSA_ZAHNARZTAUSGABEN = "Rules.gk.rsa.zahnarztausgaben";

    /** <pre>RULES_GKCOSTS_NODE_COSTS
      * [en] Kosten
      * [de] Kosten</pre>
      */
    public static final String RULES_GKCOSTS_NODE_COSTS = "Rules.GKCostsNode.costs";

    /** <pre>RULES_GKMEDICINE_NODE_MEDICINE
      * [en] Medikamente
      * [de] Medikamente</pre>
      */
    public static final String RULES_GKMEDICINE_NODE_MEDICINE = "Rules.GKMedicineNode.medicine";

    /** <pre>RULES_GKSO_LE_NODE_OTHER_SERVICES
      * [en] Heil- und Hilfsmittel
      * [de] Heil- und Hilfsmittel</pre>
      */
    public static final String RULES_GKSO_LE_NODE_OTHER_SERVICES = "Rules.GKSoLeNode.otherServices";

    /** <pre>RULES_GLEICHENPROZEDURENANZAHL
      * [en] GleichenProzedurenAnzahl
      * [de] GleichenProzedurenAnzahl</pre>
      */
    public static final String RULES_GLEICHENPROZEDURENANZAHL = "Rules.gleichenprozedurenanzahl";

    /** <pre>RULES_GROUP_ACG_DISEASE_GROUPS_DIS
      * [en] Krankheitsgruppen
      * [de] Krankheitsgruppen</pre>
      */
    public static final String RULES_GROUP_ACG_DISEASE_GROUPS_DIS = "Rules.group.acg.disease.groups.dis";

    /** <pre>RULES_GROUP_CODING_DATA_HOSP_DATA_DIS
      * [en] Kodierung
      * [de] Kodierung</pre>
      */
    public static final String RULES_GROUP_CODING_DATA_HOSP_DATA_DIS = "Rules.group.coding.data.hosp.data.dis";

    /** <pre>RULES_GROUP_DIAG_GROUPS_MRSA_TOOLTIP
      * [en] Diagnosengruppen
      * [de] Diagnosengruppen</pre>
      */
    public static final String RULES_GROUP_DIAG_GROUPS_MRSA_TOOLTIP = "Rules.group.diag.groups.mrsa.tooltip";

    /** <pre>RULES_GROUP_DRGS_DATA_HOSP_DATA_DIS
      * [en] DRG-Ergebnis
      * [de] DRG-Ergebnis</pre>
      */
    public static final String RULES_GROUP_DRGS_DATA_HOSP_DATA_DIS = "Rules.group.drgs.data.hosp.data.dis";

    /** <pre>RULES_GROUP_DRGS_DATA_HOSP_DATA_TOOLTIP
      * [en] DRG-Ergebnisse
      * [de] DRG-Ergebnisse</pre>
      */
    public static final String RULES_GROUP_DRGS_DATA_HOSP_DATA_TOOLTIP = "Rules.group.drgs.data.hosp.data.tooltip";

    /** <pre>RULES_GROUP_EXPENDURE_MRSA_DIS
      * [en] Ausgaben
      * [de] Ausgaben</pre>
      */
    public static final String RULES_GROUP_EXPENDURE_MRSA_DIS = "Rules.group.expendure.mrsa.dis";

    /** <pre>RULES_GROUP_FEES_DATA_HOSP_DATA_TOOLTIP
      * [en] Entgelte
      * [de] Entgelte</pre>
      */
    public static final String RULES_GROUP_FEES_DATA_HOSP_DATA_TOOLTIP = "Rules.group.fees.data.hosp.data.tooltip";

    /** <pre>RULES_GROUP_FEES_TOOLTIP_10
      * [en] Entgeltliste: Entgeltabrechnung bis
      * [de] Entgeltliste: Entgeltabrechnung bis</pre>
      */
    public static final String RULES_GROUP_FEES_TOOLTIP_10 = "Rules.group.fees.tooltip.10";

    /** <pre>RULES_GROUP_FEES_TOOLTIP_11
      * [en] Entgeltliste: Entgeltanzahl je Entgelt
      * [de] Entgeltliste: Entgeltanzahl je Entgelt</pre>
      */
    public static final String RULES_GROUP_FEES_TOOLTIP_11 = "Rules.group.fees.tooltip.11";

    /** <pre>RULES_GROUP_FEES_TOOLTIP_13
      * [en] Grouperrelevant: Diagnose
      * [de] Grouperrelevant: Diagnose</pre>
      */
    public static final String RULES_GROUP_FEES_TOOLTIP_13 = "Rules.group.fees.tooltip.13";

    /** <pre>RULES_GROUP_FEES_TOOLTIP_14
      * [en] Grouperrelevant: Prozedur
      * [de] Grouperrelevant: Prozedur</pre>
      */
    public static final String RULES_GROUP_FEES_TOOLTIP_14 = "Rules.group.fees.tooltip.14";

    /** <pre>RULES_GROUP_FEES_TOOLTIP_22
      * [en] Summe der Entgelte
      * [de] Summe der Entgelte</pre>
      */
    public static final String RULES_GROUP_FEES_TOOLTIP_22 = "Rules.group.fees.tooltip.22";

    /** <pre>RULES_GROUP_FEES_TOOLTIP_23
      * [en] Zuschlags_CW
      * [de] Zuschlags_CW</pre>
      */
    public static final String RULES_GROUP_FEES_TOOLTIP_23 = "Rules.group.fees.tooltip.23";

    /** <pre>RULES_GROUP_FEES_TOOLTIP_3
      * [en] Abschlags_CW
      * [de] Abschlags_CW</pre>
      */
    public static final String RULES_GROUP_FEES_TOOLTIP_3 = "Rules.group.fees.tooltip.3";

    /** <pre>RULES_GROUP_FEES_TOOLTIP_7
      * [en] Entgeltliste: Entgeltart
      * [de] Entgeltliste: Entgeltart</pre>
      */
    public static final String RULES_GROUP_FEES_TOOLTIP_7 = "Rules.group.fees.tooltip.7";

    /** <pre>RULES_GROUP_FEES_TOOLTIP_8
      * [en] Entgeltliste: Entgelteinzelbetrag
      * [de] Entgeltliste: Entgelteinzelbetrag</pre>
      */
    public static final String RULES_GROUP_FEES_TOOLTIP_8 = "Rules.group.fees.tooltip.8";

    /** <pre>RULES_GROUP_FEES_TOOLTIP_9
      * [en] Entgeltliste: Entgeltabrechnung von
      * [de] Entgeltliste: Entgeltabrechnung von</pre>
      */
    public static final String RULES_GROUP_FEES_TOOLTIP_9 = "Rules.group.fees.tooltip.9";

    /** <pre>RULES_GROUP_INSURANT_MRSA_DIS
      * [en] Versichertendaten
      * [de] Versichertendaten</pre>
      */
    public static final String RULES_GROUP_INSURANT_MRSA_DIS = "Rules.group.insurant.mrsa.dis";

    /** <pre>RULES_GROUP_OTHERS_TOOLTIP_2
      * [en] Zeitangabe 'Jetzt'
      * [de] Zeitangabe 'Jetzt'</pre>
      */
    public static final String RULES_GROUP_OTHERS_TOOLTIP_2 = "Rules.group.others.tooltip.2";

    /** <pre>RULES_GROUP_PEPPS_DATA_HOSP_DATA_TOOLTIP
      * [en] PEPP-Ergebnisse
      * [de] PEPP-Ergebnisse</pre>
      */
    public static final String RULES_GROUP_PEPPS_DATA_HOSP_DATA_TOOLTIP = "Rules.group.pepps.data.hosp.data.tooltip";

    /** <pre>RULES_GROUP_REVENUE_MRSA_DIS
      * [en] Erlöse
      * [de] Erlöse</pre>
      */
    public static final String RULES_GROUP_REVENUE_MRSA_DIS = "Rules.group.revenue.mrsa.dis";

    /** <pre>RULES_GROUPERRELEVANTEDIAGNOSE
      * [en] GrouperrelevanteDiagnose
      * [de] GrouperrelevanteDiagnose</pre>
      */
    public static final String RULES_GROUPERRELEVANTEDIAGNOSE = "Rules.grouperrelevantediagnose";

    /** <pre>RULES_GROUPERRELEVANTEPROZEDUR
      * [en] GrouperrelevanteProzedur
      * [de] GrouperrelevanteProzedur</pre>
      */
    public static final String RULES_GROUPERRELEVANTEPROZEDUR = "Rules.grouperrelevanteprozedur";

    /** <pre>RULES_HAUPTDIAGNOSELOKALISATION
      * [en] HauptdiagnoseLokalisation
      * [de] HauptdiagnoseLokalisation</pre>
      */
    public static final String RULES_HAUPTDIAGNOSELOKALISATION = "Rules.hauptdiagnoselokalisation";

    /** <pre>RULES_HM_GESAMTMENGE
      * [en] hm_gesamtmenge
      * [de] hm_gesamtmenge</pre>
      */
    public static final String RULES_HM_GESAMTMENGE = "Rules.hm.gesamtmenge";

    /** <pre>RULES_HM_GESAMTPREIS
      * [en] hm_gesamtpreis
      * [de] hm_gesamtpreis</pre>
      */
    public static final String RULES_HM_GESAMTPREIS = "Rules.hm.gesamtpreis";

    /** <pre>RULES_HM_GESAMTPREIS_ALLE
      * [en] hm_gesamtPreis_alle
      * [de] hm_gesamtPreis_alle</pre>
      */
    public static final String RULES_HM_GESAMTPREIS_ALLE = "Rules.hm.gesamtpreis.alle";

    /** <pre>RULES_HM_MENGE
      * [en] hm_menge
      * [de] hm_menge</pre>
      */
    public static final String RULES_HM_MENGE = "Rules.hm.menge";

    /** <pre>RULES_HM_POSITIONSNUMMER
      * [en] hm_positionsnummer
      * [de] hm_positionsnummer</pre>
      */
    public static final String RULES_HM_POSITIONSNUMMER = "Rules.hm.positionsnummer";

    /** <pre>RULES_HM_PREIS
      * [en] hm_preis
      * [de] hm_preis</pre>
      */
    public static final String RULES_HM_PREIS = "Rules.hm.preis";

    /** <pre>RULES_HM_VERORDNUNGSDATUM
      * [en] hm_verordnungsdatum
      * [de] hm_verordnungsdatum</pre>
      */
    public static final String RULES_HM_VERORDNUNGSDATUM = "Rules.hm.verordnungsdatum";

    /** <pre>RULES_ICD_BEDINGUNG_GEKENNZEICHNET_DURCH_DIAGNOSE_CODE_AUSPRAEGUNG_CHRONISCHE_ERKRANKUNG
      * [en] rueckenbeschwerde=ICD - Bedingung gekennzeichnet durch Diagnose Code Ausprägung chronische Erkrankung:Rückenbeschwerden
      * [de] rueckenbeschwerde=ICD - Bedingung gekennzeichnet durch Diagnose Code Ausprägung chronische Erkrankung:Rückenbeschwerden</pre>
      */
    public static final String RULES_ICD_BEDINGUNG_GEKENNZEICHNET_DURCH_DIAGNOSE_CODE_AUSPRAEGUNG_CHRONISCHE_ERKRANKUNG = "Rules.icd.bedingung.gekennzeichnet.durch.diagnose.code.auspraegung.chronische.erkrankung";

    /** <pre>RULES_JETZT
      * [en] Jetzt
      * [de] Jetzt</pre>
      * Attention! this value ('jetzt') seems to be also defined under the key RULES_TXT_CRIT_NOW_TIME_DIS!
      */
    public static final String RULES_JETZT = "Rules.jetzt";

    /** <pre>RULES_KLINIK_ADRG
      * [en] Klinik_ADRG
      * [de] Klinik_ADRG</pre>
      */
    public static final String RULES_KLINIK_ADRG = "Rules.klinik.adrg";

    /** <pre>RULES_KLINIK_AUFNAHMEDATUM
      * [en] Klinik_Aufnahmedatum
      * [de] Klinik_Aufnahmedatum</pre>
      */
    public static final String RULES_KLINIK_AUFNAHMEDATUM = "Rules.klinik.aufnahmedatum";

    /** <pre>RULES_KLINIK_AUFNAHMEGRUND
      * [en] Klinik_Aufnahmegrund
      * [de] Klinik_Aufnahmegrund</pre>
      */
    public static final String RULES_KLINIK_AUFNAHMEGRUND = "Rules.klinik.aufnahmegrund";

    /** <pre>RULES_KLINIK_AUFNAHMEUHRZEIT
      * [en] Klinik_Aufnahmeuhrzeit
      * [de] Klinik_Aufnahmeuhrzeit</pre>
      */
    public static final String RULES_KLINIK_AUFNAHMEUHRZEIT = "Rules.klinik.aufnahmeuhrzeit";

    /** <pre>RULES_KLINIK_BEATMUNGSSTUNDEN
      * [en] Klinik_Beatmungsstunden
      * [de] Klinik_Beatmungsstunden</pre>
      */
    public static final String RULES_KLINIK_BEATMUNGSSTUNDEN = "Rules.klinik.beatmungsstunden";

    /** <pre>RULES_KLINIK_DRG
      * [en] Klinik_DRG
      * [de] Klinik_DRG</pre>
      */
    public static final String RULES_KLINIK_DRG = "Rules.klinik.drg";

    /** <pre>RULES_KLINIK_ENTGELTANZAHL
      * [en] Klinik_Entgeltanzahl
      * [de] Klinik_Entgeltanzahl</pre>
      */
    public static final String RULES_KLINIK_ENTGELTANZAHL = "Rules.klinik.entgeltanzahl";

    /** <pre>RULES_KLINIK_ENTGELTART
      * [en] Klinik_Entgeltart
      * [de] Klinik_Entgeltart</pre>
      */
    public static final String RULES_KLINIK_ENTGELTART = "Rules.klinik.entgeltart";

    /** <pre>RULES_KLINIK_ENTGELTBEREICH
      * [en] Klinik_Entgeltbereich
      * [de] Klinik_Entgeltbereich</pre>
      */
    public static final String RULES_KLINIK_ENTGELTBEREICH = "Rules.klinik.entgeltbereich";

    /** <pre>RULES_KLINIK_ENTGELTBETRAG
      * [en] Klinik_Entgeltbetrag
      * [de] Klinik_Entgeltbetrag</pre>
      */
    public static final String RULES_KLINIK_ENTGELTBETRAG = "Rules.klinik.entgeltbetrag";

    /** <pre>RULES_KLINIK_ENTLASSUNGSDATUM
      * [en] Klinik_Entlassungsdatum
      * [de] Klinik_Entlassungsdatum</pre>
      */
    public static final String RULES_KLINIK_ENTLASSUNGSDATUM = "Rules.klinik.entlassungsdatum";

    /** <pre>RULES_KLINIK_ENTLASSUNGSGRUND
      * [en] Klinik_Entlassungsgrund
      * [de] Klinik_Entlassungsgrund</pre>
      */
    public static final String RULES_KLINIK_ENTLASSUNGSGRUND = "Rules.klinik.entlassungsgrund";

    /** <pre>RULES_KLINIK_ENTLASSUNGSUHRZEIT
      * [en] Klinik_Entlassungsuhrzeit
      * [de] Klinik_Entlassungsuhrzeit</pre>
      */
    public static final String RULES_KLINIK_ENTLASSUNGSUHRZEIT = "Rules.klinik.entlassungsuhrzeit";

    /** <pre>RULES_KLINIK_FALLANZAHL
      * [en] Klinik_Fallanzahl
      * [de] Klinik_Fallanzahl</pre>
      */
    public static final String RULES_KLINIK_FALLANZAHL = "Rules.klinik.fallanzahl";

    /** <pre>RULES_KLINIK_FALLKOSTEN
      * [en] Klinik_Fallkosten
      * [de] Klinik_Fallkosten</pre>
      */
    public static final String RULES_KLINIK_FALLKOSTEN = "Rules.klinik.fallkosten";

    /** <pre>RULES_KLINIK_HAUPTDIAGNOSE
      * [en] Klinik_Hauptdiagnose
      * [de] Klinik_Hauptdiagnose</pre>
      */
    public static final String RULES_KLINIK_HAUPTDIAGNOSE = "Rules.klinik.hauptdiagnose";

    /** <pre>RULES_KLINIK_IKZ
      * [en] Klinik_IKZ
      * [de] Klinik_IKZ</pre>
      */
    public static final String RULES_KLINIK_IKZ = "Rules.klinik.ikz";

    /** <pre>RULES_KLINIK_NEBENDIAGNOSE
      * [en] Klinik_Nebendiagnose
      * [de] Klinik_Nebendiagnose</pre>
      */
    public static final String RULES_KLINIK_NEBENDIAGNOSE = "Rules.klinik.nebendiagnose";

    /** <pre>RULES_KLINIK_OGVD
      * [en] Klinik_oGVD
      * [de] Klinik_oGVD</pre>
      */
    public static final String RULES_KLINIK_OGVD = "Rules.klinik.ogvd";

    /** <pre>RULES_KLINIK_PARTITION
      * [en] Klinik_Partition
      * [de] Klinik_Partition</pre>
      */
    public static final String RULES_KLINIK_PARTITION = "Rules.klinik.partition";

    /** <pre>RULES_KLINIK_PEPP
      * [en] Klinik_PEPP
      * [de] Klinik_PEPP</pre>
      */
    public static final String RULES_KLINIK_PEPP = "Rules.klinik.pepp";

    /** <pre>RULES_KLINIK_PROZEDUR
      * [en] Klinik_Prozedur
      * [de] Klinik_Prozedur</pre>
      */
    public static final String RULES_KLINIK_PROZEDUR = "Rules.klinik.prozedur";

    /** <pre>RULES_KLINIK_SK
      * [en] Klinik_SK
      * [de] Klinik_SK</pre>
      */
    public static final String RULES_KLINIK_SK = "Rules.klinik.sk";

    /** <pre>RULES_KLINIK_UGVD
      * [en] Klinik_uGVD
      * [de] Klinik_uGVD</pre>
      */
    public static final String RULES_KLINIK_UGVD = "Rules.klinik.ugvd";

    /** <pre>RULES_KLINIK_VERWEILDAUER
      * [en] Klinik_Verweildauer
      * [de] Klinik_Verweildauer</pre>
      */
    public static final String RULES_KLINIK_VERWEILDAUER = "Rules.klinik.verweildauer";

    /** <pre>RULES_KLINIK_VWD_STUNDEN
      * [en] Klinik_Vwd_Stunden
      * [de] Klinik_Vwd_Stunden</pre>
      */
    public static final String RULES_KLINIK_VWD_STUNDEN = "Rules.klinik.vwd.stunden";

    /** <pre>RULES_KOSTENGEWICHT_EFFEKTIV
      * [en] Kostengewicht_effektiv
      * [de] Kostengewicht_effektiv</pre>
      */
    public static final String RULES_KOSTENGEWICHT_EFFEKTIV = "Rules.kostengewicht.effektiv";

    /** <pre>RULES_KOSTENGEWICHT_KATALOG
      * [en] Kostengewicht_Katalog
      * [de] Kostengewicht_Katalog</pre>
      */
    public static final String RULES_KOSTENGEWICHT_KATALOG = "Rules.kostengewicht.katalog";

    /** <pre>RULES_LABORBESCHREIBUNG
      * [en] Laborbeschreibung
      * [de] Laborbeschreibung</pre>
      */
    public static final String RULES_LABORBESCHREIBUNG = "Rules.laborbeschreibung";

    /** <pre>RULES_LABOREINHEIT
      * [en] Laboreinheit
      * [de] Laboreinheit</pre>
      */
    public static final String RULES_LABOREINHEIT = "Rules.laboreinheit";

    /** <pre>RULES_MENU_MASTER_DATES
      * [en] Stammdaten
      * [de] Stammdaten</pre>
      */
    public static final String RULES_MENU_MASTER_DATES = "Rules.menu.master.dates";

    /** <pre>RULES_MITTLERE_VERWEILDAUER
      * [en] mittlere_Verweildauer
      * [de] mittlere_Verweildauer</pre>
      */
    public static final String RULES_MITTLERE_VERWEILDAUER = "Rules.mittlere.verweildauer";

    /** <pre>RULES_MPREIS
      * [en] MPreis
      * [de] MPreis</pre>
      */
    public static final String RULES_MPREIS = "Rules.mpreis";

    /** <pre>RULES_MVERORDNUNGSDATUM
      * [en] MVerordnungsdatum
      * [de] MVerordnungsdatum</pre>
      */
    public static final String RULES_MVERORDNUNGSDATUM = "Rules.mverordnungsdatum";

    /** <pre>RULES_NEBENDIAGNOSELOKALISATION
      * [en] NebendiagnoseLokalisation
      * [de] NebendiagnoseLokalisation</pre>
      */
    public static final String RULES_NEBENDIAGNOSELOKALISATION = "Rules.nebendiagnoselokalisation";

    /** <pre>RULES_NEBENDIAGNOSETYPE
      * [en] NebendiagnoseType
      * [de] NebendiagnoseType</pre>
      */
    public static final String RULES_NEBENDIAGNOSETYPE = "Rules.nebendiagnosetype";

    /** <pre>RULES_OBERE_GRENZVERWEILDAUER
      * [en] obere_Grenzverweildauer
      * [de] obere_Grenzverweildauer</pre>
      */
    public static final String RULES_OBERE_GRENZVERWEILDAUER = "Rules.obere.grenzverweildauer";

    /** <pre>RULES_PEPP_GROUPERSTATE
      * [en] PEPP
      * [de] PEPP</pre>
      * Attention! this value ('PEPP') seems to be also defined under the key CASE_TYPE_PEPP!
      */
    public static final String RULES_PEPP_GROUPERSTATE = "Rules.pepp.grouperstate";

    /** <pre>RULES_PFLEGECWTAG
      * [en] PflegeCWTag
      * [de] PflegeCWTag</pre>
      */
    public static final String RULES_PFLEGECWTAG = "Rules.pflegecwtag";

    /** <pre>RULES_PFLEGETAGE
      * [en] Pflegetage
      * [de] Pflegetage</pre>
      * Attention! this value ('Pflegetage') seems to be also defined under the key RULES_CASE_CASE_DAYS!
      */
    public static final String RULES_PFLEGETAGE = "Rules.pflegetage";

    /** <pre>RULES_PFLEGETAGEDRG
      * [en] PflegetageDRG
      * [de] PflegetageDRG</pre>
      */
    public static final String RULES_PFLEGETAGEDRG = "Rules.pflegetagedrg";

    /** <pre>RULES_PRUEFDATUM_1_AUFNAHMEDATUM
      * [en] Prüfdatum1 (Aufnahmedatum)
      * [de] Prüfdatum1 (Aufnahmedatum)</pre>
      */
    public static final String RULES_PRUEFDATUM_1_AUFNAHMEDATUM = "Rules.pruefdatum1.aufnahmedatum";

    /** <pre>RULES_PRUEFDATUM_2_ENTLASSUNGSDATUM
      * [en] Prüfdatum2 (Entlassungsdatum)
      * [de] Prüfdatum2 (Entlassungsdatum)</pre>
      */
    public static final String RULES_PRUEFDATUM_2_ENTLASSUNGSDATUM = "Rules.pruefdatum2.entlassungsdatum";

    /** <pre>RULES_PZNCODE
      * [en] PZNCode
      * [de] PZNCode</pre>
      */
    public static final String RULES_PZNCODE = "Rules.pzncode";

    /** <pre>RULES_SEKDIAGNOSE
      * [en] SekDiagnose
      * [de] SekDiagnose</pre>
      */
    public static final String RULES_SEKDIAGNOSE = "Rules.sekdiagnose";

    /** <pre>RULES_SEKDIAGNOSELOKALISATION
      * [en] SekDiagnoseLokalisation
      * [de] SekDiagnoseLokalisation</pre>
      */
    public static final String RULES_SEKDIAGNOSELOKALISATION = "Rules.sekdiagnoselokalisation";

    /** <pre>RULES_SEKDIAGNOSEPRIM
      * [en] SekDiagnosePrim
      * [de] SekDiagnosePrim</pre>
      */
    public static final String RULES_SEKDIAGNOSEPRIM = "Rules.sekdiagnoseprim";

    /** <pre>RULES_SEKDIAGNOSETYPE
      * [en] SekDiagnoseType
      * [de] SekDiagnoseType</pre>
      */
    public static final String RULES_SEKDIAGNOSETYPE = "Rules.sekdiagnosetype";

    /** <pre>RULES_SUPERGROUP_ACG_TOOLTIP
      * [en] ACG
      * [de] ACG</pre>
      */
    public static final String RULES_SUPERGROUP_ACG_TOOLTIP = "Rules.supergroup.acg.tooltip";

    /** <pre>RULES_SUPERGROUP_AMBU_DATA_TOOLTIP
      * [en] ambulante Daten
      * [de] ambulante Daten</pre>
      */
    public static final String RULES_SUPERGROUP_AMBU_DATA_TOOLTIP = "Rules.supergroup.ambu.data.tooltip";

    /** <pre>RULES_SUPERGROUP_DATA_CASE_TOOLTIP
      * [en] Krankenhausdaten
      * [de] Krankenhausdaten</pre>
      */
    public static final String RULES_SUPERGROUP_DATA_CASE_TOOLTIP = "Rules.supergroup.data.case.tooltip";

    /** <pre>RULES_SUPERGROUP_GK_RSA_DIS
      * [en] GK RSA Prüfung
      * [de] GK RSA Prüfung</pre>
      */
    public static final String RULES_SUPERGROUP_GK_RSA_DIS = "Rules.supergroup.gk.rsa.dis";

    /** <pre>RULES_SUPERGROUP_HOSP_CASE_TOOLTIP
      * [en] Krankenhaus-Einzellfall
      * [de] Krankenhaus-Einzellfall</pre>
      */
    public static final String RULES_SUPERGROUP_HOSP_CASE_TOOLTIP = "Rules.supergroup.hosp.case.tooltip";

    /** <pre>RULES_SUPERGROUP_MRSA_DIS
      * [en] Morbi RSA
      * [de] Morbi RSA</pre>
      */
    public static final String RULES_SUPERGROUP_MRSA_DIS = "Rules.supergroup.mrsa.dis";

    /** <pre>RULES_TAGDERENTBINDUNG_1
      * [en] TagDerEntbindung1
      * [de] TagDerEntbindung1</pre>
      */
    public static final String RULES_TAGDERENTBINDUNG_1 = "Rules.tagderentbindung1";

    /** <pre>RULES_TAGDERENTBINDUNG_2
      * [en] TagDerEntbindung2
      * [de] TagDerEntbindung2</pre>
      */
    public static final String RULES_TAGDERENTBINDUNG_2 = "Rules.tagderentbindung2";

    /** <pre>RULES_TAGEOHNEBERECHNUNG
      * [en] TageOhneBerechnung
      * [de] TageOhneBerechnung</pre>
      */
    public static final String RULES_TAGEOHNEBERECHNUNG = "Rules.tageohneberechnung";

    /** <pre>RULES_TAGEOHNEBERECHNUNGPROENTGELT
      * [en] TageOhneBerechnungProEntgelt
      * [de] TageOhneBerechnungProEntgelt</pre>
      */
    public static final String RULES_TAGEOHNEBERECHNUNGPROENTGELT = "Rules.tageohneberechnungproentgelt";

    /** <pre>RULES_TEMP_100_RECHNUNGSDATUM
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_100_RECHNUNGSDATUM = "Rules.temp.100.rechnungsdatum";

    /** <pre>RULES_TEMP_101_ENTGELTSUMME
      * [en] Format: Währung (Beispiel: 2200.55)
      * [de] Format: Währung (Beispiel: 2200.55)</pre>
      */
    public static final String RULES_TEMP_101_ENTGELTSUMME = "Rules.temp.101.entgeltsumme";

    /** <pre>RULES_TEMP_102_TAGEOHNEBERECHNUNGPROENTGELT
      * [en] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen. Erfasst am DRG - Entgeltschlüssel für den §301 Datensatz.
      * [de] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen. Erfasst am DRG - Entgeltschlüssel für den §301 Datensatz.</pre>
      */
    public static final String RULES_TEMP_102_TAGEOHNEBERECHNUNGPROENTGELT = "Rules.temp.102.tageohneberechnungproentgelt";

    /** <pre>RULES_TEMP_103_TAGEOHNEBERECHNUNGPROENTGELT
      * [en] Format: Ganzzahlig (Beispiel 3)
      * [de] Format: Ganzzahlig (Beispiel 3)</pre>
      */
    public static final String RULES_TEMP_103_TAGEOHNEBERECHNUNGPROENTGELT = "Rules.temp.103.tageohneberechnungproentgelt";

    /** <pre>RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER
      * [en] Format: Ganzzahlig (Beispiel 2)
      * [de] Format: Ganzzahlig (Beispiel 2)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
      */
    public static final String RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER = "Rules.temp.104.untere.grenzverweildauer";

    /** <pre>RULES_TEMP_105_ZUSCHLAGSTAGE
      * [en] Format: Ganzzahlig (Beispiel 5)
      * [de] Format: Ganzzahlig (Beispiel 5)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_128_INTENSIVVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_281_VERSICHERTER_ALTER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_55_ALTERINTAGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_60_ANZAHLABTEILUNGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_96_MITTLERE_VERWEILDAUER!
      */
    public static final String RULES_TEMP_105_ZUSCHLAGSTAGE = "Rules.temp.105.zuschlagstage";

    /** <pre>RULES_TEMP_106_AUFNAHMEDATUM
      * [en] Die Uhrzeit der Aufnahme wird nicht berücksichtigt
      * [de] Die Uhrzeit der Aufnahme wird nicht berücksichtigt</pre>
      * Attention! this value ('Die Uhrzeit der Aufnahme wird nicht berücksichtigt') seems to be also defined under the key RULES_TEMP_170_KLINIK_AUFNAHMEDATUM!
      */
    public static final String RULES_TEMP_106_AUFNAHMEDATUM = "Rules.temp.106.aufnahmedatum";

    /** <pre>RULES_TEMP_107_AUFNAHMEDATUM
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_107_AUFNAHMEDATUM = "Rules.temp.107.aufnahmedatum";

    /** <pre>RULES_TEMP_108_AUFNAHMEDATUM_MIT_UHRZEIT
      * [en] Die Uhrzeit der Aufnahme wird mitberücksichtigt
      * [de] Die Uhrzeit der Aufnahme wird mitberücksichtigt</pre>
      * Attention! this value ('Die Uhrzeit der Aufnahme wird mitberücksichtigt') seems to be also defined under the key RULES_TEMP_173_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT!
      */
    public static final String RULES_TEMP_108_AUFNAHMEDATUM_MIT_UHRZEIT = "Rules.temp.108.aufnahmedatum.mit.uhrzeit";

    /** <pre>RULES_TEMP_109_AUFNAHMEDATUM_MIT_UHRZEIT
      * [en] Format: YYYYMMDD HH:mm
      * [de] Format: YYYYMMDD HH:mm</pre>
      * Attention! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_120_ENTLASSUNGSDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_174_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_183_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT!
      */
    public static final String RULES_TEMP_109_AUFNAHMEDATUM_MIT_UHRZEIT = "Rules.temp.109.aufnahmedatum.mit.uhrzeit";

    /** <pre>RULES_TEMP_10_HE_MENGE
      * [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.
      * [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.</pre>
      * Attention! this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_23_HM_MENGE! this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_25_HM_MENGE!
      */
    public static final String RULES_TEMP_10_HE_MENGE = "Rules.temp.10.he.menge";

    /** <pre>RULES_TEMP_110_AUFNAHMEJAHR
      * [en] Format: YYYY
      * [de] Format: YYYY</pre>
      * Attention! this value ('Format: YYYY') seems to be also defined under the key RULES_TEMP_121_ENTLASSUNGSJAHR!
      */
    public static final String RULES_TEMP_110_AUFNAHMEJAHR = "Rules.temp.110.aufnahmejahr";

    /** <pre>RULES_TEMP_111_AUFNAHMEMONAT
      * [en] Format: MM
      * [de] Format: MM</pre>
      * Attention! this value ('Format: MM') seems to be also defined under the key RULES_TEMP_122_ENTLASSUNGSMONAT!
      */
    public static final String RULES_TEMP_111_AUFNAHMEMONAT = "Rules.temp.111.aufnahmemonat";

    /** <pre>RULES_TEMP_112_AUFNAHMETAG
      * [en] Format: DD
      * [de] Format: DD</pre>
      * Attention! this value ('Format: DD') seems to be also defined under the key RULES_TEMP_123_ENTLASSUNGSTAG!
      */
    public static final String RULES_TEMP_112_AUFNAHMETAG = "Rules.temp.112.aufnahmetag";

    /** <pre>RULES_TEMP_113_AUFNAHMEUHRZEIT
      * [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
      * [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten</pre>
      * Attention! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_124_ENTLASSUNGSUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_176_KLINIK_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_185_KLINIK_ENTLASSUNGSUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_70_VERLEGUNGSUHRZEIT!
      */
    public static final String RULES_TEMP_113_AUFNAHMEUHRZEIT = "Rules.temp.113.aufnahmeuhrzeit";

    /** <pre>RULES_TEMP_114_BEATMUNGSDAUER
      * [en] Format: Ganzzahlig (Beispiel 30)
      * [de] Format: Ganzzahlig (Beispiel 30)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 30)') seems to be also defined under the key RULES_TEMP_177_KLINIK_BEATMUNGSSTUNDEN!
      */
    public static final String RULES_TEMP_114_BEATMUNGSDAUER = "Rules.temp.114.beatmungsdauer";

    /** <pre>RULES_TEMP_115_EINWEISENDERARZT
      * [en] Format: 9-stellig numerisch (Beispiel: 123456789)
      * [de] Format: 9-stellig numerisch (Beispiel: 123456789)</pre>
      * Attention! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_116_EINWEISENDESKRANKENHAUS! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_127_INSTITUTIONSKENNZEICHEN! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_129_KRANKENKASSE! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_190_KLINIK_IKZ!
      */
    public static final String RULES_TEMP_115_EINWEISENDERARZT = "Rules.temp.115.einweisenderarzt";

    /** <pre>RULES_TEMP_116_EINWEISENDESKRANKENHAUS
      * [en] Format: 9-stellig numerisch (Beispiel: 123456789)
      * [de] Format: 9-stellig numerisch (Beispiel: 123456789)</pre>
      * Attention! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_115_EINWEISENDERARZT! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_127_INSTITUTIONSKENNZEICHEN! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_129_KRANKENKASSE! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_190_KLINIK_IKZ!
      */
    public static final String RULES_TEMP_116_EINWEISENDESKRANKENHAUS = "Rules.temp.116.einweisendeskrankenhaus";

    /** <pre>RULES_TEMP_117_ENTLASSUNGSDATUM
      * [en] Die Uhrzeit der Entlassung wird nicht berücksichtigt
      * [de] Die Uhrzeit der Entlassung wird nicht berücksichtigt</pre>
      * Attention! this value ('Die Uhrzeit der Entlassung wird nicht berücksichtigt') seems to be also defined under the key RULES_TEMP_179_KLINIK_ENTLASSUNGSDATUM!
      */
    public static final String RULES_TEMP_117_ENTLASSUNGSDATUM = "Rules.temp.117.entlassungsdatum";

    /** <pre>RULES_TEMP_118_ENTLASSUNGSDATUM
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_118_ENTLASSUNGSDATUM = "Rules.temp.118.entlassungsdatum";

    /** <pre>RULES_TEMP_119_ENTLASSUNGSDATUM_MIT_UHRZEIT
      * [en] Die Uhrzeit der Entlassung wird mitberücksichtigt
      * [de] Die Uhrzeit der Entlassung wird mitberücksichtigt</pre>
      * Attention! this value ('Die Uhrzeit der Entlassung wird mitberücksichtigt') seems to be also defined under the key RULES_TEMP_182_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT!
      */
    public static final String RULES_TEMP_119_ENTLASSUNGSDATUM_MIT_UHRZEIT = "Rules.temp.119.entlassungsdatum.mit.uhrzeit";

    /** <pre>RULES_TEMP_11_HE_MENGE
      * [en] Format: numerisch (Beispiel: 5)
      * [de] Format: numerisch (Beispiel: 5)</pre>
      * Attention! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_17_HM_GESAMTMENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_24_HM_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_26_HM_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_4_HE_GESAMTMENGE!
      */
    public static final String RULES_TEMP_11_HE_MENGE = "Rules.temp.11.he.menge";

    /** <pre>RULES_TEMP_120_ENTLASSUNGSDATUM_MIT_UHRZEIT
      * [en] Format: YYYYMMDD HH:mm
      * [de] Format: YYYYMMDD HH:mm</pre>
      * Attention! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_109_AUFNAHMEDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_174_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_183_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT!
      */
    public static final String RULES_TEMP_120_ENTLASSUNGSDATUM_MIT_UHRZEIT = "Rules.temp.120.entlassungsdatum.mit.uhrzeit";

    /** <pre>RULES_TEMP_121_ENTLASSUNGSJAHR
      * [en] Format: YYYY
      * [de] Format: YYYY</pre>
      * Attention! this value ('Format: YYYY') seems to be also defined under the key RULES_TEMP_110_AUFNAHMEJAHR!
      */
    public static final String RULES_TEMP_121_ENTLASSUNGSJAHR = "Rules.temp.121.entlassungsjahr";

    /** <pre>RULES_TEMP_122_ENTLASSUNGSMONAT
      * [en] Format: MM
      * [de] Format: MM</pre>
      * Attention! this value ('Format: MM') seems to be also defined under the key RULES_TEMP_111_AUFNAHMEMONAT!
      */
    public static final String RULES_TEMP_122_ENTLASSUNGSMONAT = "Rules.temp.122.entlassungsmonat";

    /** <pre>RULES_TEMP_123_ENTLASSUNGSTAG
      * [en] Format: DD
      * [de] Format: DD</pre>
      * Attention! this value ('Format: DD') seems to be also defined under the key RULES_TEMP_112_AUFNAHMETAG!
      */
    public static final String RULES_TEMP_123_ENTLASSUNGSTAG = "Rules.temp.123.entlassungstag";

    /** <pre>RULES_TEMP_124_ENTLASSUNGSUHRZEIT
      * [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
      * [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten</pre>
      * Attention! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_113_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_176_KLINIK_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_185_KLINIK_ENTLASSUNGSUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_70_VERLEGUNGSUHRZEIT!
      */
    public static final String RULES_TEMP_124_ENTLASSUNGSUHRZEIT = "Rules.temp.124.entlassungsuhrzeit";

    /** <pre>RULES_TEMP_125_FALLNUMMER
      * [en] Fallnummer dient mit dem IK des Krankenhauses zur eindeutigen Bestimmung des Behandlungsfalls. Mit der Vergabe des KH-internen Kennzeichens muß die eindeutige Identifikation des Behandlungsfalls sichergestellt sein. Es ist in der Regel die fortlaufend vergebene Aufnahmenummer.
      * [de] Fallnummer dient mit dem IKZ des Krankenhauses zur eindeutigen Bestimmung des Behandlungsfalls. Mit der Vergabe des KH-internen Kennzeichens muß die eindeutige Identifikation des Behandlungsfalls sichergestellt sein. Es ist in der Regel die fortlaufend vergebene Aufnahmenummer.</pre>
      */
    public static final String RULES_TEMP_125_FALLNUMMER = "Rules.temp.125.fallnummer";

    /** <pre>RULES_TEMP_126_INSTITUTIONSKENNZEICHEN
      * [en] Alle Einrichtungen, die Leistungen nach dem Sozialgesetzbuch (SGB) erbringen, erhalten auf Antrag ein IK. Systematik einer IK: die ersten 2 Ziffern kennzeichnen die Art der Einrichtung, die Ziffern 3 und 4 kennzeichnen das Bundesland der Einrichtung, die Ziffer 5 bis 8 werden fortlaufend vergeben, die Ziffer 9 dient als Prüfziffer.
      * [de] Alle Einrichtungen, die Leistungen nach dem Sozialgesetzbuch (SGB) erbringen, erhalten auf Antrag ein IK. Systematik einer IK: die ersten 2 Ziffern kennzeichnen die Art der Einrichtung, die Ziffern 3 und 4 kennzeichnen das Bundesland der Einrichtung, die Ziffer 5 bis 8 werden fortlaufend vergeben, die Ziffer 9 dient als Prüfziffer.</pre>
      */
    public static final String RULES_TEMP_126_INSTITUTIONSKENNZEICHEN = "Rules.temp.126.institutionskennzeichen";

    /** <pre>RULES_TEMP_127_INSTITUTIONSKENNZEICHEN
      * [en] Format: 9-stellig numerisch (Beispiel: 123456789)
      * [de] Format: 9-stellig numerisch (Beispiel: 123456789)</pre>
      * Attention! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_115_EINWEISENDERARZT! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_116_EINWEISENDESKRANKENHAUS! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_129_KRANKENKASSE! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_190_KLINIK_IKZ!
      */
    public static final String RULES_TEMP_127_INSTITUTIONSKENNZEICHEN = "Rules.temp.127.institutionskennzeichen";

    /** <pre>RULES_TEMP_128_INTENSIVVERWEILDAUER
      * [en] Format: Ganzzahlig (Beispiel 5)
      * [de] Format: Ganzzahlig (Beispiel 5)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_105_ZUSCHLAGSTAGE! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_281_VERSICHERTER_ALTER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_55_ALTERINTAGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_60_ANZAHLABTEILUNGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_96_MITTLERE_VERWEILDAUER!
      */
    public static final String RULES_TEMP_128_INTENSIVVERWEILDAUER = "Rules.temp.128.intensivverweildauer";

    /** <pre>RULES_TEMP_129_KRANKENKASSE
      * [en] Format: 9-stellig numerisch (Beispiel: 123456789)
      * [de] Format: 9-stellig numerisch (Beispiel: 123456789)</pre>
      * Attention! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_115_EINWEISENDERARZT! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_116_EINWEISENDESKRANKENHAUS! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_127_INSTITUTIONSKENNZEICHEN! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_190_KLINIK_IKZ!
      */
    public static final String RULES_TEMP_129_KRANKENKASSE = "Rules.temp.129.krankenkasse";

    /** <pre>RULES_TEMP_12_HE_VERORDNUNGSDATUM
      * [en] Datum, an dem das Hilfsmittel verordnet wurde.
      * [de] Datum, an dem das Hilfsmittel verordnet wurde.</pre>
      * Attention! this value ('Datum, an dem das Hilfsmittel verordnet wurde.') seems to be also defined under the key RULES_TEMP_27_HM_VERORDNUNGSDATUM!
      */
    public static final String RULES_TEMP_12_HE_VERORDNUNGSDATUM = "Rules.temp.12.he.verordnungsdatum";

    /** <pre>RULES_TEMP_130_TAGDERENTBINDUNG_1
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_130_TAGDERENTBINDUNG_1 = "Rules.temp.130.tagderentbindung1";

    /** <pre>RULES_TEMP_131_TAGDERENTBINDUNG_2
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_131_TAGDERENTBINDUNG_2 = "Rules.temp.131.tagderentbindung2";

    /** <pre>RULES_TEMP_132_TAGEOHNEBERECHNUNG
      * [en] Format: Format: Ganzzahlig (Beispiel 3)
      * [de] Format: Format: Ganzzahlig (Beispiel 3)</pre>
      */
    public static final String RULES_TEMP_132_TAGEOHNEBERECHNUNG = "Rules.temp.132.tageohneberechnung";

    /** <pre>RULES_TEMP_133_URLAUB
      * [en] Eine Beurlaubung liegt vor, wenn ein Patient mit Zustimmung des behandelnden Krankenhausarztes die Krankenhausbehandlung zeitlich befristet unterbricht, die stationäre Behandlung jedoch noch nicht abgeschlossen ist. Wird ein Patient beurlaubt, sind die vollständigen Urlaubstage, d. h. nicht der Tag des Urlaubsantritts bzw. - Endes, in der Rechnung auszuweisen. Vollständige Urlaubstage fließen nicht in die Berechnung der Verweildauer ein. Die Abrechnung erfolgt über die Entgeltgruppe 43.
      * [de] Eine Beurlaubung liegt vor, wenn ein Patient mit Zustimmung des behandelnden Krankenhausarztes die Krankenhausbehandlung zeitlich befristet unterbricht, die stationäre Behandlung jedoch noch nicht abgeschlossen ist. Wird ein Patient beurlaubt, sind die vollständigen Urlaubstage, d. h. nicht der Tag des Urlaubsantritts bzw. - Endes, in der Rechnung auszuweisen. Vollständige Urlaubstage fließen nicht in die Berechnung der Verweildauer ein. Die Abrechnung erfolgt über die Entgeltgruppe 43.</pre>
      */
    public static final String RULES_TEMP_133_URLAUB = "Rules.temp.133.urlaub";

    /** <pre>RULES_TEMP_134_URLAUB
      * [en] Format: Ganzzahlig (Beispiel 2)
      * [de] Format: Ganzzahlig (Beispiel 2)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
      */
    public static final String RULES_TEMP_134_URLAUB = "Rules.temp.134.urlaub";

    /** <pre>RULES_TEMP_135_VERWEILDAUER
      * [en] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.
      * [de] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.</pre>
      * Attention! this value ('Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_191_KLINIK_VERWEILDAUER! this value ('Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_193_KLINIK_VWD_STUNDEN!
      */
    public static final String RULES_TEMP_135_VERWEILDAUER = "Rules.temp.135.verweildauer";

    /** <pre>RULES_TEMP_136_VERWEILDAUER
      * [en] Format: Ganzzahlig (Beispiel 2)
      * [de] Format: Ganzzahlig (Beispiel 2)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
      */
    public static final String RULES_TEMP_136_VERWEILDAUER = "Rules.temp.136.verweildauer";

    /** <pre>RULES_TEMP_137_VERWEILDAUERINSTUNDEN
      * [en] Format: Ganzzahlig (Beispiel 50)
      * [de] Format: Ganzzahlig (Beispiel 50)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 50)') seems to be also defined under the key RULES_TEMP_54_ALTERINJAHREN! this value ('Format: Ganzzahlig (Beispiel 50)') seems to be also defined under the key RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_2!
      */
    public static final String RULES_TEMP_137_VERWEILDAUERINSTUNDEN = "Rules.temp.137.verweildauerinstunden";

    /** <pre>RULES_TEMP_138_GLEICHENPROZEDURENANZAHL
      * [en] Format: Ganzzahlig (Beispiel 4)
      * [de] Format: Ganzzahlig (Beispiel 4)</pre>
      */
    public static final String RULES_TEMP_138_GLEICHENPROZEDURENANZAHL = "Rules.temp.138.gleichenprozedurenanzahl";

    /** <pre>RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN
      * [en] Format: Ganzzahlig (Beispiel 2)
      * [de] Format: Ganzzahlig (Beispiel 2)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
      */
    public static final String RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN = "Rules.temp.139.anzahlnebendiagnosen";

    /** <pre>RULES_TEMP_13_HE_VERORDNUNGSDATUM
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_13_HE_VERORDNUNGSDATUM = "Rules.temp.13.he.verordnungsdatum";

    /** <pre>RULES_TEMP_140_ANZAHLPROZEDUREN
      * [en] Format: Ganzzahlig (Beispiel 2)
      * [de] Format: Ganzzahlig (Beispiel 2)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
      */
    public static final String RULES_TEMP_140_ANZAHLPROZEDUREN = "Rules.temp.140.anzahlprozeduren";

    /** <pre>RULES_TEMP_141_AUFNAHMEDIAGNOSE
      * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
      * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
      * Attention! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
      */
    public static final String RULES_TEMP_141_AUFNAHMEDIAGNOSE = "Rules.temp.141.aufnahmediagnose";

    /** <pre>RULES_TEMP_142_DIAGNOSE
      * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
      * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
      * Attention! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
      */
    public static final String RULES_TEMP_142_DIAGNOSE = "Rules.temp.142.diagnose";

    /** <pre>RULES_TEMP_143_HAUPTDIAGNOSE
      * [en] Die Diagnose, welche nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
      * [de] Die Diagnose, welche nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.</pre>
      */
    public static final String RULES_TEMP_143_HAUPTDIAGNOSE = "Rules.temp.143.hauptdiagnose";

    /** <pre>RULES_TEMP_144_HAUPTDIAGNOSE
      * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
      * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
      * Attention! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
      */
    public static final String RULES_TEMP_144_HAUPTDIAGNOSE = "Rules.temp.144.hauptdiagnose";

    /** <pre>RULES_TEMP_145_NEBENDIAGNOSE
      * [en] Eine Krankheit oder Beschwerde, die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
      * [de] Eine Krankheit oder Beschwerde, die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.</pre>
      */
    public static final String RULES_TEMP_145_NEBENDIAGNOSE = "Rules.temp.145.nebendiagnose";

    /** <pre>RULES_TEMP_146_NEBENDIAGNOSE
      * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
      * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
      * Attention! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
      */
    public static final String RULES_TEMP_146_NEBENDIAGNOSE = "Rules.temp.146.nebendiagnose";

    /** <pre>RULES_TEMP_147_OPSDATUM
      * [en] Format: YYYYMMDD; nur in Verbindung mit einem Prozedurenkode sinnvoll
      * [de] Format: YYYYMMDD; nur in Verbindung mit einem Prozedurenkode sinnvoll</pre>
      */
    public static final String RULES_TEMP_147_OPSDATUM = "Rules.temp.147.opsdatum";

    /** <pre>RULES_TEMP_148_PROZEDUR
      * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)
      * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)</pre>
      * Attention! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)') seems to be also defined under the key RULES_TEMP_157_KLINIK_PROZEDUR! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)') seems to be also defined under the key RULES_TEMP_90_GROUPERRELEVANTEPROZEDUR!
      */
    public static final String RULES_TEMP_148_PROZEDUR = "Rules.temp.148.prozedur";

    /** <pre>RULES_TEMP_149_SEKDIAGNOSE
      * [en] z.B. N08.3* Glomeruläre Krankheiten bei Diabetes mellitus oder U81! Bakterien mit Multiresistenz gegen Antibiotika
      * [de] z.B. N08.3* Glomeruläre Krankheiten bei Diabetes mellitus oder U81! Bakterien mit Multiresistenz gegen Antibiotika</pre>
      */
    public static final String RULES_TEMP_149_SEKDIAGNOSE = "Rules.temp.149.sekdiagnose";

    /** <pre>RULES_TEMP_14_HM_PREIS
      * [en] Die Kosten des Hilfsmittels.
      * [de] Die Kosten des Hilfsmittels.</pre>
      * Attention! this value ('Die Kosten des Hilfsmittels.') seems to be also defined under the key RULES_TEMP_1_HE_PREIS!
      */
    public static final String RULES_TEMP_14_HM_PREIS = "Rules.temp.14.hm.preis";

    /** <pre>RULES_TEMP_150_SEKDIAGNOSE
      * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
      * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
      * Attention! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
      */
    public static final String RULES_TEMP_150_SEKDIAGNOSE = "Rules.temp.150.sekdiagnose";

    /** <pre>RULES_TEMP_151_SEKDIAGNOSEPRIM
      * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
      * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
      * Attention! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
      */
    public static final String RULES_TEMP_151_SEKDIAGNOSEPRIM = "Rules.temp.151.sekdiagnoseprim";

    /** <pre>RULES_TEMP_152_KLINIK_HAUPTDIAGNOSE
      * [en] Klinische Daten: Siehe Hauptdiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
      * [de] Klinische Daten: Siehe Hauptdiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.</pre>
      */
    public static final String RULES_TEMP_152_KLINIK_HAUPTDIAGNOSE = "Rules.temp.152.klinik.hauptdiagnose";

    /** <pre>RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE
      * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
      * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
      * Attention! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
      */
    public static final String RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE = "Rules.temp.153.klinik.hauptdiagnose";

    /** <pre>RULES_TEMP_154_KLINIK_NEBENDIAGNOSE
      * [en] Klinische Daten: Siehe Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
      * [de] Klinische Daten: Siehe Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.</pre>
      */
    public static final String RULES_TEMP_154_KLINIK_NEBENDIAGNOSE = "Rules.temp.154.klinik.nebendiagnose";

    /** <pre>RULES_TEMP_155_KLINIK_NEBENDIAGNOSE
      * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
      * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
      * Attention! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
      */
    public static final String RULES_TEMP_155_KLINIK_NEBENDIAGNOSE = "Rules.temp.155.klinik.nebendiagnose";

    /** <pre>RULES_TEMP_156_KLINIK_PROZEDUR
      * [en] Klinische Daten: Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.
      * [de] Klinische Daten: Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.</pre>
      */
    public static final String RULES_TEMP_156_KLINIK_PROZEDUR = "Rules.temp.156.klinik.prozedur";

    /** <pre>RULES_TEMP_157_KLINIK_PROZEDUR
      * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)
      * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)</pre>
      * Attention! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)') seems to be also defined under the key RULES_TEMP_148_PROZEDUR! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)') seems to be also defined under the key RULES_TEMP_90_GROUPERRELEVANTEPROZEDUR!
      */
    public static final String RULES_TEMP_157_KLINIK_PROZEDUR = "Rules.temp.157.klinik.prozedur";

    /** <pre>RULES_TEMP_158_KLINIK_ADRG
      * [en] Klinische Daten: Basis - DRG: DRG ohne letzte Stelle (für Schweregrad).
      * [de] Klinische Daten: Basis - DRG: DRG ohne letzte Stelle (für Schweregrad).</pre>
      */
    public static final String RULES_TEMP_158_KLINIK_ADRG = "Rules.temp.158.klinik.adrg";

    /** <pre>RULES_TEMP_159_KLINIK_ADRG
      * [en] Format: Alphanumerisch (Beispiele: A11 oder B75)
      * [de] Format: Alphanumerisch (Beispiele: A11 oder B75)</pre>
      * Attention! this value ('Format: Alphanumerisch (Beispiele: A11 oder B75)') seems to be also defined under the key RULES_TEMP_75_ADRG!
      */
    public static final String RULES_TEMP_159_KLINIK_ADRG = "Rules.temp.159.klinik.adrg";

    /** <pre>RULES_TEMP_15_HM_PREIS
      * [en] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)
      * [de] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)</pre>
      * Attention! this value ('Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_2_HE_PREIS!
      */
    public static final String RULES_TEMP_15_HM_PREIS = "Rules.temp.15.hm.preis";

    /** <pre>RULES_TEMP_160_KLINIK_DRG
      * [en] Format: Alphanumerisch (Beispiele: A11B oder B75A)
      * [de] Format: Alphanumerisch (Beispiele: A11B oder B75A)</pre>
      * Attention! this value ('Format: Alphanumerisch (Beispiele: A11B oder B75A)') seems to be also defined under the key RULES_TEMP_81_DRG!
      */
    public static final String RULES_TEMP_160_KLINIK_DRG = "Rules.temp.160.klinik.drg";

    /** <pre>RULES_TEMP_161_KLINIK_OGVD
      * [en] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.
      * [de] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.</pre>
      * Attention! this value ('Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.') seems to be also defined under the key RULES_TEMP_97_OBERE_GRENZVERWEILDAUER!
      */
    public static final String RULES_TEMP_161_KLINIK_OGVD = "Rules.temp.161.klinik.ogvd";

    /** <pre>RULES_TEMP_162_KLINIK_OGVD
      * [en] Format: Ganzzahlig (Beispiel 15)
      * [de] Format: Ganzzahlig (Beispiel 15)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 15)') seems to be also defined under the key RULES_TEMP_98_OBERE_GRENZVERWEILDAUER!
      */
    public static final String RULES_TEMP_162_KLINIK_OGVD = "Rules.temp.162.klinik.ogvd";

    /** <pre>RULES_TEMP_163_KLINIK_UGVD
      * [en] Format: Ganzzahlig (Beispiel 2)
      * [de] Format: Ganzzahlig (Beispiel 2)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
      */
    public static final String RULES_TEMP_163_KLINIK_UGVD = "Rules.temp.163.klinik.ugvd";

    /** <pre>RULES_TEMP_164_KLINIK_PEPP
      * [en] Klinische Daten:Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik
      * [de] Klinische Daten:Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik</pre>
      */
    public static final String RULES_TEMP_164_KLINIK_PEPP = "Rules.temp.164.klinik.pepp";

    /** <pre>RULES_TEMP_165_KLINIK_PEPP
      * [en] Format: Aplhanumerisch (Beispiele P003B, TK04Z)
      * [de] Format: Aplhanumerisch (Beispiele P003B, TK04Z)</pre>
      * Attention! this value ('Format: Aplhanumerisch (Beispiele P003B, TK04Z)') seems to be also defined under the key RULES_TEMP_99_PEPP!
      */
    public static final String RULES_TEMP_165_KLINIK_PEPP = "Rules.temp.165.klinik.pepp";

    /** <pre>RULES_TEMP_166_KLINIK_ENTGELTANZAHL
      * [en] Format: Ganzzahlig (Beispiel 2)
      * [de] Format: Ganzzahlig (Beispiel 2)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
      */
    public static final String RULES_TEMP_166_KLINIK_ENTGELTANZAHL = "Rules.temp.166.klinik.entgeltanzahl";

    /** <pre>RULES_TEMP_167_KLINIK_ENTGELTART
      * [en] Format: alphanumerisch 8-stellig (Beispiel: 48000001)
      * [de] Format: alphanumerisch 8-stellig (Beispiel: 48000001)</pre>
      * Attention! this value ('Format: alphanumerisch 8-stellig (Beispiel: 48000001)') seems to be also defined under the key RULES_TEMP_82_ENTGELT!
      */
    public static final String RULES_TEMP_167_KLINIK_ENTGELTART = "Rules.temp.167.klinik.entgeltart";

    /** <pre>RULES_TEMP_168_FALL_NUMERIC_10
      * [de] Fall.Numeric10</pre>
      * Attention! this value ('Fall.Numeric10') seems to be also defined under the key RULES_TEMP_52_FALL_NUMERIC_10!
      */
    public static final String RULES_TEMP_168_FALL_NUMERIC_10 = "Rules.temp.168.fall.numeric10";

    /** <pre>RULES_TEMP_168_KLINIK_ENTGELTBETRAG
      * [en] Format: Währung (Beispiel: 57.52)
      * [de] Format: Währung (Beispiel: 57.52)</pre>
      * Attention! this value ('Format: Währung (Beispiel: 57.52)') seems to be also defined under the key RULES_TEMP_86_ENTGELTEINZELBETRAG!
      */
    public static final String RULES_TEMP_168_KLINIK_ENTGELTBETRAG = "Rules.temp.168.klinik.entgeltbetrag";

    /** <pre>RULES_TEMP_169_FALL_NUMERIC_6
      * [de] Fall.Numeric6</pre>
      * Attention! this value ('Fall.Numeric6') seems to be also defined under the key RULES_TEMP_53_FALL_NUMERIC_6!
      */
    public static final String RULES_TEMP_169_FALL_NUMERIC_6 = "Rules.temp.169.fall.numeric6";

    /** <pre>RULES_TEMP_169_KLINIK_AUFNAHMEDATUM
      * [en] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
      * [de] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.</pre>
      * Attention! this value ('Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.') seems to be also defined under the key RULES_TEMP_172_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT!
      */
    public static final String RULES_TEMP_169_KLINIK_AUFNAHMEDATUM = "Rules.temp.169.klinik.aufnahmedatum";

    /** <pre>RULES_TEMP_16_HM_GESAMTMENGE
      * [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.
      * [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.</pre>
      * Attention! this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.') seems to be also defined under the key RULES_TEMP_3_HE_GESAMTMENGE!
      */
    public static final String RULES_TEMP_16_HM_GESAMTMENGE = "Rules.temp.16.hm.gesamtmenge";

    /** <pre>RULES_TEMP_170_FALL_NUMERIC_7
      * [de] Fall.Numeric7</pre>
      * Attention! this value ('Fall.Numeric7') seems to be also defined under the key RULES_TEMP_54_FALL_NUMERIC_7!
      */
    public static final String RULES_TEMP_170_FALL_NUMERIC_7 = "Rules.temp.170.fall.numeric7";

    /** <pre>RULES_TEMP_170_KLINIK_AUFNAHMEDATUM
      * [en] Die Uhrzeit der Aufnahme wird nicht berücksichtigt
      * [de] Die Uhrzeit der Aufnahme wird nicht berücksichtigt</pre>
      * Attention! this value ('Die Uhrzeit der Aufnahme wird nicht berücksichtigt') seems to be also defined under the key RULES_TEMP_106_AUFNAHMEDATUM!
      */
    public static final String RULES_TEMP_170_KLINIK_AUFNAHMEDATUM = "Rules.temp.170.klinik.aufnahmedatum";

    /** <pre>RULES_TEMP_171_FALL_NUMERIC_8
      * [de] Fall.Numeric8</pre>
      * Attention! this value ('Fall.Numeric8') seems to be also defined under the key RULES_TEMP_55_FALL_NUMERIC_8!
      */
    public static final String RULES_TEMP_171_FALL_NUMERIC_8 = "Rules.temp.171.fall.numeric8";

    /** <pre>RULES_TEMP_171_KLINIK_AUFNAHMEDATUM
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_171_KLINIK_AUFNAHMEDATUM = "Rules.temp.171.klinik.aufnahmedatum";

    /** <pre>RULES_TEMP_172_FALL_NUMERIC_9
      * [de] Fall.Numeric9</pre>
      * Attention! this value ('Fall.Numeric9') seems to be also defined under the key RULES_TEMP_56_FALL_NUMERIC_9!
      */
    public static final String RULES_TEMP_172_FALL_NUMERIC_9 = "Rules.temp.172.fall.numeric9";

    /** <pre>RULES_TEMP_172_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT
      * [en] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
      * [de] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.</pre>
      * Attention! this value ('Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.') seems to be also defined under the key RULES_TEMP_169_KLINIK_AUFNAHMEDATUM!
      */
    public static final String RULES_TEMP_172_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT = "Rules.temp.172.klinik.aufnahmedatum.mit.uhrzeit";

    /** <pre>RULES_TEMP_173_FALL_STRING_10
      * [de] Fall.String10</pre>
      * Attention! this value ('Fall.String10') seems to be also defined under the key RULES_TEMP_57_FALL_STRING_10!
      */
    public static final String RULES_TEMP_173_FALL_STRING_10 = "Rules.temp.173.fall.string10";

    /** <pre>RULES_TEMP_173_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT
      * [en] Die Uhrzeit der Aufnahme wird mitberücksichtigt
      * [de] Die Uhrzeit der Aufnahme wird mitberücksichtigt</pre>
      * Attention! this value ('Die Uhrzeit der Aufnahme wird mitberücksichtigt') seems to be also defined under the key RULES_TEMP_108_AUFNAHMEDATUM_MIT_UHRZEIT!
      */
    public static final String RULES_TEMP_173_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT = "Rules.temp.173.klinik.aufnahmedatum.mit.uhrzeit";

    /** <pre>RULES_TEMP_174_FALL_STRING_6
      * [de] Fall.String6</pre>
      * Attention! this value ('Fall.String6') seems to be also defined under the key RULES_TEMP_58_FALL_STRING_6!
      */
    public static final String RULES_TEMP_174_FALL_STRING_6 = "Rules.temp.174.fall.string6";

    /** <pre>RULES_TEMP_174_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT
      * [en] Format: YYYYMMDD HH:mm
      * [de] Format: YYYYMMDD HH:mm</pre>
      * Attention! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_109_AUFNAHMEDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_120_ENTLASSUNGSDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_183_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT!
      */
    public static final String RULES_TEMP_174_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT = "Rules.temp.174.klinik.aufnahmedatum.mit.uhrzeit";

    /** <pre>RULES_TEMP_175_FALL_STRING_7
      * [de] Fall.String7</pre>
      * Attention! this value ('Fall.String7') seems to be also defined under the key RULES_TEMP_59_FALL_STRING_7!
      */
    public static final String RULES_TEMP_175_FALL_STRING_7 = "Rules.temp.175.fall.string7";

    /** <pre>RULES_TEMP_175_KLINIK_AUFNAHMEUHRZEIT
      * [en] Klinische Daten: Aufnahmeuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
      * [de] Klinische Daten: Aufnahmeuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.</pre>
      */
    public static final String RULES_TEMP_175_KLINIK_AUFNAHMEUHRZEIT = "Rules.temp.175.klinik.aufnahmeuhrzeit";

    /** <pre>RULES_TEMP_176_FALL_STRING_8
      * [de] Fall.String8</pre>
      * Attention! this value ('Fall.String8') seems to be also defined under the key RULES_TEMP_60_FALL_STRING_8!
      */
    public static final String RULES_TEMP_176_FALL_STRING_8 = "Rules.temp.176.fall.string8";

    /** <pre>RULES_TEMP_176_KLINIK_AUFNAHMEUHRZEIT
      * [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
      * [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten</pre>
      * Attention! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_113_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_124_ENTLASSUNGSUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_185_KLINIK_ENTLASSUNGSUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_70_VERLEGUNGSUHRZEIT!
      */
    public static final String RULES_TEMP_176_KLINIK_AUFNAHMEUHRZEIT = "Rules.temp.176.klinik.aufnahmeuhrzeit";

    /** <pre>RULES_TEMP_177_FALL_STRING_9
      * [de] Fall.String9</pre>
      * Attention! this value ('Fall.String9') seems to be also defined under the key RULES_TEMP_61_FALL_STRING_9!
      */
    public static final String RULES_TEMP_177_FALL_STRING_9 = "Rules.temp.177.fall.string9";

    /** <pre>RULES_TEMP_177_KLINIK_BEATMUNGSSTUNDEN
      * [en] Format: Ganzzahlig (Beispiel 30)
      * [de] Format: Ganzzahlig (Beispiel 30)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 30)') seems to be also defined under the key RULES_TEMP_114_BEATMUNGSDAUER!
      */
    public static final String RULES_TEMP_177_KLINIK_BEATMUNGSSTUNDEN = "Rules.temp.177.klinik.beatmungsstunden";

    /** <pre>RULES_TEMP_178_KLINIK_ENTLASSUNGSDATUM
      * [en] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
      * [de] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.</pre>
      * Attention! this value ('Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.') seems to be also defined under the key RULES_TEMP_181_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT!
      */
    public static final String RULES_TEMP_178_KLINIK_ENTLASSUNGSDATUM = "Rules.temp.178.klinik.entlassungsdatum";

    /** <pre>RULES_TEMP_179_KLINIK_ENTLASSUNGSDATUM
      * [en] Die Uhrzeit der Entlassung wird nicht berücksichtigt
      * [de] Die Uhrzeit der Entlassung wird nicht berücksichtigt</pre>
      * Attention! this value ('Die Uhrzeit der Entlassung wird nicht berücksichtigt') seems to be also defined under the key RULES_TEMP_117_ENTLASSUNGSDATUM!
      */
    public static final String RULES_TEMP_179_KLINIK_ENTLASSUNGSDATUM = "Rules.temp.179.klinik.entlassungsdatum";

    /** <pre>RULES_TEMP_17_HM_GESAMTMENGE
      * [en] Format: numerisch (Beispiel: 5)
      * [de] Format: numerisch (Beispiel: 5)</pre>
      * Attention! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_11_HE_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_24_HM_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_26_HM_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_4_HE_GESAMTMENGE!
      */
    public static final String RULES_TEMP_17_HM_GESAMTMENGE = "Rules.temp.17.hm.gesamtmenge";

    /** <pre>RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM = "Rules.temp.180.klinik.entlassungsdatum";

    /** <pre>RULES_TEMP_181_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT
      * [en] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
      * [de] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.</pre>
      * Attention! this value ('Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.') seems to be also defined under the key RULES_TEMP_178_KLINIK_ENTLASSUNGSDATUM!
      */
    public static final String RULES_TEMP_181_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT = "Rules.temp.181.klinik.entlassungsdatum.mit.uhrzeit";

    /** <pre>RULES_TEMP_182_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT
      * [en] Die Uhrzeit der Entlassung wird mitberücksichtigt
      * [de] Die Uhrzeit der Entlassung wird mitberücksichtigt</pre>
      * Attention! this value ('Die Uhrzeit der Entlassung wird mitberücksichtigt') seems to be also defined under the key RULES_TEMP_119_ENTLASSUNGSDATUM_MIT_UHRZEIT!
      */
    public static final String RULES_TEMP_182_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT = "Rules.temp.182.klinik.entlassungsdatum.mit.uhrzeit";

    /** <pre>RULES_TEMP_183_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT
      * [en] Format: YYYYMMDD HH:mm
      * [de] Format: YYYYMMDD HH:mm</pre>
      * Attention! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_109_AUFNAHMEDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_120_ENTLASSUNGSDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_174_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT!
      */
    public static final String RULES_TEMP_183_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT = "Rules.temp.183.klinik.entlassungsdatum.mit.uhrzeit";

    /** <pre>RULES_TEMP_184_KLINIK_ENTLASSUNGSUHRZEIT
      * [en] Klinische Daten: Entlassungsuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
      * [de] Klinische Daten: Entlassungsuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.</pre>
      */
    public static final String RULES_TEMP_184_KLINIK_ENTLASSUNGSUHRZEIT = "Rules.temp.184.klinik.entlassungsuhrzeit";

    /** <pre>RULES_TEMP_185_KLINIK_ENTLASSUNGSUHRZEIT
      * [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
      * [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten</pre>
      * Attention! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_113_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_124_ENTLASSUNGSUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_176_KLINIK_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_70_VERLEGUNGSUHRZEIT!
      */
    public static final String RULES_TEMP_185_KLINIK_ENTLASSUNGSUHRZEIT = "Rules.temp.185.klinik.entlassungsuhrzeit";

    /** <pre>RULES_TEMP_186_KLINIK_FALLANZAHL
      * [en] Klinische Daten: Die Summe der Fälle eines Patienten.
      * [de] Klinische Daten: Die Summe der Fälle eines Patienten.</pre>
      */
    public static final String RULES_TEMP_186_KLINIK_FALLANZAHL = "Rules.temp.186.klinik.fallanzahl";

    /** <pre>RULES_TEMP_187_KLINIK_FALLANZAHL
      * [en] Format: Ganzzahlig (Beispiel 2)
      * [de] Format: Ganzzahlig (Beispiel 2)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
      */
    public static final String RULES_TEMP_187_KLINIK_FALLANZAHL = "Rules.temp.187.klinik.fallanzahl";

    /** <pre>RULES_TEMP_188_KLINIK_FALLKOSTEN
      * [en] Klinische Daten: Gesamtkosten enes Falls
      * [de] Klinische Daten: Gesamtkosten enes Falls</pre>
      */
    public static final String RULES_TEMP_188_KLINIK_FALLKOSTEN = "Rules.temp.188.klinik.fallkosten";

    /** <pre>RULES_TEMP_189_KLINIK_IKZ
      * [en] Klinische Daten: Institutionskennzeichen. Siehe Institutionskennzeichen IK.
      * [de] Klinische Daten: Institutionskennzeichen. Siehe Institutionskennzeichen IK.</pre>
      */
    public static final String RULES_TEMP_189_KLINIK_IKZ = "Rules.temp.189.klinik.ikz";

    /** <pre>RULES_TEMP_18_HM_GESAMTPREIS_ALLE
      * [en] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.
      * [de] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.</pre>
      * Attention! this value ('Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_5_HE_GESAMTPREIS_ALLE!
      */
    public static final String RULES_TEMP_18_HM_GESAMTPREIS_ALLE = "Rules.temp.18.hm.gesamtpreis.alle";

    /** <pre>RULES_TEMP_190_KLINIK_IKZ
      * [en] Format: 9-stellig numerisch (Beispiel: 123456789)
      * [de] Format: 9-stellig numerisch (Beispiel: 123456789)</pre>
      * Attention! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_115_EINWEISENDERARZT! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_116_EINWEISENDESKRANKENHAUS! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_127_INSTITUTIONSKENNZEICHEN! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_129_KRANKENKASSE!
      */
    public static final String RULES_TEMP_190_KLINIK_IKZ = "Rules.temp.190.klinik.ikz";

    /** <pre>RULES_TEMP_191_KLINIK_VERWEILDAUER
      * [en] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.
      * [de] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.</pre>
      * Attention! this value ('Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_135_VERWEILDAUER! this value ('Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_193_KLINIK_VWD_STUNDEN!
      */
    public static final String RULES_TEMP_191_KLINIK_VERWEILDAUER = "Rules.temp.191.klinik.verweildauer";

    /** <pre>RULES_TEMP_192_KLINIK_VERWEILDAUER
      * [en] Format: Ganzzahlig (Beispiel 2)
      * [de] Format: Ganzzahlig (Beispiel 2)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
      */
    public static final String RULES_TEMP_192_KLINIK_VERWEILDAUER = "Rules.temp.192.klinik.verweildauer";

    /** <pre>RULES_TEMP_193_KLINIK_VWD_STUNDEN
      * [en] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.
      * [de] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.</pre>
      * Attention! this value ('Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_135_VERWEILDAUER! this value ('Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_191_KLINIK_VERWEILDAUER!
      */
    public static final String RULES_TEMP_193_KLINIK_VWD_STUNDEN = "Rules.temp.193.klinik.vwd.stunden";

    /** <pre>RULES_TEMP_194_KLINIK_VWD_STUNDEN
      * [en] Format: Ganzzahlig (Beispiel 2)
      * [de] Format: Ganzzahlig (Beispiel 2)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
      */
    public static final String RULES_TEMP_194_KLINIK_VWD_STUNDEN = "Rules.temp.194.klinik.vwd.stunden";

    /** <pre>RULES_TEMP_195_ARZNEIMITTEL
      * [en] GK RSA:Anzahl der Packungen
      * [de] GK RSA:Anzahl der Packungen</pre>
      * Attention! this value ('GK RSA:Anzahl der Packungen') seems to be also defined under the key RULES_TEMP_200_GK_RSA_PACKUNGANZAHL!
      */
    public static final String RULES_TEMP_195_ARZNEIMITTEL = "Rules.temp.195.arzneimittel";

    /** <pre>RULES_TEMP_196_ARZNEIMITTEL
      * [en] GK RSA:ATC-Code
      * [de] GK RSA:ATC-Code</pre>
      * Attention! this value ('GK RSA:ATC-Code') seems to be also defined under the key RULES_TEMP_201_GK_RSA_ATCCODE!
      */
    public static final String RULES_TEMP_196_ARZNEIMITTEL = "Rules.temp.196.arzneimittel";

    /** <pre>RULES_TEMP_197_ARZNEIMITTEL
      * [en] GK RSA:DDD
      * [de] GK RSA:DDD</pre>
      * Attention! this value ('GK RSA:DDD') seems to be also defined under the key RULES_TEMP_203_GK_RSA_DDD!
      */
    public static final String RULES_TEMP_197_ARZNEIMITTEL = "Rules.temp.197.arzneimittel";

    /** <pre>RULES_TEMP_198_ARZNEIMITTEL
      * [en] GK RSA:PZN-Code
      * [de] GK RSA:PZN-Code</pre>
      * Attention! this value ('GK RSA:PZN-Code') seems to be also defined under the key RULES_TEMP_204_GK_RSA_PZNCODE!
      */
    public static final String RULES_TEMP_198_ARZNEIMITTEL = "Rules.temp.198.arzneimittel";

    /** <pre>RULES_TEMP_199_ARZNEIMITTEL
      * [en] GK RSA:PZN-Gesamtdosis
      * [de] GK RSA:PZN-Gesamtdosis</pre>
      * Attention! this value ('GK RSA:PZN-Gesamtdosis') seems to be also defined under the key RULES_TEMP_206_GK_RSA_PZNGESAMTDOSIS!
      */
    public static final String RULES_TEMP_199_ARZNEIMITTEL = "Rules.temp.199.arzneimittel";

    /** <pre>RULES_TEMP_19_HM_GESAMTPREIS_ALLE
      * [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
      * [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)</pre>
      * Attention! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_21_HM_GESAMTPREIS! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_6_HE_GESAMTPREIS_ALLE! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_8_HE_GESAMTPREIS!
      */
    public static final String RULES_TEMP_19_HM_GESAMTPREIS_ALLE = "Rules.temp.19.hm.gesamtpreis.alle";

    /** <pre>RULES_TEMP_1_HE_PREIS
      * [en] Die Kosten des Hilfsmittels.
      * [de] Die Kosten des Hilfsmittels.</pre>
      * Attention! this value ('Die Kosten des Hilfsmittels.') seems to be also defined under the key RULES_TEMP_14_HM_PREIS!
      */
    public static final String RULES_TEMP_1_HE_PREIS = "Rules.temp.1.he.preis";

    /** <pre>RULES_TEMP_200_GK_RSA_PACKUNGANZAHL
      * [en] GK RSA:Anzahl der Packungen
      * [de] GK RSA:Anzahl der Packungen</pre>
      * Attention! this value ('GK RSA:Anzahl der Packungen') seems to be also defined under the key RULES_TEMP_195_ARZNEIMITTEL!
      */
    public static final String RULES_TEMP_200_GK_RSA_PACKUNGANZAHL = "Rules.temp.200.gk.rsa.packunganzahl";

    /** <pre>RULES_TEMP_201_GK_RSA_ATCCODE
      * [en] GK RSA:ATC-Code
      * [de] GK RSA:ATC-Code</pre>
      * Attention! this value ('GK RSA:ATC-Code') seems to be also defined under the key RULES_TEMP_196_ARZNEIMITTEL!
      */
    public static final String RULES_TEMP_201_GK_RSA_ATCCODE = "Rules.temp.201.gk.rsa.atccode";

    /** <pre>RULES_TEMP_202_GK_RSA_ATCCODE
      * [en] Wird mit der Satzart 400 übermittelt. Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Angegeben werden die von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATCs. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04
      * [de] Wird mit der Satzart 400 übermittelt. Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Angegeben werden die von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATCs. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04</pre>
      */
    public static final String RULES_TEMP_202_GK_RSA_ATCCODE = "Rules.temp.202.gk.rsa.atccode";

    /** <pre>RULES_TEMP_203_GK_RSA_DDD
      * [en] GK RSA:DDD
      * [de] GK RSA:DDD</pre>
      * Attention! this value ('GK RSA:DDD') seems to be also defined under the key RULES_TEMP_197_ARZNEIMITTEL!
      */
    public static final String RULES_TEMP_203_GK_RSA_DDD = "Rules.temp.203.gk.rsa.ddd";

    /** <pre>RULES_TEMP_204_GK_RSA_PZNCODE
      * [en] GK RSA:PZN-Code
      * [de] GK RSA:PZN-Code</pre>
      * Attention! this value ('GK RSA:PZN-Code') seems to be also defined under the key RULES_TEMP_198_ARZNEIMITTEL!
      */
    public static final String RULES_TEMP_204_GK_RSA_PZNCODE = "Rules.temp.204.gk.rsa.pzncode";

    /** <pre>RULES_TEMP_205_GK_RSA_PZNCODE
      * [en] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918.
      * [de] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918.</pre>
      */
    public static final String RULES_TEMP_205_GK_RSA_PZNCODE = "Rules.temp.205.gk.rsa.pzncode";

    /** <pre>RULES_TEMP_206_GK_RSA_PZNGESAMTDOSIS
      * [en] GK RSA:PZN-Gesamtdosis
      * [de] GK RSA:PZN-Gesamtdosis</pre>
      * Attention! this value ('GK RSA:PZN-Gesamtdosis') seems to be also defined under the key RULES_TEMP_199_ARZNEIMITTEL!
      */
    public static final String RULES_TEMP_206_GK_RSA_PZNGESAMTDOSIS = "Rules.temp.206.gk.rsa.pzngesamtdosis";

    /** <pre>RULES_TEMP_207_GK_RSA_PZNGESAMTDOSIS
      * [en] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können. Ist mit Hilfe der Tabelle des WiDO zu ermitteln. Die Summe aller Mengen der Medikamente, bei denen ein PZN ? Code eingetragen ist.
      * [de] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können. Ist mit Hilfe der Tabelle des WiDO zu ermitteln. Die Summe aller Mengen der Medikamente, bei denen ein PZN ? Code eingetragen ist.</pre>
      */
    public static final String RULES_TEMP_207_GK_RSA_PZNGESAMTDOSIS = "Rules.temp.207.gk.rsa.pzngesamtdosis";

    /** <pre>RULES_TEMP_208_AUSGABEN
      * [en] GK RSA:Ausgaben für Apotheken
      * [de] GK RSA:Ausgaben für Apotheken</pre>
      * Attention! this value ('GK RSA:Ausgaben für Apotheken') seems to be also defined under the key RULES_TEMP_216_GK_RSA_APOTHEKENAUSGABEN!
      */
    public static final String RULES_TEMP_208_AUSGABEN = "Rules.temp.208.ausgaben";

    /** <pre>RULES_TEMP_209_AUSGABEN
      * [en] GK RSA:Ausgaben für Heil- und Hilfsmittel
      * [de] GK RSA:Ausgaben für Heil- und Hilfsmittel</pre>
      * Attention! this value ('GK RSA:Ausgaben für Heil- und Hilfsmittel') seems to be also defined under the key RULES_TEMP_217_GK_RSA_SOLEASUGABEN!
      */
    public static final String RULES_TEMP_209_AUSGABEN = "Rules.temp.209.ausgaben";

    /** <pre>RULES_TEMP_20_HM_GESAMTPREIS
      * [en] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.
      * [de] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.</pre>
      * Attention! this value ('Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.') seems to be also defined under the key RULES_TEMP_7_HE_GESAMTPREIS!
      */
    public static final String RULES_TEMP_20_HM_GESAMTPREIS = "Rules.temp.20.hm.gesamtpreis";

    /** <pre>RULES_TEMP_210_AUSGABEN
      * [en] GK RSA:Ausgaben für KH
      * [de] GK RSA:Ausgaben für KH</pre>
      * Attention! this value ('GK RSA:Ausgaben für KH') seems to be also defined under the key RULES_TEMP_218_GK_RSA_KHAUSGABEN!
      */
    public static final String RULES_TEMP_210_AUSGABEN = "Rules.temp.210.ausgaben";

    /** <pre>RULES_TEMP_211_AUSGABEN
      * [en] GK RSA:Ausgaben für Zahnärzte
      * [de] GK RSA:Ausgaben für Zahnärzte</pre>
      * Attention! this value ('GK RSA:Ausgaben für Zahnärzte') seems to be also defined under the key RULES_TEMP_219_GK_RSA_ZAHNARZTAUSGABEN!
      */
    public static final String RULES_TEMP_211_AUSGABEN = "Rules.temp.211.ausgaben";

    /** <pre>RULES_TEMP_212_AUSGABEN
      * [en] GK RSA:Ausgaben für Ärzte
      * [de] GK RSA:Ausgaben für Ärzte</pre>
      * Attention! this value ('GK RSA:Ausgaben für Ärzte') seems to be also defined under the key RULES_TEMP_220_GK_RSA_ARZTAUSGABEN!
      */
    public static final String RULES_TEMP_212_AUSGABEN = "Rules.temp.212.ausgaben";

    /** <pre>RULES_TEMP_213_AUSGABEN
      * [en] GK RSA:Ausgaben gesamt
      * [de] GK RSA:Ausgaben gesamt</pre>
      * Attention! this value ('GK RSA:Ausgaben gesamt') seems to be also defined under the key RULES_TEMP_221_GK_RSA_AUSGABENGESAMT!
      */
    public static final String RULES_TEMP_213_AUSGABEN = "Rules.temp.213.ausgaben";

    /** <pre>RULES_TEMP_214_AUSGABEN
      * [en] GK RSA:Mehrleistungen DMP
      * [de] GK RSA:Mehrleistungen DMP</pre>
      * Attention! this value ('GK RSA:Mehrleistungen DMP') seems to be also defined under the key RULES_TEMP_222_GK_RSA_MEHRLEISTUNGDMP!
      */
    public static final String RULES_TEMP_214_AUSGABEN = "Rules.temp.214.ausgaben";

    /** <pre>RULES_TEMP_215_AUSGABEN
      * [en] GK RSA:Sachkosten bei extrakorporaler Blutreinigung
      * [de] GK RSA:Sachkosten bei extrakorporaler Blutreinigung</pre>
      * Attention! this value ('GK RSA:Sachkosten bei extrakorporaler Blutreinigung') seems to be also defined under the key RULES_TEMP_223_GK_RSA_EXTBLUTREINIGUNGAUSGABEN!
      */
    public static final String RULES_TEMP_215_AUSGABEN = "Rules.temp.215.ausgaben";

    /** <pre>RULES_TEMP_216_GK_RSA_APOTHEKENAUSGABEN
      * [en] GK RSA:Ausgaben für Apotheken
      * [de] GK RSA:Ausgaben für Apotheken</pre>
      * Attention! this value ('GK RSA:Ausgaben für Apotheken') seems to be also defined under the key RULES_TEMP_208_AUSGABEN!
      */
    public static final String RULES_TEMP_216_GK_RSA_APOTHEKENAUSGABEN = "Rules.temp.216.gk.rsa.apothekenausgaben";

    /** <pre>RULES_TEMP_217_GK_RSA_SOLEASUGABEN
      * [en] GK RSA:Ausgaben für Heil- und Hilfsmittel
      * [de] GK RSA:Ausgaben für Heil- und Hilfsmittel</pre>
      * Attention! this value ('GK RSA:Ausgaben für Heil- und Hilfsmittel') seems to be also defined under the key RULES_TEMP_209_AUSGABEN!
      */
    public static final String RULES_TEMP_217_GK_RSA_SOLEASUGABEN = "Rules.temp.217.gk.rsa.soleasugaben";

    /** <pre>RULES_TEMP_218_GK_RSA_KHAUSGABEN
      * [en] GK RSA:Ausgaben für KH
      * [de] GK RSA:Ausgaben für KH</pre>
      * Attention! this value ('GK RSA:Ausgaben für KH') seems to be also defined under the key RULES_TEMP_210_AUSGABEN!
      */
    public static final String RULES_TEMP_218_GK_RSA_KHAUSGABEN = "Rules.temp.218.gk.rsa.khausgaben";

    /** <pre>RULES_TEMP_219_GK_RSA_ZAHNARZTAUSGABEN
      * [en] GK RSA:Ausgaben für Zahnärzte
      * [de] GK RSA:Ausgaben für Zahnärzte</pre>
      * Attention! this value ('GK RSA:Ausgaben für Zahnärzte') seems to be also defined under the key RULES_TEMP_211_AUSGABEN!
      */
    public static final String RULES_TEMP_219_GK_RSA_ZAHNARZTAUSGABEN = "Rules.temp.219.gk.rsa.zahnarztausgaben";

    /** <pre>RULES_TEMP_21_HM_GESAMTPREIS
      * [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
      * [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)</pre>
      * Attention! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_19_HM_GESAMTPREIS_ALLE! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_6_HE_GESAMTPREIS_ALLE! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_8_HE_GESAMTPREIS!
      */
    public static final String RULES_TEMP_21_HM_GESAMTPREIS = "Rules.temp.21.hm.gesamtpreis";

    /** <pre>RULES_TEMP_220_GK_RSA_ARZTAUSGABEN
      * [en] GK RSA:Ausgaben für Ärzte
      * [de] GK RSA:Ausgaben für Ärzte</pre>
      * Attention! this value ('GK RSA:Ausgaben für Ärzte') seems to be also defined under the key RULES_TEMP_212_AUSGABEN!
      */
    public static final String RULES_TEMP_220_GK_RSA_ARZTAUSGABEN = "Rules.temp.220.gk.rsa.arztausgaben";

    /** <pre>RULES_TEMP_221_GK_RSA_AUSGABENGESAMT
      * [en] GK RSA:Ausgaben gesamt
      * [de] GK RSA:Ausgaben gesamt</pre>
      * Attention! this value ('GK RSA:Ausgaben gesamt') seems to be also defined under the key RULES_TEMP_213_AUSGABEN!
      */
    public static final String RULES_TEMP_221_GK_RSA_AUSGABENGESAMT = "Rules.temp.221.gk.rsa.ausgabengesamt";

    /** <pre>RULES_TEMP_222_GK_RSA_MEHRLEISTUNGDMP
      * [en] GK RSA:Mehrleistungen DMP
      * [de] GK RSA:Mehrleistungen DMP</pre>
      * Attention! this value ('GK RSA:Mehrleistungen DMP') seems to be also defined under the key RULES_TEMP_214_AUSGABEN!
      */
    public static final String RULES_TEMP_222_GK_RSA_MEHRLEISTUNGDMP = "Rules.temp.222.gk.rsa.mehrleistungdmp";

    /** <pre>RULES_TEMP_223_GK_RSA_EXTBLUTREINIGUNGAUSGABEN
      * [en] GK RSA:Sachkosten bei extrakorporaler Blutreinigung
      * [de] GK RSA:Sachkosten bei extrakorporaler Blutreinigung</pre>
      * Attention! this value ('GK RSA:Sachkosten bei extrakorporaler Blutreinigung') seems to be also defined under the key RULES_TEMP_215_AUSGABEN!
      */
    public static final String RULES_TEMP_223_GK_RSA_EXTBLUTREINIGUNGAUSGABEN = "Rules.temp.223.gk.rsa.extblutreinigungausgaben";

    /** <pre>RULES_TEMP_224_VERSICHERTENDATEN
      * [en] GK RSA:Alter
      * [de] GK RSA:Alter</pre>
      * Attention! this value ('GK RSA:Alter') seems to be also defined under the key RULES_TEMP_230_GK_RSA_ALTER!
      */
    public static final String RULES_TEMP_224_VERSICHERTENDATEN = "Rules.temp.224.versichertendaten";

    /** <pre>RULES_TEMP_225_VERSICHERTENDATEN
      * [en] GK RSA:DMP-Tage
      * [de] GK RSA:DMP-Tage</pre>
      * Attention! this value ('GK RSA:DMP-Tage') seems to be also defined under the key RULES_TEMP_231_GK_RSA_DMPTAGE!
      */
    public static final String RULES_TEMP_225_VERSICHERTENDATEN = "Rules.temp.225.versichertendaten";

    /** <pre>RULES_TEMP_226_VERSICHERTENDATEN
      * [en] GK RSA:Erwerbsminderungstage
      * [de] GK RSA:Erwerbsminderungstage</pre>
      * Attention! this value ('GK RSA:Erwerbsminderungstage') seems to be also defined under the key RULES_TEMP_232_GK_RSA_ERWERBSMINDERUNGSTAGE!
      */
    public static final String RULES_TEMP_226_VERSICHERTENDATEN = "Rules.temp.226.versichertendaten";

    /** <pre>RULES_TEMP_227_VERSICHERTENDATEN
      * [en] GK RSA:Geschlecht
      * [de] GK RSA:Geschlecht</pre>
      * Attention! this value ('GK RSA:Geschlecht') seems to be also defined under the key RULES_TEMP_233_GK_RSA_GESCHLECHT!
      */
    public static final String RULES_TEMP_227_VERSICHERTENDATEN = "Rules.temp.227.versichertendaten";

    /** <pre>RULES_TEMP_228_VERSICHERTENDATEN
      * [en] GK RSA:Versichertentage
      * [de] GK RSA:Versichertentage</pre>
      * Attention! this value ('GK RSA:Versichertentage') seems to be also defined under the key RULES_TEMP_234_GK_RSA_VERSICHERTENTAGE!
      */
    public static final String RULES_TEMP_228_VERSICHERTENDATEN = "Rules.temp.228.versichertendaten";

    /** <pre>RULES_TEMP_229_VERSICHERTENDATEN
      * [en] GK RSA:Verstorben
      * [de] GK RSA:Verstorben</pre>
      * Attention! this value ('GK RSA:Verstorben') seems to be also defined under the key RULES_TEMP_235_GK_RSA_VERSTORBEN!
      */
    public static final String RULES_TEMP_229_VERSICHERTENDATEN = "Rules.temp.229.versichertendaten";

    /** <pre>RULES_TEMP_22_HM_POSITIONSNUMMER
      * [en] Pharmazentralnummer für Hilfsmittel
      * [de] Pharmazentralnummer für Hilfsmittel</pre>
      * Attention! this value ('Pharmazentralnummer für Hilfsmittel') seems to be also defined under the key RULES_TEMP_9_HE_POSITIONSNUMMER!
      */
    public static final String RULES_TEMP_22_HM_POSITIONSNUMMER = "Rules.temp.22.hm.positionsnummer";

    /** <pre>RULES_TEMP_230_GK_RSA_ALTER
      * [en] GK RSA:Alter
      * [de] GK RSA:Alter</pre>
      * Attention! this value ('GK RSA:Alter') seems to be also defined under the key RULES_TEMP_224_VERSICHERTENDATEN!
      */
    public static final String RULES_TEMP_230_GK_RSA_ALTER = "Rules.temp.230.gk.rsa.alter";

    /** <pre>RULES_TEMP_231_GK_RSA_DMPTAGE
      * [en] GK RSA:DMP-Tage
      * [de] GK RSA:DMP-Tage</pre>
      * Attention! this value ('GK RSA:DMP-Tage') seems to be also defined under the key RULES_TEMP_225_VERSICHERTENDATEN!
      */
    public static final String RULES_TEMP_231_GK_RSA_DMPTAGE = "Rules.temp.231.gk.rsa.dmptage";

    /** <pre>RULES_TEMP_232_GK_RSA_ERWERBSMINDERUNGSTAGE
      * [en] GK RSA:Erwerbsminderungstage
      * [de] GK RSA:Erwerbsminderungstage</pre>
      * Attention! this value ('GK RSA:Erwerbsminderungstage') seems to be also defined under the key RULES_TEMP_226_VERSICHERTENDATEN!
      */
    public static final String RULES_TEMP_232_GK_RSA_ERWERBSMINDERUNGSTAGE = "Rules.temp.232.gk.rsa.erwerbsminderungstage";

    /** <pre>RULES_TEMP_233_GK_RSA_GESCHLECHT
      * [en] GK RSA:Geschlecht
      * [de] GK RSA:Geschlecht</pre>
      * Attention! this value ('GK RSA:Geschlecht') seems to be also defined under the key RULES_TEMP_227_VERSICHERTENDATEN!
      */
    public static final String RULES_TEMP_233_GK_RSA_GESCHLECHT = "Rules.temp.233.gk.rsa.geschlecht";

    /** <pre>RULES_TEMP_234_GK_RSA_VERSICHERTENTAGE
      * [en] GK RSA:Versichertentage
      * [de] GK RSA:Versichertentage</pre>
      * Attention! this value ('GK RSA:Versichertentage') seems to be also defined under the key RULES_TEMP_228_VERSICHERTENDATEN!
      */
    public static final String RULES_TEMP_234_GK_RSA_VERSICHERTENTAGE = "Rules.temp.234.gk.rsa.versichertentage";

    /** <pre>RULES_TEMP_235_GK_RSA_VERSTORBEN
      * [en] GK RSA:Verstorben
      * [de] GK RSA:Verstorben</pre>
      * Attention! this value ('GK RSA:Verstorben') seems to be also defined under the key RULES_TEMP_229_VERSICHERTENDATEN!
      */
    public static final String RULES_TEMP_235_GK_RSA_VERSTORBEN = "Rules.temp.235.gk.rsa.verstorben";

    /** <pre>RULES_TEMP_236_ERLOESE
      * [en] GK RSA:AGG
      * [de] GK RSA:AGG</pre>
      * Attention! this value ('GK RSA:AGG') seems to be also defined under the key RULES_TEMP_241_GK_RSA_AGG!
      */
    public static final String RULES_TEMP_236_ERLOESE = "Rules.temp.236.erloese";

    /** <pre>RULES_TEMP_237_ERLOESE
      * [en] GK RSA:Anzahl der HMGs
      * [de] GK RSA:Anzahl der HMGs</pre>
      * Attention! this value ('GK RSA:Anzahl der HMGs') seems to be also defined under the key RULES_TEMP_242_GK_RSA_HMGANZAHL!
      */
    public static final String RULES_TEMP_237_ERLOESE = "Rules.temp.237.erloese";

    /** <pre>RULES_TEMP_238_ERLOESE
      * [en] GK RSA:EMG
      * [de] GK RSA:EMG</pre>
      * Attention! this value ('GK RSA:EMG') seems to be also defined under the key RULES_TEMP_243_GK_RSA_EMG!
      */
    public static final String RULES_TEMP_238_ERLOESE = "Rules.temp.238.erloese";

    /** <pre>RULES_TEMP_239_ERLOESE
      * [en] GK RSA:Gesamterlöse aus dem RSA
      * [de] GK RSA:Gesamterlöse aus dem RSA</pre>
      * Attention! this value ('GK RSA:Gesamterlöse aus dem RSA') seems to be also defined under the key RULES_TEMP_244_GK_RSA_ELRLOESGESAMT!
      */
    public static final String RULES_TEMP_239_ERLOESE = "Rules.temp.239.erloese";

    /** <pre>RULES_TEMP_23_HM_MENGE
      * [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.
      * [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.</pre>
      * Attention! this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_10_HE_MENGE! this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_25_HM_MENGE!
      */
    public static final String RULES_TEMP_23_HM_MENGE = "Rules.temp.23.hm.menge";

    /** <pre>RULES_TEMP_240_ERLOESE
      * [en] GK RSA:HMG
      * [de] GK RSA:HMG</pre>
      * Attention! this value ('GK RSA:HMG') seems to be also defined under the key RULES_TEMP_245_GK_RSA_HMG!
      */
    public static final String RULES_TEMP_240_ERLOESE = "Rules.temp.240.erloese";

    /** <pre>RULES_TEMP_241_GK_RSA_AGG
      * [en] GK RSA:AGG
      * [de] GK RSA:AGG</pre>
      * Attention! this value ('GK RSA:AGG') seems to be also defined under the key RULES_TEMP_236_ERLOESE!
      */
    public static final String RULES_TEMP_241_GK_RSA_AGG = "Rules.temp.241.gk.rsa.agg";

    /** <pre>RULES_TEMP_242_GK_RSA_HMGANZAHL
      * [en] GK RSA:Anzahl der HMGs
      * [de] GK RSA:Anzahl der HMGs</pre>
      * Attention! this value ('GK RSA:Anzahl der HMGs') seems to be also defined under the key RULES_TEMP_237_ERLOESE!
      */
    public static final String RULES_TEMP_242_GK_RSA_HMGANZAHL = "Rules.temp.242.gk.rsa.hmganzahl";

    /** <pre>RULES_TEMP_243_GK_RSA_EMG
      * [en] GK RSA:EMG
      * [de] GK RSA:EMG</pre>
      * Attention! this value ('GK RSA:EMG') seems to be also defined under the key RULES_TEMP_238_ERLOESE!
      */
    public static final String RULES_TEMP_243_GK_RSA_EMG = "Rules.temp.243.gk.rsa.emg";

    /** <pre>RULES_TEMP_244_GK_RSA_ELRLOESGESAMT
      * [en] GK RSA:Gesamterlöse aus dem RSA
      * [de] GK RSA:Gesamterlöse aus dem RSA</pre>
      * Attention! this value ('GK RSA:Gesamterlöse aus dem RSA') seems to be also defined under the key RULES_TEMP_239_ERLOESE!
      */
    public static final String RULES_TEMP_244_GK_RSA_ELRLOESGESAMT = "Rules.temp.244.gk.rsa.elrloesgesamt";

    /** <pre>RULES_TEMP_245_GK_RSA_HMG
      * [en] GK RSA:HMG
      * [de] GK RSA:HMG</pre>
      * Attention! this value ('GK RSA:HMG') seems to be also defined under the key RULES_TEMP_240_ERLOESE!
      */
    public static final String RULES_TEMP_245_GK_RSA_HMG = "Rules.temp.245.gk.rsa.hmg";

    /** <pre>RULES_TEMP_246_GK_RSA_HMG
      * [en] Das Klassifikationssystem unterscheidet 106 zuschlagsfähige hierarchisierte Morbiditätsgruppen (HMG), die jeweils aus mindestens einer DxGruppe (DxG) zusammengesetzt sind, die ihrerseits mindestens einen ICD-Code umfassen. Alle HMG, die ihnen zugeordneten DxG und ICD-Codes sowie die für die Zuordnung definierten Altersgrenzen, das jeweils zulässige Geschlecht sowie die Zusatzkennzeichen des Deutschen Instituts für Medizinische Dokumentation und Information (DIMDI) nach §§ 295 und 301 SGB V werden in Anlage 1 dokumentiert.
      * [de] Das Klassifikationssystem unterscheidet 106 zuschlagsfähige hierarchisierte Morbiditätsgruppen (HMG), die jeweils aus mindestens einer DxGruppe (DxG) zusammengesetzt sind, die ihrerseits mindestens einen ICD-Code umfassen. Alle HMG, die ihnen zugeordneten DxG und ICD-Codes sowie die für die Zuordnung definierten Altersgrenzen, das jeweils zulässige Geschlecht sowie die Zusatzkennzeichen des Deutschen Instituts für Medizinische Dokumentation und Information (DIMDI) nach §§ 295 und 301 SGB V werden in Anlage 1 dokumentiert.</pre>
      */
    public static final String RULES_TEMP_246_GK_RSA_HMG = "Rules.temp.246.gk.rsa.hmg";

    /** <pre>RULES_TEMP_247_DIAGNOSENGRUPPEN
      * [en] GK RSA:ambulante Diagnosen
      * [de] GK RSA:ambulante Diagnosen</pre>
      * Attention! this value ('GK RSA:ambulante Diagnosen') seems to be also defined under the key RULES_TEMP_263_GK_RSA_DIAGNOSEAMBULANT!
      */
    public static final String RULES_TEMP_247_DIAGNOSENGRUPPEN = "Rules.temp.247.diagnosengruppen";

    /** <pre>RULES_TEMP_248_DIAGNOSENGRUPPEN
      * [en] GK RSA:Ambulante Diagnosen Leistungsquartal
      * [de] GK RSA:Ambulante Diagnosen Leistungsquartal</pre>
      * Attention! this value ('GK RSA:Ambulante Diagnosen Leistungsquartal') seems to be also defined under the key RULES_TEMP_264_GK_RSA_QUARTALDIAGNOSENAMBULANT!
      */
    public static final String RULES_TEMP_248_DIAGNOSENGRUPPEN = "Rules.temp.248.diagnosengruppen";

    /** <pre>RULES_TEMP_249_DIAGNOSENGRUPPEN
      * [en] GK RSA:Ambulante Diagnosen Qualifizierung
      * [de] GK RSA:Ambulante Diagnosen Qualifizierung</pre>
      * Attention! this value ('GK RSA:Ambulante Diagnosen Qualifizierung') seems to be also defined under the key RULES_TEMP_265_GK_RSA_QUALIFIZIERUNGDIAGNOSENAMBULANT!
      */
    public static final String RULES_TEMP_249_DIAGNOSENGRUPPEN = "Rules.temp.249.diagnosengruppen";

    /** <pre>RULES_TEMP_24_HM_MENGE
      * [en] Format: numerisch (Beispiel: 5)
      * [de] Format: numerisch (Beispiel: 5)</pre>
      * Attention! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_11_HE_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_17_HM_GESAMTMENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_26_HM_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_4_HE_GESAMTMENGE!
      */
    public static final String RULES_TEMP_24_HM_MENGE = "Rules.temp.24.hm.menge";

    /** <pre>RULES_TEMP_250_DIAGNOSENGRUPPEN
      * [en] GK RSA:Ambulante DxG
      * [de] GK RSA:Ambulante DxG</pre>
      * Attention! this value ('GK RSA:Ambulante DxG') seems to be also defined under the key RULES_TEMP_266_GK_RSA_AMBULANTEDXG!
      */
    public static final String RULES_TEMP_250_DIAGNOSENGRUPPEN = "Rules.temp.250.diagnosengruppen";

    /** <pre>RULES_TEMP_251_DIAGNOSENGRUPPEN
      * [en] GK RSA:ambulante HMG relevante Diagnosen
      * [de] GK RSA:ambulante HMG relevante Diagnosen</pre>
      * Attention! this value ('GK RSA:ambulante HMG relevante Diagnosen') seems to be also defined under the key RULES_TEMP_267_GK_RSA_DIAGNOSEAMBULANTHMGRELEVANT!
      */
    public static final String RULES_TEMP_251_DIAGNOSENGRUPPEN = "Rules.temp.251.diagnosengruppen";

    /** <pre>RULES_TEMP_252_DIAGNOSENGRUPPEN
      * [en] GK RSA:Ambulante HMG relevante DxG
      * [de] GK RSA:Ambulante HMG relevante DxG</pre>
      * Attention! this value ('GK RSA:Ambulante HMG relevante DxG') seems to be also defined under the key RULES_TEMP_268_GK_RSA_AMBULANTEHMGRELEVANTEDXG!
      */
    public static final String RULES_TEMP_252_DIAGNOSENGRUPPEN = "Rules.temp.252.diagnosengruppen";

    /** <pre>RULES_TEMP_253_DIAGNOSENGRUPPEN
      * [en] GK RSA:Ambulante Krankheitsnummer
      * [de] GK RSA:Ambulante Krankheitsnummer</pre>
      * Attention! this value ('GK RSA:Ambulante Krankheitsnummer') seems to be also defined under the key RULES_TEMP_269_GK_RSA_AMBULANTEKRANKHEITSNUMMER!
      */
    public static final String RULES_TEMP_253_DIAGNOSENGRUPPEN = "Rules.temp.253.diagnosengruppen";

    /** <pre>RULES_TEMP_254_DIAGNOSENGRUPPEN
      * [en] GK RSA:DxG
      * [de] GK RSA:DxG</pre>
      * Attention! this value ('GK RSA:DxG') seems to be also defined under the key RULES_TEMP_270_GK_RSA_DXG!
      */
    public static final String RULES_TEMP_254_DIAGNOSENGRUPPEN = "Rules.temp.254.diagnosengruppen";

    /** <pre>RULES_TEMP_255_DIAGNOSENGRUPPEN
      * [en] GK RSA:Krankheitsgruppe
      * [de] GK RSA:Krankheitsgruppe</pre>
      * Attention! this value ('GK RSA:Krankheitsgruppe') seems to be also defined under the key RULES_TEMP_271_GK_RSA_KRANKHEITSGRUPPE!
      */
    public static final String RULES_TEMP_255_DIAGNOSENGRUPPEN = "Rules.temp.255.diagnosengruppen";

    /** <pre>RULES_TEMP_256_DIAGNOSENGRUPPEN
      * [en] GK RSA:Stationäre DxG
      * [de] GK RSA:Stationäre DxG</pre>
      * Attention! this value ('GK RSA:Stationäre DxG') seems to be also defined under the key RULES_TEMP_273_GK_RSA_STATIONAEREDXG!
      */
    public static final String RULES_TEMP_256_DIAGNOSENGRUPPEN = "Rules.temp.256.diagnosengruppen";

    /** <pre>RULES_TEMP_257_DIAGNOSENGRUPPEN
      * [en] GK RSA:stationäre Diagnosen
      * [de] GK RSA:stationäre Diagnosen</pre>
      * Attention! this value ('GK RSA:stationäre Diagnosen') seems to be also defined under the key RULES_TEMP_272_GK_RSA_DIAGNOSESTATIONAER!
      */
    public static final String RULES_TEMP_257_DIAGNOSENGRUPPEN = "Rules.temp.257.diagnosengruppen";

    /** <pre>RULES_TEMP_258_DIAGNOSENGRUPPEN
      * [en] GK RSA:Stationäre HMG relevante DxG
      * [de] GK RSA:Stationäre HMG relevante DxG</pre>
      * Attention! this value ('GK RSA:Stationäre HMG relevante DxG') seems to be also defined under the key RULES_TEMP_277_GK_RSA_STATIONAEREHMGRELEVANTEDXG!
      */
    public static final String RULES_TEMP_258_DIAGNOSENGRUPPEN = "Rules.temp.258.diagnosengruppen";

    /** <pre>RULES_TEMP_259_DIAGNOSENGRUPPEN
      * [en] GK RSA:Stationäre Krankheitsnummer
      * [de] GK RSA:Stationäre Krankheitsnummer</pre>
      * Attention! this value ('GK RSA:Stationäre Krankheitsnummer') seems to be also defined under the key RULES_TEMP_278_GK_RSA_STATIONAEREKRANKHEITSNUMMER!
      */
    public static final String RULES_TEMP_259_DIAGNOSENGRUPPEN = "Rules.temp.259.diagnosengruppen";

    /** <pre>RULES_TEMP_25_HM_MENGE
      * [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.
      * [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.</pre>
      * Attention! this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_10_HE_MENGE! this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_23_HM_MENGE!
      */
    public static final String RULES_TEMP_25_HM_MENGE = "Rules.temp.25.hm.menge";

    /** <pre>RULES_TEMP_260_DIAGNOSENGRUPPEN
      * [en] GK RSA:stationäre Hauptdiagnosen
      * [de] GK RSA:stationäre Hauptdiagnosen</pre>
      * Attention! this value ('GK RSA:stationäre Hauptdiagnosen') seems to be also defined under the key RULES_TEMP_274_GK_RSA_HAUPTDIAGNOSESTATIONAER!
      */
    public static final String RULES_TEMP_260_DIAGNOSENGRUPPEN = "Rules.temp.260.diagnosengruppen";

    /** <pre>RULES_TEMP_261_DIAGNOSENGRUPPEN
      * [en] GK RSA:stationäre HMG relevante Diagnosen
      * [de] GK RSA:stationäre HMG relevante Diagnosen</pre>
      * Attention! this value ('GK RSA:stationäre HMG relevante Diagnosen') seems to be also defined under the key RULES_TEMP_276_GK_RSA_DIAGNOSESTATIONAERHMGRELEVANT!
      */
    public static final String RULES_TEMP_261_DIAGNOSENGRUPPEN = "Rules.temp.261.diagnosengruppen";

    /** <pre>RULES_TEMP_262_DIAGNOSENGRUPPEN
      * [en] GK RSA:stationäre Nebendiagnose
      * [de] GK RSA:stationäre Nebendiagnose</pre>
      * Attention! this value ('GK RSA:stationäre Nebendiagnose') seems to be also defined under the key RULES_TEMP_279_GK_RSA_NEBENDIAGNOSESTATIONAER!
      */
    public static final String RULES_TEMP_262_DIAGNOSENGRUPPEN = "Rules.temp.262.diagnosengruppen";

    /** <pre>RULES_TEMP_263_GK_RSA_DIAGNOSEAMBULANT
      * [en] GK RSA:ambulante Diagnosen
      * [de] GK RSA:ambulante Diagnosen</pre>
      * Attention! this value ('GK RSA:ambulante Diagnosen') seems to be also defined under the key RULES_TEMP_247_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_263_GK_RSA_DIAGNOSEAMBULANT = "Rules.temp.263.gk.rsa.diagnoseambulant";

    /** <pre>RULES_TEMP_264_GK_RSA_QUARTALDIAGNOSENAMBULANT
      * [en] GK RSA:Ambulante Diagnosen Leistungsquartal
      * [de] GK RSA:Ambulante Diagnosen Leistungsquartal</pre>
      * Attention! this value ('GK RSA:Ambulante Diagnosen Leistungsquartal') seems to be also defined under the key RULES_TEMP_248_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_264_GK_RSA_QUARTALDIAGNOSENAMBULANT = "Rules.temp.264.gk.rsa.quartaldiagnosenambulant";

    /** <pre>RULES_TEMP_265_GK_RSA_QUALIFIZIERUNGDIAGNOSENAMBULANT
      * [en] GK RSA:Ambulante Diagnosen Qualifizierung
      * [de] GK RSA:Ambulante Diagnosen Qualifizierung</pre>
      * Attention! this value ('GK RSA:Ambulante Diagnosen Qualifizierung') seems to be also defined under the key RULES_TEMP_249_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_265_GK_RSA_QUALIFIZIERUNGDIAGNOSENAMBULANT = "Rules.temp.265.gk.rsa.qualifizierungdiagnosenambulant";

    /** <pre>RULES_TEMP_266_GK_RSA_AMBULANTEDXG
      * [en] GK RSA:Ambulante DxG
      * [de] GK RSA:Ambulante DxG</pre>
      * Attention! this value ('GK RSA:Ambulante DxG') seems to be also defined under the key RULES_TEMP_250_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_266_GK_RSA_AMBULANTEDXG = "Rules.temp.266.gk.rsa.ambulantedxg";

    /** <pre>RULES_TEMP_267_GK_RSA_DIAGNOSEAMBULANTHMGRELEVANT
      * [en] GK RSA:ambulante HMG relevante Diagnosen
      * [de] GK RSA:ambulante HMG relevante Diagnosen</pre>
      * Attention! this value ('GK RSA:ambulante HMG relevante Diagnosen') seems to be also defined under the key RULES_TEMP_251_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_267_GK_RSA_DIAGNOSEAMBULANTHMGRELEVANT = "Rules.temp.267.gk.rsa.diagnoseambulanthmgrelevant";

    /** <pre>RULES_TEMP_268_GK_RSA_AMBULANTEHMGRELEVANTEDXG
      * [en] GK RSA:Ambulante HMG relevante DxG
      * [de] GK RSA:Ambulante HMG relevante DxG</pre>
      * Attention! this value ('GK RSA:Ambulante HMG relevante DxG') seems to be also defined under the key RULES_TEMP_252_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_268_GK_RSA_AMBULANTEHMGRELEVANTEDXG = "Rules.temp.268.gk.rsa.ambulantehmgrelevantedxg";

    /** <pre>RULES_TEMP_269_GK_RSA_AMBULANTEKRANKHEITSNUMMER
      * [en] GK RSA:Ambulante Krankheitsnummer
      * [de] GK RSA:Ambulante Krankheitsnummer</pre>
      * Attention! this value ('GK RSA:Ambulante Krankheitsnummer') seems to be also defined under the key RULES_TEMP_253_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_269_GK_RSA_AMBULANTEKRANKHEITSNUMMER = "Rules.temp.269.gk.rsa.ambulantekrankheitsnummer";

    /** <pre>RULES_TEMP_26_HM_MENGE
      * [en] Format: numerisch (Beispiel: 5)
      * [de] Format: numerisch (Beispiel: 5)</pre>
      * Attention! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_11_HE_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_17_HM_GESAMTMENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_24_HM_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_4_HE_GESAMTMENGE!
      */
    public static final String RULES_TEMP_26_HM_MENGE = "Rules.temp.26.hm.menge";

    /** <pre>RULES_TEMP_270_GK_RSA_DXG
      * [en] GK RSA:DxG
      * [de] GK RSA:DxG</pre>
      * Attention! this value ('GK RSA:DxG') seems to be also defined under the key RULES_TEMP_254_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_270_GK_RSA_DXG = "Rules.temp.270.gk.rsa.dxg";

    /** <pre>RULES_TEMP_271_GK_RSA_KRANKHEITSGRUPPE
      * [en] GK RSA:Krankheitsgruppe
      * [de] GK RSA:Krankheitsgruppe</pre>
      * Attention! this value ('GK RSA:Krankheitsgruppe') seems to be also defined under the key RULES_TEMP_255_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_271_GK_RSA_KRANKHEITSGRUPPE = "Rules.temp.271.gk.rsa.krankheitsgruppe";

    /** <pre>RULES_TEMP_272_GK_RSA_DIAGNOSESTATIONAER
      * [en] GK RSA:stationäre Diagnosen
      * [de] GK RSA:stationäre Diagnosen</pre>
      * Attention! this value ('GK RSA:stationäre Diagnosen') seems to be also defined under the key RULES_TEMP_257_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_272_GK_RSA_DIAGNOSESTATIONAER = "Rules.temp.272.gk.rsa.diagnosestationaer";

    /** <pre>RULES_TEMP_273_GK_RSA_STATIONAEREDXG
      * [en] GK RSA:Stationäre DxG
      * [de] GK RSA:Stationäre DxG</pre>
      * Attention! this value ('GK RSA:Stationäre DxG') seems to be also defined under the key RULES_TEMP_256_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_273_GK_RSA_STATIONAEREDXG = "Rules.temp.273.gk.rsa.stationaeredxg";

    /** <pre>RULES_TEMP_274_GK_RSA_HAUPTDIAGNOSESTATIONAER
      * [en] GK RSA:stationäre Hauptdiagnosen
      * [de] GK RSA:stationäre Hauptdiagnosen</pre>
      * Attention! this value ('GK RSA:stationäre Hauptdiagnosen') seems to be also defined under the key RULES_TEMP_260_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_274_GK_RSA_HAUPTDIAGNOSESTATIONAER = "Rules.temp.274.gk.rsa.hauptdiagnosestationaer";

    /** <pre>RULES_TEMP_275_GK_RSA_HAUPTDIAGNOSESTATIONAER
      * [en] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
      * [de] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.</pre>
      */
    public static final String RULES_TEMP_275_GK_RSA_HAUPTDIAGNOSESTATIONAER = "Rules.temp.275.gk.rsa.hauptdiagnosestationaer";

    /** <pre>RULES_TEMP_276_GK_RSA_DIAGNOSESTATIONAERHMGRELEVANT
      * [en] GK RSA:stationäre HMG relevante Diagnosen
      * [de] GK RSA:stationäre HMG relevante Diagnosen</pre>
      * Attention! this value ('GK RSA:stationäre HMG relevante Diagnosen') seems to be also defined under the key RULES_TEMP_261_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_276_GK_RSA_DIAGNOSESTATIONAERHMGRELEVANT = "Rules.temp.276.gk.rsa.diagnosestationaerhmgrelevant";

    /** <pre>RULES_TEMP_277_GK_RSA_STATIONAEREHMGRELEVANTEDXG
      * [en] GK RSA:Stationäre HMG relevante DxG
      * [de] GK RSA:Stationäre HMG relevante DxG</pre>
      * Attention! this value ('GK RSA:Stationäre HMG relevante DxG') seems to be also defined under the key RULES_TEMP_258_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_277_GK_RSA_STATIONAEREHMGRELEVANTEDXG = "Rules.temp.277.gk.rsa.stationaerehmgrelevantedxg";

    /** <pre>RULES_TEMP_278_GK_RSA_STATIONAEREKRANKHEITSNUMMER
      * [en] GK RSA:Stationäre Krankheitsnummer
      * [de] GK RSA:Stationäre Krankheitsnummer</pre>
      * Attention! this value ('GK RSA:Stationäre Krankheitsnummer') seems to be also defined under the key RULES_TEMP_259_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_278_GK_RSA_STATIONAEREKRANKHEITSNUMMER = "Rules.temp.278.gk.rsa.stationaerekrankheitsnummer";

    /** <pre>RULES_TEMP_279_GK_RSA_NEBENDIAGNOSESTATIONAER
      * [en] GK RSA:stationäre Nebendiagnose
      * [de] GK RSA:stationäre Nebendiagnose</pre>
      * Attention! this value ('GK RSA:stationäre Nebendiagnose') seems to be also defined under the key RULES_TEMP_262_DIAGNOSENGRUPPEN!
      */
    public static final String RULES_TEMP_279_GK_RSA_NEBENDIAGNOSESTATIONAER = "Rules.temp.279.gk.rsa.nebendiagnosestationaer";

    /** <pre>RULES_TEMP_27_HM_VERORDNUNGSDATUM
      * [en] Datum, an dem das Hilfsmittel verordnet wurde.
      * [de] Datum, an dem das Hilfsmittel verordnet wurde.</pre>
      * Attention! this value ('Datum, an dem das Hilfsmittel verordnet wurde.') seems to be also defined under the key RULES_TEMP_12_HE_VERORDNUNGSDATUM!
      */
    public static final String RULES_TEMP_27_HM_VERORDNUNGSDATUM = "Rules.temp.27.hm.verordnungsdatum";

    /** <pre>RULES_TEMP_280_GK_RSA_NEBENDIAGNOSESTATIONAER
      * [en] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
      * [de] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code</pre>
      */
    public static final String RULES_TEMP_280_GK_RSA_NEBENDIAGNOSESTATIONAER = "Rules.temp.280.gk.rsa.nebendiagnosestationaer";

    /** <pre>RULES_TEMP_281_VERSICHERTER_ALTER
      * [en] Format: Ganzzahlig (Beispiel 5)
      * [de] Format: Ganzzahlig (Beispiel 5)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_105_ZUSCHLAGSTAGE! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_128_INTENSIVVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_55_ALTERINTAGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_60_ANZAHLABTEILUNGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_96_MITTLERE_VERWEILDAUER!
      */
    public static final String RULES_TEMP_281_VERSICHERTER_ALTER = "Rules.temp.281.versicherter.alter";

    /** <pre>RULES_TEMP_282_VERSICHERTER_POSTLEITZAHL
      * [en] Format: Ganzzahlig (Beispiel 10245) 5-stellig
      * [de] Format: Ganzzahlig (Beispiel 10245) 5-stellig</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 10245) 5-stellig') seems to be also defined under the key RULES_TEMP_58_POSTLEITZAHL!
      */
    public static final String RULES_TEMP_282_VERSICHERTER_POSTLEITZAHL = "Rules.temp.282.versicherter.postleitzahl";

    /** <pre>RULES_TEMP_28_HM_VERORDNUNGSDATUM
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_28_HM_VERORDNUNGSDATUM = "Rules.temp.28.hm.verordnungsdatum";

    /** <pre>RULES_TEMP_29_ATCCODE
      * [en] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04
      * [de] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04</pre>
      * Attention! this value ('Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04') seems to be also defined under the key RULES_TEMP_41_ATCCODE!
      */
    public static final String RULES_TEMP_29_ATCCODE = "Rules.temp.29.atccode";

    /** <pre>RULES_TEMP_2_HE_PREIS
      * [en] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)
      * [de] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)</pre>
      * Attention! this value ('Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_15_HM_PREIS!
      */
    public static final String RULES_TEMP_2_HE_PREIS = "Rules.temp.2.he.preis";

    /** <pre>RULES_TEMP_30_ATCCODE
      * [en] Format: alphanumerisch (Beispiel: B01AX04)
      * [de] Format: alphanumerisch (Beispiel: B01AX04)</pre>
      * Attention! this value ('Format: alphanumerisch (Beispiel: B01AX04)') seems to be also defined under the key RULES_TEMP_42_ATCCODE! this value ('Format: alphanumerisch (Beispiel: B01AX04)') seems to be also defined under the key RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_30_ATCCODE = "Rules.temp.30.atccode";

    /** <pre>RULES_TEMP_31_DOSIERUNG
      * [en] Format: Fließkommazahl (Beispiel: 2.5)
      * [de] Format: Fließkommazahl (Beispiel: 2.5)</pre>
      * Attention! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_32_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_33_GESAMTPZNDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_43_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_44_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_45_GESAMTPZNDOSIERUNG!
      */
    public static final String RULES_TEMP_31_DOSIERUNG = "Rules.temp.31.dosierung";

    /** <pre>RULES_TEMP_32_GESAMTATCDOSIERUNG
      * [en] Format: Fließkommazahl (Beispiel: 2.5)
      * [de] Format: Fließkommazahl (Beispiel: 2.5)</pre>
      * Attention! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_31_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_33_GESAMTPZNDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_43_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_44_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_45_GESAMTPZNDOSIERUNG!
      */
    public static final String RULES_TEMP_32_GESAMTATCDOSIERUNG = "Rules.temp.32.gesamtatcdosierung";

    /** <pre>RULES_TEMP_33_GESAMTPZNDOSIERUNG
      * [en] Format: Fließkommazahl (Beispiel: 2.5)
      * [de] Format: Fließkommazahl (Beispiel: 2.5)</pre>
      * Attention! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_31_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_32_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_43_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_44_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_45_GESAMTPZNDOSIERUNG!
      */
    public static final String RULES_TEMP_33_GESAMTPZNDOSIERUNG = "Rules.temp.33.gesamtpzndosierung";

    /** <pre>RULES_TEMP_34_GESAMTMPREIS
      * [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
      * [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)</pre>
      * Attention! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_35_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_36_GESAMTPZNPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_46_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_47_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_48_GESAMTPZNPREIS!
      */
    public static final String RULES_TEMP_34_GESAMTMPREIS = "Rules.temp.34.gesamtmpreis";

    /** <pre>RULES_TEMP_35_GESAMTATCPREIS
      * [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
      * [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)</pre>
      * Attention! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_34_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_36_GESAMTPZNPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_46_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_47_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_48_GESAMTPZNPREIS!
      */
    public static final String RULES_TEMP_35_GESAMTATCPREIS = "Rules.temp.35.gesamtatcpreis";

    /** <pre>RULES_TEMP_36_GESAMTPZNPREIS
      * [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
      * [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)</pre>
      * Attention! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_34_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_35_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_46_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_47_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_48_GESAMTPZNPREIS!
      */
    public static final String RULES_TEMP_36_GESAMTPZNPREIS = "Rules.temp.36.gesamtpznpreis";

    /** <pre>RULES_TEMP_37_MPREIS
      * [en] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)
      * [de] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)</pre>
      * Attention! this value ('Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_49_MPREIS!
      */
    public static final String RULES_TEMP_37_MPREIS = "Rules.temp.37.mpreis";

    /** <pre>RULES_TEMP_38_PZNCODE
      * [en] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918
      * [de] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918</pre>
      * Attention! this value ('Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918') seems to be also defined under the key RULES_TEMP_50_PZNCODE!
      */
    public static final String RULES_TEMP_38_PZNCODE = "Rules.temp.38.pzncode";

    /** <pre>RULES_TEMP_39_PZNCODE
      * [en] Format: numerisch (Beispiel: 4114918)
      * [de] Format: numerisch (Beispiel: 4114918)</pre>
      * Attention! this value ('Format: numerisch (Beispiel: 4114918)') seems to be also defined under the key RULES_TEMP_51_PZNCODE!
      */
    public static final String RULES_TEMP_39_PZNCODE = "Rules.temp.39.pzncode";

    /** <pre>RULES_TEMP_3_HE_GESAMTMENGE
      * [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.
      * [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.</pre>
      * Attention! this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.') seems to be also defined under the key RULES_TEMP_16_HM_GESAMTMENGE!
      */
    public static final String RULES_TEMP_3_HE_GESAMTMENGE = "Rules.temp.3.he.gesamtmenge";

    /** <pre>RULES_TEMP_40_MVERORDNUNGSDATUM
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_40_MVERORDNUNGSDATUM = "Rules.temp.40.mverordnungsdatum";

    /** <pre>RULES_TEMP_41_ATCCODE
      * [en] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04
      * [de] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04</pre>
      * Attention! this value ('Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04') seems to be also defined under the key RULES_TEMP_29_ATCCODE!
      */
    public static final String RULES_TEMP_41_ATCCODE = "Rules.temp.41.atccode";

    /** <pre>RULES_TEMP_42_ATCCODE
      * [en] Format: alphanumerisch (Beispiel: B01AX04)
      * [de] Format: alphanumerisch (Beispiel: B01AX04)</pre>
      * Attention! this value ('Format: alphanumerisch (Beispiel: B01AX04)') seems to be also defined under the key RULES_TEMP_30_ATCCODE! this value ('Format: alphanumerisch (Beispiel: B01AX04)') seems to be also defined under the key RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_42_ATCCODE = "Rules.temp.42.atccode";

    /** <pre>RULES_TEMP_43_DOSIERUNG
      * [en] Format: Fließkommazahl (Beispiel: 2.5)
      * [de] Format: Fließkommazahl (Beispiel: 2.5)</pre>
      * Attention! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_31_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_32_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_33_GESAMTPZNDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_44_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_45_GESAMTPZNDOSIERUNG!
      */
    public static final String RULES_TEMP_43_DOSIERUNG = "Rules.temp.43.dosierung";

    /** <pre>RULES_TEMP_44_GESAMTATCDOSIERUNG
      * [en] Format: Fließkommazahl (Beispiel: 2.5)
      * [de] Format: Fließkommazahl (Beispiel: 2.5)</pre>
      * Attention! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_31_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_32_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_33_GESAMTPZNDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_43_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_45_GESAMTPZNDOSIERUNG!
      */
    public static final String RULES_TEMP_44_GESAMTATCDOSIERUNG = "Rules.temp.44.gesamtatcdosierung";

    /** <pre>RULES_TEMP_45_GESAMTPZNDOSIERUNG
      * [en] Format: Fließkommazahl (Beispiel: 2.5)
      * [de] Format: Fließkommazahl (Beispiel: 2.5)</pre>
      * Attention! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_31_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_32_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_33_GESAMTPZNDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_43_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_44_GESAMTATCDOSIERUNG!
      */
    public static final String RULES_TEMP_45_GESAMTPZNDOSIERUNG = "Rules.temp.45.gesamtpzndosierung";

    /** <pre>RULES_TEMP_46_GESAMTMPREIS
      * [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
      * [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)</pre>
      * Attention! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_34_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_35_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_36_GESAMTPZNPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_47_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_48_GESAMTPZNPREIS!
      */
    public static final String RULES_TEMP_46_GESAMTMPREIS = "Rules.temp.46.gesamtmpreis";

    /** <pre>RULES_TEMP_47_GESAMTATCPREIS
      * [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
      * [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)</pre>
      * Attention! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_34_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_35_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_36_GESAMTPZNPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_46_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_48_GESAMTPZNPREIS!
      */
    public static final String RULES_TEMP_47_GESAMTATCPREIS = "Rules.temp.47.gesamtatcpreis";

    /** <pre>RULES_TEMP_48_GESAMTPZNPREIS
      * [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
      * [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)</pre>
      * Attention! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_34_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_35_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_36_GESAMTPZNPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_46_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_47_GESAMTATCPREIS!
      */
    public static final String RULES_TEMP_48_GESAMTPZNPREIS = "Rules.temp.48.gesamtpznpreis";

    /** <pre>RULES_TEMP_49_MPREIS
      * [en] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)
      * [de] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)</pre>
      * Attention! this value ('Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_37_MPREIS!
      */
    public static final String RULES_TEMP_49_MPREIS = "Rules.temp.49.mpreis";

    /** <pre>RULES_TEMP_4_HE_GESAMTMENGE
      * [en] Format: numerisch (Beispiel: 5)
      * [de] Format: numerisch (Beispiel: 5)</pre>
      * Attention! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_11_HE_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_17_HM_GESAMTMENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_24_HM_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_26_HM_MENGE!
      */
    public static final String RULES_TEMP_4_HE_GESAMTMENGE = "Rules.temp.4.he.gesamtmenge";

    /** <pre>RULES_TEMP_50_PZNCODE
      * [en] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918
      * [de] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918</pre>
      * Attention! this value ('Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918') seems to be also defined under the key RULES_TEMP_38_PZNCODE!
      */
    public static final String RULES_TEMP_50_PZNCODE = "Rules.temp.50.pzncode";

    /** <pre>RULES_TEMP_51_PZNCODE
      * [en] Format: numerisch (Beispiel: 4114918)
      * [de] Format: numerisch (Beispiel: 4114918)</pre>
      * Attention! this value ('Format: numerisch (Beispiel: 4114918)') seems to be also defined under the key RULES_TEMP_39_PZNCODE!
      */
    public static final String RULES_TEMP_51_PZNCODE = "Rules.temp.51.pzncode";

    /** <pre>RULES_TEMP_52_FALL_NUMERIC_10
      * [en] Fall.Numeric10
      * [de] Fall.Numeric10</pre>
      * Attention! this value ('Fall.Numeric10') seems to be also defined under the key RULES_TEMP_168_FALL_NUMERIC_10!
      */
    public static final String RULES_TEMP_52_FALL_NUMERIC_10 = "Rules.temp.52.fall.numeric10";

    /** <pre>RULES_TEMP_52_MVERORDNUNGSDATUM
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_52_MVERORDNUNGSDATUM = "Rules.temp.52.mverordnungsdatum";

    /** <pre>RULES_TEMP_53_FALL_NUMERIC_6
      * [en] Fall.Numeric6
      * [de] Fall.Numeric6</pre>
      * Attention! this value ('Fall.Numeric6') seems to be also defined under the key RULES_TEMP_169_FALL_NUMERIC_6!
      */
    public static final String RULES_TEMP_53_FALL_NUMERIC_6 = "Rules.temp.53.fall.numeric6";

    /** <pre>RULES_TEMP_53_JETZT
      * [en] Format: hh:mm:ss
      * [de] Format: hh:mm:ss</pre>
      */
    public static final String RULES_TEMP_53_JETZT = "Rules.temp.53.jetzt";

    /** <pre>RULES_TEMP_54_ALTERINJAHREN
      * [en] Format: Ganzzahlig (Beispiel 50)
      * [de] Format: Ganzzahlig (Beispiel 50)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 50)') seems to be also defined under the key RULES_TEMP_137_VERWEILDAUERINSTUNDEN! this value ('Format: Ganzzahlig (Beispiel 50)') seems to be also defined under the key RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_2!
      */
    public static final String RULES_TEMP_54_ALTERINJAHREN = "Rules.temp.54.alterinjahren";

    /** <pre>RULES_TEMP_54_FALL_NUMERIC_7
      * [en] Fall.Numeric7
      * [de] Fall.Numeric7</pre>
      * Attention! this value ('Fall.Numeric7') seems to be also defined under the key RULES_TEMP_170_FALL_NUMERIC_7!
      */
    public static final String RULES_TEMP_54_FALL_NUMERIC_7 = "Rules.temp.54.fall.numeric7";

    /** <pre>RULES_TEMP_55_ALTERINTAGEN
      * [en] Format: Ganzzahlig (Beispiel 5)
      * [de] Format: Ganzzahlig (Beispiel 5)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_105_ZUSCHLAGSTAGE! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_128_INTENSIVVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_281_VERSICHERTER_ALTER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_60_ANZAHLABTEILUNGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_96_MITTLERE_VERWEILDAUER!
      */
    public static final String RULES_TEMP_55_ALTERINTAGEN = "Rules.temp.55.alterintagen";

    /** <pre>RULES_TEMP_55_FALL_NUMERIC_8
      * [en] Fall.Numeric8
      * [de] Fall.Numeric8</pre>
      * Attention! this value ('Fall.Numeric8') seems to be also defined under the key RULES_TEMP_171_FALL_NUMERIC_8!
      */
    public static final String RULES_TEMP_55_FALL_NUMERIC_8 = "Rules.temp.55.fall.numeric8";

    /** <pre>RULES_TEMP_56_FALL_NUMERIC_9
      * [en] Fall.Numeric9
      * [de] Fall.Numeric9</pre>
      * Attention! this value ('Fall.Numeric9') seems to be also defined under the key RULES_TEMP_172_FALL_NUMERIC_9!
      */
    public static final String RULES_TEMP_56_FALL_NUMERIC_9 = "Rules.temp.56.fall.numeric9";

    /** <pre>RULES_TEMP_56_GEBURTSDATUM
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_56_GEBURTSDATUM = "Rules.temp.56.geburtsdatum";

    /** <pre>RULES_TEMP_57_FALL_STRING_10
      * [en] Fall.String10
      * [de] Fall.String10</pre>
      * Attention! this value ('Fall.String10') seems to be also defined under the key RULES_TEMP_173_FALL_STRING_10!
      */
    public static final String RULES_TEMP_57_FALL_STRING_10 = "Rules.temp.57.fall.string10";

    /** <pre>RULES_TEMP_57_GEWICHT
      * [en] Format: Ganzzahlig (Beispiel 2500)
      * [de] Format: Ganzzahlig (Beispiel 2500)</pre>
      */
    public static final String RULES_TEMP_57_GEWICHT = "Rules.temp.57.gewicht";

    /** <pre>RULES_TEMP_58_FALL_STRING_6
      * [en] Fall.String6
      * [de] Fall.String6</pre>
      * Attention! this value ('Fall.String6') seems to be also defined under the key RULES_TEMP_174_FALL_STRING_6!
      */
    public static final String RULES_TEMP_58_FALL_STRING_6 = "Rules.temp.58.fall.string6";

    /** <pre>RULES_TEMP_58_POSTLEITZAHL
      * [en] Format: Ganzzahlig (Beispiel 10245) 5-stellig
      * [de] Format: Ganzzahlig (Beispiel 10245) 5-stellig</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 10245) 5-stellig') seems to be also defined under the key RULES_TEMP_282_VERSICHERTER_POSTLEITZAHL!
      */
    public static final String RULES_TEMP_58_POSTLEITZAHL = "Rules.temp.58.postleitzahl";

    /** <pre>RULES_TEMP_59_FALL_STRING_7
      * [en] Fall.String7
      * [de] Fall.String7</pre>
      * Attention! this value ('Fall.String7') seems to be also defined under the key RULES_TEMP_175_FALL_STRING_7!
      */
    public static final String RULES_TEMP_59_FALL_STRING_7 = "Rules.temp.59.fall.string7";

    /** <pre>RULES_TEMP_59_WOHNORT
      * [en] Format: bis zu 255 Zeichen alphanumerisch (Beispiel: Berlin)
      * [de] Format: bis zu 255 Zeichen alphanumerisch (Beispiel: Berlin)</pre>
      */
    public static final String RULES_TEMP_59_WOHNORT = "Rules.temp.59.wohnort";

    /** <pre>RULES_TEMP_5_HE_GESAMTPREIS_ALLE
      * [en] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.
      * [de] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.</pre>
      * Attention! this value ('Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_18_HM_GESAMTPREIS_ALLE!
      */
    public static final String RULES_TEMP_5_HE_GESAMTPREIS_ALLE = "Rules.temp.5.he.gesamtpreis.alle";

    /** <pre>RULES_TEMP_60_ANZAHLABTEILUNGEN
      * [en] Format: Ganzzahlig (Beispiel 5)
      * [de] Format: Ganzzahlig (Beispiel 5)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_105_ZUSCHLAGSTAGE! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_128_INTENSIVVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_281_VERSICHERTER_ALTER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_55_ALTERINTAGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_96_MITTLERE_VERWEILDAUER!
      */
    public static final String RULES_TEMP_60_ANZAHLABTEILUNGEN = "Rules.temp.60.anzahlabteilungen";

    /** <pre>RULES_TEMP_60_FALL_STRING_8
      * [en] Fall.String8
      * [de] Fall.String8</pre>
      * Attention! this value ('Fall.String8') seems to be also defined under the key RULES_TEMP_176_FALL_STRING_8!
      */
    public static final String RULES_TEMP_60_FALL_STRING_8 = "Rules.temp.60.fall.string8";

    /** <pre>RULES_TEMP_61_AUFNEHMENDEFACHABTEILUNG
      * [en] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
      * [de] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.</pre>
      * Attention! this value ('z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.') seems to be also defined under the key RULES_TEMP_63_BEHANDELNDEFACHABTEILUNG! this value ('z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.') seems to be also defined under the key RULES_TEMP_65_ENTLASSENDEFACHABTEILUNG!
      */
    public static final String RULES_TEMP_61_AUFNEHMENDEFACHABTEILUNG = "Rules.temp.61.aufnehmendefachabteilung";

    /** <pre>RULES_TEMP_61_FALL_STRING_9
      * [en] Fall.String9
      * [de] Fall.String9</pre>
      * Attention! this value ('Fall.String9') seems to be also defined under the key RULES_TEMP_177_FALL_STRING_9!
      */
    public static final String RULES_TEMP_61_FALL_STRING_9 = "Rules.temp.61.fall.string9";

    /** <pre>RULES_TEMP_62_AUFNEHMENDEFACHABTEILUNG
      * [en] Format: Ganzzahlig (Beispiel 1500)
      * [de] Format: Ganzzahlig (Beispiel 1500)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_64_BEHANDELNDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_66_ENTLASSENDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_67_ABTEILUNG!
      */
    public static final String RULES_TEMP_62_AUFNEHMENDEFACHABTEILUNG = "Rules.temp.62.aufnehmendefachabteilung";

    /** <pre>RULES_TEMP_62_DRGERLOES
      * [en] Erloes(DRG)
      * [de] Erloes(DRG)</pre>
      */
    public static final String RULES_TEMP_62_DRGERLOES = "Rules.temp.62.drgerloes";

    /** <pre>RULES_TEMP_63_BEHANDELNDEFACHABTEILUNG
      * [en] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
      * [de] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.</pre>
      * Attention! this value ('z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.') seems to be also defined under the key RULES_TEMP_61_AUFNEHMENDEFACHABTEILUNG! this value ('z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.') seems to be also defined under the key RULES_TEMP_65_ENTLASSENDEFACHABTEILUNG!
      */
    public static final String RULES_TEMP_63_BEHANDELNDEFACHABTEILUNG = "Rules.temp.63.behandelndefachabteilung";

    /** <pre>RULES_TEMP_63_DRGERLOES
      * [en] Erlös des DRG - Falles ohne Berücksichtigung der Zusatzentgelten und Pflegeaufwendungen(ab 2020)
      * [de] Erlös des DRG - Falles ohne Berücksichtigung der Zusatzentgelten und Pflegeaufwendungen(ab 2020)</pre>
      */
    public static final String RULES_TEMP_63_DRGERLOES = "Rules.temp.63.drgerloes";

    /** <pre>RULES_TEMP_64_BEHANDELNDEFACHABTEILUNG
      * [en] Format: Ganzzahlig (Beispiel 1500)
      * [de] Format: Ganzzahlig (Beispiel 1500)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_62_AUFNEHMENDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_66_ENTLASSENDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_67_ABTEILUNG!
      */
    public static final String RULES_TEMP_64_BEHANDELNDEFACHABTEILUNG = "Rules.temp.64.behandelndefachabteilung";

    /** <pre>RULES_TEMP_64_FALLERLOES
      * [en] Gesamterloes(DRG)
      * [de] Gesamterloes(DRG)</pre>
      */
    public static final String RULES_TEMP_64_FALLERLOES = "Rules.temp.64.fallerloes";

    /** <pre>RULES_TEMP_65_ENTLASSENDEFACHABTEILUNG
      * [en] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
      * [de] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.</pre>
      * Attention! this value ('z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.') seems to be also defined under the key RULES_TEMP_61_AUFNEHMENDEFACHABTEILUNG! this value ('z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.') seems to be also defined under the key RULES_TEMP_63_BEHANDELNDEFACHABTEILUNG!
      */
    public static final String RULES_TEMP_65_ENTLASSENDEFACHABTEILUNG = "Rules.temp.65.entlassendefachabteilung";

    /** <pre>RULES_TEMP_65_FALLERLOES
      * [en] Gesamterlös des DRG - Falles mit Pflegeaufwendungen(ab 2020) ohne Berücksichtigung der Zusatzentgelten
      * [de] Gesamterlös des DRG - Falles mit Pflegeaufwendungen(ab 2020) ohne Berücksichtigung der Zusatzentgelten</pre>
      */
    public static final String RULES_TEMP_65_FALLERLOES = "Rules.temp.65.fallerloes";

    /** <pre>RULES_TEMP_66_ENTLASSENDEFACHABTEILUNG
      * [en] Format: Ganzzahlig (Beispiel 1500)
      * [de] Format: Ganzzahlig (Beispiel 1500)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_62_AUFNEHMENDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_64_BEHANDELNDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_67_ABTEILUNG!
      */
    public static final String RULES_TEMP_66_ENTLASSENDEFACHABTEILUNG = "Rules.temp.66.entlassendefachabteilung";

    /** <pre>RULES_TEMP_67_ABTEILUNG
      * [en] Format: Ganzzahlig (Beispiel 1500)
      * [de] Format: Ganzzahlig (Beispiel 1500)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_62_AUFNEHMENDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_64_BEHANDELNDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_66_ENTLASSENDEFACHABTEILUNG!
      */
    public static final String RULES_TEMP_67_ABTEILUNG = "Rules.temp.67.abteilung";

    /** <pre>RULES_TEMP_68_STATION
      * [en] Format: alphanumerisch (Beispiel: 7B)
      * [de] Format: alphanumerisch (Beispiel: 7B)</pre>
      */
    public static final String RULES_TEMP_68_STATION = "Rules.temp.68.station";

    /** <pre>RULES_TEMP_69_VERLEGUNGSDATUM
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_69_VERLEGUNGSDATUM = "Rules.temp.69.verlegungsdatum";

    /** <pre>RULES_TEMP_6_HE_GESAMTPREIS_ALLE
      * [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
      * [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)</pre>
      * Attention! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_19_HM_GESAMTPREIS_ALLE! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_21_HM_GESAMTPREIS! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_8_HE_GESAMTPREIS!
      */
    public static final String RULES_TEMP_6_HE_GESAMTPREIS_ALLE = "Rules.temp.6.he.gesamtpreis.alle";

    /** <pre>RULES_TEMP_70_VERLEGUNGSUHRZEIT
      * [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
      * [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten</pre>
      * Attention! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_113_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_124_ENTLASSUNGSUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_176_KLINIK_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_185_KLINIK_ENTLASSUNGSUHRZEIT!
      */
    public static final String RULES_TEMP_70_VERLEGUNGSUHRZEIT = "Rules.temp.70.verlegungsuhrzeit";

    /** <pre>RULES_TEMP_71_ENTGELTE
      * [en] Rechnung: Rechnungsart
      * [de] Rechnung: Rechnungsart</pre>
      */
    public static final String RULES_TEMP_71_ENTGELTE = "Rules.temp.71.entgelte";

    /** <pre>RULES_TEMP_72_ENTGELTE
      * [en] Rechnung: Rechnungsdatum
      * [de] Rechnung: Rechnungsdatum</pre>
      */
    public static final String RULES_TEMP_72_ENTGELTE = "Rules.temp.72.entgelte";

    /** <pre>RULES_TEMP_73_ENTGELTE
      * [en] Rechnung: Rechnungsnummer
      * [de] Rechnung: Rechnungsnummer</pre>
      */
    public static final String RULES_TEMP_73_ENTGELTE = "Rules.temp.73.entgelte";

    /** <pre>RULES_TEMP_74_ABSCHLAGSTAGE
      * [en] Format: Ganzzahlig (Beispiel: 5)
      * [de] Format: Ganzzahlig (Beispiel: 5)</pre>
      */
    public static final String RULES_TEMP_74_ABSCHLAGSTAGE = "Rules.temp.74.abschlagstage";

    /** <pre>RULES_TEMP_75_ADRG
      * [en] Format: Alphanumerisch (Beispiele: A11 oder B75)
      * [de] Format: Alphanumerisch (Beispiele: A11 oder B75)</pre>
      * Attention! this value ('Format: Alphanumerisch (Beispiele: A11 oder B75)') seems to be also defined under the key RULES_TEMP_159_KLINIK_ADRG!
      */
    public static final String RULES_TEMP_75_ADRG = "Rules.temp.75.adrg";

    /** <pre>RULES_TEMP_76_PFLEGETAGE
      * [en] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.
      * [de] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.</pre>
      * Attention! this value ('Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_83_PFLEGETAGE!
      */
    public static final String RULES_TEMP_76_PFLEGETAGE = "Rules.temp.76.pflegetage";

    /** <pre>RULES_TEMP_77_PFLEGETAGE
      * [en] Format: Ganzzahlig (Beispiel 2)
      * [de] Format: Ganzzahlig (Beispiel 2)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
      */
    public static final String RULES_TEMP_77_PFLEGETAGE = "Rules.temp.77.pflegetage";

    /** <pre>RULES_TEMP_78_BASISFALLWERT
      * [en] Format: Währung (Beispiel 2100,40)
      * [de] Format: Währung (Beispiel 2100,40)</pre>
      */
    public static final String RULES_TEMP_78_BASISFALLWERT = "Rules.temp.78.basisfallwert";

    /** <pre>RULES_TEMP_78_PFLEGECWTAG
      * [en] Pflege CW/Tag
      * [de] Pflege CW/Tag</pre>
      */
    public static final String RULES_TEMP_78_PFLEGECWTAG = "Rules.temp.78.pflegecwtag";

    /** <pre>RULES_TEMP_79_ABSCHLAGS_CW
      * [en] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)
      * [de] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)</pre>
      * Attention! this value ('Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)') seems to be also defined under the key RULES_TEMP_80_ZUSCHLAGS_CW! this value ('Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)') seems to be also defined under the key RULES_TEMP_94_KOSTENGEWICHT_KATALOG!
      */
    public static final String RULES_TEMP_79_ABSCHLAGS_CW = "Rules.temp.79.abschlags.cw";

    /** <pre>RULES_TEMP_79_PFLEGECWTAG
      * [en] Pflegeerlös Bewertungsrelation/Tag
      * [de] Pflegeerlös Bewertungsrelation/Tag</pre>
      */
    public static final String RULES_TEMP_79_PFLEGECWTAG = "Rules.temp.79.pflegecwtag";

    /** <pre>RULES_TEMP_7_HE_GESAMTPREIS
      * [en] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.
      * [de] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.</pre>
      * Attention! this value ('Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.') seems to be also defined under the key RULES_TEMP_20_HM_GESAMTPREIS!
      */
    public static final String RULES_TEMP_7_HE_GESAMTPREIS = "Rules.temp.7.he.gesamtpreis";

    /** <pre>RULES_TEMP_80_DRGPFLEGEERLOES
      * [en] PflegeErloes(DRG)
      * [de] PflegeErloes(DRG)</pre>
      */
    public static final String RULES_TEMP_80_DRGPFLEGEERLOES = "Rules.temp.80.drgpflegeerloes";

    /** <pre>RULES_TEMP_80_ZUSCHLAGS_CW
      * [en] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)
      * [de] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)</pre>
      * Attention! this value ('Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)') seems to be also defined under the key RULES_TEMP_79_ABSCHLAGS_CW! this value ('Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)') seems to be also defined under the key RULES_TEMP_94_KOSTENGEWICHT_KATALOG!
      */
    public static final String RULES_TEMP_80_ZUSCHLAGS_CW = "Rules.temp.80.zuschlags.cw";

    /** <pre>RULES_TEMP_81_DRG
      * [en] Format: Alphanumerisch (Beispiele: A11B oder B75A)
      * [de] Format: Alphanumerisch (Beispiele: A11B oder B75A)</pre>
      * Attention! this value ('Format: Alphanumerisch (Beispiele: A11B oder B75A)') seems to be also defined under the key RULES_TEMP_160_KLINIK_DRG!
      */
    public static final String RULES_TEMP_81_DRG = "Rules.temp.81.drg";

    /** <pre>RULES_TEMP_81_DRGPFLEGEERLOES
      * [en] Pflegeerlös eines DRG - Falles ab 2020
      * [de] Pflegeerlös eines DRG - Falles ab 2020</pre>
      */
    public static final String RULES_TEMP_81_DRGPFLEGEERLOES = "Rules.temp.81.drgpflegeerloes";

    /** <pre>RULES_TEMP_82_ENTGELT
      * [en] Format: alphanumerisch 8-stellig (Beispiel: 48000001)
      * [de] Format: alphanumerisch 8-stellig (Beispiel: 48000001)</pre>
      * Attention! this value ('Format: alphanumerisch 8-stellig (Beispiel: 48000001)') seems to be also defined under the key RULES_TEMP_167_KLINIK_ENTGELTART!
      */
    public static final String RULES_TEMP_82_ENTGELT = "Rules.temp.82.entgelt";

    /** <pre>RULES_TEMP_82_PFLEGETAGE
      * [en] Pflegetage (PEPP)
      * [de] Pflegetage (PEPP)</pre>
      */
    public static final String RULES_TEMP_82_PFLEGETAGE = "Rules.temp.82.pflegetage";

    /** <pre>RULES_TEMP_83_ENTGELTABRECHNUNGBIS
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_83_ENTGELTABRECHNUNGBIS = "Rules.temp.83.entgeltabrechnungbis";

    /** <pre>RULES_TEMP_83_PFLEGETAGE
      * [en] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.
      * [de] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.</pre>
      * Attention! this value ('Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_76_PFLEGETAGE!
      */
    public static final String RULES_TEMP_83_PFLEGETAGE = "Rules.temp.83.pflegetage";

    /** <pre>RULES_TEMP_84_ENTGELTABRECHNUNGVON
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
      */
    public static final String RULES_TEMP_84_ENTGELTABRECHNUNGVON = "Rules.temp.84.entgeltabrechnungvon";

    /** <pre>RULES_TEMP_84_PFLEGETAGE
      * [en] Format: Ganzzahlig (Beispiel 2)
      * [de] Format: Ganzzahlig (Beispiel 2)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
      */
    public static final String RULES_TEMP_84_PFLEGETAGE = "Rules.temp.84.pflegetage";

    /** <pre>RULES_TEMP_85_ENTGELTANZAHLJEENTGELT
      * [en] Format: Ganzzahlig (Beispiel 2)
      * [de] Format: Ganzzahlig (Beispiel 2)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE!
      */
    public static final String RULES_TEMP_85_ENTGELTANZAHLJEENTGELT = "Rules.temp.85.entgeltanzahljeentgelt";

    /** <pre>RULES_TEMP_85_PFLEGETAGEDRG
      * [en] Pflegetage(DRG)
      * [de] Pflegetage(DRG)</pre>
      */
    public static final String RULES_TEMP_85_PFLEGETAGEDRG = "Rules.temp.85.pflegetagedrg";

    /** <pre>RULES_TEMP_86_ENTGELTEINZELBETRAG
      * [en] Format: Währung (Beispiel: 57.52)
      * [de] Format: Währung (Beispiel: 57.52)</pre>
      * Attention! this value ('Format: Währung (Beispiel: 57.52)') seems to be also defined under the key RULES_TEMP_168_KLINIK_ENTGELTBETRAG!
      */
    public static final String RULES_TEMP_86_ENTGELTEINZELBETRAG = "Rules.temp.86.entgelteinzelbetrag";

    /** <pre>RULES_TEMP_86_PFLEGETAGEDRG
      * [en] Pflegetage(DRG) ab 2020
      * [de] Pflegetage(DRG) ab 2020</pre>
      */
    public static final String RULES_TEMP_86_PFLEGETAGEDRG = "Rules.temp.86.pflegetagedrg";

    /** <pre>RULES_TEMP_87_ENTGELTSUMMEJEENTGELT
      * [en] Format: Währung (Beispiel: 635.60)
      * [de] Format: Währung (Beispiel: 635.60)</pre>
      */
    public static final String RULES_TEMP_87_ENTGELTSUMMEJEENTGELT = "Rules.temp.87.entgeltsummejeentgelt";

    /** <pre>RULES_TEMP_88_GROUPERRELEVANTEDIAGNOSE
      * [en] Diagnose, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Diagnose, Hauptdiagnose, Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
      * [de] Diagnose, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Diagnose, Hauptdiagnose, Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.</pre>
      */
    public static final String RULES_TEMP_88_GROUPERRELEVANTEDIAGNOSE = "Rules.temp.88.grouperrelevantediagnose";

    /** <pre>RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE
      * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
      * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
      * Attention! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
      */
    public static final String RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE = "Rules.temp.89.grouperrelevantediagnose";

    /** <pre>RULES_TEMP_8_HE_GESAMTPREIS
      * [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
      * [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)</pre>
      * Attention! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_19_HM_GESAMTPREIS_ALLE! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_21_HM_GESAMTPREIS! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_6_HE_GESAMTPREIS_ALLE!
      */
    public static final String RULES_TEMP_8_HE_GESAMTPREIS = "Rules.temp.8.he.gesamtpreis";

    /** <pre>RULES_TEMP_90_GROUPERRELEVANTEPROZEDUR
      * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)
      * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)</pre>
      * Attention! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)') seems to be also defined under the key RULES_TEMP_148_PROZEDUR! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)') seems to be also defined under the key RULES_TEMP_157_KLINIK_PROZEDUR!
      */
    public static final String RULES_TEMP_90_GROUPERRELEVANTEPROZEDUR = "Rules.temp.90.grouperrelevanteprozedur";

    /** <pre>RULES_TEMP_91_KOSTENGEWICHT_EFFEKTIV
      * [en] Kostengewicht für DRG - Fälle (DRG + Erbringungsart) + Zuschlags_CW oder - Abschlags_CW .
      * [de] Kostengewicht für DRG - Fälle (DRG + Erbringungsart) + Zuschlags_CW oder - Abschlags_CW .</pre>
      */
    public static final String RULES_TEMP_91_KOSTENGEWICHT_EFFEKTIV = "Rules.temp.91.kostengewicht.effektiv";

    /** <pre>RULES_TEMP_92_KOSTENGEWICHT_EFFEKTIV
      * [en] Kostengewicht für PEPP - Fälle: Die Gesamt-Bewertungsrelation, die sich aus der Verweildauer und den einzelnen Vergütungsstufen ergeben.
      * [de] Kostengewicht für PEPP - Fälle: Die Gesamt-Bewertungsrelation, die sich aus der Verweildauer und den einzelnen Vergütungsstufen ergeben.</pre>
      */
    public static final String RULES_TEMP_92_KOSTENGEWICHT_EFFEKTIV = "Rules.temp.92.kostengewicht.effektiv";

    /** <pre>RULES_TEMP_93_KOSTENGEWICHT_EFFEKTIV
      * [en] Format: Fließkommazahl (Beispiele: 0.202 oder 2.531)
      * [de] Format: Fließkommazahl (Beispiele: 0.202 oder 2.531)</pre>
      */
    public static final String RULES_TEMP_93_KOSTENGEWICHT_EFFEKTIV = "Rules.temp.93.kostengewicht.effektiv";

    /** <pre>RULES_TEMP_94_KOSTENGEWICHT_KATALOG
      * [en] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)
      * [de] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)</pre>
      * Attention! this value ('Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)') seems to be also defined under the key RULES_TEMP_79_ABSCHLAGS_CW! this value ('Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)') seems to be also defined under the key RULES_TEMP_80_ZUSCHLAGS_CW!
      */
    public static final String RULES_TEMP_94_KOSTENGEWICHT_KATALOG = "Rules.temp.94.kostengewicht.katalog";

    /** <pre>RULES_TEMP_95_MITTLERE_VERWEILDAUER
      * [en] Sie gibt die Liegezeit an, bei der bei Unterschreitung und gleichzeitiger Verlegung aus einem anderen Krankenhaus und/oder in ein anderes Krankenhaus pro Tag ein Abschlag vom Relativgewicht ermittelt werden muss (Ausnahmen laut Fallpauschalenkatalog beachten). Mit dieser Regelung soll berücksichtigt werden, dass bei einer gemeinsamen Behandlung eines Patienten durch zwei oder mehrere Krankenhäuser die einzelnen Erlöse (DRG) gemindert werden müssen.
      * [de] Sie gibt die Liegezeit an, bei der bei Unterschreitung und gleichzeitiger Verlegung aus einem anderen Krankenhaus und/oder in ein anderes Krankenhaus pro Tag ein Abschlag vom Relativgewicht ermittelt werden muss (Ausnahmen laut Fallpauschalenkatalog beachten). Mit dieser Regelung soll berücksichtigt werden, dass bei einer gemeinsamen Behandlung eines Patienten durch zwei oder mehrere Krankenhäuser die einzelnen Erlöse (DRG) gemindert werden müssen.</pre>
      */
    public static final String RULES_TEMP_95_MITTLERE_VERWEILDAUER = "Rules.temp.95.mittlere.verweildauer";

    /** <pre>RULES_TEMP_96_MITTLERE_VERWEILDAUER
      * [en] Format: Ganzzahlig (Beispiel 5)
      * [de] Format: Ganzzahlig (Beispiel 5)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_105_ZUSCHLAGSTAGE! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_128_INTENSIVVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_281_VERSICHERTER_ALTER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_55_ALTERINTAGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_60_ANZAHLABTEILUNGEN!
      */
    public static final String RULES_TEMP_96_MITTLERE_VERWEILDAUER = "Rules.temp.96.mittlere.verweildauer";

    /** <pre>RULES_TEMP_97_OBERE_GRENZVERWEILDAUER
      * [en] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.
      * [de] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.</pre>
      * Attention! this value ('Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.') seems to be also defined under the key RULES_TEMP_161_KLINIK_OGVD!
      */
    public static final String RULES_TEMP_97_OBERE_GRENZVERWEILDAUER = "Rules.temp.97.obere.grenzverweildauer";

    /** <pre>RULES_TEMP_98_OBERE_GRENZVERWEILDAUER
      * [en] Format: Ganzzahlig (Beispiel 15)
      * [de] Format: Ganzzahlig (Beispiel 15)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 15)') seems to be also defined under the key RULES_TEMP_162_KLINIK_OGVD!
      */
    public static final String RULES_TEMP_98_OBERE_GRENZVERWEILDAUER = "Rules.temp.98.obere.grenzverweildauer";

    /** <pre>RULES_TEMP_99_PEPP
      * [en] Format: Aplhanumerisch (Beispiele P003B, TK04Z)
      * [de] Format: Aplhanumerisch (Beispiele P003B, TK04Z)</pre>
      * Attention! this value ('Format: Aplhanumerisch (Beispiele P003B, TK04Z)') seems to be also defined under the key RULES_TEMP_165_KLINIK_PEPP!
      */
    public static final String RULES_TEMP_99_PEPP = "Rules.temp.99.pepp";

    /** <pre>RULES_TEMP_9_HE_POSITIONSNUMMER
      * [en] Pharmazentralnummer für Hilfsmittel
      * [de] Pharmazentralnummer für Hilfsmittel</pre>
      * Attention! this value ('Pharmazentralnummer für Hilfsmittel') seems to be also defined under the key RULES_TEMP_22_HM_POSITIONSNUMMER!
      */
    public static final String RULES_TEMP_9_HE_POSITIONSNUMMER = "Rules.temp.9.he.positionsnummer";

    /** <pre>RULES_TXT_ADM_WEEKDAY
      * [en] Aufnahmewochentag
      * [de] Aufnahmewochentag</pre>
      */
    public static final String RULES_TXT_ADM_WEEKDAY = "Rules.txt.adm.weekday";

    /** <pre>RULES_TXT_ADMISSION_TYPE_4_LONG
      * [en] V - Verlegung
      * [de] V - Verlegung</pre>
      */
    public static final String RULES_TXT_ADMISSION_TYPE_4_LONG = "Rules.txt.admission.type.4.long";

    /** <pre>RULES_TXT_AGE_IN_YEARS
      * [en] Alter in Jahren
      * [de] Alter in Jahren</pre>
      */
    public static final String RULES_TXT_AGE_IN_YEARS = "Rules.txt.age.in.years";

    /** <pre>RULES_TXT_CASE_CRITERIA
      * [en] Fallkriterien
      * [de] Fallkriterien</pre>
      */
    public static final String RULES_TXT_CASE_CRITERIA = "Rules.txt.case.criteria";

    /** <pre>RULES_TXT_COMPLAINT_SUGGESTION
      * [en] Vorschlag
      * [de] Vorschlag</pre>
      * Attention! this value ('Vorschlag') seems to be also defined under the key RULE_FILTER_DIALOG_RULE_SUGGESTION!
      */
    public static final String RULES_TXT_COMPLAINT_SUGGESTION = "Rules.txt.complaint.suggestion";

    /** <pre>RULES_TXT_CRIT_ACCOUCHEMENT_DATE_1_DIS
      * [en] Tag der Entbindung1
      * [de] Tag der Entbindung1</pre>
      */
    public static final String RULES_TXT_CRIT_ACCOUCHEMENT_DATE_1_DIS = "Rules.txt.crit.accouchement.date.1.dis";

    /** <pre>RULES_TXT_CRIT_ACCOUCHEMENT_DATE_1_TOOLTIP_1
      * [en] Tag der Geburt des Kindes (des ersten Kindes bei Mehrlingen).
      * [de] Tag der Geburt des Kindes (des ersten Kindes bei Mehrlingen).</pre>
      */
    public static final String RULES_TXT_CRIT_ACCOUCHEMENT_DATE_1_TOOLTIP_1 = "Rules.txt.crit.accouchement.date.1.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ACCOUCHEMENT_DATE_2_DIS
      * [en] Tag der Entbindung2
      * [de] Tag der Entbindung2</pre>
      */
    public static final String RULES_TXT_CRIT_ACCOUCHEMENT_DATE_2_DIS = "Rules.txt.crit.accouchement.date.2.dis";

    /** <pre>RULES_TXT_CRIT_ACCOUCHEMENT_DATE_2_TOOLTIP_1
      * [en] Tag der Geburt des letzten Kindes bei Mehrlingsgeburten.
      * [de] Tag der Geburt des letzten Kindes bei Mehrlingsgeburten.</pre>
      */
    public static final String RULES_TXT_CRIT_ACCOUCHEMENT_DATE_2_TOOLTIP_1 = "Rules.txt.crit.accouchement.date.2.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ADM_2_TYPE_DIS
      * [en] Aufnahmegrund2
      * [de] Aufnahmegrund2</pre>
      */
    public static final String RULES_TXT_CRIT_ADM_2_TYPE_DIS = "Rules.txt.crit.adm2.type.dis";

    /** <pre>RULES_TXT_CRIT_ADM_CAUSE_DIS
      * [en] Aufnahmeanlass
      * [de] Aufnahmeanlass</pre>
      */
    public static final String RULES_TXT_CRIT_ADM_CAUSE_DIS = "Rules.txt.crit.adm.cause.dis";

    /** <pre>RULES_TXT_CRIT_ADM_DATE_FULL
      * [en] Aufnahmedatum_mit_Uhrzeit
      * [de] Aufnahmedatum_mit_Uhrzeit</pre>
      */
    public static final String RULES_TXT_CRIT_ADM_DATE_FULL = "Rules.txt.crit.adm.date.full";

    /** <pre>RULES_TXT_CRIT_ADM_DATE_FULL_DIS
      * [en] Aufnahmedatum mit Uhrzeit
      * [de] Aufnahmedatum mit Uhrzeit</pre>
      */
    public static final String RULES_TXT_CRIT_ADM_DATE_FULL_DIS = "Rules.txt.crit.adm.date.full.dis";

    /** <pre>RULES_TXT_CRIT_ADM_TYPE_DIS
      * [en] Aufnahmegrund1
      * [de] Aufnahmegrund1</pre>
      */
    public static final String RULES_TXT_CRIT_ADM_TYPE_DIS = "Rules.txt.crit.adm.type.dis";

    /** <pre>RULES_TXT_CRIT_ADMISSION_DATE_TOOLTIP_1
      * [en] Aufnahmedatum ist der erste Behandlungstag  im Krankenhaus.
      * [de] Aufnahmedatum ist der erste Behandlungstag  im Krankenhaus.</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_DATE_TOOLTIP_1 = "Rules.txt.crit.admission.date.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ADMISSION_DAY_DIS
      * [en] Aufnahmetag
      * [de] Aufnahmetag</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_DAY_DIS = "Rules.txt.crit.admission.day.dis";

    /** <pre>RULES_TXT_CRIT_ADMISSION_DAY_TIME_DIS
      * [en] Aufnahmeuhrzeit
      * [de] Aufnahmeuhrzeit</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_DAY_TIME_DIS = "Rules.txt.crit.admission.day.time.dis";

    /** <pre>RULES_TXT_CRIT_ADMISSION_DAY_TIME_TOOLTIP_1
      * [en] Uhrzeit, zu der der Patient am ersten Behandlungstag aufgenommen worden ist.
      * [de] Uhrzeit, zu der der Patient am ersten Behandlungstag aufgenommen worden ist.</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_DAY_TIME_TOOLTIP_1 = "Rules.txt.crit.admission.day.time.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ADMISSION_DAY_TOOLTIP_1
      * [en] Tag der stationären Aufnahme.
      * [de] Tag der stationären Aufnahme.</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_DAY_TOOLTIP_1 = "Rules.txt.crit.admission.day.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ADMISSION_DIAG_DIS
      * [en] Aufnahmediagnose
      * [de] Aufnahmediagnose</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_DIAG_DIS = "Rules.txt.crit.admission.diag.dis";

    /** <pre>RULES_TXT_CRIT_ADMISSION_DIAG_TOOLTIP_1
      * [en] Die Diagnose, aufgrund derer ein Patient in ein Krankenhaus aufgenommen worden ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
      * [de] Die Diagnose, aufgrund derer ein Patient in ein Krankenhaus aufgenommen worden ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_DIAG_TOOLTIP_1 = "Rules.txt.crit.admission.diag.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ADMISSION_DIAG_TYPE_DIS
      * [en] Aufnahmediagnose: Typ
      * [de] Aufnahmediagnose: Typ</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_DIAG_TYPE_DIS = "Rules.txt.crit.admission.diag.type.dis";

    /** <pre>RULES_TXT_CRIT_ADMISSION_DOC_DIS
      * [en] Einweisender Arzt
      * [de] Einweisender Arzt</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_DOC_DIS = "Rules.txt.crit.admission.doc.dis";

    /** <pre>RULES_TXT_CRIT_ADMISSION_DOC_TOOLTIP_1
      * [en] Kennzeichnung des einweisenden Arztes. Siehe Institutionskennzeichen IK.
      * [de] Kennzeichnung des einweisenden Arztes. Siehe Institutionskennzeichen IK.</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_DOC_TOOLTIP_1 = "Rules.txt.crit.admission.doc.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ADMISSION_HOSPITAL_DIS
      * [en] Einweisendes Krankenhaus
      * [de] Einweisendes Krankenhaus</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_HOSPITAL_DIS = "Rules.txt.crit.admission.hospital.dis";

    /** <pre>RULES_TXT_CRIT_ADMISSION_HOSPITAL_TOOLTIP_1
      * [en] Kennzeichnung des einweisenden Krankenhauses. Siehe Institutionskennzeichen IK.
      * [de] Kennzeichnung des einweisenden Krankenhauses. Siehe Institutionskennzeichen IK.</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_HOSPITAL_TOOLTIP_1 = "Rules.txt.crit.admission.hospital.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ADMISSION_JEAR_DIS
      * [en] Aufnahmejahr
      * [de] Aufnahmejahr</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_JEAR_DIS = "Rules.txt.crit.admission.jear.dis";

    /** <pre>RULES_TXT_CRIT_ADMISSION_JEAR_TOOLTIP_1
      * [en] Jahr, in das der erste Behandlungstag fällt.
      * [de] Jahr, in das der erste Behandlungstag fällt.</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_JEAR_TOOLTIP_1 = "Rules.txt.crit.admission.jear.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ADMISSION_MONTH_DIS
      * [en] Aufnahmemonat
      * [de] Aufnahmemonat</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_MONTH_DIS = "Rules.txt.crit.admission.month.dis";

    /** <pre>RULES_TXT_CRIT_ADMISSION_MONTH_TOOLTIP_1
      * [en] Monat, in den der erste Behandlungstag fällt.
      * [de] Monat, in den der erste Behandlungstag fällt.</pre>
      */
    public static final String RULES_TXT_CRIT_ADMISSION_MONTH_TOOLTIP_1 = "Rules.txt.crit.admission.month.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ADRG_TOOLTIP_1
      * [en] Basis - DRG: (Adjacent Diagnosis Related Group) DRG ohne letzte Stelle (für Schweregrad).
      * [de] Basis - DRG: (Adjacent Diagnosis Related Group) DRG ohne letzte Stelle (für Schweregrad).</pre>
      */
    public static final String RULES_TXT_CRIT_ADRG_TOOLTIP_1 = "Rules.txt.crit.adrg.tooltip.1";

    /** <pre>RULES_TXT_CRIT_AGE_DAYS_DIS
      * [en] Alter in Tagen
      * [de] Alter in Tagen</pre>
      */
    public static final String RULES_TXT_CRIT_AGE_DAYS_DIS = "Rules.txt.crit.age.days.dis";

    /** <pre>RULES_TXT_CRIT_AGE_DAYS_TOOLTIP_1
      * [en] Das Alter in Tagen (nur für Alter &amp;lt; 1 Jahr)
      * [de] Das Alter in Tagen (nur für Alter &amp;lt; 1 Jahr)</pre>
      */
    public static final String RULES_TXT_CRIT_AGE_DAYS_TOOLTIP_1 = "Rules.txt.crit.age.days.tooltip.1";

    /** <pre>RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_1
      * [en] Das tatsächliche Alter des Patienten.
      * [de] Das tatsächliche Alter des Patienten.</pre>
      */
    public static final String RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_1 = "Rules.txt.crit.age.years.tooltip.1";

    /** <pre>RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_2
      * [en] Format: Ganzzahlig (Beispiel 50)
      * [de] Format: Ganzzahlig (Beispiel 50)</pre>
      * Attention! this value ('Format: Ganzzahlig (Beispiel 50)') seems to be also defined under the key RULES_TEMP_137_VERWEILDAUERINSTUNDEN! this value ('Format: Ganzzahlig (Beispiel 50)') seems to be also defined under the key RULES_TEMP_54_ALTERINJAHREN!
      */
    public static final String RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_2 = "Rules.txt.crit.age.years.tooltip.2";

    /** <pre>RULES_TXT_CRIT_AUX_DIAG_LOC_DIS
      * [en] Nebendiagnose: Lokalisation
      * [de] Nebendiagnose: Lokalisation</pre>
      */
    public static final String RULES_TXT_CRIT_AUX_DIAG_LOC_DIS = "Rules.txt.crit.aux.diag.loc.dis";

    /** <pre>RULES_TXT_CRIT_AUX_DIAG_TYPE_DIS
      * [en] Nebendiagnose: Typ
      * [de] Nebendiagnose: Typ</pre>
      */
    public static final String RULES_TXT_CRIT_AUX_DIAG_TYPE_DIS = "Rules.txt.crit.aux.diag.type.dis";

    /** <pre>RULES_TXT_CRIT_BASE_VALUE_DIS
      * [en] Basisfallwert
      * [de] Basisfallwert</pre>
      */
    public static final String RULES_TXT_CRIT_BASE_VALUE_DIS = "Rules.txt.crit.base.value.dis";

    /** <pre>RULES_TXT_CRIT_BASE_VALUE_TOOLTIP_1
      * [en] (auch: Baserate) der Betrag, der bei der Berechnung der DRG - Entgelte für die Krankenhausbehandlung zugrunde gelegt wird.
      * [de] (auch: Baserate) der Betrag, der bei der Berechnung der DRG - Entgelte für die Krankenhausbehandlung zugrunde gelegt wird.</pre>
      */
    public static final String RULES_TXT_CRIT_BASE_VALUE_TOOLTIP_1 = "Rules.txt.crit.base.value.tooltip.1";

    /** <pre>RULES_TXT_CRIT_BIRTHDAY_DIS
      * [en] Geburtsdatum
      * [de] Geburtsdatum</pre>
      */
    public static final String RULES_TXT_CRIT_BIRTHDAY_DIS = "Rules.txt.crit.birthday.dis";

    /** <pre>RULES_TXT_CRIT_BIRTHDAY_TOOLTIP_1
      * [en] Das Geburtsdatum des Patienten.
      * [de] Das Geburtsdatum des Patienten.</pre>
      */
    public static final String RULES_TXT_CRIT_BIRTHDAY_TOOLTIP_1 = "Rules.txt.crit.birthday.tooltip.1";

    /** <pre>RULES_TXT_CRIT_BONUS_CW_DIS
      * [en] CW Zuschlag
      * [de] CW Zuschlag</pre>
      */
    public static final String RULES_TXT_CRIT_BONUS_CW_DIS = "Rules.txt.crit.bonus.cw.dis";

    /** <pre>RULES_TXT_CRIT_BONUS_CW_TOOLTIP_1
      * [en] Ein Überschreiten der Oberen Grenzverweildauer bewirkt einen Zuschlag, bei dem die einer DRG zugeordneten CW-Wert-Zuschläge multipliziert mit den Tagen der Überschreitung dem CW-Basiswert hinzugezählt werden.
      * [de] Ein Überschreiten der Oberen Grenzverweildauer bewirkt einen Zuschlag, bei dem die einer DRG zugeordneten CW-Wert-Zuschläge multipliziert mit den Tagen der Überschreitung dem CW-Basiswert hinzugezählt werden.</pre>
      */
    public static final String RULES_TXT_CRIT_BONUS_CW_TOOLTIP_1 = "Rules.txt.crit.bonus.cw.tooltip.1";

    /** <pre>RULES_TXT_CRIT_BONUS_DAYS_DIS
      * [en] Zuschlagstage
      * [de] Zuschlagstage</pre>
      */
    public static final String RULES_TXT_CRIT_BONUS_DAYS_DIS = "Rules.txt.crit.bonus.days.dis";

    /** <pre>RULES_TXT_CRIT_BONUS_DAYS_TOOLTIP_1
      * [en] Ist-Verweildauer - Obere Grenzverweildauer + 1. Im Fallpauschalenkatalog ist immer der erste Zuschlagstag angegeben (Spalte 9).
      * [de] Ist-Verweildauer - Obere Grenzverweildauer + 1. Im Fallpauschalenkatalog ist immer der erste Zuschlagstag angegeben (Spalte 9).</pre>
      */
    public static final String RULES_TXT_CRIT_BONUS_DAYS_TOOLTIP_1 = "Rules.txt.crit.bonus.days.tooltip.1";

    /** <pre>RULES_TXT_CRIT_BOTTOM_LENGTH_OF_STAY_DIS
      * [en] untere Grenzverweildauer
      * [de] untere Grenzverweildauer</pre>
      */
    public static final String RULES_TXT_CRIT_BOTTOM_LENGTH_OF_STAY_DIS = "Rules.txt.crit.bottom.length.of.stay.dis";

    /** <pre>RULES_TXT_CRIT_BOTTOM_LENGTH_OF_STAY_TOOLTIP_1
      * [en] Laut DRG - Katalog festgelegte untere Grenzverweildauer für die ermittelte DRG. Bei Unterschreitung der unteren Grenzverweildauer wird (wiederum nach DRG - Katalog) ein Abschlag je Tag vom DRG - Entgelt abgezogen.
      * [de] Laut DRG - Katalog festgelegte untere Grenzverweildauer für die ermittelte DRG. Bei Unterschreitung der unteren Grenzverweildauer wird (wiederum nach DRG - Katalog) ein Abschlag je Tag vom DRG - Entgelt abgezogen.</pre>
      */
    public static final String RULES_TXT_CRIT_BOTTOM_LENGTH_OF_STAY_TOOLTIP_1 = "Rules.txt.crit.bottom.length.of.stay.tooltip.1";

    /** <pre>RULES_TXT_CRIT_BREATHING_DIS
      * [en] Beatmungsdauer
      * [de] Beatmungsdauer</pre>
      */
    public static final String RULES_TXT_CRIT_BREATHING_DIS = "Rules.txt.crit.breathing.dis";

    /** <pre>RULES_TXT_CRIT_BREATHING_TOOLTIP_1
      * [en] Summe der Stunden, in denen der Patient künstlich beatmet worden ist.
      * [de] Summe der Stunden, in denen der Patient künstlich beatmet worden ist.</pre>
      */
    public static final String RULES_TXT_CRIT_BREATHING_TOOLTIP_1 = "Rules.txt.crit.breathing.tooltip.1";

    /** <pre>RULES_TXT_CRIT_CARE_DAYS_DIS
      * [en] Anzahl der Pflegetagen
      * [de] Anzahl der Pflegetagen</pre>
      */
    public static final String RULES_TXT_CRIT_CARE_DAYS_DIS = "Rules.txt.crit.care.days.dis";

    /** <pre>RULES_TXT_CRIT_CARE_STATE_DIS
      * [en] Pflegestatus
      * [de] Pflegestatus</pre>
      */
    public static final String RULES_TXT_CRIT_CARE_STATE_DIS = "Rules.txt.crit.care.state.dis";

    /** <pre>RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2
      * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
      * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
      * Attention! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE!
      */
    public static final String RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2 = "Rules.txt.crit.case.auxdiagnosis.tooltip.2";

    /** <pre>RULES_TXT_CRIT_CASE_COST
      * [en] Fallkosten
      * [de] Fallkosten</pre>
      */
    public static final String RULES_TXT_CRIT_CASE_COST = "Rules.txt.crit.case.cost";

    /** <pre>RULES_TXT_CRIT_CASE_NUMERIC_1_DIS
      * [en] Fall.Numeric01
      * [de] Fall.Numeric01</pre>
      */
    public static final String RULES_TXT_CRIT_CASE_NUMERIC_1_DIS = "Rules.txt.crit.case.numeric1.dis";

    /** <pre>RULES_TXT_CRIT_CASE_NUMERIC_2_DIS
      * [en] Fall.Numeric02
      * [de] Fall.Numeric02</pre>
      */
    public static final String RULES_TXT_CRIT_CASE_NUMERIC_2_DIS = "Rules.txt.crit.case.numeric2.dis";

    /** <pre>RULES_TXT_CRIT_CASE_NUMERIC_3_DIS
      * [en] Fall.Numeric03
      * [de] Fall.Numeric03</pre>
      */
    public static final String RULES_TXT_CRIT_CASE_NUMERIC_3_DIS = "Rules.txt.crit.case.numeric3.dis";

    /** <pre>RULES_TXT_CRIT_CASE_NUMERIC_4_DIS
      * [en] Fall.Numeric04
      * [de] Fall.Numeric04</pre>
      */
    public static final String RULES_TXT_CRIT_CASE_NUMERIC_4_DIS = "Rules.txt.crit.case.numeric4.dis";

    /** <pre>RULES_TXT_CRIT_CASE_NUMERIC_5_DIS
      * [en] Fall.Numeric05
      * [de] Fall.Numeric05</pre>
      */
    public static final String RULES_TXT_CRIT_CASE_NUMERIC_5_DIS = "Rules.txt.crit.case.numeric5.dis";

    /** <pre>RULES_TXT_CRIT_CASE_NUMERIC_5_TOOLTIP
      * [en] Optional herstellbares numerisches Kriterium
      * [de] Optional herstellbares numerisches Kriterium</pre>
      */
    public static final String RULES_TXT_CRIT_CASE_NUMERIC_5_TOOLTIP = "Rules.txt.crit.case.numeric5.tooltip";

    /** <pre>RULES_TXT_CRIT_CASE_STR_1_DIS
      * [en] Fall.String01
      * [de] Fall.String01</pre>
      */
    public static final String RULES_TXT_CRIT_CASE_STR_1_DIS = "Rules.txt.crit.case.str1.dis";

    /** <pre>RULES_TXT_CRIT_CASE_STR_2_DIS
      * [en] Fall.String02
      * [de] Fall.String02</pre>
      */
    public static final String RULES_TXT_CRIT_CASE_STR_2_DIS = "Rules.txt.crit.case.str2.dis";

    /** <pre>RULES_TXT_CRIT_CASE_STR_3_DIS
      * [en] Fall.String03
      * [de] Fall.String03</pre>
      */
    public static final String RULES_TXT_CRIT_CASE_STR_3_DIS = "Rules.txt.crit.case.str3.dis";

    /** <pre>RULES_TXT_CRIT_CASE_STR_4_DIS
      * [en] Fall.String04
      * [de] Fall.String04</pre>
      */
    public static final String RULES_TXT_CRIT_CASE_STR_4_DIS = "Rules.txt.crit.case.str4.dis";

    /** <pre>RULES_TXT_CRIT_CASE_STR_4_TOOLTIP
      * [en] Optional herstellbares alphanumerisches Kriterium
      * [de] Optional herstellbares alphanumerisches Kriterium</pre>
      */
    public static final String RULES_TXT_CRIT_CASE_STR_4_TOOLTIP = "Rules.txt.crit.case.str4.tooltip";

    /** <pre>RULES_TXT_CRIT_CASE_STR_5_DIS
      * [en] Fall.String05
      * [de] Fall.String05</pre>
      */
    public static final String RULES_TXT_CRIT_CASE_STR_5_DIS = "Rules.txt.crit.case.str5.dis";

    /** <pre>RULES_TXT_CRIT_CITY_DIS
      * [en] Wohnort
      * [de] Wohnort</pre>
      */
    public static final String RULES_TXT_CRIT_CITY_DIS = "Rules.txt.crit.city.dis";

    /** <pre>RULES_TXT_CRIT_CITY_TOOLTIP_1
      * [en] Name des Wohnortes des Patienten.
      * [de] Name des Wohnortes des Patienten.</pre>
      */
    public static final String RULES_TXT_CRIT_CITY_TOOLTIP_1 = "Rules.txt.crit.city.tooltip.1";

    /** <pre>RULES_TXT_CRIT_CLINIC_ADM_DATE_DIS
      * [en] Klinik: Aufnahmedatum
      * [de] Klinik: Aufnahmedatum</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_ADM_DATE_DIS = "Rules.txt.crit.clinic.adm.date.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_ADM_DATE_FULL
      * [en] Klinik_Aufnahmedatum_mit_Uhrzeit
      * [de] Klinik_Aufnahmedatum_mit_Uhrzeit</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_ADM_DATE_FULL = "Rules.txt.crit.clinic.adm.date.full";

    /** <pre>RULES_TXT_CRIT_CLINIC_ADM_DATE_FULL_DIS
      * [en] Klinik: Aufnahmedatum mit Uhrzeit
      * [de] Klinik: Aufnahmedatum mit Uhrzeit</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_ADM_DATE_FULL_DIS = "Rules.txt.crit.clinic.adm.date.full.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_ADM_REASON_DIS
      * [en] Klinik: Aufnahmegrund
      * [de] Klinik: Aufnahmegrund</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_ADM_REASON_DIS = "Rules.txt.crit.clinic.adm.reason.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_ADM_TIME_DIS
      * [en] Klinik: Aufnahmeuhrzeit
      * [de] Klinik: Aufnahmeuhrzeit</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_ADM_TIME_DIS = "Rules.txt.crit.clinic.adm.time.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_ADRG_DIS
      * [en] Klinik: ADRG
      * [de] Klinik: ADRG</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_ADRG_DIS = "Rules.txt.crit.clinic.adrg.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_AUX_DIAG_DIS
      * [en] Klinik: Nebendiagnose
      * [de] Klinik: Nebendiagnose</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_AUX_DIAG_DIS = "Rules.txt.crit.clinic.aux.diag.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_BREATHING_DIS
      * [en] Klinik: Beatmungsstunden
      * [de] Klinik: Beatmungsstunden</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_BREATHING_DIS = "Rules.txt.crit.clinic.breathing.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_CASE_COST
      * [en] Klinik: Fallkosten
      * [de] Klinik: Fallkosten</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_CASE_COST = "Rules.txt.crit.clinic.case.cost";

    /** <pre>RULES_TXT_CRIT_CLINIC_CASE_DRG_TOOLTIP_1
      * [en] Klinische Daten: Fallpauschale.
      * [de] Klinische Daten: Fallpauschale.</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_CASE_DRG_TOOLTIP_1 = "Rules.txt.crit.clinic.case.drg.tooltip.1";

    /** <pre>RULES_TXT_CRIT_CLINIC_CASE_NUMBER_DIS
      * [en] Klinik: Fallanzahl
      * [de] Klinik: Fallanzahl</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_CASE_NUMBER_DIS = "Rules.txt.crit.clinic.case.number.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_DIS_DATE_FULL
      * [en] Klinik_Entlassungsdatum_mit_Uhrzeit
      * [de] Klinik_Entlassungsdatum_mit_Uhrzeit</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_DIS_DATE_FULL = "Rules.txt.crit.clinic.dis.date.full";

    /** <pre>RULES_TXT_CRIT_CLINIC_DIS_DATE_FULL_DIS
      * [en] Klinik: Entlassungsdatum mit Uhrzeit
      * [de] Klinik: Entlassungsdatum mit Uhrzeit</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_DIS_DATE_FULL_DIS = "Rules.txt.crit.clinic.dis.date.full.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_DIS_REASON_DIS
      * [en] Klinik: Entlassungsgrund
      * [de] Klinik: Entlassungsgrund</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_DIS_REASON_DIS = "Rules.txt.crit.clinic.dis.reason.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_DISCH_DATE_DIS
      * [en] Klinik: Entlassungsdatum
      * [de] Klinik: Entlassungsdatum</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_DISCH_DATE_DIS = "Rules.txt.crit.clinic.disch.date.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_DISCH_TIME_DIS
      * [en] Klinik: Entlassungsuhrzeit
      * [de] Klinik: Entlassungsuhrzeit</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_DISCH_TIME_DIS = "Rules.txt.crit.clinic.disch.time.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_DRG_DIS
      * [en] Klinik: DRG
      * [de] Klinik: DRG</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_DRG_DIS = "Rules.txt.crit.clinic.drg.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_DRG_PARTITION_DIS
      * [en] Klinik: DRG Partition
      * [de] Klinik: DRG Partition</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_DRG_PARTITION_DIS = "Rules.txt.crit.clinic.drg.partition.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_FEE_COUNT_DIS
      * [en] Klinik: Anzahl Entgelte
      * [de] Klinik: Anzahl Entgelte</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_FEE_COUNT_DIS = "Rules.txt.crit.clinic.fee.count.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_FEE_TYPE_DIS
      * [en] Klinik: Entgeltart
      * [de] Klinik: Entgeltart</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_FEE_TYPE_DIS = "Rules.txt.crit.clinic.fee.type.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_FEE_VALUE_DIS
      * [en] Klinik: Entgeltbetrag
      * [de] Klinik: Entgeltbetrag</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_FEE_VALUE_DIS = "Rules.txt.crit.clinic.fee.value.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_FEEGROUP
      * [en] Klinik: Entgeltbereich
      * [de] Klinik: Entgeltbereich</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_FEEGROUP = "Rules.txt.crit.clinic.feegroup";

    /** <pre>RULES_TXT_CRIT_CLINIC_IKZ_DIS
      * [en] Klinik: IKZ
      * [de] Klinik: IKZ</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_IKZ_DIS = "Rules.txt.crit.clinic.ikz.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_MAIN_DIAG_DIS
      * [en] Klinik: Hauptdiagnose
      * [de] Klinik: Hauptdiagnose</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_MAIN_DIAG_DIS = "Rules.txt.crit.clinic.main.diag.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_OGVD
      * [en] Klinik: OGVD
      * [de] Klinik: OGVD</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_OGVD = "Rules.txt.crit.clinic.ogvd";

    /** <pre>RULES_TXT_CRIT_CLINIC_PEPP_DIS
      * [en] Klinik: PEPP
      * [de] Klinik: PEPP</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_PEPP_DIS = "Rules.txt.crit.clinic.pepp.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_PROCEDURE_DIS
      * [en] Klinik: Prozedur
      * [de] Klinik: Prozedur</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_PROCEDURE_DIS = "Rules.txt.crit.clinic.procedure.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_SK_DIS
      * [en] Klinik: SK
      * [de] Klinik: SK</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_SK_DIS = "Rules.txt.crit.clinic.sk.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_UGVD
      * [en] Klinik: uGVD
      * [de] Klinik: uGVD</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_UGVD = "Rules.txt.crit.clinic.ugvd";

    /** <pre>RULES_TXT_CRIT_CLINIC_VWD_DIS
      * [en] Klinik: Verweildauer
      * [de] Klinik: Verweildauer</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_VWD_DIS = "Rules.txt.crit.clinic.vwd.dis";

    /** <pre>RULES_TXT_CRIT_CLINIC_VWD_IN_HOURS
      * [en] Klinik: Vwd in Stunden
      * [de] Klinik: Vwd in Stunden</pre>
      */
    public static final String RULES_TXT_CRIT_CLINIC_VWD_IN_HOURS = "Rules.txt.crit.clinic.vwd.in.hours";

    /** <pre>RULES_TXT_CRIT_COMBAT_DEPARTMENT_DIS
      * [en] behandelnde Fachabteilung
      * [de] behandelnde Fachabteilung</pre>
      */
    public static final String RULES_TXT_CRIT_COMBAT_DEPARTMENT_DIS = "Rules.txt.crit.combat.department.dis";

    /** <pre>RULES_TXT_CRIT_COMBAT_DEPARTMENT_TOOLTIP_1
      * [en] Kodierung der behandelnden Fachabteilung nach §301(Siehe Anlage 1)
      * [de] Kodierung der behandelnden Fachabteilung nach §301(Siehe Anlage 1)</pre>
      */
    public static final String RULES_TXT_CRIT_COMBAT_DEPARTMENT_TOOLTIP_1 = "Rules.txt.crit.combat.department.tooltip.1";

    /** <pre>RULES_TXT_CRIT_CW_CATALOG_DIS
      * [en] Kostengewicht Katalog
      * [de] Kostengewicht Katalog</pre>
      */
    public static final String RULES_TXT_CRIT_CW_CATALOG_DIS = "Rules.txt.crit.cw.catalog.dis";

    /** <pre>RULES_TXT_CRIT_CW_CATALOG_TOOLTIP_1
      * [en] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert). Kostengewicht nach DRG - Katalog
      * [de] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert). Kostengewicht nach DRG - Katalog</pre>
      */
    public static final String RULES_TXT_CRIT_CW_CATALOG_TOOLTIP_1 = "Rules.txt.crit.cw.catalog.tooltip.1";

    /** <pre>RULES_TXT_CRIT_CW_EFFECTIV_DIS
      * [en] Kostengewicht effektiv
      * [de] Kostengewicht effektiv</pre>
      */
    public static final String RULES_TXT_CRIT_CW_EFFECTIV_DIS = "Rules.txt.crit.cw.effectiv.dis";

    /** <pre>RULES_TXT_CRIT_CW_EFFECTIV_TOOLTIP_1
      * [en] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert)
      * [de] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert)</pre>
      */
    public static final String RULES_TXT_CRIT_CW_EFFECTIV_TOOLTIP_1 = "Rules.txt.crit.cw.effectiv.tooltip.1";

    /** <pre>RULES_TXT_CRIT_DEPARTMENT_DIS
      * [en] Fachabteilungsbewegung
      * [de] Fachabteilungsbewegung</pre>
      */
    public static final String RULES_TXT_CRIT_DEPARTMENT_DIS = "Rules.txt.crit.department.dis";

    /** <pre>RULES_TXT_CRIT_DEPARTMENT_TOOLTIP_1
      * [en] Die Fachabteilungen, in denen der Patient behandelt worden ist. z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
      * [de] Die Fachabteilungen, in denen der Patient behandelt worden ist. z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.</pre>
      */
    public static final String RULES_TXT_CRIT_DEPARTMENT_TOOLTIP_1 = "Rules.txt.crit.department.tooltip.1";

    /** <pre>RULES_TXT_CRIT_DIAG_LOC_DIS
      * [en] Diagnose: Lokalisation
      * [de] Diagnose: Lokalisation</pre>
      */
    public static final String RULES_TXT_CRIT_DIAG_LOC_DIS = "Rules.txt.crit.diag.loc.dis";

    /** <pre>RULES_TXT_CRIT_DIAG_TOOLTIP_1
      * [en] Siehe Hauptdiagnose, Nebendiagnose. Eine Diagnose beinhaltet keine weitere Unterteilung, insofern ein Oberbegriff. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
      * [de] Siehe Hauptdiagnose, Nebendiagnose. Eine Diagnose beinhaltet keine weitere Unterteilung, insofern ein Oberbegriff. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.</pre>
      */
    public static final String RULES_TXT_CRIT_DIAG_TOOLTIP_1 = "Rules.txt.crit.diag.tooltip.1";

    /** <pre>RULES_TXT_CRIT_DIAG_TYPE_DIS
      * [en] Diagnose: Typ
      * [de] Diagnose: Typ</pre>
      */
    public static final String RULES_TXT_CRIT_DIAG_TYPE_DIS = "Rules.txt.crit.diag.type.dis";

    /** <pre>RULES_TXT_CRIT_DIAGNOSE_GROUPED_DIS
      * [en] Grouperrelevante Diagnose
      * [de] Grouperrelevante Diagnose</pre>
      */
    public static final String RULES_TXT_CRIT_DIAGNOSE_GROUPED_DIS = "Rules.txt.crit.diagnose.grouped.dis";

    /** <pre>RULES_TXT_CRIT_DIS_TYPE_3_DIS
      * [en] Entlassungsgrund3
      * [de] Entlassungsgrund3</pre>
      */
    public static final String RULES_TXT_CRIT_DIS_TYPE_3_DIS = "Rules.txt.crit.dis.type3.dis";

    /** <pre>RULES_TXT_CRIT_DIS_TYPE_DIS
      * [en] Entlassungsgrund12
      * [de] Entlassungsgrund12</pre>
      */
    public static final String RULES_TXT_CRIT_DIS_TYPE_DIS = "Rules.txt.crit.dis.type.dis";

    /** <pre>RULES_TXT_CRIT_DISCHARGE_DATE_FULL
      * [en] Entlassungsdatum_mit_Uhrzeit
      * [de] Entlassungsdatum_mit_Uhrzeit</pre>
      */
    public static final String RULES_TXT_CRIT_DISCHARGE_DATE_FULL = "Rules.txt.crit.discharge.date.full";

    /** <pre>RULES_TXT_CRIT_DISCHARGE_DATE_FULL_DIS
      * [en] Entlassungsdatum mit Uhrzeit
      * [de] Entlassungsdatum mit Uhrzeit</pre>
      */
    public static final String RULES_TXT_CRIT_DISCHARGE_DATE_FULL_DIS = "Rules.txt.crit.discharge.date.full.dis";

    /** <pre>RULES_TXT_CRIT_DRG_TOOLTIP_1
      * [en] Fallpauschale, diagnosebezogene Fallgruppe.
      * [de] Fallpauschale, diagnosebezogene Fallgruppe.</pre>
      */
    public static final String RULES_TXT_CRIT_DRG_TOOLTIP_1 = "Rules.txt.crit.drg.tooltip.1";

    /** <pre>RULES_TXT_CRIT_DRGPARTITION_DIS
      * [en] DRGPartition
      * [de] DRGPartition</pre>
      */
    public static final String RULES_TXT_CRIT_DRGPARTITION_DIS = "Rules.txt.crit.drgpartition.dis";

    /** <pre>RULES_TXT_CRIT_ENTGELTABRECHNUNG_BIS_DIS
      * [en] Entgeltabrechnung bis
      * [de] Entgeltabrechnung bis</pre>
      */
    public static final String RULES_TXT_CRIT_ENTGELTABRECHNUNG_BIS_DIS = "Rules.txt.crit.entgeltabrechnung.bis.dis";

    /** <pre>RULES_TXT_CRIT_ENTGELTABRECHNUNG_BIS_TOOLTIP_1
      * [en] Der letzte Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.
      * [de] Der letzte Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.</pre>
      */
    public static final String RULES_TXT_CRIT_ENTGELTABRECHNUNG_BIS_TOOLTIP_1 = "Rules.txt.crit.entgeltabrechnung.bis.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ENTGELTABRECHNUNG_VON_DIS
      * [en] Entgeltabrechnung von
      * [de] Entgeltabrechnung von</pre>
      */
    public static final String RULES_TXT_CRIT_ENTGELTABRECHNUNG_VON_DIS = "Rules.txt.crit.entgeltabrechnung.von.dis";

    /** <pre>RULES_TXT_CRIT_ENTGELTABRECHNUNG_VON_TOOLTIP_1
      * [en] Der erste Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.
      * [de] Der erste Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.</pre>
      */
    public static final String RULES_TXT_CRIT_ENTGELTABRECHNUNG_VON_TOOLTIP_1 = "Rules.txt.crit.entgeltabrechnung.von.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ENTGELTANZAHL_DIS
      * [en] Entgeltanzahl je Entgelt
      * [de] Entgeltanzahl je Entgelt</pre>
      */
    public static final String RULES_TXT_CRIT_ENTGELTANZAHL_DIS = "Rules.txt.crit.entgeltanzahl.dis";

    /** <pre>RULES_TXT_CRIT_ENTGELTANZAHL_TOOLTIP_1
      * [en] Wie oft das einzelne Entgelt abgerechnet wird.
      * [de] Wie oft das einzelne Entgelt abgerechnet wird.</pre>
      */
    public static final String RULES_TXT_CRIT_ENTGELTANZAHL_TOOLTIP_1 = "Rules.txt.crit.entgeltanzahl.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ENTGELTART_DIS
      * [en] Entgelt
      * [de] Entgelt</pre>
      */
    public static final String RULES_TXT_CRIT_ENTGELTART_DIS = "Rules.txt.crit.entgeltart.dis";

    /** <pre>RULES_TXT_CRIT_ENTGELTART_TOOLTIP_1
      * [en] Der Entgeltschlüssel, alphanumerisch 8-stellig, z.B. 48000001 für DRG - Systemzuschlag, angegeben wird der Code.
      * [de] Der Entgeltschlüssel, alphanumerisch 8-stellig, z.B. 48000001 für DRG - Systemzuschlag, angegeben wird der Code.</pre>
      */
    public static final String RULES_TXT_CRIT_ENTGELTART_TOOLTIP_1 = "Rules.txt.crit.entgeltart.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ENTGELTEINZELBETRAG_DIS
      * [en] Entgelteinzelbetrag
      * [de] Entgelteinzelbetrag</pre>
      */
    public static final String RULES_TXT_CRIT_ENTGELTEINZELBETRAG_DIS = "Rules.txt.crit.entgelteinzelbetrag.dis";

    /** <pre>RULES_TXT_CRIT_ENTGELTEINZELBETRAG_TOOLTIP_1
      * [en] Der einzelne Betrag eines Entgeltschlüssels.
      * [de] Der einzelne Betrag eines Entgeltschlüssels.</pre>
      */
    public static final String RULES_TXT_CRIT_ENTGELTEINZELBETRAG_TOOLTIP_1 = "Rules.txt.crit.entgelteinzelbetrag.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ENTGELTSUMMEJEENTGELT_DIS
      * [en] Entgeltsumme je Entgelt
      * [de] Entgeltsumme je Entgelt</pre>
      */
    public static final String RULES_TXT_CRIT_ENTGELTSUMMEJEENTGELT_DIS = "Rules.txt.crit.entgeltsummejeentgelt.dis";

    /** <pre>RULES_TXT_CRIT_ENTGELTSUMMEJEENTGELT_TOOLTIP_1
      * [en] Die Summe aller Beträge eines Entgeltschlüssels.
      * [de] Die Summe aller Beträge eines Entgeltschlüssels.</pre>
      */
    public static final String RULES_TXT_CRIT_ENTGELTSUMMEJEENTGELT_TOOLTIP_1 = "Rules.txt.crit.entgeltsummejeentgelt.tooltip.1";

    /** <pre>RULES_TXT_CRIT_EQUAL_PROC_NUMBER_DIS
      * [en] Anzahl gleicher Prozeduren
      * [de] Anzahl gleicher Prozeduren</pre>
      */
    public static final String RULES_TXT_CRIT_EQUAL_PROC_NUMBER_DIS = "Rules.txt.crit.equal.proc.number.dis";

    /** <pre>RULES_TXT_CRIT_EQUAL_PROC_NUMBER_TOOLTIP_1
      * [en] Für jede Prozedur wird ein Wiederholungswert ermittelt und der minimale Wert, der größer als 1 ist, wird hier eingetragen.
      * [de] Für jede Prozedur wird ein Wiederholungswert ermittelt und der minimale Wert, der größer als 1 ist, wird hier eingetragen.</pre>
      */
    public static final String RULES_TXT_CRIT_EQUAL_PROC_NUMBER_TOOLTIP_1 = "Rules.txt.crit.equal.proc.number.tooltip.1";

    /** <pre>RULES_TXT_CRIT_FEE_SUM_TOOLTIP_1
      * [en] Gesamtbetrag aller Entgelte.
      * [de] Gesamtbetrag aller Entgelte.</pre>
      */
    public static final String RULES_TXT_CRIT_FEE_SUM_TOOLTIP_1 = "Rules.txt.crit.fee.sum.tooltip.1";

    /** <pre>RULES_TXT_CRIT_FEEGROUP
      * [en] Entgeltbereich
      * [de] Entgeltbereich</pre>
      */
    public static final String RULES_TXT_CRIT_FEEGROUP = "Rules.txt.crit.feegroup";

    /** <pre>RULES_TXT_CRIT_HEALTH_ENSURANCE_DIS
      * [en] Krankenkasse
      * [de] Krankenkasse</pre>
      * Attention! this value ('Krankenkasse') seems to be also defined under the key PROCESS_TYPE_INSURANCE!
      */
    public static final String RULES_TXT_CRIT_HEALTH_ENSURANCE_DIS = "Rules.txt.crit.health.ensurance.dis";

    /** <pre>RULES_TXT_CRIT_HEALTH_ENSURANCE_TOOLTIP_1
      * [en] Kennzeichnung der Krankenkasse. Siehe Institutionskennzeichen IK.
      * [de] Kennzeichnung der Krankenkasse. Siehe Institutionskennzeichen IK.</pre>
      */
    public static final String RULES_TXT_CRIT_HEALTH_ENSURANCE_TOOLTIP_1 = "Rules.txt.crit.health.ensurance.tooltip.1";

    /** <pre>RULES_TXT_CRIT_HOS_CASE_NUMBER_TOOLTIP_1_1
      * [en] Das krankenhausinterne Kennzeichen des Versicherten.
      * [de] Das krankenhausinterne Kennzeichen des Versicherten.</pre>
      */
    public static final String RULES_TXT_CRIT_HOS_CASE_NUMBER_TOOLTIP_1_1 = "Rules.txt.crit.hos.case.number.tooltip.1.1";

    /** <pre>RULES_TXT_CRIT_INSTITUTE_DIS
      * [en] Institutionskennzeichen
      * [de] Institutionskennzeichen</pre>
      */
    public static final String RULES_TXT_CRIT_INSTITUTE_DIS = "Rules.txt.crit.institute.dis";

    /** <pre>RULES_TXT_CRIT_INSURANCE_STATUS_DIS
      * [en] Versichertenstatus
      * [de] Versichertenstatus</pre>
      */
    public static final String RULES_TXT_CRIT_INSURANCE_STATUS_DIS = "Rules.txt.crit.insurance.status.dis";

    /** <pre>RULES_TXT_CRIT_INTENSIV_STAY_DIS
      * [en] Intensivverweildauer
      * [de] Intensivverweildauer</pre>
      */
    public static final String RULES_TXT_CRIT_INTENSIV_STAY_DIS = "Rules.txt.crit.intensiv.stay.dis";

    /** <pre>RULES_TXT_CRIT_INTENSIV_STAY_TOOLTIP_1
      * [en] Tage, die der Patient auf der Intensivstation verbracht hat.
      * [de] Tage, die der Patient auf der Intensivstation verbracht hat.</pre>
      */
    public static final String RULES_TXT_CRIT_INTENSIV_STAY_TOOLTIP_1 = "Rules.txt.crit.intensiv.stay.tooltip.1";

    /** <pre>RULES_TXT_CRIT_LABOR_DATE_DIS
      * [en] Datum der Untersuchung
      * [de] Datum der Untersuchung</pre>
      */
    public static final String RULES_TXT_CRIT_LABOR_DATE_DIS = "Rules.txt.crit.labor.date.dis";

    /** <pre>RULES_TXT_CRIT_LABOR_DESCRIPTION_DIS
      * [en] Labor-Beschreibung
      * [de] Labor-Beschreibung</pre>
      */
    public static final String RULES_TXT_CRIT_LABOR_DESCRIPTION_DIS = "Rules.txt.crit.labor.description.dis";

    /** <pre>RULES_TXT_CRIT_LABOR_TEXT_DIS
      * [en] Labortext
      * [de] Labortext</pre>
      */
    public static final String RULES_TXT_CRIT_LABOR_TEXT_DIS = "Rules.txt.crit.labor.text.dis";

    /** <pre>RULES_TXT_CRIT_LABOR_UNIT_DIS
      * [en] Labor-Einheit
      * [de] Labor-Einheit</pre>
      */
    public static final String RULES_TXT_CRIT_LABOR_UNIT_DIS = "Rules.txt.crit.labor.unit.dis";

    /** <pre>RULES_TXT_CRIT_LOSLESS_24H_DIS
      * [en] Verweildauer kleiner 24h
      * [de] Verweildauer kleiner 24h</pre>
      */
    public static final String RULES_TXT_CRIT_LOSLESS_24H_DIS = "Rules.txt.crit.losless24h.dis";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_DIS
      * [en] KH Medikament: ATC-Code
      * [de] KH Medikament: ATC-Code</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_DIS = "Rules.txt.crit.medicament.atc.code.dis";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_TOOLTIP_2
      * [en] Format: alphanumerisch (Beispiel: B01AX04)
      * [de] Format: alphanumerisch (Beispiel: B01AX04)</pre>
      * Attention! this value ('Format: alphanumerisch (Beispiel: B01AX04)') seems to be also defined under the key RULES_TEMP_30_ATCCODE! this value ('Format: alphanumerisch (Beispiel: B01AX04)') seems to be also defined under the key RULES_TEMP_42_ATCCODE!
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_TOOLTIP_2 = "Rules.txt.crit.medicament.atc.code.tooltip.2";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_ATC_DIS
      * [en] KH Medikament: Gesamtdosis für ATC
      * [de] KH Medikament: Gesamtdosis für ATC</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_ATC_DIS = "Rules.txt.crit.medicament.full.dosage.atc.dis";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_ATC_TOOLTIP_1
      * [en] Die Summe aller Mengen der Medikamente, bei denen ein ATC - Code eingetragen ist.
      * [de] Die Summe aller Mengen der Medikamente, bei denen ein ATC - Code eingetragen ist.</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_ATC_TOOLTIP_1 = "Rules.txt.crit.medicament.full.dosage.atc.tooltip.1";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_PZN_DIS
      * [en] KH Medikament: Gesamtdosis für PZN
      * [de] KH Medikament: Gesamtdosis für PZN</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_PZN_DIS = "Rules.txt.crit.medicament.full.dosage.pzn.dis";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_PZN_TOOLTIP_1
      * [en] Die Summe aller Mengen der Medikamente, bei denen ein PZN - Code eingetragen ist.
      * [de] Die Summe aller Mengen der Medikamente, bei denen ein PZN - Code eingetragen ist.</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_PZN_TOOLTIP_1 = "Rules.txt.crit.medicament.full.dosage.pzn.tooltip.1";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_ATC_DIS
      * [en] KH Medikament: Gesamtpreis für ATC
      * [de] KH Medikament: Gesamtpreis für ATC</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_ATC_DIS = "Rules.txt.crit.medicament.full.price.atc.dis";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_ATC_TOOLTIP_1
      * [en] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein ATC - Code eingetragen ist.
      * [de] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein ATC - Code eingetragen ist.</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_ATC_TOOLTIP_1 = "Rules.txt.crit.medicament.full.price.atc.tooltip.1";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_DIS
      * [en] KH Medikament: Gesamtpreis
      * [de] KH Medikament: Gesamtpreis</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_DIS = "Rules.txt.crit.medicament.full.price.dis";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_PZN_DIS
      * [en] KH Medikament: Gesamtpreis für PZN
      * [de] KH Medikament: Gesamtpreis für PZN</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_PZN_DIS = "Rules.txt.crit.medicament.full.price.pzn.dis";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_PZN_TOOLTIP_1
      * [en] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein PZN - Code eingetragen ist.
      * [de] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein PZN - Code eingetragen ist.</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_PZN_TOOLTIP_1 = "Rules.txt.crit.medicament.full.price.pzn.tooltip.1";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_TOOLTIP_1
      * [en] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat.
      * [de] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat.</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_TOOLTIP_1 = "Rules.txt.crit.medicament.full.price.tooltip.1";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DATE_DIS
      * [en] KHMedikament: Verordnungsdatum
      * [de] KHMedikament: Verordnungsdatum</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DATE_DIS = "Rules.txt.crit.medicament.perscript.date.dis";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DATE_TOOLTIP_1
      * [en] Datum, an dem ein Arzt das Medikament verordnet hat.
      * [de] Datum, an dem ein Arzt das Medikament verordnet hat.</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DATE_TOOLTIP_1 = "Rules.txt.crit.medicament.perscript.date.tooltip.1";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_DIS
      * [en] KH Medikament: Dosierung
      * [de] KH Medikament: Dosierung</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_DIS = "Rules.txt.crit.medicament.perscript.dosage.dis";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_TOOLTIP_1
      * [en] In welcher Dosierung das Medikament verordnet wurde.
      * [de] In welcher Dosierung das Medikament verordnet wurde.</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_TOOLTIP_1 = "Rules.txt.crit.medicament.perscript.dosage.tooltip.1";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_DIS
      * [en] KH Medikament: Dosierungseinheit
      * [de] KH Medikament: Dosierungseinheit</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_DIS = "Rules.txt.crit.medicament.perscript.dosage.unit.dis";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_PRICE_DIS
      * [en] KH Medikament: Preis
      * [de] KH Medikament: Preis</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_PRICE_DIS = "Rules.txt.crit.medicament.price.dis";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_PRICE_TOOLTIP_1
      * [en] Der Preis eines Medikamentes.
      * [de] Der Preis eines Medikamentes.</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_PRICE_TOOLTIP_1 = "Rules.txt.crit.medicament.price.tooltip.1";

    /** <pre>RULES_TXT_CRIT_MEDICAMENT_PZN_CODE_DIS
      * [en] KH Medikament: PZN-Code
      * [de] KH Medikament: PZN-Code</pre>
      */
    public static final String RULES_TXT_CRIT_MEDICAMENT_PZN_CODE_DIS = "Rules.txt.crit.medicament.pzn.code.dis";

    /** <pre>RULES_TXT_CRIT_MID_LENGTH_OF_STAY_DIS
      * [en] mittlere Verweildauer
      * [de] mittlere Verweildauer</pre>
      */
    public static final String RULES_TXT_CRIT_MID_LENGTH_OF_STAY_DIS = "Rules.txt.crit.mid.length.of.stay.dis";

    /** <pre>RULES_TXT_CRIT_MOVEMENTS_COUNT_DIS
      * [en] Anzahl Bewegungen
      * [de] Anzahl Bewegungen</pre>
      */
    public static final String RULES_TXT_CRIT_MOVEMENTS_COUNT_DIS = "Rules.txt.crit.movements.count.dis";

    /** <pre>RULES_TXT_CRIT_MOVEMENTS_COUNT_TOOLTIP_1
      * [en] Ist gleich der Summe der Fachabteilungen, in denen der Patient behandelt worden ist.
      * [de] Ist gleich der Summe der Fachabteilungen, in denen der Patient behandelt worden ist.</pre>
      */
    public static final String RULES_TXT_CRIT_MOVEMENTS_COUNT_TOOLTIP_1 = "Rules.txt.crit.movements.count.tooltip.1";

    /** <pre>RULES_TXT_CRIT_MRSA_GENDER_DIS
      * [en] Geschlecht
      * [de] Geschlecht</pre>
      */
    public static final String RULES_TXT_CRIT_MRSA_GENDER_DIS = "Rules.txt.crit.mrsa.gender.dis";

    /** <pre>RULES_TXT_CRIT_NO_CRIT_TOOLTIP
      * [en] kein Kriterium
      * [de] kein Kriterium</pre>
      */
    public static final String RULES_TXT_CRIT_NO_CRIT_TOOLTIP = "Rules.txt.crit.no.crit.tooltip";

    /** <pre>RULES_TXT_CRIT_NOW_TIME_DIS
      * [en] jetzt
      * [de] jetzt</pre>
      * Attention! this value ('Jetzt') seems to be also defined under the key RULES_JETZT!
      */
    public static final String RULES_TXT_CRIT_NOW_TIME_DIS = "Rules.txt.crit.now.time.dis";

    /** <pre>RULES_TXT_CRIT_NOW_TIME_TOOLTIP_1
      * [en] Die Systemzeit.
      * [de] Die Systemzeit.</pre>
      */
    public static final String RULES_TXT_CRIT_NOW_TIME_TOOLTIP_1 = "Rules.txt.crit.now.time.tooltip.1";

    /** <pre>RULES_TXT_CRIT_PATIENT_MASTER_DATA_AGE_DIS
      * [en] Versicherter: Alter
      * [de] Versicherter: Alter</pre>
      */
    public static final String RULES_TXT_CRIT_PATIENT_MASTER_DATA_AGE_DIS = "Rules.txt.crit.patient.master.data.age.dis";

    /** <pre>RULES_TXT_CRIT_PATIENT_MASTER_DATA_CARE_GRADE_DIS
      * [en] Versicherter: Pflegestufe
      * [de] Versicherter: Pflegestufe</pre>
      */
    public static final String RULES_TXT_CRIT_PATIENT_MASTER_DATA_CARE_GRADE_DIS = "Rules.txt.crit.patient.master.data.care.grade.dis";

    /** <pre>RULES_TXT_CRIT_PATIENT_MASTER_DATA_CARE_STATE_DIS
      * [en] Versicherter: Versichertenstatus
      * [de] Versicherter: Versichertenstatus</pre>
      */
    public static final String RULES_TXT_CRIT_PATIENT_MASTER_DATA_CARE_STATE_DIS = "Rules.txt.crit.patient.master.data.care.state.dis";

    /** <pre>RULES_TXT_CRIT_PATIENT_MASTER_DATA_GENDER_DIS
      * [en] Versicherter: Geschlecht
      * [de] Versicherter: Geschlecht</pre>
      */
    public static final String RULES_TXT_CRIT_PATIENT_MASTER_DATA_GENDER_DIS = "Rules.txt.crit.patient.master.data.gender.dis";

    /** <pre>RULES_TXT_CRIT_PATIENT_MASTER_DATA_ZIPCODE_DIS
      * [en] Versicherter: Postleitzahl
      * [de] Versicherter: Postleitzahl</pre>
      */
    public static final String RULES_TXT_CRIT_PATIENT_MASTER_DATA_ZIPCODE_DIS = "Rules.txt.crit.patient.master.data.zipcode.dis";

    /** <pre>RULES_TXT_CRIT_PEPP_TOOLTIP_1
      * [en] Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik
      * [de] Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik</pre>
      */
    public static final String RULES_TXT_CRIT_PEPP_TOOLTIP_1 = "Rules.txt.crit.pepp.tooltip.1";

    /** <pre>RULES_TXT_CRIT_PRINC_DIAG_DIS
      * [en] Hauptdiagnose
      * [de] Hauptdiagnose</pre>
      */
    public static final String RULES_TXT_CRIT_PRINC_DIAG_DIS = "Rules.txt.crit.princ.diag.dis";

    /** <pre>RULES_TXT_CRIT_PRINC_DIAG_LOC_DIS
      * [en] Hauptdiagnose: Lokalisation
      * [de] Hauptdiagnose: Lokalisation</pre>
      */
    public static final String RULES_TXT_CRIT_PRINC_DIAG_LOC_DIS = "Rules.txt.crit.princ.diag.loc.dis";

    /** <pre>RULES_TXT_CRIT_PROC_DATE_DIS
      * [en] OPSDatum
      * [de] OPSDatum</pre>
      */
    public static final String RULES_TXT_CRIT_PROC_DATE_DIS = "Rules.txt.crit.proc.date.dis";

    /** <pre>RULES_TXT_CRIT_PROC_DATE_TOOLTIP_1
      * [en] Datum, an dem die Prozedur durchgeführt worden ist.
      * [de] Datum, an dem die Prozedur durchgeführt worden ist.</pre>
      */
    public static final String RULES_TXT_CRIT_PROC_DATE_TOOLTIP_1 = "Rules.txt.crit.proc.date.tooltip.1";

    /** <pre>RULES_TXT_CRIT_PROC_LOCALISATION_DIS
      * [en] OPSLokalisation
      * [de] OPSLokalisation</pre>
      */
    public static final String RULES_TXT_CRIT_PROC_LOCALISATION_DIS = "Rules.txt.crit.proc.localisation.dis";

    /** <pre>RULES_TXT_CRIT_PROC_NUMBER_DIS
      * [en] Anzahl Prozeduren
      * [de] Anzahl Prozeduren</pre>
      */
    public static final String RULES_TXT_CRIT_PROC_NUMBER_DIS = "Rules.txt.crit.proc.number.dis";

    /** <pre>RULES_TXT_CRIT_PROC_NUMBER_TOOLTIP_1
      * [en] Die Summe aller Prozeduren.
      * [de] Die Summe aller Prozeduren.</pre>
      */
    public static final String RULES_TXT_CRIT_PROC_NUMBER_TOOLTIP_1 = "Rules.txt.crit.proc.number.tooltip.1";

    /** <pre>RULES_TXT_CRIT_PROC_TOOLTIP_1
      * [en] OPS, Operationen- und Prozedurenschlüssel, maximal 6-stellig, z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.
      * [de] OPS, Operationen- und Prozedurenschlüssel, maximal 6-stellig, z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.</pre>
      */
    public static final String RULES_TXT_CRIT_PROC_TOOLTIP_1 = "Rules.txt.crit.proc.tooltip.1";

    /** <pre>RULES_TXT_CRIT_PROCEDURE_GROUPED_DIS
      * [en] Grouperrelevante Prozedur
      * [de] Grouperrelevante Prozedur</pre>
      */
    public static final String RULES_TXT_CRIT_PROCEDURE_GROUPED_DIS = "Rules.txt.crit.procedure.grouped.dis";

    /** <pre>RULES_TXT_CRIT_PROCEDURE_GROUPED_TOOLTIP_1
      * [en] Prozedur, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.
      * [de] Prozedur, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.</pre>
      */
    public static final String RULES_TXT_CRIT_PROCEDURE_GROUPED_TOOLTIP_1 = "Rules.txt.crit.procedure.grouped.tooltip.1";

    /** <pre>RULES_TXT_CRIT_PSYCH_DAYS_INTENSIV
      * [en] Anzahl_Tage_Intensiv
      * [de] Anzahl_Tage_Intensiv</pre>
      */
    public static final String RULES_TXT_CRIT_PSYCH_DAYS_INTENSIV = "Rules.txt.crit.psych.days.intensiv";

    /** <pre>RULES_TXT_CRIT_PSYCH_DAYS_INTENSIV_DIS
      * [en] Anzahl Tage intensiv
      * [de] Anzahl Tage intensiv</pre>
      */
    public static final String RULES_TXT_CRIT_PSYCH_DAYS_INTENSIV_DIS = "Rules.txt.crit.psych.days.intensiv.dis";

    /** <pre>RULES_TXT_CRIT_PSYCH_ONE_2_ONE_ADULTS
      * [en] Anzahl_Stunden_eins2eins_Behandlung_Erwachsene
      * [de] Anzahl_Stunden_eins2eins_Behandlung_Erwachsene</pre>
      */
    public static final String RULES_TXT_CRIT_PSYCH_ONE_2_ONE_ADULTS = "Rules.txt.crit.psych.one.2.one.adults";

    /** <pre>RULES_TXT_CRIT_PSYCH_ONE_2_ONE_ADULTS_TOOLTIP
      * [en] Anzahl Stunden 1:1 Behandlung Erwachsene
      * [de] Anzahl Stunden 1:1 Behandlung Erwachsene</pre>
      */
    public static final String RULES_TXT_CRIT_PSYCH_ONE_2_ONE_ADULTS_TOOLTIP = "Rules.txt.crit.psych.one.2.one.adults.tooltip";

    /** <pre>RULES_TXT_CRIT_PSYCH_ONE_2_ONE_INFANTS
      * [en] Anzahl_Stunden_eins2eins_Behandlung_Kinder
      * [de] Anzahl_Stunden_eins2eins_Behandlung_Kinder</pre>
      */
    public static final String RULES_TXT_CRIT_PSYCH_ONE_2_ONE_INFANTS = "Rules.txt.crit.psych.one.2.one.infants";

    /** <pre>RULES_TXT_CRIT_PSYCH_ONE_2_ONE_INFANTS_TOOLTIP
      * [en] Anzahl Stunden 1:1 Behandlung Kinder
      * [de] Anzahl Stunden 1:1 Behandlung Kinder</pre>
      */
    public static final String RULES_TXT_CRIT_PSYCH_ONE_2_ONE_INFANTS_TOOLTIP = "Rules.txt.crit.psych.one.2.one.infants.tooltip";

    /** <pre>RULES_TXT_CRIT_PSYCH_OPS_NUMBER
      * [en] Anzahl_Psych_OPS
      * [de] Anzahl_Psych_OPS</pre>
      */
    public static final String RULES_TXT_CRIT_PSYCH_OPS_NUMBER = "Rules.txt.crit.psych.ops.number";

    /** <pre>RULES_TXT_CRIT_PSYCH_OPS_NUMBER_TOOLTIP
      * [en] Anzahl Psych-OPS
      * [de] Anzahl Psych-OPS</pre>
      */
    public static final String RULES_TXT_CRIT_PSYCH_OPS_NUMBER_TOOLTIP = "Rules.txt.crit.psych.ops.number.tooltip";

    /** <pre>RULES_TXT_CRIT_PSYCH_OPS_TOOLTIP
      * [en] Psych-OPS
      * [de] Psych-OPS</pre>
      */
    public static final String RULES_TXT_CRIT_PSYCH_OPS_TOOLTIP = "Rules.txt.crit.psych.ops.tooltip";

    /** <pre>RULES_TXT_CRIT_PSYCHO_STATE_DIS
      * [en] Psychostatus
      * [de] Psychostatus</pre>
      */
    public static final String RULES_TXT_CRIT_PSYCHO_STATE_DIS = "Rules.txt.crit.psycho.state.dis";

    /** <pre>RULES_TXT_CRIT_RECEIPT_DEPARTMENT_DIS
      * [en] aufnehmende Fachabteilung
      * [de] aufnehmende Fachabteilung</pre>
      */
    public static final String RULES_TXT_CRIT_RECEIPT_DEPARTMENT_DIS = "Rules.txt.crit.receipt.department.dis";

    /** <pre>RULES_TXT_CRIT_RECEIPT_DEPARTMENT_TOOLTIP_1
      * [en] Kodierung der aufnehmenden Fachabteilung nach §301(Siehe Anlage 1)
      * [de] Kodierung der aufnehmenden Fachabteilung nach §301(Siehe Anlage 1)</pre>
      */
    public static final String RULES_TXT_CRIT_RECEIPT_DEPARTMENT_TOOLTIP_1 = "Rules.txt.crit.receipt.department.tooltip.1";

    /** <pre>RULES_TXT_CRIT_RECHNUNG_ART_DIS
      * [en] Rechnungsart
      * [de] Rechnungsart</pre>
      */
    public static final String RULES_TXT_CRIT_RECHNUNG_ART_DIS = "Rules.txt.crit.rechnung.art.dis";

    /** <pre>RULES_TXT_CRIT_RECHNUNG_DATUM_DIS
      * [en] Rechnungsdatum
      * [de] Rechnungsdatum</pre>
      */
    public static final String RULES_TXT_CRIT_RECHNUNG_DATUM_DIS = "Rules.txt.crit.rechnung.datum.dis";

    /** <pre>RULES_TXT_CRIT_RECHNUNG_DATUM_TOOLTIP_1
      * [en] Datum, an dem die Rechnung erstellt worden ist.
      * [de] Datum, an dem die Rechnung erstellt worden ist.</pre>
      */
    public static final String RULES_TXT_CRIT_RECHNUNG_DATUM_TOOLTIP_1 = "Rules.txt.crit.rechnung.datum.tooltip.1";

    /** <pre>RULES_TXT_CRIT_RECHNUNG_NUMMER_DIS
      * [en] Rechnungsnummer
      * [de] Rechnungsnummer</pre>
      */
    public static final String RULES_TXT_CRIT_RECHNUNG_NUMMER_DIS = "Rules.txt.crit.rechnung.nummer.dis";

    /** <pre>RULES_TXT_CRIT_REDUCTION_CW_DIS
      * [en] CW Abschlag
      * [de] CW Abschlag</pre>
      */
    public static final String RULES_TXT_CRIT_REDUCTION_CW_DIS = "Rules.txt.crit.reduction.cw.dis";

    /** <pre>RULES_TXT_CRIT_REDUCTION_CW_TOOLTIP_1
      * [en] Ein Unterschreiten der Unteren Grenzverweildauer bewirkt einen Abschlag, bei dem die einer DRG zugeordneten CW-Wert-Abschläge multipliziert mit den Tagen der Unterschreitung von dem CW-Basiswert abgezogen werden.
      * [de] Ein Unterschreiten der Unteren Grenzverweildauer bewirkt einen Abschlag, bei dem die einer DRG zugeordneten CW-Wert-Abschläge multipliziert mit den Tagen der Unterschreitung von dem CW-Basiswert abgezogen werden.</pre>
      */
    public static final String RULES_TXT_CRIT_REDUCTION_CW_TOOLTIP_1 = "Rules.txt.crit.reduction.cw.tooltip.1";

    /** <pre>RULES_TXT_CRIT_REDUCTION_DAYS_DIS
      * [en] Abschlagstage
      * [de] Abschlagstage</pre>
      */
    public static final String RULES_TXT_CRIT_REDUCTION_DAYS_DIS = "Rules.txt.crit.reduction.days.dis";

    /** <pre>RULES_TXT_CRIT_REDUCTION_DAYS_TOOLTIP_1
      * [en] (Untere Grenzverweildauer + 1 ) - Ist-Verweildauer. Im Fallpauschalenkatalog ist immer der erste Abschlagstag angegeben.(Spalte 7)
      * [de] (Untere Grenzverweildauer + 1 ) - Ist-Verweildauer. Im Fallpauschalenkatalog ist immer der erste Abschlagstag angegeben.(Spalte 7)</pre>
      */
    public static final String RULES_TXT_CRIT_REDUCTION_DAYS_TOOLTIP_1 = "Rules.txt.crit.reduction.days.tooltip.1";

    /** <pre>RULES_TXT_CRIT_RELEASE_DEPARTMENT_DIS
      * [en] entlassende Fachabteilung
      * [de] entlassende Fachabteilung</pre>
      */
    public static final String RULES_TXT_CRIT_RELEASE_DEPARTMENT_DIS = "Rules.txt.crit.release.department.dis";

    /** <pre>RULES_TXT_CRIT_RELEASE_DEPARTMENT_TOOLTIP_1
      * [en] Kodierung der entlassenden Fachabteilung nach §301(Siehe Anlage 1)
      * [de] Kodierung der entlassenden Fachabteilung nach §301(Siehe Anlage 1)</pre>
      */
    public static final String RULES_TXT_CRIT_RELEASE_DEPARTMENT_TOOLTIP_1 = "Rules.txt.crit.release.department.tooltip.1";

    /** <pre>RULES_TXT_CRIT_REMEDIES_ALL_PRICE
      * [en] he_gesamtPreis_alle
      * [de] he_gesamtPreis_alle</pre>
      */
    public static final String RULES_TXT_CRIT_REMEDIES_ALL_PRICE = "Rules.txt.crit.remedies.all.price";

    /** <pre>RULES_TXT_CRIT_REMEDIES_ALL_PRICE_DIS
      * [en] Heilmittel: Gesamtpreis
      * [de] Heilmittel: Gesamtpreis</pre>
      */
    public static final String RULES_TXT_CRIT_REMEDIES_ALL_PRICE_DIS = "Rules.txt.crit.remedies.all.price.dis";

    /** <pre>RULES_TXT_CRIT_REMEDIES_COUNT
      * [en] he_menge
      * [de] he_menge</pre>
      */
    public static final String RULES_TXT_CRIT_REMEDIES_COUNT = "Rules.txt.crit.remedies.count";

    /** <pre>RULES_TXT_CRIT_REMEDIES_COUNT_DIS
      * [en] Heilmittel: Menge
      * [de] Heilmittel: Menge</pre>
      */
    public static final String RULES_TXT_CRIT_REMEDIES_COUNT_DIS = "Rules.txt.crit.remedies.count.dis";

    /** <pre>RULES_TXT_CRIT_REMEDIES_FULL_COUNT
      * [en] he_Gesamtmenge
      * [de] he_Gesamtmenge</pre>
      */
    public static final String RULES_TXT_CRIT_REMEDIES_FULL_COUNT = "Rules.txt.crit.remedies.full.count";

    /** <pre>RULES_TXT_CRIT_REMEDIES_FULL_COUNT_DIS
      * [en] Heilmittel: Gesamtmenge für Heilmittelpositionsnummer
      * [de] Heilmittel: Gesamtmenge für Heilmittelpositionsnummer</pre>
      */
    public static final String RULES_TXT_CRIT_REMEDIES_FULL_COUNT_DIS = "Rules.txt.crit.remedies.full.count.dis";

    /** <pre>RULES_TXT_CRIT_REMEDIES_FULL_PRICE
      * [en] he_gesamtPreis
      * [de] he_gesamtPreis</pre>
      */
    public static final String RULES_TXT_CRIT_REMEDIES_FULL_PRICE = "Rules.txt.crit.remedies.full.price";

    /** <pre>RULES_TXT_CRIT_REMEDIES_FULL_PRICE_DIS
      * [en] Heilmittel: Gesamtpreis für Heilmittelpositionsnummer
      * [de] Heilmittel: Gesamtpreis für Heilmittelpositionsnummer</pre>
      */
    public static final String RULES_TXT_CRIT_REMEDIES_FULL_PRICE_DIS = "Rules.txt.crit.remedies.full.price.dis";

    /** <pre>RULES_TXT_CRIT_REMEDIES_NUMBER
      * [en] he_positionsnummer
      * [de] he_positionsnummer</pre>
      */
    public static final String RULES_TXT_CRIT_REMEDIES_NUMBER = "Rules.txt.crit.remedies.number";

    /** <pre>RULES_TXT_CRIT_REMEDIES_NUMBER_DIS
      * [en] Heilmittel: Heilmittelpositionsnummer
      * [de] Heilmittel: Heilmittelpositionsnummer</pre>
      */
    public static final String RULES_TXT_CRIT_REMEDIES_NUMBER_DIS = "Rules.txt.crit.remedies.number.dis";

    /** <pre>RULES_TXT_CRIT_REMEDIES_PRESCRIPTION_DATE
      * [en] he_Verordnungsdatum
      * [de] he_Verordnungsdatum</pre>
      */
    public static final String RULES_TXT_CRIT_REMEDIES_PRESCRIPTION_DATE = "Rules.txt.crit.remedies.prescription.date";

    /** <pre>RULES_TXT_CRIT_REMEDIES_PRESCRIPTION_DATE_DIS
      * [en] Heilmittel: Verordnungsdatum
      * [de] Heilmittel: Verordnungsdatum</pre>
      */
    public static final String RULES_TXT_CRIT_REMEDIES_PRESCRIPTION_DATE_DIS = "Rules.txt.crit.remedies.prescription.date.dis";

    /** <pre>RULES_TXT_CRIT_REMEDIES_PRICE
      * [en] he_preis
      * [de] he_preis</pre>
      */
    public static final String RULES_TXT_CRIT_REMEDIES_PRICE = "Rules.txt.crit.remedies.price";

    /** <pre>RULES_TXT_CRIT_REMEDIES_PRICE_DIS
      * [en] Heilmittel: Einzelpreis
      * [de] Heilmittel: Einzelpreis</pre>
      */
    public static final String RULES_TXT_CRIT_REMEDIES_PRICE_DIS = "Rules.txt.crit.remedies.price.dis";

    /** <pre>RULES_TXT_CRIT_SDX_NUMBER_DIS
      * [en] Anzahl Nebendiagnosen
      * [de] Anzahl Nebendiagnosen</pre>
      */
    public static final String RULES_TXT_CRIT_SDX_NUMBER_DIS = "Rules.txt.crit.sdx.number.dis";

    /** <pre>RULES_TXT_CRIT_SDX_NUMBER_TOOLTIP_1
      * [en] Die Summe aller Nebendiagnosen.
      * [de] Die Summe aller Nebendiagnosen.</pre>
      */
    public static final String RULES_TXT_CRIT_SDX_NUMBER_TOOLTIP_1 = "Rules.txt.crit.sdx.number.tooltip.1";

    /** <pre>RULES_TXT_CRIT_SEC_DIAG_DIS
      * [en] Sek. Diagnose
      * [de] Sek. Diagnose</pre>
      */
    public static final String RULES_TXT_CRIT_SEC_DIAG_DIS = "Rules.txt.crit.sec.diag.dis";

    /** <pre>RULES_TXT_CRIT_SEC_DIAG_LOC_DIS
      * [en] Sek. Diagnose: Lokalisation
      * [de] Sek. Diagnose: Lokalisation</pre>
      */
    public static final String RULES_TXT_CRIT_SEC_DIAG_LOC_DIS = "Rules.txt.crit.sec.diag.loc.dis";

    /** <pre>RULES_TXT_CRIT_SEC_DIAG_PRIM_DIS
      * [en] Sek. Diagnose: Primär
      * [de] Sek. Diagnose: Primär</pre>
      */
    public static final String RULES_TXT_CRIT_SEC_DIAG_PRIM_DIS = "Rules.txt.crit.sec.diag.prim.dis";

    /** <pre>RULES_TXT_CRIT_SEC_DIAG_PRIM_TOOLTIP_1
      * [en] Die Diagnose, zu der die sekundäre Diagnose in Bezug steht. Siehe Diagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code .
      * [de] Die Diagnose, zu der die sekundäre Diagnose in Bezug steht. Siehe Diagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code .</pre>
      */
    public static final String RULES_TXT_CRIT_SEC_DIAG_PRIM_TOOLTIP_1 = "Rules.txt.crit.sec.diag.prim.tooltip.1";

    /** <pre>RULES_TXT_CRIT_SEC_DIAG_TOOLTIP_1_1
      * [en] Die Sekundär-Diagnose ist in ein Code aus der Kreuz-Stern-Systematik (der Sterncode) oder ein anderer optionaler Kode.
      * [de] Die Sekundär-Diagnose ist in ein Code aus der Kreuz-Stern-Systematik (der Sterncode) oder ein anderer optionaler Kode.</pre>
      */
    public static final String RULES_TXT_CRIT_SEC_DIAG_TOOLTIP_1_1 = "Rules.txt.crit.sec.diag.tooltip.1.1";

    /** <pre>RULES_TXT_CRIT_SEC_DIAG_TYPE_DIS
      * [en] Sek. Diagnose: Typ
      * [de] Sek. Diagnose: Typ</pre>
      */
    public static final String RULES_TXT_CRIT_SEC_DIAG_TYPE_DIS = "Rules.txt.crit.sec.diag.type.dis";

    /** <pre>RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_1
      * [en] Entlassungsdatum ist der letzte Behandlungstag im Krankenhaus.
      * [de] Entlassungsdatum ist der letzte Behandlungstag im Krankenhaus.</pre>
      */
    public static final String RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_1 = "Rules.txt.crit.separation.date.tooltip.1";

    /** <pre>RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2
      * [en] Format: YYYYMMDD
      * [de] Format: YYYYMMDD</pre>
      * Attention! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON!
      */
    public static final String RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2 = "Rules.txt.crit.separation.date.tooltip.2";

    /** <pre>RULES_TXT_CRIT_SEPARATION_DAY_DIS
      * [en] Entlassungstag
      * [de] Entlassungstag</pre>
      */
    public static final String RULES_TXT_CRIT_SEPARATION_DAY_DIS = "Rules.txt.crit.separation.day.dis";

    /** <pre>RULES_TXT_CRIT_SEPARATION_DAY_TIME_DIS
      * [en] Entlassungsuhrzeit
      * [de] Entlassungsuhrzeit</pre>
      */
    public static final String RULES_TXT_CRIT_SEPARATION_DAY_TIME_DIS = "Rules.txt.crit.separation.day.time.dis";

    /** <pre>RULES_TXT_CRIT_SEPARATION_DAY_TIME_TOOLTIP_1
      * [en] Uhrzeit, zu der der Patient am letzten Tag des Krankenhausaufenthaltes entlassen worden ist.
      * [de] Uhrzeit, zu der der Patient am letzten Tag des Krankenhausaufenthaltes entlassen worden ist.</pre>
      */
    public static final String RULES_TXT_CRIT_SEPARATION_DAY_TIME_TOOLTIP_1 = "Rules.txt.crit.separation.day.time.tooltip.1";

    /** <pre>RULES_TXT_CRIT_SEPARATION_DAY_TOOLTIP_1
      * [en] Tag der Entlassung aus stationärer Behandlung.
      * [de] Tag der Entlassung aus stationärer Behandlung.</pre>
      */
    public static final String RULES_TXT_CRIT_SEPARATION_DAY_TOOLTIP_1 = "Rules.txt.crit.separation.day.tooltip.1";

    /** <pre>RULES_TXT_CRIT_SEPARATION_MONTH_DIS
      * [en] Entlassungsmonat
      * [de] Entlassungsmonat</pre>
      */
    public static final String RULES_TXT_CRIT_SEPARATION_MONTH_DIS = "Rules.txt.crit.separation.month.dis";

    /** <pre>RULES_TXT_CRIT_SEPARATION_MONTH_TOOLTIP_1
      * [en] Monat, in den die Entlassung fällt.
      * [de] Monat, in den die Entlassung fällt.</pre>
      */
    public static final String RULES_TXT_CRIT_SEPARATION_MONTH_TOOLTIP_1 = "Rules.txt.crit.separation.month.tooltip.1";

    /** <pre>RULES_TXT_CRIT_SEPARATION_WEEK_DAY_DIS
      * [en] Entlassungswochentag
      * [de] Entlassungswochentag</pre>
      */
    public static final String RULES_TXT_CRIT_SEPARATION_WEEK_DAY_DIS = "Rules.txt.crit.separation.week.day.dis";

    /** <pre>RULES_TXT_CRIT_SEPARATION_YEAR_DIS
      * [en] Entlassungsjahr
      * [de] Entlassungsjahr</pre>
      */
    public static final String RULES_TXT_CRIT_SEPARATION_YEAR_DIS = "Rules.txt.crit.separation.year.dis";

    /** <pre>RULES_TXT_CRIT_SEPARATION_YEAR_TOOLTIP_1
      * [en] Jahr, in das die Entlassung fällt.
      * [de] Jahr, in das die Entlassung fällt.</pre>
      */
    public static final String RULES_TXT_CRIT_SEPARATION_YEAR_TOOLTIP_1 = "Rules.txt.crit.separation.year.tooltip.1";

    /** <pre>RULES_TXT_CRIT_SOLE_FULL_HIMIGROUP_COUNT_DIS
      * [en] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelgruppe
      * [de] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelgruppe</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_FULL_HIMIGROUP_COUNT_DIS = "Rules.txt.crit.sole.full.himigroup.count.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_FULL_HPN_NUMBER_DAK_DIS
      * [en] Hilfsmittel: Gesamtmenge für Hilfsmittelpositionsnummer
      * [de] Hilfsmittel: Gesamtmenge für Hilfsmittelpositionsnummer</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_FULL_HPN_NUMBER_DAK_DIS = "Rules.txt.crit.sole.full.hpn.number.dak.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_FULL_HPN_PRICE_DAK_DIS
      * [en] Hilfsmittel: Gesamtpreis für Hilfsmittelpositionsnummer
      * [de] Hilfsmittel: Gesamtpreis für Hilfsmittelpositionsnummer</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_FULL_HPN_PRICE_DAK_DIS = "Rules.txt.crit.sole.full.hpn.price.dak.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_FULL_HPN_PRICE_DIS
      * [en] Heil- und Hilfsmittel: Gesamtpreis für PZN
      * [de] Heil- und Hilfsmittel: Gesamtpreis für PZN</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_FULL_HPN_PRICE_DIS = "Rules.txt.crit.sole.full.hpn.price.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_FULL_PRICE_DAK_DIS
      * [en] Hilfsmittel: Gesamtpreis
      * [de] Hilfsmittel: Gesamtpreis</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_FULL_PRICE_DAK_DIS = "Rules.txt.crit.sole.full.price.dak.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_FULL_PRICE_DIS
      * [en] Heil- und Hilfsmittel: Gesamtpreis
      * [de] Heil- und Hilfsmittel: Gesamtpreis</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_FULL_PRICE_DIS = "Rules.txt.crit.sole.full.price.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_FULL_PZN_NUMBER_DIS
      * [en] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelnummer
      * [de] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelnummer</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_FULL_PZN_NUMBER_DIS = "Rules.txt.crit.sole.full.pzn.number.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_HIMIGROUP_PRICE_DIS
      * [en] Heil- und Hilfsmittel: Gesamtpreis für Hilfsmittelgruppe
      * [de] Heil- und Hilfsmittel: Gesamtpreis für Hilfsmittelgruppe</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_HIMIGROUP_PRICE_DIS = "Rules.txt.crit.sole.himigroup.price.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_HIMINUMBER_DIS
      * [en] Heil- und Hilfsmittel: Hilfsmittelnummer
      * [de] Heil- und Hilfsmittel: Hilfsmittelnummer</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_HIMINUMBER_DIS = "Rules.txt.crit.sole.himinumber.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_HPN_DAK_DIS
      * [en] Hilfsmittel: Hilfsmittelpositionsnummer
      * [de] Hilfsmittel: Hilfsmittelpositionsnummer</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_HPN_DAK_DIS = "Rules.txt.crit.sole.hpn.dak.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_HPN_DIS
      * [en] Heil- und Hilfsmittel: PZN
      * [de] Heil- und Hilfsmittel: PZN</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_HPN_DIS = "Rules.txt.crit.sole.hpn.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_HPN_TOOLTIP_1_2
      * [en]
      * [de]</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_HPN_TOOLTIP_1_2 = "Rules.txt.crit.sole.hpn.tooltip.1.2";

    /** <pre>RULES_TXT_CRIT_SOLE_NUMBER_DAK_DIS
      * [en] Hilfsmittel: Menge
      * [de] Hilfsmittel: Menge</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_NUMBER_DAK_DIS = "Rules.txt.crit.sole.number.dak.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_NUMBER_DIS
      * [en] Heil- und Hilfsmittel: Menge
      * [de] Heil- und Hilfsmittel: Menge</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_NUMBER_DIS = "Rules.txt.crit.sole.number.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_PRESCRIPT_DATE_DAK_DIS
      * [en] Hilfsmittel: Verordnungsdatum
      * [de] Hilfsmittel: Verordnungsdatum</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_PRESCRIPT_DATE_DAK_DIS = "Rules.txt.crit.sole.prescript.date.dak.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_PRESCRIPT_DATE_DIS
      * [en] Heil- und Hilfsmittel: Verordnungsdatum
      * [de] Heil- und Hilfsmittel: Verordnungsdatum</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_PRESCRIPT_DATE_DIS = "Rules.txt.crit.sole.prescript.date.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_PRICE_DAK_DIS
      * [en] Hilfsmittel: Einzelpreis
      * [de] Hilfsmittel: Einzelpreis</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_PRICE_DAK_DIS = "Rules.txt.crit.sole.price.dak.dis";

    /** <pre>RULES_TXT_CRIT_SOLE_PRICE_DIS
      * [en] Heil- und Hilfsmittel: Einzelpreis
      * [de] Heil- und Hilfsmittel: Einzelpreis</pre>
      */
    public static final String RULES_TXT_CRIT_SOLE_PRICE_DIS = "Rules.txt.crit.sole.price.dis";

    /** <pre>RULES_TXT_CRIT_STATION_TOOLTIP_1
      * [en] Der Name der Station.
      * [de] Der Name der Station.</pre>
      */
    public static final String RULES_TXT_CRIT_STATION_TOOLTIP_1 = "Rules.txt.crit.station.tooltip.1";

    /** <pre>RULES_TXT_CRIT_TAGE_OHNE_BERECHNUNG_PRO_ENTGELT_DIS
      * [en] Tage ohne Berechnung je Entgelt
      * [de] Tage ohne Berechnung je Entgelt</pre>
      */
    public static final String RULES_TXT_CRIT_TAGE_OHNE_BERECHNUNG_PRO_ENTGELT_DIS = "Rules.txt.crit.tage.ohne.berechnung.pro.entgelt.dis";

    /** <pre>RULES_TXT_CRIT_TIME_OF_STAY_IN_HOURS_DIS
      * [en] Verweildauer in Stunden
      * [de] Verweildauer in Stunden</pre>
      */
    public static final String RULES_TXT_CRIT_TIME_OF_STAY_IN_HOURS_DIS = "Rules.txt.crit.time.of.stay.in.hours.dis";

    /** <pre>RULES_TXT_CRIT_TIME_OF_STAY_IN_HOURS_TOOLTIP_1
      * [en] Siehe Verweildauer. Hier erfolgt die Angabe in Stunden und nicht in Tagen.
      * [de] Siehe Verweildauer. Hier erfolgt die Angabe in Stunden und nicht in Tagen.</pre>
      */
    public static final String RULES_TXT_CRIT_TIME_OF_STAY_IN_HOURS_TOOLTIP_1 = "Rules.txt.crit.time.of.stay.in.hours.tooltip.1";

    /** <pre>RULES_TXT_CRIT_TOP_LENGTH_OF_STAY_DIS
      * [en] obere Grenzverweildauer
      * [de] obere Grenzverweildauer</pre>
      */
    public static final String RULES_TXT_CRIT_TOP_LENGTH_OF_STAY_DIS = "Rules.txt.crit.top.length.of.stay.dis";

    /** <pre>RULES_TXT_CRIT_TRANSFER_DATE_DIS
      * [en] Verlegungsdatum
      * [de] Verlegungsdatum</pre>
      */
    public static final String RULES_TXT_CRIT_TRANSFER_DATE_DIS = "Rules.txt.crit.transfer.date.dis";

    /** <pre>RULES_TXT_CRIT_TRANSFER_DATE_TOOLTIP_1
      * [en] Datum des letzen Tages in der vorhergehenden Fachabteilung .
      * [de] Datum des letzen Tages in der vorhergehenden Fachabteilung .</pre>
      */
    public static final String RULES_TXT_CRIT_TRANSFER_DATE_TOOLTIP_1 = "Rules.txt.crit.transfer.date.tooltip.1";

    /** <pre>RULES_TXT_CRIT_TRANSFER_DAY_TIME_DIS
      * [en] Verlegungsuhrzeit
      * [de] Verlegungsuhrzeit</pre>
      */
    public static final String RULES_TXT_CRIT_TRANSFER_DAY_TIME_DIS = "Rules.txt.crit.transfer.day.time.dis";

    /** <pre>RULES_TXT_CRIT_TRANSFER_DAY_TIME_TOOLTIP_1
      * [en] Uhrzeit, zu der der Patient in ein anderes Krankenhaus verlegt worden ist.
      * [de] Uhrzeit, zu der der Patient in ein anderes Krankenhaus verlegt worden ist.</pre>
      */
    public static final String RULES_TXT_CRIT_TRANSFER_DAY_TIME_TOOLTIP_1 = "Rules.txt.crit.transfer.day.time.tooltip.1";

    /** <pre>RULES_TXT_CRIT_VACATION_DIS
      * [en] Urlaub
      * [de] Urlaub</pre>
      */
    public static final String RULES_TXT_CRIT_VACATION_DIS = "Rules.txt.crit.vacation.dis";

    /** <pre>RULES_TXT_CRIT_VOLUNTARY_DAYS_DIS
      * [en] Tage ohne Berechnung
      * [de] Tage ohne Berechnung</pre>
      */
    public static final String RULES_TXT_CRIT_VOLUNTARY_DAYS_DIS = "Rules.txt.crit.voluntary.days.dis";

    /** <pre>RULES_TXT_CRIT_VOLUNTARY_DAYS_TOOLTIP_1
      * [en] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen.
      * [de] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen.</pre>
      */
    public static final String RULES_TXT_CRIT_VOLUNTARY_DAYS_TOOLTIP_1 = "Rules.txt.crit.voluntary.days.tooltip.1";

    /** <pre>RULES_TXT_CRIT_VWD_DIS
      * [en] Verweildauer
      * [de] Verweildauer</pre>
      */
    public static final String RULES_TXT_CRIT_VWD_DIS = "Rules.txt.crit.vwd.dis";

    /** <pre>RULES_TXT_CRIT_WEIGHT_DIS
      * [en] Gewicht
      * [de] Gewicht</pre>
      */
    public static final String RULES_TXT_CRIT_WEIGHT_DIS = "Rules.txt.crit.weight.dis";

    /** <pre>RULES_TXT_CRIT_WEIGHT_TOOLTIP_1
      * [en] Das Aufnahmegewicht eines Kindes unter einem Jahr in Gramm.
      * [de] Das Aufnahmegewicht eines Kindes unter einem Jahr in Gramm.</pre>
      */
    public static final String RULES_TXT_CRIT_WEIGHT_TOOLTIP_1 = "Rules.txt.crit.weight.tooltip.1";

    /** <pre>RULES_TXT_CRIT_ZIP_CODE_DIS
      * [en] Postleitzahl
      * [de] Postleitzahl</pre>
      */
    public static final String RULES_TXT_CRIT_ZIP_CODE_DIS = "Rules.txt.crit.zip.code.dis";

    /** <pre>RULES_TXT_CRIT_ZIP_CODE_TOOLTIP_1
      * [en] Die Postleitzahl des Wohnortes des Patienten.
      * [de] Die Postleitzahl des Wohnortes des Patienten.</pre>
      */
    public static final String RULES_TXT_CRIT_ZIP_CODE_TOOLTIP_1 = "Rules.txt.crit.zip.code.tooltip.1";

    /** <pre>RULES_TXT_DOSING
      * [en] Dosierung
      * [de] Dosierung</pre>
      */
    public static final String RULES_TXT_DOSING = "Rules.txt.dosing";

    /** <pre>RULES_TXT_GROUP_CARE_DATA_DIS
      * [en] Pflegedaten
      * [de] Pflegedaten</pre>
      */
    public static final String RULES_TXT_GROUP_CARE_DATA_DIS = "Rules.txt.group.care.data.dis";

    /** <pre>RULES_TXT_GROUP_LABOR_DIS
      * [en] Labor
      * [de] Labor</pre>
      */
    public static final String RULES_TXT_GROUP_LABOR_DIS = "Rules.txt.group.labor.dis";

    /** <pre>RULES_TXT_GROUP_MOVEMENT_DIS
      * [en] Bewegungen
      * [de] Bewegungen</pre>
      */
    public static final String RULES_TXT_GROUP_MOVEMENT_DIS = "Rules.txt.group.movement.dis";

    /** <pre>RULES_TXT_GROUP_OTHERS_DIS
      * [en] Sonstige
      * [de] Sonstige</pre>
      */
    public static final String RULES_TXT_GROUP_OTHERS_DIS = "Rules.txt.group.others.dis";

    /** <pre>RULES_TXT_GROUP_PATIENT_MASTER_DATA_DIS
      * [en] Versicherten Stammdaten
      * [de] Versicherten Stammdaten</pre>
      */
    public static final String RULES_TXT_GROUP_PATIENT_MASTER_DATA_DIS = "Rules.txt.group.patient.master.data.dis";

    /** <pre>RULES_TXT_GROUP_PSYCH_DIS
      * [en] Psych-Kriterien
      * [de] Psych-Kriterien</pre>
      */
    public static final String RULES_TXT_GROUP_PSYCH_DIS = "Rules.txt.group.psych.dis";

    /** <pre>RULES_TXT_GROUP_SOLE_DAK_DIS
      * [en] Hilfsmittel
      * [de] Hilfsmittel</pre>
      */
    public static final String RULES_TXT_GROUP_SOLE_DAK_DIS = "Rules.txt.group.sole.dak.dis";

    /** <pre>RULES_TXT_HEM_INFOS
      * [en] Heilmittel
      * [de] Heilmittel</pre>
      */
    public static final String RULES_TXT_HEM_INFOS = "Rules.txt.hem.infos";

    /** <pre>RULES_TXT_INTERVAL_ADM_DATE
      * [en] Aufnahmedatum
      * [de] Aufnahmedatum</pre>
      */
    public static final String RULES_TXT_INTERVAL_ADM_DATE = "Rules.txt.interval.adm.date";

    /** <pre>RULES_TXT_INTERVAL_CASE
      * [en] Fall
      * [de] Fall</pre>
      */
    public static final String RULES_TXT_INTERVAL_CASE = "Rules.txt.interval.case";

    /** <pre>RULES_TXT_INTERVAL_CUR_CASE
      * [en] Aktueller Fall
      * [de] Aktueller Fall</pre>
      */
    public static final String RULES_TXT_INTERVAL_CUR_CASE = "Rules.txt.interval.cur.case";

    /** <pre>RULES_TXT_INTERVAL_DAYS
      * [en] Tag(e)
      * [de] Tag(e)</pre>
      */
    public static final String RULES_TXT_INTERVAL_DAYS = "Rules.txt.interval.days";

    /** <pre>RULES_TXT_INTERVAL_MONTHS
      * [en] Monat(e)
      * [de] Monat(e)</pre>
      */
    public static final String RULES_TXT_INTERVAL_MONTHS = "Rules.txt.interval.months";

    /** <pre>RULES_TXT_INTERVAL_OGVD
      * [en] OGVD
      * [de] OGVD</pre>
      */
    public static final String RULES_TXT_INTERVAL_OGVD = "Rules.txt.interval.ogvd";

    /** <pre>RULES_TXT_INTERVAL_QUARTERS
      * [en] Quartal(e)
      * [de] Quartal(e)</pre>
      */
    public static final String RULES_TXT_INTERVAL_QUARTERS = "Rules.txt.interval.quarters";

    /** <pre>RULES_TXT_INTERVAL_YEARS
      * [en] Jahr(e)
      * [de] Jahr(e)</pre>
      */
    public static final String RULES_TXT_INTERVAL_YEARS = "Rules.txt.interval.years";

    /** <pre>RULES_TXT_LABORATORY_VALUE
      * [en] Laborwert
      * [de] Laborwert</pre>
      */
    public static final String RULES_TXT_LABORATORY_VALUE = "Rules.txt.laboratory.value";

    /** <pre>RULES_TXT_LIST_ADD
      * [en] Hinzufügen
      * [de] Hinzufügen</pre>
      */
    public static final String RULES_TXT_LIST_ADD = "Rules.txt.list.add";

    /** <pre>RULES_TXT_LIST_CHANGE
      * [en] Ändern
      * [de] Ändern</pre>
      */
    public static final String RULES_TXT_LIST_CHANGE = "Rules.txt.list.change";

    /** <pre>RULES_TXT_LIST_DELETE
      * [en] Löschen
      * [de] Löschen</pre>
      */
    public static final String RULES_TXT_LIST_DELETE = "Rules.txt.list.delete";

    /** <pre>RULES_TXT_LIST_DO_NOTHING
      * [en] Keine Aktion
      * [de] Keine Aktion</pre>
      */
    public static final String RULES_TXT_LIST_DO_NOTHING = "Rules.txt.list.do.nothing";

    /** <pre>RULES_TXT_MEDICINE_COSTS
      * [en] Arzneimittel
      * [de] Arzneimittel</pre>
      */
    public static final String RULES_TXT_MEDICINE_COSTS = "Rules.txt.medicine.costs";

    /** <pre>RULES_TXT_NO_INTERVAL
      * [en] keine Angabe
      * [de] keine Angabe</pre>
      */
    public static final String RULES_TXT_NO_INTERVAL = "Rules.txt.no.interval";

    /** <pre>RULES_TXT_OP_AND
      * [en] und ( &amp;&amp; )
      * [de] und ( &amp;&amp; )</pre>
      */
    public static final String RULES_TXT_OP_AND = "Rules.txt.op.and";

    /** <pre>RULES_TXT_OP_CONCATENATE
      * [en] verketten ( | )
      * [de] verketten ( | )</pre>
      */
    public static final String RULES_TXT_OP_CONCATENATE = "Rules.txt.op.concatenate";

    /** <pre>RULES_TXT_OP_DIVIDE
      * [en] geteilt durch ( / )
      * [de] geteilt durch ( / )</pre>
      */
    public static final String RULES_TXT_OP_DIVIDE = "Rules.txt.op.divide";

    /** <pre>RULES_TXT_OP_EQUAL
      * [en] gleich ( == )
      * [de] gleich ( == )</pre>
      */
    public static final String RULES_TXT_OP_EQUAL = "Rules.txt.op.equal";

    /** <pre>RULES_TXT_OP_GT
      * [en] größer ( &amp;gt; )
      * [de] größer ( &amp;gt; )</pre>
      */
    public static final String RULES_TXT_OP_GT = "Rules.txt.op.gt";

    /** <pre>RULES_TXT_OP_GT_EQUAL
      * [en] größer gleich ( &amp;gt;= )
      * [de] größer gleich ( &amp;gt;= )</pre>
      */
    public static final String RULES_TXT_OP_GT_EQUAL = "Rules.txt.op.gt.equal";

    /** <pre>RULES_TXT_OP_IN
      * [en] enthalten ( IN  )
      * [de] enthalten ( IN  )</pre>
      */
    public static final String RULES_TXT_OP_IN = "Rules.txt.op.in";

    /** <pre>RULES_TXT_OP_IN_FALL
      * [en] in Fall ( ~ )
      * [de] in Fall ( ~ )</pre>
      */
    public static final String RULES_TXT_OP_IN_FALL = "Rules.txt.op.in.fall";

    /** <pre>RULES_TXT_OP_IN_TABLE
      * [en] in Tabelle ( @ )
      * [de] in Tabelle ( @ )</pre>
      */
    public static final String RULES_TXT_OP_IN_TABLE = "Rules.txt.op.in.table";

    /** <pre>RULES_TXT_OP_LT
      * [en] kleiner ( &amp;lt; )
      * [de] kleiner ( &amp;lt; )</pre>
      */
    public static final String RULES_TXT_OP_LT = "Rules.txt.op.lt";

    /** <pre>RULES_TXT_OP_LT_EQUAL
      * [en] kleiner gleich ( &amp;lt;= )
      * [de] kleiner gleich ( &amp;lt;= )</pre>
      */
    public static final String RULES_TXT_OP_LT_EQUAL = "Rules.txt.op.lt.equal";

    /** <pre>RULES_TXT_OP_MANY_IN
      * [en] mehrere in ( ## )
      * [de] mehrere in ( ## )</pre>
      */
    public static final String RULES_TXT_OP_MANY_IN = "Rules.txt.op.many.in";

    /** <pre>RULES_TXT_OP_MANY_IN_TABLE
      * [en] mehrere in Tabelle ( #@ )
      * [de] mehrere in Tabelle ( #@ )</pre>
      */
    public static final String RULES_TXT_OP_MANY_IN_TABLE = "Rules.txt.op.many.in.table";

    /** <pre>RULES_TXT_OP_MINUS
      * [en] minus ( - )
      * [de] minus ( - )</pre>
      */
    public static final String RULES_TXT_OP_MINUS = "Rules.txt.op.minus";

    /** <pre>RULES_TXT_OP_MULTIPL
      * [en] multipliziert ( * )
      * [de] multipliziert ( * )</pre>
      */
    public static final String RULES_TXT_OP_MULTIPL = "Rules.txt.op.multipl";

    /** <pre>RULES_TXT_OP_NO_OPERATION
      * [en] keine Operation
      * [de] keine Operation</pre>
      */
    public static final String RULES_TXT_OP_NO_OPERATION = "Rules.txt.op.no.operation";

    /** <pre>RULES_TXT_OP_NOT_DOUBLE_IN
      * [en] nicht doppelt in ( !! )
      * [de] nicht doppelt in ( !! )</pre>
      */
    public static final String RULES_TXT_OP_NOT_DOUBLE_IN = "Rules.txt.op.not.double.in";

    /** <pre>RULES_TXT_OP_NOT_DOUBLE_IN_TABLE
      * [en] nicht doppelt in Tabelle ( !! @ )
      * [de] nicht doppelt in Tabelle ( !! @ )</pre>
      */
    public static final String RULES_TXT_OP_NOT_DOUBLE_IN_TABLE = "Rules.txt.op.not.double.in.table";

    /** <pre>RULES_TXT_OP_NOT_EQUAL
      * [en] ungleich ( != )
      * [de] ungleich ( != )</pre>
      */
    public static final String RULES_TXT_OP_NOT_EQUAL = "Rules.txt.op.not.equal";

    /** <pre>RULES_TXT_OP_NOT_IN
      * [en] keine enthalten ( NOT IN )
      * [de] keine enthalten ( NOT IN )</pre>
      */
    public static final String RULES_TXT_OP_NOT_IN = "Rules.txt.op.not.in";

    /** <pre>RULES_TXT_OP_NOT_IN_TABLE
      * [en] keine enthalten in Tabelle ( NOT IN @ )
      * [de] keine enthalten in Tabelle ( NOT IN @ )</pre>
      */
    public static final String RULES_TXT_OP_NOT_IN_TABLE = "Rules.txt.op.not.in.table";

    /** <pre>RULES_TXT_OP_OR
      * [en] oder ( || )
      * [de] oder ( || )</pre>
      */
    public static final String RULES_TXT_OP_OR = "Rules.txt.op.or";

    /** <pre>RULES_TXT_OP_PLUS
      * [en] plus ( + )
      * [de] plus ( + )</pre>
      */
    public static final String RULES_TXT_OP_PLUS = "Rules.txt.op.plus";

    /** <pre>RULES_TXT_PAT_DATA
      * [en] Patientendaten
      * [de] Patientendaten</pre>
      */
    public static final String RULES_TXT_PAT_DATA = "Rules.txt.pat.data";

    /** <pre>RULES_TXT_PCCL_DIS
      * [en] PCCL
      * [de] PCCL</pre>
      * Attention! this value ('PCCL') seems to be also defined under the key DIALOG_BATCH_GROUPING_PCCL! this value ('PCCL') seems to be also defined under the key PCCL!
      */
    public static final String RULES_TXT_PCCL_DIS = "Rules.txt.pccl.dis";

    /** <pre>RULES_TXT_PEPP_READM_SK
      * [en] SK
      * [de] SK</pre>
      */
    public static final String RULES_TXT_PEPP_READM_SK = "Rules.txt.pepp.readm.sk";

    /** <pre>RULES_TXT_PEPP_RESULT
      * [en] PEPP-Ergebnis
      * [de] PEPP-Ergebnis</pre>
      */
    public static final String RULES_TXT_PEPP_RESULT = "Rules.txt.pepp.result";

    /** <pre>RULES_TXT_PROCEDURE
      * [en] Prozedur
      * [de] Prozedur</pre>
      */
    public static final String RULES_TXT_PROCEDURE = "Rules.txt.procedure";

    /** <pre>RULES_TXT_REQUEST_DISWARD
      * [en] Station
      * [de] Station</pre>
      */
    public static final String RULES_TXT_REQUEST_DISWARD = "Rules.txt.request.disward";

    /** <pre>RULES_TXT_RESULT
      * [en] Ergebnis
      * [de] Ergebnis</pre>
      * Attention! this value ('Ergebnis') seems to be also defined under the key RESULT!
      */
    public static final String RULES_TXT_RESULT = "Rules.txt.result";

    /** <pre>RULES_TXT_SEC_DIAGNOSE
      * [en] Nebendiagnose
      * [de] Nebendiagnose</pre>
      */
    public static final String RULES_TXT_SEC_DIAGNOSE = "Rules.txt.sec.diagnose";

    /** <pre>RULES_TXT_UNKNOWN
      * [en] Unbekannt
      * [de] Unbekannt</pre>
      */
    public static final String RULES_TXT_UNKNOWN = "Rules.txt.unknown";

    /** <pre>RULES_UNTERE_GRENZVERWEILDAUER
      * [en] untere_Grenzverweildauer
      * [de] untere_Grenzverweildauer</pre>
      */
    public static final String RULES_UNTERE_GRENZVERWEILDAUER = "Rules.untere.grenzverweildauer";

    /** <pre>RULES_UNTERSUCHUNGSDATUM
      * [en] Untersuchungsdatum
      * [de] Untersuchungsdatum</pre>
      */
    public static final String RULES_UNTERSUCHUNGSDATUM = "Rules.untersuchungsdatum";

    /** <pre>RULES_VERSICHERTER_ALTER
      * [en] Versicherter_Alter
      * [de] Versicherter_Alter</pre>
      */
    public static final String RULES_VERSICHERTER_ALTER = "Rules.versicherter.alter";

    /** <pre>RULES_VERSICHERTER_GESCHLECHT
      * [en] Versicherter_Geschlecht
      * [de] Versicherter_Geschlecht</pre>
      */
    public static final String RULES_VERSICHERTER_GESCHLECHT = "Rules.versicherter.geschlecht";

    /** <pre>RULES_VERSICHERTER_PFLEGESTUFE
      * [en] Versicherter_Pflegestufe
      * [de] Versicherter_Pflegestufe</pre>
      */
    public static final String RULES_VERSICHERTER_PFLEGESTUFE = "Rules.versicherter.pflegestufe";

    /** <pre>RULES_VERSICHERTER_POSTLEITZAHL
      * [en] Versicherter_Postleitzahl
      * [de] Versicherter_Postleitzahl</pre>
      */
    public static final String RULES_VERSICHERTER_POSTLEITZAHL = "Rules.versicherter.postleitzahl";

    /** <pre>RULES_VERSICHERTER_VERSICHERTENSTATUS
      * [en] Versicherter_Versichertenstatus
      * [de] Versicherter_Versichertenstatus</pre>
      */
    public static final String RULES_VERSICHERTER_VERSICHERTENSTATUS = "Rules.versicherter.versichertenstatus";

    /** <pre>RULES_VERWEILDAUERINSTUNDEN
      * [en] VerweildauerInStunden
      * [de] VerweildauerInStunden</pre>
      */
    public static final String RULES_VERWEILDAUERINSTUNDEN = "Rules.verweildauerinstunden";

    /** <pre>RULES_VPS_CRIT_GROUP
      * [en] VPS Kriterien
      * [de] VPS Kriterien</pre>
      */
    public static final String RULES_VPS_CRIT_GROUP = "Rules.vps.crit.group";

    /** <pre>RULES_VPS_DISCOVERED_AT
      * [en] VPS_Festgestelt_am
      * [de] VPS_Festgestelt_am</pre>
      */
    public static final String RULES_VPS_DISCOVERED_AT = "Rules.vps.discovered.at";

    /** <pre>RULES_VPS_DISCOVERED_AT_DIS
      * [en] VPS: Festgestelt am
      * [de] VPS: Festgestelt am</pre>
      */
    public static final String RULES_VPS_DISCOVERED_AT_DIS = "Rules.vps.discovered.at.dis";

    /** <pre>RULES_VPS_DISCOVERED_AT_TOOLTIP
      * [en] VPS: VPS - Fehler wurde festgestellt am
      * [de] VPS: VPS - Fehler wurde festgestellt am</pre>
      */
    public static final String RULES_VPS_DISCOVERED_AT_TOOLTIP = "Rules.vps.discovered.at.tooltip";

    /** <pre>RULES_VPS_DISCOVERED_FROM
      * [en] VPS_Festgestelt_durch
      * [de] VPS_Festgestelt_durch</pre>
      */
    public static final String RULES_VPS_DISCOVERED_FROM = "Rules.vps.discovered.from";

    /** <pre>RULES_VPS_DISCOVERED_FROM_DIS
      * [en] VPS: Festgestelt durch
      * [de] VPS: Festgestelt durch</pre>
      */
    public static final String RULES_VPS_DISCOVERED_FROM_DIS = "Rules.vps.discovered.from.dis";

    /** <pre>RULES_VPS_DISCOVERED_FROM_TOOLTIP
      * [en] VPS: VPS - Fehler wurde festgestellt durch
      * [de] VPS: VPS - Fehler wurde festgestellt durch</pre>
      */
    public static final String RULES_VPS_DISCOVERED_FROM_TOOLTIP = "Rules.vps.discovered.from.tooltip";

    /** <pre>RULES_VPS_ERR_CODE
      * [en] VPS_Fehlercode
      * [de] VPS_Fehlercode</pre>
      */
    public static final String RULES_VPS_ERR_CODE = "Rules.vps.err.code";

    /** <pre>RULES_VPS_ERR_CODE_DIS
      * [en] VPS: Fehlercode
      * [de] VPS: Fehlercode</pre>
      */
    public static final String RULES_VPS_ERR_CODE_DIS = "Rules.vps.err.code.dis";

    /** <pre>RULES_VPS_ERR_CODE_TOOLTIP
      * [en] VPS: Fehlercode aus der Iskv
      * [de] VPS: Fehlercode aus der Iskv</pre>
      */
    public static final String RULES_VPS_ERR_CODE_TOOLTIP = "Rules.vps.err.code.tooltip";

    /** <pre>RULES_VPS_ERR_TEXT
      * [en] VPS_Fehlertext
      * [de] VPS_Fehlertext</pre>
      */
    public static final String RULES_VPS_ERR_TEXT = "Rules.vps.err.text";

    /** <pre>RULES_VPS_ERR_TEXT_DIS
      * [en] VPS: Fehlertext
      * [de] VPS: Fehlertext</pre>
      */
    public static final String RULES_VPS_ERR_TEXT_DIS = "Rules.vps.err.text.dis";

    /** <pre>RULES_VPS_ERR_TEXT_TOOLTIP
      * [en] VPS: Fehlertext aus der Iskv
      * [de] VPS: Fehlertext aus der Iskv</pre>
      */
    public static final String RULES_VPS_ERR_TEXT_TOOLTIP = "Rules.vps.err.text.tooltip";

    /** <pre>RULES_VPS_SEVERITY_LEVEL
      * [en] VPS_Schweregrad
      * [de] VPS_Schweregrad</pre>
      */
    public static final String RULES_VPS_SEVERITY_LEVEL = "Rules.vps.severity.level";

    /** <pre>RULES_VPS_SEVERITY_LEVEL_DIS
      * [en] VPS: Schweregrad
      * [de] VPS: Schweregrad</pre>
      */
    public static final String RULES_VPS_SEVERITY_LEVEL_DIS = "Rules.vps.severity.level.dis";

    /** <pre>RULES_VPS_SEVERITY_LEVEL_TOOLTIP
      * [en] VPS: Schweregrad des Fehlers aus der Iskv
      * [de] VPS: Schweregrad des Fehlers aus der Iskv</pre>
      */
    public static final String RULES_VPS_SEVERITY_LEVEL_TOOLTIP = "Rules.vps.severity.level.tooltip";

    /** <pre>RULES_VPS_TEST_OBJECT
      * [en] VPS_Prüfgegenstand
      * [de] VPS_Prüfgegenstand</pre>
      */
    public static final String RULES_VPS_TEST_OBJECT = "Rules.vps.test.object";

    /** <pre>RULES_VPS_TEST_OBJECT_DIS
      * [en] VPS: Prüfgegenstand
      * [de] VPS: Prüfgegenstand</pre>
      */
    public static final String RULES_VPS_TEST_OBJECT_DIS = "Rules.vps.test.object.dis";

    /** <pre>RULES_VPS_TEST_OBJECT_TOOLTIP
      * [en] VPS: Prüfgegenstand des Fehlers aus der Iskv
      * [de] VPS: Prüfgegenstand des Fehlers aus der Iskv</pre>
      */
    public static final String RULES_VPS_TEST_OBJECT_TOOLTIP = "Rules.vps.test.object.tooltip";

    /** <pre>SAME_RULE_DIFFERENT_MESSAGE
      * [en] Same rule different validation result
      * [de] Regel mit gleichem Inhalt,aber unterschiedlichen Validierungsergebnis</pre>
      */
    public static final String SAME_RULE_DIFFERENT_MESSAGE = "Same.rule.different.message";

    /** <pre>SAME_RULE_FOUND
      * [en] Same rule with Ident is found in Pool
      * [de] Regel mit gleichen Ident und der gleichen Inhalt in dem Pool vorhanden</pre>
      */
    public static final String SAME_RULE_FOUND = "Same.rule.found";

    /** <pre>SAME_RULE_OTHER_CAPTION
      * [en] Same rule with Ident but other caption is found in Pool
      * [de] Regel mit gleichen Ident und abweichender Bezeichnung in dem Pool vorhanden</pre>
      */
    public static final String SAME_RULE_OTHER_CAPTION = "Same.rule.other.caption";

    /** <pre>SAME_RULE_OTHER_CATEGORY
      * [en] Same rule with Ident but other rule category type is found in Pool
      * [de] Regel mit gleichen Ident und anderer Kategorie in dem Pool vorhanden</pre>
      */
    public static final String SAME_RULE_OTHER_CATEGORY = "Same.rule.other.category";

    /** <pre>SAME_RULE_OTHER_ERR_TYPE
      * [en] Same rule with Ident but other rule violation type is found in Pool
      * [de] Regel mit gleichen Ident und anderem Regelverletzungstyp in dem Pool vorhanden</pre>
      */
    public static final String SAME_RULE_OTHER_ERR_TYPE = "Same.rule.other.err.type";

    /** <pre>SAME_RULE_OTHER_LOGIC
      * [en] Same rule with Ident but other logic is found in Pool
      * [de] Regel mit gleichen Ident und abweichenden Logik in dem Pool vorhanden</pre>
      */
    public static final String SAME_RULE_OTHER_LOGIC = "Same.rule.other.logic";

    /** <pre>SAME_RULE_OTHER_NUMBER
      * [en] Same rule with Ident but other rule number is found in Pool
      * [de] Regel mit gleichen Ident und anderem Nummer in dem Pool vorhanden</pre>
      */
    public static final String SAME_RULE_OTHER_NUMBER = "Same.rule.other.number";

    /** <pre>SAME_RULE_OTHER_RULE_TYPE
      * [en] Same rule with Ident but other rule type is found in Pool
      * [de] Regel mit gleichen Ident und anderem Regeltyp in dem Pool vorhanden</pre>
      */
    public static final String SAME_RULE_OTHER_RULE_TYPE = "Same.rule.other.rule.type";

    /** <pre>SAME_RULE_OTHER_SUGG_LOGIC
      * [de] Regel mit gleichen Ident und abweichenden VorschlagsLogik in dem Pool vorhanden</pre>
      */
    public static final String SAME_RULE_OTHER_SUGG_LOGIC = "Same.rule.other.sugg.logic";

    /** <pre>SAME_TABLE
      * [en] Same rule table is found in Pool
      * [de] Tabelle mit der gleichen Inhalt in dem Pool vorhanden</pre>
      */
    public static final String SAME_TABLE = "Same.table";

    /** <pre>SAME_TABLE_OTHER_COMMENT
      * [en] Same rule table but other comment is found in Pool
      * [de] Tabelle mit der abweichenden Kommentar in dem Pool vorhanden</pre>
      */
    public static final String SAME_TABLE_OTHER_COMMENT = "Same.table.other.comment";

    /** <pre>SAME_TABLE_OTHER_CONTENT
      * [en] Same rule table but other content is found in Pool
      * [de] Tabelle mit der abweichenden Inhalt in dem Pool vorhanden</pre>
      */
    public static final String SAME_TABLE_OTHER_CONTENT = "Same.table.other.content";

    /** <pre>SAP_6WEEKSDEADLINE
      * [de] Vorgang außerhalb der 6-Wochen-Frist</pre>
      */
    public static final String SAP_6WEEKSDEADLINE = "Sap.6weeksdeadline";

    /** <pre>SAP_BILLINGDATE_EMPTY
      * [de] Rechnungsdatum ist nicht bekannt</pre>
      */
    public static final String SAP_BILLINGDATE_EMPTY = "Sap.billingdate.empty";

    /** <pre>SAP_BILLS
      * [en] Bills
      * [de] Rechnungen</pre>
      * Attention! this value ('bills') seems to be also defined under the key ADD_CASE_BILLS!
      */
    public static final String SAP_BILLS = "SapBills";

    /** <pre>SAP_BILLS_UPDATE_TOOLTIP
      * [en] Update the Bills from SAP
      * [de] Die Rechnung aus SAP aktualisieren</pre>
      */
    public static final String SAP_BILLS_UPDATE_TOOLTIP = "SapBills.update.tooltip";

    /** <pre>SAP_REFERENCE_TYPE_BILL
      * [en] Bill
      * [de] Rechnung</pre>
      */
    public static final String SAP_REFERENCE_TYPE_BILL = "Sap.reference.type.bill";

    /** <pre>SAP_REFERENCE_TYPE_CANCELLATION
      * [en] Cancel
      * [de] Storno</pre>
      * Attention! this value ('cancel') seems to be also defined under the key CANCEL!
      */
    public static final String SAP_REFERENCE_TYPE_CANCELLATION = "Sap.reference.type.cancellation";

    /** <pre>SAVE
      * [en] save
      * [de] speichern</pre>
      */
    public static final String SAVE = "Save";

    /** <pre>SEARCH_ABORTED
      * [en] Search was aborted by user
      * [de] Suche wurde vom Benutzer abgebrochen</pre>
      */
    public static final String SEARCH_ABORTED = "SearchAborted";

    /** <pre>SEARCH_LIST_CHILD_TYPE_BETWEEN
      * [en] Bereich
      * [de] Bereich</pre>
      */
    public static final String SEARCH_LIST_CHILD_TYPE_BETWEEN = "SearchListChildType.Between";

    /** <pre>SECOND_NAME
      * [en] Family Name
      * [de] Nachname</pre>
      */
    public static final String SECOND_NAME = "SecondName";

    /** <pre>SECONDARY_DIAGNOSES
      * [en] Secondary diagnosis (SD)
      * [de] Nebendiagnosen (ND)</pre>
      */
    public static final String SECONDARY_DIAGNOSES = "Secondary.diagnoses";

    /** <pre>SELECT
      * [en] Select
      * [de] Auswählen</pre>
      */
    public static final String SELECT = "Select";

    /** <pre>SERVER
      * [en] Application Server
      * [de] Anwendungsserver</pre>
      */
    public static final String SERVER = "Server";

    /** <pre>SERVICE
      * [en] Service
      * [de] Leistung</pre>
      */
    public static final String SERVICE = "Service";

    /** <pre>SERVICE_CREATE
      * [en] create Service
      * [de] Leistung erstellen</pre>
      */
    public static final String SERVICE_CREATE = "Service.create";

    /** <pre>SERVICE_OVERVIEW
      * [en] Service overview
      * [de] Leistungsübersicht</pre>
      */
    public static final String SERVICE_OVERVIEW = "Service.overview";

    /** <pre>SETTING_CATEGORY_WEB_APP
      * [en] Web App
      * [de] Web App</pre>
      */
    public static final String SETTING_CATEGORY_WEB_APP = "Setting.category.WebApp";

    /** <pre>SETTING_FREE_CACHE
      * [en] Free cache
      * [de] Cache leeren</pre>
      */
    public static final String SETTING_FREE_CACHE = "Setting.free.cache";

    /** <pre>SETTING_PROTOCOL_FILE
      * [en] Protocol file
      * [de] Protokolldatei</pre>
      */
    public static final String SETTING_PROTOCOL_FILE = "Setting.protocol.file";

    /** <pre>SETTING_SEARCH_LISTS
      * [en] Search lists
      * [de] Suchlisten</pre>
      */
    public static final String SETTING_SEARCH_LISTS = "Setting.searchLists";

    /** <pre>SETTING_SESSION
      * [en] Sessions
      * [de] Sitzungen</pre>
      */
    public static final String SETTING_SESSION = "Setting.session";

    /** <pre>SETTING_SHOW_ALL_REMINDERS
      * [en] Show all reminders
      * [de] Die Vorgangsliste zeigt alle Wiedervorlagen</pre>
      */
    public static final String SETTING_SHOW_ALL_REMINDERS = "Setting.showAllReminders";

    /** <pre>SETTING_SHOW_ALWAYS_INFO_FOR_EXAMINATE_QUOTA
      * [en] Always show information to examinate quota
      * [de] Zeige immer Information über MD-Prüfquote</pre>
      */
    public static final String SETTING_SHOW_ALWAYS_INFO_FOR_EXAMINATE_QUOTA = "Setting.showAlwaysInfoForExaminateQuota";

    /** <pre>SETTING_SHOW_PREVIEW
      * [en] Show preview of case/workflow
      * [de] Fall-/Vorgangsvorschau anzeigen</pre>
      */
    public static final String SETTING_SHOW_PREVIEW = "Setting.show.preview";

    /** <pre>SETTING_WORKFLOW_SIGHT
      * [en] Workflow sight
      * [de] Vorgangsansicht</pre>
      */
    public static final String SETTING_WORKFLOW_SIGHT = "Setting.workflow.sight";

    /** <pre>SF_DF_VALUE
      * [en] SP/DF-Value
      * [de] ZP/ET-Betrag</pre>
      */
    public static final String SF_DF_VALUE = "SfDfValue";

    /** <pre>SOME_FEACHERS_ARE_DEACTIVATED
      * [en] Some feachers are deactivated
      * [de] Dadurch sind einige Features, wie die Fallnumererkennung im Dokumentenimport, nicht verfügbar.</pre>
      */
    public static final String SOME_FEACHERS_ARE_DEACTIVATED = "SomeFeachersAreDeactivated";

    /** <pre>START_GROUPING
      * [en] perform Grouping
      * [de] Starte Grouping</pre>
      */
    public static final String START_GROUPING = "StartGrouping";

    /** <pre>START_GROUPING_TOOLTIP
      * [en] Starts Grouping with these selected cases
      * [de] Startet das Grouping mit diesen ausgewählten Fällen</pre>
      */
    public static final String START_GROUPING_TOOLTIP = "StartGroupingTooltip";

    /** <pre>START_GROUPING_TOOLTIP_RUNNING
      * [en] Grouping was started with these selected cases
      * [de] Grouping wurde mit den ausgewählten Fällen gestartet</pre>
      */
    public static final String START_GROUPING_TOOLTIP_RUNNING = "StartGroupingTooltipRunning";

    /** <pre>STATE_BADEN_WUERTTEMBERG
      * [en] Baden-Württemberg
      * [de] Baden-Württemberg</pre>
      */
    public static final String STATE_BADEN_WUERTTEMBERG = "State.BadenWuerttemberg";

    /** <pre>STATE_BAVARIA
      * [en] Free State of Bavaria
      * [de] Freistaat Bayern</pre>
      */
    public static final String STATE_BAVARIA = "State.Bavaria";

    /** <pre>STATE_BERLIN
      * [en] Berlin
      * [de] Berlin</pre>
      */
    public static final String STATE_BERLIN = "State.Berlin";

    /** <pre>STATE_BRANDENBURG
      * [en] Brandenburg
      * [de] Brandenburg</pre>
      */
    public static final String STATE_BRANDENBURG = "State.Brandenburg";

    /** <pre>STATE_BREMEN
      * [en] Free Hanseatic City of Bremen
      * [de] Freie Hansestadt Bremen</pre>
      */
    public static final String STATE_BREMEN = "State.Bremen";

    /** <pre>STATE_FOREIGN_COUNTRY
      * [en] Foreign Country
      * [de] Ausland</pre>
      */
    public static final String STATE_FOREIGN_COUNTRY = "State.ForeignCountry";

    /** <pre>STATE_HAMBURG
      * [en] Free and Hanseatic City of Hamburg
      * [de] Freie und Hansestadt Hamburg</pre>
      */
    public static final String STATE_HAMBURG = "State.Hamburg";

    /** <pre>STATE_HESSE
      * [en] Hesse
      * [de] Hessen</pre>
      */
    public static final String STATE_HESSE = "State.Hesse";

    /** <pre>STATE_LOWER_SAXONY
      * [en] Lower Saxony
      * [de] Niedersachsen</pre>
      */
    public static final String STATE_LOWER_SAXONY = "State.LowerSaxony";

    /** <pre>STATE_MECKLENBURG_WESTERN_POMERANIA
      * [en] Mecklenburg Western Pomerania
      * [de] Mecklenburg-Vorpommern</pre>
      */
    public static final String STATE_MECKLENBURG_WESTERN_POMERANIA = "State.MecklenburgWesternPomerania";

    /** <pre>STATE_NORTH_RHINE_WESTPHALIA
      * [en] Northrhine-Westphalia
      * [de] Nordrhein-Westfalen</pre>
      */
    public static final String STATE_NORTH_RHINE_WESTPHALIA = "State.NorthRhineWestphalia";

    /** <pre>STATE_RHINELAND_PALATINATE
      * [en] Rhineland Palatinate
      * [de] Rheinland-Pfalz</pre>
      */
    public static final String STATE_RHINELAND_PALATINATE = "State.RhinelandPalatinate";

    /** <pre>STATE_SAARLAND
      * [en] Saarland
      * [de] Saarland</pre>
      */
    public static final String STATE_SAARLAND = "State.Saarland";

    /** <pre>STATE_SAXONY
      * [en] Free State of Saxony
      * [de] Freistaat Sachsen</pre>
      */
    public static final String STATE_SAXONY = "State.Saxony";

    /** <pre>STATE_SAXONY_ANHALT
      * [en] Saxony-Anhalt
      * [de] Sachsen-Anhalt</pre>
      */
    public static final String STATE_SAXONY_ANHALT = "State.SaxonyAnhalt";

    /** <pre>STATE_SCHLESWIG_HOLSTEIN
      * [en] Schleswig-Holstein
      * [de] Schleswig-Holstein</pre>
      */
    public static final String STATE_SCHLESWIG_HOLSTEIN = "State.SchleswigHolstein";

    /** <pre>STATE_THURINGIA
      * [en] Free State of Thuringia
      * [de] Freistaat Thüringen</pre>
      */
    public static final String STATE_THURINGIA = "State.Thuringia";

    /** <pre>STATIONARY
      * [en] stationary
      * [de] stationär</pre>
      */
    public static final String STATIONARY = "Stationary";

    /** <pre>STATUS
      * [de] der Anfrage (Anfr.-Status)</pre>
      */
    public static final String STATUS = "Status";

    /** <pre>STEP
      * [en] Step
      * [de] Schritt</pre>
      */
    public static final String STEP = "Step";

    /** <pre>SUCCESS
      * [en] Success
      * [de] Erfolg</pre>
      */
    public static final String SUCCESS = "Success";

    /** <pre>SUPPL_FEE_DF
      * [en] DF
      * [de] ET</pre>
      */
    public static final String SUPPL_FEE_DF = "SupplFee.DF";

    /** <pre>SUPPL_FEE_SF
      * [en] SF
      * [de] ZE</pre>
      */
    public static final String SUPPL_FEE_SF = "SupplFee.SF";

    /** <pre>SUPPL_FEE_SP
      * [en] SP
      * [de] ZP</pre>
      */
    public static final String SUPPL_FEE_SP = "SupplFee.SP";

    /** <pre>SUPPL_FEE_VALUE_DRG
      * [en] SF-Value
      * [de] ZE-Betrag</pre>
      */
    public static final String SUPPL_FEE_VALUE_DRG = "SupplFeeValueDRG";

    /** <pre>SUPPL_FEE_VALUE_PEPP
      * [en] SP-Value
      * [de] ZP-Betrag</pre>
      */
    public static final String SUPPL_FEE_VALUE_PEPP = "SupplFeeValuePEPP";

    /** <pre>SUPPLEMENTARY_VALUE
      * [en] Supplementary Value
      * [de] ZE-Betrag</pre>
      */
    public static final String SUPPLEMENTARY_VALUE = "SupplementaryValue";

    /** <pre>SUPPORT
      * [en] Support
      * [de] Support</pre>
      */
    public static final String SUPPORT = "Support";

    /** <pre>SURCHARGE
      * [en] Surcharge
      * [de] Zuschlag</pre>
      * Attention! this value ('Surcharge') seems to be also defined under the key DRG_CORR_TYPE_SURCHARGE!
      */
    public static final String SURCHARGE = "Surcharge";

    /** <pre>SYSTEM_INFO_RECOMMENDED_JAVA_VERSION_TEXT
      * [en] (recommended is {0} or higher!)
      * [de] (empfohlen ist {0} oder höher!)</pre>
      */
    public static final String SYSTEM_INFO_RECOMMENDED_JAVA_VERSION_TEXT = "System.info.recommended.java.version.text";

    /** <pre>TEMPLATE_AVAILABILITY
      * [en] Available Templates
      * [de] Verfügbare Vorlagen</pre>
      */
    public static final String TEMPLATE_AVAILABILITY = "Template.availability";

    /** <pre>TEMPLATE_CATEGORY_MAIN
      * [en] Main category for a template
      * [de] Hauptkategorie für eine Vorlage</pre>
      */
    public static final String TEMPLATE_CATEGORY_MAIN = "Template.category.main";

    /** <pre>TEMPLATE_CATEGORY_SUB_FIRST
      * [en] 1. Subcategory for a template
      * [de] 1. Unterkategorie für eine Vorlage</pre>
      */
    public static final String TEMPLATE_CATEGORY_SUB_FIRST = "Template.category.sub.first";

    /** <pre>TEMPLATE_CATEGORY_SUB_SECOND
      * [en] 2. Subcategory for a template
      * [de] 2. Unterkategorie für eine Vorlage</pre>
      */
    public static final String TEMPLATE_CATEGORY_SUB_SECOND = "Template.category.sub.second";

    /** <pre>TEMPLATE_CONFIRMATION
      * [en] Confirmation
      * [de] Bestätigung</pre>
      * Attention! this value ('Confirmation') seems to be also defined under the key CONFORMATION!
      */
    public static final String TEMPLATE_CONFIRMATION = "Template.confirmation";

    /** <pre>TEMPLATE_CONFIRMATION_DIALOG
      * [en] confirmation dialog
      * [de] Bestätigungsdialog</pre>
      */
    public static final String TEMPLATE_CONFIRMATION_DIALOG = "Template.confirmation.dialog";

    /** <pre>TEMPLATE_CONFIRMATION_TEXT
      * [en] Would you like to save document {0} to the process {1}?
      * [de] Möchten Sie das Dokument {0} im Vorgang {1} speichern?</pre>
      */
    public static final String TEMPLATE_CONFIRMATION_TEXT = "Template.confirmationText";

    /** <pre>TEMPLATE_ERROR_CONTENT
      * [en] you can not generate a document because the main case of this process is null
      * [de] Sie können kein Dokument generieren, da der Hauptfall dieses Vorgangs nicht (mehr) verknüpft ist</pre>
      */
    public static final String TEMPLATE_ERROR_CONTENT = "Template.error.Content";

    /** <pre>TEMPLATE_ERROR_HEADER
      * [en] MainCase error
      * [de] Hauptfallfehler</pre>
      */
    public static final String TEMPLATE_ERROR_HEADER = "Template.error.Header";

    /** <pre>TEMPLATE_ERROR_TITLE
      * [en] Error
      * [de] Fehler</pre>
      * Attention! this value ('Error') seems to be also defined under the key DIALOG_BATCH_GROUPING_RULES_ERROR!
      */
    public static final String TEMPLATE_ERROR_TITLE = "Template.error.Title";

    /** <pre>TEMPLATE_GENERATION
      * [en] Generate from Template
      * [de] Aus Vorlage erstellen</pre>
      */
    public static final String TEMPLATE_GENERATION = "Template.generation";

    /** <pre>TEMPLATE_WAIT_NOTIFICATION_TEXT
      * [en] Word Document will be generated from selected draft {0} and opened afterwards!
      * [de] Word-Dokument wird aus der ausgewählten Vorlage {0} erzeugt und danach geöffnet!</pre>
      */
    public static final String TEMPLATE_WAIT_NOTIFICATION_TEXT = "Template.wait.notification_text";

    /** <pre>TEMPLATE_WAIT_NOTIFICATION_TITLE
      * [en] Word Document will be opened soon!
      * [de] Word-Dokument wird demnächst geöffnet!</pre>
      */
    public static final String TEMPLATE_WAIT_NOTIFICATION_TITLE = "Template.wait.notification_title";

    /** <pre>TEXT_TEMPLATE_ACTION
      * [en] Action Context
      * [de] Aktion Kontext</pre>
      */
    public static final String TEXT_TEMPLATE_ACTION = "TextTemplate.action";

    /** <pre>TEXT_TEMPLATE_CASE_REPORT
      * [en] CaseReport Context
      * [de] Fallreport Kontext</pre>
      */
    public static final String TEXT_TEMPLATE_CASE_REPORT = "TextTemplate.caseReport";

    /** <pre>TEXT_TEMPLATE_INKA
      * [en] Inka-Message Context
      * [de] INKA-Nachricht Kontext</pre>
      */
    public static final String TEXT_TEMPLATE_INKA = "TextTemplate.inka";

    /** <pre>TEXT_TEMPLATE_PROCESS_FINALISATION
      * [en] Process Finalization Context
      * [de] Vorgangsabschluss Kontext</pre>
      */
    public static final String TEXT_TEMPLATE_PROCESS_FINALISATION = "TextTemplate.processFinalisation";

    /** <pre>TEXT_TEMPLATE_REMINDER
      * [en] Reminder Context
      * [de] Wiedervorlage Kontext</pre>
      */
    public static final String TEXT_TEMPLATE_REMINDER = "TextTemplate.reminder";

    /** <pre>TEXT_TEMPLATE_REQUEST
      * [en] Request Context
      * [de] Anfrage Kontext</pre>
      */
    public static final String TEXT_TEMPLATE_REQUEST = "TextTemplate.request";

    /** <pre>TEXTTEMPLATES
      * [en] texttemplates
      * [de] Textbausteine</pre>
      */
    public static final String TEXTTEMPLATES = "Texttemplates";

    /** <pre>TIME_FORMAT
      * [en] HH:mm
      * [de] HH:mm</pre>
      */
    public static final String TIME_FORMAT = "TimeFormat";

    /** <pre>TIME_FORMAT_DEVIDER
      * [en] :
      * [de] :</pre>
      */
    public static final String TIME_FORMAT_DEVIDER = "TimeFormat.devider";

    /** <pre>TP_301_INFORMATION_KEY_30_BEF00
      * [en] Termination of the examination procedure due to agreement in the case dialogue - without data correction
      * [de] Beendigung des Prüfverfahrens aufgrund Einigung im Falldialog – ohne Datenkorrektur</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_BEF00 = "Tp301.InformationKey30.BEF00";

    /** <pre>TP_301_INFORMATION_KEY_30_BEK00
      * [en] Termination of the test procedure due to data correction - MD not necessary
      * [de] Beendigung des Prüfverfahrens aufgrund Datenkorrektur – MD nicht notwendig</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_BEK00 = "Tp301.InformationKey30.BEK00";

    /** <pre>TP_301_INFORMATION_KEY_30_BEK10
      * [en] No data correction / addition in pre-trial proceeding and no test complaint by MD because of maximum permissible check quota
      * [de] Im Vorverfahren erfolgte keine Datenkorrektur/Ergänzung und infolge der maximal zulässigen Prüfquote, erfolgt keine Prüfanzeige durch den MD</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_BEK10 = "Tp301.InformationKey30.BEK10";

    /** <pre>TP_301_INFORMATION_KEY_30_BEK11
      * [de] Vorverfahren wurde kein Falldialog durchgeführt und infolge der maximal zulässigen Prüfquote erfolgt keine Prüfanzeige durch den MD (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_BEK11 = "Tp301.InformationKey30.BEK11";

    /** <pre>TP_301_INFORMATION_KEY_30_BEK20
      * [en] Realized case dialogue without solution in pre-trial proceeding, no test complaint by MD because of maximum permissible check quota
      * [de] Im Vorverfahren wurde ein Falldialog durchgeführt, jedoch keine Einigung erzielt und infolge der maximal zulässigen Prüfquote, erfolgt keine Prüfanzeige durch den MD</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_BEK20 = "Tp301.InformationKey30.BEK20";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH01
      * [de] Inhaltliche begründetes Bestreiten der Entscheidung der Krankenkasse gemäß § 9 Abs. 1 Satz 1 und 2 PrüfvV ohne Einleitung des EV (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH01 = "Tp301.InformationKey30.EKH01";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH02
      * [de] Inhaltliche begründetes Bestreiten der Entscheidung der Krankenkasse gemäß § 9 Abs. 1 Satz 1 bis 3 PrüfvV mit gleichzeitiger Einleitung des EV (INKA) Tp301.InformationKey30</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH02 = "Tp301.InformationKey30.EKH02";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH30
      * [de] Aufforderung zur Verlängerung des Erörterungsverfahrens (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH30 = "Tp301.InformationKey30.EKH30";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH31
      * [de] Annahme der Aufforderung zur Verlängerung des Erörterungsverfahrens (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH31 = "Tp301.InformationKey30.EKH31";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH32
      * [de] Ablehnung der Verlängerung des Erörterungsverfahrens (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH32 = "Tp301.InformationKey30.EKH32";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH33
      * [de] Aufforderung mündliches Erörterungsverfahren (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH33 = "Tp301.InformationKey30.EKH33";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH34
      * [de] Zustimmung mündliches Erörterungsverfahren (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH34 = "Tp301.InformationKey30.EKH34";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH35
      * [de] Ablehnung mündliches Erörterungsverfahren (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH35 = "Tp301.InformationKey30.EKH35";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH41
      * [de] Anzeige für eine ausnahmsweise Zulassung nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH41 = "Tp301.InformationKey30.EKH41";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH42
      * [de] Ablehnung nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH42 = "Tp301.InformationKey30.EKH42";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH43
      * [de] Annahme nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag gemäß § 9 Abs. 7 PrüfvV (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH43 = "Tp301.InformationKey30.EKH43";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH50
      * [de] Einigung im Erörterungsverfahren und Beendigung gemäß § 9 Abs. 8 PrüfvV (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH50 = "Tp301.InformationKey30.EKH50";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH51
      * [de] Einvernehmliche Beendigung des Erörterungsverfahren ohne Einigung gemäß § 9 Abs. 10 PrüfvV (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH51 = "Tp301.InformationKey30.EKH51";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH60
      * [de] Abrechnungsstreitigkeit gilt infolge fehlender Erörterung oder fehlender Mitwirkung als erörtert gemäß § 9 Abs. 11 PrüfvV (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH60 = "Tp301.InformationKey30.EKH60";

    /** <pre>TP_301_INFORMATION_KEY_30_EKH61
      * [de] Es wurde keine Einigung erzielt und das Erörterungsverfahren ist gemäß § 9 Abs. 12 PrüfvV beendet (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKH61 = "Tp301.InformationKey30.EKH61";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK01
      * [de] Krankenkasse schließt sich gemäß §9 Abs. 3 Satz 1 PrüfvV der Begründung des Krankenhauses an. Es erfolgt kein Erörterungsverfahren. (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK01 = "Tp301.InformationKey30.EKK01";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK02
      * [de] Krankenkasse schließt sich der Begründung des Krankenhauses gemäß §9 Abs. 3 Satz 1 PrüfvV an. Das durch das Krankenhaus bereits eingeleitete EV ist beendet. (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK02 = "Tp301.InformationKey30.EKK02";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK03
      * [de] Krankenkasse schließt sich nicht der Begründung des Krankenhauses gemäß §9 Abs. 4 PrüfvV an, das KH hat das EV bereits eingeleitet. (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK03 = "Tp301.InformationKey30.EKK03";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK04
      * [de] Krankenkasse schließt sich nicht der Begründung des Krankenhauses gemäß §9 Abs. 4 Satz 1 PrüfvV an und leitet das EV ein. (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK04 = "Tp301.InformationKey30.EKK04";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK10
      * [de] Entscheidung der Krankenkasse wurde nicht fristgemäß bestritten und gilt als erörtert gemäß § 9 Abs. 2 PrüfvV mit Folge der Aufrechnung (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK10 = "Tp301.InformationKey30.EKK10";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK30
      * [de] Aufforderung zur Verlängerung des Erörterungsverfahrens (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK30 = "Tp301.InformationKey30.EKK30";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK31
      * [de] Annahme der Aufforderung zur Verlängerung des Erörterungsverfahrens (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK31 = "Tp301.InformationKey30.EKK31";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK32
      * [de] Ablehnung der Verlängerung des Erörterungsverfahrens (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK32 = "Tp301.InformationKey30.EKK32";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK33
      * [de] Aufforderung mündliches Erörterungsverfahren (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK33 = "Tp301.InformationKey30.EKK33";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK34
      * [de] Zustimmung mündliches Erörterungsverfahren (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK34 = "Tp301.InformationKey30.EKK34";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK35
      * [de] Ablehnung mündliches Erörterungsverfahren (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK35 = "Tp301.InformationKey30.EKK35";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK41
      * [de] Anzeige einer Ausnahmsweise Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK41 = "Tp301.InformationKey30.EKK41";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK42
      * [de] Ablehnung Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK42 = "Tp301.InformationKey30.EKK42";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK43
      * [de] Annahme Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK43 = "Tp301.InformationKey30.EKK43";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK50
      * [de] Einigung im Erörterungsverfahren und Beendigung gemäß § 9 Abs. 8 PrüfvV (KAIN) Tp301.InformationKey30.EKK51 Einvernehmliche Beendigung des Erörterungsverfahren gemäß § 9 Abs. 10 PrüfvV (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK50 = "Tp301.InformationKey30.EKK50";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK51
      * [de] Einvernehmliche Beendigung des Erörterungsverfahren  ohne Einigung gemäß § 9 Abs. 10 PrüfvV (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK51 = "Tp301.InformationKey30.EKK51";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK60
      * [de] Abrechnungsstreitigkeit gilt infolge fehlender Erörterung oder fehlender Mitwirkung als erörtert gemäß § 9 Abs. 11 PrüfvV (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK60 = "Tp301.InformationKey30.EKK60";

    /** <pre>TP_301_INFORMATION_KEY_30_EKK61
      * [de] Es wurde keine Einigung erzielt und das Erörterungsverfahren ist gemäß § 9 Abs. 12 PrüfvV beendet (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_EKK61 = "Tp301.InformationKey30.EKK61";

    /** <pre>TP_301_INFORMATION_KEY_30_FDI01
      * [en] Request for case dialog
      * [de] Aufforderung zum Falldialog</pre>
      * Attention! this value ('Request for case dialog') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDK01!
      */
    public static final String TP_301_INFORMATION_KEY_30_FDI01 = "Tp301.InformationKey30.FDI01";

    /** <pre>TP_301_INFORMATION_KEY_30_FDI02
      * [en] Acceptance of the request for the case dialogue
      * [de] Annahme der Aufforderung zum Falldialog</pre>
      * Attention! this value ('Acceptance of the request for the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDK02!
      */
    public static final String TP_301_INFORMATION_KEY_30_FDI02 = "Tp301.InformationKey30.FDI02";

    /** <pre>TP_301_INFORMATION_KEY_30_FDI03
      * [en] Rejection of a case dialog
      * [de] Ablehnung eines Falldialoges</pre>
      * Attention! this value ('Rejection of a case dialog') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDK03!
      */
    public static final String TP_301_INFORMATION_KEY_30_FDI03 = "Tp301.InformationKey30.FDI03";

    /** <pre>TP_301_INFORMATION_KEY_30_FDI11
      * [en] Invitation to extend the case dialogue
      * [de] Aufforderung zur Verlängerung des Falldialogs</pre>
      * Attention! this value ('Invitation to extend the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDK11!
      */
    public static final String TP_301_INFORMATION_KEY_30_FDI11 = "Tp301.InformationKey30.FDI11";

    /** <pre>TP_301_INFORMATION_KEY_30_FDI12
      * [en] Adoption of the request to extend the case dialogue
      * [de] Annahme der Aufforderung zur Verlängerung des Falldialogs</pre>
      * Attention! this value ('Adoption of the request to extend the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDK12!
      */
    public static final String TP_301_INFORMATION_KEY_30_FDI12 = "Tp301.InformationKey30.FDI12";

    /** <pre>TP_301_INFORMATION_KEY_30_FDI13
      * [en] Rejection of the extension of the case dialogue
      * [de] Ablehnung der Verlängerung des Falldialoges</pre>
      * Attention! this value ('Rejection of the extension of the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDK13!
      */
    public static final String TP_301_INFORMATION_KEY_30_FDI13 = "Tp301.InformationKey30.FDI13";

    /** <pre>TP_301_INFORMATION_KEY_30_FDI20
      * [en] Declaration on the termination of the case dialogue
      * [de] Erklärung über die Beendigung des Falldialogs</pre>
      * Attention! this value ('Declaration on the termination of the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDK20!
      */
    public static final String TP_301_INFORMATION_KEY_30_FDI20 = "Tp301.InformationKey30.FDI20";

    /** <pre>TP_301_INFORMATION_KEY_30_FDK01
      * [en] Request for case dialog
      * [de] Aufforderung zum Falldialog</pre>
      * Attention! this value ('Request for case dialog') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDI01!
      */
    public static final String TP_301_INFORMATION_KEY_30_FDK01 = "Tp301.InformationKey30.FDK01";

    /** <pre>TP_301_INFORMATION_KEY_30_FDK02
      * [en] Acceptance of the request for the case dialogue
      * [de] Annahme der Aufforderung zum Falldialog</pre>
      * Attention! this value ('Acceptance of the request for the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDI02!
      */
    public static final String TP_301_INFORMATION_KEY_30_FDK02 = "Tp301.InformationKey30.FDK02";

    /** <pre>TP_301_INFORMATION_KEY_30_FDK03
      * [en] Rejection of a case dialog
      * [de] Ablehnung eines Falldialoges</pre>
      * Attention! this value ('Rejection of a case dialog') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDI03!
      */
    public static final String TP_301_INFORMATION_KEY_30_FDK03 = "Tp301.InformationKey30.FDK03";

    /** <pre>TP_301_INFORMATION_KEY_30_FDK11
      * [en] Invitation to extend the case dialogue
      * [de] Aufforderung zur Verlängerung des Falldialogs</pre>
      * Attention! this value ('Invitation to extend the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDI11!
      */
    public static final String TP_301_INFORMATION_KEY_30_FDK11 = "Tp301.InformationKey30.FDK11";

    /** <pre>TP_301_INFORMATION_KEY_30_FDK12
      * [en] Adoption of the request to extend the case dialogue
      * [de] Annahme der Aufforderung zur Verlängerung des Falldialogs</pre>
      * Attention! this value ('Adoption of the request to extend the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDI12!
      */
    public static final String TP_301_INFORMATION_KEY_30_FDK12 = "Tp301.InformationKey30.FDK12";

    /** <pre>TP_301_INFORMATION_KEY_30_FDK13
      * [en] Rejection of the extension of the case dialogue
      * [de] Ablehnung der Verlängerung des Falldialoges</pre>
      * Attention! this value ('Rejection of the extension of the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDI13!
      */
    public static final String TP_301_INFORMATION_KEY_30_FDK13 = "Tp301.InformationKey30.FDK13";

    /** <pre>TP_301_INFORMATION_KEY_30_FDK20
      * [en] Declaration on the termination of the case dialogue
      * [de] Erklärung über die Beendigung des Falldialogs</pre>
      * Attention! this value ('Declaration on the termination of the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDI20!
      */
    public static final String TP_301_INFORMATION_KEY_30_FDK20 = "Tp301.InformationKey30.FDK20";

    /** <pre>TP_301_INFORMATION_KEY_30_FV000
      * [en] Questions about the condition of certain measures
      * [de] Fragen zur Voraussetzung bestimmter Maßnahmen</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_FV000 = "Tp301.InformationKey30.FV000";

    /** <pre>TP_301_INFORMATION_KEY_30_KL000
      * [en] Free text with mention of other / further test objects
      * [de] Freitext bei Nennung anderer/weiterer Prüfgegenstände</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_KL000 = "Tp301.InformationKey30.KL000";

    /** <pre>TP_301_INFORMATION_KEY_30_KP000
      * [en] Coding test
      * [de] Kodierprüfung</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_KP000 = "Tp301.InformationKey30.KP000";

    /** <pre>TP_301_INFORMATION_KEY_30_MDI04
      * [de] Einwände gegen Grund oder Höhe des Aufschlages durch das Krankenhaus (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDI04 = "Tp301.InformationKey30.MDI04";

    /** <pre>TP_301_INFORMATION_KEY_30_MDI05
      * [de] Krankenkasse hat sich nicht innerhalb der Frist nach § 8 Satz 3 geäußert und das Verfahren gilt als beendet und die Krankenhausabrechnung als erörtert (INKA)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDI05 = "Tp301.InformationKey30.MDI05";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK01
      * [en] Performance decision has no complaint of settlement as a result (without decrease of settlement amount)
      * [de] Leistungsrechtliche Entscheidung hat keine Beanstandung der Abrechnung (ohne Minderung des Abrechnungsbetrages) als Ergebnis</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK01 = "Tp301.InformationKey30.MDK01";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK02
      * [en] Performance decision has complaint of billing as a result (with decrease of settlement amount)
      * [de] Leistungsrechtliche Entscheidung hat Beanstandung der Abrechnung (mit Minderung des Abrechnungsbetrages) als Ergebnis</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK02 = "Tp301.InformationKey30.MDK02";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK03
      * [en] Performance decision has due to record correction (§7 Abs. 5 PrüfvV) in the MD procedure no complaint of billing as a result (without decrease of settlement amount)
      * [de] Leistungsrechtliche Entscheidung hat aufgrund Datensatzkorrektur (§7 Abs. 5 PrüfvV) im MD-Verfahren, ohne MD Abbruch, keine Beanstandung (ohne Minderung des Abrechnungsbetrages) der Abrechnung als Ergebnis</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK03 = "Tp301.InformationKey30.MDK03";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK04
      * [en] Setting of additional charge corresponding § 275c Abs. 3 SGB V by health incurance
      * [de] Festlegung des Aufschlages gemäß § 275c Abs. 3 SGB V durch die Krankenkasse</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK04 = "Tp301.InformationKey30.MDK04";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK06
      * [de] Reaktion zu evtl. Einwänden des Krankenhauses (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK06 = "Tp301.InformationKey30.MDK06";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK07
      * [de] Mitteilung über einen unveränderten Aufschlagsbetrag (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK07 = "Tp301.InformationKey30.MDK07";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK08
      * [de] Mitteilung über einen veränderten Aufschlagsbetrag (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK08 = "Tp301.InformationKey30.MDK08";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK09
      * [de] Mitteilung des Aufschlages mit Grundlage der Berechnung (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK09 = "Tp301.InformationKey30.MDK09";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK10
      * [en] No or incomplete documentation to MD resulting in offsetting
      * [de] Keine oder nicht vollständige Unterlagen an MD mit Folge der Aufrechnung</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK10 = "Tp301.InformationKey30.MDK10";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK11
      * [de] Rücknahme des Aufschlages, keine weitere Geltendmachung (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK11 = "Tp301.InformationKey30.MDK11";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK12
      * [en] Information about MD break-off due to data correction with decrease of settlement amount by health insurance, test procedure finished
      * [de] Information durch die Krankenkasse über MD Abbruch wegen Datenkorrektur mit Minderung des Abrechnungsbetrages, Prüfverfahren beendet</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK12 = "Tp301.InformationKey30.MDK12";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK13
      * [en] Information about MD break-off due to data correction without decrease of settlement amount by health insurance, test procedure finished
      * [de] Information durch die Krankenkasse über MD Abbruch wegen Datenkorrektur ohne Minderung des Abrechnungsbetrages, Prüfverfahren beendet</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK13 = "Tp301.InformationKey30.MDK13";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK14
      * [de] Endgültige Anpassung eines bereits geltend gemachten Aufschlages (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK14 = "Tp301.InformationKey30.MDK14";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK20
      * [de] Datum der leistungsrechtlichen Entscheidung</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK20 = "Tp301.InformationKey30.MDK20";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK30
      * [de] Keine fristgemäße Übermittlung der Unterlagen. Die Krankenhausabrechnung gilt als erörtert gemäß § 7 Abs. 2 Satz 10 PrüfvV (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK30 = "Tp301.InformationKey30.MDK30";

    /** <pre>TP_301_INFORMATION_KEY_30_MDK31
      * [de] Diese vom MD konkret benannten angeforderten Unterlagen wurden nicht fristgemäß vorgelegt und können nicht im Erörterungsverfahren vorgelegt werden gemäß § 7 Abs. 2 Satz 11 PrüfvV (KAIN)</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_MDK31 = "Tp301.InformationKey30.MDK31";

    /** <pre>TP_301_INFORMATION_KEY_30_NVI01
      * [en] Proposal for a post-procedure, reasoned opinioncase.merging.do.saveAndOpen=Save case and open
      * [de] Vorschlag eines Nachverfahrens, begründete Stellungnahme</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_NVI01 = "Tp301.InformationKey30.NVI01";

    /** <pre>TP_301_INFORMATION_KEY_30_PF000
      * [en] primary bad allocation
      * [de] primäre Fehlbelegung</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_PF000 = "Tp301.InformationKey30.PF000";

    /** <pre>TP_301_INFORMATION_KEY_30_SF000
      * [en] secondary bad allocation
      * [de] sekundäre Fehlbelegung</pre>
      */
    public static final String TP_301_INFORMATION_KEY_30_SF000 = "Tp301.InformationKey30.SF000";

    /** <pre>TRANSFERRING
      * [en] Transferring
      * [de] Verlegung</pre>
      * Attention! this value ('Transferring') seems to be also defined under the key ADMISSION_CAUSE_TRANSFERRING! this value ('Transferring') seems to be also defined under the key ICD_TYPE_TRANSFERRING!
      */
    public static final String TRANSFERRING = "Transferring";

    /** <pre>TREAT
      * [en] Treat
      * [de] Behandeln</pre>
      */
    public static final String TREAT = "Treat";

    /** <pre>TREATING_DEPARTMENT
      * [de] KH interner Kurzname der beh. FAB (beh. FAB (intern))</pre>
      */
    public static final String TREATING_DEPARTMENT = "Treating.Department";

    /** <pre>TREATING_DEPARTMENT_301
      * [de] §301-Schlüssel der FAB (beh. FAB §301)</pre>
      */
    public static final String TREATING_DEPARTMENT_301 = "Treating.Department301";

    /** <pre>TREATING_DEPARTMENT_301_NAME
      * [de] §301-Name der FAB (beh. FAB)</pre>
      */
    public static final String TREATING_DEPARTMENT_301_NAME = "Treating.Department301.Name";

    /** <pre>TREATING_DEPARTMENT_SHORT
      * [en] Treating Department §. 301 (Treat. 301)
      * [de] Behandelnde FAB nach §. 301 (Behandl. 301)</pre>
      */
    public static final String TREATING_DEPARTMENT_SHORT = "Treating.Department.Short";

    /** <pre>TREATMENT
      * [en] Treatment
      * [de] Behandlung</pre>
      * Attention! this value ('Treatment') seems to be also defined under the key ACG_INDEX_TYPE_TRT! this value ('Treatment') seems to be also defined under the key ICD_TYPE_TREATMENT!
      */
    public static final String TREATMENT = "Treatment";

    /** <pre>TYPE_OF_SERVICE
      * [en] Type of Service
      * [de] Art der Leistung</pre>
      */
    public static final String TYPE_OF_SERVICE = "TypeOfService";

    /** <pre>UNBILLED_DAYS
      * [en] Unbilled Days (UBD)
      * [de] Tage ohne Berechnung (TOB)</pre>
      */
    public static final String UNBILLED_DAYS = "UnbilledDays";

    /** <pre>UNBILLED_DAYS_FROM
      * [en] UBD from
      * [de] TOB von</pre>
      */
    public static final String UNBILLED_DAYS_FROM = "UnbilledDays.from";

    /** <pre>UNBILLED_DAYS_TO
      * [en] UBD to
      * [de] TOB bis</pre>
      */
    public static final String UNBILLED_DAYS_TO = "UnbilledDays.to";

    /** <pre>UPDATED
      * [en] updated (last Modification)
      * [de] Zeitpunkt der letzten Bearbeitung (Aktualisiert)</pre>
      */
    public static final String UPDATED = "Updated";

    /** <pre>UPDATED_FROM
      * [en] last Modification from
      * [de] Aktualisiert von</pre>
      */
    public static final String UPDATED_FROM = "Updated.from";

    /** <pre>UPDATED_TO
      * [en] last Modification to
      * [de] Aktualisiert bis</pre>
      */
    public static final String UPDATED_TO = "Updated.to";

    /** <pre>USE_TEMPLATE
      * [en] Template Usage
      * [de] Vorlange benutzen</pre>
      */
    public static final String USE_TEMPLATE = "UseTemplate";

    /** <pre>USERS
      * [en] Users
      * [de] Benutzer</pre>
      */
    public static final String USERS = "Users";

    /** <pre>VALIDATION_CASE_ALREADY_SELECTED
      * [de] Leistung wurde schon dem Vorgang zugefügt</pre>
      */
    public static final String VALIDATION_CASE_ALREADY_SELECTED = "Validation.case.already.selected";

    /** <pre>VALIDATION_CASE_NUMBER_FOR_PATIENT_INVALID
      * [de] Leistungsnummer ist für den Patient nicht valide</pre>
      */
    public static final String VALIDATION_CASE_NUMBER_FOR_PATIENT_INVALID = "Validation.case.number.for.patient.invalid";

    /** <pre>VALIDATION_CATALOGDATA_NO_BEGE_EXISTS
      * [en] Catalog entry for this bege does not exists anymore!
      * [de] Die hinterlegte Berufsgenossenschaft wurde in der Zwischenzeit aus dem Katalog entfernt!</pre>
      */
    public static final String VALIDATION_CATALOGDATA_NO_BEGE_EXISTS = "Validation.catalogdata.noBegeExists";

    /** <pre>VALIDATION_CATALOGDATA_NO_BEGES_FOUND
      * [en] No Beges available in catalogdata!
      * [de] In den Katalogen wurden keine Berufsgenossenschaften hinterlegt!</pre>
      */
    public static final String VALIDATION_CATALOGDATA_NO_BEGES_FOUND = "Validation.catalogdata.noBegesFound";

    /** <pre>VALIDATION_CATALOGDATA_NO_HOSPITAL_EXISTS
      * [en] Catalog entry for this hospital does not exists anymore!
      * [de] Das hinterlegte Krankenhaus wurde in der Zwischenzeit aus dem Katalog entfernt!</pre>
      */
    public static final String VALIDATION_CATALOGDATA_NO_HOSPITAL_EXISTS = "Validation.catalogdata.noHospitalExists";

    /** <pre>VALIDATION_CATALOGDATA_NO_HOSPITALS_FOUND
      * [en] No Hospitals available in catalogdata!
      * [de] In den Katalogen wurden keine Krankenhäuser hinterlegt!</pre>
      */
    public static final String VALIDATION_CATALOGDATA_NO_HOSPITALS_FOUND = "Validation.catalogdata.noHospitalsFound";

    /** <pre>VALIDATION_CATALOGDATA_NO_INSURANCES_EXISTS
      * [en] Catalog entry for this Insurance does not exists anymore!
      * [de] Die hinterlegte Krankenkasse wurde in der Zwischenzeit aus dem Katalog entfernt!</pre>
      */
    public static final String VALIDATION_CATALOGDATA_NO_INSURANCES_EXISTS = "Validation.catalogdata.noInsurancesExists";

    /** <pre>VALIDATION_CATALOGDATA_NO_INSURANCES_FOUND
      * [en] No Insurances available in catalogdata!
      * [de] In den Katalogen wurden keine Krankenkassen hinterlegt!</pre>
      */
    public static final String VALIDATION_CATALOGDATA_NO_INSURANCES_FOUND = "Validation.catalogdata.noInsurancesFound";

    /** <pre>VALIDATION_CATALOGDATA_NO_MDK_EXISTS
      * [en] Catalog entry for this md does not exists anymore!
      * [de] Der hinterlegte medizinische Dienst wurde in der Zwischenzeit aus dem Katalog entfernt!</pre>
      */
    public static final String VALIDATION_CATALOGDATA_NO_MDK_EXISTS = "Validation.catalogdata.noMdkExists";

    /** <pre>VALIDATION_CATALOGDATA_NO_MDKS_FOUND
      * [en] No MDs available in catalogdata!
      * [de] In den Katalogen wurden keine medizinischen Dienste hinterlegt!</pre>
      */
    public static final String VALIDATION_CATALOGDATA_NO_MDKS_FOUND = "Validation.catalogdata.noMdksFound";

    /** <pre>VALIDATION_ERROR_CASE_ALREADY_EXISTS
      * [en] A case with casenumber {0} already exists!
      * [de] Ein Fall mit der Nummer {0} wurde bereits hinzugefügt!</pre>
      */
    public static final String VALIDATION_ERROR_CASE_ALREADY_EXISTS = "Validation.Error.caseAlreadyExists";

    /** <pre>VALIDATION_ERROR_ERROR_COUNT
      * [en] Count of Errors {0}:
      * [de] Anzahl der Fehler {0}:</pre>
      */
    public static final String VALIDATION_ERROR_ERROR_COUNT = "Validation.Error.errorCount";

    /** <pre>VALIDATION_ERROR_INVALID_BILL
      * [en] Invalid bill number!
      * [de] Rechnungsnummer ist nicht eingegeben!</pre>
      */
    public static final String VALIDATION_ERROR_INVALID_BILL = "Validation.Error.invalidBill";

    /** <pre>VALIDATION_ERROR_INVALID_DEPARTMENT
      * [en] Department name is not valid!
      * [de] Bezeichnung der Fachabteilung ist nicht korrekt!</pre>
      */
    public static final String VALIDATION_ERROR_INVALID_DEPARTMENT = "Validation.Error.invalidDepartment";

    /** <pre>VALIDATION_ERROR_INVALID_DEPARTMENT_INDEX
      * [en] Department name at index {0} is not valid!
      * [de] Bezeichnung der Fachabteilung an Position {0} ist nicht korrekt!</pre>
      */
    public static final String VALIDATION_ERROR_INVALID_DEPARTMENT_INDEX = "Validation.Error.invalidDepartmentIndex";

    /** <pre>VALIDATION_ERROR_INVALID_HOSPITAL_IDENT
      * [en] Hospitalidentifier is not valid!
      * [de] IKZ des Krankenhauses ist nicht korrekt!</pre>
      */
    public static final String VALIDATION_ERROR_INVALID_HOSPITAL_IDENT = "Validation.Error.invalidHospitalIdent";

    /** <pre>VALIDATION_ERROR_INVALID_INSURANCE_IDENT
      * [en] Insuranceidentifier is not valid!
      * [de] IKZ der Krankenkasse ist nicht korrekt!</pre>
      */
    public static final String VALIDATION_ERROR_INVALID_INSURANCE_IDENT = "Validation.Error.invalidInsuranceIdent";

    /** <pre>VALIDATION_ERROR_INVALID_MDK_NAME
      * [en] Mdk Name is not valid!
      * [de] MD-Name ist nicht korrekt!</pre>
      */
    public static final String VALIDATION_ERROR_INVALID_MDK_NAME = "ValidationError.Invalid.MdkName";

    /** <pre>VALIDATION_ERROR_NO_ADMISSION_DAY_CASE
      * [en] Enter a admission date for the case!
      * [de] Geben Sie ein Aufnahmedatum für den Fall ein!</pre>
      */
    public static final String VALIDATION_ERROR_NO_ADMISSION_DAY_CASE = "Validation.Error.noAdmissionDayCase";

    /** <pre>VALIDATION_ERROR_NO_ADMISSION_DAY_DEPARTMENT
      * [en] Enter a admission date for the department!
      * [de] Geben Sie ein Aufnahmedatum für die Fachabteilung ein!</pre>
      */
    public static final String VALIDATION_ERROR_NO_ADMISSION_DAY_DEPARTMENT = "Validation.Error.noAdmissionDayDepartment";

    /** <pre>VALIDATION_ERROR_NO_ALTER
      * [en] Please enter the patient's age!
      * [de] Geben Sie bitte das Alter des Patienten ein!</pre>
      */
    public static final String VALIDATION_ERROR_NO_ALTER = "Validation.Error.noAlter";

    /** <pre>VALIDATION_ERROR_NO_ALTER_BIRTHDATE
      * [en] Date of birth will be calculated automatically.
      * [de] Das Geburtsdatum wird automatisch berechnet.</pre>
      */
    public static final String VALIDATION_ERROR_NO_ALTER_BIRTHDATE = "Validation.Error.noAlter.Birthdate";

    /** <pre>VALIDATION_ERROR_NO_CASE_NUMBER
      * [en] Enter a valid Casenumber!
      * [de] Geben sie eine gültige Fallnummer ein!</pre>
      */
    public static final String VALIDATION_ERROR_NO_CASE_NUMBER = "Validation.Error.noCaseNumber";

    /** <pre>VALIDATION_ERROR_NO_DISCHARGE_DAY_CASE
      * [en] Enter a discharge date for the case!
      * [de] Geben Sie ein Entlassungsdatum für den Fall ein!</pre>
      */
    public static final String VALIDATION_ERROR_NO_DISCHARGE_DAY_CASE = "Validation.Error.noDischargeDayCase";

    /** <pre>VALIDATION_ERROR_NO_DISCHARGE_DAY_DEPARTMENT
      * [en] Enter a discharge date for the department!
      * [de] Geben Sie ein Entlassungsdatum für die Fachabteilung ein!</pre>
      */
    public static final String VALIDATION_ERROR_NO_DISCHARGE_DAY_DEPARTMENT = "Validation.Error.noDischargeDayDepartment";

    /** <pre>VALIDATION_ERROR_NO_DISCHARGE_DAY_DEPARTMENT_INDEX
      * [en] Enter a discharge date for the department at index {0} !
      * [de] Geben Sie ein Entlassungsdatum für die Fachabteilung an Position {0} an!</pre>
      */
    public static final String VALIDATION_ERROR_NO_DISCHARGE_DAY_DEPARTMENT_INDEX = "Validation.Error.noDischargeDayDepartmentIndex";

    /** <pre>VALIDATION_ERROR_NO_PATIENT_BIRTHDAY
      * [en] Enter patient birthday!
      * [de] Geben Sie den Geburtstag des Patienten ein!</pre>
      */
    public static final String VALIDATION_ERROR_NO_PATIENT_BIRTHDAY = "Validation.Error.noPatientBirthday";

    /** <pre>VALIDATION_ERROR_NO_PATIENT_LAST_NAME
      * [en] Enter patient lastname!
      * [de] Geben Sie den Nachnamen des Patienten ein!</pre>
      */
    public static final String VALIDATION_ERROR_NO_PATIENT_LAST_NAME = "Validation.Error.noPatientLastName";

    /** <pre>VALIDATION_ERROR_NO_PATIENT_NUMBER
      * [en] Enter a patient number!
      * [de] Geben Sie eine Patientennummer ein!</pre>
      */
    public static final String VALIDATION_ERROR_NO_PATIENT_NUMBER = "Validation.Error.noPatientNumber";

    /** <pre>VALIDATION_ERROR_OPS_DATE
      * [en] Some procedures do not have a execution date!
      * [de] Einige Prozeduren haben kein Ausführungsdatum!</pre>
      */
    public static final String VALIDATION_ERROR_OPS_DATE = "Validation.Error.OpsDate";

    /** <pre>VALIDATION_ERROR_OPS_DATE_INDEX
      * [en] Some procedures at index {0} do not have a execution date!
      * [de] Einige Prozeduren haben kein Ausführungsdatum an Position {0} !</pre>
      */
    public static final String VALIDATION_ERROR_OPS_DATE_INDEX = "Validation.Error.OpsDateIndex";

    /** <pre>VALIDATION_ERROR_TIME_FORMAT
      * [en] Wrong time format, use hh:mm!
      * [de] Falsches Zeitformat, benutzen Sie hh:mm!</pre>
      */
    public static final String VALIDATION_ERROR_TIME_FORMAT = "Validation.Error.timeFormat";

    /** <pre>VALIDATION_ERROR_WARNING_COUNT
      * [en] Count of Warnings {0}:
      * [de] Anzahl der Warnungen {0}:</pre>
      */
    public static final String VALIDATION_ERROR_WARNING_COUNT = "Validation.Error.warningCount";

    /** <pre>VALIDATION_MASTERDATA_NO_ACTION_TYPES_FOUND
      * [en] No Actiontypes available in masterdata!
      * [de] In den Stammdaten wurden keine Aktionstypen hinterlegt!</pre>
      */
    public static final String VALIDATION_MASTERDATA_NO_ACTION_TYPES_FOUND = "Validation.masterdata.noActionTypesFound";

    /** <pre>VALIDATION_MASTERDATA_NO_AUDIT_REASONS_FOUND
      * [en] No Auditreasons available in masterdata!
      * [de] In den Stammdaten wurden keine Prüfgründe hinterlegt!</pre>
      */
    public static final String VALIDATION_MASTERDATA_NO_AUDIT_REASONS_FOUND = "Validation.masterdata.noAuditReasonsFound";

    /** <pre>VALIDATION_MASTERDATA_NO_DOCUMENT_TYPES_FOUND
      * [en] No Documenttypes available in masterdata!
      * [de] In den Stammdaten wurden keine passenden Dokumententypen hinterlegt!</pre>
      */
    public static final String VALIDATION_MASTERDATA_NO_DOCUMENT_TYPES_FOUND = "Validation.masterdata.noDocumentTypesFound";

    /** <pre>VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_MAIN_CATEGORY_FOUND
      * [en] No Drafttypes for Maincategory available in catalogdata!
      * [de] In den Stammdaten wurden keine Vorlagetypen für die Hauptkategorie hinterlegt!</pre>
      */
    public static final String VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_MAIN_CATEGORY_FOUND = "Validation.masterdata.noDraftTypesForMainCategoryFound";

    /** <pre>VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_SUB_CATEGORY_1_FOUND
      * [en] No Drafttypes for 1. Subcategory available in catalogdata!
      * [de] In den Stammdaten wurden keine Vorlagetypen für die 1. Unterkategorie hinterlegt!</pre>
      */
    public static final String VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_SUB_CATEGORY_1_FOUND = "Validation.masterdata.noDraftTypesForSubCategory1Found";

    /** <pre>VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_SUB_CATEGORY_2_FOUND
      * [en] No Drafttypes for 2. Subcategory available in catalogdata!
      * [de] In den Stammdaten wurden keine Vorlagetypen für die 2. Unterkategorie hinterlegt!</pre>
      */
    public static final String VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_SUB_CATEGORY_2_FOUND = "Validation.masterdata.noDraftTypesForSubCategory2Found";

    /** <pre>VALIDATION_MASTERDATA_NO_REMINDER_TYPES_FOUND
      * [en] No Remindertypes available in masterdata!
      * [de] In den Stammdaten wurden keine Arten der Wiedervorlage hinterlegt!</pre>
      */
    public static final String VALIDATION_MASTERDATA_NO_REMINDER_TYPES_FOUND = "Validation.masterdata.noReminderTypesFound";

    /** <pre>VALIDATION_MASTERDATA_NO_REQUEST_STATUS_FOUND
      * [en] No Requeststatus available in masterdata!
      * [de] In den Stammdaten wurden keine Anfrage-Status hinterlegt!</pre>
      */
    public static final String VALIDATION_MASTERDATA_NO_REQUEST_STATUS_FOUND = "Validation.masterdata.noRequestStatusFound";

    /** <pre>VALIDATION_MASTERDATA_NO_USERS_FOUND
      * [en] No Users available in masterdata!
      * [de] In den Stammdaten wurden keine passenden Benutzer hinterlegt!</pre>
      */
    public static final String VALIDATION_MASTERDATA_NO_USERS_FOUND = "Validation.masterdata.noUsersFound";

    /** <pre>VALIDATION_SELECT_CASE_FROM_LIST
      * [de] Wählen Sie bitte eine Leistungsnummer aus der Liste</pre>
      */
    public static final String VALIDATION_SELECT_CASE_FROM_LIST = "Validation.select.case.from.list";

    /** <pre>VALIDATION_WARNING_COMBINATION_ALLREADY_EXISTS_IDENT_CS_NUMBER
      * [en] Combination of Hospitalidentifier and Casenumber allready exists!
      * [de] Diese Kombination von IKZ und Fallnummer existiert bereits! Es wird eine neue Fallversion angelegt.</pre>
      */
    public static final String VALIDATION_WARNING_COMBINATION_ALLREADY_EXISTS_IDENT_CS_NUMBER = "Validation.Warning.combinationAllreadyExistsIdentCsNumber";

    /** <pre>VALIDATION_WARNING_DISCHARGE_REASON_12_MATCH_NOT_34
      * [en] Discharge reason seems invalid
      * [de] Entlassungsgrund erscheint unplausibel</pre>
      */
    public static final String VALIDATION_WARNING_DISCHARGE_REASON_12_MATCH_NOT_34 = "Validation.Warning.dischargeReason12MatchNot34";

    /** <pre>VALIDATION_WARNING_DISCHARGE_REASON_34_MATCH_NOT_12
      * [en] Discharge reason 2 seems invalid
      * [de] Entlassungsgrund2 erscheint unplausibel</pre>
      */
    public static final String VALIDATION_WARNING_DISCHARGE_REASON_34_MATCH_NOT_12 = "Validation.Warning.dischargeReason34MatchNot12";

    /** <pre>VALIDATION_WARNING_NO_ORIGIN_HOSPITAL
      * [en] Admission cause is set as Transfering. There should be an origin hospital!
      * [de] Hinweis: Aufnahmegrund ist eine Verlegung. Es sollte ein einweisendes Krankenhaus angegeben werden!</pre>
      */
    public static final String VALIDATION_WARNING_NO_ORIGIN_HOSPITAL = "Validation.Warning.noOriginHospital";

    /** <pre>VALIDATION_WARNING_OPS_DATE
      * [en] The date of the procedure is outside the stay in the department!
      * [de] Das Datum der Prozedur ist außerhalb der Aufenthaltsdauer in der Abteilung!</pre>
      */
    public static final String VALIDATION_WARNING_OPS_DATE = "Validation.warning.OpsDate";

    /** <pre>VALIDATION_WARNING_PSEUDO_DEPARTMENT
      * [en] Pseudo-Department should not have one or more Diagnosis!
      * [de] Pseudo-Fachabteilungen sollten nicht eine oder mehrere Diagnosen haben!</pre>
      */
    public static final String VALIDATION_WARNING_PSEUDO_DEPARTMENT = "Validation.Warning.PseudoDepartment";

    /** <pre>VERSION
      * [en] Version
      * [de] Version</pre>
      */
    public static final String VERSION = "Version";

    /** <pre>VERSION_ADD_CONFIRM
      * [en] Do you want to create new version of this case?
      * [de] Wollen Sie eine neue Version von diesem Fall anlegen?</pre>
      */
    public static final String VERSION_ADD_CONFIRM = "Version.add.Confirm";

    /** <pre>VERSION_NUMBER
      * [en] Versionsnumber (Version)
      * [de] Versionsnummer (Version)</pre>
      */
    public static final String VERSION_NUMBER = "VersionNumber";

    /** <pre>VERSION_NUMBER_FROM
      * [en] Versionsnumber to
      * [de] Versionsnummer von</pre>
      */
    public static final String VERSION_NUMBER_FROM = "VersionNumber.from";

    /** <pre>VERSION_NUMBER_TO
      * [en] Versionsnumber from
      * [de] Versionsnummer bis</pre>
      */
    public static final String VERSION_NUMBER_TO = "VersionNumber.to";

    /** <pre>VERSION_PARENT_ADD_CASE
      * [en] Version created with manual case input
      * [de] Version angelegt bei manueller Falleingabe</pre>
      */
    public static final String VERSION_PARENT_ADD_CASE = "Version.parent.AddCase";

    /** <pre>VERSION_RISK_TYPE_AUDIT_CASE_DIALOG
      * [en] Audit Case Dialog
      * [de] Anfrage Falldialog</pre>
      */
    public static final String VERSION_RISK_TYPE_AUDIT_CASE_DIALOG = "Version.Risk.Type.AuditCaseDialog";

    /** <pre>VERSION_RISK_TYPE_AUDIT_MD
      * [en] Audit MD
      * [de] Anfrage MD</pre>
      */
    public static final String VERSION_RISK_TYPE_AUDIT_MD = "Version.Risk.Type.Audit.MD";

    /** <pre>VERSION_RISK_TYPE_BEFORE_BILLING
      * [en] By Billing
      * [de] Bei Abrechnung</pre>
      */
    public static final String VERSION_RISK_TYPE_BEFORE_BILLING = "Version.Risk.Type.BeforeBilling";

    /** <pre>VERSION_RISK_TYPE_CASE_FINALISATION
      * [en] Case Finalisation
      * [de] Vorgangsabschluss</pre>
      */
    public static final String VERSION_RISK_TYPE_CASE_FINALISATION = "Version.Risk.Type.CaseFinalisation";

    /** <pre>VERSION_RISK_TYPE_NOT_SET
      * [en] not set
      * [de] Keine Zuordnung</pre>
      * Attention! this value ('not set') seems to be also defined under the key REMINDER_DUEDATE_IS_BLANK!
      */
    public static final String VERSION_RISK_TYPE_NOT_SET = "Version.Risk.Type.not.set";

    /** <pre>VERSIONCONTROLL_COMMENT
      * [en] Comment
      * [de] Kommentar</pre>
      * Attention! this value ('Comment') seems to be also defined under the key COMMENT!
      */
    public static final String VERSIONCONTROLL_COMMENT = "Versioncontroll.comment";

    /** <pre>VERSIONCONTROLL_CREATE_NEW_VERSION
      * [en] create Version
      * [de] Version anlegen</pre>
      */
    public static final String VERSIONCONTROLL_CREATE_NEW_VERSION = "Versioncontroll.createNewVersion";

    /** <pre>VERSIONCONTROLL_DETAILS
      * [en] Versiondetails
      * [de] Versionseinzelheiten</pre>
      */
    public static final String VERSIONCONTROLL_DETAILS = "Versioncontroll.details";

    /** <pre>VERSIONCONTROLL_ERROR
      * [en] Can not delete.
      * [de] Löschen nicht möglich.</pre>
      */
    public static final String VERSIONCONTROLL_ERROR = "Versioncontroll.error";

    /** <pre>VERSIONCONTROLL_HINT_ENTER_COMMENT
      * [en] Please enter a Comment!
      * [de] Bitte Kommentar angeben!</pre>
      */
    public static final String VERSIONCONTROLL_HINT_ENTER_COMMENT = "Versioncontroll.hint.enterComment";

    /** <pre>VERSIONCONTROLL_HINT_ONE_MUST_REMAIN
      * [en] At least 1 CP-Version must remain.
      * [de] Mind. 1 CP-Version muss existieren.</pre>
      */
    public static final String VERSIONCONTROLL_HINT_ONE_MUST_REMAIN = "Versioncontroll.hint.oneMustRemain";

    /** <pre>VERSIONCONTROLL_HINT_PARENT_VERSION
      * [en] Parentversion of:
      * [de] Elternversion von:</pre>
      */
    public static final String VERSIONCONTROLL_HINT_PARENT_VERSION = "Versioncontroll.hint.parentVersion";

    /** <pre>VERSIONCONTROLL_HINT_SELECT_VERSION
      * [en] Please select a Version!
      * [de] Bitte Version auswählen!</pre>
      */
    public static final String VERSIONCONTROLL_HINT_SELECT_VERSION = "Versioncontroll.hint.selectVersion";

    /** <pre>VERSIONCONTROLL_TITLE
      * [en] Versionmanagement
      * [de] Versionsverwaltung</pre>
      */
    public static final String VERSIONCONTROLL_TITLE = "Versioncontroll.title";

    /** <pre>VERSIONCONTROLL_VERSION_COMMENT
      * [en] Versioncomment
      * [de] Versionskommentar</pre>
      */
    public static final String VERSIONCONTROLL_VERSION_COMMENT = "Versioncontroll.versionComment";

    /** <pre>WARD
      * [en] Ward
      * [de] Station</pre>
      */
    public static final String WARD = "Ward";

    /** <pre>WARD_GROUPING
      * [en] Ward Grouping
      * [de] Stations Grouping</pre>
      */
    public static final String WARD_GROUPING = "WardGrouping";

    /** <pre>WARNING
      * [en] Warning (W)
      * [de] Warnung (W)</pre>
      */
    public static final String WARNING = "Warning";

    /** <pre>WEBAPP_OPEN_BTN
      * [de] Konfiguration des checkpoint x (Web App )</pre>
      */
    public static final String WEBAPP_OPEN_BTN = "Webapp.open.btn";

    /** <pre>WEBAPP_OPEN_BTN_TOOLTIP
      * [de] Konfiguration der Stammdaten, Benutzerverwaltung, Listenverwaltung, etc.</pre>
      */
    public static final String WEBAPP_OPEN_BTN_TOOLTIP = "Webapp.open.btn.tooltip";

    /** <pre>WEBAPP_OPEN_MANAGEMENT
      * [de] Administration des checkpoint x Servers (Wildfly)</pre>
      */
    public static final String WEBAPP_OPEN_MANAGEMENT = "Webapp.open.Management";

    /** <pre>WEBAPP_OPEN_MANAGEMENT_TOOLTIP
      * [de] Administration des checkpoint x Servers (Wildfly) - nur für Administratoren</pre>
      */
    public static final String WEBAPP_OPEN_MANAGEMENT_TOOLTIP = "Webapp.open.Management.tooltip";

    /** <pre>WEIGHT
      * [en] Weight
      * [de] Gewicht</pre>
      */
    public static final String WEIGHT = "Weight";

    /** <pre>WIEDERVORLAGE_COMMENT_DIALOG
      * [en] Note
      * [de] Hinweis</pre>
      * Attention! this value ('Note') seems to be also defined under the key REPORT_DIALOG_HEADER_TEXT!
      */
    public static final String WIEDERVORLAGE_COMMENT_DIALOG = "Wiedervorlage.comment.dialog";

    /** <pre>WIEDERVORLAGE_COMMENT_INFO
      * [en] The maximum number of characters allowed has been exceeded. 255 Chars is allowed
      * [de] Die maximal zulässige Zeichenanzahl wurde überschritten. 255 Zeichnen sind erlaubt</pre>
      */
    public static final String WIEDERVORLAGE_COMMENT_INFO = "Wiedervorlage.comment.info";

    /** <pre>WM_REQUESTCREATION_TITLE
      * [en] Create new request
      * [de] Neue Anfrage erstellen</pre>
      */
    public static final String WM_REQUESTCREATION_TITLE = "Wm.Requestcreation.title";

    /** <pre>WM_REQUESTTYPE
      * [en] Requesttype
      * [de] Anfragetyp</pre>
      */
    public static final String WM_REQUESTTYPE = "Wm.Requesttype";

    /** <pre>WM_SERVICE_CREATION_TITLE
      * [en] Create new service (Created services)
      * [de] Neue Leistung erstellen (Leistung erstellen)</pre>
      */
    public static final String WM_SERVICE_CREATION_TITLE = "Wm.Service.creation.title";

    /** <pre>WORD_TEMPLATES
      * [en] MS-Word Templates
      * [de] MS-Word Templates</pre>
      */
    public static final String WORD_TEMPLATES = "Word.templates";

    /** <pre>WORKFLOW_CLOSE_AND_CREATE_REMINDER
      * [en] Reminders - close all and create a new one
      * [de] Alle in der Liste angezeigten Wiedervorlagen abschließen und neu anlegen</pre>
      */
    public static final String WORKFLOW_CLOSE_AND_CREATE_REMINDER = "Workflow.closeAndCreateReminder";

    /** <pre>WORKFLOW_CLOSE_AND_CREATE_REMINDER_CLOSE_REMINDER_SUCCESSFULLY
      * [en] {0}  reminders of art {1} 'were set as closed.
      * [de] {0}  Wiedervorlagen von Art ''''{1}'''' wurden als abgearbeitet gesetzt.</pre>
      */
    public static final String WORKFLOW_CLOSE_AND_CREATE_REMINDER_CLOSE_REMINDER_SUCCESSFULLY = "Workflow.closeAndCreateReminder.closeReminder.successfully";

    /** <pre>WORKFLOW_CLOSE_AND_CREATE_REMINDER_CONFIRMATION
      * [de] Alle in der Liste angezeigten Wiedervorlagen werden abgeschlossen.Wollen Sie für diese Vorgänge eine neue Wiedervorlage generieren?</pre>
      */
    public static final String WORKFLOW_CLOSE_AND_CREATE_REMINDER_CONFIRMATION = "Workflow.closeAndCreateReminder.confirmation";

    /** <pre>WORKFLOW_CLOSE_AND_CREATE_REMINDER_CREATE_REMINDER_SUCCESSFULLY
      * [en] {0} new reminders of art {1} 'were created.
      * [de] {0} neue Wiedervorlagen von Art ''''{1}'''' wurden angelegt.</pre>
      */
    public static final String WORKFLOW_CLOSE_AND_CREATE_REMINDER_CREATE_REMINDER_SUCCESSFULLY = "Workflow.closeAndCreateReminder.createReminder.successfully";

    /** <pre>WORKFLOW_CLOSE_AND_CREATE_REMINDER_NO_FILTER
      * [en] This function can only be used if the 'Reminder type' filter is set.
      * [de] Diese Funktion kann nur genutzt werden, wenn der Filter 'Art der Wiedervorlage' gesetzt ist.</pre>
      */
    public static final String WORKFLOW_CLOSE_AND_CREATE_REMINDER_NO_FILTER = "Workflow.closeAndCreateReminder.noFilter";

    /** <pre>WORKFLOW_CLOSE_AND_CREATE_REMINDER_NOT_UNIQUE
      * [en] This function can only be used if the filter 'type of resubmission' is set uniquely (once).
      * [de] Diese Funktion kann nur genutzt werden, wenn der Filter 'Art der Wiedervorlage' eindeutig, mit nur einer Auswahl, gesetzt ist.</pre>
      */
    public static final String WORKFLOW_CLOSE_AND_CREATE_REMINDER_NOT_UNIQUE = "Workflow.closeAndCreateReminder.notUnique";

    /** <pre>WORKFLOW_CONTEXT_MENU_CANCEL
      * [de] Vorgang stornieren</pre>
      */
    public static final String WORKFLOW_CONTEXT_MENU_CANCEL = "Workflow.ContextMenu.cancel";

    /** <pre>WORKFLOW_CONTEXT_MENU_UNCANCEL
      * [de] Stornierung aufheben</pre>
      * Attention! this value ('Stornierung aufheben') seems to be also defined under the key WORKING_LIST_CONTEXT_MENU_UNCANCEL!
      */
    public static final String WORKFLOW_CONTEXT_MENU_UNCANCEL = "Workflow.ContextMenu.uncancel";

    /** <pre>WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_CONFIRM
      * [en] Do you really want to cancel the workflow number {0}?
      * [de] Möchten Sie die Vorgangsnummer {0} wirklich stornieren?</pre>
      */
    public static final String WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_CONFIRM = "Workflow.ContextMenu.WorkflowCancel.Confirm";

    /** <pre>WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_ERROR
      * [en] workflow {0} could not be canceled.
      * [de] Vorgangsnummer {0} konnte nicht storniert werden</pre>
      */
    public static final String WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_ERROR = "Workflow.ContextMenu.WorkflowCancel.Error";

    /** <pre>WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_SUCCESS
      * [en] workflow  {0} successfully canceled
      * [de] Vorgangsnummer {0} erfolgreich storniert</pre>
      */
    public static final String WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_SUCCESS = "Workflow.ContextMenu.WorkflowCancel.Success";

    /** <pre>WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_CONFIRM
      * [en] Are you sure you want to cancel the cancellation for workflow number {0}?
      * [de] Möchten Sie die Stornierung für die Vorgangsnummer {0} wirklich aufheben?</pre>
      */
    public static final String WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_CONFIRM = "Workflow.ContextMenu.WorkflowUnCancel.Confirm";

    /** <pre>WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_ERROR
      * [en] The cancellation for workflow number {0} could not be canceled
      * [de] Die Stornierung für Vorgangsnummer {0} konnte nicht aufgehoben werden</pre>
      */
    public static final String WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_ERROR = "Workflow.ContextMenu.WorkflowUnCancel.Error";

    /** <pre>WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_SUCCESS
      * [en] The cancellation for the workflow number {0} is successfully canceled
      * [de] Die Stornierung für die  Vorgangsnummer {0} ist erfolgreich  aufgehoben</pre>
      */
    public static final String WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_SUCCESS = "Workflow.ContextMenu.WorkflowUnCancel.Success";

    /** <pre>WORKFLOW_DEADLINE_6_WEEKS_DEADLINE
      * [en] Deadline initiation bill audit
      * [de] Frist Einleitung Rechnungsprüfung</pre>
      */
    public static final String WORKFLOW_DEADLINE_6_WEEKS_DEADLINE = "Workflow.Deadline.6WeeksDeadline";

    /** <pre>WORKFLOW_DEADLINE_6_WEEKS_DEADLINE_COMMENT
      * [en] If the 6-week period is exceeded, then a note should appear when creating a new operation.
      * [de] Wenn die 6-Wochen-Frist überschritten wird, dann soll beim Anlegen einem neuen Vorgang ein Hinweis erscheinen.</pre>
      */
    public static final String WORKFLOW_DEADLINE_6_WEEKS_DEADLINE_COMMENT = "Workflow.Deadline.6WeeksDeadlineComment";

    /** <pre>WORKFLOW_DEADLINE_ANSWER_DEADLINE
      * [en] Deadline to give a reply or answer
      * [de] Frist Antwort</pre>
      */
    public static final String WORKFLOW_DEADLINE_ANSWER_DEADLINE = "Workflow.Deadline.answerDeadline";

    /** <pre>WORKFLOW_DEADLINE_ANSWER_DEADLINE_COMMENT
      * [en] Deadline to give a reply in Preliminary Proceedings Request type.
      * [de] Frist für eine Antwort in der Prüfanfrage Typ.</pre>
      */
    public static final String WORKFLOW_DEADLINE_ANSWER_DEADLINE_COMMENT = "Workflow.Deadline.answerDeadlineComment";

    /** <pre>WORKFLOW_DEADLINE_BILL_CORRECTION_DEADLINE
      * [en] Deadline for bill correction
      * [de] Frist für einmalige Rechnungskorrektur</pre>
      */
    public static final String WORKFLOW_DEADLINE_BILL_CORRECTION_DEADLINE = "Workflow.Deadline.billCorrectionDeadline";

    /** <pre>WORKFLOW_DEADLINE_BILL_CORRECTION_DEADLINE_COMMENT
      * [en] Deadline by which a bill of exchange correction from the hospital to which the health insurance can be sent
      * [de] Frist, bis zu der eine Rechnungskorrektur vom Krankenhaus an das Krankenkasse gesendet werden kann</pre>
      */
    public static final String WORKFLOW_DEADLINE_BILL_CORRECTION_DEADLINE_COMMENT = "Workflow.Deadline.billCorrectionDeadlineComment";

    /** <pre>WORKFLOW_DEADLINE_CASE_DIALOG_BILL_CORRECTION_DEADLINE
      * [en] Deadline Case dialog Billing correction
      * [de] Frist Falldialog Rechnungskorrektur</pre>
      */
    public static final String WORKFLOW_DEADLINE_CASE_DIALOG_BILL_CORRECTION_DEADLINE = "Workflow.Deadline.CaseDialogBillCorrectionDeadline";

    /** <pre>WORKFLOW_DEADLINE_CASE_DIALOG_BILL_CORRECTION_DEADLINE_COMMENT
      * [en] If an agreement is reached in the case dialog, the test procedure ends. Any necessary correction of the invoice should be completed within 4 weeks
      * [de] Wird in dem Falldialog eine Einigung erzielt, endet das Prüfverfahren. Eine gegebenenfalls notwendige Korrektur der Rechnung soll innerhalb von 4 Wochen erf</pre>
      */
    public static final String WORKFLOW_DEADLINE_CASE_DIALOG_BILL_CORRECTION_DEADLINE_COMMENT = "Workflow.Deadline.CaseDialogBillCorrectionDeadlineComment";

    /** <pre>WORKFLOW_DEADLINE_CONTINUATION_FEE_DEADLINE
      * [en] Deadline continuation fee
      * [de] Frist Fortsetzungspauschale</pre>
      */
    public static final String WORKFLOW_DEADLINE_CONTINUATION_FEE_DEADLINE = "Workflow.Deadline.continuationFeeDeadline";

    /** <pre>WORKFLOW_DEADLINE_CONTINUATION_FEE_DEADLINE_COMMENT
      * [en] Extension of the deadline, after payment of the continuation fee, up to which the requested documents must be submitted to the MD
      * [de] Verlängerung der Frist, nach Zahlung der Fortsetzungspauschale, bis zu der die angeforderten Unterlagen beim MD eingereicht sein müssen</pre>
      */
    public static final String WORKFLOW_DEADLINE_CONTINUATION_FEE_DEADLINE_COMMENT = "Workflow.Deadline.continuationFeeDeadlineComment";

    /** <pre>WORKFLOW_DEADLINE_DATA_RECORD_CORRECTION_DEADLINE
      * [en] Deadline for dataRecord Correction
      * [de] Frist Datensatzkorrektur</pre>
      */
    public static final String WORKFLOW_DEADLINE_DATA_RECORD_CORRECTION_DEADLINE = "Workflow.Deadline.dataRecordCorrectionDeadline";

    /** <pre>WORKFLOW_DEADLINE_DATA_RECORD_CORRECTION_DEADLINE_COMMENT
      * [en] Deadline to correct given data record.
      * [de] Frist zur Korrektur des Datensatzes.</pre>
      */
    public static final String WORKFLOW_DEADLINE_DATA_RECORD_CORRECTION_DEADLINE_COMMENT = "Workflow.Deadline.dataRecordCorrectionDeadlineComment";

    /** <pre>WORKFLOW_DEADLINE_MDK_AUDIT_COMPLETION_DEADLINE
      * [en] Deadline for completion of the MD audit
      * [de] Frist bis zum Abschluss der MD-Prüfung</pre>
      */
    public static final String WORKFLOW_DEADLINE_MDK_AUDIT_COMPLETION_DEADLINE = "Workflow.Deadline.mdkAuditCompletionDeadline";

    /** <pre>WORKFLOW_DEADLINE_MDK_AUDIT_COMPLETION_DEADLINE_COMMENT
      * [en] Deadline, up to the examination and evaluation by the MD must be completed
      * [de] Frist, bis zu der die Überprüfung und Bewertung durch den MD abgeschlossen sein muss</pre>
      */
    public static final String WORKFLOW_DEADLINE_MDK_AUDIT_COMPLETION_DEADLINE_COMMENT = "Workflow.Deadline.mdkAuditCompletionDeadlineComment";

    /** <pre>WORKFLOW_DEADLINE_MDK_DOCUMENT_DELIVER_DEADLINE
      * [en] Deadline for submitting documents
      * [de] Abgabefrist Unterlagen</pre>
      */
    public static final String WORKFLOW_DEADLINE_MDK_DOCUMENT_DELIVER_DEADLINE = "Workflow.Deadline.mdkDocumentDeliverDeadline";

    /** <pre>WORKFLOW_DEADLINE_MDK_DOCUMENT_DELIVER_DEADLINE_COMMENT
      * [en] The deadline for submitting the documents requested by the MD to the MD
      * [de] Frist, bis zu der die vom MD angeforderten Unterlagen an den MD geliefert werden müssen</pre>
      */
    public static final String WORKFLOW_DEADLINE_MDK_DOCUMENT_DELIVER_DEADLINE_COMMENT = "Workflow.Deadline.mdkDocumentDeliverDeadlineComment";

    /** <pre>WORKFLOW_DEADLINE_PRELIMINARY_PROCEEDINGS_CLOSED_DEADLINE
      * [en] Deadline pre-trial
      * [de] Frist Vorverfahren-Abschluss</pre>
      */
    public static final String WORKFLOW_DEADLINE_PRELIMINARY_PROCEEDINGS_CLOSED_DEADLINE = "Workflow.Deadline.preliminaryProceedingsClosedDeadline";

    /** <pre>WORKFLOW_DEADLINE_PRELIMINARY_PROCEEDINGS_CLOSED_DEADLINE_COMMENT
      * [en] Deadline for completion of the pre-litigation procedure
      * [de] Frist, bis zu dem das Vorverfahren abgeschlosssen sein muss</pre>
      */
    public static final String WORKFLOW_DEADLINE_PRELIMINARY_PROCEEDINGS_CLOSED_DEADLINE_COMMENT = "Workflow.Deadline.preliminaryProceedingsClosedDeadlineComment";

    /** <pre>WORKFLOW_DEADLINE_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE
      * [en] ProposalSubsequentProceedingsDeadline
      * [de] Frist Vorschlag Nachverfahren</pre>
      */
    public static final String WORKFLOW_DEADLINE_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE = "Workflow.Deadline.proposalSubsequentProceedingsDeadline";

    /** <pre>WORKFLOW_DEADLINE_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE_COMMENT
      * [en] Extract from § 9 PruefVV 2016: "1 Within 6 weeks after receipt of the notifications according to §8 sentence 1 and 2, the hospital may propose a follow-up procedure based on the data and documents submitted to the end of the MD assessment to the health insurance by: a reasoned opinion on the performance-related decision of the health insurance is made in accordance with §8 sentence 1. 2 The implementation of the supplementary procedure is voluntary."
      * [de] Auszug aus § 9 der PruefVV 2016: "1 Das Krankenhaus kann innerhalb von 6 Wochen nach Zugang der Mitteilungen nach §8 Satz 1 und 2 ein Nachverfahren auf Basis der bis zum Ende der MD-Begutachtung übermittelten Daten und Unterlagen gegenüber der Krankenkasse vorschlagen, indem eine begründete Stellungnahme zur leistungsrechtlichen Entscheidung der Krankenkasse nach §8 Satz 1 abgegeben wird. 2 Die Durchführung des Nachverfahrens ist freiwillig."</pre>
      */
    public static final String WORKFLOW_DEADLINE_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE_COMMENT = "Workflow.Deadline.proposalSubsequentProceedingsDeadlineComment";

    /** <pre>WORKFLOW_DEADLINE_REVIEW_COMPLETION
      * [de] Abschlußfrist für Erörterungsverfahren</pre>
      */
    public static final String WORKFLOW_DEADLINE_REVIEW_COMPLETION = "Workflow.Deadline.Review.Completion";

    /** <pre>WORKFLOW_DEADLINE_REVIEW_COMPLETION_COMMENT
      * [de] Das  EV  ist,  vorbehaltlich  der  einvernehmlichen  Verlängerung  dieses  Zeitraumes  durch  Krankenhaus und Krankenkasse, binnen 12 Wochen nach Mitteilung der Krankenkasse gemäß  Absatz  4  abzuschließen</pre>
      */
    public static final String WORKFLOW_DEADLINE_REVIEW_COMPLETION_COMMENT = "Workflow.Deadline.Review.Completion.Comment";

    /** <pre>WORKFLOW_DEADLINE_REVIEW_DOCUMENTS_SEND_ON
      * [de] Nachsendefrist für Dokumente für Erörterungsverfahren</pre>
      */
    public static final String WORKFLOW_DEADLINE_REVIEW_DOCUMENTS_SEND_ON = "Workflow.Deadline.Review.Documents.Send.On";

    /** <pre>WORKFLOW_DEADLINE_REVIEW_DOCUMENTS_SEND_ON_COMMENT
      * [de] Grundlage  des  EV  sind  sämtliche  erforderliche  Daten  des  streitbefangenen  Falles,  einschließlich  aller  der  vom  MD  beim  Krankenhaus  erhobenen  Daten,  sowie  die  im  Rahmen  des  EV  übermittelten  Unterlagen  und  vorgetragenen  Argumentationen/Einwendungen.  Die Parteien des Erörterungsverfahrens stellen sicher, dass für die Durchführung des Erörterungsverfahrens  erforderliche  Unterlagen  spätestens  4  Wochen  nach  der  Mitteilung   gemäß Absatz 3 Satz 1 der anderen Partei vorliegen.</pre>
      */
    public static final String WORKFLOW_DEADLINE_REVIEW_DOCUMENTS_SEND_ON_COMMENT = "Workflow.Deadline.Review.Documents.Send.On.Comment";

    /** <pre>WORKFLOW_DEADLINE_REVIEW_INSURANCE_ANSWER
      * [de] Antwortfrist der Krankenkasse für Erörterungsverfahren</pre>
      */
    public static final String WORKFLOW_DEADLINE_REVIEW_INSURANCE_ANSWER = "Workflow.Deadline.Review.Insurance.Answer";

    /** <pre>WORKFLOW_DEADLINE_REVIEW_INSURANCE_ANSWER_COMMENT
      * [de] Schließt sich die Krankenkasse der vom Krankenhaus vorgetragenen Begründung an, teilt sie dies dem Krankenhaus binnen 6 Wochen nach Zugang des Bestreitens nach Absatz 1 mit.</pre>
      */
    public static final String WORKFLOW_DEADLINE_REVIEW_INSURANCE_ANSWER_COMMENT = "Workflow.Deadline.Review.Insurance.Answer.Comment";

    /** <pre>WORKFLOW_DEADLINE_REVIEW_START
      * [de] Frist Einleitung Erörterungsverfahren nach MD-Rüfung</pre>
      */
    public static final String WORKFLOW_DEADLINE_REVIEW_START = "Workflow.Deadline.Review.Start";

    /** <pre>WORKFLOW_DEADLINE_REVIEW_START_COMMENT
      * [de] Ist das Krankenhaus mit der Entscheidung der Krankenkasse nach § 8 nicht einverstanden, hat es diese binnen 6 Wochen nach Zugang der Entscheidung gegenüber der Krankenkasse zu bestreiten.</pre>
      */
    public static final String WORKFLOW_DEADLINE_REVIEW_START_COMMENT = "Workflow.Deadline.Review.Start.Comment";

    /** <pre>WORKFLOW_DOES_NOT_EXIST_WITH_REASON
      * [de] Die Vorgang mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.</pre>
      */
    public static final String WORKFLOW_DOES_NOT_EXIST_WITH_REASON = "WorkflowDoesNotExistWithReason";

    /** <pre>WORKFLOW_LIST
      * [en] Workflow List
      * [de] Vorgangsliste</pre>
      */
    public static final String WORKFLOW_LIST = "WorkflowList";

    /** <pre>WORKFLOW_MDK_AUDIT_COMPLETION_DEADLINE
      * [de] Frist bis zum Abschluss des Vorverfahrens (Frist Vv Abschluss)</pre>
      */
    public static final String WORKFLOW_MDK_AUDIT_COMPLETION_DEADLINE = "Workflow.mdk.audit.completion.deadline";

    /** <pre>WORKFLOW_NUMBER
      * [en] Process No.
      * [de] Vorgangsnummer (Vorgangsnr.)</pre>
      * Attention! this value ('Process No.') seems to be also defined under the key PROCESS_NUMBER!
      */
    public static final String WORKFLOW_NUMBER = "WorkflowNumber";

    /** <pre>WORKFLOW_STATE
      * [en] State
      * [de] Status des Vorgangs (Vorgangsstatus)</pre>
      */
    public static final String WORKFLOW_STATE = "WorkflowState";

    /** <pre>WORKFLOW_STATE_ARCHIVED
      * [en] archived
      * [de] archiviert</pre>
      */
    public static final String WORKFLOW_STATE_ARCHIVED = "WorkflowState.Archived";

    /** <pre>WORKFLOW_STATE_CLOSED
      * [en] closed
      * [de] geschlossen</pre>
      * Attention! this value ('Closed') seems to be also defined under the key CASE_STATUS_CLOSED! this value ('closed') seems to be also defined under the key PROCESS_STATUS_REMINDER_CLOSED!
      */
    public static final String WORKFLOW_STATE_CLOSED = "WorkflowState.Closed";

    /** <pre>WORKFLOW_STATE_DONE
      * [en] done
      * [de] erledigt</pre>
      */
    public static final String WORKFLOW_STATE_DONE = "WorkflowState.Done";

    /** <pre>WORKFLOW_STATE_OPEN
      * [en] open
      * [de] offen</pre>
      * Attention! this value ('Open') seems to be also defined under the key EVENT_OPERATION_OPEN! this value ('open') seems to be also defined under the key PROCESS_STATUS_REMINDER_OPEN! this value ('open') seems to be also defined under the key REMINDER_UNFINISHED_STATUS!
      */
    public static final String WORKFLOW_STATE_OPEN = "WorkflowState.Open";

    /** <pre>WORKFLOW_STATE_PAUSED
      * [en] paused
      * [de] pausiert</pre>
      */
    public static final String WORKFLOW_STATE_PAUSED = "WorkflowState.Paused";

    /** <pre>WORKFLOW_SUBJECT
      * [en] Subject
      * [de] Betreff des Vorgangs (Betreff)</pre>
      */
    public static final String WORKFLOW_SUBJECT = "WorkflowSubject";

    /** <pre>WORKFLOW_TYPE
      * [en] Type
      * [de] Typ des Vorgangs (Typ)</pre>
      * Attention! this value ('Type') seems to be also defined under the key CASE_RESOLVE_RULES_TYPE!
      */
    public static final String WORKFLOW_TYPE = "WorkflowType";

    /** <pre>WORKFLOW_TYPE_NO_CASE
      * [en] Not case-related process
      * [de] Nicht fallbezogener Vorgang</pre>
      */
    public static final String WORKFLOW_TYPE_NO_CASE = "WorkflowType.NoCase";

    /** <pre>WORKFLOW_TYPE_STATIONARY
      * [en] Inpatient hospital case
      * [de] Stationärer Krankenhausfall</pre>
      */
    public static final String WORKFLOW_TYPE_STATIONARY = "WorkflowType.Stationary";

    /** <pre>WORKFLOW_WARNING_NO_CASE
      * [en] For the workflow number {0} is no hospital case found.Probably it was deleted.
      * [de] Dem Vorgang {0} ist kein Krankenhausfall zugeordnet.Möglicherweise wurde dieser gelöscht.</pre>
      */
    public static final String WORKFLOW_WARNING_NO_CASE = "Workflow.warning.no.case";

    /** <pre>WORKING_LIST
      * [en] Working List
      * [de] Arbeitsliste</pre>
      */
    public static final String WORKING_LIST = "WorkingList";

    /** <pre>WORKING_LIST_COLUMNS
      * [en] Columns
      * [de] Spalten</pre>
      */
    public static final String WORKING_LIST_COLUMNS = "WorkingList.Columns";

    /** <pre>WORKING_LIST_COLUMNS_AVAILABLE
      * [en] Available Columns
      * [de] Verfügbare Spalten</pre>
      */
    public static final String WORKING_LIST_COLUMNS_AVAILABLE = "WorkingList.Columns.Available";

    /** <pre>WORKING_LIST_COLUMNS_SELECTED
      * [en] Selected Columns
      * [de] Gewählte Spalten</pre>
      */
    public static final String WORKING_LIST_COLUMNS_SELECTED = "WorkingList.Columns.Selected";

    /** <pre>WORKING_LIST_CONTEXT_MENU_CANCEL
      * [de] Fall stornieren</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_CANCEL = "WorkingList.ContextMenu.cancel";

    /** <pre>WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_CONFIRM
      * [de] Möchten Sie den Fall mit der Nummer {0} wirklich stornieren?</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_CONFIRM = "WorkingList.ContextMenu.CaseCancel.Confirm";

    /** <pre>WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_ERROR
      * [de] Der Fall mit der Nummer {0} konnte nicht storniert werden</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_ERROR = "WorkingList.ContextMenu.CaseCancel.Error";

    /** <pre>WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_SUCCESS
      * [de] Der Fall mit der Nummer {0} erfolgreich storniert</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_SUCCESS = "WorkingList.ContextMenu.CaseCancel.Success";

    /** <pre>WORKING_LIST_CONTEXT_MENU_CASE_DELETE_CONFIRM
      * [en] Do you really want to delete case number {0}?
      * [de] Möchten Sie den Fall mit der Nummer {0} wirklich löschen?</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_CASE_DELETE_CONFIRM = "WorkingList.ContextMenu.CaseDelete.Confirm";

    /** <pre>WORKING_LIST_CONTEXT_MENU_CASE_DELETE_ERROR
      * [en] Case {0} could not be deleted! Try again or check server logs for errors.
      * [de] Fall {0} konnte nicht gelöscht werden! Versuchen Sie es erneut oder prüfen Sie den Fehler im Serverprotokoll.</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_CASE_DELETE_ERROR = "WorkingList.ContextMenu.CaseDelete.Error";

    /** <pre>WORKING_LIST_CONTEXT_MENU_CASE_DELETE_NO_PROCESSES
      * [en] This case is not assigned to any process
      * [de] Der Fall ist keinen Vorgängen zugeordnet</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_CASE_DELETE_NO_PROCESSES = "WorkingList.ContextMenu.CaseDelete.NoProcesses";

    /** <pre>WORKING_LIST_CONTEXT_MENU_CASE_DELETE_PROCESSES
      * [en] This case is assigned to the following processes: {0}
      * [de] Der Fall ist folgenden Vorgängen zugeordnet: {0}</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_CASE_DELETE_PROCESSES = "WorkingList.ContextMenu.CaseDelete.Processes";

    /** <pre>WORKING_LIST_CONTEXT_MENU_CASE_DELETE_SUCCESS
      * [en] Case {0} successfully deleted!
      * [de] Der Fall mit der Nummer {0} erfolgreich gelöscht</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_CASE_DELETE_SUCCESS = "WorkingList.ContextMenu.CaseDelete.Success";

    /** <pre>WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_CONFIRM
      * [de] Möchten Sie die Stornierung für den Fall mit der Nummer {0} wirklich aufheben?</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_CONFIRM = "WorkingList.ContextMenu.CaseUnCancel.Confirm";

    /** <pre>WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_ERROR
      * [de] Die Stornierung für den Fall mit der Nummer {0} konnte nicht aufgehoben werden</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_ERROR = "WorkingList.ContextMenu.CaseUnCancel.Error";

    /** <pre>WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_SUCCESS
      * [de] Die Stornierung für den Fall mit der Nummer {0} ist erfolgreich aufgehoben</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_SUCCESS = "WorkingList.ContextMenu.CaseUnCancel.Success";

    /** <pre>WORKING_LIST_CONTEXT_MENU_DELETE
      * [en] Delete case
      * [de] Fall löschen</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_DELETE = "WorkingList.ContextMenu.Delete";

    /** <pre>WORKING_LIST_CONTEXT_MENU_OPEN
      * [en] Open case
      * [de] Fall öffnen</pre>
      * Attention! this value ('Open case') seems to be also defined under the key OPEN_CASE!
      */
    public static final String WORKING_LIST_CONTEXT_MENU_OPEN = "WorkingList.ContextMenu.Open";

    /** <pre>WORKING_LIST_CONTEXT_MENU_UNCANCEL
      * [de] Stornierung aufheben</pre>
      * Attention! this value ('Stornierung aufheben') seems to be also defined under the key WORKFLOW_CONTEXT_MENU_UNCANCEL!
      */
    public static final String WORKING_LIST_CONTEXT_MENU_UNCANCEL = "WorkingList.ContextMenu.uncancel";

    /** <pre>WORKING_LIST_CONTEXT_MENU_UNLOCK
      * [en] Unlock case
      * [de] Fall entsperren</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_UNLOCK = "WorkingList.ContextMenu.Unlock";

    /** <pre>WORKING_LIST_CONTEXT_MENU_UNLOCK_ERROR
      * [en] Case {0} could not be unlocked!
      * [de] Der Fall mit der Nummer {0} konnte nicht entsperrt werden</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_UNLOCK_ERROR = "WorkingList.ContextMenu.Unlock.Error";

    /** <pre>WORKING_LIST_CONTEXT_MENU_UNLOCK_SUCCESS
      * [en] Case {0} successfully unlocked!
      * [de] Der Fall mit der Nummer {0} erfolgreich entsperrt</pre>
      */
    public static final String WORKING_LIST_CONTEXT_MENU_UNLOCK_SUCCESS = "WorkingList.ContextMenu.Unlock.Success";

    /** <pre>WORKING_LIST_UPDATE
      * [en] update the Working List
      * [de] Arbeitsliste aktualisieren</pre>
      */
    public static final String WORKING_LIST_UPDATE = "WorkingList.update";

    /** <pre>WORKINGLIST_COLUMN_DIALOG
      * [en] Column Selection
      * [de] Arbeitsliste konfigurieren</pre>
      */
    public static final String WORKINGLIST_COLUMN_DIALOG = "Workinglist.Column.Dialog";

    /** <pre>WORKINGLIST_COLUMN_DIALOG_EXPLANATION_LABEL
      * [de] Spalten Beschreibung</pre>
      */
    public static final String WORKINGLIST_COLUMN_DIALOG_EXPLANATION_LABEL = "Workinglist.Column.Dialog.ExplanationLabel";

    /** <pre>WORKINGLIST_FILTER_DIALOG
      * [en] Filter Dialog
      * [de] Filter Dialog</pre>
      */
    public static final String WORKINGLIST_FILTER_DIALOG = "Workinglist.Filter.Dialog";

    static {
        initLocales();
    }

    protected static void initLocales() {
        initLocaleEn();
        initLocaleDe();
    }

    private static void initLocaleEn() {
        final HashMap<String, String> en = new HashMap<>();
        en.put(RULES_ATCCODE, "ATCCode");
        en.put(RULES_TXT_INTERVAL_DAYS, "Tag(e)");
        en.put(ADMISSION_WEIGHT_FROM, "Weight from");
        en.put(RULES_TEMP_274_GK_RSA_HAUPTDIAGNOSESTATIONAER, "GK RSA:stationäre Hauptdiagnosen");
        en.put(ADD_CASE_REMOVE_BILL, "remove bill");
        en.put(RULES_KLINIK_FALLKOSTEN, "Klinik_Fallkosten");
        en.put(ADDRESS_TYPE_POSTAL, "Postal Address");
        en.put(RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER, "Format: Ganzzahlig (Beispiel 2)");
        en.put(WORKING_LIST_CONTEXT_MENU_OPEN, "Open case");
        en.put(WORKFLOW_TYPE_STATIONARY, "Inpatient hospital case");
        en.put(WM_SERVICE_CREATION_TITLE, "Create new service***Created services");
        en.put(RULES_GROUP_FEES_TOOLTIP_9, "Entgeltliste: Entgeltabrechnung von");
        en.put(RULES_TEMP_217_GK_RSA_SOLEASUGABEN, "GK RSA:Ausgaben für Heil- und Hilfsmittel");
        en.put(RULES_GROUP_FEES_TOOLTIP_8, "Entgeltliste: Entgelteinzelbetrag");
        en.put(RULES_GROUP_FEES_TOOLTIP_7, "Entgeltliste: Entgeltart");
        en.put(ICD_TYPE_BILLING, "Billing");
        en.put(BASERATE, "Baserate");
        en.put(RULES_GROUP_FEES_TOOLTIP_3, "Abschlags_CW");
        en.put(CASE_MANAGEMENT, "Case Management");
        en.put(RULES_TXT_CRIT_TIME_OF_STAY_IN_HOURS_TOOLTIP_1, "Siehe Verweildauer. Hier erfolgt die Angabe in Stunden und nicht in Tagen.");
        en.put(PEPP_PAY_TYPE_COMPENSATION_LEVEL, "Compensation Level");
        en.put(RULES_GK_RSA_DIAGNOSEAMBULANTHMGRELEVANT, "GK_RSA_DiagnoseAmbulantHMGRelevant");
        en.put(RULES_TEMP_64_BEHANDELNDEFACHABTEILUNG, "Format: Ganzzahlig (Beispiel 1500)");
        en.put(TP_301_INFORMATION_KEY_30_FV000, "Questions about the condition of certain measures");
        en.put(ERROR_VERSION_COULD_NOT_REMOVE, "this version could not be removed!");
        en.put(BILL_TYPE_ENUM_1_WARNING, "first warning");
        en.put(CASE_DELTA_CWMAXIMAL_TO, "dCW max to");
        en.put(GENDER_UNKNOWN, "unknown");
        en.put(RULES_PFLEGETAGE, "Pflegetage");
        en.put(SAME_RULE_OTHER_NUMBER, "Same rule with Ident but other rule number is found in Pool");
        en.put(EVENT_OPERATION_EDIT, "Change");
        en.put(RULES_TEMP_152_KLINIK_HAUPTDIAGNOSE, "Klinische Daten: Siehe Hauptdiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.");
        en.put(CASE_RESOLVE_GROUP_RESULT_CODE, "R");
        en.put(RULES_TXT_CRIT_CLINIC_VWD_DIS, "Klinik: Verweildauer");
        en.put(RULES_CRIT_ACG_ADG_CODES, "acg_ADG_Code");
        en.put(BATCHPROCESSING, "Batchprocessing");
        en.put(RULES_TEMP_19_HM_GESAMTPREIS_ALLE, "Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)");
        en.put(CATALOG_DOWNLOAD_WINDOW_TITLE, "Loading catalogs and core data");
        en.put(PROCESS_EDITING, "Process editing...");
        en.put(CASE_CW_EFFECTIVE, "effective CW***CW eff.***effective CW");
        en.put(ADDRESS, "Address");
        en.put(TEMPLATE_AVAILABILITY, "Available Templates");
        en.put(CASE_CARE_CW, "CareCW***CW cre.***Care-CW value of the case");
        en.put(RULES_CASE_CASE_DAYS, "Pflegetage");
        en.put(LEVEL_OFF, "Logging ist deaktiviert");
        en.put(PROCESSLIST_EXCEL_EXPORT_DIAG, "Processlist is exporting as Excel");
        en.put(RULES_TXT_CRIT_CASE_NUMERIC_5_TOOLTIP, "Optional herstellbares numerisches Kriterium");
        en.put(MENU_USER_ROLE_STATUSTEXT, "Role: {0}");
        en.put(PROCESS_FINALISATION_LOS_DIFF_FROM, "Los diff from");
        en.put(RULES_CRIT_ACG_AGE_BAND, "acg_altersgruppe");
        en.put(GROUP_RESULT_CODE_VALID_INVALID, "invalid Code");
        en.put(MESSAGE_CASE_DATE_NOT_VALID, "The admision year  {0} is not supporten by Grouper any more");
        en.put(RULES_TXT_RESULT, "Ergebnis");
        en.put(ACG_AGE_BAND_00_04, "00-04");
        en.put(FILTER_ABOVE, "{0} filter(s) above");
        en.put(RULES_TEMP_177_KLINIK_BEATMUNGSSTUNDEN, "Format: Ganzzahlig (Beispiel 30)");
        en.put(RULES_CRIT_ACG_PROBABILITY_HIGH_PC_TOOLTIP, "Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Apothekenkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Arzneimittelkosten  verursacht, im Jahr, welches der Beorbachtungsperiode folgt");
        en.put(MS_EXCEL_NOT_FOUND, "Microsoft Excel was not found!");
        en.put(CATALOG_DOWNLOAD_PROGRESS_DOWNLOAD_STARTED, "Download has started...");
        en.put(RULES_TEMP_251_DIAGNOSENGRUPPEN, "GK RSA:ambulante HMG relevante Diagnosen");
        en.put(RULES_TXT_COMPLAINT_SUGGESTION, "Vorschlag");
        en.put(RULE_TYPE_NOT_FOUND, "rule type is not found");
        en.put(RULES_VPS_TEST_OBJECT, "VPS_Prüfgegenstand");
        en.put(SAP_REFERENCE_TYPE_BILL, "Bill");
        en.put(RULES_PFLEGECWTAG, "PflegeCWTag");
        en.put(HOSPITALIZATION, "Hospitalization");
        en.put(DEPARTMENT_GROUPING, "Department Grouping");
        en.put(RULES_TEMP_216_GK_RSA_APOTHEKENAUSGABEN, "GK RSA:Ausgaben für Apotheken");
        en.put(DISCHARGE_WEEKDAY, "Discharge Date Weekday***Dis. Day***Discharge Date Weekday");
        en.put(AUDIT_QUOTA_RESULT_EXCEEDED_EXAMINATION_QUOTA, "Examination Quota exceeded");
        en.put(DIALOG_BATCH_GROUPING_TOTALCASES_TOOLTIP, "Total of all cases in Database (including cases, for which no DRG/PEPP could be computed)");
        en.put(RULES_EINWEISENDERARZT, "EinweisenderArzt");
        en.put(LAB_DATA_UNIT, "Unit***Unit***Result Unit");
        en.put(CASE_STATUS_SAP_CLOSED, "SAP closed");
        en.put(LAWER_FILE_NUMBER, "lawer filen number");
        en.put(GROUPER_MDC_OR_SK_PSYCHOSOMATIC_INPATIENT_CARE, "Psychosomatics, inpatient***PSO");
        en.put(LOCK_CASE_ENTRY_MESSAGE, "Hospital case {0} is already opened by user {1} since {2}!");
        en.put(RULES_1_PFLEGESTUFE_1, "1 - Pflegestufe 1");
        en.put(RULES_TEMP_203_GK_RSA_DDD, "GK RSA:DDD");
        en.put(RULES_TXT_CRIT_TOP_LENGTH_OF_STAY_DIS, "obere Grenzverweildauer");
        en.put(RULES_KLINIK_UGVD, "Klinik_uGVD");
        en.put(PROCESS_STATUS_REMINDER, "Status of Reminder***WV Status***Status of Reminder");
        en.put(RULES_TEMP_59_FALL_STRING_7, "Fall.String7");
        en.put(RULES_GROUP_ACG_DISEASE_GROUPS_DIS, "Krankheitsgruppen");
        en.put(ANTIBIOTIC_CEFEPIM, "Cefepim");
        en.put(RULES_TXT_CRIT_CLINIC_ADM_DATE_FULL_DIS, "Klinik: Aufnahmedatum mit Uhrzeit");
        en.put(RULES_CRIT_ACG_PREGNANT, "acg_schwangerschaft");
        en.put(ORGAN_ENDOCRINE, "Endocrine");
        en.put(VALIDATION_MASTERDATA_NO_AUDIT_REASONS_FOUND, "No Auditreasons available in masterdata!");
        en.put(GROUP_RESULT_PDX_INVALID_PDX_CODE, "Invalid ICD-10-GM-Code as the main diagnosis");
        en.put(RULES_0_UNBEKANNT, "0 - unbekannt");
        en.put(RULES_CRIT_ACG_TOTAL_COST_TOOLTIP, "Gesamtkosten incl. Medikamentenkosten");
        en.put(RULES_NEBENDIAGNOSELOKALISATION, "NebendiagnoseLokalisation");
        en.put(RULES_TXT_CRIT_RELEASE_DEPARTMENT_DIS, "entlassende Fachabteilung");
        en.put(RULES_TXT_CRIT_PSYCH_DAYS_INTENSIV_DIS, "Anzahl Tage intensiv");
        en.put(INSURANCES, "Insurances");
        en.put(RULES_SUPERGROUP_ACG_TOOLTIP, "ACG");
        en.put(EVENT_OPERATION_CREATE, "Create");
        en.put(READONLY_DOC_ITEM_MD_RECOMENDATION_FILE_NAME, "MD_Kodierempfehlungen");
        en.put(RULES_TEMP_160_KLINIK_DRG, "Format: Alphanumerisch (Beispiele: A11B oder B75A)");
        en.put(MENU_CHANGE, "change");
        en.put(VALIDATION_WARNING_COMBINATION_ALLREADY_EXISTS_IDENT_CS_NUMBER, "Combination of Hospitalidentifier and Casenumber allready exists!");
        en.put(RULES_CRIT_MRSA_DMP_DAYS_TOOLTIP_2, "Anzahl der DMP-Versichertentage des Versicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV");
        en.put(RULES_CRIT_MRSA_DMP_DAYS_TOOLTIP_1, "DMP-Tage aus Satzart 10");
        en.put(EVENT_TYPE_REMINDER_CREATED, "Reminder created: type {0}, due date: {1}, assigned to: {2}, status: {3}***Created reminders");
        en.put(RULES_TEMP_13_HE_VERORDNUNGSDATUM, "Format: YYYYMMDD");
        en.put(RULES_TXT_CRIT_DISCHARGE_DATE_FULL_DIS, "Entlassungsdatum mit Uhrzeit");
        en.put(ICD_TYPE_AFTER_INPATIENT, "After inpatient");
        en.put(TEMPLATE_CONFIRMATION, "Confirmation");
        en.put(ORGAN_NEUROLOGY, "Neurology");
        en.put(RULES_TXT_CRIT_CLINIC_PEPP_DIS, "Klinik: PEPP");
        en.put(RULES_TXT_CRIT_SOLE_FULL_HPN_NUMBER_DAK_DIS, "Hilfsmittel: Gesamtmenge für Hilfsmittelpositionsnummer");
        en.put(RULES_TXT_CRIT_SOLE_FULL_HPN_PRICE_DIS, "Heil- und Hilfsmittel: Gesamtpreis für PZN");
        en.put(RULES_CRIT_MRSA_HOSP_HMG_REL_DXG_TOOLTIP, "Diagnosengruppe, die durch eine ICD von einem Krankenhaus kodiert worden ist, die auch zu einer HMG führt");
        en.put(RULES_TXT_OP_MINUS, "minus ( - )");
        en.put(RULES_TXT_CRIT_RECEIPT_DEPARTMENT_TOOLTIP_1, "Kodierung der aufnehmenden Fachabteilung nach §301(Siehe Anlage 1)");
        en.put(PROCESS_COMPLETION_FINALISATION, "Date of finalisation");
        en.put(ACTION_MSG_NO_CREATE_RIGHT, "You do not have right to create any action");
        en.put(RULES_TXT_CRIT_BONUS_CW_TOOLTIP_1, "Ein Überschreiten der Oberen Grenzverweildauer bewirkt einen Zuschlag, bei dem die einer DRG zugeordneten CW-Wert-Zuschläge multipliziert mit den Tagen der Überschreitung dem CW-Basiswert hinzugezählt werden.");
        en.put(RULES_TEMP_43_DOSIERUNG, "Format: Fließkommazahl (Beispiel: 2.5)");
        en.put(FEE_GROUP_BPFLV_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "BPflV without final invoice and without Discharge");
        en.put(BILL_VALIDATION_INVALID_INSURANCE_KEY_LENGTH, "insurance number has to have 9 symbols");
        en.put(PEPP_CATALOG, "PEPP catalog");
        en.put(RULES_TXT_CRIT_CASE_NUMERIC_5_DIS, "Fall.Numeric05");
        en.put(EVENT_NAME_PROCESS_FINALISATION, "Process Finalisation");
        en.put(RULES_TXT_CRIT_CLINIC_BREATHING_DIS, "Klinik: Beatmungsstunden");
        en.put(RULES_GK_RSA_MEHRLEISTUNGDMP, "GK_RSA_MehrleistungDMP");
        en.put(GROUPER_MDC_OR_SK_MDC_PRE, "Diseases and disorders of the nervous system***PRE");
        en.put(RULES_TEMP_282_VERSICHERTER_POSTLEITZAHL, "Format: Ganzzahlig (Beispiel 10245) 5-stellig");
        en.put(REMINDER_SUBJECTS, "Reminders");
        en.put(RULES_TEMP_3_HE_GESAMTMENGE, "Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.");
        en.put(NO_TABLE_FOUND, "rule table is not found and can not be imported from file");
        en.put(AUTHORIZATION_DIALOG_MESSAGE_CONTACT, "Please contact your system administrator.");
        en.put(RULES_TEMP_94_KOSTENGEWICHT_KATALOG, "Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)");
        en.put(RULE_VALIDATION_CHECK_CATALOG_TRANSFER_TABLE, "check with transfer tables");
        en.put(RULES_TEMP_64_FALLERLOES, "Gesamterloes(DRG)");
        en.put(RULES_GK_RSA_DIAGNOSESTATIONAER, "GK_RSA_DiagnoseStationaer");
        en.put(MENU_BATCH_GROUPING_MED_AND_REMEDIES, "GK Check");
        en.put(MENU_WIZARD_NEXT, "Next");
        en.put(RULES_TXT_HEM_INFOS, "Heilmittel");
        en.put(RULES_TXT_OP_PLUS, "plus ( + )");
        en.put(VERSION_RISK_TYPE_AUDIT_MD, "Audit MD");
        en.put(PROCESS_FINALISATION_SUPPLFEE_DIFF, "Supplfee diff***Supplfee***Difference between the sum of the additional charges of the initial assigned case version (KIS) and the possibly modified checkpoint case version, assigned at the end of the transaction (Supplfee Initial - Supplfee Final = Supplfee diff).");
        en.put(WORKFLOW_DEADLINE_BILL_CORRECTION_DEADLINE_COMMENT, "Deadline by which a bill of exchange correction from the hospital to which the health insurance can be sent");
        en.put(CASE_CARE_CW_TO, "CW cre. to");
        en.put(TP_301_INFORMATION_KEY_30_KL000, "Free text with mention of other / further test objects");
        en.put(RULES_UNTERE_GRENZVERWEILDAUER, "untere_Grenzverweildauer");
        en.put(FILTER_MORE, "more");
        en.put(AUDIT_QUOTA_RESULT_ACTUAL_EXAMINATION_QUOTA, "Actual Examination Quota");
        en.put(RULES_CRIT_ACG_FRAILTY_FLAG_DIS, "ACG: Gebrechlichkeits-Indikator");
        en.put(PSY, "Psychosomatic");
        en.put(RULES_TXT_CRIT_CASE_NUMERIC_2_DIS, "Fall.Numeric02");
        en.put(ACG_AGE_BAND_55_64, "55-64");
        en.put(RULES_CRIT_ACG_RESCALED_TOTAL_CRI_TOOLTIP, "Kostenindex für zukünftige Gesamkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1, Untergruppeanalysen stellen Vergleiche zu den lokalen Normen zur Verfügung");
        en.put(PROCESS_STATUS_REMINDER_OPEN, "open");
        en.put(CATALOG_DOWNLOAD_PEPP_FEE, "PEPP Supp. Fees");
        en.put(RULES_TXT_OP_NO_OPERATION, "keine Operation");
        en.put(WORKFLOW_DEADLINE_ANSWER_DEADLINE, "Deadline to give a reply or answer");
        en.put(RULES_TXT_CRIT_CLINIC_DIS_DATE_FULL_DIS, "Klinik: Entlassungsdatum mit Uhrzeit");
        en.put(CASE_DOES_NOT_EXIST_WITH_REASON, "Case with ID {0} does not exist. Maybe this case was already deleted by another user meantime.");
        en.put(EVENT_NAME_PROCESS, "Process");
        en.put(PROCESS_FINALISATION_CW_INITIAL_TO, "CW initial to");
        en.put(ANTIBIOTIC_CIPROFLOXACIN, "Ciprofloxacin");
        en.put(DISCHARGE_REASON_COMPLETED_TREATMENT_AGAINST_MEDICAL_ADVICE_INPATIENT_TREATMENT, "completed treatment against medical advice, inpatient treatment");
        en.put(PATIENT_SEX_MALE, "Male");
        en.put(EXIT, "Exit");
        en.put(TIME_FORMAT_DEVIDER, ":");
        en.put(RULES_TEMP_181_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT, "Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.");
        en.put(RULES_03_NUB, "03 - NUB");
        en.put(RULES_CRIT_ACG_OB_PUL_DISEASE_CONDITION, "acg_chronische_obstruktive_Lungenerkrankung_vorhanden");
        en.put(ACG_AGE_BAND_85_P, "85+");
        en.put(FEE_GROUP_IV_INTEGRATED_CARE_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "IV (integrated care) without final invoice and without Discharge");
        en.put(RULES_TXT_CRIT_MID_LENGTH_OF_STAY_DIS, "mittlere Verweildauer");
        en.put(CASE_DELTA_CWMAXIMAL, "Delta-CW maximal***dCW max***Maximum Delta CW value determined by the validation rules for this case.");
        en.put(CASE_MERGE_TAB_SECTION_DETECTED_REASONS, "Detected reasons");
        en.put(RULES_TXT_CRIT_REMEDIES_FULL_COUNT, "he_Gesamtmenge");
        en.put(DAYS_SIMUL_NO_DEDUCTION_CARE, "without deduction care");
        en.put(RULES_TEMP_178_KLINIK_ENTLASSUNGSDATUM, "Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.");
        en.put(RULES_TXT_CRIT_CLINIC_ADRG_DIS, "Klinik: ADRG");
        en.put(DOCUMENTATION_RISK_SET, "Risks set");
        en.put(OPSCODE, "Procedure");
        en.put(RULES_18_DAK_INTERNE_ENTGELTE_OHNE_SCHLUSSRECHNUNG, "18 - DAK-interne Entgelte ohne Schlussrechnung");
        en.put(VERSIONCONTROLL_DETAILS, "Versiondetails");
        en.put(BILL_OPEN_ITEM_REF_NO, "Ref. No.");
        en.put(DIALOG_BATCH_GROUPING_DAYSEXTERN_TOOLTIP, "Sum of days, which are not considered due to legal regulations");
        en.put(RULES_GK_RSA_ELRLOESGESAMT, "GK_RSA_ElrloesGesamt");
        en.put(RULES_TXT_CRIT_REMEDIES_FULL_PRICE, "he_gesamtPreis");
        en.put(DIALOG_BATCH_GROUPING_RULES_TYP, "Typ");
        en.put(PAY_GRADE, "PayGrade");
        en.put(CATALOG_DOWNLOAD_CATALOGS, "Catalogs");
        en.put(MDK_BILL_CORRECTION_DEADLINE_ERROR, "No valid entry is found for the bill correction deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.");
        en.put(RULES_TEMP_272_GK_RSA_DIAGNOSESTATIONAER, "GK RSA:stationäre Diagnosen");
        en.put(CASE_DETAILS_STRING_9, "String 9");
        en.put(RULES_TEMP_47_GESAMTATCPREIS, "Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)");
        en.put(CASE_DETAILS_STRING_8, "String 8");
        en.put(CASE_DETAILS_STRING_7, "String 7");
        en.put(CASE_DETAILS_STRING_6, "String 6");
        en.put(LOGIN_USER, "User");
        en.put(CASE_DETAILS_STRING_5, "String 5");
        en.put(TP_301_INFORMATION_KEY_30_FDK20, "Declaration on the termination of the case dialogue");
        en.put(MS_WORD_VERSION, "The Microsoft Word Version");
        en.put(CASE_DETAILS_STRING_4, "String 4");
        en.put(CASE_DETAILS_STRING_3, "String 3");
        en.put(CASE_DETAILS_STRING_2, "String 2");
        en.put(CASE_DETAILS_STRING_1, "String 1");
        en.put(INS_SHORT_SOZIALAMT, "Sozialamt");
        en.put(GROUPER_MDC_OR_SK_MDC_21_B, "Injury, poisoning and toxic effects of drugs and medicines***21B");
        en.put(GROUPER_MDC_OR_SK_MDC_21_A, "Poly trauma***21A");
        en.put(RULES_TEMP_65_FALLERLOES, "Gesamterlös des DRG - Falles mit Pflegeaufwendungen(ab 2020) ohne Berücksichtigung der Zusatzentgelten ");
        en.put(VALIDATION_ERROR_WARNING_COUNT, "Count of Warnings {0}:");
        en.put(ADMISSION_MODE_MAIN_DEPARTMENT_CHARGE_DOCTOR, "MD/B-ChargeDoc.******Charge Doctor");
        en.put(CATALOG, "Catalog");
        en.put(LOGIN_ERROR_MESSAGE_CONFIGURATION_INVALID, "The configuration file is faulty");
        en.put(RULE_ESTIMATED, "Estimated");
        en.put(TP_301_INFORMATION_KEY_30_FDK13, "Rejection of the extension of the case dialogue");
        en.put(RULE_DELTA_REVENUE, "Delta revenue");
        en.put(TP_301_INFORMATION_KEY_30_FDK12, "Adoption of the request to extend the case dialogue");
        en.put(RULES_KLINIK_DRG, "Klinik_DRG");
        en.put(RULES_TEMP_60_FALL_STRING_8, "Fall.String8");
        en.put(TP_301_INFORMATION_KEY_30_FDK11, "Invitation to extend the case dialogue");
        en.put(NO_DISCHARGE_REASON_FOUND, "Discharge reason 12 is not set");
        en.put(PROCESS_FINALISATION_VERSION_SELECT, "Version selection for process finalisation***Select Version");
        en.put(RULES_TXT_CRIT_CLINIC_FEE_TYPE_DIS, "Klinik: Entgeltart");
        en.put(HISTORY_ACTION_CREATED, "Action {0} created***Created actions");
        en.put(RULES_TXT_NO_INTERVAL, "keine Angabe");
        en.put(RULES_VERSICHERTER_ALTER, "Versicherter_Alter");
        en.put(RULES_TEMP_87_ENTGELTSUMMEJEENTGELT, "Format: Währung (Beispiel: 635.60)");
        en.put(WEIGHT, "Weight");
        en.put(RULES_VPS_DISCOVERED_AT_DIS, "VPS: Festgestelt am");
        en.put(RULES_KLINIK_VERWEILDAUER, "Klinik_Verweildauer");
        en.put(RULES_TEMP_137_VERWEILDAUERINSTUNDEN, "Format: Ganzzahlig (Beispiel 50)");
        en.put(REVENUE_MATH_PEPP_GT_2015, "Compensation-Grade:  {0} (revenue=  CW in day({1}) x Baserate from {3} to {4} ({4})X  ({5}) Days");
        en.put(FILTER_PRIO, "All with Prio");
        en.put(RULES_TXT_LABORATORY_VALUE, "Laborwert");
        en.put(RULES_CRIT_ACG_DIABETES_DIS, "ACG: Diabetes vorhanden");
        en.put(TP_301_INFORMATION_KEY_30_FDK03, "Rejection of a case dialog");
        en.put(TP_301_INFORMATION_KEY_30_FDK02, "Acceptance of the request for the case dialogue");
        en.put(TP_301_INFORMATION_KEY_30_FDK01, "Request for case dialog");
        en.put(EVENT_TYPE_PROCESS_CLOSED, "Process closed***Closed processes");
        en.put(MENU_ROLE_CHANGE_VALIDATION_SELECTION, "Please choose a role");
        en.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_10, "9 - 98-99 Perzentile");
        en.put(RULES_TXT_CRIT_SEPARATION_WEEK_DAY_DIS, "Entlassungswochentag");
        en.put(RULES_GK_RSA_AMBULANTEHMGRELEVANTEDXG, "GK_RSA_AmbulanteHMGRelevanteDxG");
        en.put(ICD_TYPE_DRG, "DRG");
        en.put(CLIENT_ERROR_CONFIGURATION, "Client user configuration file seems to be corrupted:");
        en.put(RULES_GROUP_REVENUE_MRSA_DIS, "Erlöse");
        en.put(RULES_TEMP_76_PFLEGETAGE, "Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.");
        en.put(RULES_PFLEGETAGEDRG, "PflegetageDRG");
        en.put(PROCESS_STATUS_REOPENED, "Process is reopened");
        en.put(RULES_TEMP_236_ERLOESE, "GK RSA:AGG");
        en.put(RULES_TXT_CRIT_ADM_TYPE_DIS, "Aufnahmegrund1");
        en.put(GROUPER_MDC_OR_SK_MDC_25, "Semi-stationary paediatric diagnostics and treatment***25");
        en.put(GROUPER_MDC_OR_SK_MDC_24, "Other DRGs***24");
        en.put(RULES_TXT_CRIT_SOLE_NUMBER_DAK_DIS, "Hilfsmittel: Menge");
        en.put(GROUPER_MDC_OR_SK_MDC_23, "Factors influencing health, and other health care utilization***23");
        en.put(GROUPER_MDC_OR_SK_MDC_22, "burns***22");
        en.put(RULES_TEMP_78_BASISFALLWERT, "Format: Währung (Beispiel 2100,40)");
        en.put(GROUPER_MDC_OR_SK_MDC_20, "Alcohol and drug use, and alcohol and drug -induced mental disorders***20");
        en.put(REQUEST_TYPE_OTHER, "Other");
        en.put(VERSIONCONTROLL_COMMENT, "Comment");
        en.put(RULES_TEMP_262_DIAGNOSENGRUPPEN, "GK RSA:stationäre Nebendiagnose");
        en.put(RULES_TXT_CRIT_BREATHING_TOOLTIP_1, "Summe der Stunden, in denen der Patient künstlich beatmet worden ist.");
        en.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_11, "A - Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden)");
        en.put(DIALOG_BATCH_GROUPING_RULES_CLUES, "Clues");
        en.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_10, "B - Begleitperson");
        en.put(RULES_CRIT_ACG_UNSCALED_TOTAL_CRI_DIS, "ACG: Index aller Kosten, ungewichtet");
        en.put(GROUPER_MDC_OR_SK_MDC_19, "Mental diseases and disorders***19");
        en.put(RULES_TEMP_195_ARZNEIMITTEL, "GK RSA:Anzahl der Packungen");
        en.put(GROUPER_MDC_OR_SK_MDC_17, "Hematologic and solid neoplasms***17");
        en.put(GROUPER_MDC_OR_SK_MDC_16, "Diseases of the blood, the blood-forming organs and the immune system***16");
        en.put(RULES_TXT_CRIT_ADM_DATE_FULL_DIS, "Aufnahmedatum mit Uhrzeit");
        en.put(GROUPER_MDC_OR_SK_MDC_15, "newborn***15");
        en.put(GROUPER_MDC_OR_SK_MDC_14, "Pregnancy, childbirth and postpartum***14");
        en.put(GROUPER_MDC_OR_SK_MDC_13, "Diseases and disorders of the female reproductive organs***13");
        en.put(GROUPER_MDC_OR_SK_MDC_12, "Diseases and disorders of the male reproductive system***12");
        en.put(RULES_TXT_CRIT_SEPARATION_MONTH_TOOLTIP_1, "Monat, in den die Entlassung fällt.");
        en.put(GROUPER_MDC_OR_SK_MDC_11, "Diseases and disorders of the urinary organs***11");
        en.put(DISCHARGE_DEPARTMENT, "Discharge Department");
        en.put(GROUPER_MDC_OR_SK_MDC_10, "Endocrine, nutritional and metabolic diseases***10");
        en.put(RULES_TEMP_224_VERSICHERTENDATEN, "GK RSA:Alter");
        en.put(REMINDER_CREATE, "create Reminder");
        en.put(LOCALISATION_LEFT, "left***l");
        en.put(DIALOG_BATCH_GROUPING, "Batch-Results");
        en.put(RULES_JETZT, "Jetzt");
        en.put(RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_6, "3 - Zusatzdiagnose");
        en.put(RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_5, "2 - Sterndiagnose");
        en.put(CATALOG_MENU_NO_UPDATES_FOUND, "Catalogs have not been changed");
        en.put(GROUPER_MDC_OR_SK_MDC_09, "Diseases and disorders of the skin, subcutaneous tissue and breast***09");
        en.put(RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_4, "1 - Kreuzdiagnose");
        en.put(GROUPER_MDC_OR_SK_MDC_08, "Diseases and disorders of the musculoskeletal system and connective tissue***08");
        en.put(RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_3, "0 - nicht gesetzt");
        en.put(GROUPER_MDC_OR_SK_MDC_07, "Diseases and disorders of hepato biliary system and pancreas***07");
        en.put(GROUPER_MDC_OR_SK_MDC_06, "Diseases and disorders of the digestive organs***06");
        en.put(GROUPER_MDC_OR_SK_MDC_05, "Diseases and disorders of the circulatory system***05");
        en.put(GROUPER_MDC_OR_SK_MDC_04, "Diseases and disorders of the respiratory system***04");
        en.put(RULES_GKSO_LE_NODE_OTHER_SERVICES, "Heil- und Hilfsmittel");
        en.put(GROUPER_MDC_OR_SK_MDC_03, "Diseases of the nose, mouth and neck***03");
        en.put(GROUPER_MDC_OR_SK_MDC_02, "Diseases and disorders of the ear***02");
        en.put(RULES_CRIT_ACG_PROBABILITY_HIGH_TC_TOOLTIP, "Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Gesamtkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Gesamtkosten (einschließlich Apothekenkosten) verursacht, im Jahr, welches der Beobachtungsperiode folgt");
        en.put(GROUPER_MDC_OR_SK_MDC_01, "Diseases and disorders of the eye***01");
        en.put(AUDIT_TYPE_SINGLE, "Single case check");
        en.put(MDK_INFORMATIONS, "MD Informations");
        en.put(PROCESS_FINALISATION_SUPPLFEE_INITIAL, "Supplfee initial***Supplfee initial***Sum of the additional charges of the KIS version of the case that were initially assigned to this transaction");
        en.put(DIALOG_BATCH_GROUPING_TOTALCASES, "Total Cases");
        en.put(RULES_TEMP_4_HE_GESAMTMENGE, "Format: numerisch (Beispiel: 5)");
        en.put(SAP_REFERENCE_TYPE_CANCELLATION, "Cancel");
        en.put(RULES_TXT_SEC_DIAGNOSE, "Nebendiagnose");
        en.put(AUDIT_AUDIT_REASONS, "Audit Reasons***Audit Reasons***Audit reasons used in the context of any request.");
        en.put(RULES_14_NUB_OHNE_SCHLUSSRECHNUNG, "14 - NUB ohne Schlussrechnung");
        en.put(FAILED, "Failed");
        en.put(CASE_IS_LOCKED, "Case {0} was already opened by {1} since {2}");
        en.put(RULES_KLINIK_ENTGELTBEREICH, "Klinik_Entgeltbereich");
        en.put(STATE_BERLIN, "Berlin");
        en.put(MDK_DOCUMENT_DELIVER_AND_CONTINUATION_FEE_DEADLINES_ERROR, "No valid entry is found for the document deliver and continuation fee deadlines in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.");
        en.put(PROCESS_SELECT_TASK, "Select next task");
        en.put(LOGIN_FAILED_PASSWORD_INVALID, "Password invalid");
        en.put(RULES_TXT_CRIT_MOVEMENTS_COUNT_DIS, "Anzahl Bewegungen");
        en.put(REMINDER_ASSIGNED_TOOLTIP, "See the details of a Reminder");
        en.put(RULES_GK_RSA_DIAGNOSESTATIONAERHMGRELEVANT, "GK_RSA_DiagnoseStationaerHMGRelevant");
        en.put(CASE_STATUS_STANDARD, "Standard");
        en.put(ADD_CASE_CANCEL_CONFIRMATION, "Do you really want to quit  Case input?");
        en.put(LOCAL_VERSIONS, "CP-Versions");
        en.put(RULES_TEMP_100_RECHNUNGSDATUM, "Format: YYYYMMDD");
        en.put(RULES_CRIT_MRSA_REDUCTION_EARNING_CAPACITY_TOOLTIP, "Anzahl der EMR-Versichertentage im Berichtsjahr");
        en.put(RULES_TXT_CRIT_COMBAT_DEPARTMENT_TOOLTIP_1, "Kodierung der behandelnden Fachabteilung nach §301(Siehe Anlage 1)");
        en.put(INS_SHORT_KKH, "KKH");
        en.put(RULES_TEMP_77_PFLEGETAGE, "Format: Ganzzahlig (Beispiel 2)");
        en.put(RULES_TXT_CRIT_BONUS_DAYS_TOOLTIP_1, "Ist-Verweildauer - Obere Grenzverweildauer + 1. Im Fallpauschalenkatalog ist immer der erste Zuschlagstag angegeben (Spalte 9).");
        en.put(RULES_TEMP_131_TAGDERENTBINDUNG_2, "Format: YYYYMMDD");
        en.put(AUDIT_REASONS_ERROR, "List of audit reasons is empty. Please configure valid audit reasons!!");
        en.put(RULES_TEMP_69_VERLEGUNGSDATUM, "Format: YYYYMMDD");
        en.put(COUNTRY, "Country");
        en.put(RULES_TXT_PAT_DATA, "Patientendaten");
        en.put(DIALOG_BATCH_GROUPING_NURSINGDAYS, "Nursingdays");
        en.put(DRG_CORR_TYPE_DEDUCTION_TRANSFER_ADMISSION, "Deduction Admission Transfer");
        en.put(CATALOG_OPS_ERROR, "[OPS Catalog {0} : Has no value]");
        en.put(CASE_DELTA_CWMINIMAL_TO, "dCWmin to");
        en.put(RULES_CRIT_ACG_HYPERLIPIDEMIA_DIS, "ACG: Fettstoffwechselstörungen vorhanden");
        en.put(RULES_KLINIK_AUFNAHMEGRUND, "Klinik_Aufnahmegrund");
        en.put(PIA, "PIA");
        en.put(MDK_DOCUMENT_DELIVERED, "Document Delivered at");
        en.put(CASE_MERGING_CONDITION_TEN_DRG, "New case***New case");
        en.put(RULES_TEMP_78_PFLEGECWTAG, "Pflege CW/Tag");
        en.put(RULES_TEMP_95_MITTLERE_VERWEILDAUER, "Sie gibt die Liegezeit an, bei der bei Unterschreitung und gleichzeitiger Verlegung aus einem anderen Krankenhaus und/oder in ein anderes Krankenhaus pro Tag ein Abschlag vom Relativgewicht ermittelt werden muss (Ausnahmen laut Fallpauschalenkatalog beachten). Mit dieser Regelung soll berücksichtigt werden, dass bei einer gemeinsamen Behandlung eines Patienten durch zwei oder mehrere Krankenhäuser die einzelnen Erlöse (DRG) gemindert werden müssen.");
        en.put(ADMISSION_MODE_SURGEON_ANESTHETIST_MIDWIFE, "B-Op./B-Anest./B-Mid.******Surgeon with Anesthetist and Midwife");
        en.put(FEE_GROUP_PARTIAL_PAYMENT_WITHOUT_FINAL_INVOICE_WITH_DISMISSAL, "Partial payment (without final invoice / with dismissal)");
        en.put(RULES_TXT_CRIT_CLINIC_DRG_DIS, "Klinik: DRG");
        en.put(CASE_DELTA_REVENUE_MAXIMAL, "Delta-Revenue maximal***dRevenue max.***Maximum Revenue value determined by the validation rules for this case.");
        en.put(CASE_CARE_CWMAXIMAL_FROM, "CW cre. max. from");
        en.put(ADMISSION_CAUSE_TRANSFERRING_FROM_ANOTHER_HOSPITAL, "Transferring from another hospital (e.g. corporations)");
        en.put(CONFIRMATION_NO, "No");
        en.put(DESCRIPTION, "Description");
        en.put(RULES_CRIT_ACG_RUB_TOOLTIP_6, "5 - Sehr hoher Verbrauch");
        en.put(RULES_TXT_CRIT_CLINIC_ADM_TIME_DIS, "Klinik: Aufnahmeuhrzeit");
        en.put(RULES_CRIT_ACG_RUB_TOOLTIP_5, "4 - Erhöhter Verbrauch");
        en.put(RULES_CRIT_ACG_RUB_TOOLTIP_4, "3 - Mittlerer Verbrauch");
        en.put(RULES_CRIT_ACG_RUB_TOOLTIP_3, "2 - Geringer Verbrauch");
        en.put(RULES_CRIT_ACG_RUB_TOOLTIP_2, "1 - Gesund, kein Verbrauch");
        en.put(RULES_CRIT_ACG_RUB_TOOLTIP_1, "0 - Keine oder nur ungültige Dx");
        en.put(CASE_CW_NEGATIVE, "Total of all negative CW***CW-***Total of all negative CW");
        en.put(RULES_TXT_CRIT_ACCOUCHEMENT_DATE_2_TOOLTIP_1, "Tag der Geburt des letzten Kindes bei Mehrlingsgeburten.");
        en.put(RULES_TEMP_235_GK_RSA_VERSTORBEN, "GK RSA:Verstorben");
        en.put(RULES_TAGDERENTBINDUNG_2, "TagDerEntbindung2");
        en.put(LOGIN_FAILED_DATABASE_NO_RIGHT_OTHER_ROLE_1, "Do you want to continue with this role?");
        en.put(RULES_TXT_CRIT_CLINIC_DRG_PARTITION_DIS, "Klinik: DRG Partition");
        en.put(FILTER_CASES_LOCK, "All locked cases");
        en.put(RULES_TAGDERENTBINDUNG_1, "TagDerEntbindung1");
        en.put(RULES_76_KURZZEITPFLEGE, "76 - Kurzzeitpflege");
        en.put(RULES_TEMP_136_VERWEILDAUER, "Format: Ganzzahlig (Beispiel 2)");
        en.put(PROCESS_FINALISATION_SAVED_MONEY_TO, "Saved money to");
        en.put(READONLY_DOC_ITEM_WARD_COMPECATING_THERAPY_FILE_NAME, "Stationsersetzende_Behandlungsmethoden");
        en.put(ANTIBIOTIC_LINEZOLID, "Linezolid");
        en.put(RULES_CRIT_ACG_PHARMA_COST_BAND_TOOLTIP_1_1, "0 - 0 Medikamentenkosten");
        en.put(DRG_PARTITION_SURGICAL, "surgical");
        en.put(RULES_TEMP_41_ATCCODE, "Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04");
        en.put(RULES_TXT_CRIT_PROC_DATE_TOOLTIP_1, "Datum, an dem die Prozedur durchgeführt worden ist.");
        en.put(FEE_GROUP_MODEL_PROJECTS, "Model projects");
        en.put(TEXT_TEMPLATE_INKA, "Inka-Message Context");
        en.put(DISCHARGE_DATE_FROM, "Dis.-Date from");
        en.put(DAY_WEDNESDAY, "Wednesday***We");
        en.put(PRIORITY_HIGH, "high Priority");
        en.put(RULES_TXT_CRIT_HEALTH_ENSURANCE_DIS, "Krankenkasse");
        en.put(REVENUE_MATH_DRG_CASE, "eff. CW {0} x Drg-Baserate {1}");
        en.put(RULE_TABLE_COMMENT_TOOLTIP, "\"Comment to the table content\"");
        en.put(DELETE, "Delete");
        en.put(NO_ADMISSION_REASON_FOUND, "Admission reason 12 is not set");
        en.put(RULES_TXT_CRIT_CW_CATALOG_TOOLTIP_1, "( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert). Kostengewicht nach DRG - Katalog");
        en.put(CATALOG_DRG_EFF_CW, "eff. CW {0}");
        en.put(ADMISSION_REASON_2_COST_UNIT_CHANGE_WAR_INVALIDS_AND_DISABLED_PEOPLE, "Cost unit change - War Cripples affliction / War Victims affliction");
        en.put(VALIDATION_MASTERDATA_NO_REQUEST_STATUS_FOUND, "No Requeststatus available in masterdata!");
        en.put(RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_PZN_TOOLTIP_1, "Die Summe aller Mengen der Medikamente, bei denen ein PZN - Code eingetragen ist.");
        en.put(RULES_GK_RSA_QUALIFIZIERUNGDIAGNOSENAMBULANT, "GK_RSA_QualifizierungDiagnosenAmbulant");
        en.put(RULES_KLINIK_OGVD, "Klinik_oGVD");
        en.put(CASE_MERGING_JOB_STOPPED, "Stopped");
        en.put(REVENUE_MATH_DRG_CARE, "care CW {0} x Care-Baserate {1}");
        en.put(RULES_12_BPFLV_OHNE_SCHLUSSRECHNUNG, "12 - BPflV ohne Schlussrechnung");
        en.put(ADMISSION_REASON_RECOVERY_DUE_COMPLICATION, "Recovery due complication");
        en.put(AUDIT_UPDATE_REQUEST_WINDOW, "Update a request (Examination/Pre-trial)");
        en.put(BILL_POSITION_NET_AMOUNT, "Net Amount");
        en.put(RULES_TEMP_92_KOSTENGEWICHT_EFFEKTIV, "Kostengewicht für PEPP - Fälle: Die Gesamt-Bewertungsrelation, die sich aus der Verweildauer und den einzelnen Vergütungsstufen ergeben.");
        en.put(RULES_TEMP_14_HM_PREIS, "Die Kosten des Hilfsmittels.");
        en.put(GERM_GROWTH_MODERATELY, "moderately");
        en.put(FEE_GROUP_BEFORE_INPATIENT_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "before inpatient without final invoice and without Discharge");
        en.put(BILL_RECIPIENT, "Recipient");
        en.put(APPLICATION_DEFAULT_TITLE, "Checkpoint X");
        en.put(WORKFLOW_STATE_PAUSED, "paused");
        en.put(FILTER_PROCESS_LOCK, "All locked processes");
        en.put(GROUP_RELEVANT_CODE_NOT_USED_FOR_DRG_PEPP_ASSIGNMENT, "Not used for the DRG / PEPP - assignment");
        en.put(REMINDER_TYPE, "REM type");
        en.put(RULES_TXT_CRIT_PSYCH_OPS_TOOLTIP, "Psych-OPS");
        en.put(OPEN_CASE, "Open case");
        en.put(RULES_CRIT_MRSA_AMBULANT_HMG_REL_DXG_TOOLTIP, "Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden, die auch zu einer HMG führt");
        en.put(LAB_DATA_ANALYSIS_DATE, "Analysis Date***Analysis Date***Date of the Analysis");
        en.put(CASE_CW_POSITIVE, "Total of all positive CW***CW+***Total of all positive CW");
        en.put(GROUP_RESULT_CODE_VALID_VALID, "valid Code");
        en.put(AUDIT_DATA_REC_CORR_DEADLINE_ERROR, "No valid entry is found for the Data Record Correction Deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.");
        en.put(CARE_PERC_ADULT, "Total 1:1");
        en.put(EVENT_TYPE_INKA_CANCELLED, "INKA message cancelled***INKA message cancelled");
        en.put(RULES_7B_STUNDENWEISE_ERSATZPFLEGE, "7B - stundenweise Ersatzpflege");
        en.put(RULES_TEMP_113_AUFNAHMEUHRZEIT, "Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten");
        en.put(PROCESS_PREVIEW_DEADLINES, "Deadlines");
        en.put(INS_SHORT_KEH, "KEH");
        en.put(TEMPLATE_CATEGORY_SUB_FIRST, "1. Subcategory for a template");
        en.put(PROCESS_FINALISATION_LOS_INITIAL_TO, "Los initial to");
        en.put(RULES_TEMP_187_KLINIK_FALLANZAHL, "Format: Ganzzahlig (Beispiel 2)");
        en.put(CREATION_DATE_DOCUMENT, "Creation Date");
        en.put(RULES_TXT_CRIT_SOLE_HPN_DAK_DIS, "Hilfsmittel: Hilfsmittelpositionsnummer");
        en.put(RULES_CRIT_MRSA_DANTIST_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben für Zahnärzte zu einem Versicherten (SA 700)");
        en.put(INS_SHORT_HA_MUE, "HaMü");
        en.put(PROCESS_FINALISATION_RESULT_DELTA_TO, "Res. delta to");
        en.put(PROCESS_FINALISATION_DRG_INITIAL, "DRG initial***DRG initial***DRG / PEPP of the KIS version of the case that was initially assigned to this process.");
        en.put(BILLING_DATE_FROM, "Bill.-Date from");
        en.put(RULES_TXT_CRIT_ENTGELTABRECHNUNG_BIS_TOOLTIP_1, "Der letzte Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.");
        en.put(RISK_VALUE_TOTAL_EQUAL, "Risk in €");
        en.put(LOGIN_FAILED_NO_LICENSE, "There's no CPX license installed");
        en.put(MDK_PHONE_NO_VALIDATE, "Invalid Telephone No. Please provide valid entry.");
        en.put(RULES_ICD_BEDINGUNG_GEKENNZEICHNET_DURCH_DIAGNOSE_CODE_AUSPRAEGUNG_CHRONISCHE_ERKRANKUNG, "rueckenbeschwerde=ICD - Bedingung gekennzeichnet durch Diagnose Code Ausprägung chronische Erkrankung:Rückenbeschwerden");
        en.put(RULES_TXT_CRIT_ADM_DATE_FULL, "Aufnahmedatum_mit_Uhrzeit");
        en.put(NUMBER, "Number {0}");
        en.put(ANTIBIOGRAM_RESULT_RESISTENT, "resistent");
        en.put(DIALOG_BATCH_GROUPING_CWDIFFNEG, "CW-Difference negativ");
        en.put(SURCHARGE, "Surcharge");
        en.put(SAME_RULE_DIFFERENT_MESSAGE, "Same rule different validation result");
        en.put(RULES_CRIT_ACG_ARTHRITIS_CONDITION_DIS, "ACG: Arthritis vorhanden");
        en.put(GROUPER_OPS_RES_TYPE_SRG_INVALID_DATE, "SRG with conflict OPS date");
        en.put(RULES_TEMP_49_MPREIS, "Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)");
        en.put(RISK_AREA_OTHER, "Other");
        en.put(GENDER_SALUTATION_FEMALE, "Ms.");
        en.put(DIFFERENCE_DAYS, "Difference days");
        en.put(RULES_CRIT_ACG_ADG_VECTOR_DIS, "ACG: ADG-Vektor");
        en.put(BILL_NUMBER, "Bill number");
        en.put(BILL_TYPE_ENUM_CREDIT_STORNO, "credit/storno bill");
        en.put(RULES_TXT_CRIT_CARE_STATE_DIS, "Pflegestatus");
        en.put(LOGIN_FAILED_DATABASE_NO_RIGHT, "Role ''''{0}'''' has no permission for database {1}");
        en.put(SETTING_FREE_CACHE, "Free cache");
        en.put(RULES_TXT_CRIT_REMEDIES_NUMBER_DIS, "Heilmittel: Heilmittelpositionsnummer");
        en.put(CASE_DELTA_REVENUE_MINIMAL_FROM, "dRevenue min. from");
        en.put(RULES_GESAMTMPREIS, "GesamtMPreis");
        en.put(ROW_NUM_FROM, "Row Number von");
        en.put(RULES_GK_RSA_STATIONAEREHMGRELEVANTEDXG, "GK_RSA_StationaereHMGRelevanteDxG");
        en.put(RULES_CRIT_ACG_UNSCALED_PHARMA_CRI_TOOLTIP, "Kostenindex für zukünftige Medikamentenkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG vorbestimmtes Modell PRI für ApothekeN-Kosten. Die geschätzten Arzneimittelkosten für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0), wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalysen stellen Vergleiche zu den nationalen Normen zur Verfügung).");
        en.put(PROCESS_PREVIEW_DOC_DELIVER, "MD Document Deliver Deadline");
        en.put(RULES_CRIT_ACG_FRAILTY_FLAG_TOOLTIP_1, "Format: Alphanumerisch (Beispiel N)");
        en.put(TEXT_TEMPLATE_CASE_REPORT, "CaseReport Context");
        en.put(RULES_TEMP_1_HE_PREIS, "Die Kosten des Hilfsmittels.");
        en.put(CONFIRMATION_YES, "Yes");
        en.put(RULES_CRIT_ACG_LOW_BACK_PAIN, "acg_Rückenbeschwerden_vorhanden");
        en.put(RULES_HM_POSITIONSNUMMER, "hm_positionsnummer");
        en.put(RULES_TXT_CRIT_CASE_STR_5_DIS, "Fall.String05");
        en.put(GROUPER_OPS_RES_TYPE_SRG_INVALID_LOC, "SRG with conflict subsidiary risk label");
        en.put(VALIDATION_CATALOGDATA_NO_INSURANCES_EXISTS, "Catalog entry for this Insurance does not exists anymore!");
        en.put(PROCESS_FINALISATION_PROCEED, "Is the process still to be completed?");
        en.put(RULE_COLUMN_MESSAGE, "rule error***!***Indicator if the rule is erroneous or not");
        en.put(RULES_TEMP_193_KLINIK_VWD_STUNDEN, "Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.");
        en.put(RULES_CRIT_ACG_RENAL_FC, "acg_Niereninsuffizienz_vorhanden");
        en.put(RULES_CRIT_ACG_PHARMA_COST, "acg_Medi_Kosten");
        en.put(RULES_TEMP_124_ENTLASSUNGSUHRZEIT, "Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten");
        en.put(SAME_TABLE_OTHER_CONTENT, "Same rule table but other content is found in Pool");
        en.put(GENDER_MALE, "male");
        en.put(CATALOG_DRG_UNK_CW, "unc. CW {0}");
        en.put(LOGIN_FAILED_USERNAME_INVALID, "Name invalid");
        en.put(RULES_TEMP_140_ANZAHLPROZEDUREN, "Format: Ganzzahlig (Beispiel 2)");
        en.put(CASE_RESOLVE_ICD_UNCORRECTED_CW, "unc. CW");
        en.put(EVENT_TYPE_REQUEST_CREATED, "Request added: type {0}, Institution name: {1}, {2}***Created requests");
        en.put(RULES_TXT_PEPP_READM_SK, "SK");
        en.put(SAME_RULE_OTHER_CATEGORY, "Same rule with Ident but other rule category type is found in Pool");
        en.put(RULES_TXT_CRIT_RELEASE_DEPARTMENT_TOOLTIP_1, "Kodierung der entlassenden Fachabteilung nach §301(Siehe Anlage 1)");
        en.put(ADMISSION_BY_LAW_VOLUNTARY, "Voluntary");
        en.put(RULES_CRIT_DIS_TYPE_3_TOOLTIP_9, "6 - arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV");
        en.put(RULES_CRIT_DIS_TYPE_3_TOOLTIP_8, "5 - arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung");
        en.put(RULES_CRIT_DIS_TYPE_3_TOOLTIP_7, "4 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung");
        en.put(MENU_BATCH_GROUPING, "Batchgrouping");
        en.put(RULES_CRIT_DIS_TYPE_3_TOOLTIP_6, "3 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung");
        en.put(RULES_MENU_MASTER_DATES, "Stammdaten");
        en.put(DOCUMENTATION_RISK_FROM_RULES, "From Rules");
        en.put(RULES_CRIT_DIS_TYPE_3_TOOLTIP_5, "9 - keine Angabe");
        en.put(RULES_CRIT_DIS_TYPE_3_TOOLTIP_4, "2 - nicht arbeitsfähig");
        en.put(RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_5, "B(3) - Beidseitig");
        en.put(RULES_CRIT_DIS_TYPE_3_TOOLTIP_3, "1 - arbeitsfähig");
        en.put(RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_4, "L(2) - Links");
        en.put(RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_3, "R(1) - Rechts");
        en.put(TRANSFERRING, "Transferring");
        en.put(RULES_TEMP_31_DOSIERUNG, "Format: Fließkommazahl (Beispiel: 2.5)");
        en.put(SOME_FEACHERS_ARE_DEACTIVATED, "Some feachers are deactivated");
        en.put(RULES_KLINIK_ENTLASSUNGSDATUM, "Klinik_Entlassungsdatum");
        en.put(READONLY_DOC_ITEM_MD_RECOMENDATION, "MD Empfehlungen");
        en.put(MENU_USER_CHANGE_PROFILE_IMAGE, "Change profile image");
        en.put(AUTHORIZATION_DIALOG_MESSAGE, "Your active role {0} does not have the necessary permissions to ''''{1}''''.");
        en.put(ERROR_VERSION_COULD_NOT_CREATE, "A new version could not be created!");
        en.put(RULES_CRIT_ACG_ADG_CODES_TOOLTIP_1, "Format: Alphanumerisch (Beispiel 29)");
        en.put(OPS_PLACEHOLDER, "No procedures added");
        en.put(CASE_MERGING_JOB_STARTING, "Starting case merging");
        en.put(RULES_TXT_CRIT_CASE_STR_2_DIS, "Fall.String02");
        en.put(RISK_VALUE_TOTAL_FROM, "Risk in € from");
        en.put(RULES_CRIT_ACG_HEART_FC_CONDITION, "acg_Herzinsuffizienz_vorhanden");
        en.put(RULES_SEKDIAGNOSEPRIM, "SekDiagnosePrim");
        en.put(WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_ERROR, "The cancellation for workflow number {0} could not be canceled");
        en.put(AUDIT_USER_COMMENT, "User Comment");
        en.put(DOCUMENTATION, "Documentation");
        en.put(WORKINGLIST_FILTER_DIALOG, "Filter Dialog");
        en.put(DAYS_UNBILLED_DIALOG, "Unbilled days may not exceed the Length Of Stay(LOS)");
        en.put(LAB_DATA_METHOD, "Method***Method***Laboratory Method");
        en.put(RULES_TEMP_264_GK_RSA_QUARTALDIAGNOSENAMBULANT, "GK RSA:Ambulante Diagnosen Leistungsquartal");
        en.put(RULES_TEMP_164_KLINIK_PEPP, "Klinische Daten:Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik");
        en.put(LOCALISATION_BILATERAL, "both sides***b");
        en.put(LOGIN_FAILED_NO_DATABASE_SELECTED, "No database selected");
        en.put(PROCESS_FINALISATION_REVENUE_DIFF_FROM, "Revenue Diff from");
        en.put(WORKING_LIST_CONTEXT_MENU_DELETE, "Delete case");
        en.put(CASE_MERGING_CONDITION_TEN_PEPP, "New case***New case");
        en.put(VALIDATION_ERROR_INVALID_HOSPITAL_IDENT, "Hospitalidentifier is not valid!");
        en.put(RULES_TEMP_199_ARZNEIMITTEL, "GK RSA:PZN-Gesamtdosis");
        en.put(RULES_TEMP_51_PZNCODE, "Format: numerisch (Beispiel: 4114918)");
        en.put(MENU_BATCH_INFO_GROUPED, "cases to group: {0}");
        en.put(MSG_NO_RIGHT_BLANK, "You do not have right to {0} any {1}");
        en.put(CASE_TYPE_AMBU_OP, "Ambu OP");
        en.put(ADD_CASE_ADD_DEPARTMENT, "Add Department");
        en.put(RULES_GK_RSA_ERWERBSMINDERUNGSTAGE, "GK_RSA_Erwerbsminderungstage");
        en.put(RULES_04_SONSTIGE_ENTGELTE_ANLAGE, "04 - Sonstige Entgelte Anlage");
        en.put(RULES_71_PFLEGEGELD, "71 - Pflegegeld");
        en.put(RULES_TEMP_186_KLINIK_FALLANZAHL, "Klinische Daten: Die Summe der Fälle eines Patienten.");
        en.put(RULES_TEMP_123_ENTLASSUNGSTAG, "Format: DD");
        en.put(LOCALISATION_RIGHT, "right***r");
        en.put(RULES_TXT_OP_NOT_IN, "keine enthalten ( NOT IN )");
        en.put(RULES_TXT_CRIT_REMEDIES_NUMBER, "he_positionsnummer");
        en.put(VERSIONCONTROLL_VERSION_COMMENT, "Versioncomment");
        en.put(INSURANCE_TYPE, "Insurancetype");
        en.put(RULE_VALIDATION_SUGG_NO_VALUE, "suggestion is not complete");
        en.put(WIEDERVORLAGE_COMMENT_INFO, "The maximum number of characters allowed has been exceeded. 255 Chars is allowed");
        en.put(EVENT_TYPE_INKA_STORED, "INKA message stored***INKA message stored");
        en.put(RULES_CRIT_ACG_AGE_TOOLTIP_1, "Format: ganze Zahl (Beispiel 25)");
        en.put(RULES_TEMP_61_FALL_STRING_9, "Fall.String9");
        en.put(RULES_TXT_UNKNOWN, "Unbekannt");
        en.put(RULES_TEMP_134_URLAUB, "Format: Ganzzahlig (Beispiel 2)");
        en.put(ADD_CASE_REMOVE_DEPARTMENT, "Remove Department");
        en.put(ANTIBIOTIC_TIGECYCLIN, "Tigecyclin");
        en.put(FEE_GROUP_BEFORE_INPATIENT_ALONE_WITH_FINAL_INVOICE, "Before stationary (alone) (with final invoice)");
        en.put(RULES_TEMP_86_PFLEGETAGEDRG, "Pflegetage(DRG) ab 2020");
        en.put(RULES_CRIT_ACG_MEDC_TOOLTIP, "Haupt-Diagnosen-Cluster erweitert. Alle der MEDC-Codes für diesen Patienten. Die EDC Taxonomie gliedert sich in breite klinische Kategorien, genannt MEDCs.");
        en.put(CASE_DETAILS_STRING_10, "String 10");
        en.put(RULES_TXT_OP_MANY_IN_TABLE, "mehrere in Tabelle ( #@ )");
        en.put(RULES_CRIT_PCCL_TOOLTIP_10, "6 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016");
        en.put(RULES_TEMP_233_GK_RSA_GESCHLECHT, "GK RSA:Geschlecht");
        en.put(RULES_CRIT_ACG_PHARMA_COST_DIS, "ACG: Kosten für Medikamente");
        en.put(RULES_TEMP_244_GK_RSA_ELRLOESGESAMT, "GK RSA:Gesamterlöse aus dem RSA");
        en.put(LEVEL_ALL, "Alle Meldungen werden ungefiltert ausgegeben");
        en.put(CATALOG_DOWNLOAD_PROGRESS_PRIMING, "Priming...");
        en.put(GROUPER_STATUS_INVALID_ADM_DIS_REASON_MODE, "Invalid Admission Reason Mode");
        en.put(MDK_FAX_VALIDATE, "Invalid Fax No. Please provide valid entry.");
        en.put(PROCESS_LIST_DATE_FORMAT, "dd/MM/yyyy HH:mm:ss");
        en.put(RULES_TXT_CRIT_VOLUNTARY_DAYS_TOOLTIP_1, "Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen.");
        en.put(VALIDATION_ERROR_INVALID_MDK_NAME, "Mdk Name is not valid!");
        en.put(RULES_TXT_CRIT_AUX_DIAG_TYPE_DIS, "Nebendiagnose: Typ");
        en.put(WORKFLOW_CLOSE_AND_CREATE_REMINDER_NO_FILTER, "This function can only be used if the 'Reminder type' filter is set.");
        en.put(RULES_TEMP_242_GK_RSA_HMGANZAHL, "GK RSA:Anzahl der HMGs");
        en.put(RULES_TEMP_18_HM_GESAMTPREIS_ALLE, "Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.");
        en.put(COUNTRY_GERMANY, "Germany");
        en.put(RULES_CRIT_ACG_RESCALED_PHARMA_CRI, "acg_MediKostenIndexGewichtet");
        en.put(RULES_KLINIK_HAUPTDIAGNOSE, "Klinik_Hauptdiagnose");
        en.put(BILL_OPEN_ITEM_TEXT_DESC, "Text");
        en.put(RULES_DRG_MDC, "MDC");
        en.put(RULES_CRIT_ACG_ADG_VECTOR_TOOLTIP_1, "Format: Alphanumerisch (Beispiel ADG0000000000100000000000001000000000)");
        en.put(RULE_WL, "Rule Editor Working List");
        en.put(RULES_TEMP_220_GK_RSA_ARZTAUSGABEN, "GK RSA:Ausgaben für Ärzte");
        en.put(RULES_TXT_CRIT_CITY_DIS, "Wohnort");
        en.put(RULES_TEMP_239_ERLOESE, "GK RSA:Gesamterlöse aus dem RSA");
        en.put(CASE_RESOLVED, "Case resolved");
        en.put(MDK_CONTINUATION_FEE_PAID, "Continuation Fee Paid");
        en.put(FEE_GROUP_DRG, "DRG");
        en.put(DIALOG_BATCH_GROUPING_UNKCMI_TOOLTIP, "Average CW of all cases before correction with catalog data");
        en.put(RULES_TXT_CRIT_PSYCH_DAYS_INTENSIV, "Anzahl_Tage_Intensiv");
        en.put(BILLING_QUARTER, "Billing Quarter***Bill. Quarter");
        en.put(RULES_TXT_CRIT_ACCOUCHEMENT_DATE_1_TOOLTIP_1, "Tag der Geburt des Kindes (des ersten Kindes bei Mehrlingen).");
        en.put(RULES_TEMP_83_PFLEGETAGE, "Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.");
        en.put(REMINDER_FINISHED, "Reminder has been Finished***Finished reminders");
        en.put(DISCHARGE_REASON_INTERNAL_INSTALLATION_WITH_ALTERNATING_BETWEEN_THE_SCOPES, "Internal installation with alternating between the scopes");
        en.put(RULES_CRIT_ACG_UNSCALED_PHARMA_CRI_DIS, "ACG: Index Medikamentenkosten, ungewichtet");
        en.put(RULES_TXT_GROUP_PATIENT_MASTER_DATA_DIS, "Versicherten Stammdaten");
        en.put(RULES_HM_GESAMTMENGE, "hm_gesamtmenge");
        en.put(STATIONARY, "stationary");
        en.put(BILL_OPEN_ITEM_ACCOUNTS_RECEIVABLE_NO, "Accounts Receivable No.");
        en.put(INSURANCE_BILL_RECIVED, "Insurance Recived Bill Date");
        en.put(STATE_SAXONY, "Free State of Saxony");
        en.put(DEPARTMENT_MAIN_DIAGNOSIS_TOOLTIP, "DMD for department: {0}");
        en.put(ADMISSION_CAUSE_ADMISSION_AFTER_REHA, "Admission after prior treatment in a rehabilitation facility");
        en.put(DISCHARGE_REASON_TERMINATION_EXTERNAL_STAY_WITH_ABSENCE_THROUGH_MIDNIGHT, "Termination external stay with absence through midnight");
        en.put(RULES_TEMP_74_ABSCHLAGSTAGE, "Format: Ganzzahlig (Beispiel: 5)");
        en.put(VALIDATION_CATALOGDATA_NO_MDK_EXISTS, "Catalog entry for this md does not exists anymore!");
        en.put(RULES_TXT_CRIT_TIME_OF_STAY_IN_HOURS_DIS, "Verweildauer in Stunden");
        en.put(EDIT, "Edit");
        en.put(CASE_RESOLVE_RULES_TYPE, "Type");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_9, "%");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_8, "I.E.");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_7, "µg");
        en.put(PATIENT_NUMBER, "Patient Number***Pat.No.");
        en.put(EVENT_TYPE_CASE_REMOVED, "case with number {1} has been removed***Removed cases");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_6, "l");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_5, "g");
        en.put(PEPP_TEXT, "PEPP-Text");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_4, "ml");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_3, "mg");
        en.put(RESULT, "Ergebnis");
        en.put(LOGIN_ERROR_MESSAGE_SERVER, "No connection to Checkpoint X Server possible");
        en.put(PROCESS_STATUS_REMINDER_CLOSED, "closed");
        en.put(GROUPER_MDC_OR_SK_MDC_18_B, "Infectious and parasitic diseases***18B");
        en.put(DISCHARGE_REASON_COMPLETED_TREATMENT_AGAINST_MEDICAL_ADVICE, "completed treatment against medical advice");
        en.put(GROUPER_MDC_OR_SK_MDC_18_A, "HIV***18A");
        en.put(DELETE_REMINDER, "Do you really want to delete the reminder?");
        en.put(ORGAN_HEMATOLOGY, "Hematology");
        en.put(RULES_TEMP_183_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT, "Format: YYYYMMDD HH:mm");
        en.put(RULES_TEMP_173_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT, "Die Uhrzeit der Aufnahme wird mitberücksichtigt");
        en.put(RULES_TXT_CRIT_ADMISSION_DOC_TOOLTIP_1, "Kennzeichnung des einweisenden Arztes. Siehe Institutionskennzeichen IK.");
        en.put(ADMISSION_CAUSE_BIRTH, "Birth");
        en.put(RULES_CRIT_DRGPARTITION_TOOLTIP_5, "M - eine rein medizinische Behandlung ohne Eingriffe.");
        en.put(RULES_TEMP_54_ALTERINJAHREN, "Format: Ganzzahlig (Beispiel 50)");
        en.put(RULES_CRIT_DRGPARTITION_TOOLTIP_4, "A - eine nichtoperative, jedoch invasive Behandlung");
        en.put(RULES_TEMP_101_ENTGELTSUMME, "Format: Währung (Beispiel: 2200.55)");
        en.put(RULES_CRIT_DRGPARTITION_TOOLTIP_3, "O - operative Behandlung");
        en.put(DEPARTMENTS, "Departments");
        en.put(READONLY_DOC_ITEM_DKR_PEPP_FILE_NAME, "DKR-Psych_Version_");
        en.put(FILE_ARCHIVE_ERROR_CAN_NOT_ACCESS, "File {0} could not be archived, because there was a security error: {1}");
        en.put(DAY_MONDAY, "Monday***Mo");
        en.put(REVENUE_MATH_DRG_CARE_GRADE_LAYOUT_CARE_REVENUE, "for CareCW {0} (CW in day {1} x {2} days) ");
        en.put(FEE_GROUP_BEFORE_INPATIENT, "before inpatient");
        en.put(PATIENT_SEX_FEMALE, "Female");
        en.put(MDK_SUBSEQUENT_PROCEEDING_DATE_FORM, "Nsubsequent proceeding date from");
        en.put(CREATED_FROM, "from {0}");
        en.put(ANTIBIOTIC_TETRACYCLIN_DOXYCYCLIN, "Tetracyclin/Doxycyclin");
        en.put(RULES_11_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004, "11 - gesonderte Entgelte aus den Jahren 2003/2004");
        en.put(INSURANCE_NUMBER, "Insurance Number");
        en.put(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_DIS, "KH Medikament: Dosierung");
        en.put(CASE_RESOLVE_MD, "MD");
        en.put(RULES_TXT_OP_CONCATENATE, "verketten ( | )");
        en.put(CASE_RESOLVE_ICD_TEXT, "ICD-Text");
        en.put(RULES_TEMP_12_HE_VERORDNUNGSDATUM, "Datum, an dem das Hilfsmittel verordnet wurde.");
        en.put(VALIDATION_ERROR_NO_PATIENT_BIRTHDAY, "Enter patient birthday!");
        en.put(MDK_REPORT_CREATION_DATE_FROM, "Report Creation Date from");
        en.put(AUDIT_IDENT, "Insurance Ident");
        en.put(MENU_BATCH_GROUPING_DO_RULES, "with automatic Case Check");
        en.put(AUDIT_STATUS, "Status");
        en.put(RULES_TXT_CRIT_LABOR_DESCRIPTION_DIS, "Labor-Beschreibung");
        en.put(RULES_TXT_CRIT_ACCOUCHEMENT_DATE_2_DIS, "Tag der Entbindung2");
        en.put(ADMISSION_REASON_HOSPITAL_CARE_INPATIENT_WITH_EXPECTED_BEFORE_INPATIENT_TREATMENT, "Hospital care, inpatient with expected before inpatient treatment");
        en.put(MSG_CACHE_ALREADY_CLEAR, "Cache ist bereits geleert");
        en.put(RULES_VPS_DISCOVERED_FROM_TOOLTIP, "VPS: VPS - Fehler wurde festgestellt durch");
        en.put(PROCESS_DOES_NOT_EXIST, "Process does not exist");
        en.put(RULES_TEMP_209_AUSGABEN, "GK RSA:Ausgaben für Heil- und Hilfsmittel");
        en.put(MDK_USER_COMMENT, "User Comment");
        en.put(WORKFLOW_DEADLINE_MDK_AUDIT_COMPLETION_DEADLINE, "Deadline for completion of the MD audit");
        en.put(PCCL, "PCCL");
        en.put(RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_ATC_TOOLTIP_1, "Die Summe aller Mengen der Medikamente, bei denen ein ATC - Code eingetragen ist.");
        en.put(DATES, "Dates");
        en.put(RULES_TEMP_256_DIAGNOSENGRUPPEN, "GK RSA:Stationäre DxG");
        en.put(WORKFLOW_DEADLINE_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE_COMMENT, "Extract from § 9 PruefVV 2016: \"1 Within 6 weeks after receipt of the notifications according to §8 sentence 1 and 2, the hospital may propose a follow-up procedure based on the data and documents submitted to the end of the MD assessment to the health insurance by: a reasoned opinion on the performance-related decision of the health insurance is made in accordance with §8 sentence 1. 2 The implementation of the supplementary procedure is voluntary.\"");
        en.put(FEE_GROUP_DMP, "DMP");
        en.put(RULES_TEMP_84_PFLEGETAGE, "Format: Ganzzahlig (Beispiel 2)");
        en.put(RULES_CRIT_ACG_AGE, "acg_alter");
        en.put(MDK_START_AUDIT_TO, "Mdk Start Audit to");
        en.put(PROCESS_FINALISATION_READONLY_REASON, "The reason for this: {0}");
        en.put(LAB_DATA_TEXT, "Result value***Result value***Result value as text");
        en.put(RULES_KLINIK_PROZEDUR, "Klinik_Prozedur");
        en.put(ANTIBIOTIC_TRIMETHOPRIM_SULFONAMID, "Trimethoprim+Sulfonamid");
        en.put(EVENT_TYPE_PROCESS_SUBJECT_CHANGED, "Process subject changed***Changed process-subjects");
        en.put(RULES_TXT_CRIT_PATIENT_MASTER_DATA_AGE_DIS, "Versicherter: Alter");
        en.put(EXCEPTION, "Exception");
        en.put(RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        en.put(MDK_DOCUMENT_DELIVER_DEADLINE_ERROR, "No valid entry is found for the document deliver deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.");
        en.put(MDK_UPDATE_REQUEST_WINDOW, "Update a request (MD)");
        en.put(MDK_START_AUDIT, "Mdk Start Audit");
        en.put(CATALOG_DOWNLOAD_INSURANCE_COMPANYS, "Insurances");
        en.put(USE_TEMPLATE, "Template Usage");
        en.put(DRG_CASE_DAY_CARE, "DRG case with day care admission reason");
        en.put(RULES_TXT_CRIT_SEPARATION_DAY_TOOLTIP_1, "Tag der Entlassung aus stationärer Behandlung.");
        en.put(RULES_SUPERGROUP_GK_RSA_DIS, "GK RSA Prüfung");
        en.put(RULES_CRIT_ACG_AGE_DIS, "ACG: Alter");
        en.put(RULES_7F_KURZZEITPFLEGE_FUER_KINDER_IN_NICHTVERTRAGSEINRICHTUNGEN, "7F - Kurzzeitpflege für Kinder in Nichtvertragseinrichtungen");
        en.put(MDK_NAME_VALIDATE, "Invalid MD Name. Please provide valid entry.");
        en.put(DIALOG_BATCH_GROUPING_CMIEFF_TOOLTIP, "Sum of CW of all cases, after correction with catalog data");
        en.put(EVENT_OPERATION_CHANGE_ASSIGNED_USER, "Change assigned user");
        en.put(RULES_CRIT_ACG_PHARMA_COST_BAND, "acg_Medi_KostGruppe");
        en.put(CASE_FILE_FINALISATION, "Case File Finalisation");
        en.put(VERSION_RISK_TYPE_NOT_SET, "not set");
        en.put(INPUT_DATE_FROM, "From date");
        en.put(DURATION_DECLARATION, "Declaration");
        en.put(FLOWRATE_STATUS_TEXT, "Case details per second: {0}");
        en.put(RULES_TEMP_271_GK_RSA_KRANKHEITSGRUPPE, "GK RSA:Krankheitsgruppe");
        en.put(RULES_TXT_CRIT_FEE_SUM_TOOLTIP_1, "Gesamtbetrag aller Entgelte.");
        en.put(RULES_CRIT_ACG_PREGNANT_TOOLTIP_3, "1 - Patientin war schwanger während Beobachtungszeitraum");
        en.put(LAB_DATA_LOCK_DEL, "LockDel***LockDel***LockDel");
        en.put(RULES_TXT_CRIT_DEPARTMENT_DIS, "Fachabteilungsbewegung");
        en.put(RULES_TEMP_125_FALLNUMMER, "Fallnummer dient mit dem IK des Krankenhauses zur eindeutigen Bestimmung des Behandlungsfalls. Mit der Vergabe des KH-internen Kennzeichens muß die eindeutige Identifikation des Behandlungsfalls sichergestellt sein. Es ist in der Regel die fortlaufend vergebene Aufnahmenummer.");
        en.put(MS_EXCEL_VERSION, "The Microsoft Excel Version");
        en.put(FILTER_CASES_CANCEL_NOT, "All not canceled cases");
        en.put(CASE_MERGING_CONDITION_EIGHT_DRG, "Readmission via complication***RA via complication");
        en.put(TEMPLATE_CONFIRMATION_DIALOG, "confirmation dialog");
        en.put(PROCESS_PREVIEW_AUDIT_COMPLETION, "MD Audit Completion Deadline");
        en.put(DISCHARGE_DATE_BEFORE_ADMISSION_DATE, "Discharge date is set before the admission date");
        en.put(MENU_BATCH_GROUPING_DETAILS_FILTER_ALL, "all case versions");
        en.put(PROCESS_FINALISATION_CW_CARE_DIFF_FROM, "Care CW diff to");
        en.put(STATE_HESSE, "Hesse");
        en.put(MENU_BATCH_GROUPING_DO_HISTORY_CASES_TOOLTIP, "use rules for check of history cases for patient");
        en.put(EVENT_NAME_REQUEST, "Request");
        en.put(CATALOG_MENU_UPDATE, "Update catalogs");
        en.put(RULES_TEMP_231_GK_RSA_DMPTAGE, "GK RSA:DMP-Tage");
        en.put(MENU_BATCH_GROUPING_DO_RULES_SIMULATE, "with automatic Case Correction");
        en.put(RULES_TXT_CRIT_SEC_DIAG_DIS, "Sek. Diagnose");
        en.put(ACTION_ADDED_TOOLTIP, "See the details of an Action");
        en.put(RULE_CHECK_CODE_ERROR, "Error on validation of code {0}");
        en.put(RULES_KLINIK_ENTLASSUNGSUHRZEIT, "Klinik_Entlassungsuhrzeit");
        en.put(MDK_START_AUDIT_EXTENDED, "Mdk Start Audit Extended");
        en.put(GROUPER_STATUS_INVALID_AGE, "Invalid Age");
        en.put(CATALOG_DIALOG_CONFIRM, "Confirm");
        en.put(AUDIT_PROCESS_CREATION_DATE, "Process Creation");
        en.put(CASE_MERGING_DO_SAVE, "Save case");
        en.put(RULES_VPS_ERR_TEXT_DIS, "VPS: Fehlertext");
        en.put(RULES_10_DMP, "10 - DMP");
        en.put(RULES_PZNCODE, "PZNCode");
        en.put(DISCHARGE_DEPARTMENT_SHORT, "Discharge Department §. 301***Dis. 301***Discharge Department §. 301");
        en.put(INSURANCE_NAME, "Insurance name");
        en.put(DEPARTMENT_VALIDATION_ICD_COUNT_ERROR, "One or more diagnoses required");
        en.put(RULES_4_HAERTEFALL_PFLEGESTUFE_3, "4 - Härtefall (Pflegestufe 3+)");
        en.put(DATE_OF_ACCIDENT, "Date of Accident");
        en.put(RULES_TEMP_44_GESAMTATCDOSIERUNG, "Format: Fließkommazahl (Beispiel: 2.5)");
        en.put(RULES_TEMP_146_NEBENDIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        en.put(LOGIN_FAILED_CLIENT_ID_DOES_NOT_MATCH, "Passed Client ID {0} does not match with with session Client ID");
        en.put(RULES_TEMP_53_FALL_NUMERIC_6, "Fall.Numeric6");
        en.put(AUDIT_QUOTA_RESULT_QUARTER_YEAR_MDREQUEST, "Quarter / Year MD-Request ");
        en.put(FEE_GROUP_DAK_INTERNAL_CHARGES_WITHOUT_FINAL_INVOICE, "DAK internal charges without final invoice");
        en.put(RULES_ENTGELTSUMME, "EntgeltSumme");
        en.put(RULES_TEMP_214_AUSGABEN, "GK RSA:Mehrleistungen DMP");
        en.put(MODE_OF_ADMISSION_DEPARTMENT, "Departmenttype");
        en.put(JOB_LOCK_ERROR_DATABASE, "Database is locked by {0} because of {1} since {2}!");
        en.put(RULES_TXT_CRIT_BOTTOM_LENGTH_OF_STAY_TOOLTIP_1, "Laut DRG - Katalog festgelegte untere Grenzverweildauer für die ermittelte DRG. Bei Unterschreitung der unteren Grenzverweildauer wird (wiederum nach DRG - Katalog) ein Abschlag je Tag vom DRG - Entgelt abgezogen.");
        en.put(RULES_GESAMTPZNPREIS, "GesamtPZNPreis");
        en.put(PROCESS_FINALISATION_RESULTS, "Process results");
        en.put(REMINDER_LATEST_TO, "Reminder to");
        en.put(VALIDATION_ERROR_NO_DISCHARGE_DAY_DEPARTMENT, "Enter a discharge date for the department!");
        en.put(ADMISSION_MODE_SURGEON_MIDWIFE, "B-Sur./B-Mid.******Surgeon with Midwife");
        en.put(RISK_AREA_OTHER_FEE_SURCHARGE, "Other Fees and Surcharges");
        en.put(HOSPITAL_NAME, "Hospital Name");
        en.put(DIALOG_BATCH_GROUPING_NDI_TOOLTIP, "Secondary-Diagnosis-Index (average count of secondary diagnosis/case)");
        en.put(PROCESS_FINALISATION_READONLY_MESSAGE, "Process completion opens in read-only mode");
        en.put(DIALOG_BATCH_GROUPING_NINERDIAG_TOOLTIP, "Count of secondary diagnosis, which are coded with end digit of 9");
        en.put(ADMISSION_REASON_2_INDICATION_OF_EXTERNAL_VIOLENCE, "Recalling the action of external force");
        en.put(ADMISSION_DATE_TO, "Admission Date to");
        en.put(SAP_BILLS, "Bills");
        en.put(AGE_IN_DAYS_TO, "Age D. to");
        en.put(AUDIT_REMINDER_CREATE, "Reminder Create");
        en.put(RULES_TXT_CRIT_ZIP_CODE_TOOLTIP_1, "Die Postleitzahl des Wohnortes des Patienten.");
        en.put(VERSION_NUMBER_TO, "Versionsnumber from");
        en.put(GENDER_SALUTATION_UNKNOWN, "Mr./Ms.");
        en.put(RULES_TXT_CRIT_LABOR_DATE_DIS, "Datum der Untersuchung");
        en.put(EXTERNAL_OCCUPANCY, "External Occupancy");
        en.put(ORGAN_EYES, "Eyes");
        en.put(WORKFLOW_SUBJECT, "Subject");
        en.put(RULES_TEMP_188_KLINIK_FALLKOSTEN, "Klinische Daten: Gesamtkosten enes Falls");
        en.put(LOGIN_FAILED_CLIENT_ID_MISSING, "No Client ID passed");
        en.put(HOSPITAL_IDENTIFIER, "Hospital*** ***Identifier of hospital");
        en.put(SECONDARY_DIAGNOSES, "Secondary diagnosis***SD");
        en.put(CASE_CARE_CWMINIMAL, "CareCW minimal***CW cre. min.***Minimum care CW value determined by the validation rules for this case.");
        en.put(RULES_TXT_CRIT_TRANSFER_DAY_TIME_DIS, "Verlegungsuhrzeit");
        en.put(DIALOG_BATCH_GROUPING_PCCL, "PCCL");
        en.put(MODIFICATION_DATE, "Modification Date");
        en.put(RULES_SUPERGROUP_MRSA_DIS, "Morbi RSA");
        en.put(INS_SHORT_DAK, "DAK");
        en.put(USERS, "Users");
        en.put(RULES_VERSICHERTER_POSTLEITZAHL, "Versicherter_Postleitzahl");
        en.put(EXTERN_VERSIONS, "HIS-Versions");
        en.put(GROUPER_MDC_OR_SK_PSYCHOSOMATIC_DAY_CARE, "Psychosomatics, day patient***TPO");
        en.put(RULES_BEHANDELNDEFACHABTEILUNG, "BehandelndeFachabteilung");
        en.put(COUNTRY_AUSTRIA, "Austria");
        en.put(RULES_TEMP_79_ABSCHLAGS_CW, "Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)");
        en.put(MDK_BILL_CORRECTION_DEADLINE, "Bill Correction Deadline");
        en.put(RULES_GK_RSA_EMG, "GK_RSA_EMG");
        en.put(RULES_GROUP_DRGS_DATA_HOSP_DATA_TOOLTIP, "DRG-Ergebnisse");
        en.put(RULES_HAUPTDIAGNOSELOKALISATION, "HauptdiagnoseLokalisation");
        en.put(BILL_OPEN_ITEM_COMPANY_CODE, "Company code");
        en.put(RULES_CRIT_MRSA_HOSP_DISEASE_NUMBER_TOOLTIP, "Krankheitsgruppe,  die anhand einer ICD von einem Krankenhaus kodiert worden ist");
        en.put(ANTIBIOTIC_VANCOMYCIN, "Vancomycin");
        en.put(JOBS, "Jobs");
        en.put(PROCESS_FINALISATION_REVENUE_FINAL, "Revenue Final");
        en.put(BILL_OPEN_ITEM_AMOUNT_IN_LOCAL_CURR, "Amount In Local Curr.");
        en.put(FEE_GROUP_SPECIAL_INSTITUTIONS_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "Special institutions without final invoice and without Discharge");
        en.put(RULES_TEMP_120_ENTLASSUNGSDATUM_MIT_UHRZEIT, "Format: YYYYMMDD HH:mm");
        en.put(RULES_TXT_CRIT_PATIENT_MASTER_DATA_CARE_STATE_DIS, "Versicherter: Versichertenstatus");
        en.put(VERSIONCONTROLL_CREATE_NEW_VERSION, "create Version");
        en.put(INITIATION_TEST_PROCESSES_FROM, "Initiation test processes from");
        en.put(PROCESS_PREVIEW_REQUEST_TYPE, "Request type");
        en.put(RULES_HM_VERORDNUNGSDATUM, "hm_verordnungsdatum");
        en.put(RULES_DRG, "DRG");
        en.put(RULES_TXT_CRIT_CLINIC_DISCH_TIME_DIS, "Klinik: Entlassungsuhrzeit");
        en.put(ACTION_REMOVED_TOOLTIP, "This Action is removed");
        en.put(COUNT_PROC_FROM, "∑ OPS from");
        en.put(DIALOG_BATCH_GROUPING_GROUPEDCASES_TOOLTIP, "gegroupte Fälle");
        en.put(REQUEST_CREATE, "create Request");
        en.put(CONFIRMATION_DEFAULT_TEXT, "Do you really want to do this action?");
        en.put(ADMISSION_REASON_FREE, "free");
        en.put(WORKFLOW_LIST, "Workflow List");
        en.put(DAILY_FEE_MATH_PEPP, "CW ({0}) X ({1}) Days X Baserate ({2}) from {3} to {4} ");
        en.put(RULES_CRIT_ACG_CONDITION_TOOLTIP_5, "RX - Erkrankung identifiziert durch ATC-Codes");
        en.put(RULES_CRIT_ACG_CONDITION_TOOLTIP_3, "BTH - Erkrankung identifiziert durch ICD-und ATC-Codes");
        en.put(RULES_CRIT_ACG_CONDITION_TOOLTIP_2, "NP - Zustand nicht vorhanden");
        en.put(RULES_VPS_ERR_CODE_DIS, "VPS: Fehlercode");
        en.put(NO_CATEGORY, "No category");
        en.put(BEGE_EDITOR, "Contact person");
        en.put(VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_SUB_CATEGORY_2_FOUND, "No Drafttypes for 2. Subcategory available in catalogdata!");
        en.put(GROUPER_MDC_OR_SK_PSYCHO_DAY_CARE, "Psychiatry, day patient***TPY");
        en.put(RULES_TXT_CRIT_SEPARATION_DAY_DIS, "Entlassungstag");
        en.put(ADMISSION_CAUSE_EMERGENCY, "Emergency");
        en.put(VERSION_RISK_TYPE_BEFORE_BILLING, "By Billing");
        en.put(LOGIN_FAILED_NO_VALID_LICENSE, "CPX License is expired. The License was valid till {0}");
        en.put(RULES_CRIT_ACG_HYPERLIPIDEMIA, "acg_Fettstoffwechselstörungen_vorhanden");
        en.put(INPUT_DATE_ERROR, "{0} no correct date");
        en.put(ADD_CASE_BILLS, "bills");
        en.put(RULES_72_HAEUSLICHER_BERATUNGSEINSATZ, "72 - häuslicher Beratungseinsatz");
        en.put(CASE_DELTA_REVENUE_MAXIMAL_FROM, "dRevenue max. from");
        en.put(ANTIBIOTIC_TOBRAMYCIN, "Tobramycin");
        en.put(RULES_TXT_CRIT_WEIGHT_DIS, "Gewicht");
        en.put(ICD_TYPE_WORK, "Work");
        en.put(OPEN_CASES, "Open cases");
        en.put(RULES_TEMP_114_BEATMUNGSDAUER, "Format: Ganzzahlig (Beispiel 30)");
        en.put(RULES_TXT_CRIT_REDUCTION_DAYS_DIS, "Abschlagstage");
        en.put(GROUPER_OPS_RES_TYPE_NOR_OPS, "NonOR procedure");
        en.put(COUNT_SD, "Count of secondary diagnoses***∑ SD");
        en.put(AUDIT_REQUEST_DATE, "Request Date");
        en.put(RULES_TEMP_48_GESAMTPZNPREIS, "Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)");
        en.put(RULES_TEMP_243_GK_RSA_EMG, "GK RSA:EMG");
        en.put(RULE_TABLE_HAS_ERRORS, "rule table has a validation error");
        en.put(RULES_GK_RSA_VERSICHERTENTAGE, "GK_RSA_Versichertentage");
        en.put(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_9, "So(0) - Sonntag");
        en.put(ADMISSION_REASON_2_REGULAR_CASE, "Regular case");
        en.put(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_8, "Sa(6) - Samstag");
        en.put(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_7, "Fr(5) - Freitag");
        en.put(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_6, "Do(4) - Donnerstag");
        en.put(DURATION_TO, "to");
        en.put(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_5, "Mi(3) - Mittwoch");
        en.put(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_4, "Di(2) - Dinstag");
        en.put(MDK_START_AUDIT_EXTENDED_FROM, "Mdk Start Audit Extended from");
        en.put(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_3, "Mo(1) - Montag");
        en.put(LAB_DATA_VALUE_2, "result value 2***result value 2***result value 2");
        en.put(EVENT_OPERATION_CREATE_ITEM, "Create {0}");
        en.put(CATALOG_DOWNLOAD_DEPARTMENTS, "Departments");
        en.put(RULES_TXT_CRIT_REMEDIES_FULL_COUNT_DIS, "Heilmittel: Gesamtmenge für Heilmittelpositionsnummer");
        en.put(REMINDER_EXPIRED_TOOLTIP, "See the details of a Reminder");
        en.put(RULES_TXT_INTERVAL_CUR_CASE, "Aktueller Fall");
        en.put(PROCESS_START_DATE_FROM, "Start date from");
        en.put(EVENT_TYPE_INKA_UPDATED, "INKA message updated***INKA message updated");
        en.put(RULES_TEMP_79_PFLEGECWTAG, "Pflegeerlös Bewertungsrelation/Tag");
        en.put(RULES_TXT_CRIT_PATIENT_MASTER_DATA_GENDER_DIS, "Versicherter: Geschlecht");
        en.put(RULES_CRIT_ACG_FRAILTY_FLAG_TOOLTIP, "Kennzeichen für jedes der 11 Cluster, die für diagnostische diskreten Bedingungen im Einklang mit Gebrechlichkeit stehen (z.B . Mangelernährung, Demenz, Inkontinenz, Schwierigkeiten beim Gehen)");
        en.put(CASEFEE_DAYSOFF, "Days without Calculation");
        en.put(VALIDATION_ERROR_NO_ADMISSION_DAY_DEPARTMENT, "Enter a admission date for the department!");
        en.put(CASE_MERGING_CONDITION_NINE_PEPP, "Summary***Summary");
        en.put(CASE_TYPE, "Case Type***Case Type");
        en.put(RULES_TXT_CRIT_MEDICAMENT_PRICE_TOOLTIP_1, "Der Preis eines Medikamentes.");
        en.put(TEXTTEMPLATES, "texttemplates");
        en.put(ACG_AGE_BAND_80_84, "80-84");
        en.put(VALIDATION_ERROR_OPS_DATE_INDEX, "Some procedures at index {0} do not have a execution date!");
        en.put(CASE_DATA, "Case data");
        en.put(RULES_TEMP_7_HE_GESAMTPREIS, "Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.");
        en.put(RULES_HM_MENGE, "hm_menge");
        en.put(RULES_TEMP_9_HE_POSITIONSNUMMER, "Pharmazentralnummer für Hilfsmittel");
        en.put(CASE_MERGING_CONDITION_FIVE_PEPP, "Both same PEPP***Both same PEPP");
        en.put(SERVICE, "Service");
        en.put(RULES_TEMP_66_ENTLASSENDEFACHABTEILUNG, "Format: Ganzzahlig (Beispiel 1500)");
        en.put(CASE_MERGING_CASE_LEADING, "Leading case");
        en.put(JOB_STATUS_COMPLETED, "completed");
        en.put(RULES_TEMP_55_FALL_NUMERIC_8, "Fall.Numeric8");
        en.put(MDK_START_AUDIT_QUARTER, "Quartal Einleitung MD-Prüfung");
        en.put(CASE_MERGING_CONDITION_FOUR_PEPP, "Same SK***Same SK");
        en.put(FEE_GROUP_SEPARATE_CHARGES, "separate charges");
        en.put(FEE_GROUP_DAK_INTERNAL_CHARGES_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "DAK internal charges without final invoice and without Discharge");
        en.put(PROCESS_NUMBER, "Process No.");
        en.put(REPORT_GENERATE, "Create report");
        en.put(RULES_TXT_CRIT_LABOR_TEXT_DIS, "Labortext");
        en.put(FEE_PLACEHOLDER, "no fees added");
        en.put(ADMISSION_DATE_FROM, "Admission Date from");
        en.put(ACG_INDEX_TYPE_ICD, "Diagnosis");
        en.put(RULES_VERSICHERTER_PFLEGESTUFE, "Versicherter_Pflegestufe");
        en.put(TEMPLATE_WAIT_NOTIFICATION_TEXT, "Word Document will be generated from selected draft {0} and opened afterwards!");
        en.put(RISK_EDITOR_RISK_WASTE_DEFAULT_VALUE, "Deficit-Value***D.-V.***Value, which is used for computing lost money when no suggestion is set in rule");
        en.put(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_PZN_TOOLTIP_1, "Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein PZN - Code eingetragen ist.");
        en.put(RULES_TEMP_201_GK_RSA_ATCCODE, "GK RSA:ATC-Code");
        en.put(VALIDATION_ERROR_NO_ADMISSION_DAY_CASE, "Enter a admission date for the case!");
        en.put(RULES_TXT_CRIT_CLINIC_ADM_DATE_DIS, "Klinik: Aufnahmedatum");
        en.put(PATIENT_DATA, "Patient Data");
        en.put(DETAILED_VIEW_MAIN_LABEL, "Details about selected event");
        en.put(INSURANCE_COMPANY, "Insurance Company***Insurance Comp.***Insurance Company");
        en.put(RULES_TEMP_29_ATCCODE, "Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04");
        en.put(COUNT_PROC, "Count of procedures***∑ OPS");
        en.put(RULES_GROUP_PEPPS_DATA_HOSP_DATA_TOOLTIP, "PEPP-Ergebnisse");
        en.put(EVENT_NAME_INKA, "INKA Message");
        en.put(CANCEL_GROUPING, "cancel Grouping");
        en.put(JOB_STATUS_FAILED, "failed");
        en.put(NUMBER_FORMAT_DECIMAL, ".");
        en.put(RULES_CRIT_LOSLESS_24H_TOOLTIP_4, "1 - Verweildauer < 24");
        en.put(RULES_CRIT_LOSLESS_24H_TOOLTIP_3, "0 - Verweildauer >= 24");
        en.put(NO_ADMISSION_MODE_FOUND, "Admission mode is not set");
        en.put(GROUP_RESULT_NO_RESULT, "There are no Grouperresults!");
        en.put(RULES_TEMP_142_DIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        en.put(FILTER_NO, "no filter");
        en.put(RISK_AREA_SECONDARY_MISALLOC, "Secondary misallocation (Length of stay)");
        en.put(RULES_TXT_CRIT_CW_CATALOG_DIS, "Kostengewicht Katalog");
        en.put(LAB_DATA_BENCHMARK, "Benchmark***Benchmark***Benchmark (too high, too low)");
        en.put(WORKING_LIST_UPDATE, "update the Working List ");
        en.put(RULES_GK_RSA_HMGANZAHL, "GK_RSA_HMGAnzahl");
        en.put(RULES_TXT_CRIT_CW_EFFECTIV_DIS, "Kostengewicht effektiv");
        en.put(PATIENT_DETAILS, "Patient Details");
        en.put(ACG_INDEX_TYPE_BTH, "Diagnosis & Drugs***Both");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_33, "mPa*s");
        en.put(ADMISSION_WEEKDAY, "Admission Date Weekday***Adm. Day");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_32, "Mio.-Keime");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_31, "Keime");
        en.put(RULES_TXT_LIST_CHANGE, "Ändern");
        en.put(ORGAN_KIDNEY, "Kidney");
        en.put(AGE, "Age");
        en.put(EVENT_OPERATION_REMOVE_ITEM, "Remove {0}");
        en.put(DISCHARGE_REASON_DISMISSAL_IN_A_REHABILITATION_FACILITY, "Dismissal in a rehabilitation facility");
        en.put(RULES_CRIT_ACG_TOTAL_COST_BAND_DIS, "ACG: Gesamt Kosten Gruppe");
        en.put(DOCUMENT_ADDED_TOOLTIP, "Open this Document");
        en.put(MESSAGE_CASE_HAS_NO_DISCHARGE_DATE, "The case does not have a discharge date");
        en.put(GENDER, "Gender");
        en.put(RULES_CRIT_ACG_AGE_BAND_DIS, "ACG: Altersgruppe");
        en.put(RULES_TXT_CRIT_ENTGELTEINZELBETRAG_TOOLTIP_1, "Der einzelne Betrag eines Entgeltschlüssels.");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_29, "pg");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_28, "nl");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_27, "Ph.Eur.-E.");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_26, "µl");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_25, "cm¢2");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_24, "Aerosolstoß");
        en.put(MENU_BATCH_GROUPING_DETAILS_FILTER_ACTUAL_LOCAL, "current local case versions");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_23, "Sprühstoß");
        en.put(ADD_CASE_EDIT_ICD_OPS_DESCRIPTION, "Add and edit diagnoses and procedures for the stay in the department");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_22, "g (MW)");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_21, "mg (MW)");
        en.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_9, "G - Geburt");
        en.put(AUDIT_ADDRESS, "Address");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_20, "MSE");
        en.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_8, "K - Verlegung (Aufnahme) aus einem anderen Krankenhaus i.R.e. Kooperation");
        en.put(RULES_TXT_OP_LT_EQUAL, "kleiner gleich ( <= )");
        en.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_6, "R - Aufnahme nach vorausgehender Behandlung in einer Rehaeinrichtung");
        en.put(RULES_23_PFLEGEHILFSMITTEL, "23 - Pflegehilfsmittel");
        en.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_5, "N - Notfall");
        en.put(RULES_TEMP_168_KLINIK_ENTGELTBETRAG, "Format: Währung (Beispiel: 57.52)");
        en.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_4, "Z - Einweisung durch Zahnarzt");
        en.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_3, "E - Einweisung durch Arzt");
        en.put(ACG_INDEX_TYPE_RX, "Drugs***Rx supplements are prescription or prescription medications");
        en.put(RULES_TXT_CRIT_PATIENT_MASTER_DATA_ZIPCODE_DIS, "Versicherter: Postleitzahl");
        en.put(BILL_DATE, "Bill date");
        en.put(DAYS_CALCULATED, "Days calculated");
        en.put(PROCESSES, "Processes");
        en.put(PROCESS_CREATION_TITLE, "Create a new Process");
        en.put(RULES_TEMP_91_KOSTENGEWICHT_EFFEKTIV, "Kostengewicht für DRG - Fälle (DRG + Erbringungsart) + Zuschlags_CW oder - Abschlags_CW .");
        en.put(RULES_7D_BEREUNGSLEISTUNG_GRUNDBETRAG, "7D - Bereungsleistung Grundbetrag");
        en.put(CASE_DOES_NOT_EXIST, "Case does not exist");
        en.put(RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_2, "Format: Ganzzahlig (Beispiel 50)");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_19, "ng");
        en.put(RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_1, "Das tatsächliche Alter des Patienten.");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_18, "Mio E.");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_17, "%V/V, mmol");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_16, "Gew.-%");
        en.put(REVENUE_MATH_DRG_CORR_SURCHARGE_LAYOUT, "Surcharge: (DRG-Baserate {0}{1} x corr.CW {2}) x corr.Day(s) {3}");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_15, "Vol.-%");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_14, "BE");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_13, "Mio.I.E.");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_12, "FIP.-E.");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_11, "µmol");
        en.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_10, "E.");
        en.put(WORKING_LIST_CONTEXT_MENU_UNLOCK_ERROR, "Case {0} could not be unlocked!");
        en.put(ADD, "Add");
        en.put(FILTER_REMEINDER_OPEN, "All opened");
        en.put(GROUPER_OPS_RES_TYPE_SRG, "SRG (neither OR nor NonOR procedure)");
        en.put(EVENT_TYPE_REQUEST_UPDATED, "Request changed: Typ {0}, Institutionsname: {1}, {2}***Changed requests");
        en.put(PROCESS_FINALISATION_SUPPLFEE_DIFF_TO, "Supplfee diff to");
        en.put(CASE, "Case");
        en.put(RULES_TXT_CRIT_RECHNUNG_DATUM_DIS, "Rechnungsdatum");
        en.put(PEPP_PAY_TYPE_COMPENSATION_CLASS, "Compensation Class");
        en.put(RULES_GESAMTATCPREIS, "GesamtATCPreis");
        en.put(INSURANCE_DATA, "Insurance Data");
        en.put(RULES_73_PFLEGE_BEI_VERHINDERUNG_DER_PFLEGEPERSON, "73 - Pflege bei Verhinderung der Pflegeperson");
        en.put(DAYS_UNBILLED_DIALOG_CONFIRM, "Information");
        en.put(IS_NOT_SUPPORTED, "is not supported:");
        en.put(MDK_AUDIT_REASONS, "Audit Reasons***Audit Reasons***Audit reasons used in the context of a request.");
        en.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_9, "07 - Wiederaufnahme wg. Komplikation (Fallpauschale)");
        en.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_8, "06 - Geburt");
        en.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_7, "05 - stationäre Entbindung");
        en.put(MDK_EMPTY_MDK_DATA_DIALOG, "Either request was created without selecting any MD or selected MD was deleted after creating this MD request. Please select required MD.");
        en.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_6, "04 - Krankenhausbehandlung ohne anschl. stationäre Behandlung");
        en.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_5, "03 - Krankenhausbehandlung teilstationär");
        en.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_4, "02 - Krankenhausbehandlung, vollstationär mit voraus. vorstat. Behandlung");
        en.put(CASEFEE_FROM, "Billing from");
        en.put(ORGAN_TEETH, "Teeth");
        en.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_3, "01 - Krankenhausbehandlung, vollstationär");
        en.put(RULES_CRIT_ACG_PROBABILITY_HIGH_TC, "acg_GesamtTop5");
        en.put(PATIENT_CASES, "Patient cases");
        en.put(PATIENT_SEX_UNKNOWN, "Unknown");
        en.put(DOCUMENTATION_NO_RISK_CONTENT, "No Risk Area Selected");
        en.put(INPUT_NUMBER_FROM, "From");
        en.put(RULE_COLUMN_NUMBER, "rule number***rule number***rule number");
        en.put(RULES_TXT_CRIT_ENTGELTABRECHNUNG_VON_TOOLTIP_1, "Der erste Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.");
        en.put(MDK_COMMENT, "Mdk Comment");
        en.put(RULES_TXT_GROUP_SOLE_DAK_DIS, "Hilfsmittel");
        en.put(SUPPL_FEE_VALUE_PEPP, "SP-Value");
        en.put(CASE_MERGING_CONDITION_SEVEN_PEPP, "1.Fall aus vorletztem Jahr***1.Fall aus vorletztem Jahr");
        en.put(DISCHARGE_REASON_TRANSFER_TO_ANOTHER_HOSPITAL, "Transfer to another hospital");
        en.put(AUDIT_ANS_DEADLINE, "Audit Answer Deadline");
        en.put(RULES_TXT_CRIT_TRANSFER_DATE_TOOLTIP_1, "Datum des letzen Tages in der vorhergehenden Fachabteilung .");
        en.put(REMINDER_FINISHED_DATE, "Finished Date");
        en.put(CASE_RESOLVE_RULES_DELTA_CHARGE, "dCharge");
        en.put(RULES_TXT_CRIT_WEIGHT_TOOLTIP_1, "Das Aufnahmegewicht eines Kindes unter einem Jahr in Gramm.");
        en.put(VERSIONCONTROLL_HINT_ENTER_COMMENT, "Please enter a Comment!");
        en.put(DAILY_FEE, "Daily Fee");
        en.put(MENU_USER_LOGIN_STATUSTEXT, "logged in since {0}");
        en.put(RULES_NEBENDIAGNOSETYPE, "NebendiagnoseType");
        en.put(RULES_TXT_CRIT_CLINIC_ADM_DATE_FULL, "Klinik_Aufnahmedatum_mit_Uhrzeit");
        en.put(RULE_TYPE_IMPORTED, "rule type imported");
        en.put(CATALOG_DOWNLOAD_TITLE, "CPX is loading...");
        en.put(RULES_TXT_CRIT_CLINIC_CASE_COST, "Klinik: Fallkosten");
        en.put(UPDATED_TO, "last Modification to");
        en.put(REMINDER_MODE_SHOW_CLOSED, "Closed reminders");
        en.put(PROCESS_PREVIEW_CASE_NO, "Case No.");
        en.put(RULES_TXT_CRIT_REDUCTION_CW_DIS, "CW Abschlag");
        en.put(MENU_BATCH_GROUPING_DO_FOR_ACTUAL_ROLE_ONLY, "Save Results for current Role");
        en.put(DIAGNOSIS_REF_TYPE_ASTERISK_FROM, "Asterisk diagnose from");
        en.put(WARD, "Ward");
        en.put(GENDER_SALUTATION_MALE, "Mr.");
        en.put(RULES_GK_RSA_KRANKHEITSGRUPPE, "GK_RSA_Krankheitsgruppe");
        en.put(RULES_KLINIK_IKZ, "Klinik_IKZ");
        en.put(DIFFERENCE, "Difference");
        en.put(RULES_TXT_CRIT_NO_CRIT_TOOLTIP, "kein Kriterium");
        en.put(ADMISSION_DATE, "Admission Date***Adm.-Date");
        en.put(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_ERROR, "Case {0} could not be deleted! Try again or check server logs for errors.");
        en.put(RULES_TEMP_179_KLINIK_ENTLASSUNGSDATUM, "Die Uhrzeit der Entlassung wird nicht berücksichtigt");
        en.put(MDK_START_AUDIT_EQUAL, "Mdk Start Audit");
        en.put(RULES_TXT_CRIT_SEC_DIAG_PRIM_DIS, "Sek. Diagnose: Primär");
        en.put(RULES_TEMP_52_MVERORDNUNGSDATUM, "Format: YYYYMMDD");
        en.put(ACG_INDEX_TYPE_NP, "Not presend");
        en.put(CASE_MANAGEMENT_WARNING_CHANGE_LOCALISATION, "Changing the localisation will result in the creation of an new Icd! Are you sure?");
        en.put(RULES_TXT_CRIT_ENTGELTSUMMEJEENTGELT_TOOLTIP_1, "Die Summe aller Beträge eines Entgeltschlüssels.");
        en.put(MENU_BATCH_GROUPING_SETTINGS, "Settings");
        en.put(RULES_TXT_GROUP_PSYCH_DIS, "Psych-Kriterien");
        en.put(PLACE_OF_REG_BEFORE_BILLING, "Before Billing");
        en.put(RULES_CRIT_ACG_HYPERTENSION, "acg_Bluthochdruck_vorhanden");
        en.put(MDK_EXTENDED_AUDIT_REASONS, "Extended Audit Reasons");
        en.put(SYSTEM_INFO_RECOMMENDED_JAVA_VERSION_TEXT, "(recommended is {0} or higher!)");
        en.put(RULES_TEMP_176_KLINIK_AUFNAHMEUHRZEIT, "Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten");
        en.put(RULES_CRIT_ACG_PROBABILITY_HIGH_PC, "acg_MediTop");
        en.put(RULES_TEMP_165_KLINIK_PEPP, "Format: Aplhanumerisch (Beispiele P003B, TK04Z)");
        en.put(CREATED_ON, "Created on {0}");
        en.put(CATALOG_DIALOG_REMOVE_ALL, "Remove all");
        en.put(READONLY_DOC_ITEM_HELP, "Handbuch");
        en.put(FEE_GROUP_DMP_WITHOUT_FINAL_INVOICE, "DMP without final invoice");
        en.put(FIRST_NAME, "First Name");
        en.put(RULES_TEMP_39_PZNCODE, "Format: numerisch (Beispiel: 4114918)");
        en.put(FEE_GROUP_SPECIAL_FACILITIES_WITHOUT_FINAL_INVOICE, "Special facilities without final invoice");
        en.put(MDK_NAME, "MD Name");
        en.put(HOSPITAL, "Hospital");
        en.put(RULES_26_SONSTIGE_ENTGELTE_ANLAGE_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "26 - Sonstige Entgelte Anlage ohne Schlussrechnung und ohne Entlassungsanzeige");
        en.put(PROCESS_FINALISATION_CW_FINAL_TO, "CW final to");
        en.put(RULES_TEMP_88_GROUPERRELEVANTEDIAGNOSE, "Diagnose, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Diagnose, Hauptdiagnose, Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.");
        en.put(DIALOG_BATCH_GROUPING_KORRTRANS_TOOLTIP, "Count of cases, which CW differs from catalog value due to lower MTP on admission- or discharge reason \"Transferring\"");
        en.put(CASE_RESOLVE_KIND, "Kind");
        en.put(CATALOG_DIALOG_REMOVE, "Remove");
        en.put(FEE_GROUP_PARTIAL_PAYMENT_WITHOUT_FINAL_INVOICE_WITHOUT_DISMISSAL, "Partial payment (without final invoice / without dismissal)");
        en.put(QUOTA_LIST, "Quota List");
        en.put(RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM, "Format: YYYYMMDD");
        en.put(NO_DEPARTMENT_CODED, "There are no departments in case coded");
        en.put(GROUP_RELEVANT_CODE_FOR_DRG_PEPP_MAPPING_USED_EXCEPT_TO_SATISFY_THE_TEMPORAL_AND_OR_LOGIC_CONDITION_WITHIN_AN_OPD_CONSTRUCT, "For the DRG / PEPP mapping used, except to satisfy the temporal and / or logic condition within an OPD construct");
        en.put(WORKFLOW_DEADLINE_CONTINUATION_FEE_DEADLINE_COMMENT, "Extension of the deadline, after payment of the continuation fee, up to which the requested documents must be submitted to the MD");
        en.put(RULES_TXT_CRIT_ENTGELTSUMMEJEENTGELT_DIS, "Entgeltsumme je Entgelt");
        en.put(PROCESS_FINALISATION_SAVED_MONEY, "Saved money***Saved money in €***Saved money set in process finalisation. This value is computed via risk documentation for the base case or is set manually by the user.");
        en.put(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_PROCESSES, "This case is assigned to the following processes: {0}");
        en.put(PROCESS_FINALISATION_SUPPLFEE_INITIAL_TO, "Supplfee initial to");
        en.put(CASE_DELTA_REVENUE_MAXIMAL_TO, "dRevenue max. to");
        en.put(CASE_MERGING_TABLE_PLACEHOLDER, "No merged cases determined");
        en.put(RULES_TEMP_223_GK_RSA_EXTBLUTREINIGUNGAUSGABEN, "GK RSA:Sachkosten bei extrakorporaler Blutreinigung");
        en.put(RULES_GK_RSA_SOLEASUGABEN, "GK_RSA_SoLeAsugaben");
        en.put(RULES_30_IV_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "30 - IV ohne Schlussrechnung und ohne Entlassungsanzeige");
        en.put(RULES_CRIT_ACG_RESCALED_TOTAL_CRI_DIS, "ACG: Index aller Kosten, gewichtet");
        en.put(CATALOG_DOWNLOAD_PROGRESS_CATALOG_DROPPED, "{0} was dropped");
        en.put(REQUEST_TYPE_EXAMINATION, "Examination/Pre-trial Request ");
        en.put(BILL_VALIDATION_ERROR, "Need additional information!");
        en.put(SETTING_SHOW_ALL_REMINDERS, "Show all reminders");
        en.put(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_INDICATION_OF_EXTERNAL_VIOLENCE, "Integrated care - regard to the action of external force");
        en.put(DIALOG_BATCH_GROUPING_INTENSIVCARE_TOOLTIP, "Intensivcare");
        en.put(LOGIN_FAILED_ACCOUNT_INVALID, "Account is not valid anymore");
        en.put(WORKFLOW_CLOSE_AND_CREATE_REMINDER_CREATE_REMINDER_SUCCESSFULLY, "{0} new reminders of art {1} 'were created.");
        en.put(RULES_01_BPFLV, "01 - BPflV");
        en.put(MDK_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE, "No valid entry is found for the Proposal Subsequent Proceedings Deadline  in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.");
        en.put(DISCHARGE_REASON_DISMISSAL_TRANSFER_WITH_BREATHING_2, "Treatment ended normally, transferring a ventilated patient to a residential unit");
        en.put(RULES_TEMP_252_DIAGNOSENGRUPPEN, "GK RSA:Ambulante HMG relevante DxG");
        en.put(RULE_TABLE_CONTENT, "Table content");
        en.put(DISCHARGE_REASON_DISMISSAL_TRANSFER_WITH_BREATHING_1, "Transfer of a ventilated patient to an organized residential unit");
        en.put(VALIDATION_MASTERDATA_NO_USERS_FOUND, "No Users available in masterdata!");
        en.put(RULES_CRIT_ACG_TOTAL_COST_DIS, "ACG: Gesamtkosten");
        en.put(BILLING_DATE, "Billing Date***Bill.-Date");
        en.put(RULES_TEMP_112_AUFNAHMETAG, "Format: DD");
        en.put(MDK_REPORT_CREATION_QUARTER, "Report Creation Quarter");
        en.put(LOGIN_ERROR_MESSAGE_CONFIGURATION, "The configuration file is not available");
        en.put(RULES_CRIT_AMBU_CARE_PROVIDED_FROM, "ambu_Pflegeleistung_von");
        en.put(CATALOG_DIALOG_PROCEDURES, "Procedures");
        en.put(CASE_DETAILS_INT_9, "Int 9");
        en.put(CASE_DETAILS_INT_8, "Int 8");
        en.put(CASE_DETAILS_INT_7, "Int 7");
        en.put(PROCESS_STATUS_CLOSED, "Process is closed");
        en.put(CASE_DETAILS_INT_6, "Int 6");
        en.put(CASE_DETAILS_INT_5, "Int 5");
        en.put(RULES_GK_RSA_DXG, "GK_RSA_DxG");
        en.put(CASE_DETAILS_INT_4, "Int 4");
        en.put(CASE_RESOLVE_SUPPLEMENTARY_CHARGE, "SC ");
        en.put(CASE_DETAILS_INT_3, "Int 3");
        en.put(RULES_TEMP_204_GK_RSA_PZNCODE, "GK RSA:PZN-Code");
        en.put(CASE_DETAILS_INT_2, "Int 2");
        en.put(CASE_DETAILS_INT_1, "Int 1");
        en.put(ADDRESS_STREET, "Street");
        en.put(RULES_SUPERGROUP_AMBU_DATA_TOOLTIP, "ambulante Daten");
        en.put(RULES_TEMP_273_GK_RSA_STATIONAEREDXG, "GK RSA:Stationäre DxG");
        en.put(WARNING, "Warning***W");
        en.put(VALIDATION_CATALOGDATA_NO_BEGES_FOUND, "No Beges available in catalogdata!");
        en.put(ITEM_LOCKED, "Locked***Lock***Another user is editing this item currently");
        en.put(FEE_GROUP_APPENDIX_3_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "Appendix 3 without final invoice and without Discharge");
        en.put(RULES_TEMP_99_PEPP, "Format: Aplhanumerisch (Beispiele P003B, TK04Z)");
        en.put(RULES_GESAMTATCDOSIERUNG, "GesamtATCDosierung");
        en.put(RULES_TEMP_171_KLINIK_AUFNAHMEDATUM, "Format: YYYYMMDD");
        en.put(COUNTRY_FRANCE, "France");
        en.put(ORGAN_BODY, "Body");
        en.put(TP_301_INFORMATION_KEY_30_BEF00, "Termination of the examination procedure due to agreement in the case dialogue - without data correction");
        en.put(RULES_COL_ADRG, "ADRG");
        en.put(TEXT_TEMPLATE_ACTION, "Action Context");
        en.put(RULES_COL_CASENR, "Fallnummer");
        en.put(WORKING_LIST_COLUMNS_AVAILABLE, "Available Columns");
        en.put(RULES_TEMP_60_ANZAHLABTEILUNGEN, "Format: Ganzzahlig (Beispiel 5)");
        en.put(PROCESS_USER, "User assigned the task for editing***Editor***User assigned the task for editing");
        en.put(RULES_TEMP_221_GK_RSA_AUSGABENGESAMT, "GK RSA:Ausgaben gesamt");
        en.put(LENGTH_OF_STAY_TO, "LoS to***LoS");
        en.put(ADMISSION_REASON_HOSPITAL_TREATMENT_WITHOUT_SUBSEQUENT_HOSPITALIZATION, "Hospital treatment without subsequent hospitalization");
        en.put(ADMISSION_REASON_MATERNITY_HOSPITAL, "Maternity hospital");
        en.put(RULES_CRIT_ACG_RXMG_DIS_1, "ACG: EDCs auf Basis der Medikamente");
        en.put(RULES_TEMP_59_WOHNORT, "Format: bis zu 255 Zeichen alphanumerisch (Beispiel: Berlin)");
        en.put(NO_DEPARTMENT_DISCHARGE_DATE, "Discharge date of the not discharge department is not set");
        en.put(GROUPER_STATUS_GST_OK, "Gst Ok");
        en.put(ICD_REF_TYPE_ADDITION, "Addition");
        en.put(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_ATC_TOOLTIP_1, "Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein ATC - Code eingetragen ist.");
        en.put(CASE_MERGING_WARNING_GROUPED, "Apparently, not all cases are grouped with model: {0}!Cases that are not grouped are ignored!Continue?");
        en.put(AUDIT_AREA_CODE, "Area Code");
        en.put(RULES_TEMP_97_OBERE_GRENZVERWEILDAUER, "Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.");
        en.put(RULES_CRIT_MRSA_EMG_TOOLTIP_2, "Format: 1-stellig, ganze Zahl (Beispiel: 3)");
        en.put(RULES_CRIT_MRSA_INSURANCE_DAYS_TOOLTIP_2, "Versichertentage des Ver-sicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV");
        en.put(RULES_CRIT_MRSA_EMG_TOOLTIP_1, "Vom BVA festgelegte Erwerbsminderungsgruppen");
        en.put(RULES_TEMP_130_TAGDERENTBINDUNG_1, "Format: YYYYMMDD");
        en.put(RULES_TEMP_275_GK_RSA_HAUPTDIAGNOSESTATIONAER, "Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.");
        en.put(RULES_CRIT_MRSA_INSURANCE_DAYS_TOOLTIP_1, "Versichertentage aus Satzart 100");
        en.put(RULES_TXT_CRIT_ADMISSION_MONTH_DIS, "Aufnahmemonat");
        en.put(CASE_DETAILS, "Case Details");
        en.put(INS_SHORT_BARMER, "Barmer");
        en.put(BILL_TYPE_ENUM_PARTIAL, "partial bill");
        en.put(RULES_TEMP_279_GK_RSA_NEBENDIAGNOSESTATIONAER, "GK RSA:stationäre Nebendiagnose");
        en.put(RISK_AREA_PROCEDURES, "Procedures");
        en.put(RULES_TXT_CRIT_SEC_DIAG_LOC_DIS, "Sek. Diagnose: Lokalisation");
        en.put(RULES_TEMP_26_HM_MENGE, "Format: numerisch (Beispiel: 5)");
        en.put(WORKFLOW_DEADLINE_PRELIMINARY_PROCEEDINGS_CLOSED_DEADLINE_COMMENT, "Deadline for completion of the pre-litigation procedure");
        en.put(VALIDATION_CATALOGDATA_NO_HOSPITALS_FOUND, "No Hospitals available in catalogdata!");
        en.put(RULES_TXT_CRIT_REDUCTION_CW_TOOLTIP_1, "Ein Unterschreiten der Unteren Grenzverweildauer bewirkt einen Abschlag, bei dem die einer DRG zugeordneten CW-Wert-Abschläge multipliziert mit den Tagen der Unterschreitung von dem CW-Basiswert abgezogen werden.");
        en.put(PATIENT_FULL_NAME, "Family name, Forename");
        en.put(FEE_GROUP_NUB_WITHOUT_FINAL_INVOICE, "NUB without final invoice");
        en.put(RULE_VALIDATION_NO_VALUE, "no value found");
        en.put(RULES_GROUP_INSURANT_MRSA_DIS, "Versichertendaten");
        en.put(INITIATION_TEST_PROCESSES_TO, "Initiation test processes to");
        en.put(GENDER_FEMALE, "female");
        en.put(ACG_AGE_BAND_75_79, "75-79");
        en.put(ORGAN_MUSCULOSKELETAL, "Musculoskeletal");
        en.put(GROUP_RELEVANT_CODE_USED_TO_MEET_THE_LOGICAL_AND_TEMPORAL_CONDITION_OF_OPD_CONSTRUCT, "used to meet the logical and temporal condition of OPD construct");
        en.put(GROUPER_OPS_RES_TYPE_OR_INVALID_DATE, "OR procedure with conflict OPS date");
        en.put(RULES_TEMP_208_AUSGABEN, "GK RSA:Ausgaben für Apotheken");
        en.put(RULES_KLINIK_BEATMUNGSSTUNDEN, "Klinik_Beatmungsstunden");
        en.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_9, "8 - 96-97 Perzentile");
        en.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_8, "7 - 94-95 Perzentile");
        en.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_7, "6 - 91-93 Perzentile");
        en.put(INS_SHORT_BG, "BG");
        en.put(FEE_GROUP_APPENDIX_3, "Appendix 3");
        en.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_6, "5 - 76-90 Perzentile");
        en.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_5, "4 - 51-75 Perzentile");
        en.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_4, "3 - 26-50 Perzentile");
        en.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_3, "2 - 11-25 Perzentile");
        en.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_2, "1 - 1-1 Perzentile");
        en.put(WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_CONFIRM, "Do you really want to cancel the workflow number {0}?");
        en.put(INSURANCE_ASSOCIATION_NAME, "Assoc. Name");
        en.put(AGE_IN_YEARS_TO, "Age to");
        en.put(READMISSION, "Readmission");
        en.put(EVENT_TYPE_ACTION_REMOVED, "Action {0} was removed***Removed actions");
        en.put(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_ATC_DIS, "KH Medikament: Gesamtpreis für ATC");
        en.put(EVENT_NAME_CASE, "Case");
        en.put(RULES_TXT_CRIT_CASE_NUMERIC_4_DIS, "Fall.Numeric04");
        en.put(RULES_3_UNBESTIMMT, "3 - unbestimmt");
        en.put(VALIDATION_ERROR_INVALID_INSURANCE_IDENT, "Insuranceidentifier is not valid!");
        en.put(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_TOOLTIP_1, "In welcher Dosierung das Medikament verordnet wurde.");
        en.put(ADMISSION_MODE_NOT_RELEVANT, "Not Relevant");
        en.put(RULES_TXT_CRIT_RECHNUNG_NUMMER_DIS, "Rechnungsnummer");
        en.put(TP_301_INFORMATION_KEY_30_FDI20, "Declaration on the termination of the case dialogue");
        en.put(FEE_GROUP, "Fee Group");
        en.put(CASE_DETAILS_CANCEL_REASON_KIS, "KIS");
        en.put(WORKFLOW_STATE_CLOSED, "closed");
        en.put(CATALOG_DRG_CARE_DESC, "{0} Day(s), equals {1} ");
        en.put(RULES_TEMP_194_KLINIK_VWD_STUNDEN, "Format: Ganzzahlig (Beispiel 2)");
        en.put(CURRENCY_SYMBOL, "€");
        en.put(CASE_NUMBER, "Case Number***Case Number");
        en.put(DISCHARGE_REASON_2_NOT_SPECIFIED, "not specified");
        en.put(STATE_RHINELAND_PALATINATE, "Rhineland Palatinate");
        en.put(RULES_TXT_CRIT_CW_EFFECTIV_TOOLTIP_1, "( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert)");
        en.put(RULES_TEMP_111_AUFNAHMEMONAT, "Format: MM");
        en.put(RULES_VPS_SEVERITY_LEVEL, "VPS_Schweregrad");
        en.put(DRG_SHORTCUT, "DRG");
        en.put(DAYS_SIMULATED, "Days simulated");
        en.put(PROCESS_PREVIEW_PROCESS_STATUS, "Status");
        en.put(ANTIBIOTIC_FOSFOMYCIN, "Fosfomycin+");
        en.put(DATE_OF_BIRTH_TO, "Birth to");
        en.put(RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2, "Format: Fließkommazahl (Beispiel: 2.5)");
        en.put(FEE_GROUP_BEFORE_INPATIENT_WITHOUT_FINAL_INVOICE, "before inpatient without final invoice");
        en.put(PROCESS_SUBJECT_CHANGED_TOOLTIP, "See Details of this Process");
        en.put(TP_301_INFORMATION_KEY_30_FDI13, "Rejection of the extension of the case dialogue");
        en.put(TP_301_INFORMATION_KEY_30_FDI12, "Adoption of the request to extend the case dialogue");
        en.put(TP_301_INFORMATION_KEY_30_FDI11, "Invitation to extend the case dialogue");
        en.put(CATALOG_DRG_FIRST_DAY_DEDUCTION, "1. day of deduction");
        en.put(ADMISSION_MODE_MAIN_DEPARTMENT, "MD******Main Department");
        en.put(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER, "Integrated care - Car Accident / Accident Sport / Other accident (for example, § 116 SGB X)");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_20, "47 - Integrierte Versorgung - Notfall");
        en.put(RULES_CRIT_PSYCHO_STATE_TOOLTIP_3, "2 - unfreiwillig");
        en.put(PROCESS_TOPICS, "Process topics");
        en.put(RULES_CRIT_PSYCHO_STATE_TOOLTIP_2, "1 - freiwillig");
        en.put(ANTIBIOTIC_CEFTAZIDIM, "Ceftazidim");
        en.put(RULES_32_DMP_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "32 - DMP ohne Schlussrechnung und ohne Entlassungsanzeige");
        en.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_6, "0 - sonstige");
        en.put(RULES_TEMP_151_SEKDIAGNOSEPRIM, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        en.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_5, "Z - Zustand nach der betreffenden Diagnose");
        en.put(RULES_TEMP_40_MVERORDNUNGSDATUM, "Format: YYYYMMDD");
        en.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_4, "V - Verdachtsdiagnose");
        en.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_3, "G - gesicherte Diagnose");
        en.put(LAB_DATA_LAB_DATE, "Document Date***Document Date***Document Date");
        en.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_2, "A - ausgeschlossene Doagnose");
        en.put(RISK_VALUE_TOTAL, "Risk in €");
        en.put(RULES_TXT_CRIT_CASE_NUMERIC_1_DIS, "Fall.Numeric01");
        en.put(TP_301_INFORMATION_KEY_30_FDI03, "Rejection of a case dialog");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_19, "46 - Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden");
        en.put(TP_301_INFORMATION_KEY_30_FDI02, "Acceptance of the request for the case dialogue");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_18, "44 - Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt");
        en.put(TP_301_INFORMATION_KEY_30_FDI01, "Request for case dialog");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_17, "43 - Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_16, "42 - Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)");
        en.put(CASE_DETAILS_DATE_5, "Date 5");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_15, "41 - Integrierte Versorgung - Normalfall");
        en.put(CASE_DETAILS_DATE_4, "Date 4");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_14, "27 - Kostenträgerwechsel - Notfall");
        en.put(CASE_DETAILS_DATE_3, "Date 3");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_13, "26 - Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden");
        en.put(CASE_DETAILS_DATE_2, "Date 2");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_12, "24 - Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt");
        en.put(CASE_DETAILS_DATE_1, "Date 1");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_11, "23 - Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_10, "22 - Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)");
        en.put(GROUPER_STATUS_INVALID_PRINCIPAL_ICD, "Invalid Principal Icd");
        en.put(CASE_MERGING_CONDITION_THREE_DRG, "Same ADRG***Same ADRG");
        en.put(RULES_CRIT_ACG_TOTAL_COST_BAND_TOOLTIP_1_1, "0 - 0 Gesamtkosten");
        en.put(DRG_CORR_TYPE_DEDUCTION_TRANSFER, "Deduction Transfer");
        en.put(RULES_TEMP_161_KLINIK_OGVD, "Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.");
        en.put(RULES_TXT_CRIT_CLINIC_AUX_DIAG_DIS, "Klinik: Nebendiagnose");
        en.put(EVENT_TYPE_ACTION_ADDED, "Action of type {0} is generated***Added actions");
        en.put(DISCHARGE_REASON_TREATMENT_TERMINATE_REGULARLY_PROVIDED_INPATIENT_TREATMENT, "Treatment terminate regularly provided inpatient treatment");
        en.put(RULE_COLUMN_TYPE, "type***type***type of rule");
        en.put(RULES_CRIT_ACG_SEX, "acg_geschlecht");
        en.put(PROCESS_FINAL_AUDIT_REASONS, "Audit Reasons by Case Finalisation");
        en.put(RULES_TEMP_73_ENTGELTE, "Rechnung: Rechnungsnummer");
        en.put(ACG_AGE_BAND_45_54, "45-54");
        en.put(RULES_TXT_CRIT_VWD_DIS, "Verweildauer");
        en.put(RULES_TXT_CRIT_AGE_DAYS_DIS, "Alter in Tagen");
        en.put(DRG_CORR_TYPE_DEDUCTION, "Deduction");
        en.put(RULES_TEMP_6_HE_GESAMTPREIS_ALLE, "Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)");
        en.put(VALIDATION_CATALOGDATA_NO_BEGE_EXISTS, "Catalog entry for this bege does not exists anymore!");
        en.put(RISK_PERCENT_TOTAL_EQUAL, "Risk in %");
        en.put(RULES_TEMP_267_GK_RSA_DIAGNOSEAMBULANTHMGRELEVANT, "GK RSA:ambulante HMG relevante Diagnosen");
        en.put(TEXT_TEMPLATE_REMINDER, "Reminder Context");
        en.put(RULES_CASE_DATES, "Falldaten");
        en.put(CASE_LOCKED, "Locked***L***Locked");
        en.put(EVENT_TYPE_REMINDER_EXPIRES, "Reminder Expired: type {0}, due date: {1}, assigned to: {2}, status: {3}***Expired reminders");
        en.put(WORKFLOW_DEADLINE_PRELIMINARY_PROCEEDINGS_CLOSED_DEADLINE, "Deadline pre-trial");
        en.put(NEW_RULE_TABLE, "new rule table");
        en.put(RULES_TEMP_106_AUFNAHMEDATUM, "Die Uhrzeit der Aufnahme wird nicht berücksichtigt");
        en.put(RULES_TXT_CRIT_PROC_NUMBER_TOOLTIP_1, "Die Summe aller Prozeduren.");
        en.put(RULES_CRIT_ACG_ISCHEMIC_HEART_DC, "acg_koronare_Herzkrankheit_vorhanden");
        en.put(ADMISSION_REASON_2_COST_UNIT_CHANGE_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER, "Cost unit change - Traffic accident / sports accident / Other accident (for example, § 116 SGB X)");
        en.put(MDK_REPORT_CREATION_DATE_EQUAL, "Report Creation Date");
        en.put(RULES_TEMP_213_AUSGABEN, "GK RSA:Ausgaben gesamt");
        en.put(START_GROUPING, "perform Grouping");
        en.put(RULES_TXT_CRIT_SDX_NUMBER_TOOLTIP_1, "Die Summe aller Nebendiagnosen.");
        en.put(DEPARTMENT_MAIN_DIAGNOSIS, "Department MD***DMD");
        en.put(RULES_TXT_OP_AND, "und ( && )");
        en.put(CANCEL, "cancel");
        en.put(RULES_TEMP_158_KLINIK_ADRG, "Klinische Daten: Basis - DRG: DRG ohne letzte Stelle (für Schweregrad).");
        en.put(RULES_TEMP_37_MPREIS, "Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)");
        en.put(LOGIN_START_TEAMVIEWER, "Start Teamviewer");
        en.put(RULES_TXT_CRIT_CLINIC_IKZ_DIS, "Klinik: IKZ");
        en.put(GROUP_RESULT_PDX_IMPROPER_PDX_CODE, "Invalid main diagnosis");
        en.put(ACTION_TYPE, "Action type");
        en.put(ANTIBIOGRAM_RESULT_INTERMEDIATE, "intermediate");
        en.put(RULES_CRIT_AMBU_CARE_CARE_LEVEL, "ambu_Pflegestufe");
        en.put(RULES_CRIT_ACG_HOS_DOMINANT_COUNT_TOOLTIP, "Anzahl ADGs mit hoher (>50%) Wahrscheinlichkeit einer künftigen Krankenhausaufnahme.");
        en.put(MODIFIED_FROM, "from {0}");
        en.put(RULES_TEMP_33_GESAMTPZNDOSIERUNG, "Format: Fließkommazahl (Beispiel: 2.5)");
        en.put(DISCHARGE_REASON_DISMISSAL_IN_A_NURSING_FACILITY, "Dismissal in a nursing facility");
        en.put(RULES_TXT_GROUP_LABOR_DIS, "Labor");
        en.put(RULES_27_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "27 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige");
        en.put(CASE_RESOLVE_CW, "CW");
        en.put(EVENT_REMOVED, "{0} was removed");
        en.put(DATE_FORMAT, "yyyy-MM-dd");
        en.put(RULES_TEMP_109_AUFNAHMEDATUM_MIT_UHRZEIT, "Format: YYYYMMDD HH:mm");
        en.put(RULES_GKMEDICINE_NODE_MEDICINE, "Medikamente");
        en.put(GROUPER_MDC_OR_SK_INFANT_INPATIENT_CARE, "Child and adolescent psychiatry, inpatient***PKJ");
        en.put(COUNTRY_ENGLAND, "England");
        en.put(RULES_TXT_CRIT_SEPARATION_MONTH_DIS, "Entlassungsmonat");
        en.put(RULES_TXT_CRIT_TRANSFER_DAY_TIME_TOOLTIP_1, "Uhrzeit, zu der der Patient in ein anderes Krankenhaus verlegt worden ist.");
        en.put(INS_STATUS_SELF_INSURED, "self insured");
        en.put(PATIENT_IGNORED, "Patient numbers ({0})  in the first step are ignored because this case is assigned to other patient, PatientNumber ({1})");
        en.put(RULES_TEMP_196_ARZNEIMITTEL, "GK RSA:ATC-Code");
        en.put(PROCESS_STATUS_REOPEN, "Reopen process");
        en.put(VALIDATION_MASTERDATA_NO_DOCUMENT_TYPES_FOUND, "No Documenttypes available in masterdata!");
        en.put(AUDIT_SENT_ON_DATE, "Sent On");
        en.put(INS_SHORT_IKK, "IKK");
        en.put(UPDATED, "updated***last Modification***updated");
        en.put(RULES_CRIT_ACG_ASTHMA_CONDITION_DIS, "ACG: Asthma vorhanden");
        en.put(MENU_USER_NAME_STATUSTEXT, "Name: {0}");
        en.put(ICD_TYPE_PREOPERATIVE, "Preoperative");
        en.put(RULES_GROUP_FEES_DATA_HOSP_DATA_TOOLTIP, "Entgelte");
        en.put(MDK_TELEPHONE, "Telephone");
        en.put(DIALOG_BATCH_GROUPING_PCCL_TOOLTIP, "Average PCCL-value of all cases");
        en.put(RULES_GROUPERRELEVANTEPROZEDUR, "GrouperrelevanteProzedur");
        en.put(ADMISSION_REASON_HOSPITAL_DAY_PATIENT, "Hospital day patient");
        en.put(CASE_DAY_CARE, "case with day care admission reason");
        en.put(CASE_RESOLVE_RULES_PROPOSAL, "Proposal");
        en.put(SETTING_SHOW_PREVIEW, "Show preview of case/workflow");
        en.put(REPORT_CANCELLED, "Report Generation is Cancelled");
        en.put(REQUEST_TYPE_MDK, "MD");
        en.put(PROCESS_FINALISATION_CW_DIFF_FROM, "CW diff from");
        en.put(RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT_DIS, "ACG: Anzahl chronischer Erkrankungen");
        en.put(DOCUMENTATION_TYPE_RISK_REVIEW, "Risk review");
        en.put(ADMISSION_BY_LAW_UNVOLUNTARY, "Unvoluntary");
        en.put(WORKING_LIST, "Working List");
        en.put(PROCESS_FINALISATION_LOS_INITIAL, "Los initial***Los initial***Los of the KIS version of the case, which was initially assigned to this process.");
        en.put(EVENT_NAME_DOCUMENT, "Document");
        en.put(RULES_TEMP_155_KLINIK_NEBENDIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        en.put(RULES_TEMP_83_ENTGELTABRECHNUNGBIS, "Format: YYYYMMDD");
        en.put(ICDCODE, "Main diagnosis***MD***Main diagnosis");
        en.put(RULES_TXT_AGE_IN_YEARS, "Alter in Jahren");
        en.put(LOGIN_DATABASE, "Database");
        en.put(DIALOG_BATCH_GROUPING_DAYSEXTERN, "Days extern");
        en.put(RISK_AREA_SECONDARY_DIAGNOSIS, "Secondary diagnosis");
        en.put(REVENUE_MATH_DRG_CARE_LAYOUT, "Care-Revenue: (Care-Baserate {0}{1} x CareCW {2}) x CareDay(s) {3}");
        en.put(RULES_TXT_CRIT_ADMISSION_DATE_TOOLTIP_1, "Aufnahmedatum ist der erste Behandlungstag  im Krankenhaus.");
        en.put(RULES_TXT_CRIT_ADMISSION_DAY_DIS, "Aufnahmetag");
        en.put(RULES_TXT_CRIT_CLINIC_CASE_DRG_TOOLTIP_1, "Klinische Daten: Fallpauschale.");
        en.put(CASE_DETAILS_CANCEL_REASON_USER, "manual cancellation");
        en.put(RULES_TXT_CRIT_ADMISSION_DAY_TIME_DIS, "Aufnahmeuhrzeit");
        en.put(RULES_GK_RSA_HAUPTDIAGNOSESTATIONAER, "GK_RSA_HauptdiagnoseStationaer");
        en.put(CASE_CREATE_PROCESS, "Create process");
        en.put(AUDIT_TYPE_COLLECTION, "Collective case check");
        en.put(RULES_CRIT_MRSA_HMG_NUMBER_TOOLTIP_2, "Format: ganze Zahl, bis zu 3stellig (Beispiel: 25)");
        en.put(MENU_GROUPER_STATUSTEXT, "Grouper: {0}");
        en.put(RULES_CRIT_MRSA_HMG_NUMBER_TOOLTIP_1, "Anzahl aller ermittelten HMGs unter Berücksichtigung der Hierarchisierung");
        en.put(AUDIT_PREL_PROC_ANS_DEADLINE_ERROR, "No valid entry is found for the Prel. Proc. Answer deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.");
        en.put(CASE_TYPE_PEPP, "PEPP");
        en.put(BILL_TYPE_ENUM_FINAL, "final bill");
        en.put(WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_SUCCESS, "workflow  {0} successfully canceled");
        en.put(NO_CASE_RESOLVES, "No Case Resolves");
        en.put(FEE_GROUP_BPFLV_WITHOUT_FINAL_INVOICE, "BPflV without final invoice");
        en.put(BILL_NO, "Bill No.");
        en.put(RULES_CRIT_ACG_MAJOR_ADG_COUNT_TOOLTIP, "Anzahl der Haupt-ADGs,  welche diesem Patienten zugeordnet sind. Ein Haupt-ADG ist ein ADG  mit erheblichen Auswirkungen auf den gleichzeitigen oder zukünftigen Ressourcenverbrauch. Es gibt separate Haupt-ADGs für Kinder und Erwachsene");
        en.put(RULES_TXT_CRIT_BIRTHDAY_DIS, "Geburtsdatum");
        en.put(DISCHARGE_REASON_DISMISSAL_BEFORE_RESUMING_WITH_RECLASSIFICATION, "Dismissal before resuming with reclassification");
        en.put(RULES_15_SONSTIGE_ENTGELTE_ANLAGE_OHNE_SCHLUSSRECHNUNG, "15 - Sonstige Entgelte Anlage ohne Schlussrechnung");
        en.put(SERVICE_OVERVIEW, "Service overview");
        en.put(RULES_77_VOLLSTATIONRE_PFLEGE, "77 - Vollstationre Pflege");
        en.put(SAME_TABLE_OTHER_COMMENT, "Same rule table but other comment is found in Pool");
        en.put(DISCHARGE_REASON, "Discharge Reason***DR12***Discharge Reason Position 1 and 2");
        en.put(CASEFEE_INFO, "Case fees of {0} ");
        en.put(AUDIT_CASE_DIALOG, "Case Dialog");
        en.put(CASE_DELTA_CWMINIMAL_FROM, "dCWmin from");
        en.put(PAY_CLASS, "PayClass");
        en.put(RULES_VPS_DISCOVERED_AT, "VPS_Festgestelt_am");
        en.put(RULES_4_DIVERSE, "4 - diverse");
        en.put(RULES_TXT_CRIT_PSYCHO_STATE_DIS, "Psychostatus");
        en.put(JOB_STAUTS_INITIALIZING, "initializing");
        en.put(MDK_SUBSEQUENT_PROCEEDING_DATE, "subsequent proceeding date");
        en.put(RULES_25_NUB_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "25 - NUB ohne Schlussrechnung und ohne Entlassungsanzeige");
        en.put(RULES_TEMP_268_GK_RSA_AMBULANTEHMGRELEVANTEDXG, "GK RSA:Ambulante HMG relevante DxG");
        en.put(RULES_24_DRG_ANLAGE_1_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "24 - DRG Anlage 1 ohne Schlussrechnung und ohne Entlassungsanzeige");
        en.put(BILL_OPEN_ITEM_CURRENCY_KEY, "Currency Key");
        en.put(RULES_TEMP_278_GK_RSA_STATIONAEREKRANKHEITSNUMMER, "GK RSA:Stationäre Krankheitsnummer");
        en.put(DIALOG_BATCH_GROUPING_KORRUGVD, "corr. LTP");
        en.put(ADMISSION_REASON_STATION_EQUIVALENT, "Station equivalent treatment");
        en.put(TEMPLATE_CATEGORY_SUB_SECOND, "2. Subcategory for a template");
        en.put(CASE_DELTA_REVENUE_MINIMAL_TO, "dRevenue min. to");
        en.put(DOCUMENTATION_CASE_EVALUATION_TEXT, "Notes can be placed here for the case evaluation.These notes will be shown in the case report.");
        en.put(RULES_TEMP_143_HAUPTDIAGNOSE, "Die Diagnose, welche nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.");
        en.put(RULES_AUFNAHMEDIAGNOSETYPE, "AufnahmediagnoseType");
        en.put(CASE_MERGING_JOB_COMPLETED, "Completed");
        en.put(REPORT_FAILED, "Report Generation is Failed");
        en.put(ADMISSION_CAUSE, "Admission Cause***Adm.-Cause");
        en.put(AGE_IN_DAYS_FROM, "Age D. from");
        en.put(NO_ADMISSION_DATE_FOUND, "Admission date is not set");
        en.put(ADMISSION_REASON_2, "Admission Reason 2***AR34***Admission Reason Position 3 and 4");
        en.put(DOCUMENT_REMOVED_TOOLTIP, "This Document is removed");
        en.put(RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2, "Format: YYYYMMDD");
        en.put(RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_1, "Entlassungsdatum ist der letzte Behandlungstag im Krankenhaus.");
        en.put(UPDATED_FROM, "last Modification from");
        en.put(VERSIONCONTROLL_HINT_ONE_MUST_REMAIN, "At least 1 CP-Version must remain.");
        en.put(PROCEED, "Do you want to proceed?***Proceed?");
        en.put(RISK_AREA_CASE_MERGE, "Case merging");
        en.put(RULES_CRIT_MRSA_DIAG_AMBULANT_HMG_REL_TOOLTIP_1_4, "0 - nicht vorhanden");
        en.put(RULES_TXT_CRIT_CITY_TOOLTIP_1, "Name des Wohnortes des Patienten.");
        en.put(RULES_CRIT_MRSA_DIAG_AMBULANT_HMG_REL_TOOLTIP_1_3, "1 - vorhanden");
        en.put(AUDIT_PREL_PROC_CLOSED_DEADLINE_ERROR, "No valid entry is found for the Prel. Proc. Closed deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.");
        en.put(DEADLINES_ERROR, "List of deadlines is empty. Please configure valid deadlines!!");
        en.put(MDK_ADDRESS_VALIDATE, "Invalid Address. Please provide valid entry.");
        en.put(RULES_TXT_CRIT_ZIP_CODE_DIS, "Postleitzahl");
        en.put(RULES_CRIT_ACG_ADG_VECTOR_TOOLTIP, "Ein Vektor von Nullen und Einsen, um anzuzeigen, welchem ADG-Code dieser Patienten zuzuornden ist. Eine \"1\" in der fünften Position zeigt, dass der Patient ADG 5 zugewiesen wurde. Hinweis: ADG15 und ASG19 sind nicht mehr in Gebrauch und somit sollte immer Null sein.");
        en.put(DISCHARGE, "Discharge");
        en.put(READONLY_DOC_ITEM_AOP_FILE_NAME, "AOP-Katalog_");
        en.put(DOCTOR_IDENT, "Doctor Identifier");
        en.put(WORKFLOW_STATE_DONE, "done");
        en.put(RULES_TEMP_253_DIAGNOSENGRUPPEN, "GK RSA:Ambulante Krankheitsnummer");
        en.put(INSURANCE, "Insurance");
        en.put(PROCESS_PREVIEW_AUDIT_REASONS, "Audit Resons");
        en.put(VERSIONCONTROLL_HINT_SELECT_VERSION, "Please select a Version!");
        en.put(RULES_GK_RSA_DIAGNOSEAMBULANT, "GK_RSA_DiagnoseAmbulant");
        en.put(AUDIT_QUOTA_RESULT_BILLED_CASES, "Billed Cases");
        en.put(RULES_CRIT_ACG_RXMG, "acg_RxMG_Code");
        en.put(BILL_TYPE, "Bill type");
        en.put(REVENUE_MATH_PEPP_CWDAY, "CW in day({0})");
        en.put(ICD_TYPE_RISK, "Risk");
        en.put(WORKFLOW_DEADLINE_MDK_AUDIT_COMPLETION_DEADLINE_COMMENT, "Deadline, up to the examination and evaluation by the MD must be completed");
        en.put(CASE_RESOLVE_CW_EFF, "eff. CW");
        en.put(PROCESS_FINALISATION_REVENUE_INIT_FROM, "Revenue Initial from");
        en.put(ICD_TYPE_CARE, "Care");
        en.put(DOCUMENT_NAME, "Document name");
        en.put(DIAGNOSIS_REF_TYPE_DAGGER_FROM, "Dagger diagnose from");
        en.put(TP_301_INFORMATION_KEY_30_SF000, "secondary bad allocation");
        en.put(DIALOG_BATCH_GROUPING_CMIEFF, "CMI eff.");
        en.put(DISCHARGE_REASON_EXTERNAL_TRANSFER_TO_ANOTHER_HOSPITAL_AND_SUBSEQUENT_REDEPLOYMENT_OR_INTERNAL_INSTALLATION_WITH_ALTERNATING_BETWEEN_THE_SCOPES, "external transfer to another hospital and subsequent redeployment or internal installation with alternating between the scopes of BPflV and KHEntgG and subsequent relocation");
        en.put(DISCHARGE_DATE_TO, "Dis.-Date to");
        en.put(RULES_CRIT_CARE_STATE_TOOLTIP_11, "Pflegegrad 5");
        en.put(RULES_CRIT_CARE_STATE_TOOLTIP_10, "Pflegegrad 4");
        en.put(CASE_MERGING, "Case merging");
        en.put(CASE_MERGING_CONDITION_THREE_PEPP, "Same year***Same year");
        en.put(DIALOG_BATCH_GROUPING_LOS_TOOLTIP, "Average LOS for all grouped cases");
        en.put(RULES_GK_RSA_DDD, "GK_RSA_DDD");
        en.put(ADMISSION_REASON_BIRTH, "Birth");
        en.put(ICDCATALOG, "ICD Catalog");
        en.put(DOCUMENTATION_CASE_EVALUATION, "Case evaluation");
        en.put(RULES_TXT_CRIT_AUX_DIAG_LOC_DIS, "Nebendiagnose: Lokalisation");
        en.put(REQUEST_TYPE_INSURANCE, "Insurance");
        en.put(RULES_TXT_CRIT_SEC_DIAG_PRIM_TOOLTIP_1, "Die Diagnose, zu der die sekundäre Diagnose in Bezug steht. Siehe Diagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code .");
        en.put(DIALOG_BATCH_GROUPING_RULES_CHECKRESULTS, "Checkresult");
        en.put(PROCESS_PREVIEW_BILL_CORR, "MD Bill Correction Deadline");
        en.put(GROUPER_STATUS_INVALID_LOS, "Invalid LOS");
        en.put(REMINDER_UPDATE_HEADER, "Update Reminder ");
        en.put(AMBULANT, "ambulant");
        en.put(CASE_MERGE_TAB_SECTION_CASE_DATA, "Overview case data");
        en.put(INS_STATUS_FAMILY_INSURANCE, "family insurance");
        en.put(WORKFLOW_DEADLINE_6_WEEKS_DEADLINE_COMMENT, "If the 6-week period is exceeded, then a note should appear when creating a new operation.");
        en.put(ADMISSION_REASON_2_COST_UNIT_CHANGE_INDICATION_OF_EXTERNAL_VIOLENCE, "Cost unit change - Recalling the action of external force");
        en.put(RULES_TEMP_67_ABTEILUNG, "Format: Ganzzahlig (Beispiel 1500)");
        en.put(RULES_CRIT_AMBU_CARE_PROVIDED_TO, "ambu_Pflegeleistung_bis");
        en.put(TP_301_INFORMATION_KEY_30_PF000, "primary bad allocation");
        en.put(VALIDATION_ERROR_TIME_FORMAT, "Wrong time format, use hh:mm!");
        en.put(ARTIFICIAL_VENTILATION, "Artificial Ventilation (in hours)***Vent. Hrs.");
        en.put(PROCESS_FINALISATION_REVENUE_FINAL_FROM, "Revenue Final from");
        en.put(CASE_RESOLVE_RULES_DELTA_COST_WEIGHT, "dCW");
        en.put(BILL_TYPE_ENUM_SUPPL, "supplimentary bill");
        en.put(MDK_EMAIL, "Email Address");
        en.put(DAY_SUNDAY, "Sunday***Su");
        en.put(ICD_TYPE_DISCHARGE, "Discharge");
        en.put(RULES_CRIT_ACG_TOTAL_COST_BAND, "acg_Gesamt_KostGruppe");
        en.put(RULES_TEMP_200_GK_RSA_PACKUNGANZAHL, "GK RSA:Anzahl der Packungen");
        en.put(RULES_TEMP_50_PZNCODE, "Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918");
        en.put(RISK_AREA, "Riskarea***R.A***Category in which the risk can occure");
        en.put(RULES_VPS_ERR_CODE_TOOLTIP, "VPS: Fehlercode aus der Iskv");
        en.put(RULES_TEMP_229_VERSICHERTENDATEN, "GK RSA:Verstorben");
        en.put(RULES_CRIT_ACG_ADG_CODES_DIS, "ACG: ADG-Code");
        en.put(ANTIBIOTIC_CEFACLOR, "Cefaclor");
        en.put(RULES_TXT_CRIT_ADMISSION_DAY_TIME_TOOLTIP_1, "Uhrzeit, zu der der Patient am ersten Behandlungstag aufgenommen worden ist.");
        en.put(LOS_ALTERATION_TO, "Los Alteration to");
        en.put(HELP, "Help");
        en.put(REMINDER_CHANGED_TOOLTIP, "See the details of a Reminder");
        en.put(PROCESS_FINALISATION_CW_CARE_FINAL, "Care CW final***Care CW final***Appraisal relation for care of the checkpoint version of the case, which was assigned to this transaction for transaction completion.");
        en.put(BILL_OPEN_ITEM_NET_VALUE, "Net Value");
        en.put(FEE_GROUP_IV_INTEGRATED_CARE_WITHOUT_FINAL_INVOICE, "IV (integrated care) without final invoice");
        en.put(AGE_IN_YEARS, "Age in Years***Age***Age");
        en.put(PROCESS_FINALISATION_CW_CARE_FINAL_TO, "Care CW final from");
        en.put(RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_DIS, "KH Medikament: ATC-Code");
        en.put(PROCESS_FINALISATION_CLOSING_DATE, "closing date");
        en.put(DAY_THURSDAY, "Thursday***Th");
        en.put(VERSION_PARENT_ADD_CASE, "Version created with manual case input");
        en.put(DIALOG_BATCH_GROUPING_ERRORDRGPEPP_TOOLTIP, "Count of cases, with error DRG or PEPP");
        en.put(INPUT_DATE_TO, "To date");
        en.put(ERROR, "Error***E");
        en.put(ACTION_SUBJECTS, "Action subjects");
        en.put(RULES_TXT_CRIT_ENTGELTART_DIS, "Entgelt");
        en.put(RULES_CRIT_ACG_RUB, "acg_RUB");
        en.put(MDK_EDITOR, "Editor");
        en.put(RULES_7E_BONUSZAHLUNG_AN_VOLLSTATIONAERE_PFLEGEEINRICHTUNGEN_BEI_RUECKSTUFUNG, "7E - Bonuszahlung an vollstationäre Pflegeeinrichtungen bei Rückstufung");
        en.put(RULES_TXT_CRIT_PROC_NUMBER_DIS, "Anzahl Prozeduren");
        en.put(DOCUMENTATION_FULL_RISK, "Estimated Full Risk in Percent");
        en.put(JOB_STATUS_STOPPED, "stopped");
        en.put(CASE_MERGING_DO_SAVE_AND_OPEN, "Save case and open");
        en.put(PLACE_OF_REG_REQUEST_FINALISATION, "Request Finalisation");
        en.put(CHARACTERS, "Characters");
        en.put(CASEFEE_KIND, "Kind");
        en.put(RULES_TXT_GROUP_MOVEMENT_DIS, "Bewegungen");
        en.put(RULES_TEMP_238_ERLOESE, "GK RSA:EMG");
        en.put(SF_DF_VALUE, "SP/DF-Value");
        en.put(CASE_RESOLVE_LOCALISATION, "Localisation***Loc. ");
        en.put(PLEASE_WAIT, "Please wait...");
        en.put(REMINDER_CREATION_DATE, "REM created");
        en.put(RULES_TEMP_11_HE_MENGE, "Format: numerisch (Beispiel: 5)");
        en.put(RULES_KOSTENGEWICHT_KATALOG, "Kostengewicht_Katalog");
        en.put(ADMISSION_WEIGHT, "Admission Weight***Weight");
        en.put(RULES_TEMP_45_GESAMTPZNDOSIERUNG, "Format: Fließkommazahl (Beispiel: 2.5)");
        en.put(CASE_CARE_CWMAXIMAL, "CareCW maximal***CW cre. max.***Maximum care CW value determined by the validation rules for this case.");
        en.put(RULES_TEMP_263_GK_RSA_DIAGNOSEAMBULANT, "GK RSA:ambulante Diagnosen");
        en.put(READONLY_DOC_ITEM_DKR_PEPP, "Deutsche Kodierrichtlinien PEPP");
        en.put(DIAGNOSIS_REF_TYPE_ADDITIONAL_FROM, "Additional diagnose from");
        en.put(RULES_TXT_CRIT_DIAG_TYPE_DIS, "Diagnose: Typ");
        en.put(CW, "CW");
        en.put(RULES_TEMP_240_ERLOESE, "GK RSA:HMG");
        en.put(WM_REQUESTTYPE, "Requesttype");
        en.put(MENU_SERVER_STATUSTEXT, "Server: {0}:{1}");
        en.put(ANTIBIOTIC_ERYTHROMYCIN, "Erythromycin");
        en.put(RULES_TEMP_80_ZUSCHLAGS_CW, "Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)");
        en.put(REMINDER_MODE_SHOW_ALL, "All reminders");
        en.put(CASE_MERGING_ID, "Merging ID***Mrg. ID");
        en.put(AUDIT_FAX, "Fax");
        en.put(RULES_TXT_CRIT_RECHNUNG_ART_DIS, "Rechnungsart");
        en.put(RULES_CRIT_MRSA_FULL_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben zu einem Versicherten (SA 700)");
        en.put(RULE_TABLE_CODES_NOT_VALID, "The rule table {0} contains invalide codes {1}");
        en.put(STATE_BAVARIA, "Free State of Bavaria");
        en.put(RULES_TXT_CRIT_CASE_STR_4_DIS, "Fall.String04");
        en.put(CASEFEE_VALUE, "Value");
        en.put(CASE_MERGING_CONDITION_EIGHT_PEPP, "1.Fall letztes Jahr vor Umstieg***1.Fall letztes Jahr vor Umstieg");
        en.put(RULES_78_VOLLSTATIONRE_PFLEGE_MIT_ZUSCHUSS, "78 - Vollstationre Pflege mit Zuschuß");
        en.put(ICD_REF_TYPE_STAR, "Star");
        en.put(RULES_TXT_CRIT_REMEDIES_ALL_PRICE, "he_gesamtPreis_alle");
        en.put(ACG_INDEX_TYPE_TRT, "Treatment");
        en.put(REVENUE, "Revenue");
        en.put(RULES_TXT_ADMISSION_TYPE_4_LONG, "V - Verlegung");
        en.put(TEXT_TEMPLATE_REQUEST, "Request Context");
        en.put(RULES_TXT_CRIT_FEEGROUP, "Entgeltbereich");
        en.put(GROUPER_EINSTELLUNGEN_CONFIRM, "The currently set modeler model is for the year {0} . Created cases are rooted with this grouper model!  nDo you want to continue with this setting?");
        en.put(CASE_MERGING_CONDITION_NINE_DRG, "Summary**Summary");
        en.put(RULES_TEMP_157_KLINIK_PROZEDUR, "Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)");
        en.put(BILL_POSITION_REFERENCE, "Reference");
        en.put(RULES_TXT_CRIT_SOLE_PRESCRIPT_DATE_DAK_DIS, "Hilfsmittel: Verordnungsdatum");
        en.put(ANTIBIOGRAM_RESULT_SENSITIVE, "sensibel");
        en.put(RULES_TXT_CRIT_CLINIC_SK_DIS, "Klinik: SK");
        en.put(RULES_TEMP_148_PROZEDUR, "Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)");
        en.put(PROCESS_FINALISATION_CLOSING_DATE_TO, "closing date to");
        en.put(RULES_TXT_CRIT_PRINC_DIAG_LOC_DIS, "Hauptdiagnose: Lokalisation");
        en.put(BILL_POSITION_POSITION_NO, "Position No.");
        en.put(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_NO_PROCESSES, "This case is not assigned to any process");
        en.put(RULES_TEMP_126_INSTITUTIONSKENNZEICHEN, "Alle Einrichtungen, die Leistungen nach dem Sozialgesetzbuch (SGB) erbringen, erhalten auf Antrag ein IK. Systematik einer IK: die ersten 2 Ziffern kennzeichnen die Art der Einrichtung, die Ziffern 3 und 4 kennzeichnen das Bundesland der Einrichtung, die Ziffer 5 bis 8 werden fortlaufend vergeben, die Ziffer 9 dient als Prüfziffer.");
        en.put(ANTIBIOTIC_CEFAZOLIN, "Cefazolin");
        en.put(INS_SHORT_HZK, "HZK");
        en.put(RULE_VALIDATION_RULE_WITHOUT_TABLES, "tables for rule not found");
        en.put(EVENT_NAME_ACTION, "Action");
        en.put(RULES_CASE_SPEC, "Abteilung");
        en.put(ANTIBIOTIC_AMPICILLIN_SULBACTAM, "Ampicillin+Sulbactam");
        en.put(RULES_TXT_CRIT_CASE_STR_1_DIS, "Fall.String01");
        en.put(RULES_GK_RSA_DMPTAGE, "GK_RSA_DMPTage");
        en.put(RULES_TXT_CRIT_BASE_VALUE_TOOLTIP_1, "(auch: Baserate) der Betrag, der bei der Berechnung der DRG - Entgelte für die Krankenhausbehandlung zugrunde gelegt wird.");
        en.put(VALIDATION_ERROR_NO_DISCHARGE_DAY_CASE, "Enter a discharge date for the case!");
        en.put(RULES_TXT_CRIT_RECEIPT_DEPARTMENT_DIS, "aufnehmende Fachabteilung");
        en.put(FEE_GROUP_SEPARATE_CHARGES_WITHOUT_FINAL_INVOICE, "separate charges without final invoice");
        en.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_11, "10 - Stationsäquivalente Behandlung");
        en.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_10, "08 - Stationäre Aufnahme zur Organentnahme");
        en.put(BILL_POSITION_TEXT, "Text");
        en.put(CASE_TYPE_DRG, "DRG");
        en.put(RULES_TEMP_228_VERSICHERTENDATEN, "GK RSA:Versichertentage");
        en.put(AUDIT_INSU_NAME, "Insurance Name");
        en.put(VALIDATION_ERROR_CASE_ALREADY_EXISTS, "A case with casenumber {0} already exists!");
        en.put(DATE_OF_BIRTH, "Date of Birth***Birth***Date of Birth");
        en.put(WORKFLOW_WARNING_NO_CASE, "For the workflow number {0} is no hospital case found.Probably it was deleted.");
        en.put(ORGAN_CARDIOVASCULA, "Cardiovascula");
        en.put(ADMISSION_REASON_2_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE, "Accident at work / commuting accident / occupational disease (§ 11 Abs . 4 SGB V)");
        en.put(RULES_HM_GESAMTPREIS_ALLE, "hm_gesamtPreis_alle");
        en.put(READONLY_DOC_ITEM_DKR_DRG, "Deutsche Kodierrichtlinien DRG");
        en.put(MENU_BATCH_GROUPING_LAST_RESULTS, "Last Results");
        en.put(PROCESS_FINALISATION_CW_CARE_FINAL_FROM, "Care CW final to");
        en.put(CASE_MERGING_STOP_PROCESS, "Stop");
        en.put(RULES_GK_RSA_PZNGESAMTDOSIS, "GK_RSA_PZNGesamtdosis");
        en.put(REVENUE_MATH_DRG_CORR_DEDUCTION_LAYOUT, "Deduction: (DRG-Baserate {0}{1} x corr.CW {2}) x corr.Day(s) {3}");
        en.put(MDK_SUBSEQUENT_PROCEEDING, "subsequent Proceeding ");
        en.put(RULES_CRIT_CARE_STATE_TOOLTIP_9, "Pflegegrad 3");
        en.put(RULES_CRIT_CARE_STATE_TOOLTIP_8, "Pflegegrad 2");
        en.put(RULES_CRIT_CARE_STATE_TOOLTIP_7, "Pflegegrad 1");
        en.put(LAB_DATA_MIN_LIMIT, "Min Limit***Min Limit***Lower limit");
        en.put(STATE_BRANDENBURG, "Brandenburg");
        en.put(CASE_MERGING_JOB_INITIALIZING, "Initializing");
        en.put(CASE_RESOLVE_DATE, "Date");
        en.put(RULE_CODES_4_YEAR_NOT_VALID, "Values {0} for the year {1} are not valid");
        en.put(REMINDER_LATEST_FROM, "Reminder from");
        en.put(RULE_RESULT, "Rules result");
        en.put(WORKFLOW_DEADLINE_CONTINUATION_FEE_DEADLINE, "Deadline continuation fee");
        en.put(RULES_KLINIK_ADRG, "Klinik_ADRG");
        en.put(RULES_TXT_CRIT_ADMISSION_JEAR_TOOLTIP_1, "Jahr, in das der erste Behandlungstag fällt.");
        en.put(GERM_GROWTH_PLENTY, "plenty");
        en.put(RULES_TEMP_276_GK_RSA_DIAGNOSESTATIONAERHMGRELEVANT, "GK RSA:stationäre HMG relevante Diagnosen");
        en.put(RULES_TXT_CRIT_SEPARATION_YEAR_TOOLTIP_1, "Jahr, in das die Entlassung fällt.");
        en.put(NO_RULES_4_IMPORT_FOUND, "There are no rules in import file");
        en.put(CASE_RESOLVE_RULES_RELATION, "Relation");
        en.put(RULES_TXT_OP_NOT_EQUAL, "ungleich ( != )");
        en.put(PROCESS_FINALISATION_CW_INITIAL_FROM, "CW initial from");
        en.put(RULES_TEMP_175_KLINIK_AUFNAHMEUHRZEIT, "Klinische Daten: Aufnahmeuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.");
        en.put(MDK_CONTINUATION_FEE_DEADLINE_ERROR, "No valid entry is found for the continuation fee deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.");
        en.put(INS_SHORT_BKK, "BKK");
        en.put(RULES_CRIT_ACG_ADG_VECTOR, "acg_ADG_Vektor");
        en.put(CATALOG_DRG_NEGO_TITLE, "Negotiated Fee");
        en.put(SAVE, "save");
        en.put(ADD_CASE_ADD_BILL, "add bill");
        en.put(ANTIBIOTIC_PENICILLIN, "Penicillin");
        en.put(ADMISSION_REASON_2_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER, "Traffic accident / sports accident / Other accident (for example, § 116 SGB X)");
        en.put(DOCUMENTATION_TYPE_REVIEW, "Case review");
        en.put(RULES_TXT_CRIT_PSYCH_OPS_NUMBER, "Anzahl_Psych_OPS");
        en.put(RULES_TXT_CRIT_BONUS_DAYS_DIS, "Zuschlagstage");
        en.put(RULES_TEMP_218_GK_RSA_KHAUSGABEN, "GK RSA:Ausgaben für KH");
        en.put(DIALOG_BATCH_GROUPING_ERRORDRGPEPP, "Error DRG/PEPP");
        en.put(RULES_TEMP_16_HM_GESAMTMENGE, "Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.");
        en.put(RULES_CRIT_MRSA_DDD_TOOLTIP, "Daily Defined Dosis zu einem Medikament anhand PZN bzw. ATC");
        en.put(RULES_TEMP_174_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT, "Format: YYYYMMDD HH:mm");
        en.put(CASE_CW_EFFECTIVE_FROM, "CW eff. from");
        en.put(RULES_CRIT_MRSA_PZNCODE_TOOLTIP_2, "Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können.");
        en.put(RULES_TEMP_20_HM_GESAMTPREIS, "Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.");
        en.put(ORGAN_SKIN, "Skin");
        en.put(RULES_TEMP_82_ENTGELT, "Format: alphanumerisch 8-stellig (Beispiel: 48000001)");
        en.put(RULES_TXT_CRIT_PRINC_DIAG_DIS, "Hauptdiagnose");
        en.put(RULES_TXT_CRIT_SEC_DIAG_TYPE_DIS, "Sek. Diagnose: Typ");
        en.put(CASE_MERGING_JOB_STARTED, "Determine cases to merge");
        en.put(PATIENT_WEIGHT_MEASURE_GRAM, "Gram");
        en.put(RULES_CRIT_ACG_CODE_DIS, "ACG: ACG-Code");
        en.put(INS_STATUS_RETIREES_AND_DEPENDENTS, "Retirees and dependents");
        en.put(CREATION_DATE_TO, "Creation Date to");
        en.put(TREAT, "Treat");
        en.put(DRG_CODE, "DRG-Code");
        en.put(HOLIDAY, "Holiday");
        en.put(EVENT_TYPE_PROCESS_SUBJECT_CHANGED_DESCRIPTION, "Process subject changed from: {0} to: {1}");
        en.put(ADDRESS_MOBILE_NUMBER, "Mobile Number");
        en.put(RULES_HM_GESAMTPREIS, "hm_gesamtpreis");
        en.put(DURATION_TIME, "time");
        en.put(DEPARTMENT_TYPE_MAIN_DEPARTMENT, "MD");
        en.put(RULES_TXT_CRIT_REMEDIES_PRESCRIPTION_DATE_DIS, "Heilmittel: Verordnungsdatum");
        en.put(ORGAN_GYNECOLOGY, "Gynecology");
        en.put(RULES_TXT_INTERVAL_QUARTERS, "Quartal(e)");
        en.put(CASE_DETAILS_CANCEL_REASON_CASE_MERGE, "Case merging");
        en.put(CASE_RESOLVE_DRG, "DRG");
        en.put(RULES_TXT_ADM_WEEKDAY, "Aufnahmewochentag");
        en.put(ANTIBIOTIC_OXACILLIN_FLUCLOXACILL, "Oxacillin/Flucloxacill.");
        en.put(RULES_TXT_CRIT_CLINIC_DIS_DATE_FULL, "Klinik_Entlassungsdatum_mit_Uhrzeit");
        en.put(REQUEST_CREATION_DATE, "Request Creation Date***Creation Date***Request Creation Date");
        en.put(COUNT_SD_FROM, "∑ SD from");
        en.put(RULES_TXT_CRIT_ADMISSION_DOC_DIS, "Einweisender Arzt");
        en.put(MD_MASTERDATA, "MD masterdata");
        en.put(RULES_DOSIERUNGSEINHEIT, "Dosierungseinheit");
        en.put(RISK_AREA_PRIMARY_MISALLOC, "Primary misallocation");
        en.put(RULES_ENTLASSENDEFACHABTEILUNG, "EntlassendeFachabteilung");
        en.put(RULES_TXT_CRIT_MEDICAMENT_PRICE_DIS, "KH Medikament: Preis");
        en.put(RULES_TEMP_227_VERSICHERTENDATEN, "GK RSA:Geschlecht");
        en.put(RULES_GK_RSA_STATIONAEREDXG, "GK_RSA_StationaereDxG");
        en.put(MDK_STATUS, "Request State");
        en.put(SAME_RULE_OTHER_CAPTION, "Same rule with Ident but other caption is found in Pool");
        en.put(RULES_TEMP_257_DIAGNOSENGRUPPEN, "GK RSA:stationäre Diagnosen");
        en.put(RULES_CRIT_MRSA_DEAD_TOOLTIP_4, "0 - sonst");
        en.put(RULES_7P_BEWILLIGUNG_PFLEGEGELD, "7P - Bewilligung Pflegegeld");
        en.put(RULES_CRIT_MRSA_DEAD_TOOLTIP_3, "1 - verstorben");
        en.put(CATALOG_DOWNLOAD_DRG_FEE, "DRG Supp. Fees");
        en.put(IDENT_CLASS_ID97, "Reserved for internal administrative-free use in the institutions");
        en.put(IDENT_CLASS_ID96, "Authorities of the federal and state governments, courts");
        en.put(ANTIBIOTIC_RIFAMPICIN, "Rifampicin+");
        en.put(RULES_CRIT_ACG_EDC_DIS, "ACG: EDC-Code");
        en.put(RULES_CASE_DISCHARGE_DATE, "Entlassungsdatum");
        en.put(IDENT_CLASS_ID95, "Health insurance outside the statutory health insurance");
        en.put(IDENT_CLASS_ID94, "Care funds outside the statutory health insurance");
        en.put(IDENT_CLASS_ID93, "aid agencies");
        en.put(RULES_7A_BEREUNGSLEISTUNG_BIS_30_06_2008, "7A - Bereungsleistung bis 30.06.2008");
        en.put(RULES_TXT_CRIT_NOW_TIME_TOOLTIP_1, "Die Systemzeit.");
        en.put(PROCESS_BASERATE_PEPP_VALIDTO, "valid to");
        en.put(DIALOG_BATCH_GROUPING_KORROGVD, "corr. HTP");
        en.put(FAX, "Fax");
        en.put(INPUT_NUMBER_TO, "To");
        en.put(RULES_TXT_CRIT_ACCOUCHEMENT_DATE_1_DIS, "Tag der Entbindung1");
        en.put(CASE_MERGING_CONDITION_ONE_DRG, "Within High ***Within High trim point");
        en.put(DIALOG_BATCH_GROUPING_INTENSIVCARE, "Intensivcare");
        en.put(RULES_TXT_CRIT_PROC_LOCALISATION_DIS, "OPSLokalisation");
        en.put(SETTING_SEARCH_LISTS, "Search lists");
        en.put(IDENT_CLASS_ID89, "Group indicator grouping several IK");
        en.put(RULES_CRIT_ACG_ADG_CODES_TOOLTIP, "32 nicht exkluxive Gruppen. Eine ADG ist eine Morbiditätsgruppe, die Schwere und Dauer des Zustandes des Patienten beschreibt. Aggregierte diagnostischen Gruppen. Die Bausteine des ACG-Systems. Jeder ADG-Code ist eine Gruppierung von Diagnose-Codes, die ähnlich im Hinblick auf die Schwere und Wahrscheinlichkeit der Persistenz der Gesundheitszustand im Laufe der Zeit sind.");
        en.put(WORKFLOW_DEADLINE_BILL_CORRECTION_DEADLINE, "Deadline for bill correction");
        en.put(ANTIBIOTIC_PIPERACILLIN_TAZO, "Piperacillin+Tazo.");
        en.put(DRG_TEXT, "DRG-Text");
        en.put(DIALOG_BATCH_GROUPING_NURSINGDAYS_TOOLTIP, "Sum of LOS from all cases");
        en.put(CATALOG_UPDATE_NOTIFICATION, "The server has an update of catalog data available!");
        en.put(DISCHARGE_REASON_COMPLETED_TREATMENT_REGULARLY, "completed treatment regularly");
        en.put(RULES_KOSTENGEWICHT_EFFEKTIV, "Kostengewicht_effektiv");
        en.put(LEVEL_WARNING, "Auftreten einer unerwarteten Situation");
        en.put(RULES_TXT_OP_IN_FALL, "in Fall ( ~ )");
        en.put(MDK_REPORT_CREATION_DATE, "Report Creation Date");
        en.put(DATE_OF_BIRTH_FROM, "Birth from");
        en.put(CATALOG_DOWNLOAD_BASERATES, "Baserates");
        en.put(FILE, "File");
        en.put(RULES_ALTERINJAHREN, "AlterInJahren");
        en.put(GERM_GROWTH_NO_INFORMATION, "no information");
        en.put(PROCESS_STATUS_OPEN, "Process is open");
        en.put(LOGIN_PASSWORD, "Password");
        en.put(RULES_TAGEOHNEBERECHNUNGPROENTGELT, "TageOhneBerechnungProEntgelt");
        en.put(REPORT_DIALOG_CONTENT_TEXT, "Report is Generating");
        en.put(WORKFLOW_DEADLINE_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE, "ProposalSubsequentProceedingsDeadline");
        en.put(FILTER_PROCESS_CANCEL, "All canceled processes");
        en.put(RULES_TEMP_25_HM_MENGE, "Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.");
        en.put(RULES_33_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "33 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung und ohne Entlassungsanzeige");
        en.put(SAP_BILLS_UPDATE_TOOLTIP, "Update the Bills from SAP");
        en.put(CREATION_DATE_FROM, "Creation Date from");
        en.put(SUPPL_FEE_SP, "SP");
        en.put(RULES_TXT_CRIT_CLINIC_VWD_IN_HOURS, "Klinik: Vwd in Stunden");
        en.put(TEMPLATE_CATEGORY_MAIN, "Main category for a template");
        en.put(RULES_TEMP_122_ENTLASSUNGSMONAT, "Format: MM");
        en.put(RULE_TERM_NOT_COMPLETE, "Rule term is not complete");
        en.put(SUPPL_FEE_SF, "SF");
        en.put(MS_OFFICE_DISABLED, "Ms Office was deactivated, it is out of use now!");
        en.put(RULES_TEMP_184_KLINIK_ENTLASSUNGSUHRZEIT, "Klinische Daten: Entlassungsuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.");
        en.put(STATE_MECKLENBURG_WESTERN_POMERANIA, "Mecklenburg Western Pomerania");
        en.put(FEE_GROUP_MODEL_PROJECTS_WITH_FINAL_INVOICE, "Model projects (with final invoice)");
        en.put(IDENT_CLASS_ID66, "Clearinghouses, data centers, accounting inspection");
        en.put(IDENT_CLASS_ID65, "Undertakers");
        en.put(STATE_NORTH_RHINE_WESTPHALIA, "Northrhine-Westphalia");
        en.put(IDENT_CLASS_ID60, "Ambulance companies, doctors and providers in the emergency medical care");
        en.put(RULES_TXT_CRIT_ADMISSION_JEAR_DIS, "Aufnahmejahr");
        en.put(RULES_TEMP_265_GK_RSA_QUALIFIZIERUNGDIAGNOSENAMBULANT, "GK RSA:Ambulante Diagnosen Qualifizierung");
        en.put(RULES_COL_OPDATUM, "Datum");
        en.put(GROUP_RESULT_CODE_VALID_DUPLICATE, "duplicate");
        en.put(RULES_GROUP_OTHERS_TOOLTIP_2, "Zeitangabe 'Jetzt'");
        en.put(WORKFLOW_CLOSE_AND_CREATE_REMINDER_NOT_UNIQUE, "This function can only be used if the filter 'type of resubmission' is set uniquely (once).");
        en.put(BILL_TYPE_ENUM_REMINDER, "reminder bill");
        en.put(RULES_TXT_GROUP_CARE_DATA_DIS, "Pflegedaten");
        en.put(SAME_RULE_OTHER_RULE_TYPE, "Same rule with Ident but other rule type is found in Pool");
        en.put(WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_ERROR, "workflow {0} could not be canceled.");
        en.put(RULES_CRIT_ACG_MAJOR_ADG_COUNT, "acg_HauptADGsAnzahl");
        en.put(RULES_CRIT_ACG_PHARMA_COST_BAND_DIS, "ACG: Med Kosten Gruppe");
        en.put(DRG_CORR_TYPE_NO, "No");
        en.put(RULES_TEMP_121_ENTLASSUNGSJAHR, "Format: YYYY");
        en.put(MENU_ROLE_CHANGE, "Change the active role of the user...");
        en.put(RULES_TXT_CRIT_LOSLESS_24H_DIS, "Verweildauer kleiner 24h");
        en.put(IDENT_CLASS_ID59, "Other providers of services i. P of the SGB");
        en.put(RULES_2_PFLEGESTUFE_2, "2 - Pflegestufe 2");
        en.put(RULES_CRIT_MRSA_AGG_TOOLTIP_2, "Format: 1-bis 2-stellig, ganze Zahl (Beispiel 23)");
        en.put(RULES_CRIT_MRSA_AGG_TOOLTIP_1, "Vom BVA festgelegte Alters- und Geschlechtsgruppen");
        en.put(IDENT_CLASS_ID57, "Stationary prevention and rehabilitation facilities");
        en.put(CASE_MERGING_CASE, "Merged Case***Mrg. Case");
        en.put(RULES_TXT_CRIT_SOLE_HIMINUMBER_DIS, "Heil- und Hilfsmittel: Hilfsmittelnummer");
        en.put(IDENT_CLASS_ID54, "Outpatient and mobile rehabilitation facilities");
        en.put(IDENT_CLASS_ID53, "Facilities for vocational rehabilitation measures");
        en.put(IDENT_CLASS_ID52, "Contract homes without medical institutions");
        en.put(IDENT_CLASS_ID51, "Care homes, day and respite care, special education centers, centers Sozialtherapeutische");
        en.put(IDENT_CLASS_ID50, "Charitable organizations, diaconal and social centers, community nurses, support groups, parishes, municipalities (care services, health, social care and nursing stations)");
        en.put(COMMENT, "Comment");
        en.put(ICD_TYPE_DEPARTMENT_DISCHARGE, "Department Discharge");
        en.put(RULES_ENTGELTABRECHNUNGVON, "EntgeltabrechnungVon");
        en.put(MDK_PHONE_PREFIX_VALIDATE, "Invalid Telephone-prefix. Please provide valid entry.");
        en.put(RULES_TXT_CRIT_SOLE_PRICE_DAK_DIS, "Hilfsmittel: Einzelpreis");
        en.put(IDENT_CLASS_ID49, "Other therapeutic assistants, psychologists, psychotherapists, teaching aids, sociotherapy, Breakfast conveyor, special education, mobility manager, sign language interpreters, eurythmy therapists, social pediatric centers, after-care service PEKIP");
        en.put(RULES_TEMP_5_HE_GESAMTPREIS_ALLE, "Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.");
        en.put(IDENT_CLASS_ID48, "Employment and addiction therapists design and child therapy, occupational therapy, expressive therapy");
        en.put(IDENT_CLASS_ID47, "health resorts");
        en.put(IDENT_CLASS_ID46, "Sick and elderly carers, housekeepers, hospice nurse, power and industrial auxiliary ring");
        en.put(IDENT_CLASS_ID45, "midwives");
        en.put(IDENT_CLASS_ID44, "Physiotherapists, practices for physiotherapy, sports clubs, antenatal exercises, Rehabilitationssport-, Herzsport- and disabled sports groups, functional training groups, gyms, riding therapy");
        en.put(MENU_SEARCH_FILTER, "Searchfilter");
        en.put(IDENT_CLASS_ID43, "Med. Spa therapists, masseurs, practices for physical therapy, orthopedic surgeons (point of service provision, for example, massages), spas, Kurpacker");
        en.put(IDENT_CLASS_ID42, "See schools");
        en.put(IDENT_CLASS_ID40, "Speech therapist, speech therapy therapist, special education");
        en.put(RULES_VPS_ERR_TEXT_TOOLTIP, "VPS: Fehlertext aus der Iskv");
        en.put(REMINDER_VALIDATION_WARNING_NO_RECEIVER, "Kein WV Empfänger eingetragen");
        en.put(RULES_TXT_CRIT_BIRTHDAY_TOOLTIP_1, "Das Geburtsdatum des Patienten.");
        en.put(ADMISSION_REASON_2_EMERGENCY_CASE, "Emergency Case");
        en.put(RULES_TEMP_190_KLINIK_IKZ, "Format: 9-stellig numerisch (Beispiel: 123456789)");
        en.put(PROCESS_FINALISATION_LOS_FINAL, "Los final***Los Final***Los of the version of the case that has been assigned to this operation to complete the operation");
        en.put(ADMISSION_DEPARTMENT_SHORT, "Admission Department §. 301***Adm. 301***Admission Department §. 301");
        en.put(ANTIBIOTIC_MEROPENEM, "Meropenem");
        en.put(RULES_TEMP_8_HE_GESAMTPREIS, "Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)");
        en.put(IDENT_CLASS_ID39, "Podiatrists, med. Chiropodists");
        en.put(RULES_TEMP_162_KLINIK_OGVD, "Format: Ganzzahlig (Beispiel 15)");
        en.put(IDENT_CLASS_ID35, "Wigs (hairdressers)");
        en.put(IDENT_CLASS_ID34, "Orthopädieschuhmacher, orthopedists (point of service provision, as deposits)");
        en.put(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_REGULAR_CASE, "Integrated care - Regular case");
        en.put(IDENT_CLASS_ID33, "Orthopedic technician, bandages, medical supply stores, medical and hospital supplies, Stomafachhandel Aids");
        en.put(RULES_CRIT_ACG_UNSCALED_TOTAL_CRI_TOOLTIP, "Kostenindex für zukünftige Gesamkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG P.M. Index (PRI) für ACG P.M. für Voraussage Gesamtkosten. Die geschätzten Gesamtkosten (einschließlich Apothekenkosten) für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0) wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalyse stellen Vergleiche zu den nationalen Normen zur Verfügung.");
        en.put(IDENT_CLASS_ID32, "Audiologist, otolaryngologists (point of service provision, for example, hearing aids)");
        en.put(RULES_TEMP_247_DIAGNOSENGRUPPEN, "GK RSA:ambulante Diagnosen");
        en.put(IDENT_CLASS_ID31, "Optometrists, Ophthalmologists (point of service provision, for example, contact lenses)");
        en.put(IDENT_CLASS_ID30, "pharmacies");
        en.put(NO_SEARCH_RESULTS, "No search results");
        en.put(PROCESS_BASERATE_PEPP_VALUE, "value");
        en.put(TP_301_INFORMATION_KEY_30_BEK20, "Realized case dialogue without solution in pre-trial proceeding, no test complaint by MD because of maximum permissible check quota");
        en.put(RULES_UNTERSUCHUNGSDATUM, "Untersuchungsdatum");
        en.put(READONLY_DOC_ITEM_AOP, "AOP");
        en.put(RULES_TEMP_149_SEKDIAGNOSE, "z.B. N08.3* Glomeruläre Krankheiten bei Diabetes mellitus oder U81! Bakterien mit Multiresistenz gegen Antibiotika");
        en.put(IDENT_CLASS_ID29, "Medical and technical laboratories, X-ray and Dental Technology, Institute of Pathology, Radiation and Hygiene Institute");
        en.put(RULES_GENDER_MASCULINE, "m");
        en.put(RULES_TEMP_72_ENTGELTE, "Rechnung: Rechnungsdatum");
        en.put(CATALOG_MENU_UPDATE_CHANGES_FOUND, "{0} changes at {1}");
        en.put(IDENT_CLASS_ID27, "Polyclinics, Integrated care, practice clinics");
        en.put(RULES_CRIT_AMBU_CARE_PROVIDED_TO_TOOLTIP, "Der letzte Tag der aufgebrachten Leistung");
        en.put(IDENT_CLASS_ID26, "Hospitals, hospital pharmacies");
        en.put(RULES_TEMP_202_GK_RSA_ATCCODE, "Wird mit der Satzart 400 übermittelt. Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Angegeben werden die von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATCs. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04");
        en.put(IDENT_CLASS_ID22, "Private medical clearing centers");
        en.put(BILL_STATUS, "Status");
        en.put(IDENT_CLASS_ID21, "Kassen dental associations and dentists incl. Selbstabrechnender dentists (as consultant)");
        en.put(TREATMENT, "Treatment");
        en.put(FILE_ALREADY_EXISTS, "File {0} already exists");
        en.put(IDENT_CLASS_ID20, "Panel physician associations and doctors incl. Selbstabrechnender doctors (as evaluators doctors)");
        en.put(RULES_TEMP_207_GK_RSA_PZNGESAMTDOSIS, "Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können. Ist mit Hilfe der Tabelle des WiDO zu ermitteln. Die Summe aller Mengen der Medikamente, bei denen ein PZN ? Code eingetragen ist.");
        en.put(SEARCH_ABORTED, "Search was aborted by user");
        en.put(RULES_TXT_GROUP_OTHERS_DIS, "Sonstige");
        en.put(RULES_LABORBESCHREIBUNG, "Laborbeschreibung");
        en.put(ROW_NUM_TO, "Row Number bis");
        en.put(EVENT_TYPE_CASE_ADDED, "Case of type {0} is added: Case number: {1}***Added cases");
        en.put(DISCHARGE_REASON_COMPLETED_TREATMENT_FOR_OTHER_REASONS, "completed treatment for other reasons");
        en.put(TP_301_INFORMATION_KEY_30_BEK10, "No data correction / addition in pre-trial proceeding and no test complaint by MD because of maximum permissible check quota");
        en.put(RULE_COLUMN_IDENT, "ident number***ident number***ident number of rule");
        en.put(RULES_TEMP_70_VERLEGUNGSUHRZEIT, "Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten");
        en.put(RULES_CRIT_ACG_MAJOR_RXMG_TOOLTIP, "Hauptgruppen Morbiditäts Codes, Medikamten-Basis: Basis-Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten.");
        en.put(DIALOG_BATCH_GROUPING_UNKCMI, "unk. CMI");
        en.put(IDENT_CLASS_ID19, "Support the Community's tasks and medical service of health insurance (MD) and the Medical Service Social (MDS)");
        en.put(IDENT_CLASS_ID18, "Care funds of the health insurance");
        en.put(IDENT_CLASS_ID17, "health authorities");
        en.put(IDENT_CLASS_ID16, "private health insurance");
        en.put(IDENT_CLASS_ID15, "Pension offices and Orthopedic Supplies Set");
        en.put(IDENT_CLASS_ID14, "Federal agency for work");
        en.put(RULES_KLINIK_SK, "Klinik_SK");
        en.put(REMINDER_HIGH_PRIORITY, "high Priority");
        en.put(IDENT_CLASS_ID13, "Welfare agency");
        en.put(IDENT_CLASS_ID12, "Accident insurance institutions");
        en.put(RULES_TEMP_159_KLINIK_ADRG, "Format: Alphanumerisch (Beispiele: A11 oder B75)");
        en.put(IDENT_CLASS_ID11, "pension insurance");
        en.put(RULES_CRIT_ACG_DEPRESSION, "acg_Depression_vorhanden");
        en.put(IDENT_CLASS_ID10, "health insurance");
        en.put(PROCESS_FINALISATION_LOS_DIFF, "Los diff***Los diff***Difference between the retention period of the initial assigned case version (KIS) and the possibly changed checkpoint case version, assigned at the end of the transaction (Los Initial - Los Final = Los DIFF)");
        en.put(RULES_28_VORSTATIONAER_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "28 - vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige");
        en.put(SETTING_SESSION, "Sessions");
        en.put(RULES_GLEICHENPROZEDURENANZAHL, "GleichenProzedurenAnzahl");
        en.put(RULE_NO_CONTENT_FOUND, "Rule has no content");
        en.put(BILL_POSITIONS, "bill positions");
        en.put(TP_301_INFORMATION_KEY_30_BEK00, "Termination of the test procedure due to data correction - MD not necessary");
        en.put(RULES_TEMP_212_AUSGABEN, "GK RSA:Ausgaben für Ärzte");
        en.put(RULES_17_VORSTATIONAER_OHNE_SCHLUSSRECHNUNG, "17 - vorstationär ohne Schlussrechnung");
        en.put(HOSPITALIZATION_DIAGNOSIS, "Hospitalization Diagnosis");
        en.put(RULES_TEMP_56_FALL_NUMERIC_9, "Fall.Numeric9");
        en.put(REQUEST_ADDED_TOOLTIP, "Update this Request");
        en.put(MENU_USER_CHANGE, "Change user");
        en.put(RULES_TXT_CRIT_CLINIC_PROCEDURE_DIS, "Klinik: Prozedur");
        en.put(CASE_MERGING_JOB_FAILED, "Failed");
        en.put(MDK_MAIL_ADDRESS_VALIDATE, "Invalid Email-address. Please provide valid entry.");
        en.put(RULES_TEMP_270_GK_RSA_DXG, "GK RSA:DxG");
        en.put(EVENT_TYPE_DOCUMENT_ADDED, "Document added: type {0}, file name {1}***Added documents");
        en.put(PROCESS_MAIN_CASE_ERROR, "MainCase of the process is null. Please add main case to this process!!");
        en.put(ADDRESS_CITY, "City");
        en.put(BILL_FISCAL_YEAR, "Year");
        en.put(SETTING_PROTOCOL_FILE, "Protocol file");
        en.put(DISCHARGE_REASON_CASE_STATEMENTS_WHEN_SWITCHING_BETWEEN_INPATIENT_AND_DAYCARE_TREATMENT, "Case statements (internal transfer) when switching between in-patient and day-care treatment");
        en.put(RULES_KLINIK_ENTLASSUNGSGRUND, "Klinik_Entlassungsgrund");
        en.put(RULE_VALIDATION_RULE_NO_CONTENT, "rule is empty");
        en.put(RULES_TXT_CRIT_INTENSIV_STAY_DIS, "Intensivverweildauer");
        en.put(SEARCH_LIST_CHILD_TYPE_BETWEEN, "Bereich");
        en.put(RULES_TEMP_90_GROUPERRELEVANTEPROZEDUR, "Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)");
        en.put(DOCUMENT_TYPE, "Document type");
        en.put(RULES_TEMP_110_AUFNAHMEJAHR, "Format: YYYY");
        en.put(RULE_TABLE_NOTE, "Table comment");
        en.put(AUDIT_DATA_RECO_CORR_DEADLINE, "Data Record Correction");
        en.put(RULES_TXT_OP_OR, "oder ( || )");
        en.put(PROCESS_FINALISATION_NO_RIGHT, "No authorization for process completion");
        en.put(RULES_TXT_INTERVAL_MONTHS, "Monat(e)");
        en.put(CONTEXT_MENU_OPENPATIENT, "open health status");
        en.put(RULES_TXT_CRIT_SEC_DIAG_TOOLTIP_1_1, "Die Sekundär-Diagnose ist in ein Code aus der Kreuz-Stern-Systematik (der Sterncode) oder ein anderer optionaler Kode.");
        en.put(RULES_CRIT_ACG_HEART_FC_CONDITION_DIS, "ACG: Herzinsuffizienz vorhanden");
        en.put(FEE_GROUP_NUB_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "NUB without final invoice and without Discharge");
        en.put(WORKFLOW_NUMBER, "Process No.");
        en.put(DAY_FRIDAY, "Friday***Fr");
        en.put(RULES_GROUP_DIAG_GROUPS_MRSA_TOOLTIP, "Diagnosengruppen");
        en.put(RULES_TXT_CRIT_SOLE_PRICE_DIS, "Heil- und Hilfsmittel: Einzelpreis");
        en.put(RULES_CRIT_MRSA_HOSP_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben für KH zu einem Versicherten (SA 700)");
        en.put(RULES_TEMP_108_AUFNAHMEDATUM_MIT_UHRZEIT, "Die Uhrzeit der Aufnahme wird mitberücksichtigt");
        en.put(ICD_TYPE_TREATMENT, "Treatment");
        en.put(CATALOG_SK_PRE, "Error-PEPP and other PEPP");
        en.put(DEATAIL_CASE_DATA, "Detailed case data");
        en.put(MDK_ZIP_CODE_VALIDATE, "Invalid Zipcode. Please provide valid entry.");
        en.put(RULES_TXT_CRIT_REMEDIES_PRICE_DIS, "Heilmittel: Einzelpreis");
        en.put(RULES_TXT_CRIT_REMEDIES_ALL_PRICE_DIS, "Heilmittel: Gesamtpreis");
        en.put(BATCHPROCESSING_LAST_PROCESS, "Last batchprocess: {0}");
        en.put(RULES_TEMP_30_ATCCODE, "Format: alphanumerisch (Beispiel: B01AX04)");
        en.put(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DATE_TOOLTIP_1, "Datum, an dem ein Arzt das Medikament verordnet hat.");
        en.put(CATALOG_DRG_COSTWEIGHT, "Cost weight (DRG)");
        en.put(PROCESS_FINALISATION_CW_CARE_DIFF_TO, "Care CW diff to");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_9, "21 - Kostenträgerwechsel - Normalfall");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_8, "07 - Notfall");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_7, "06 - Kriegsbeschädigten-Leiden / BVG-Leiden");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_6, "04 - Hinweis auf Einwirkung von äußerer Gewalt");
        en.put(RULES_CRIT_ACG_EDC, "acg_EDC_Code");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_5, "03 - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)");
        en.put(VALIDATION_WARNING_NO_ORIGIN_HOSPITAL, "Admission cause is set as Transfering. There should be an origin hospital!");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_4, "02 - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)");
        en.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_3, "01 - Normalfall");
        en.put(GROUP_RESULT_CODE_VALID_GENDER_CONFLICT, "gender conflict");
        en.put(GROUPER_OPS_RES_TYPE_NOR_INVALID_LOC_AND_DATE, "NonOR procedure with conflict subsidiary risk label and OPS date");
        en.put(RULES_VERSICHERTER_VERSICHERTENSTATUS, "Versicherter_Versichertenstatus");
        en.put(RULES_TEMP_156_KLINIK_PROZEDUR, "Klinische Daten: Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.");
        en.put(AGE_YEARS, "Years");
        en.put(DAY_CARE, "DayCare");
        en.put(ADMISSION_WEIGHT_TO, "Weight to");
        en.put(FILTER, "Filter");
        en.put(LEVEL_TRACE, "ausführlicheres Debugging, Kommentare");
        en.put(RULES_TXT_PCCL_DIS, "PCCL");
        en.put(CATALOG_DIALOG_DIAGNOSES, "Diagnoses");
        en.put(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_PZN_DIS, "KH Medikament: Gesamtpreis für PZN");
        en.put(REMINDER_SUBJECT, "Reminder");
        en.put(PROCESS_FINALISATION_REVENUE_DIFF_TO, "Revenue Diff to ");
        en.put(FEE_GROUP_PEPP_ANNEX_1A_INPATIENT_AND_2A_PARTIAL_INPATIENT_WITH_FINAL_INVOICE, "PEPP Annex 1a (inpatient) and 2a (partial inpatient) (with final invoice)");
        en.put(GROUP_RELEVANT_CODE_USING_BOTH_OPD_BY_A_CONSTRUCT_AS_ALSO_OTHERWISE, "Using both OPD by a construct as also otherwise (i.e., 1 + 2)");
        en.put(RULES_TXT_OP_LT, "kleiner ( < )");
        en.put(AGE_IN_DAYS, "Age in Days***Age D.***Age in Days");
        en.put(LOGIN_ERROR_MESSAGE, "Error happened when I tried to connect configuration service.Please check these possible reasons:");
        en.put(FEE_GROUP_NUB, "NUB");
        en.put(MDC, "MDC");
        en.put(INS_SHORT_HEK, "HEK");
        en.put(CASE_STATUS_CLOSED, "Closed");
        en.put(RULES_TEMP_150_SEKDIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        en.put(RULES_CRIT_ACG_HYPERTENSION_DIS, "ACG: Bluthochdruck vorhanden");
        en.put(RULES_TEMP_185_KLINIK_ENTLASSUNGSUHRZEIT, "Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten");
        en.put(PROCESS_FINALISATION_RESULT_DELTA_FROM, "Res. delta from");
        en.put(MDK_REPORT_RECEIVE_DATE, "Report Receive Date");
        en.put(DELETE_SERVICE, "Do you really want to delete the service?");
        en.put(WORKFLOW_CLOSE_AND_CREATE_REMINDER, "Reminders - close all and create a new one");
        en.put(RULES_TXT_CRIT_PSYCH_OPS_NUMBER_TOOLTIP, "Anzahl Psych-OPS");
        en.put(RULE_MESSAGE_CATALOG_TRANSFER_DIALOG_WARNING, "There are still errors regarding the catalog transfer from {0} to {1} present in this rule.If this rule is saved, these errors will not be shown again!Save anyway?");
        en.put(CASECREATION_SUCCESS, "Case successfully created!");
        en.put(CASE_TYPE_PRE_ADMISSION_TERMINATORS, "pre-admission terminators");
        en.put(RULES_TXT_CRIT_ENTGELTANZAHL_DIS, "Entgeltanzahl je Entgelt");
        en.put(RULES_TEMP_61_AUFNEHMENDEFACHABTEILUNG, "z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.");
        en.put(PROCESS_FINALISATION_CLOSING_DATE_FROM, "closing date from ");
        en.put(RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_TOOLTIP_2, "Format: alphanumerisch (Beispiel: B01AX04)");
        en.put(AUDIT_QUOTA_RESULT_INFORMATION, "The check rate for the cash register {0} for the quarter {1} / {2} has not yet been reached.Details: Number of inpatient cases: {3}Number of complaints (actual value): {4}Number of complaints (target value) : {5}Quick review rate for the quarter: {6}");
        en.put(BILL_KIND, "Kind");
        en.put(RULES_TXT_CRIT_CLINIC_DIS_REASON_DIS, "Klinik: Entlassungsgrund");
        en.put(ADMISSION_MODE_DAY_CARE, "Day care (for DRG)");
        en.put(VALIDATION_WARNING_PSEUDO_DEPARTMENT, "Pseudo-Department should not have one or more Diagnosis!");
        en.put(DOCUMENTATION_RISK_DESCRIPTION_TEXT_2, "Die auf dem Basis der Regelverletzungen geschätzte Werte sind in den grauen Felder vorgegeben.");
        en.put(DOCUMENTATION_RISK_DESCRIPTION_TEXT_1, "Hier können Sie die Risiken und Verlustvolumen der eventuellen MD -Anfrage/-Kürzung abgeben. ");
        en.put(BOOKMARKS, "bookmarks");
        en.put(RULES_TEMP_35_GESAMTATCPREIS, "Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)");
        en.put(BILL_POSITION_AMOUNT, "Amount");
        en.put(RULES_CRIT_MRSA_DRUGSTORE_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben für Apotheken zu einem Versicherten (SA 700)");
        en.put(REVENUE_MATH_DRG_CATALOG_LAYOUT, "Catalog-Revenue: DRG-Baserate {0}{1} x CatalogCW {2}");
        en.put(PROCESS_FINALISATION_CW_CARE_INITIAL, "Care CW initial***initial***Evaluation relation for care of the KIS version of the case, which was initially assigned to this process.");
        en.put(DOCUMENT_TYPE_MDK_REPORT, "MD Report");
        en.put(RULES_TXT_CRIT_SOLE_FULL_PZN_NUMBER_DIS, "Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelnummer");
        en.put(RULES_CRIT_ACG_AGE_TOOLTIP, "Alter aus den ACG Daten");
        en.put(DOCUMENTATION_RISK_FULL_RISK, "Full Risk");
        en.put(RULES_KLINIK_NEBENDIAGNOSE, "Klinik_Nebendiagnose");
        en.put(RULES_GESAMTPZNDOSIERUNG, "GesamtPZNDosierung");
        en.put(NO_DISCHARGE_REASON_3_FOUND, "Discharge reason 3 is not set");
        en.put(ADMISSION_REASON_HOSPITALISATION_TO_ORGAN_REMOVAL, "Hospitalisation to organ removal");
        en.put(MDK_PROCESS_START_DATE, "Process Start Date");
        en.put(CASE_TYPE_PSY, "Psychosomatic");
        en.put(STATE_FOREIGN_COUNTRY, "Foreign Country");
        en.put(RULES_CRIT_ACG_ASTHMA_CONDITION, "acg_Asthma_vorhanden");
        en.put(RISK_PERCENT_TOTAL, "Risk in %");
        en.put(PROCESS_FINALISATION_REVENUE_INITIAL, "Revenue Initial");
        en.put(RULES_KLINIK_PEPP, "Klinik_PEPP");
        en.put(RULES_TXT_OP_IN, "enthalten ( IN  )");
        en.put(WARD_GROUPING, "Ward Grouping");
        en.put(ADMISSION_MODE_SURGEON, "B-Sur.******Surgeon");
        en.put(MDK_DOCUMENT_REQUEST, "Document Request at");
        en.put(RULES_7C_BEREUNGSLEISTUNG_MAXIMALBETRAG, "7C - Bereungsleistung Maximalbetrag");
        en.put(RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT, "acg_Anzahl_chronischer_Erkrankungen");
        en.put(LUMP_SUM, "Lump Sum");
        en.put(VERSIONCONTROLL_ERROR, "Can not delete.");
        en.put(RULES_HM_PREIS, "hm_preis");
        en.put(RULES_TXT_CRIT_CLINIC_CASE_NUMBER_DIS, "Klinik: Fallanzahl");
        en.put(ADMISSION_REASON, "Admission Reason***AR12***Admission Reason Position 1 and 2");
        en.put(CASEFEE_COUNT, "Count");
        en.put(RULES_TEMP_147_OPSDATUM, "Format: YYYYMMDD; nur in Verbindung mit einem Prozedurenkode sinnvoll");
        en.put(RULES_CRIT_ACG_SEX_DIS, "ACG: Geschlecht");
        en.put(ACG_AGE_BAND_70_74, "70-74");
        en.put(RULES_CRIT_ACG_MAJOR_RXMG_DIS_1, "ACG: MEDCs auf Basis der Medikamente");
        en.put(SUPPL_FEE_DF, "DF");
        en.put(RULES_CRIT_MRSA_DIAG_HOSP_TOOLTIP_1, "Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code");
        en.put(RULES_TXT_CRIT_PEPP_TOOLTIP_1, "Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik");
        en.put(MS_WORD_NOT_FOUND, "Microsoft Word was not found!");
        en.put(STATE_BREMEN, "Free Hanseatic City of Bremen");
        en.put(TEXT_TEMPLATE_PROCESS_FINALISATION, "Process Finalization Context");
        en.put(RULES_GK_RSA_ALTER, "GK_RSA_Alter");
        en.put(RULE_TABLE_MESSAGE_CATALOG_TRANSFER_DIALOG_WARNING, "There are still errors regarding the catalog transfer from {0} to {1} present in this rule table.If this rule table is saved, these errors will not be shown again!Save anyway?");
        en.put(TEMPLATE_ERROR_TITLE, "Error");
        en.put(ADD_CASE_TITLE_EXTENDED, "Manual case creation: {0} ({1}/{2})");
        en.put(TREATING_DEPARTMENT_SHORT, "Treating Department §. 301***Treat. 301***Treating Department §. 301");
        en.put(RULES_TXT_OP_GT, "größer ( > )");
        en.put(MENU_BATCH_GROUPING_SUPPLEMENTARY_FEE, "Distribute Fee");
        en.put(RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT_TOOLTIP, "Anzahl chronischer Erkrankungen (Basis EDC-Gruppe): Ein Zählimpuls von ADGs die Triggerdiagnoses enthalten, die einen chronischen Zustand mit bedeutenden erwarteten Dauer- und Resoruceanforderungen anzeigen.");
        en.put(BILL_POSITION_BILL_NO, "Bill No.");
        en.put(AUDIT_TELEPHONE, "Telephone");
        en.put(RULES_TEMP_63_BEHANDELNDEFACHABTEILUNG, "z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.");
        en.put(INS_SHORT_KNAPPSCHAFT, "Knappschaft");
        en.put(PROCESS_FINALISATION_MAIN_CASE_STORNO, "Process is closed without comparison because base case is canceled");
        en.put(RULES_PEPP_GROUPERSTATE, "PEPP");
        en.put(RULES_TXT_CRIT_HOS_CASE_NUMBER_TOOLTIP_1_1, "Das krankenhausinterne Kennzeichen des Versicherten.");
        en.put(ROLES, "Roles");
        en.put(CASE_MERGING_CONDITION_TWO_PEPP, "Within 120 Days***Within 120 D.");
        en.put(EVENT_TYPE_ACTION_CHANGED, "Action of type {0} is changed***Changed actions");
        en.put(RULES_TEMP_98_OBERE_GRENZVERWEILDAUER, "Format: Ganzzahlig (Beispiel 15)");
        en.put(EVENT_TYPE_REMINDER_REMOVED, "Reminder {0} was removed***Removed reminders");
        en.put(RULES_TEMP_258_DIAGNOSENGRUPPEN, "GK RSA:Stationäre HMG relevante DxG");
        en.put(EVENT_NAME_KAIN, "KAIN Message");
        en.put(RULE_VALIDATION_SUGG_CHECK_BOTH, "check suggestion and condition");
        en.put(CASE_MERGING_CONDITION_SEVEN_DRG, "Catalog-Exception***Cat.-Exception");
        en.put(EVENT_TYPE_REMINDER_ASSIGNED, "Reminder assigned***Assigned reminders");
        en.put(RULES_CRIT_ACG_DIABETES, "acg_Diabetes_vorhanden");
        en.put(RULES_SEKDIAGNOSETYPE, "SekDiagnoseType");
        en.put(TP_301_INFORMATION_KEY_30_NVI01, "Proposal for a post-procedure, reasoned opinioncase.merging.do.saveAndOpen=Save case and open");
        en.put(RULE_TYPE_FOUND_IN_DB, "rule type foung in database");
        en.put(FILTER_BELOW, "{0} filter(s) below");
        en.put(PROCESS_FINALISATION_REVENUE_INIT, "Revenue Initial");
        en.put(PROCESS_FINALISATION_LOS_DIFF_TO, "Los diff to");
        en.put(EVENT_TYPE_INKA_SENT, "INKA message sent***INKA message sent");
        en.put(RULES_TEMP_266_GK_RSA_AMBULANTEDXG, "GK RSA:Ambulante DxG");
        en.put(TEMPLATE_WAIT_NOTIFICATION_TITLE, "Word Document will be opened soon!");
        en.put(RULES_TEMP_172_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT, "Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.");
        en.put(TEMPLATE_GENERATION, "Generate from Template");
        en.put(RULES_TEMP_205_GK_RSA_PZNCODE, "Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918.");
        en.put(RULES_TEMP_163_KLINIK_UGVD, "Format: Ganzzahlig (Beispiel 2)");
        en.put(RULES_TEMP_38_PZNCODE, "Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918");
        en.put(RULES_TXT_CRIT_INSTITUTE_DIS, "Institutionskennzeichen");
        en.put(RULES_TXT_OP_IN_TABLE, "in Tabelle ( @ )");
        en.put(ADDRESS_DIFFER, "Differend Address");
        en.put(CATALOG_DOWNLOAD_HOSPITALS, "Hospitals");
        en.put(RULES_GROUP_FEES_TOOLTIP_23, "Zuschlags_CW");
        en.put(RULES_GROUP_FEES_TOOLTIP_22, "Summe der Entgelte");
        en.put(FEE_GROUP_IV_FULL_INPATIENT_AND_DAY_PATIENT_WITH_FINAL_INVOICE, "IV full inpatient and day patient (with final invoice)");
        en.put(SECOND_NAME, "Family Name");
        en.put(DIAGNOSIS, "Diagnosis");
        en.put(RULES_GK_RSA_GESCHLECHT, "GK_RSA_Geschlecht");
        en.put(VALIDATION_WARNING_DISCHARGE_REASON_34_MATCH_NOT_12, "Discharge reason 2 seems invalid");
        en.put(CASE_RESOLVE_SECUNDARY_ICD, "sec. ICD");
        en.put(PROCESS_MODIFICATION_USER, "last Issuer of process***change of***last Issuer of process");
        en.put(CASE_RESOLVE_SUPPLEMENTARY_VALUE, "SC-Value ");
        en.put(REVENUE_MATH_DRG_DAY_FEE, "Day Fee {0}{1} x Day(s) {2}");
        en.put(RULES_CRIT_MRSA_FORMAT_MONEY_TOOLTIP, "Format: bis zu 7stellige Zahl mit 2 Nachkommastellen (Beispiel: 5895,25)");
        en.put(RULES_9_UNBEKANNT, "9 - unbekannt");
        en.put(RISK_PLACE_OF_REG, "Place of risk registration");
        en.put(RULES_CRIT_ACG_DEPRESSION_DIS, "ACG: Depression vorhanden");
        en.put(WORD_TEMPLATES, "MS-Word Templates");
        en.put(VALIDATION_CATALOGDATA_NO_HOSPITAL_EXISTS, "Catalog entry for this hospital does not exists anymore!");
        en.put(RULES_GROUP_FEES_TOOLTIP_14, "Grouperrelevant: Prozedur");
        en.put(RULES_GROUP_FEES_TOOLTIP_13, "Grouperrelevant: Diagnose");
        en.put(MS_OFFICE_VERSION, "The Microsoft Office Version");
        en.put(RULE_SUGG_TERM_NOT_COMPLETE, "Suggestion term is not complete, no value set");
        en.put(RULES_GROUP_FEES_TOOLTIP_11, "Entgeltliste: Entgeltanzahl je Entgelt");
        en.put(RULES_GROUP_FEES_TOOLTIP_10, "Entgeltliste: Entgeltabrechnung bis");
        en.put(DIR_OPEN_IN_EXPLORER_TEXT, "Click to select directory in Windows Explorer");
        en.put(DIALOG_BATCH_GROUPING_NDI, "NDI");
        en.put(REMINDER_COMMENT, "REM Comment");
        en.put(RULES_TXT_CRIT_LABOR_UNIT_DIS, "Labor-Einheit");
        en.put(CATALOG_DOWNLOAD_PROGRESS_DOWNLOAD_FINISHED, "Download has finished...");
        en.put(DISCHARGE_REASON_START_EXTERNAL_STAY_WITH_ABSENCE_THROUGH_MIDNIGHT, "Start external stay with absence through midnight");
        en.put(RULES_TEMP_129_KRANKENKASSE, "Format: 9-stellig numerisch (Beispiel: 123456789)");
        en.put(RULES_CRIT_ACG_CODE, "acg_Code");
        en.put(INS_SHORT_AOK, "AOK");
        en.put(MS_OUTLOOK_NOT_FOUND, "Microsoft Outlook was nou found!");
        en.put(RULES_VPS_SEVERITY_LEVEL_DIS, "VPS: Schweregrad");
        en.put(RULES_TXT_CRIT_HEALTH_ENSURANCE_TOOLTIP_1, "Kennzeichnung der Krankenkasse. Siehe Institutionskennzeichen IK.");
        en.put(CASE_MANAGEMENT_WARNING_SELECT_DEPARTMENT, "Choose a Department!");
        en.put(RULES_TEMP_281_VERSICHERTER_ALTER, "Format: Ganzzahlig (Beispiel 5)");
        en.put(GERM_GROWTH_ISOLATED, "isolated");
        en.put(BATCHPROCESSING_RESULT, "Result batchprocessing");
        en.put(SUPPLEMENTARY_VALUE, "Supplementary Value");
        en.put(RULES_TEMP_133_URLAUB, "Eine Beurlaubung liegt vor, wenn ein Patient mit Zustimmung des behandelnden Krankenhausarztes die Krankenhausbehandlung zeitlich befristet unterbricht, die stationäre Behandlung jedoch noch nicht abgeschlossen ist. Wird ein Patient beurlaubt, sind die vollständigen Urlaubstage, d. h. nicht der Tag des Urlaubsantritts bzw. - Endes, in der Rechnung auszuweisen. Vollständige Urlaubstage fließen nicht in die Berechnung der Verweildauer ein. Die Abrechnung erfolgt über die Entgeltgruppe 43.");
        en.put(DIALOG_BATCH_GROUPING_DAYPRECARE_TOOLTIP, "Count of pre-care cases ");
        en.put(CATALOG_AOP_CATEGORY, "Kategorie");
        en.put(RULES_TXT_CRIT_DIAG_TOOLTIP_1, "Siehe Hauptdiagnose, Nebendiagnose. Eine Diagnose beinhaltet keine weitere Unterteilung, insofern ein Oberbegriff. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.");
        en.put(CASE_MERGING_CONDITION_TWO_DRG, "Within 30 Days***Within 30 D.");
        en.put(OPEN_PROCESSES, "Open processes");
        en.put(DISCHARGE_REASON_2, "Discharge Reason 2");
        en.put(RULES_TEMP_117_ENTLASSUNGSDATUM, "Die Uhrzeit der Entlassung wird nicht berücksichtigt");
        en.put(HOURS_OF_MECHANICAL_VENTILATION, "Hours of Mechanical Ventilation");
        en.put(FUNCTIONS, "Functions");
        en.put(PROCESS_FINALISATION_RISK, "risk");
        en.put(EVENT_OPERATION_REMOVE, "Remove");
        en.put(TP_301_INFORMATION_KEY_30_KP000, "Coding test");
        en.put(FILE_ARCHIVE_ERROR_CAN_NOT_WRITE, "File {0} could not be archived, because you did not have writing permissions: {1}");
        en.put(CATALOG_DOWNLOAD_PROGRESS_SYNCHRONIZATION_FINISHED, "Synchronization with server was finished");
        en.put(RULES_TEMP_10_HE_MENGE, "Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.");
        en.put(ADMISSION_REASON_2_COST_UNIT_REGULAR_CASE, "Cost unit change - Regular case");
        en.put(CATALOG_DOWNLOAD_PROGRESS_CATALOG_WILL_DOWNLOAD, "Will download {0}");
        en.put(CATALOG_PEPP_SC, "SK {0}");
        en.put(FLOWRATE_STATUS_TEXT_PATIENT, "Patients per second: {0}");
        en.put(RULES_TEMP_234_GK_RSA_VERSICHERTENTAGE, "GK RSA:Versichertentage");
        en.put(RULES_CRIT_PCCL_TOOLTIP_9, "5 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016");
        en.put(RULES_CRIT_ACG_UNSCALED_PHARMA_CRI, "acg_MediKostenIndexUngewichtet");
        en.put(RULES_CRIT_PCCL_TOOLTIP_6, "4 - äußerst schwere Komplikationen und Komorbiditäten (CC)");
        en.put(RULES_CRIT_PCCL_TOOLTIP_5, "3 - schwere Komplikationen und Komorbiditäten (CC)");
        en.put(REVENUE_MATH_DRG_CARE_GRADE, "Care-Baserate {0} from {1} to {2}: {3} Days = {4}");
        en.put(RULES_CRIT_PCCL_TOOLTIP_4, "2 - mäßig schwere Komplikationen und Komorbiditäten (CC)");
        en.put(RULES_CRIT_PCCL_TOOLTIP_3, "1 - leichte Komplikationen und Komorbiditäten (CC)");
        en.put(RULES_CRIT_PCCL_TOOLTIP_2, "0 - keine Komplikationen und Komorbiditäten (CC)");
        en.put(GROUPER_MDC_OR_SK_PSYCHO_INPATIENT_CARE, "Psychiatry, inpatient***PSY");
        en.put(RULES_GROUP_DRGS_DATA_HOSP_DATA_DIS, "DRG-Ergebnis");
        en.put(VALIDATION_MASTERDATA_NO_REMINDER_TYPES_FOUND, "No Remindertypes available in masterdata!");
        en.put(RULES_VPS_TEST_OBJECT_DIS, "VPS: Prüfgegenstand");
        en.put(RULES_TEMP_277_GK_RSA_STATIONAEREHMGRELEVANTEDXG, "GK RSA:Stationäre HMG relevante DxG");
        en.put(ICD_TYPE_HOSPITALIZATION, "Hospitalization");
        en.put(RULES_TEMP_260_DIAGNOSENGRUPPEN, "GK RSA:stationäre Hauptdiagnosen");
        en.put(RULES_24_PFLEGEHILFSMITTEL_MIT_LEIHWEISER_UEBERLASSUNG, "24 - Pflegehilfsmittel mit leihweiser Überlassung");
        en.put(DIAGNOSIS_REF_TYPE_ADDITIONAL_TO, "Additional diagnose to selected ICD");
        en.put(EVENT_OPERATION_OPEN, "Open");
        en.put(RULES_79_VOLLSTATIONRE_PFLEGE_IN_BEHINDERTENEINRICHTUNG, "79 - Vollstationre Pflege in Behinderteneinrichtung");
        en.put(ACTION_CREATE, "create Action");
        en.put(RULES_TXT_CRIT_PSYCH_ONE_2_ONE_ADULTS_TOOLTIP, "Anzahl Stunden 1:1 Behandlung Erwachsene");
        en.put(ORGAN_ENT, "Ent");
        en.put(ARTIFICIAL_VENTILATION_FROM, "Vent. Hrs. from");
        en.put(RULES_TEMP_248_DIAGNOSENGRUPPEN, "GK RSA:Ambulante Diagnosen Leistungsquartal");
        en.put(RULES_CRIT_ACG_ISCHEMIC_HEART_DC_DIS, "ACG: Koronare Herzkrankheit vorhanden");
        en.put(RULES_CRIT_ACG_RESCALED_PHARMA_CRI_DIS, "ACG: Index Medikamentenkosten, gewichtet");
        en.put(EVENT_TYPE_PROCESS_USER_SET_DESCRIPTION, "{1} set as process-user");
        en.put(CASE_MERGING_CONDITION_SIX_PEPP, "Both day-/fullpatient***Both day-/fullpatient");
        en.put(NEGOTIABLE, "Negotiable");
        en.put(RULES_LABOREINHEIT, "Laboreinheit");
        en.put(DAY_SATURDAY, "Saturday***Sa");
        en.put(WORKFLOW_DEADLINE_CASE_DIALOG_BILL_CORRECTION_DEADLINE, "Deadline Case dialog Billing correction");
        en.put(RULES_CRIT_ACG_OB_PUL_DISEASE_CONDITION_DIS, "ACG: chronische obstruktive Lungenerkrankung vorhanden");
        en.put(RULES_70_PFLEGESACHLEISTUNG, "70 - Pflegesachleistung");
        en.put(ORIGIN_HOSPITAL, "Origin Hospital Identifier");
        en.put(WORKFLOW_DEADLINE_MDK_DOCUMENT_DELIVER_DEADLINE, "Deadline for submitting documents");
        en.put(VALIDATION_CATALOGDATA_NO_INSURANCES_FOUND, "No Insurances available in catalogdata!");
        en.put(RULES_TXT_CRIT_CLINIC_DISCH_DATE_DIS, "Klinik: Entlassungsdatum");
        en.put(ADMISSION_REASON_2_WAR_INVALIDS_AND_DISABLED_PEOPLE, "War Cripples affliction / War Victims affliction");
        en.put(CASE_TYPE_PIA, "PIA");
        en.put(RULE_VALIDATION_YEAR_NOT_VALID, "rule year is not valid");
        en.put(SELECT, "Select");
        en.put(ANTIBIOTIC_AMIKACIN, "Amikacin");
        en.put(PROCESS_TOPIC, "Process Topic");
        en.put(RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        en.put(LOGIN_LOGIN, "Login");
        en.put(MDK_DEPARTMENT_VALIDATE, "Invalid MD Department. Please provide valid entry.");
        en.put(RULE_HAS_ERRORS, "rule has a validation error");
        en.put(CASE_RESOLVE_RULES_ID, "Identifier");
        en.put(RULES_TXT_CRIT_ADRG_TOOLTIP_1, "Basis - DRG: (Adjacent Diagnosis Related Group) DRG ohne letzte Stelle (für Schweregrad).");
        en.put(RULES_MPREIS, "MPreis");
        en.put(PROCESS_DOES_NOT_EXIST_WITH_REASON, "Process with ID {0} does not exist. Maybe this process was already deleted by another user meantime.");
        en.put(COUNTRY_SWITZERLAND, "Switzerland");
        en.put(RULES_TXT_CRIT_PSYCH_ONE_2_ONE_INFANTS, "Anzahl_Stunden_eins2eins_Behandlung_Kinder");
        en.put(LEVEL_FINEST, "Ausgabe feinster Informationen");
        en.put(PROCESS_CREATE_BUTTON, "Create Process new");
        en.put(RULES_TEMP_53_JETZT, "Format: hh:mm:ss");
        en.put(INFORMATION, "Information***I");
        en.put(RULES_VERSICHERTER_GESCHLECHT, "Versicherter_Geschlecht");
        en.put(LOS_ALTERATION_FROM, "Los Alteration from");
        en.put(ADMISSION_CAUSE_TRANSFERRING_WITHIN_24H, "Transferring (treatment duration from transferring hospital is within 24 hours)");
        en.put(WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_SUCCESS, "The cancellation for the workflow number {0} is successfully canceled");
        en.put(DIALOG_BATCH_GROUPING_KORRTRANS, "korr. Trans.");
        en.put(PROCESS_PREVIEW_ANSWER, "Preliminary Proceedings Answer Deadline");
        en.put(COURT_FILE_NUMBER, "court file number");
        en.put(RULES_GK_RSA_AMBULANTEKRANKHEITSNUMMER, "GK_RSA_AmbulanteKrankheitsnummer");
        en.put(RULES_24_ZUM_VERBRAUCH_BESTIMMTE_PFLEGEHILFSMITTEL, "24 - zum Verbrauch bestimmte Pflegehilfsmittel");
        en.put(GERM_GROWTH_NONE, "none");
        en.put(UNBILLED_DAYS_FROM, "UBD from");
        en.put(VALIDATION_ERROR_NO_CASE_NUMBER, "Enter a valid Casenumber!");
        en.put(RULE_CALCULATION, "Calculation");
        en.put(RULES_TEMP_141_AUFNAHMEDIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        en.put(DEPARTMENT_TITLE, "Department");
        en.put(FILTER_REMEINDER_CLOSE, "All finished");
        en.put(ICD_TYPE_DEPARTMENT_TREATMENT, "Department Treatment");
        en.put(PROCESS_PREVIEW_DATA_REC_CORRECTION, "Data Record Correction Deadline");
        en.put(RULES_TXT_CRIT_BONUS_CW_DIS, "CW Zuschlag");
        en.put(RULES_CRIT_MRSA_DXG_TOOLTIP_2, "Format: bis zu 3-stellig, ganze Zahl (Beispiel: 464)");
        en.put(RULES_CRIT_MRSA_DXG_TOOLTIP_1, "Grundlage der Klassifikation ist die Gruppierung von ICD-Diagnosen zu klinisch homogenen diagnostischen Gruppen - den DxGruppen (DxG).");
        en.put(RULES_CRIT_AMBU_CARE_PROVIDED_TO_DIS, "Pflegedaten: Pflegeleistung bis");
        en.put(NO_DISCHARGE_DATE_FOUND, "Discharge date is not set");
        en.put(PROCESS_FINALISATION_REVENUE_DIFF, "Revenue diff");
        en.put(RULES_KLINIK_AUFNAHMEDATUM, "Klinik_Aufnahmedatum");
        en.put(RULES_CRIT_ACG_CODE_TOOLTIP_1, "Format: Alphanumerisch Beispiel(4100)");
        en.put(RULES_TEMP_167_KLINIK_ENTGELTART, "Format: alphanumerisch 8-stellig (Beispiel: 48000001)");
        en.put(RULES_CRIT_MRSA_MEDGROUP_TOOLTIP_2, "Format: 1 bis 2stellig, ganze Zahl (Beispiel: 18)");
        en.put(RULES_TEMP_55_ALTERINTAGEN, "Format: Ganzzahlig (Beispiel 5)");
        en.put(ARTIFICIAL_RESPIRATION, "Artificial Respiration");
        en.put(RULES_CRIT_MRSA_MEDGROUP_TOOLTIP_1, "80 RSA relevante Krankheiten, die Von Bundesversicherungsamt definiert wurden. 3799 ICD-10 Codes wurden den Krankheiten zugeordnet (24_Anhang_4 der BVA Festlegungen)");
        en.put(INPUT_TIME_ERROR, "{0} no correct time");
        en.put(CASE_MERGING_DO_MERGE, "Merge case");
        en.put(RULES_GROUP_CODING_DATA_HOSP_DATA_DIS, "Kodierung");
        en.put(DRG_EXTERN, "DRG KIS");
        en.put(RULES_CRIT_ACG_EDC_TOOLTIP_1, "Format: Alphanumerisch (Beispiel MUS06)");
        en.put(DAYS_INTENSIV, "Days intensiv");
        en.put(RULES_CRIT_ACG_COST_TOOLTIP_1, "Format: Fließkommazahl Beispiel(125000,00)");
        en.put(ADDRESS_TYPE_RESIDENTIAL, "Residential Address");
        en.put(STATE_SAARLAND, "Saarland");
        en.put(READONLY_DOC_ITEM_HELP_FILE_NAME, "hilfefunktion_cpx");
        en.put(VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_MAIN_CATEGORY_FOUND, "No Drafttypes for Maincategory available in catalogdata!");
        en.put(RULES_TXT_CRIT_SOLE_FULL_PRICE_DIS, "Heil- und Hilfsmittel: Gesamtpreis");
        en.put(RULES_TEMP_34_GESAMTMPREIS, "Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)");
        en.put(RULES_TXT_CRIT_INSURANCE_STATUS_DIS, "Versichertenstatus");
        en.put(GROUPER_STATUS_INVALID_WEIGHT, "Invalid Weight");
        en.put(FEE_GROUP_DMP_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "DMP without final invoice and without Discharge");
        en.put(RULES_CRIT_ACG_EDC_TOOLTIP, "Zugeordnete EDC-Code (Expanded Diagnosis Cluster): EDC gruppieren verschiedene Krankheiten und Zustände ausschließlich auf der Basis von ICD-10-Codes und stellen einen klinischen Zusammenhang zum Case-Mix her. Alle ermittelten EDC-Codes für diesen Patienten. Die EDC Taxonomie identifiziert Patienten mit bestimmten Krankheiten oder Symptomen");
        en.put(RULES_SUPERGROUP_HOSP_CASE_TOOLTIP, "Krankenhaus-Einzellfall");
        en.put(MENU_USER_STATUSTEXT, "Username: {0}");
        en.put(ADD_CASE_SEARCH_HOSPITAL_OPTIONEN, "Further hospital search criteria");
        en.put(RULES_CRIT_MRSA_AGE_TOOLTIP_2, "Format: ganze Zahl, bis zu 3stellig");
        en.put(ADD_CASE_SEARCH_INSURANCE_OPTIONEN, "Further insurance search criteria");
        en.put(RULES_CRIT_MRSA_AGE_TOOLTIP_1, "Alter aus der Satzart 100 im Berichtsjahr");
        en.put(CATALOG_DOWNLOAD_DOCTORS, "Doctors");
        en.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_9, "55-69");
        en.put(ADMISSION_CAUSE_INSTRUCTION_BY_DENTIST, "Admission by dentist");
        en.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_8, "45-54");
        en.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_7, "35-44");
        en.put(ADMISSION_REASON_2_COST_UNIT_CHANGE_EMERGENCY_CASE, "Cost unit change - Emergency Case");
        en.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_6, "18-34");
        en.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_5, "12-17");
        en.put(DISCHARGE_REASON_DISMISSAL_AT_THE_END_OF_RECORDING_IN_THE_PREVIOUS_YEAR, "Dismissal at the end of recording in the previous year");
        en.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_4, "05-11");
        en.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_3, "00-04");
        en.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_2, "<0");
        en.put(RULE_COLUMN_STATUS, "Error type***Error type***Error type(Error, Warning, Suggestion)");
        en.put(RULES_DIAGNOSETYPE, "DiagnoseType");
        en.put(MODE_OF_ADMISSION, "Mode of Admission");
        en.put(PROCESS_PREVIEW_PROCESS_TOPIC, "Process Topic");
        en.put(INS_SHORT_TKK, "TKK");
        en.put(PROCESS_FINALISATION_LOS_FINAL_FROM, "Los final from");
        en.put(FILTER_PROCESS_CANCEL_NOT, "All not canceled processes");
        en.put(PROCESS_COMPLETION_INITAL_VALUES, "Values initial");
        en.put(ORGAN_PSYCHOSOCIAL, "Psychosocial");
        en.put(CASES, "Cases");
        en.put(DOCUMENTATION_FULL_WASTE, "Estimated Full Waste in Euro");
        en.put(FEE_GROUP_APPENDIX_3_WITHOUT_FINAL_INVOICE, "Appendix 3 without final invoice");
        en.put(FILE_OPEN_IN_EXPLORER_TEXT, "Click to select file in Windows Explorer");
        en.put(RULES_ANZAHLPROZEDUREN, "AnzahlProzeduren");
        en.put(EVENT_TYPE_DOCUMENT_REMOVED, "document of type {0} with document name {1} has been removed***Removed documents");
        en.put(RULES_23_BPFLV_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "23 - BPflV ohne Schlussrechnung und ohne Entlassungsanzeige");
        en.put(RULES_TEMP_145_NEBENDIAGNOSE, "Eine Krankheit oder Beschwerde, die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.");
        en.put(PROCESS_FINALISATION_RESULT, "process result");
        en.put(DISCHARGE_REASON_INTERNAL_RELOCATION, "Internal relocation");
        en.put(MENU_DATABASE_CHANGE_VALIDATION_DB_SAME, "Choose a different database");
        en.put(LOS, "LoS");
        en.put(RULES_CRIT_MRSA_FULL_REVENUE_TOOLTIP_1, "Summe aller Erlöse aus den HMGs, AGGs, EMGs");
        en.put(RULES_TEMP_170_KLINIK_AUFNAHMEDATUM, "Die Uhrzeit der Aufnahme wird nicht berücksichtigt");
        en.put(PROCESS_FINALISATION_SAVED_MONEY_FROM, "Saved money from");
        en.put(DRG_CORR_TYPE_DEDUCTION_TRANSFER_DISCHARGE, "Deduction Discharge Transfer");
        en.put(RULES_TEMP_58_FALL_STRING_6, "Fall.String6");
        en.put(CASE_MERGING_START_PROCESS, "Determine cases");
        en.put(RULES_CRIT_ACG_HOS_DOMINANT_COUNT_DIS, "ACG: Anzahl ADGs mit hoher KRH-Wahrscheinlichkeit");
        en.put(CASE_MERGING_CONDITION_ONE_PEPP, "Within 21 Days***Within 21 D.");
        en.put(PROCESS_FINALISATION_CW_CARE_DIFF, "Care CW diff***Care CW diff***Difference between the valuation relation for care of the initial assigned case version (KIS) and the possibly changed checkpoint case version, assigned at the end of the transaction (Care CW Initial - Care CW Final = Care CW Diff).");
        en.put(RULES_CRIT_MRSA_AMBULANT_DISEASE_NUMBER_TOOLTIP, "Krankheitsgruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden");
        en.put(RULES_TXT_CRIT_SEPARATION_DAY_TIME_TOOLTIP_1, "Uhrzeit, zu der der Patient am letzten Tag des Krankenhausaufenthaltes entlassen worden ist.");
        en.put(RULES_CRIT_ACG_ARTHRITIS_CONDITION, "acg_Arthritis_vorhanden");
        en.put(RULES_GK_RSA_EXTBLUTREINIGUNGAUSGABEN, "GK_RSA_ExtBlutreinigungAusgaben");
        en.put(PROCESS_PREVIEW_CLOSED, "Preliminary Proceedings Closed Deadline");
        en.put(ICD_TYPE_POSTOPERATIVE, "Postoperative");
        en.put(RULES_DSA_PRIM_SEC_LIST_MODEL_DIAGNOSE, "Diagnose");
        en.put(RULES_CRIT_ACG_TOTAL_COST, "acg_Gesamtkosten");
        en.put(WORKFLOW_STATE, "State");
        en.put(EVENT_TYPE, "Event type");
        en.put(MENU_GROUPER_SETTINGS, "Grouper Settings");
        en.put(RULES_CRIT_MRSA_OTHER_SERVICES_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben für Heil- und Hilfsmittel zu einem Versicherten (SA 700)");
        en.put(RULES_GK_RSA_APOTHEKENAUSGABEN, "GK_RSA_ApothekenAusgaben");
        en.put(RULES_7G_ERSTBERATUNG, "7G - Erstberatung");
        en.put(SAME_RULE_OTHER_ERR_TYPE, "Same rule with Ident but other rule violation type is found in Pool");
        en.put(RULES_TXT_CRIT_ENTGELTANZAHL_TOOLTIP_1, "Wie oft das einzelne Entgelt abgerechnet wird.");
        en.put(PROCESS_FINALISATION_DRG_FINAL, "DRG final***DRG final***DRG / PEPP of the version of the case assigned to this operation completion process.");
        en.put(UNBILLED_DAYS, "Unbilled Days***UBD");
        en.put(BILL_TYPE_ENUM_2_WARNING, "second warning");
        en.put(RULES_GK_RSA_ATCCODE, "GK_RSA_ATCCode");
        en.put(BILL_OPEN_ITEM_FISCAL_YEAR, "Year");
        en.put(CATALOG_DIALOG_SEARCH, "Search...");
        en.put(GROUPER_OPS_RES_TYPE_NOR_INVALID_DATE, "NonOR procedure with conflict OPS date");
        en.put(RULES_SUPERGROUP_DATA_CASE_TOOLTIP, "Krankenhausdaten");
        en.put(ORGAN_GASTROINTESTINAL, "Gastrointestinal");
        en.put(CASE_MERGING_CASE_ORGINAL, "Original Case***Org.");
        en.put(RULES_TXT_CRIT_DIAG_LOC_DIS, "Diagnose: Lokalisation");
        en.put(RULES_TEMP_57_GEWICHT, "Format: Ganzzahlig (Beispiel 2500)");
        en.put(ADMISSION_DATE_FOR_2013, "Admission date is before {0}");
        en.put(RULES_ENTGELTABRECHNUNGBIS, "EntgeltabrechnungBis");
        en.put(MDK_FAX, "Fax");
        en.put(RULES_CRIT_ACG_CRI_TOOLTIP_1, "Format: Fließkommazahl (Beispiel 0,639023466)");
        en.put(VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_SUB_CATEGORY_1_FOUND, "No Drafttypes for 1. Subcategory available in catalogdata!");
        en.put(RULES_CRIT_ACG_MEDC, "acg_MEDC_Code");
        en.put(RULES_CRIT_ACG_FRAILTY_FLAG, "acg_Gebrechlichkeits-Indikator");
        en.put(ACG_AGE_BAND_65_69, "65-69");
        en.put(CASE_STATUS_SUGGESTION, "Suggestion");
        en.put(RULES_TXT_CRIT_CASE_NUMERIC_3_DIS, "Fall.Numeric03");
        en.put(DOCUMENT_PATH, "Document path");
        en.put(CASE_RESOLVE_RULES_DRGSIMULATION, "DRG Simulation***DRG Sim.");
        en.put(RULES_VPS_SEVERITY_LEVEL_TOOLTIP, "VPS: Schweregrad des Fehlers aus der Iskv");
        en.put(CASE_CW_EFFECTIVE_TO, "CW eff. to");
        en.put(CASE_TYPE_OTHER, "Other");
        en.put(PROCESS_FINALISATION_CW_CARE_INITIAL_FROM, "Care CW initial from");
        en.put(RULES_TEMP_24_HM_MENGE, "Format: numerisch (Beispiel: 5)");
        en.put(BEGE_DIRECT_PHONE_NO, "Direct Phone No.");
        en.put(FEE_GROUP_MODEL_PROJECTS_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "Model projects without final invoice and without Discharge");
        en.put(CATALOG_DOWNLOAD_PROGRESS_CATALOG_DOWNLOADED, "{0} was downloaded");
        en.put(CASE_RESOLVE_RULES_PEPPSIMULATION, "PEPP ***PEPP Sim.");
        en.put(CONTINUE, "Continue");
        en.put(RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        en.put(NOT_DEFINED_CASE_TYPE, "Undefined type of the hospital case");
        en.put(RULES_ANZAHLABTEILUNGEN, "AnzahlAbteilungen");
        en.put(WORKING_LIST_COLUMNS, "Columns");
        en.put(MENU_USER_CHANGE_VALIDATION_DB_SELECTION, "Choose a database");
        en.put(RULES_TEMP_192_KLINIK_VERWEILDAUER, "Format: Ganzzahlig (Beispiel 2)");
        en.put(VALIDATION_WARNING_DISCHARGE_REASON_12_MATCH_NOT_34, "Discharge reason seems invalid");
        en.put(DELETE_ERROR_CASE_MAIN_CASE, "Can not delete service with main case.");
        en.put(CASE_STATUS_IN_PROGRESS, "In Progress");
        en.put(RULES_CRIT_MDC_TOOLTIP_28, "PRE - PRÄ - MDC");
        en.put(RULES_CRIT_MDC_TOOLTIP_27, "23 - Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens");
        en.put(RULES_TXT_REQUEST_DISWARD, "Station");
        en.put(MAIN_AUDIT_REASON, "Main audit reason");
        en.put(RULES_CRIT_MDC_TOOLTIP_26, "22 - Verbrennungen");
        en.put(CHECKRESULT_RESULT, "Result checkresult");
        en.put(RULES_CRIT_MDC_TOOLTIP_25, "21B - Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten");
        en.put(REPORT_OPEN, "Show report");
        en.put(RULES_CRIT_MDC_TOOLTIP_24, "21A - Polytrauma");
        en.put(RULES_CRIT_MDC_TOOLTIP_23, "20 - Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen");
        en.put(RULES_TXT_CRIT_MEDICAMENT_PZN_CODE_DIS, "KH Medikament: PZN-Code");
        en.put(RULES_31_MODELLVORHABEN_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "31 - Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige");
        en.put(RULES_CRIT_MDC_TOOLTIP_22, "19 - Psychische Krankheiten");
        en.put(RULES_CRIT_MDC_TOOLTIP_21, "18B - Infektiöse und parasitäre Erkrankungen");
        en.put(RULES_CRIT_MDC_TOOLTIP_20, "18A - HIV");
        en.put(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_TOOLTIP_1, "Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat.");
        en.put(VERSION_ADD_CONFIRM, "Do you want to create new version of this case?");
        en.put(RULES_CHECKRESULT_TYP_OPS, "OPS");
        en.put(RULES_CRIT_MDC_TOOLTIP_19, "17 - Hämatologische und solide Neubildungen");
        en.put(RULES_CRIT_MDC_TOOLTIP_18, "16 - Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems");
        en.put(RULES_CRIT_MDC_TOOLTIP_17, "15 - Neugeborene");
        en.put(RULES_CRIT_MDC_TOOLTIP_16, "14 - Schwangerschaft, Geburt und Wochenbett");
        en.put(RULES_CRIT_MDC_TOOLTIP_15, "13 - Krankheiten und Störungen der weiblichen Geschlechtsorgane");
        en.put(RULES_CRIT_MDC_TOOLTIP_14, "12 - Krankheiten und Störungen der männlichen Geschlechtsorgane");
        en.put(RULES_CRIT_MDC_TOOLTIP_13, "11 - Krankheiten und Störungen der Harnorgane");
        en.put(RULES_CRIT_MDC_TOOLTIP_12, "10 - Endokrine, Ernährungs- und Stoffwechselkrankheiten");
        en.put(RULES_CRIT_MDC_TOOLTIP_11, "09 - Krankheiten und Störungen an Haut, Unterhaut und Mamma");
        en.put(RULES_CRIT_MDC_TOOLTIP_10, "08 - Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe");
        en.put(DISCHARGE_REASON_2_ABLE_TO_WORK, "able to work");
        en.put(RULES_TXT_CRIT_CLINIC_UGVD, "Klinik: uGVD");
        en.put(WORKFLOW_STATE_ARCHIVED, "archived");
        en.put(RULE_COLUMN_CAPTION, "caption***caption***caption of rule");
        en.put(GROUP_RESULT_PDX_VWXY_PDX_CODE, "V-,W-,X-,Y-Code as the main diagnosis");
        en.put(GERM_GROWTH_AFTER_ENRICHMENT, "after enrichment");
        en.put(PROCESS_FINALISATION_CW_INITIAL, "CW initial***initial***Evaluation relation of the KIS version of the case, which was initially assigned to this process.");
        en.put(ADMISSION_CAUSE_COMPANION, "Companion");
        en.put(UNBILLED_DAYS_TO, "UBD to");
        en.put(RULES_TXT_CRIT_REMEDIES_PRESCRIPTION_DATE, "he_Verordnungsdatum");
        en.put(RISK_EDITOR_RISK_WASTE_VALUE, "Deficit-Risk***D.-R.***Risk value, that defines the probability that through an audit money is lost");
        en.put(CATALOG_DRG_NEGO_REVENUE, "Negotiated Fee per day {0}{1}, {2} day(s) ({3}{4})");
        en.put(FILE_SAVE, "Save file");
        en.put(DIALOG_BATCH_GROUPING_RULES_ERROR, "Error");
        en.put(RULES_07_DAK_INTERNE_ENTGELTE, "07 - DAK-interne Entgelte");
        en.put(REMINDER_REMOVED_TOOLTIP, "See the details of a Reminder");
        en.put(PROCESS_DATE, "Date");
        en.put(VALIDATION_ERROR_INVALID_DEPARTMENT, "Department name is not valid!");
        en.put(PROCESS_CLOSED_TOOLTIP, "See Details of this Process");
        en.put(GROUP_RESULT_CODE_VALID_AGE_CONFLICT, "age conflict");
        en.put(RULES_TXT_CRIT_SOLE_FULL_HPN_PRICE_DAK_DIS, "Hilfsmittel: Gesamtpreis für Hilfsmittelpositionsnummer");
        en.put(RULES_EINWEISENDESKRANKENHAUS, "EinweisendesKrankenhaus");
        en.put(RULES_TXT_INTERVAL_OGVD, "OGVD");
        en.put(RULES_CRIT_ACG_MAJOR_RXMG, "acg_HRxMG_Codes");
        en.put(RULES_CRIT_ACG_RENAL_FC_DIS, "ACG: Niereninsuffizienz vorhanden");
        en.put(RULES_TEMP_103_TAGEOHNEBERECHNUNGPROENTGELT, "Format: Ganzzahlig (Beispiel 3)");
        en.put(DISCHARGE_REASON_EXTERNAL_INSTALLATION_FOR_PSYCHIATRIC_TREATMENT, "External installation for psychiatric treatment");
        en.put(GROUPER_OPS_RES_TYPE_SRG_INVALID_LOC_AND_DATE, "SRG with conflict subsidiary risk label and OPS date");
        en.put(GROUP_RESULT_PDX_VALID_PDX_CODE, "Valid main diagnosis");
        en.put(ACG_AGE_BAND_35_44, "35-44");
        en.put(DOCUMENTATION_MENU_IS_ACTIVE, "Is active");
        en.put(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_DIS, "KH Medikament: Gesamtpreis");
        en.put(RULES_TXT_INTERVAL_ADM_DATE, "Aufnahmedatum");
        en.put(HISTORY_SECTION, "History");
        en.put(DISCHARGE_REASON_DISMISSAL_BEFORE_RESUMING_WITH_RECLASSIFICATION_FOR_COMPLICATION, "Dismissal before resuming with reclassification for complication");
        en.put(MDK_AUDIT_COMPLETION_DEADLINE, "Mdk Audit Completion Deadline");
        en.put(MDK_SUBSEQUENT_PROCEEDING_DATE_TO, "subsequent proceeding date to");
        en.put(ICD_TYPE_DISCHARGE_AMBULANT, "Discharge - ambulant");
        en.put(DISCHARGE_REASON_DISMISSAL_FOR_START_STATION_EQUIVALENT, "Dismissal into station equivalent treatment");
        en.put(WORKFLOW_DEADLINE_ANSWER_DEADLINE_COMMENT, "Deadline to give a reply in Preliminary Proceedings Request type.");
        en.put(RULES_TXT_CRIT_ADMISSION_MONTH_TOOLTIP_1, "Monat, in den der erste Behandlungstag fällt.");
        en.put(RULES_TEMP_182_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT, "Die Uhrzeit der Entlassung wird mitberücksichtigt");
        en.put(RULES_TEMP_197_ARZNEIMITTEL, "GK RSA:DDD");
        en.put(MENU_CLOSE, "close");
        en.put(PROCESS_BASERATE_TOOLTIP, "Baserates of {0} with admission date {1}.");
        en.put(RULES_TEMP_71_ENTGELTE, "Rechnung: Rechnungsart");
        en.put(MENU_DATABASE_STATUSTEXT, "Database: {0}");
        en.put(JOB_STATUS_STOPPING, "cancel Task");
        en.put(DOCUMENTATION_WASTE, "Estimated Waste in Euro");
        en.put(PROCESS_FINALISATION_SUPPLFEE_FINAL, "Supplfee final***Supplfee final***Sum of the additional charges of the case assigned to this transaction to complete the transaction.");
        en.put(CASE_MERGE_MATH_REV_SUM_ORG_CASES, "Sum revenue original Cases ");
        en.put(PROCESSES_AVAILABLITY, "List of available Processes");
        en.put(COUNT_PROC_TO, "∑ OPS to");
        en.put(RULES_TXT_OP_NOT_IN_TABLE, "keine enthalten in Tabelle ( NOT IN @ )");
        en.put(PATIENT, "Patient");
        en.put(WORKFLOW_DEADLINE_6_WEEKS_DEADLINE, "Deadline initiation bill audit");
        en.put(TYPE_OF_SERVICE, "Type of Service");
        en.put(DEPARTMENT_MAIN_DIAGNOSIS_ERROR, "No DMD was set");
        en.put(RULES_GKCOSTS_NODE_COSTS, "Kosten");
        en.put(RULES_TXT_CRIT_TRANSFER_DATE_DIS, "Verlegungsdatum");
        en.put(RULES_CRIT_ACG_LOW_BACK_PAIN_DIS, "ACG: Rückenbeschwerden vorhanden");
        en.put(EVENT_TYPE_REQUEST_REMOVED, "Request removed: Typ {0}***Removed requests");
        en.put(LOGIN_SUPPORT_AND_CONTACT, "Support & Contact Details");
        en.put(RULES_TXT_CRIT_ADMISSION_DIAG_TOOLTIP_1, "Die Diagnose, aufgrund derer ein Patient in ein Krankenhaus aufgenommen worden ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code");
        en.put(CASECREATION_FAILED, "Case creation failed!");
        en.put(RULES_GK_RSA_AMBULANTEDXG, "GK_RSA_AmbulanteDxG");
        en.put(RULES_TEMP_118_ENTLASSUNGSDATUM, "Format: YYYYMMDD");
        en.put(DEPARTMENT_TYPE_SLIP_DEPARTMENT, "SD");
        en.put(RULES_TEMP_211_AUSGABEN, "GK RSA:Ausgaben für Zahnärzte");
        en.put(AUDIT_QUOTA_RESULT_WARNING, "The checkout rate for the cash register {0} for the quarter {1} / {2} has already been reached!The request is marked as \"Examination Quota exceeded\".Details: Number of inpatient cases: {3}Number of complaints (actual value): { 4}Number of complaints (target value): {5}Stated inspection quota for the quarter: {6}");
        en.put(RULES_TXT_CRIT_AGE_DAYS_TOOLTIP_1, "Das Alter in Tagen (nur für Alter < 1 Jahr)");
        en.put(RULES_CRIT_MRSA_BLOOD_PURIFICATION_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben für Sachkosten bei extrakorporaler Blutreinigung zu einem Versicherten (SA 700)");
        en.put(FEE_GROUP_SEPARATE_CHARGES_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "separate charges without final invoice and without Discharge");
        en.put(RULES_CRIT_MRSA_DIAG_AMBULANT_TOOLTIP_1, "Diagnosen, die von einem niedergelassenen Arzt kodiert worden sind aus der Satzart 600. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code");
        en.put(DOCUMENT_ADD, "Add Document");
        en.put(CASE_ADDED_TOOLTIP, "See the details of a Case");
        en.put(RULES_TXT_CRIT_CLINIC_FEEGROUP, "Klinik: Entgeltbereich");
        en.put(DIALOG_BATCH_GROUPING_DAYPRECARE, "Day/Pre-Care");
        en.put(REPORT_SAVE_AND_OPEN, "Save report");
        en.put(RULES_TEMP_132_TAGEOHNEBERECHNUNG, "Format: Format: Ganzzahlig (Beispiel 3)");
        en.put(RULES_19_IV_OHNE_SCHLUSSRECHNUNG, "19 - IV ohne Schlussrechnung");
        en.put(CASE_CARE_CWMINIMAL_FROM, "CW cre. min. from");
        en.put(RULES_TEMP_54_FALL_NUMERIC_7, "Fall.Numeric7");
        en.put(DEDUCTION, "Deduction");
        en.put(WORKFLOW_CLOSE_AND_CREATE_REMINDER_CLOSE_REMINDER_SUCCESSFULLY, "{0}  reminders of art {1} 'were set as closed.");
        en.put(RULES_TXT_CRIT_CLINIC_FEE_COUNT_DIS, "Klinik: Anzahl Entgelte");
        en.put(CASE_RESOLVE_USED_FOR_GROUPING, "G");
        en.put(CASE_RESOLVE_CCL, "CCL");
        en.put(ICD_REF_TYPE_ADDITION_TO, "AdditionTo");
        en.put(RULES_ALTERINTAGEN, "AlterInTagen");
        en.put(FILTER_PRIO_NO, "All without Prio");
        en.put(DIALOG_BATCH_GROUPING_KORROGVD_TOOLTIP, "Count of cases, which CW differs from catalog value due to a higher HTP");
        en.put(RULES_TEMP_127_INSTITUTIONSKENNZEICHEN, "Format: 9-stellig numerisch (Beispiel: 123456789)");
        en.put(INS_SHORT_GEK, "GEK");
        en.put(RULES_06_VORSTATIONAER, "06 - vorstationär");
        en.put(RULES_TEMP_52_FALL_NUMERIC_10, "Fall.Numeric10");
        en.put(WORKFLOW_DEADLINE_DATA_RECORD_CORRECTION_DEADLINE, "Deadline for dataRecord Correction");
        en.put(CATALOG_DRG_NEGO_DESC, "Negotiated Fee per day {0}{1}, {2} day(s)");
        en.put(CREATE, "Create");
        en.put(RULES_AUFNEHMENDEFACHABTEILUNG, "AufnehmendeFachabteilung");
        en.put(AUDIT_QUOTA_RESULT_MAX_MD_EXAMINATIONS, "Maximal Examinations");
        en.put(CASE_STATUS, "Case Status***Status***Case Status");
        en.put(CATALOG_DRG_MDC, "MDC {0}");
        en.put(ACTION_MSG_NO_EDIT_RIGHT, "You do not have right to edit any action");
        en.put(BILL_OPEN_ITEM_NUMBER_RECEIPT, "Number Receipt");
        en.put(RULES_TEMP_154_KLINIK_NEBENDIAGNOSE, "Klinische Daten: Siehe Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.");
        en.put(LENGTH_OF_STAY, "Length of Stay***LoS");
        en.put(RULES_GROUP_EXPENDURE_MRSA_DIS, "Ausgaben");
        en.put(RULES_CRIT_CLINIC_CASE_COSTS_TOOLTIP, "Gesamtkosten enes Falls");
        en.put(ACG_AGE_BAND_05_11, "05-11");
        en.put(REMINDER_CREATED_TOOLTIP, "See the details of a Reminder");
        en.put(RULES_TXT_CRIT_DIS_TYPE_DIS, "Entlassungsgrund12");
        en.put(RULES_7H_FOLGEBERATUNG, "7H - Folgeberatung");
        en.put(AUDIT_QUOTA_RESULT_MD_EXAMINATIONS, "MD-Examinations");
        en.put(RULES_22_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004_OHNE_SCHLUSSRECHNUNG, "22 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung");
        en.put(LENGTH_OF_STAY_FROM, "LoS from***LoS");
        en.put(ADMISSION_REASON_HOSPITAL_CARE_INPATIENT, "Hospital care, inpatient");
        en.put(DOCUMENTATION_MENU_SET_ACTIVE, "Set active");
        en.put(RULE_VALIDATION_RULE_NOT_VALID, "rules syntax is erroneous");
        en.put(RULES_TEMP_85_ENTGELTANZAHLJEENTGELT, "Format: Ganzzahlig (Beispiel 2)");
        en.put(AUDIT_INFO_LABEL, "Insurance Informations");
        en.put(MIDWIFE, "Midwife");
        en.put(SAME_RULE_FOUND, "Same rule with Ident is found in Pool");
        en.put(CATALOG_DRG_FIRST_DAY_SURCHARGE, "1. day of surcharge");
        en.put(MDK_ADDRESS, "Address");
        en.put(RULES_CRIT_ACG_PROBABILITY_HIGH_PC_DIS, "ACG: Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten");
        en.put(BILL_POSITION_BASE_AMOUNT, "Base Amount");
        en.put(RULES_TXT_CRIT_PROC_TOOLTIP_1, "OPS, Operationen- und Prozedurenschlüssel, maximal 6-stellig, z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.");
        en.put(ADMISSION_MODE_MAIN_DEPARTMENT_MIDWIFE, "MD/B-Mid.******Main Department with Midwife");
        en.put(REMINDER_UNFINISHED_STATUS, "open");
        en.put(MSG_CLEAR_CACHE, "Cache wurde erfolgreich geleert!Entfernte Einträge:");
        en.put(RULES_CRIT_MRSA_DOC_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben für Ärzte zu einem Versicherten (SA 700)");
        en.put(LOS_ALTERATION, "Los Alteration?");
        en.put(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_WAR_INVALIDS_AND_DISABLED_PEOPLE, "Integrated care - War Cripples affliction / War Victims affliction");
        en.put(LAB_DATA_DESCRIPTION, "Description***Description***Description of the category");
        en.put(DIALOG_BATCH_GROUPING_CWDIFFPOS, "CW-Difference positiv");
        en.put(ANTIBIOTIC_DAPTOMYCIN, "Daptomycin");
        en.put(SETTING_WORKFLOW_SIGHT, "Workflow sight");
        en.put(RULES_TEMP_254_DIAGNOSENGRUPPEN, "GK RSA:DxG");
        en.put(BILL_DATE, "Bill date");
        en.put(GENDER_SALUTATION_UNDEFINED, "Mr./Ms.");
        en.put(RULES_TXT_CRIT_DISCHARGE_DATE_FULL, "Entlassungsdatum_mit_Uhrzeit");
        en.put(CATALOG_DRG_CARE_TITLE, "Cost weight (Care)");
        en.put(RULES_CRIT_ACG_RESCALED_PHARMA_CRI_TOOLTIP, "Kostenindex für zukünftige Medikamentenkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1,0");
        en.put(GROUPER_OPS_RES_TYPE_OR_INVALID_LOC_AND_DATE, "OR procedure with conflict subsidiary risk label and OPS date");
        en.put(RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_ATC_DIS, "KH Medikament: Gesamtdosis für ATC");
        en.put(CASE_CARE_CW_FROM, "CW cre. from");
        en.put(RULES_TXT_LIST_DO_NOTHING, "Keine Aktion");
        en.put(RULES_TEMP_237_ERLOESE, "GK RSA:Anzahl der HMGs");
        en.put(ACTION_SUBJECT_LATEST, "Action***Type of the latest action***Type of the latest action");
        en.put(CASE_CW_CATALOG, "Assessment Relation: Main Department***CW Catalog***Assessment Relation: Main Department");
        en.put(DRG_DATA, "DRG-Data");
        en.put(DRG_CORR_TYPE_SURCHARGE, "Surcharge");
        en.put(MENU_BATCH_GROUPING_USED_RULES, "Rules to use");
        en.put(PROCESS_USER_CHANGED_TOOLTIP, "See Details of this Process");
        en.put(ARTIFICIAL_VENTILATION_TO, "Vent. Hrs. to");
        en.put(RULES_GK_RSA_HMG, "GK_RSA_HMG");
        en.put(CATALOG_DOWNLOAD_CORE_DATA, "Core data");
        en.put(ADDRESS_ZIP_CODE, "ZIP Code");
        en.put(RULES_TXT_CRIT_DEPARTMENT_TOOLTIP_1, "Die Fachabteilungen, in denen der Patient behandelt worden ist. z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.");
        en.put(RULES_AUFENTHALTKLEINER_24H, "AufenthaltKleiner24h");
        en.put(RULES_TXT_OP_NOT_DOUBLE_IN_TABLE, "nicht doppelt in Tabelle ( !! @ )");
        en.put(DEPARTMENT_VALIDATION_ERROR, "Additional information required");
        en.put(PROCESS_FINALISATION_SUPPLFEE_INITIAL_FROM, "Supplfee initial from");
        en.put(RULES_TEMP_135_VERWEILDAUER, "Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.");
        en.put(RULES_CRIT_ACG_UNSCALED_TOTAL_CRI, "acg_GesamtkostenIndexUngewichtet");
        en.put(REQUEST_STATUS, "Request State");
        en.put(LEVEL_DEBUG, "allgemeines Debugging (Auffinden von Fehlern)");
        en.put(DEPARTMENT_MAIN_DIAGNOSIS_ERROR_INDEX, "No DMD was set on Position {0}");
        en.put(EVENT_NAME_REMINDER, "Reminder");
        en.put(CASE_DELTA_CWMAXIMAL_FROM, "dCW max from");
        en.put(PROCESS_INITIAL, "Initial");
        en.put(RULES_TXT_CRIT_PROCEDURE_GROUPED_DIS, "Grouperrelevante Prozedur");
        en.put(DISCHARGE_REASON_CHANGES_IN_RESPONSIBILITIES_OF_PAYERS, "Changes in responsibilities of payers");
        en.put(RULES_TEMP_75_ADRG, "Format: Alphanumerisch (Beispiele: A11 oder B75)");
        en.put(RULES_TEMP_63_DRGERLOES, "Erlös des DRG - Falles ohne Berücksichtigung der Zusatzentgelten und Pflegeaufwendungen(ab 2020)");
        en.put(RULES_TXT_CRIT_ENTGELTABRECHNUNG_BIS_DIS, "Entgeltabrechnung bis");
        en.put(VALIDATION_ERROR_NO_ALTER, "Please enter the patient's age! ");
        en.put(RULES_1_MAENNLICH, "1 - männlich");
        en.put(RULES_TXT_CRIT_PROC_DATE_DIS, "OPSDatum");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_9, "07 - Tod");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_8, "06 - Verlegung in ein anderes Krankenhaus");
        en.put(RULE_VALIDATION_CODE_ERROR, "eror in code");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_7, "05 - Zuständigkeitswechsel des Kostenträger");
        en.put(DISCHARGE_REASON_DEATH, "Death");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_6, "04 - Behandlung gegen ärztlichen Rat beendet");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_5, "03 - Behandlung aus sonstigen Gründen beendet");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_4, "02 - Behandlung regulär beendet, nachstationäre Behandlung vorgesehen");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_3, "01 - Behandlung regulär beendet");
        en.put(RULES_TEMP_269_GK_RSA_AMBULANTEKRANKHEITSNUMMER, "GK RSA:Ambulante Krankheitsnummer");
        en.put(RULES_TXT_CRIT_DIS_TYPE_3_DIS, "Entlassungsgrund3");
        en.put(RULES_CRIT_MRSA_PUCKNUMBER_TOOLTIP, "Anzahl der Packungen zu einem Medikament");
        en.put(RULES_TAGEOHNEBERECHNUNG, "TageOhneBerechnung");
        en.put(DIFFERENCE_CURRENCY, "Difference {0}");
        en.put(RULES_TEMP_226_VERSICHERTENDATEN, "GK RSA:Erwerbsminderungstage");
        en.put(ADMISSION_CAUSE_TRANSFERRING, "Transferring");
        en.put(READONLY_DOC_ITEM_DKR_DRG_FILE_NAME, "Deutsche_Kodierrichtlinien_Version_");
        en.put(CASE_RESOLVE_ESTIMATED_RULES, "Estimated Rules");
        en.put(LEVEL_FATAL, "Kritischer Fehler, Programmabbruch");
        en.put(RULES_TEMP_17_HM_GESAMTMENGE, "Format: numerisch (Beispiel: 5)");
        en.put(FEE_GROUP_DRG_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "DRG without final invoice and without Discharge");
        en.put(CASE_RESOLVE_CWCATALOG, "CW-Catalog");
        en.put(RULES_TXT_OP_DIVIDE, "geteilt durch ( / )");
        en.put(RULES_TXT_CRIT_EQUAL_PROC_NUMBER_TOOLTIP_1, "Für jede Prozedur wird ein Wiederholungswert ermittelt und der minimale Wert, der größer als 1 ist, wird hier eingetragen.");
        en.put(RULES_TEMP_219_GK_RSA_ZAHNARZTAUSGABEN, "GK RSA:Ausgaben für Zahnärzte");
        en.put(RULES_TXT_CRIT_SEPARATION_YEAR_DIS, "Entlassungsjahr");
        en.put(RULES_TEMP_21_HM_GESAMTPREIS, "Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)");
        en.put(REMINDER_DUEDATE_IS_BLANK, "not set");
        en.put(DF_VALUE_TOOLTIP, "{0} ({1} x {2}) x {3} from {4} to {5} ");
        en.put(GROUPER_STATUS_INVALID_CASE, "Invalid Case");
        en.put(EVENT_TYPE_PROCESS_USER_CHANGED_DESCRIPTION, "Process user changed from: {0} to: {1}");
        en.put(FEE_GROUP_SPECIAL_INSTITUTIONS, "Special institutions");
        en.put(DISCHARGE_REASON_DISMISSAL_END_STATION_EQUIVALENT, "Dismissal from  station equivalent treatment (Department 0004)");
        en.put(PROCESS_FINALISATION_CW_FINAL, "CW final***CW final***Appraisal relation of the checkpoint version of the case, which was assigned to this transaction for transaction completion.");
        en.put(RISK_PERCENT_TOTAL_FROM, "Risk in % from");
        en.put(START_GROUPING_TOOLTIP, "Starts Grouping with these selected cases");
        en.put(ANTIBIOTIC_IMIPENEM, "Imipenem");
        en.put(ACTION_CREATION_DATE, "Action Creation Date***Creation Date***Action Creation Date");
        en.put(RULES_CRIT_ACG_RUB_DIS, "ACG: RUB");
        en.put(PROCESS_START_DATE, "Process start date***Start date");
        en.put(RULES_VERWEILDAUERINSTUNDEN, "VerweildauerInStunden");
        en.put(WORKFLOW_DEADLINE_DATA_RECORD_CORRECTION_DEADLINE_COMMENT, "Deadline to correct given data record.");
        en.put(TEMPLATE_ERROR_CONTENT, "you can not generate a document because the main case of this process is null");
        en.put(INSURANCE_STATUS, "Insurance Status");
        en.put(CASEFEE_TO, "Billing to");
        en.put(SUCCESS, "Success");
        en.put(WORKFLOW_DEADLINE_CASE_DIALOG_BILL_CORRECTION_DEADLINE_COMMENT, "If an agreement is reached in the case dialog, the test procedure ends. Any necessary correction of the invoice should be completed within 4 weeks");
        en.put(EVENT_TYPE_PROCESS_SUBJECT_SET_DESCRIPTION, "{1} set as process-subject");
        en.put(RISK_AREA_DRG_PEPP, "DRG/PEPP");
        en.put(CASE_RESOLVE_RULES_CATEGORIE, "Categorie");
        en.put(MAIN_DEPARTMENT, "Main Department");
        en.put(RULES_TXT_CRIT_PSYCH_ONE_2_ONE_ADULTS, "Anzahl_Stunden_eins2eins_Behandlung_Erwachsene");
        en.put(RISK_VALUE_TOTAL_TO, "Risk in € to");
        en.put(EXPORT_TYPE_CSV, "CSV***comma-separated values");
        en.put(MD_AUDIT_QUOTA, "MD auditquotas");
        en.put(STEP, "Step");
        en.put(EVENT_TYPE_PROCESS_REOPENED, "Process reopened***Process reopened");
        en.put(CASE_RESOLVE_OPS, "OPS");
        en.put(RULES_TEMP_36_GESAMTPZNPREIS, "Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)");
        en.put(RULES_TXT_CRIT_SOLE_HPN_TOOLTIP_1_2, "");
        en.put(REMINDER_RECEIVER, "REM Receiver");
        en.put(BILL_VALIDATION_INVALID_FEE_KEY, "one fee key is not valid");
        en.put(ICD_PLACEHOLDER, "No diagnoses added");
        en.put(RULES_TXT_CRIT_REMEDIES_FULL_PRICE_DIS, "Heilmittel: Gesamtpreis für Heilmittelpositionsnummer");
        en.put(LOGIN_FAILED_PASSWORD_MISSING, "No password passed");
        en.put(RULES_TEMP_57_FALL_STRING_10, "Fall.String10");
        en.put(HISTORY_UPCOMING_EVENTS, "UPCOMING EVENTS WILL COME HERE!!");
        en.put(ICD_TYPE_BEFORE_INPATIENT, "Before inpatient");
        en.put(REMINDER_LATEST, "latest open Reminder***latest Reminder***latest open Reminder");
        en.put(RULES_TEMP_42_ATCCODE, "Format: alphanumerisch (Beispiel: B01AX04)");
        en.put(RULES_TXT_CRIT_PATIENT_MASTER_DATA_CARE_GRADE_DIS, "Versicherter: Pflegestufe");
        en.put(VERSION, "Version");
        en.put(RULES_TXT_CRIT_SOLE_HIMIGROUP_PRICE_DIS, "Heil- und Hilfsmittel: Gesamtpreis für Hilfsmittelgruppe");
        en.put(VERSIONCONTROLL_HINT_PARENT_VERSION, "Parentversion of: ");
        en.put(PROCESS_ERROR_CORE_DATA, "One or more List(s) of core data could not be loaded for the process date {0} !No valid period of time found is set");
        en.put(RULES_TXT_CRIT_REMEDIES_COUNT_DIS, "Heilmittel: Menge");
        en.put(CASE_RESOLVE_ICD, "ICD");
        en.put(STATE_LOWER_SAXONY, "Lower Saxony");
        en.put(RULES_TXT_CRIT_NOW_TIME_DIS, "jetzt");
        en.put(MDK_REPORT_CREATION_DATE_TO, "Report Creation Date to");
        en.put(CASE_REMOVED_TOOLTIP, "This case is Removed");
        en.put(SUPPORT, "Support");
        en.put(RULES_TXT_CRIT_ADMISSION_DAY_TOOLTIP_1, "Tag der stationären Aufnahme.");
        en.put(RULES_TEMP_28_HM_VERORDNUNGSDATUM, "Format: YYYYMMDD");
        en.put(SETTING_SHOW_ALWAYS_INFO_FOR_EXAMINATE_QUOTA, "Always show information to examinate quota");
        en.put(RULES_CRIT_ACG_PROBABILITY_HIGH_PC_TOOLTIP_1, "Format: Fließkommazahl (Beispiel 0,01)");
        en.put(CASE_MERGING_CONDITION_FOUR_DRG, "Same MDC**Same MDC");
        en.put(REVENUE_MATH_PEPP_LT_2015, "Compensation-Level: {0} (revenue=  CW in day({1}) x Baserate from {2} to {3} ({4})X  ({5}) Days");
        en.put(RULES_VPS_DISCOVERED_FROM, "VPS_Festgestelt_durch");
        en.put(ADMISSION_DATA, "Admission Data");
        en.put(RULES_TXT_CRIT_CASE_STR_3_DIS, "Fall.String03");
        en.put(PROCESS_FINALISATION_RESULT_DELTE, "Result Delta");
        en.put(RULES_CRIT_ACG_PHARMA_COST_TOOLTIP, "Gesamte Medikamentenkosten während des Zeitraums");
        en.put(DELETE_DOCUMENT, "Do you really want to delete the document?");
        en.put(PROCESS_FINALISATION_RESULT_DELTA, "Res. Delta***Result delta***Manually set value by the user to be set in process finalisation. It is used to document the difference in the planed and acutall result");
        en.put(CASE_DELTA_CWMINIMAL, "DeltaCW minimal***dCWmin***Minimum Delta CW value determined by the validation rules for this case.");
        en.put(AUDIT_PREL_PROC_CLOSED_DEADLINE, "Audit Closed Deadline");
        en.put(PEPP, "PEPP***PEPP");
        en.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_13, "85+");
        en.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_12, "80-84");
        en.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_11, "75-79");
        en.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_10, "70-74");
        en.put(PROCESS_COMPLETION, "Complete process");
        en.put(RULES_KLINIK_ENTGELTANZAHL, "Klinik_Entgeltanzahl");
        en.put(RULES_TEMP_215_AUSGABEN, "GK RSA:Sachkosten bei extrakorporaler Blutreinigung");
        en.put(RULES_CRIT_MRSA_SUPEREROGATION_DMP_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben für Mehrleistungen DMP zu einem Versicherten (SA 700)");
        en.put(RULES_TXT_MEDICINE_COSTS, "Arzneimittel");
        en.put(PATIENT_NAME, "Family name and forename of Patient***Patient");
        en.put(RULES_TEMP_225_VERSICHERTENDATEN, "GK RSA:DMP-Tage");
        en.put(DATE_TIME_FORMAT, "yyyy-MM-dd HH:mm:ss");
        en.put(INSURANCE_ASSOCIATION, "Insurance Association");
        en.put(NO_DEPARMENT_ADMMISION_DATE, "Admission date of the not admission department is not set");
        en.put(RULES_TXT_CRIT_CLINIC_OGVD, "Klinik: OGVD");
        en.put(RULES_TEMP_116_EINWEISENDESKRANKENHAUS, "Format: 9-stellig numerisch (Beispiel: 123456789)");
        en.put(BEGE_UPDATE_REQUEST_WINDOW, "Update a request (Insurance Association)");
        en.put(ANTIBIOTIC_AZTREONAM, "Aztreonam");
        en.put(TIME_FORMAT, "HH:mm");
        en.put(WORKINGLIST_COLUMN_DIALOG, "Column Selection");
        en.put(CASE_MERGING_DO_MERGE_AND_SAVE, "Merge case & save");
        en.put(RULES_TEMP_189_KLINIK_IKZ, "Klinische Daten: Institutionskennzeichen. Siehe Institutionskennzeichen IK.");
        en.put(CASE_MERGE_MATH_REV_MERG_CASE, "Revenue merged case");
        en.put(RULES_SEKDIAGNOSE, "SekDiagnose");
        en.put(PROCESS_FINALISATION_ERROR_NO_MAIN_REVIEW_CAUSE, "No main audit reason is set.");
        en.put(LAB_DATA_ANALYSIS, "Analysis***Analysis***Abnormality indicator for laboratory values");
        en.put(STATE_SCHLESWIG_HOLSTEIN, "Schleswig-Holstein");
        en.put(CASE_RESOLVE_RULES_DESCRIPTION, "Description");
        en.put(RULES_TXT_DOSING, "Dosierung");
        en.put(VERSION_RISK_TYPE_AUDIT_CASE_DIALOG, "Audit Case Dialog");
        en.put(RULES_TXT_INTERVAL_YEARS, "Jahr(e)");
        en.put(RULES_CRIT_ACG_MEDC_DIS, "ACG: MEDC-Code");
        en.put(CASE_STATUS_NEW_VERSION, "New Version");
        en.put(RULES_05_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN, "05 - andere Sonstige Entgelte / Besondere Einrichtungen");
        en.put(RULES_CRIT_ACG_RESCALED_TOTAL_CRI, "acg_GesamtkostenIndexGewichtet");
        en.put(LANGUAGE, "Language");
        en.put(DAYS_STAY, "Days' stay");
        en.put(REMINDER_FINISHED_STATUS, "finished");
        en.put(RISK_EDITOR_RISK_AUDIT_VALUE, "Audit-Risk***A.-R.***Risk value, that defines the probability that an audit can occure");
        en.put(RULES_TXT_PEPP_RESULT, "PEPP-Ergebnis");
        en.put(CASE_OPEN_PROCESS, "Open process");
        en.put(RULES_TXT_CRIT_COMBAT_DEPARTMENT_DIS, "behandelnde Fachabteilung");
        en.put(REMINDER_MODE_SHOW_OPEN, "Open reminders");
        en.put(BILL_OPEN_ITEM_RECEIPT_DATE_RECEIPT, "Receipt Date");
        en.put(RULES_CRIT_RECHNUNG_ART_TOOLTIP_5, "13 - Nachtragsrechnung");
        en.put(MDK_DEPARTMENT, "Mdk Department");
        en.put(RULES_CRIT_RECHNUNG_ART_TOOLTIP_4, "12 - Schlußrechnung");
        en.put(RULES_CRIT_RECHNUNG_ART_TOOLTIP_3, "11 - Zwischenrechnung");
        en.put(DRG_CATALOG, "DRG catalog");
        en.put(RULES_CRIT_AMBU_CARE_PROVIDED_FROM_DIS, "Pflegedaten: Pflegeleistung von");
        en.put(PLACE_OF_REG_REQUEST_EXTENSION, "Request Extension");
        en.put(RULES_TEMP_198_ARZNEIMITTEL, "GK RSA:PZN-Code");
        en.put(ERROR_COULD_NOT_DELETE, "Could not delete item!");
        en.put(RULES_TXT_CRIT_CLINIC_MAIN_DIAG_DIS, "Klinik: Hauptdiagnose");
        en.put(RULES_GK_RSA_KHAUSGABEN, "GK_RSA_KHAusgaben");
        en.put(CASELIST_EXCEL_EXPORT_DIAG, "Caselist is exporting as Excel");
        en.put(REMINDER_SENDER, "REM Sender");
        en.put(PROCESS_FINAL, "Final");
        en.put(RULES_TEMP_119_ENTLASSUNGSDATUM_MIT_UHRZEIT, "Die Uhrzeit der Entlassung wird mitberücksichtigt");
        en.put(LAB_DATA, "Laboratory data");
        en.put(CASELIST_CSV_EXPORT_DIAG, "Caselist is exporting as CSV");
        en.put(RULES_CRIT_AMBU_CARE_PROVIDED_FROM_TOOLTIP, "Der erste Tag der aufgebrachten Leistung");
        en.put(DIALOG_BATCH_GROUPING_NINERDIAG, "#.9 Diag.");
        en.put(RULES_2_WEIBLICH, "2 - weiblich");
        en.put(AUDIT_COMMENT, "Audit Comment");
        en.put(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_DIS, "KH Medikament: Dosierungseinheit");
        en.put(RULES_TXT_CRIT_ADM_2_TYPE_DIS, "Aufnahmegrund2");
        en.put(LAB_DATA_POSITION, "Pos.***Pos.***Results (Findings) position");
        en.put(PROCESS_FINALISATION, "Process finalisation");
        en.put(RULES_TXT_CRIT_TAGE_OHNE_BERECHNUNG_PRO_ENTGELT_DIS, "Tage ohne Berechnung je Entgelt");
        en.put(RULES_TXT_OP_MULTIPL, "multipliziert ( * )");
        en.put(RULES_TXT_OP_NOT_DOUBLE_IN, "nicht doppelt in ( !! )");
        en.put(MSG_NO_RIGHT_OTHER_BLANK, "You do not have right to {0} any {1} from another user");
        en.put(LOGIN_FAILED_ACCOUNT_EXPIRED, "Account has been expired or becomes valid in the future");
        en.put(VALIDATION_ERROR_OPS_DATE, "Some procedures do not have a execution date!");
        en.put(RULES_TXT_CRIT_ADMISSION_DIAG_TYPE_DIS, "Aufnahmediagnose: Typ");
        en.put(RULE_COLUMN_CATEGORY, "category***category***category of rule");
        en.put(RULES_TXT_CRIT_SOLE_NUMBER_DIS, "Heil- und Hilfsmittel: Menge");
        en.put(DEPARTMENTS_WARD_DATE_FORMAT, "dd/MM/yyyy HH:mm");
        en.put(RULES_TEMP_245_GK_RSA_HMG, "GK RSA:HMG");
        en.put(MDK_START_AUDIT_EXTENDED_EQUAL, "Mdk Start Audit Extended");
        en.put(DATE_FORMAT_DEVIDER, "-");
        en.put(PROCESS_FINALISATION_LOS_INITIAL_FROM, "Los initial from");
        en.put(RULES_CRIT_ACG_MAJOR_RXMG_TOOLTIP_1, "Format: Alphanumerisch (Beispiel 12)");
        en.put(PROCESS_FINALISATION_CW_FINAL_FROM, "CW final from");
        en.put(ICD_REF_TYPE_CROSS, "Cross");
        en.put(RULES_3_PFLEGESTUFE_3, "3 - Pflegestufe 3");
        en.put(RULES_TXT_CRIT_ADM_CAUSE_DIS, "Aufnahmeanlass");
        en.put(PROCESS_FINALISATION_SUPPLFEE_FINAL_TO, "Supplfee final to");
        en.put(WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_CONFIRM, "Are you sure you want to cancel the cancellation for workflow number {0}?");
        en.put(RULES_TXT_CRIT_VOLUNTARY_DAYS_DIS, "Tage ohne Berechnung");
        en.put(RULES_TXT_CRIT_DRG_TOOLTIP_1, "Fallpauschale, diagnosebezogene Fallgruppe.");
        en.put(RULES_TXT_LIST_DELETE, "Löschen");
        en.put(REMINDER_USER_IS_BLANK, "not assigned");
        en.put(DRG_PARTITION_OTHER, "other");
        en.put(LEVEL_INFO, "allgemeine Informationen");
        en.put(MDK_TELEPHONE_AREA_CODE, "Telephone Area Code");
        en.put(LAB_DATA_VALUE, "result value***result value***result value");
        en.put(DAYS_SIMUL_WITH_DEDUCTION_CARE, "with deduction care");
        en.put(RULES_TEMP_102_TAGEOHNEBERECHNUNGPROENTGELT, "Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen. Erfasst am DRG - Entgeltschlüssel für den §301 Datensatz.");
        en.put(RULES_02_DRG_ANLAGE_1, "02 - DRG Anlage 1");
        en.put(GENDER_SALUTATION_DIVERSE, "Mr./Ms.");
        en.put(FEE_GROUP_DAK_INTERNAL_CHARGES, "DAK internal charges");
        en.put(HIS_VERSION, "HIS-Version");
        en.put(GENERAL, "General");
        en.put(FEE_GROUP_DRG_WITHOUT_FINAL_INVOICE, "DRG without final invoice");
        en.put(ORGAN_URINARY_ORGANS, "UrinaryOrgans");
        en.put(GENDER_DIVERSE, "diverse");
        en.put(CASE_RESOLVE_OPS_TEXT, "OPS-Text");
        en.put(DIALOG_BATCH_GROUPING_DRGRESULT, "Drg-Result");
        en.put(RULES_TEMP_86_ENTGELTEINZELBETRAG, "Format: Währung (Beispiel: 57.52)");
        en.put(RULES_TEMP_62_DRGERLOES, "Erloes(DRG)");
        en.put(LOGIN_EXIT, "Exit");
        en.put(TEMPLATE_ERROR_HEADER, "MainCase error");
        en.put(LAB_DATA_COMMENT, "Comment***Comment***Comment");
        en.put(CATALOG_DRG_LOS, "Average length of stay");
        en.put(PEPP_CATALOG_LAYOUT, "Costweight full {0} for {1} days, equals {2} per day");
        en.put(AUDIT_PRE_TRIAL, "Pre-trial");
        en.put(REPORT_FILE_CHOOSER_TILE, "Create PDF documentation");
        en.put(CASE_CARE_CWMAXIMAL_TO, "CW cre. max. to");
        en.put(RULES_KLINIK_FALLANZAHL, "Klinik_Fallanzahl");
        en.put(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_CONFIRM, "Do you really want to delete case number {0}?");
        en.put(BILL_VALIDATION_INVALID_BILL_NUMBER_LENGTH, "bill number kann be maximal 10 symbols");
        en.put(DRG_LOCAL, "DRG CPX");
        en.put(RULES_TXT_CRIT_BREATHING_DIS, "Beatmungsdauer");
        en.put(RULES_GK_RSA_ZAHNARZTAUSGABEN, "GK_RSA_ZahnarztAusgaben");
        en.put(MENU_BATCH_GROUPING_DETAILS_FILTER_ACTUAL_BOTH, "current case versions (incl. KIS)");
        en.put(EVENT_TYPE_KAIN_RECEIVED, "KAIN message received***KAIN message received");
        en.put(DRAFT_TYPES, "Draft types");
        en.put(RULES_CRIT_ACG_SEX_TOOLTIP_1, "Format: ganze Zahl (Beispiel 1)");
        en.put(RULES_TEMP_128_INTENSIVVERWEILDAUER, "Format: Ganzzahlig (Beispiel 5)");
        en.put(RULES_PRUEFDATUM_2_ENTLASSUNGSDATUM, "Prüfdatum2 (Entlassungsdatum)");
        en.put(LOGIN_FAILED_USERNAME_MISSING, "No user name passed");
        en.put(ADD_CASE_DRG_TITLE, "Group Result / Revenue");
        en.put(AGE_IN_YEARS_FROM, "Age from");
        en.put(GENDER_UNDEFINED, "undefined");
        en.put(ACG_AGE_BAND_18_34, "18-34");
        en.put(RULES_TXT_CRIT_ADMISSION_HOSPITAL_TOOLTIP_1, "Kennzeichnung des einweisenden Krankenhauses. Siehe Institutionskennzeichen IK.");
        en.put(REQUEST_REPORT_DATE_FROM, "Report date from");
        en.put(FILE_OPEN, "Open file");
        en.put(REPORT_DIALOG_HEADER_TEXT, "Note");
        en.put(ICD_TYPE_ADMISSION, "Admission");
        en.put(RULES_TEMP_246_GK_RSA_HMG, "Das Klassifikationssystem unterscheidet 106 zuschlagsfähige hierarchisierte Morbiditätsgruppen (HMG), die jeweils aus mindestens einer DxGruppe (DxG) zusammengesetzt sind, die ihrerseits mindestens einen ICD-Code umfassen. Alle HMG, die ihnen zugeordneten DxG und ICD-Codes sowie die für die Zuordnung definierten Altersgrenzen, das jeweils zulässige Geschlecht sowie die Zusatzkennzeichen des Deutschen Instituts für Medizinische Dokumentation und Information (DIMDI) nach §§ 295 und 301 SGB V werden in Anlage 1 dokumentiert.");
        en.put(RULES_TEMP_46_GESAMTMPREIS, "Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)");
        en.put(MENU_BATCH_GROUPING_DO_HISTORY_CASES, "check with history");
        en.put(RULES_TEMP_80_DRGPFLEGEERLOES, "PflegeErloes(DRG)");
        en.put(JOB_STATUS_STARTED, "execute Task");
        en.put(SUPPL_FEE_VALUE_DRG, "SF-Value");
        en.put(CASE_DELTA_REVENUE_MINIMAL, "Delta-Revenue minimal***dRevenue min.***Minimum Revenue value determined by the validation rules for this case.");
        en.put(RULES_TEMP_280_GK_RSA_NEBENDIAGNOSESTATIONAER, "Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code");
        en.put(ORGAN_BREATHING, "Breathing");
        en.put(RULES_TEMP_85_PFLEGETAGEDRG, "Pflegetage(DRG)");
        en.put(RULES_TEMP_22_HM_POSITIONSNUMMER, "Pharmazentralnummer für Hilfsmittel");
        en.put(RULES_CRIT_ACG_PREGNANT_DIS, "ACG: Schwangerschaft");
        en.put(RULES_TEMP_255_DIAGNOSENGRUPPEN, "GK RSA:Krankheitsgruppe");
        en.put(RULES_TXT_CRIT_CLINIC_ADM_REASON_DIS, "Klinik: Aufnahmegrund");
        en.put(FILTER_PROCESS_UNLOCK, "All unlocked processes");
        en.put(RULES_16_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN_OHNE_SCHLUSSRECHNUNG, "16 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung");
        en.put(RULES_TXT_CRIT_MRSA_GENDER_DIS, "Geschlecht");
        en.put(RULE_SUGG_CONDITION_NOT_COMPLETE, "Suggestion term is not complete, no value set in the WHEN - condition");
        en.put(RULES_GK_RSA_VERSTORBEN, "GK_RSA_Verstorben");
        en.put(RULES_TXT_CRIT_SOLE_FULL_PRICE_DAK_DIS, "Hilfsmittel: Gesamtpreis");
        en.put(RULES_TXT_CRIT_EQUAL_PROC_NUMBER_DIS, "Anzahl gleicher Prozeduren");
        en.put(RULES_CRIT_MRSA_HMG_TOOLTIP_2, "Format: bis zu 3-stellig, ganze Zahl (Beispiel: 72)");
        en.put(RULES_TXT_CRIT_DIAGNOSE_GROUPED_DIS, "Grouperrelevante Diagnose");
        en.put(RULES_CRIT_MRSA_AMBULANT_DXG_TOOLTIP, "Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden");
        en.put(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE, "Integrated care - accidents at work / commuting accident / occupational disease (§ 11 para 4 SGB V .)");
        en.put(ACTION_SUBJECT, "Action");
        en.put(RULES_KLINIK_ENTGELTART, "Klinik_Entgeltart");
        en.put(INPUT_TIME_TO, "To time");
        en.put(RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN, "Format: Ganzzahlig (Beispiel 2)");
        en.put(PROCESS_FINALISATION_SUPPLFEE_DIFF_FROM, "Supplfee diff from");
        en.put(CATALOG_AOP_SHEET, "Abschnitt");
        en.put(RULES_TXT_CRIT_SOLE_HPN_DIS, "Heil- und Hilfsmittel: PZN");
        en.put(SETTING_CATEGORY_WEB_APP, "Web App");
        en.put(WORKFLOW_DEADLINE_MDK_DOCUMENT_DELIVER_DEADLINE_COMMENT, "The deadline for submitting the documents requested by the MD to the MD");
        en.put(RULES_TXT_CRIT_STATION_TOOLTIP_1, "Der Name der Station.");
        en.put(SERVICE_CREATE, "create Service");
        en.put(RULES_TEMP_241_GK_RSA_AGG, "GK RSA:AGG");
        en.put(RULES_CRIT_ACG_HOS_DOMINANT_COUNT, "acg_ADGAnzahlTop");
        en.put(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_EMERGENCY_CASE, "Integrated care - Emergency Case");
        en.put(VALIDATION_ERROR_NO_ALTER_BIRTHDATE, "Date of birth will be calculated automatically.");
        en.put(WM_REQUESTCREATION_TITLE, "Create new request");
        en.put(VALIDATION_ERROR_NO_PATIENT_NUMBER, "Enter a patient number!");
        en.put(RULES_KLINIK_ENTGELTBETRAG, "Klinik_Entgeltbetrag");
        en.put(ANTIBIOTIC_CEFUROXIM_CEFOTIAM, "Cefuroxim/Cefotiam");
        en.put(RULES_CRIT_ACG_CODE_TOOLTIP, "Ermittelter ACG-Code für diesen Patienten. Der ACG-Code wird für jeden einzelnen Patienten zugewiesen. ACGs weisen Personen eindeutige, gegenseitig exklusive Morbiditätskategorien zu, basierend auf einem Erkrankungsmodell und auf dem erwarteten Ressourcenbedarf.");
        en.put(RULES_TEMP_191_KLINIK_VERWEILDAUER, "Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.");
        en.put(WORKING_LIST_CONTEXT_MENU_UNLOCK_SUCCESS, "Case {0} successfully unlocked!");
        en.put(EVENT_TYPE_REMINDER_CHANGED, "Reminder changed: type {0}, due date: {1}, assigned to: {2}, status: {3}***Changed reminders");
        en.put(INSURANCE_INSUREE, "Insuree");
        en.put(RULES_TXT_CRIT_ADMISSION_HOSPITAL_DIS, "Einweisendes Krankenhaus");
        en.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_5, "4 - 4. Quartal");
        en.put(RULES_TXT_INTERVAL_CASE, "Fall");
        en.put(INSURANCE_IDENT, "Insurance Identifier");
        en.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_4, "3 - 3. Quartal");
        en.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_3, "2 - 2. Quartal");
        en.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_2, "1 - 1. Quartal");
        en.put(LOGIN_FAILED_DATABASE_IS_NOT_AVAILABLE, "Database {0} is not available: {1}");
        en.put(GROUPER_ERROR_UNGROUPABLE, "Case is not groupable, Plese check the data!");
        en.put(DOCUMENT_SIZE, "Document size");
        en.put(RULES_DIAGNOSELOKALISATION, "DiagnoseLokalisation");
        en.put(RULES_TXT_CRIT_REMEDIES_COUNT, "he_menge");
        en.put(MDK_DOCUMENTS, "MD Documents");
        en.put(RULES_TXT_CRIT_BASE_VALUE_DIS, "Basisfallwert");
        en.put(PROCESSES_AVAILABLITY_DIALOG, "Available Processes");
        en.put(DISCHARGE_REASON_RELOCATION, "relocation");
        en.put(ADMISSION_BY_LAW, "Admission By Law");
        en.put(RULES_SEKDIAGNOSELOKALISATION, "SekDiagnoseLokalisation");
        en.put(RULES_TEMP_23_HM_MENGE, "Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.");
        en.put(RULES_TXT_CRIT_REMEDIES_PRICE, "he_preis");
        en.put(MS_OUTLOOK_VERSION, "The Microsoft Outlook Version");
        en.put(BILL_VALIDATION_NO_FEES, "Bill has to include fee keys");
        en.put(FILE_ARCHIVE_ERROR_PARENT_NOT_FOUND, "File {0} could not be archived, because the directory: {1} could not be created");
        en.put(FILE_DONT_EXISTS, "File do not exist");
        en.put(PROCESS_STATUS_CLOSE, "Close process");
        en.put(DIALOG_BATCH_GROUPING_KORRUGVD_TOOLTIP, "Count of cases, which CW differs from catalog value due to a lower LTP");
        en.put(RULES_TEMP_230_GK_RSA_ALTER, "GK RSA:Alter");
        en.put(RULES_TXT_CRIT_PROCEDURE_GROUPED_TOOLTIP_1, "Prozedur, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.");
        en.put(EVENT_OPERATION_OPEN_ITEM, "Open {0}");
        en.put(AUDIT_TELEPHONE_AREA_CODE, "Telephone Area Code");
        en.put(DIALOG_BATCH_GROUPING_RULES_WARNING, "Warning");
        en.put(INS_SHORT_SBK, "SBK");
        en.put(RULES_TXT_LIST_ADD, "Hinzufügen");
        en.put(RULES_CRIT_ACG_MAJOR_ADG_COUNT_DIS, "ACG: Anzahl Haupt ADGs");
        en.put(RULES_VPS_DISCOVERED_AT_TOOLTIP, "VPS: VPS - Fehler wurde festgestellt am");
        en.put(PROCESS_COMPLETION_FINAL_VALUES, "Values final");
        en.put(CONFORMATION, "Confirmation");
        en.put(CATALOG_AOP_CATALOG, "AOP-Katalog");
        en.put(PROCESS_CONFIRM, "Open process {0}?");
        en.put(CASE_DELETE_PROCESS, "Delete process");
        en.put(MENU_BATCH_GROUPING_DETAILS_FILTER, "Case version filter");
        en.put(RULES_TXT_CRIT_SOLE_FULL_HIMIGROUP_COUNT_DIS, "Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelgruppe");
        en.put(DIALOG_BATCH_GROUPING_LOS, "LOS");
        en.put(RULES_TXT_CRIT_BOTTOM_LENGTH_OF_STAY_DIS, "untere Grenzverweildauer");
        en.put(CASE_RESOLVE_RULES, "Rules");
        en.put(LEVEL_CONFIG, "Informationen zur Konfiguration");
        en.put(GERM_GROWTH_SCATTERED, "scattered");
        en.put(RULES_PRUEFDATUM_1_AUFNAHMEDATUM, "Prüfdatum1 (Aufnahmedatum)");
        en.put(RULES_TEMP_65_ENTLASSENDEFACHABTEILUNG, "z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.");
        en.put(BILL_OPEN_ITEM_DEBIT_CREDIT_KEY, "Debit Credit Key");
        en.put(AUDIT_CASE_DIALOG_END_DATE, "End Date");
        en.put(RULES_7S_BEWILLIGUNG_PFLEGESACHLEISTUNG, "7S - Bewilligung Pflegesachleistung");
        en.put(SERVER, "Application Server");
        en.put(PROCESS_FINALISATION_SUPPLFEE_FINAL_FROM, "Supplfee final from");
        en.put(VERSION_RISK_TYPE_CASE_FINALISATION, "Case Finalisation");
        en.put(NO_ADMISSION_CAUSE_FOUND, "Admission cause is not set");
        en.put(MENU_DATABASE_CHANGE_VALIDATION_DB_SELECTION, "Choose a database");
        en.put(RULES_TXT_CRIT_CARE_DAYS_DIS, "Anzahl der Pflegetagen");
        en.put(OPSCODE_VALIDATION, "Invalid OPS code. Please enter a valid entry!");
        en.put(PATIENT_FIRST_NAME, "First Name");
        en.put(ADDITIONAL_DATA, "Additional Data");
        en.put(RULES_TXT_CRIT_INTENSIV_STAY_TOOLTIP_1, "Tage, die der Patient auf der Intensivstation verbracht hat.");
        en.put(RULES_TXT_CRIT_ADMISSION_DIAG_DIS, "Aufnahmediagnose");
        en.put(RULES_CRIT_ACG_RXMG_TOOLTIP, "Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten");
        en.put(FILE_ADD, "Add file");
        en.put(DOCUMENT, "Document");
        en.put(AUDIT_CITY, "City");
        en.put(DIALOG_QUESTION_DELETE, "Do you really want to drop {0} ?");
        en.put(PROCESSLIST_CSV_EXPORT_DIAG, "Processlist is exporting as CSVdocumentation.menu.isActive=Is active:");
        en.put(RULES_MITTLERE_VERWEILDAUER, "mittlere_Verweildauer");
        en.put(RULES_GK_RSA_AGG, "GK_RSA_AGG");
        en.put(FEE_GROUP_HOSPITAL_INDIVIDUAL_PEPP_ANNEX_1B_INPATIENT_AND_2B_PARTIAL_INPATIENT_WITH_FINAL_INVOICE, "Hospital Individual PEPP Annex 1b (inpatient) and 2b (partial inpatient) (with final invoice)");
        en.put(RULES_TEMP_105_ZUSCHLAGSTAGE, "Format: Ganzzahlig (Beispiel 5)");
        en.put(ADD_CASE_TITLE, "Create Case");
        en.put(RULES_CRIT_INSURANCE_STATUS_TOOLTIP_5, "5 - Rentner & Angehörige");
        en.put(CASE_SIMULATON_ACTIONS, "Actions");
        en.put(RULES_CRIT_INSURANCE_STATUS_TOOLTIP_4, "3 - familienversichert");
        en.put(BILL_VALIDATION_INVALID_FEE_KEY_LENGTH, "fee key must have 8 symbols");
        en.put(PROCESS_FINALISATION_CW_DIFF, "CW diff***CW diff***Difference between the valuation relation of the initial assigned case version (KIS) and the possibly changed checkpoint case version, assigned at the end of the transaction (CW Initial - CW Final = CW Diff).");
        en.put(RULES_CRIT_INSURANCE_STATUS_TOOLTIP_3, "1 - selbst versichert");
        en.put(RULES_CRIT_INSURANCE_STATUS_TOOLTIP_2, "0 - kein");
        en.put(INSURANCE_VALID_FROM_TO, "Valid From-To");
        en.put(AUDIT_EDITOR, "Editor");
        en.put(GROUPER_STATUS_INVALID_GENDER, "Invalid Gender");
        en.put(MENU_DATABASE_CHANGE, "Change database");
        en.put(ROW_NUM, "Row Number***Row***Row Number in result set");
        en.put(RULES_08_IV, "08 - IV");
        en.put(RULES_TEMP_58_POSTLEITZAHL, "Format: Ganzzahlig (Beispiel 10245) 5-stellig");
        en.put(VERSIONCONTROLL_TITLE, "Versionmanagement");
        en.put(FEE_GROUP_BPFLV, "BPflV");
        en.put(HOSPITAL_IDENT, "Hospital Identifier");
        en.put(CATALOG_AOP_CATEGORY_DESCRIPTION_2, "Leistungen, bei denen sowohl eine ambulante, als auch stationäre Durchführung möglich ist");
        en.put(CATALOG_AOP_CATEGORY_DESCRIPTION_1, "Leistungen, die in der Regel ambulant erbracht werden können");
        en.put(CASE_MERGING_CONDITION_SIX_DRG, "Second DRG Partition O***Second a. Part. O");
        en.put(INFORM_SUPPORT, "Inform Support");
        en.put(VALIDATION_CATALOGDATA_NO_MDKS_FOUND, "No MDs available in catalogdata!");
        en.put(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DATE_DIS, "KHMedikament: Verordnungsdatum");
        en.put(CASE_MERGING_JOB_STOPPING, "Stopping case merging");
        en.put(RULES_TXT_CRIT_ENTGELTART_TOOLTIP_1, "Der Entgeltschlüssel, alphanumerisch 8-stellig, z.B. 48000001 für DRG - Systemzuschlag, angegeben wird der Code.");
        en.put(RULES_TXT_CRIT_PSYCH_ONE_2_ONE_INFANTS_TOOLTIP, "Anzahl Stunden 1:1 Behandlung Kinder");
        en.put(VALIDATION_ERROR_NO_PATIENT_LAST_NAME, "Enter patient lastname!");
        en.put(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_SUCCESS, "Case {0} successfully deleted!");
        en.put(RULES_GK_RSA_AUSGABENGESAMT, "GK_RSA_AusgabenGesamt");
        en.put(FILE_ARCHIVE_ERROR_PARENT_IS_FILE, "File {0} could not be archived, because a file was selected: {1}");
        en.put(CATALOG_DOWNLOAD_PROGRESS_SYNCHRONIZATION_STARTED, "Check if client is up to date...");
        en.put(WORKING_LIST_COLUMNS_SELECTED, "Selected Columns");
        en.put(VALIDATION_MASTERDATA_NO_ACTION_TYPES_FOUND, "No Actiontypes available in masterdata!");
        en.put(NO_RULE_TYPE_FOUND_4_RULE_VALIDATION, "Rules type is not fount in the import file. It will be created by import");
        en.put(GROUPER_OPS_RES_TYPE_OR_OPS, "OR procedure");
        en.put(RULES_CRIT_MRSA_HOSP_DXG_TOOLTIP, "Diagnosegruppe, die anhand einer ICD von einem Krankenhaus kodiert worden sind");
        en.put(MODIFIED_ON, "Modified on {0}");
        en.put(ADDRESS_PHONE_NUMBER, "Telephone Number");
        en.put(MENU_BATCH_GROUPING_START, "Start");
        en.put(RULES_TEMP_84_ENTGELTABRECHNUNGVON, "Format: YYYYMMDD");
        en.put(ANTIBIOTIC_GENTAMICIN, "Gentamicin");
        en.put(RULES_TEMP_250_DIAGNOSENGRUPPEN, "GK RSA:Ambulante DxG");
        en.put(DAILY_FEE_VALUE, "DF-Value");
        en.put(REMINDER_VALIDATION_ERROR_NO_VALID_RECEIVER, "WV Empfänger nicht vorhanden");
        en.put(MDK_AREA_CODE, "Area Code");
        en.put(RULES_TEMP_32_GESAMTATCDOSIERUNG, "Format: Fließkommazahl (Beispiel: 2.5)");
        en.put(HEALTH_INSURANCE, "Health Insurance");
        en.put(LOCK_PROCESS_ENTRY_MESSAGE, "Process {0} is already opened by user {1} since {2}!");
        en.put(RULES_TEMP_210_AUSGABEN, "GK RSA:Ausgaben für KH");
        en.put(RULES_09_MODELLVORHABEN, "09 - Modellvorhaben");
        en.put(CASE_DETAILS_INT_10, "Int 10");
        en.put(RULES_TEMP_68_STATION, "Format: alphanumerisch (Beispiel: 7B)");
        en.put(RULES_TXT_CRIT_DRGPARTITION_DIS, "DRGPartition");
        en.put(RULES_TEMP_232_GK_RSA_ERWERBSMINDERUNGSTAGE, "GK RSA:Erwerbsminderungstage");
        en.put(RULES_CRIT_ACG_PREGNANTTOOLTIP_2, "0 - Patientin war nicht schwanger während Beobachtungszeitraum");
        en.put(LAB_DATA_CATEGORY, "Category***Category***Laboratory Category");
        en.put(RULES_TEMP_82_PFLEGETAGE, "Pflegetage (PEPP)");
        en.put(ADMISSION_DIAGNOSIS, "Admission Diagnosis");
        en.put(REQUEST_TYPE_INSURANCE_ASSOCIATION, "Insurance Association");
        en.put(STATE_THURINGIA, "Free State of Thuringia");
        en.put(RULES_TEMP_166_KLINIK_ENTGELTANZAHL, "Format: Ganzzahlig (Beispiel 2)");
        en.put(RULES_TEMP_107_AUFNAHMEDATUM, "Format: YYYYMMDD");
        en.put(FILTER_CASES_CANCEL, "All canceled cases");
        en.put(RULES_VPS_CRIT_GROUP, "VPS Kriterien");
        en.put(RULES_TEMP_222_GK_RSA_MEHRLEISTUNGDMP, "GK RSA:Mehrleistungen DMP");
        en.put(VALIDATION_WARNING_OPS_DATE, "The date of the procedure is outside the stay in the department!");
        en.put(QUARTER_4, "Q4");
        en.put(QUARTER_3, "Q3");
        en.put(QUARTER_2, "Q2");
        en.put(QUARTER_1, "Q1");
        en.put(DISCHARGE_REASON_LAYING_TO_ANOTHER_HOSPITAL_COOPERATION, "Laying to another hospital cooperation");
        en.put(RULES_GK_RSA_PZNCODE, "GK_RSA_PZNCode");
        en.put(RULES_KLINIK_VWD_STUNDEN, "Klinik_Vwd_Stunden");
        en.put(RULES_29_DAK_INTERNE_ENTGELTE_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "29 - DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige");
        en.put(DOCUMENTATION_RISK_AREA, "Risk Areas");
        en.put(AUDIT_PRE_TRIAL_END_DATE, "Pre-trial End Date");
        en.put(FEE_GROUP_IV_INTEGRATED_CARE, "IV (integrated care)");
        en.put(LEVEL_ERROR, "Fehler (Ausnahme wurde abgefangen. Bearbeitung wurde alternativ fortgesetzt)");
        en.put(DOCUMENTATION_RISK, "Estimated Risk in Percent");
        en.put(DISCHARGE_REASON_DISMISSAL_AND_SUBSEQUENT_RECOVERY, "Dismissal and subsequent recovery");
        en.put(PLACE_OF_REG_REQUEST, "Request");
        en.put(MDK_START_AUDIT_FROM, "Mdk Start Audit from");
        en.put(MENU_BATCH_GROUPING_DO_SIMULATE, "DRG/PEPP Simulation");
        en.put(DOCUMENT_CREATE, "add Document");
        en.put(MDK_DEADLINE_FOR_SUBMISSION, "Deadline For Submission");
        en.put(REQUEST_REPORT_DATE_TO, "Report date to");
        en.put(RULES_ANZAHLNEBENDIAGNOSEN, "AnzahlNebendiagnosen");
        en.put(RULES_CRIT_ACG_MEDC_TOOLTIP_1, "Format: Alphanumerisch (Beispiel MUS)");
        en.put(RULES_TEMP_206_GK_RSA_PZNGESAMTDOSIS, "GK RSA:PZN-Gesamtdosis");
        en.put(VERSION_NUMBER_FROM, "Versionsnumber to");
        en.put(NEW_RULE, "nnew rule");
        en.put(DEPARTMENT_TYPE_SPECIAL_INSTITUTION, "SI");
        en.put(LAB_DATA_MAX_LIMIT, "Max Limit***Max Limit***Upper limit");
        en.put(RULES_VPS_TEST_OBJECT_TOOLTIP, "VPS: Prüfgegenstand des Fehlers aus der Iskv");
        en.put(RULES_TXT_OP_GT_EQUAL, "größer gleich ( >= )");
        en.put(NEW_RULE_TYPE, "new rule type");
        en.put(RULES_TXT_CRIT_CASE_STR_4_TOOLTIP, "Optional herstellbares alphanumerisches Kriterium");
        en.put(VALIDATION_ERROR_NO_DISCHARGE_DAY_DEPARTMENT_INDEX, "Enter a discharge date for the department at index {0} !");
        en.put(GROUPER_OPS_RES_TYPE_NOR_INVALID_LOC, "NonOR procedure with conflict subsidiary risk label");
        en.put(DRG, "DRG");
        en.put(ERROR_OCCURED, "Error occured, please try again");
        en.put(LAB_DATA_KIS_EXTERN_KEY, "KIS-External***KIS-External***Key Off");
        en.put(RULE_COLUMN_SUGGESTION, "suggestion***suggestion***suggestion for correction");
        en.put(RULES_VPS_ERR_CODE, "VPS_Fehlercode");
        en.put(RULES_TXT_CRIT_MOVEMENTS_COUNT_TOOLTIP_1, "Ist gleich der Summe der Fachabteilungen, in denen der Patient behandelt worden ist.");
        en.put(RULES_VPS_DISCOVERED_FROM_DIS, "VPS: Festgestelt durch");
        en.put(ANTIBIOTIC_METRONIDAZOL, "Metronidazol");
        en.put(PROCESS_FINALISATION_CW_CARE_INITIAL_TO, "Care CW initial to");
        en.put(BILL_REF_TYPE, "Ref. type");
        en.put(EXPORT_TYPE_EXCEL, "Excel***Microsoft Excel");
        en.put(FEE_GROUP_MODEL_PROJECTS_WITHOUT_FINAL_INVOICE, "Model projects without final invoice");
        en.put(ACTUAL, "actual");
        en.put(RULES_CRIT_AMBU_CARE_CARE_LEVEL_DIS, "Pflegedaten: Pflegestufe");
        en.put(TP_301_INFORMATION_KEY_30_MDK13, "Information about MD break-off due to data correction without decrease of settlement amount by health insurance, test procedure finished");
        en.put(RULES_GROUPERRELEVANTEDIAGNOSE, "GrouperrelevanteDiagnose");
        en.put(TP_301_INFORMATION_KEY_30_MDK12, "Information about MD break-off due to data correction with decrease of settlement amount by health insurance, test procedure finished");
        en.put(TP_301_INFORMATION_KEY_30_MDK10, "No or incomplete documentation to MD resulting in offsetting");
        en.put(RULES_TXT_CRIT_REDUCTION_DAYS_TOOLTIP_1, "(Untere Grenzverweildauer + 1 ) - Ist-Verweildauer. Im Fallpauschalenkatalog ist immer der erste Abschlagstag angegeben.(Spalte 7)");
        en.put(RULES_TXT_OP_EQUAL, "gleich ( == )");
        en.put(GROUPER_MDC_OR_SK_INFANT_DAY_CARE, "Child and Adolescent Psychiatry, part stationary***TKJ");
        en.put(PROCESS_START_DATE_TO, "Start date to");
        en.put(BILL_TYPE_ENUM_FORECAST, "forecast bill");
        en.put(ANTIBIOTIC_AMPICILLIN_AMOXICILLIN, "Ampicillin/Amoxicillin");
        en.put(CASEFEE_SUM, "Total");
        en.put(RULES_13_DRG_ANLAGE_1_OHNE_SCHLUSSRECHNUNG, "13 - DRG Anlage 1 ohne Schlussrechnung");
        en.put(PROCESS_FINALISATION_CW_DIFF_TO, "CW diff to");
        en.put(RULES_TXT_CRIT_CASE_COST, "Fallkosten");
        en.put(ADMISSION_MODE_SURGEON_ANESTHETIST, "B-Sur./B-Anest.******Surgeon with Anesthetist");
        en.put(CASE_DETAILS_DOUBLE_5, "Double 5");
        en.put(STATE_SAXONY_ANHALT, "Saxony-Anhalt");
        en.put(CASE_DETAILS_DOUBLE_4, "Double 4");
        en.put(CASE_DETAILS_DOUBLE_3, "Double 3");
        en.put(STATE_HAMBURG, "Free and Hanseatic City of Hamburg");
        en.put(CASE_DETAILS_DOUBLE_2, "Double 2");
        en.put(CASE_DETAILS_DOUBLE_1, "Double 1");
        en.put(ICD_TYPE_TRANSFERRING, "Transferring");
        en.put(DISCHARGE_REASON_COMPLETED_TREATMENT_FOR_OTHER_REASONS_INPATIENT_TREATMENT, "completed treatment for other reasons, inpatient treatment");
        en.put(RULES_TEMP_93_KOSTENGEWICHT_EFFEKTIV, "Format: Fließkommazahl (Beispiele: 0.202 oder 2.531)");
        en.put(RULES_TXT_CRIT_SDX_NUMBER_DIS, "Anzahl Nebendiagnosen");
        en.put(TP_301_INFORMATION_KEY_30_MDK04, "Setting of additional charge corresponding § 275c Abs. 3 SGB V by health incurance");
        en.put(TP_301_INFORMATION_KEY_30_MDK03, "Performance decision has due to record correction (§7 Abs. 5 PrüfvV) in the MD procedure no complaint of billing as a result (without decrease of settlement amount)");
        en.put(TP_301_INFORMATION_KEY_30_MDK02, "Performance decision has complaint of billing as a result (with decrease of settlement amount)");
        en.put(RULES_TXT_CRIT_ENTGELTABRECHNUNG_VON_DIS, "Entgeltabrechnung von");
        en.put(TP_301_INFORMATION_KEY_30_MDK01, "Performance decision has no complaint of settlement as a result (without decrease of settlement amount)");
        en.put(RULES_GK_RSA_ARZTAUSGABEN, "GK_RSA_ArztAusgaben");
        en.put(ANTIBIOTIC_LEVOFLOXACIN, "Levofloxacin");
        en.put(TEMPLATE_CONFIRMATION_TEXT, "Would you like to save document {0} to the process {1}?");
        en.put(WIEDERVORLAGE_COMMENT_DIALOG, "Note");
        en.put(RULES_74_MASSNAHMEN_IM_WOHNUMFELD, "74 - Maßnahmen im Wohnumfeld");
        en.put(BILL_REF_CURRENCY, "Ref. currency");
        en.put(DIALOG_BATCH_GROUPING_CWDIFFPOS_TOOLTIP, "Sum of max positiv dCW of all cases, computed with rules (Role:{0})");
        en.put(VALIDATION_ERROR_ERROR_COUNT, "Count of Errors {0}:");
        en.put(STATE_BADEN_WUERTTEMBERG, "Baden-Württemberg");
        en.put(BILL_NETVALUE, "Netvalue");
        en.put(RULES_TEMP_15_HM_PREIS, "Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)");
        en.put(DISCHARGE_REASON_2_UNABLE_TO_WORK, "unable to work");
        en.put(MDK_CREATE_REQUEST_WINDOW, "Create a request");
        en.put(BEGE_DIRECT_FAX, "Direct Fax No.");
        en.put(DISCHARGE_DATE, "Date of Discharge***Dis.-Date***Date of Discharge");
        en.put(SAME_TABLE, "Same rule table is found in Pool");
        en.put(START_GROUPING_TOOLTIP_RUNNING, "Grouping was started with these selected cases");
        en.put(GROUPER_STATUS_INACCEPTABLE_PRINCIPAL_ICD, "Inacceptable Principal Icd");
        en.put(CASE_STATUS_NEW, "New");
        en.put(RULES_OBERE_GRENZVERWEILDAUER, "obere_Grenzverweildauer");
        en.put(NO_HOSPITAL_CASE, "Hospital case is null");
        en.put(REQUEST_REPORT_DATE, "Report date");
        en.put(RULES_GK_RSA_STATIONAEREKRANKHEITSNUMMER, "GK_RSA_StationaereKrankheitsnummer");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_33, "30 - Behandlung regulär beendet, Überleitung in die Übergangspflege");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_32, "29 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_31, "28 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_30, "27 - Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung für Pseudofachabteilung 0004(für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)");
        en.put(PROCESS_FINALISATION_REVENUE_FINAL_TO, "Revenue Final to");
        en.put(COUNT_SD_TO, "∑ SD to");
        en.put(RULES_VPS_ERR_TEXT, "VPS_Fehlertext");
        en.put(MENU_BATCH_GROUPING_GROUPED, "Only Cases without DRG/PEPP");
        en.put(CANCEL_SEARCH, "Cancel Search");
        en.put(PROCESS_BASERATE_PEPP_VALID_FROM, "valid From");
        en.put(RISK_PERCENT_TOTAL_TO, "Risk in % to");
        en.put(ANTIBIOTIC_FUCIDINE, "Fucidine+");
        en.put(LOGIN_FAILED_DATABASE_NO_RIGHT_OTHER_ROLE, "You can use this database with your role ''''{0}''''.");
        en.put(ANTIBIOTIC_PIPERACILLIN, "Piperacillin");
        en.put(CASE_CARE_CWMINIMAL_TO, "CW cre. min. to");
        en.put(CATALOG_MDC_PRE, "PRE-MDC");
        en.put(RULES_TEMP_259_DIAGNOSENGRUPPEN, "GK RSA:Stationäre Krankheitsnummer");
        en.put(CASE_MERGING_CONDITION_FIVE_DRG, "First DRG Partition  M or A***Part. M or A");
        en.put(LAB_DATA_RANGE, "Normal Value***Normal Value***Normal value for laboratory values");
        en.put(ADMISSION_CAUSE_INSTRUCTION_BY_DOCTOR, "Admission by doctor");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_29, "26 - Beginn  eines  Zeitraumes  ohne  direkten Patientenkontakt  (stationsäquivalente Behandlung) (für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)");
        en.put(ICD_TYPE_DEPARTMENT_ADMISSION, "Department Admission");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_28, "25 - Entlassung zum Jahresende bei Aufnahme im Vorjahr");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_27, "24 - Beendigung eines externen Aufenthalts mit Abwesenheit über Mitternacht (BPflVBereich - für Pseudo-Fachabteilung 0003)");
        en.put(PROCESS_BASERATE_PEPP, "Used baserates for IKZ {0}");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_26, "23 - Beginn eines externen Aufenthalts mit Abwesenheit ücber Mitternacht (BPflV-Bereich - für verlegende Fachabteilung)");
        en.put(PROCESS_ERROR_OPEN, "Process can not be opened!");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_23, "22 - Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_22, "21 - Entlassung mit nachfolgender Wiederaufnahme");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_21, "20 - Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_20, "19 - Entlassung vor Wiederaufnahme mit Neueinstufung");
        en.put(PROMPT_TEXTFIELD_TEXT, "Search events");
        en.put(VALIDATION_ERROR_INVALID_BILL, "Invalid bill number!");
        en.put(RULES_TEMP_81_DRG, "Format: Alphanumerisch (Beispiele: A11B oder B75A)");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_19, "18 - Rückverlegung");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_18, "17 - interne Verlegung mit Wechsel zwischen den Geltungsbereichen");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_17, "15 - Behandlung gegen ärztlichen Rat beendet, nachstationäre Beh.");
        en.put(ANTIBIOTIC_CEFPODOXIM, "Cefpodoxim");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_16, "14 - Behandlung aus sonstigen Gründen beendet, nachstationäre Beh.");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_15, "13 - Externe Verlegung zur psychiatrischen Behandlung");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_14, "12 - Interne Verlegung");
        en.put(CATALOG_MENU_NO_UPDATE_CHANGES_FOUND, "no changes at {0}");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_13, "11 - Entlassung in ein Hospiz");
        en.put(RULES_ENTGELTSUMMEJEENTGELT, "EntgeltsummeJeEntgelt");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_12, "10 - Entlassung in eine Pflegeeinrichtung");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_11, "09 - Entlassung in eine Rehabilitationseinrichtung");
        en.put(EVENT_NAME_PATIENT, "Patient");
        en.put(RULES_CRIT_DIS_TYPE_TOOLTIP_10, "08 - Verlegung in ein anderes Krankenhaus i.R.e. Kooperation");
        en.put(RULES_GK_RSA_NEBENDIAGNOSESTATIONAER, "GK_RSA_NebendiagnoseStationaer");
        en.put(RULES_TEMP_144_HAUPTDIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        en.put(MDK_AUDIT_COMPLETION_DEADLINE_ERROR, "No valid entry is found for the audit completion deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.");
        en.put(RULES_CRIT_ACG_PROBABILITY_HIGH_TC_DIS, "ACG: Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten");
        en.put(INPUT_TIME_FROM, "From time");
        en.put(RULES_CRIT_MDC_TOOLTIP_9, "07 - Krankheiten und Störungen an hepatobiliärem System und Pankreas");
        en.put(RULES_TXT_CRIT_RECHNUNG_DATUM_TOOLTIP_1, "Datum, an dem die Rechnung erstellt worden ist.");
        en.put(RULES_CRIT_MDC_TOOLTIP_8, "06 - Krankheiten und Störungen der Verdauungsorgane");
        en.put(RULES_CRIT_MDC_TOOLTIP_7, "05 - Krankheiten und Störungen des Kreislaufsystems");
        en.put(RULES_CRIT_MDC_TOOLTIP_6, "04 - Krankheiten und Störungen der Atmungsorgane");
        en.put(RULES_CRIT_MDC_TOOLTIP_5, "03 - Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO)");
        en.put(PROCESS_FINALISATION_LOS_FINAL_TO, "Los final to");
        en.put(RULES_CRIT_MDC_TOOLTIP_4, "02 - Krankheiten und Störungen des Auges");
        en.put(RULES_CRIT_MDC_TOOLTIP_3, "01 - Krankheiten und Störungen des Nervensystems");
        en.put(RULES_CRIT_MDC_TOOLTIP_2, "00 - unbekannt");
        en.put(JOB_LOCK_ERROR_OPEN_CASES, "Please close open case or cases to proceed! ");
        en.put(WORKFLOW_TYPE_NO_CASE, "Not case-related process");
        en.put(IDENT_NUMBER, "Ident. Number");
        en.put(DIALOG_BATCH_GROUPING_CWDIFFNEG_TOOLTIP, "Sum of max negativ dCW of all cases, computed with rules (Role:{0})");
        en.put(RULES_TEMP_2_HE_PREIS, "Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)");
        en.put(RULES_GK_RSA_QUARTALDIAGNOSENAMBULANT, "GK_RSA_QuartalDiagnosenAmbulant");
        en.put(RULES_TXT_CASE_CRITERIA, "Fallkriterien");
        en.put(DRG_PARTITION_MEDICAL, "medical");
        en.put(RULES_TEMP_96_MITTLERE_VERWEILDAUER, "Format: Ganzzahlig (Beispiel 5)");
        en.put(BILL_TYPE, "Bill type");
        en.put(DISCHARGE_REASON_DISMISSAL_IN_A_HOSPICE, "Dismissal in a hospice");
        en.put(ACG_AGE_BAND_12_17, "12-17");
        en.put(ANTIBIOTIC_MOXIFLOXACIN, "Moxifloxacin");
        en.put(CATALOG_DOWNLOAD_PROGRESS_CATALOG_WILL_DROP, "Will drop {0} ");
        en.put(MENU_WIZARD_BACK, "Back");
        en.put(COMMON_CASE_DATA, "Common Case Data");
        en.put(VALIDATION_ERROR_INVALID_DEPARTMENT_INDEX, "Department name at index {0} is not valid!");
        en.put(GROUPER_OPS_RES_TYPE_OR_INVALID_LOC, "OR procedure with conflict subsidiary risk label");
        en.put(RULES_TXT_OP_MANY_IN, "mehrere in ( ## )");
        en.put(RISK_AREA_MAIN_DIAGNOSES, "Main diagnoses");
        en.put(NO_TABLE_IN_XML_BUT_IN_DB_FOUND, "rule table is not found in xml but in Pool");
        en.put(RULES_75_TEILSTATIONAERE_PFLEGE_TAGES_NACHTPFLEGE, "75 - Teilstationäre Pflege (Tages-/ Nachtpflege)");
        en.put(WORKFLOW_TYPE, "Type");
        en.put(RULES_20_MODELLVORHABEN_OHNE_SCHLUSSRECHNUNG, "20 - Modellvorhaben ohne Schlussrechnung");
        en.put(RULES_ENTGELTANZAHLJEENTGELT, "EntgeltanzahlJeEntgelt");
        en.put(RULE_VALIDATION_VALUE_NOT_IN_CATALOG, "Code value is not fount in catalog");
        en.put(RULES_MVERORDNUNGSDATUM, "MVerordnungsdatum");
        en.put(WORKING_LIST_CONTEXT_MENU_UNLOCK, "Unlock case");
        en.put(ADMISSION_REASON_2_COST_UNIT_CHANGE_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE, "Cost unit change - accidents at work / commuting accident / occupational disease (§ 11 para 4 SGB V .)");
        en.put(SAME_RULE_OTHER_LOGIC, "Same rule with Ident but other logic is found in Pool");
        en.put(PROCESS_FINALISATION_REVENUE_INIT_TO, "Revenue Initial to");
        en.put(NO_ADMISSION_REASON_34_FOUND, "Admission reason 34 is not set");
        en.put(RULES_TEMP_27_HM_VERORDNUNGSDATUM, "Datum, an dem das Hilfsmittel verordnet wurde.");
        en.put(RULES_KLINIK_PARTITION, "Klinik_Partition");
        en.put(JOB_STATUS_STARTING, "start Task");
        en.put(RULES_TXT_CRIT_CLINIC_FEE_VALUE_DIS, "Klinik: Entgeltbetrag");
        en.put(EVENT_TYPE_PROCESS_USER_CHANGED, "Process user changed***Changed process-users");
        en.put(RULES_TXT_CRIT_SOLE_PRESCRIPT_DATE_DIS, "Heil- und Hilfsmittel: Verordnungsdatum");
        en.put(REMINDERS, "Reminders");
        en.put(INS_SHORT, "Insurance***Insurance Group");
        en.put(EVENT_OPERATION_EDIT_ITEM, "Change {0}");
        en.put(RULES_TEMP_115_EINWEISENDERARZT, "Format: 9-stellig numerisch (Beispiel: 123456789)");
        en.put(PATIENT_LAST_NAME, "Last Name");
        en.put(RULES_TEMP_261_DIAGNOSENGRUPPEN, "GK RSA:stationäre HMG relevante Diagnosen");
        en.put(WORKFLOW_STATE_OPEN, "open");
        en.put(RULES_GK_RSA_PACKUNGANZAHL, "GK_RSA_PackungAnzahl");
        en.put(DIALOG_BATCH_GROUPING_GROUPEDCASES, "grouped Cases");
        en.put(MS_OFFICE_NOT_FOUND, "Microsoft Office was not found!");
        en.put(RULES_TEMP_62_AUFNEHMENDEFACHABTEILUNG, "Format: Ganzzahlig (Beispiel 1500)");
        en.put(CATALOG_DOWNLOAD_DAILY_FEE, "Daily Fees");
        en.put(RULES_TEMP_138_GLEICHENPROZEDURENANZAHL, "Format: Ganzzahlig (Beispiel 4)");
        en.put(RULES_TEMP_169_KLINIK_AUFNAHMEDATUM, "Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.");
        en.put(RULE_LIST, "Rule List");
        en.put(DOCUMENT_LOCATION, "location");
        en.put(ANTIBIOTIC_CLINDAMYCIN, "Clindamycin");
        en.put(RULES_TEMP_56_GEBURTSDATUM, "Format: YYYYMMDD");
        en.put(VERSION_NUMBER, "Versionsnumber***Version***Number of case version");
        en.put(BILLING_DATE_TO, "Bill.-Date to");
        en.put(RULES_TEMP_249_DIAGNOSENGRUPPEN, "GK RSA:Ambulante Diagnosen Qualifizierung");
        en.put(MESSAGE_CASE_NOT_GROUPED, "The case was not grouped with the model '{0}' ");
        en.put(AGE_DAYS, "Days");
        en.put(RULES_KLINIK_AUFNAHMEUHRZEIT, "Klinik_Aufnahmeuhrzeit");
        en.put(CATALOG_ICD_ERROR, "[ICD Catalog {0} : Has no value]");
        en.put(RULES_CRIT_SK_TOOLTIP_7, "'PSY' - Psychiatrie, vollstationär (PEPP PA01A-PA99Z)");
        en.put(RULES_CRIT_SK_TOOLTIP_6, "'PSO' - Psychosomatik, vollstationär (PEPP PP00Z-PP99Z)");
        en.put(RULES_CRIT_SK_TOOLTIP_5, "'PKJ' - Kinder- und Jugendpsychiatrie, vollstationär (PEPP PK01Z-PK99Z)");
        en.put(COUNT_CASES, "Count Cases");
        en.put(RULES_CRIT_SK_TOOLTIP_4, "'TPY' - Psychiatrie, teilstationär (PEPP TA02Z-TA99Z)");
        en.put(RULES_CRIT_SK_TOOLTIP_3, "'TPO' - Psychosomatik, teilstationär (PEPP TP20Z-TP99Z)");
        en.put(RULES_CRIT_SK_TOOLTIP_2, "'TKJ' - Kinder- und Jugendpsychiatrie, teilstationär (PEPP TK04Z-TK99Z)");
        en.put(DAYS_SURCHARGE, "Days Surcharge");
        en.put(RULES_CRIT_SK_TOOLTIP_1, "'PRE' - Prä-Strukturkategorie (PEPP P001Z-PF02Z)");
        en.put(NO_CASE_DETAILS_FOUND, "Case details is not found");
        en.put(DAY_TUESDAY, "Tuesday***Tu");
        en.put(RULES_TEMP_81_DRGPFLEGEERLOES, "Pflegeerlös eines DRG - Falles ab 2020 ");
        en.put(DATE_OF_ADMISSION, "Admission Date");
        en.put(LAB_DATA_GROUP, "Group***Group***Laboratory Group");
        en.put(INITIATION_TEST_PROCESSES, "Initiation test processes");
        en.put(CARE_PERC_INF, "Total 1:1(C/T)");
        en.put(DURATION_FROM, "from");
        en.put(RULES_TXT_PROCEDURE, "Prozedur");
        en.put(RULES_TXT_CRIT_SEPARATION_DAY_TIME_DIS, "Entlassungsuhrzeit");
        en.put(RULES_TXT_CRIT_VACATION_DIS, "Urlaub");
        en.put(RULES_21_DMP_OHNE_SCHLUSSRECHNUNG, "21 - DMP ohne Schlussrechnung");
        en.put(RENAME, "Rename");
        en.put(RULES_TXT_CRIT_ENTGELTEINZELBETRAG_DIS, "Entgelteinzelbetrag");
        en.put(MDK_START_AUDIT_EXTENDED_TO, "Mdk Start Audit Extended to");
        en.put(ANTIBIOTIC_CEFOTAXIM_CEFTRIAXON, "Cefotaxim/Ceftriaxon");
        en.put(LOGIN_FAILED_DATABASE_DOES_NOT_EXIST, "Database {0} does not exist");
        en.put(CASEFEE, "Case Fees");
        en.put(READONLY_DOC_ITEM_WARD_COMPECATING_THERAPY, "Stationsersetzende Behandlungsmethoden");
        en.put(CREATION_DATE, "Creation Date***Creation Date***Creation Date");
        en.put(RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_PZN_DIS, "KH Medikament: Gesamtdosis für PZN");
        en.put(REMINDER_SUBJECT_WAITING_FOR_MDK_REPORT, "Waiting for MD report");
        M.put("en", en); 
    } 

    private static void initLocaleDe() {
        final HashMap<String, String> de = new HashMap<>();
        de.put(RULES_ATCCODE, "ATCCode");
        de.put(RULES_TXT_INTERVAL_DAYS, "Tag(e)");
        de.put(ADMISSION_WEIGHT_FROM, "Gewicht von");
        de.put(RULES_TEMP_274_GK_RSA_HAUPTDIAGNOSESTATIONAER, "GK RSA:stationäre Hauptdiagnosen");
        de.put(ADD_CASE_REMOVE_BILL, "Rechnung entfernen");
        de.put(REVIEW_MD_WORKER, "Bearbeiter");
        de.put(RULES_KLINIK_FALLKOSTEN, "Klinik_Fallkosten");
        de.put(ADDRESS_TYPE_POSTAL, "Postanschrift");
        de.put(RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER, "Format: Ganzzahlig (Beispiel 2)");
        de.put(WORKING_LIST_CONTEXT_MENU_OPEN, "Fall öffnen");
        de.put(WORKFLOW_TYPE_STATIONARY, "Stationärer Krankenhausfall");
        de.put(WM_SERVICE_CREATION_TITLE, "Neue Leistung erstellen***Leistung erstellen");
        de.put(RULES_GROUP_FEES_TOOLTIP_9, "Entgeltliste: Entgeltabrechnung von");
        de.put(RULES_TEMP_217_GK_RSA_SOLEASUGABEN, "GK RSA:Ausgaben für Heil- und Hilfsmittel");
        de.put(RULES_GROUP_FEES_TOOLTIP_8, "Entgeltliste: Entgelteinzelbetrag");
        de.put(RULES_GROUP_FEES_TOOLTIP_7, "Entgeltliste: Entgeltart");
        de.put(ICD_TYPE_BILLING, "Abrechnungs-");
        de.put(BASERATE, "Basiswert");
        de.put(RULES_GROUP_FEES_TOOLTIP_3, "Abschlags_CW");
        de.put(CASE_MANAGEMENT, "Fall Management");
        de.put(RULES_TXT_CRIT_TIME_OF_STAY_IN_HOURS_TOOLTIP_1, "Siehe Verweildauer. Hier erfolgt die Angabe in Stunden und nicht in Tagen.");
        de.put(PEPP_PAY_TYPE_COMPENSATION_LEVEL, "Vergütungsstufe");
        de.put(RULES_GK_RSA_DIAGNOSEAMBULANTHMGRELEVANT, "GK_RSA_DiagnoseAmbulantHMGRelevant");
        de.put(RULES_TEMP_64_BEHANDELNDEFACHABTEILUNG, "Format: Ganzzahlig (Beispiel 1500)");
        de.put(TP_301_INFORMATION_KEY_30_FV000, "Fragen zur Voraussetzung bestimmter Maßnahmen");
        de.put(ERROR_VERSION_COULD_NOT_REMOVE, "Die Version konnte nicht entfernt werden!");
        de.put(BILL_TYPE_ENUM_1_WARNING, "1. Mahnung");
        de.put(CASE_DELTA_CWMAXIMAL_TO, "dCW max. bis");
        de.put(GENDER_UNKNOWN, "unbekannt");
        de.put(RULES_PFLEGETAGE, "Pflegetage");
        de.put(SAME_RULE_OTHER_NUMBER, "Regel mit gleichen Ident und anderem Nummer in dem Pool vorhanden");
        de.put(EVENT_OPERATION_EDIT, "Ändern");
        de.put(RULES_TEMP_152_KLINIK_HAUPTDIAGNOSE, "Klinische Daten: Siehe Hauptdiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.");
        de.put(CASE_RESOLVE_GROUP_RESULT_CODE, "R");
        de.put(RULES_TXT_CRIT_CLINIC_VWD_DIS, "Klinik: Verweildauer");
        de.put(RULES_CRIT_ACG_ADG_CODES, "acg_ADG_Code");
        de.put(BATCHPROCESSING, "Batchverarbeitung");
        de.put(RULES_TEMP_19_HM_GESAMTPREIS_ALLE, "Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)");
        de.put(CATALOG_DOWNLOAD_WINDOW_TITLE, "Kataloge und Stammdaten laden");
        de.put(PROCESS_EDITING, "Vorgangsbearbeitung...");
        de.put(CASE_CW_EFFECTIVE, "Effektiver CW Wert***CW eff.***Die Bewertungsrelation (synonym Kostengewicht, cost weight (CW), Schweregrad oder Relativgewicht)");
        de.put(ADDRESS, "Anschrift");
        de.put(TEMPLATE_AVAILABILITY, "Verfügbare Vorlagen");
        de.put(CASE_CARE_CW, "PflegeCW***CW Pfl.***PflegeCW-Wert des Falles");
        de.put(RULES_CASE_CASE_DAYS, "Pflegetage");
        de.put(LEVEL_OFF, "Logging ist deaktiviert");
        de.put(PROCESSLIST_EXCEL_EXPORT_DIAG, "Vorgangliste wird als Excel exportiert");
        de.put(RULES_TXT_CRIT_CASE_NUMERIC_5_TOOLTIP, "Optional herstellbares numerisches Kriterium");
        de.put(MENU_USER_ROLE_STATUSTEXT, "Rolle: {0}");
        de.put(PROCESS_FINALISATION_LOS_DIFF_FROM, "VWD Diff von");
        de.put(RULES_CRIT_ACG_AGE_BAND, "acg_altersgruppe");
        de.put(GROUP_RESULT_CODE_VALID_INVALID, "Ungültiger Code");
        de.put(MESSAGE_CASE_DATE_NOT_VALID, "Das Aufnahmejahr {0} wird nicht mehr vom Grouper unterstützt");
        de.put(RULES_TXT_RESULT, "Ergebnis");
        de.put(ACG_AGE_BAND_00_04, "00-04");
        de.put(FILTER_ABOVE, "{0} Filter weiter oben");
        de.put(RULES_TEMP_177_KLINIK_BEATMUNGSSTUNDEN, "Format: Ganzzahlig (Beispiel 30)");
        de.put(RULES_CRIT_ACG_PROBABILITY_HIGH_PC_TOOLTIP, "Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Apothekenkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Arzneimittelkosten  verursacht, im Jahr, welches der Beorbachtungsperiode folgt");
        de.put(MS_EXCEL_NOT_FOUND, "Microsoft Excel wurde nicht gefunden!");
        de.put(CATALOG_DOWNLOAD_PROGRESS_DOWNLOAD_STARTED, "Herunterladen wurde gestartet...");
        de.put(RULES_TEMP_251_DIAGNOSENGRUPPEN, "GK RSA:ambulante HMG relevante Diagnosen");
        de.put(RULES_TXT_COMPLAINT_SUGGESTION, "Vorschlag");
        de.put(RULE_TYPE_NOT_FOUND, "Regeltyp is nicht gefunden");
        de.put(RULES_VPS_TEST_OBJECT, "VPS_Prüfgegenstand");
        de.put(SAP_REFERENCE_TYPE_BILL, "Rechnung");
        de.put(RULES_PFLEGECWTAG, "PflegeCWTag");
        de.put(DEPARTMENT_GROUPING, "Abteilungs-Grouping");
        de.put(HOSPITALIZATION, "Einweisung");
        de.put(RULES_TEMP_216_GK_RSA_APOTHEKENAUSGABEN, "GK RSA:Ausgaben für Apotheken");
        de.put(DISCHARGE_WEEKDAY, "Entlassungsdatum Wochentag***Entl. WT");
        de.put(AUDIT_QUOTA_RESULT_EXCEEDED_EXAMINATION_QUOTA, "Überschreitung Prüfquote");
        de.put(DIALOG_BATCH_GROUPING_TOTALCASES_TOOLTIP, "Anzahl aller Fälle in der Datenbank (mit teil- und vorstationären Fällen, denen eine DRG/PEPP zugewiesen werden konnte)");
        de.put(RULES_EINWEISENDERARZT, "EinweisenderArzt");
        de.put(LAB_DATA_UNIT, "Einheit***Einheit***Ergebniseinheit");
        de.put(CASE_STATUS_SAP_CLOSED, "SAP geschlossen");
        de.put(LAWER_FILE_NUMBER, "Aktenzeichen (RA)***Akt.-Z. (RA)***Aktenzeichen bei Rechtsanwalt ");
        de.put(GROUPER_MDC_OR_SK_PSYCHOSOMATIC_INPATIENT_CARE, "Psychosomatik, vollstationär***PSO");
        de.put(LOCK_CASE_ENTRY_MESSAGE, "Der Fall {0} ist seit {2} Uhr bereits von Nutzer {1} geöffnet!");
        de.put(RULES_1_PFLEGESTUFE_1, "1 - Pflegestufe 1");
        de.put(RULES_TEMP_203_GK_RSA_DDD, "GK RSA:DDD");
        de.put(RULES_TXT_CRIT_TOP_LENGTH_OF_STAY_DIS, "obere Grenzverweildauer");
        de.put(RULES_KLINIK_UGVD, "Klinik_uGVD");
        de.put(PROCESS_STATUS_REMINDER, "Status der Wiedervorlage***WV Status***Status der Wiedervorlage");
        de.put(RULES_TEMP_59_FALL_STRING_7, "Fall.String7");
        de.put(RULES_GROUP_ACG_DISEASE_GROUPS_DIS, "Krankheitsgruppen");
        de.put(ANTIBIOTIC_CEFEPIM, "Cefepim");
        de.put(RULES_TXT_CRIT_CLINIC_ADM_DATE_FULL_DIS, "Klinik: Aufnahmedatum mit Uhrzeit");
        de.put(RULES_CRIT_ACG_PREGNANT, "acg_schwangerschaft");
        de.put(ORGAN_ENDOCRINE, "Endokrin");
        de.put(GROUP_RESULT_PDX_INVALID_PDX_CODE, "Ungültiger ICD-10-GM-Kode als Hauptdiagnose");
        de.put(VALIDATION_MASTERDATA_NO_AUDIT_REASONS_FOUND, "In den Stammdaten wurden keine Prüfgründe hinterlegt!");
        de.put(RULES_0_UNBEKANNT, "0 - unbekannt");
        de.put(RULES_CRIT_ACG_TOTAL_COST_TOOLTIP, "Gesamtkosten incl. Medikamentenkosten");
        de.put(RULES_NEBENDIAGNOSELOKALISATION, "NebendiagnoseLokalisation");
        de.put(RULES_TXT_CRIT_RELEASE_DEPARTMENT_DIS, "entlassende Fachabteilung");
        de.put(RULES_TXT_CRIT_PSYCH_DAYS_INTENSIV_DIS, "Anzahl Tage intensiv");
        de.put(INSURANCES, "Versicherungen");
        de.put(RULES_SUPERGROUP_ACG_TOOLTIP, "ACG");
        de.put(EVENT_OPERATION_CREATE, "Anlegen");
        de.put(READONLY_DOC_ITEM_MD_RECOMENDATION_FILE_NAME, "MD_Kodierempfehlungen");
        de.put(RULES_TEMP_160_KLINIK_DRG, "Format: Alphanumerisch (Beispiele: A11B oder B75A)");
        de.put(MENU_CHANGE, "Wechseln");
        de.put(VALIDATION_WARNING_COMBINATION_ALLREADY_EXISTS_IDENT_CS_NUMBER, "Diese Kombination von IKZ und Fallnummer existiert bereits! Es wird eine neue Fallversion angelegt.");
        de.put(RULES_CRIT_MRSA_DMP_DAYS_TOOLTIP_2, "Anzahl der DMP-Versichertentage des Versicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV");
        de.put(RULES_CRIT_MRSA_DMP_DAYS_TOOLTIP_1, "DMP-Tage aus Satzart 10");
        de.put(EVENT_TYPE_REMINDER_CREATED, "Wiedervorlage angelegt: Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3}***Wiedervorlage angelegt");
        de.put(RULES_TEMP_13_HE_VERORDNUNGSDATUM, "Format: YYYYMMDD");
        de.put(RULES_TXT_CRIT_DISCHARGE_DATE_FULL_DIS, "Entlassungsdatum mit Uhrzeit");
        de.put(ICD_TYPE_AFTER_INPATIENT, "Nachstationäre");
        de.put(TEMPLATE_CONFIRMATION, "Bestätigung");
        de.put(ORGAN_NEUROLOGY, "Neurologie");
        de.put(RULES_TXT_CRIT_CLINIC_PEPP_DIS, "Klinik: PEPP");
        de.put(RULES_TXT_CRIT_SOLE_FULL_HPN_NUMBER_DAK_DIS, "Hilfsmittel: Gesamtmenge für Hilfsmittelpositionsnummer");
        de.put(RULES_TXT_CRIT_SOLE_FULL_HPN_PRICE_DIS, "Heil- und Hilfsmittel: Gesamtpreis für PZN");
        de.put(RULES_CRIT_MRSA_HOSP_HMG_REL_DXG_TOOLTIP, "Diagnosengruppe, die durch eine ICD von einem Krankenhaus kodiert worden ist, die auch zu einer HMG führt");
        de.put(RULES_TXT_OP_MINUS, "minus ( - )");
        de.put(RULES_TXT_CRIT_RECEIPT_DEPARTMENT_TOOLTIP_1, "Kodierung der aufnehmenden Fachabteilung nach §301(Siehe Anlage 1)");
        de.put(REVIEW_INSURANCE_NAME, "Versicherungsname");
        de.put(PROCESS_COMPLETION_FINALISATION, "Datum Abschluss");
        de.put(ACTION_MSG_NO_CREATE_RIGHT, "Sie haben keine Berechtigung, eine Aktion zu erstellen");
        de.put(RULES_TXT_CRIT_BONUS_CW_TOOLTIP_1, "Ein Überschreiten der Oberen Grenzverweildauer bewirkt einen Zuschlag, bei dem die einer DRG zugeordneten CW-Wert-Zuschläge multipliziert mit den Tagen der Überschreitung dem CW-Basiswert hinzugezählt werden.");
        de.put(WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_SUCCESS, "Die Stornierung für den Fall mit der Nummer {0} ist erfolgreich aufgehoben ");
        de.put(RULES_TEMP_43_DOSIERUNG, "Format: Fließkommazahl (Beispiel: 2.5)");
        de.put(MDK_AUDIT_COMPLETION_DEADLINE_DAYS, "Tage bis Abschluss Vorverfahren***Abschluss Vorverf.");
        de.put(PROCESS_TYPE_INSURANCE, "Krankenkasse");
        de.put(FEE_GROUP_BPFLV_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "BPflV ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(BILL_VALIDATION_INVALID_INSURANCE_KEY_LENGTH, "Versicherungsnummer muss 9 Zeichen haben");
        de.put(PEPP_CATALOG, "PEPP Katalog");
        de.put(RULES_TXT_CRIT_CASE_NUMERIC_5_DIS, "Fall.Numeric05");
        de.put(EVENT_NAME_PROCESS_FINALISATION, "Vorgangsabschluss");
        de.put(RULES_TXT_CRIT_CLINIC_BREATHING_DIS, "Klinik: Beatmungsstunden");
        de.put(RULES_GK_RSA_MEHRLEISTUNGDMP, "GK_RSA_MehrleistungDMP");
        de.put(GROUPER_MDC_OR_SK_MDC_PRE, "Sonderfälle (Beatmungsfälle, Transplantationen u. ä.)");
        de.put(RULE_FILTER_BUTTON_TEXT, "Regelfilter");
        de.put(RULES_TEMP_282_VERSICHERTER_POSTLEITZAHL, "Format: Ganzzahlig (Beispiel 10245) 5-stellig");
        de.put(REMINDER_SUBJECTS, "Wiedervorlagearten***WV Arten");
        de.put(RULES_TEMP_3_HE_GESAMTMENGE, "Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.");
        de.put(NO_TABLE_FOUND, "Die in der Regellogik benutzte Tabelle ist nicht in der XML und nicht in DB gefunden");
        de.put(MENU_BATCH_GROUPING_GROUPED_TOOLTIP, "Es werden nur Fälle gegroupt,die noch kein DRG- bzw. PEPP-Ergebnis enthalten.");
        de.put(AUTHORIZATION_DIALOG_MESSAGE_CONTACT, "Bitte wenden Sie sich an Ihren Systemadministrator.");
        de.put(RULES_TEMP_94_KOSTENGEWICHT_KATALOG, "Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)");
        de.put(RULE_VALIDATION_CHECK_CATALOG_TRANSFER_TABLE, "gegen den Überleitungstabellen prüfen");
        de.put(RULES_TEMP_64_FALLERLOES, "Gesamterloes(DRG)");
        de.put(RULES_GK_RSA_DIAGNOSESTATIONAER, "GK_RSA_DiagnoseStationaer");
        de.put(MENU_BATCH_GROUPING_MED_AND_REMEDIES, "GK Prüfung");
        de.put(MENU_WIZARD_NEXT, "Weiter");
        de.put(RULES_TXT_HEM_INFOS, "Heilmittel");
        de.put(RULES_TXT_OP_PLUS, "plus ( + )");
        de.put(VERSION_RISK_TYPE_AUDIT_MD, "Anfrage MD");
        de.put(PROCESS_FINALISATION_SUPPLFEE_DIFF, "ZE Diff***ZE Diff***Differenz der Summe der Zusatzentgelte der initialen zugeordneten Fallversion (KIS) und der ggf. geänderten Checkpoint-Fallversion, zugeordnet beim Vorgangsabschluss (ZE Initial - ZE Final = ZE Diff). ");
        de.put(TREATING_DEPARTMENT_301_NAME, "§301-Name der FAB***beh. FAB***§301-Name der behandelnden Fachabteilung");
        de.put(WORKFLOW_DEADLINE_BILL_CORRECTION_DEADLINE_COMMENT, "Frist, bis zu der eine Rechnungskorrektur vom Krankenhaus an das Krankenkasse gesendet werden kann");
        de.put(CASE_CARE_CW_TO, "PflegeCW bis");
        de.put(PROCESS_REVIEW_DEADLINE_EXTENDED_DATE_TO, "EV Fristverl. bis");
        de.put(TP_301_INFORMATION_KEY_30_KL000, "Freitext bei Nennung anderer/weiterer Prüfgegenstände");
        de.put(RULES_UNTERE_GRENZVERWEILDAUER, "untere_Grenzverweildauer");
        de.put(FILTER_MORE, "weitere");
        de.put(AUDIT_QUOTA_RESULT_ACTUAL_EXAMINATION_QUOTA, "Aktuelle Prüfquote");
        de.put(RULES_CRIT_ACG_FRAILTY_FLAG_DIS, "ACG: Gebrechlichkeits-Indikator");
        de.put(PSY, "Psychosomatik");
        de.put(RULES_TXT_CRIT_CASE_NUMERIC_2_DIS, "Fall.Numeric02");
        de.put(ACG_AGE_BAND_55_64, "55-64");
        de.put(RULES_CRIT_ACG_RESCALED_TOTAL_CRI_TOOLTIP, "Kostenindex für zukünftige Gesamkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1, Untergruppeanalysen stellen Vergleiche zu den lokalen Normen zur Verfügung");
        de.put(PROCESS_STATUS_REMINDER_OPEN, "offen");
        de.put(CATALOG_DOWNLOAD_PEPP_FEE, "PEPP Zusatzentgelte");
        de.put(RULES_TXT_OP_NO_OPERATION, "keine Operation");
        de.put(WORKFLOW_DEADLINE_ANSWER_DEADLINE, "Frist Antwort");
        de.put(RULES_TXT_CRIT_CLINIC_DIS_DATE_FULL_DIS, "Klinik: Entlassungsdatum mit Uhrzeit");
        de.put(CASE_DOES_NOT_EXIST_WITH_REASON, "Der Fall mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.");
        de.put(EVENT_NAME_PROCESS, "Vorgang");
        de.put(PROCESS_FINALISATION_CW_INITIAL_TO, "CW Initial bis");
        de.put(PROCESS_REVIEW_DEADLINE_EXTENDED_DATE_FROM, "EV Fristverl. von");
        de.put(ANTIBIOTIC_CIPROFLOXACIN, "Ciprofloxacin");
        de.put(DISCHARGE_REASON_COMPLETED_TREATMENT_AGAINST_MEDICAL_ADVICE_INPATIENT_TREATMENT, "Behandlung gegen ärztlichen Rat beendet, nachstationäre Behandlung");
        de.put(PATIENT_SEX_MALE, "männlich");
        de.put(EXIT, "Beenden");
        de.put(TIME_FORMAT_DEVIDER, ":");
        de.put(DATA_RECORD_CORRECTION_DEADLINE, "Frist bis zur Datenkorrektur im Vorverfahren***Frist Dat.-Korrektur");
        de.put(RULES_TEMP_181_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT, "Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.");
        de.put(RULES_03_NUB, "03 - NUB");
        de.put(RULES_CRIT_ACG_OB_PUL_DISEASE_CONDITION, "acg_chronische_obstruktive_Lungenerkrankung_vorhanden");
        de.put(ACG_AGE_BAND_85_P, "85+");
        de.put(FEE_GROUP_IV_INTEGRATED_CARE_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "IV (integrierte Versorgung) ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(RULES_TXT_CRIT_MID_LENGTH_OF_STAY_DIS, "mittlere Verweildauer");
        de.put(CASE_DELTA_CWMAXIMAL, "Delta-CW maximal***dCW max.***Maximaler Delta-CW-Wert, welcher durch die Prüfregeln für diesen Fall ermittelt wurde.");
        de.put(CASE_MERGE_TAB_SECTION_DETECTED_REASONS, "Ermittelte Gründe");
        de.put(RULES_TXT_CRIT_REMEDIES_FULL_COUNT, "he_Gesamtmenge");
        de.put(DAYS_SIMUL_NO_DEDUCTION_CARE, "ohne Pflege");
        de.put(RULES_TEMP_178_KLINIK_ENTLASSUNGSDATUM, "Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.");
        de.put(RULES_TXT_CRIT_CLINIC_ADRG_DIS, "Klinik: ADRG");
        de.put(DOCUMENTATION_RISK_SET, "Risiken gesetzt");
        de.put(OPSCODE, "Prozedur");
        de.put(RULES_18_DAK_INTERNE_ENTGELTE_OHNE_SCHLUSSRECHNUNG, "18 - DAK-interne Entgelte ohne Schlussrechnung");
        de.put(VERSIONCONTROLL_DETAILS, "Versionseinzelheiten");
        de.put(MENU_BATCH_GROUPING_DO_SIMULATE_TOOLTIP, "Für jede Nebendiagnose des Falles wird eine DRG/PEPP Simulation durchgeführt,indem diese als Hauptdiagnose ausgewählt wird.");
        de.put(BILL_OPEN_ITEM_REF_NO, "Zuordnung");
        de.put(DIALOG_BATCH_GROUPING_DAYSEXTERN_TOOLTIP, "entsprechen den Tagen außerhalb der Gültigkeit des KHEntgG, also z.B. BPflV");
        de.put(RULES_GK_RSA_ELRLOESGESAMT, "GK_RSA_ElrloesGesamt");
        de.put(RULES_TXT_CRIT_REMEDIES_FULL_PRICE, "he_gesamtPreis");
        de.put(DIALOG_BATCH_GROUPING_RULES_TYP, "Typ");
        de.put(PAY_GRADE, "Vergütungsstufe");
        de.put(CATALOG_DOWNLOAD_CATALOGS, "Kataloge");
        de.put(MDK_BILL_CORRECTION_DEADLINE_ERROR, "Keinen gültigen Eintrag für die Frist \"Einmalige Rechnungskorrektur\" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.");
        de.put(RULES_TEMP_272_GK_RSA_DIAGNOSESTATIONAER, "GK RSA:stationäre Diagnosen");
        de.put(CASE_DETAILS_STRING_9, "String 9");
        de.put(RULES_TEMP_47_GESAMTATCPREIS, "Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)");
        de.put(CASE_DETAILS_STRING_8, "String 8");
        de.put(CASE_DETAILS_STRING_7, "String 7");
        de.put(CASE_DETAILS_STRING_6, "String 6");
        de.put(LOGIN_USER, "Benutzer");
        de.put(CASE_DETAILS_STRING_5, "String 5");
        de.put(TP_301_INFORMATION_KEY_30_FDK20, "Erklärung über die Beendigung des Falldialogs");
        de.put(MS_WORD_VERSION, "Die Microsoft Word Version");
        de.put(CASE_DETAILS_STRING_4, "String 4");
        de.put(CASE_DETAILS_STRING_3, "String 3");
        de.put(CASE_DETAILS_STRING_2, "String 2");
        de.put(CASE_DETAILS_STRING_1, "String 1");
        de.put(INS_SHORT_SOZIALAMT, "Sozialamt");
        de.put(GROUPER_MDC_OR_SK_MDC_21_B, "Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten***21B");
        de.put(GROUPER_MDC_OR_SK_MDC_21_A, "Polytrauma***21A");
        de.put(RULES_TEMP_65_FALLERLOES, "Gesamterlös des DRG - Falles mit Pflegeaufwendungen(ab 2020) ohne Berücksichtigung der Zusatzentgelten ");
        de.put(VALIDATION_ERROR_WARNING_COUNT, "Anzahl der Warnungen {0}:");
        de.put(ADMISSION_MODE_MAIN_DEPARTMENT_CHARGE_DOCTOR, "HA/B-Hon.Arzt******Honorararzt");
        de.put(CATALOG, "Katalog");
        de.put(LOGIN_ERROR_MESSAGE_CONFIGURATION_INVALID, "Die Konfigurationsdatei ist fehlerhaft");
        de.put(RULE_ESTIMATED, "Geschätztes");
        de.put(TP_301_INFORMATION_KEY_30_FDK13, "Ablehnung der Verlängerung des Falldialoges");
        de.put(RULE_DELTA_REVENUE, "Erlös Delta");
        de.put(TP_301_INFORMATION_KEY_30_FDK12, "Annahme der Aufforderung zur Verlängerung des Falldialogs");
        de.put(RULES_KLINIK_DRG, "Klinik_DRG");
        de.put(RULES_TEMP_60_FALL_STRING_8, "Fall.String8");
        de.put(NO_DISCHARGE_REASON_FOUND, "Entlassungsgrund 12 des Falles ist nicht gesetzt");
        de.put(TP_301_INFORMATION_KEY_30_FDK11, "Aufforderung zur Verlängerung des Falldialogs");
        de.put(PROCESS_FINALISATION_VERSION_SELECT, "Versionen für Fallabschluss auswählen***Version auswählen");
        de.put(RULES_TXT_CRIT_CLINIC_FEE_TYPE_DIS, "Klinik: Entgeltart");
        de.put(HISTORY_ACTION_CREATED, "Aktion {0} angelegt***Aktion angelegt");
        de.put(RULE_FILTER_DIALOG_RULE_DESCRIPTION, "Bezeichnung");
        de.put(RULES_TXT_NO_INTERVAL, "keine Angabe");
        de.put(RULES_VERSICHERTER_ALTER, "Versicherter_Alter");
        de.put(RULES_TEMP_87_ENTGELTSUMMEJEENTGELT, "Format: Währung (Beispiel: 635.60)");
        de.put(WEIGHT, "Gewicht");
        de.put(RULES_VPS_DISCOVERED_AT_DIS, "VPS: Festgestelt am");
        de.put(RULES_KLINIK_VERWEILDAUER, "Klinik_Verweildauer");
        de.put(RULES_TEMP_137_VERWEILDAUERINSTUNDEN, "Format: Ganzzahlig (Beispiel 50)");
        de.put(REVENUE_MATH_PEPP_GT_2015, "Vergütungsklasse:{0}, Erlös= CW pro Tag ({1}) x Baserate von {2} bis {3}({4}) X ({5}) Tage");
        de.put(FILTER_PRIO, "Alle mit Priorität");
        de.put(RULES_TXT_LABORATORY_VALUE, "Laborwert");
        de.put(RULES_CRIT_ACG_DIABETES_DIS, "ACG: Diabetes vorhanden");
        de.put(TP_301_INFORMATION_KEY_30_FDK03, "Ablehnung eines Falldialoges");
        de.put(TP_301_INFORMATION_KEY_30_FDK02, "Annahme der Aufforderung zum Falldialog");
        de.put(TP_301_INFORMATION_KEY_30_FDK01, "Aufforderung zum Falldialog");
        de.put(MENU_ROLE_CHANGE_VALIDATION_SELECTION, "Bitte eine Rolle wählen");
        de.put(EVENT_TYPE_PROCESS_CLOSED, "Vorgang abgeschlossen***Vorgang abgeschlossen");
        de.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_10, "9 - 98-99 Perzentile");
        de.put(RULES_TXT_CRIT_SEPARATION_WEEK_DAY_DIS, "Entlassungswochentag");
        de.put(RULES_GK_RSA_AMBULANTEHMGRELEVANTEDXG, "GK_RSA_AmbulanteHMGRelevanteDxG");
        de.put(ICD_TYPE_DRG, "DRG");
        de.put(CLIENT_ERROR_CONFIGURATION, "Die Konfigurationsdatei des Client-Benutzers scheint beschädigt zu sein:");
        de.put(RULES_GROUP_REVENUE_MRSA_DIS, "Erlöse");
        de.put(FILE_NUMBER_SAVE_TOOLTIP, "Zum Abspeicheren drücken Sie die Enter Taste ");
        de.put(RULES_TEMP_76_PFLEGETAGE, "Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.");
        de.put(RULES_PFLEGETAGEDRG, "PflegetageDRG");
        de.put(PROCESS_STATUS_REOPENED, "Vorgang wurde wieder geöffnet");
        de.put(RULES_TEMP_236_ERLOESE, "GK RSA:AGG");
        de.put(RULES_TXT_CRIT_ADM_TYPE_DIS, "Aufnahmegrund1");
        de.put(GROUPER_MDC_OR_SK_MDC_25, "Teilstationäre pädiatrische Diagnostik und Behandlung***25");
        de.put(GROUPER_MDC_OR_SK_MDC_24, "Sonstige DRGs***24");
        de.put(GROUPER_MDC_OR_SK_MDC_23, "Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens***23");
        de.put(RULES_TXT_CRIT_SOLE_NUMBER_DAK_DIS, "Hilfsmittel: Menge");
        de.put(GROUPER_MDC_OR_SK_MDC_22, "Verbrennungen***22");
        de.put(GROUPER_MDC_OR_SK_MDC_20, "Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen***20");
        de.put(RULES_TEMP_78_BASISFALLWERT, "Format: Währung (Beispiel 2100,40)");
        de.put(CASE_STRING_9, "Text 9");
        de.put(CASE_STRING_8, "Text 8");
        de.put(CASE_STRING_7, "Text 7");
        de.put(CASE_STRING_6, "Text 6");
        de.put(CASE_STRING_5, "Text 5");
        de.put(CASE_STRING_4, "Text 4");
        de.put(CASE_STRING_3, "Text 3");
        de.put(CASE_STRING_2, "Text 2");
        de.put(CASE_STRING_1, "Text 1");
        de.put(REQUEST_TYPE_OTHER, "Sonstiges");
        de.put(VERSIONCONTROLL_COMMENT, "Kommentar");
        de.put(RULES_TEMP_262_DIAGNOSENGRUPPEN, "GK RSA:stationäre Nebendiagnose");
        de.put(RULES_TXT_CRIT_BREATHING_TOOLTIP_1, "Summe der Stunden, in denen der Patient künstlich beatmet worden ist.");
        de.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_11, "A - Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden)");
        de.put(DIALOG_BATCH_GROUPING_RULES_CLUES, "Hinweise");
        de.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_10, "B - Begleitperson");
        de.put(RULES_CRIT_ACG_UNSCALED_TOTAL_CRI_DIS, "ACG: Index aller Kosten, ungewichtet");
        de.put(GROUPER_MDC_OR_SK_MDC_19, "Psychische Krankheiten und Störungen***19");
        de.put(RULES_TEMP_195_ARZNEIMITTEL, "GK RSA:Anzahl der Packungen");
        de.put(GROUPER_MDC_OR_SK_MDC_17, "Hämatologische und solide Neubildungen***17");
        de.put(GROUPER_MDC_OR_SK_MDC_16, "Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems***16");
        de.put(RULES_TXT_CRIT_ADM_DATE_FULL_DIS, "Aufnahmedatum mit Uhrzeit");
        de.put(GROUPER_MDC_OR_SK_MDC_15, "Neugeborene***15");
        de.put(GROUPER_MDC_OR_SK_MDC_14, "Schwangerschaft, Geburt und Wochenbett***14");
        de.put(GROUPER_MDC_OR_SK_MDC_13, "Krankheiten und Störungen der weiblichen Geschlechtsorgane***13");
        de.put(GROUPER_MDC_OR_SK_MDC_12, "Krankheiten und Störungen der männlichen Geschlechtsorgane***12");
        de.put(GROUPER_MDC_OR_SK_MDC_11, "Krankheiten und Störungen der Harnorgane***11");
        de.put(RULES_TXT_CRIT_SEPARATION_MONTH_TOOLTIP_1, "Monat, in den die Entlassung fällt.");
        de.put(DISCHARGE_DEPARTMENT, "KH interner Kurzname der entl. FAB***entl. FAB (int.)***Krankenhausinterner Kurzname der entlassenden Fachabteilung");
        de.put(GROUPER_MDC_OR_SK_MDC_10, "Endokrine, Ernährungs- und Stoffwechselkrankheiten***10");
        de.put(FEE_CODE_VALIDATION, "Ungültiger Entgelteintrag. Bitte geben Sie einen gültigen Eintrag ein!");
        de.put(RULES_TEMP_224_VERSICHERTENDATEN, "GK RSA:Alter");
        de.put(REMINDER_CREATE, "Wiedervorlage erstellen");
        de.put(LOCALISATION_LEFT, "links***l");
        de.put(DIALOG_BATCH_GROUPING, "Batch-Ergebnisse");
        de.put(RULES_JETZT, "Jetzt");
        de.put(RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_6, "3 - Zusatzdiagnose");
        de.put(RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_5, "2 - Sterndiagnose");
        de.put(GROUPER_MDC_OR_SK_MDC_09, "Krankheiten und Störungen an Haut, Unterhaut und Mamma***09");
        de.put(CATALOG_MENU_NO_UPDATES_FOUND, "Kataloge wurden nicht geändert");
        de.put(RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_4, "1 - Kreuzdiagnose");
        de.put(GROUPER_MDC_OR_SK_MDC_08, "Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe***08");
        de.put(RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_3, "0 - nicht gesetzt");
        de.put(GROUPER_MDC_OR_SK_MDC_07, "Krankheiten und Störungen an hepatobiliärem System und Pankreas***07");
        de.put(GROUPER_MDC_OR_SK_MDC_06, "Krankheiten und Störungen der Verdauungsorgane***06");
        de.put(GROUPER_MDC_OR_SK_MDC_05, "Krankheiten und Störungen des Kreislaufsystems***05");
        de.put(GROUPER_MDC_OR_SK_MDC_04, "Krankheiten und Störungen der Atmungsorgane***04");
        de.put(GROUPER_MDC_OR_SK_MDC_03, "Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO)***03");
        de.put(RULES_GKSO_LE_NODE_OTHER_SERVICES, "Heil- und Hilfsmittel");
        de.put(GROUPER_MDC_OR_SK_MDC_02, "Krankheiten und Störungen des Auges***02");
        de.put(RULES_CRIT_ACG_PROBABILITY_HIGH_TC_TOOLTIP, "Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Gesamtkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Gesamtkosten (einschließlich Apothekenkosten) verursacht, im Jahr, welches der Beobachtungsperiode folgt");
        de.put(GROUPER_MDC_OR_SK_MDC_01, "Krankheiten und Störungen des Nervensystems***01");
        de.put(AUDIT_TYPE_SINGLE, "Einzelfallprüfung");
        de.put(MDK_INFORMATIONS, "MD-Informationen");
        de.put(PROCESS_FINALISATION_SUPPLFEE_INITIAL, "ZE Initial***ZE Initial***Summe der Zusatzentgelte der KIS-Version des Falles, welche diesem Vorgang initial zugeordnet wurden.");
        de.put(DIALOG_BATCH_GROUPING_TOTALCASES, "Fallanzahl ges.");
        de.put(RULES_TEMP_4_HE_GESAMTMENGE, "Format: numerisch (Beispiel: 5)");
        de.put(SAP_REFERENCE_TYPE_CANCELLATION, "Storno");
        de.put(RULES_TXT_SEC_DIAGNOSE, "Nebendiagnose");
        de.put(AUDIT_AUDIT_REASONS, "Prüfgründe***Prüfgründe***Prüfgründe welche im Rahmen einer Anfrage verwendet werden.");
        de.put(RULES_14_NUB_OHNE_SCHLUSSRECHNUNG, "14 - NUB ohne Schlussrechnung");
        de.put(FAILED, "Fehlgeschlagen");
        de.put(VALIDATION_CASE_ALREADY_SELECTED, "Leistung wurde schon dem Vorgang zugefügt");
        de.put(CASE_IS_LOCKED, "Der Fall {0} wird bereits von {1} seit {2} Uhr bearbeitet");
        de.put(RULES_KLINIK_ENTGELTBEREICH, "Klinik_Entgeltbereich");
        de.put(STATE_BERLIN, "Berlin");
        de.put(MDK_DOCUMENT_DELIVER_AND_CONTINUATION_FEE_DEADLINES_ERROR, "Keinen gültigen Eintrag für die Frist \"Abgabefrist Unterlagen\" und \"Fortsetzungpauschale gezahlt\" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.");
        de.put(PROCESS_SELECT_TASK, "Nächste Aufgabe wählen");
        de.put(LOGIN_FAILED_PASSWORD_INVALID, "Passwort ungültig");
        de.put(RULES_TXT_CRIT_MOVEMENTS_COUNT_DIS, "Anzahl Bewegungen");
        de.put(REMINDER_ASSIGNED_TOOLTIP, "Siehe die Details einer Wiedervorlage");
        de.put(RULES_GK_RSA_DIAGNOSESTATIONAERHMGRELEVANT, "GK_RSA_DiagnoseStationaerHMGRelevant");
        de.put(CASE_STATUS_STANDARD, "Standard");
        de.put(ADD_CASE_CANCEL_CONFIRMATION, "Wollen Sie die manuelle Falleingabe wirklich beenden?");
        de.put(LOCAL_VERSIONS, "CPX-Versionen");
        de.put(RULES_TEMP_100_RECHNUNGSDATUM, "Format: YYYYMMDD");
        de.put(RULES_CRIT_MRSA_REDUCTION_EARNING_CAPACITY_TOOLTIP, "Anzahl der EMR-Versichertentage im Berichtsjahr");
        de.put(RULES_TXT_CRIT_COMBAT_DEPARTMENT_TOOLTIP_1, "Kodierung der behandelnden Fachabteilung nach §301(Siehe Anlage 1)");
        de.put(SAP_6WEEKSDEADLINE, "Vorgang außerhalb der 6-Wochen-Frist");
        de.put(INS_SHORT_KKH, "KKH");
        de.put(RULES_TEMP_77_PFLEGETAGE, "Format: Ganzzahlig (Beispiel 2)");
        de.put(RULES_TXT_CRIT_BONUS_DAYS_TOOLTIP_1, "Ist-Verweildauer - Obere Grenzverweildauer + 1. Im Fallpauschalenkatalog ist immer der erste Zuschlagstag angegeben (Spalte 9).");
        de.put(RULES_TEMP_131_TAGDERENTBINDUNG_2, "Format: YYYYMMDD");
        de.put(AUDIT_REASONS_ERROR, "Die Liste der Prüfgründe ist leer. Bitte konfigurieren Sie gültige Prüfgründe in den Stammdaten!");
        de.put(RULES_TEMP_69_VERLEGUNGSDATUM, "Format: YYYYMMDD");
        de.put(COUNTRY, "Staat");
        de.put(RULES_TXT_PAT_DATA, "Patientendaten");
        de.put(DIALOG_BATCH_GROUPING_NURSINGDAYS, "Pflegetage");
        de.put(DRG_CORR_TYPE_DEDUCTION_TRANSFER_ADMISSION, "Abzug Aufnahme Verlegung");
        de.put(CATALOG_OPS_ERROR, "[OPS Katalog {0} : Hat keinen Bezeichner]");
        de.put(CASE_DELTA_CWMINIMAL_TO, "dCW min. bis");
        de.put(RULES_CRIT_ACG_HYPERLIPIDEMIA_DIS, "ACG: Fettstoffwechselstörungen vorhanden");
        de.put(RULES_KLINIK_AUFNAHMEGRUND, "Klinik_Aufnahmegrund");
        de.put(PIA, "PIA");
        de.put(MDK_DOCUMENT_DELIVERED, "gesendet am");
        de.put(CASE_MERGING_CONDITION_TEN_DRG, "Neuer Fall***Neuer Fall");
        de.put(RULES_TEMP_78_PFLEGECWTAG, "Pflege CW/Tag");
        de.put(RULES_TEMP_95_MITTLERE_VERWEILDAUER, "Sie gibt die Liegezeit an, bei der bei Unterschreitung und gleichzeitiger Verlegung aus einem anderen Krankenhaus und/oder in ein anderes Krankenhaus pro Tag ein Abschlag vom Relativgewicht ermittelt werden muss (Ausnahmen laut Fallpauschalenkatalog beachten). Mit dieser Regelung soll berücksichtigt werden, dass bei einer gemeinsamen Behandlung eines Patienten durch zwei oder mehrere Krankenhäuser die einzelnen Erlöse (DRG) gemindert werden müssen.");
        de.put(ADMISSION_MODE_SURGEON_ANESTHETIST_MIDWIFE, "B-Op./B-Anäst./B-Heb.******Belegoperateur und -anastäsist und -hebamme");
        de.put(FEE_GROUP_PARTIAL_PAYMENT_WITHOUT_FINAL_INVOICE_WITH_DISMISSAL, "Teilzahlung (ohne Schlussrechnung / mit ENTL)");
        de.put(RULES_TXT_CRIT_CLINIC_DRG_DIS, "Klinik: DRG");
        de.put(CASE_DELTA_REVENUE_MAXIMAL, "Delta-Erlös maximal***dErlös max.***Maximaler Erlös-Wert, welcher durch die Prüfregeln für diesen Fall ermittelt wurde.");
        de.put(CASE_CARE_CWMAXIMAL_FROM, "PflegeCW max. von");
        de.put(ADMISSION_CAUSE_TRANSFERRING_FROM_ANOTHER_HOSPITAL, "Verlegung (Aufnahme) aus einem anderem Krankenhaus i.R.e. Kooperation");
        de.put(CONFIRMATION_NO, "Nein");
        de.put(DESCRIPTION, "Beschreibung");
        de.put(RULES_CRIT_ACG_RUB_TOOLTIP_6, "5 - Sehr hoher Verbrauch");
        de.put(RULES_TXT_CRIT_CLINIC_ADM_TIME_DIS, "Klinik: Aufnahmeuhrzeit");
        de.put(RULES_CRIT_ACG_RUB_TOOLTIP_5, "4 - Erhöhter Verbrauch");
        de.put(RULES_CRIT_ACG_RUB_TOOLTIP_4, "3 - Mittlerer Verbrauch");
        de.put(RULES_CRIT_ACG_RUB_TOOLTIP_3, "2 - Geringer Verbrauch");
        de.put(RULES_CRIT_ACG_RUB_TOOLTIP_2, "1 - Gesund, kein Verbrauch");
        de.put(RULES_CRIT_ACG_RUB_TOOLTIP_1, "0 - Keine oder nur ungültige Dx");
        de.put(CASE_CW_NEGATIVE, "Summe aller negativen CW Werte***CW-***Summe aller negativen CW Werte");
        de.put(RULES_TXT_CRIT_ACCOUCHEMENT_DATE_2_TOOLTIP_1, "Tag der Geburt des letzten Kindes bei Mehrlingsgeburten.");
        de.put(RULES_TEMP_235_GK_RSA_VERSTORBEN, "GK RSA:Verstorben");
        de.put(RULES_TAGDERENTBINDUNG_2, "TagDerEntbindung2");
        de.put(LOGIN_FAILED_DATABASE_NO_RIGHT_OTHER_ROLE_1, "Wollen Sie mit dieser Rolle die Anmeldung fortsetzen?");
        de.put(RULES_TXT_CRIT_CLINIC_DRG_PARTITION_DIS, "Klinik: DRG Partition");
        de.put(FILTER_CASES_LOCK, "Alle gesperrte Fälle");
        de.put(RULES_TAGDERENTBINDUNG_1, "TagDerEntbindung1");
        de.put(RULES_76_KURZZEITPFLEGE, "76 - Kurzzeitpflege");
        de.put(RULES_TEMP_136_VERWEILDAUER, "Format: Ganzzahlig (Beispiel 2)");
        de.put(PROCESS_FINALISATION_SAVED_MONEY_TO, "Verlustvol. bis");
        de.put(READONLY_DOC_ITEM_WARD_COMPECATING_THERAPY_FILE_NAME, "Stationsersetzende_Behandlungsmethoden");
        de.put(ANTIBIOTIC_LINEZOLID, "Linezolid");
        de.put(RULES_CRIT_ACG_PHARMA_COST_BAND_TOOLTIP_1_1, "0 - 0 Medikamentenkosten");
        de.put(DRG_PARTITION_SURGICAL, "operative");
        de.put(RULES_TEMP_41_ATCCODE, "Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04");
        de.put(RULES_TXT_CRIT_PROC_DATE_TOOLTIP_1, "Datum, an dem die Prozedur durchgeführt worden ist.");
        de.put(FEE_GROUP_MODEL_PROJECTS, "Modellvorhaben");
        de.put(TEXT_TEMPLATE_INKA, "INKA-Nachricht Kontext");
        de.put(DISCHARGE_DATE_FROM, "Entl.-Datum von");
        de.put(DAY_WEDNESDAY, "Mittwoch***Mi");
        de.put(PRIORITY_HIGH, "hohe Priorität***Prio***Die Priorität dieses Eintrages ist als HOCH eingestuft");
        de.put(RULES_TXT_CRIT_HEALTH_ENSURANCE_DIS, "Krankenkasse");
        de.put(REVENUE_MATH_DRG_CASE, "eff. CW {0} x DRG-Baserate {1}");
        de.put(RULE_TABLE_COMMENT_TOOLTIP, "\"Notiz zu Tabellennihalt\"");
        de.put(DELETE, "Löschen");
        de.put(NO_ADMISSION_REASON_FOUND, "Aufnahmegrund 12 ist nicht gesetzt");
        de.put(RULES_TXT_CRIT_CW_CATALOG_TOOLTIP_1, "( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert). Kostengewicht nach DRG - Katalog");
        de.put(CATALOG_DRG_EFF_CW, "eff. CW {0}");
        de.put(ADMISSION_REASON_2_COST_UNIT_CHANGE_WAR_INVALIDS_AND_DISABLED_PEOPLE, "Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden");
        de.put(PROCESS_REVIEW_COMPLETION_DEADLINE_DAYS, "Tage bis Abschluß EV***EV Abschluß");
        de.put(VALIDATION_MASTERDATA_NO_REQUEST_STATUS_FOUND, "In den Stammdaten wurden keine Anfrage-Status hinterlegt!");
        de.put(RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_PZN_TOOLTIP_1, "Die Summe aller Mengen der Medikamente, bei denen ein PZN - Code eingetragen ist.");
        de.put(RULES_GK_RSA_QUALIFIZIERUNGDIAGNOSENAMBULANT, "GK_RSA_QualifizierungDiagnosenAmbulant");
        de.put(RULES_KLINIK_OGVD, "Klinik_oGVD");
        de.put(CASE_MERGING_JOB_STOPPED, "Angehalten");
        de.put(RULE_FILTER_DIALOG_INFORMATION_RULES, "Information");
        de.put(REVENUE_MATH_DRG_CARE, "PflegeCW {0} x Pflege-Baserate {1}");
        de.put(RULES_12_BPFLV_OHNE_SCHLUSSRECHNUNG, "12 - BPflV ohne Schlussrechnung");
        de.put(ADMISSION_REASON_RECOVERY_DUE_COMPLICATION, "Wiederaufnahme wg. Komplikation (Fallpauschale)");
        de.put(AUDIT_UPDATE_REQUEST_WINDOW, "Anfrage aktualisieren (Prüfanfrage/Vorverfahren)");
        de.put(BILL_POSITION_NET_AMOUNT, "Nettowert");
        de.put(RULES_TEMP_92_KOSTENGEWICHT_EFFEKTIV, "Kostengewicht für PEPP - Fälle: Die Gesamt-Bewertungsrelation, die sich aus der Verweildauer und den einzelnen Vergütungsstufen ergeben.");
        de.put(RULES_TEMP_14_HM_PREIS, "Die Kosten des Hilfsmittels.");
        de.put(GERM_GROWTH_MODERATELY, "mäßig viel");
        de.put(FEE_GROUP_BEFORE_INPATIENT_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(BILL_RECIPIENT, "Regulierer");
        de.put(APPLICATION_DEFAULT_TITLE, "Checkpoint X");
        de.put(WORKFLOW_STATE_PAUSED, "pausiert");
        de.put(FILTER_PROCESS_LOCK, "Alle gesperrte Vorgänge");
        de.put(GROUP_RELEVANT_CODE_NOT_USED_FOR_DRG_PEPP_ASSIGNMENT, "Nicht für die DRG/PEPP-Zuordnung verwendet");
        de.put(REMINDER_TYPE, "Art der Wiedervorlage");
        de.put(RULES_TXT_CRIT_PSYCH_OPS_TOOLTIP, "Psych-OPS");
        de.put(OPEN_CASE, "Fall öffnen");
        de.put(RULES_CRIT_MRSA_AMBULANT_HMG_REL_DXG_TOOLTIP, "Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden, die auch zu einer HMG führt");
        de.put(LAB_DATA_ANALYSIS_DATE, "Datum Analyse***Datum Analyse***Analysedatum");
        de.put(CASE_CW_POSITIVE, "Summe aller positiven CW Werte***CW+***Summe aller positiven CW Werte");
        de.put(GROUP_RESULT_CODE_VALID_VALID, "Gültiger Code");
        de.put(AUDIT_DATA_REC_CORR_DEADLINE_ERROR, "Keinen gültigen Eintrag für die Frist \"Datensatzkorrektur\" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.");
        de.put(CARE_PERC_ADULT, "Summe 1:1");
        de.put(EVENT_TYPE_INKA_CANCELLED, "INKA Nachricht storniert***INKA Nachricht storniert");
        de.put(RULES_7B_STUNDENWEISE_ERSATZPFLEGE, "7B - stundenweise Ersatzpflege");
        de.put(RULES_TEMP_113_AUFNAHMEUHRZEIT, "Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten");
        de.put(PROCESS_PREVIEW_DEADLINES, "Fristen");
        de.put(INS_SHORT_KEH, "KEH");
        de.put(TEMPLATE_CATEGORY_SUB_FIRST, "1. Unterkategorie für eine Vorlage");
        de.put(PROCESS_FINALISATION_LOS_INITIAL_TO, "VWD Initial bis");
        de.put(RULES_TEMP_187_KLINIK_FALLANZAHL, "Format: Ganzzahlig (Beispiel 2)");
        de.put(CREATION_DATE_DOCUMENT, "Anlagedatum");
        de.put(RULES_TXT_CRIT_SOLE_HPN_DAK_DIS, "Hilfsmittel: Hilfsmittelpositionsnummer");
        de.put(RULES_CRIT_MRSA_DANTIST_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben für Zahnärzte zu einem Versicherten (SA 700)");
        de.put(INS_SHORT_HA_MUE, "HaMü");
        de.put(PROCESS_FINALISATION_RESULT_DELTA_TO, "Erg. Delta bis");
        de.put(PROCESS_FINALISATION_DRG_INITIAL, "DRG Initial***DRG Initial***DRG/PEPP der KIS-Version des Falles, welche diesem Vorgang initial zugeordnet wurde.");
        de.put(BILLING_DATE_FROM, "Rech.-Datum von");
        de.put(RULES_TXT_CRIT_ENTGELTABRECHNUNG_BIS_TOOLTIP_1, "Der letzte Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.");
        de.put(RISK_VALUE_TOTAL_EQUAL, "Risiko in €");
        de.put(LOGIN_FAILED_NO_LICENSE, "Es wurde keine checkpoint x-Lizenz gefunden");
        de.put(MDK_PHONE_NO_VALIDATE, "Ungültige Telefonnummer. Bitte geben Sie einen gültigen Eintrag an.");
        de.put(RULES_ICD_BEDINGUNG_GEKENNZEICHNET_DURCH_DIAGNOSE_CODE_AUSPRAEGUNG_CHRONISCHE_ERKRANKUNG, "rueckenbeschwerde=ICD - Bedingung gekennzeichnet durch Diagnose Code Ausprägung chronische Erkrankung:Rückenbeschwerden");
        de.put(RULES_TXT_CRIT_ADM_DATE_FULL, "Aufnahmedatum_mit_Uhrzeit");
        de.put(NUMBER, "Nummer {0}");
        de.put(ANTIBIOGRAM_RESULT_RESISTENT, "resistent");
        de.put(DIALOG_BATCH_GROUPING_CWDIFFNEG, "CW-Differenz negativ");
        de.put(SURCHARGE, "Zuschlag");
        de.put(SAME_RULE_DIFFERENT_MESSAGE, "Regel mit gleichem Inhalt,aber unterschiedlichen Validierungsergebnis");
        de.put(RULES_CRIT_ACG_ARTHRITIS_CONDITION_DIS, "ACG: Arthritis vorhanden");
        de.put(GROUPER_OPS_RES_TYPE_SRG_INVALID_DATE, "SRG mit Konflikt OPS-Datum ");
        de.put(RULES_TEMP_49_MPREIS, "Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)");
        de.put(RISK_AREA_OTHER, "Sonstiges");
        de.put(GENDER_SALUTATION_FEMALE, "Frau");
        de.put(DIFFERENCE_DAYS, "Differenz Tage");
        de.put(RULES_CRIT_ACG_ADG_VECTOR_DIS, "ACG: ADG-Vektor");
        de.put(BILL_NUMBER, "Rechnungsnummer");
        de.put(BILL_TYPE_ENUM_CREDIT_STORNO, "Gutschrift/Stornierung");
        de.put(RULES_TXT_CRIT_CARE_STATE_DIS, "Pflegestatus");
        de.put(LOGIN_FAILED_DATABASE_NO_RIGHT, "Die Rolle ''''{0}'''' hat keine Berechtigung für die Datenbank {1}");
        de.put(SETTING_FREE_CACHE, "Cache leeren");
        de.put(RULES_TXT_CRIT_REMEDIES_NUMBER_DIS, "Heilmittel: Heilmittelpositionsnummer");
        de.put(CASE_DELTA_REVENUE_MINIMAL_FROM, "dErlös min. von");
        de.put(RULES_GESAMTMPREIS, "GesamtMPreis");
        de.put(ROW_NUM_FROM, "Zeilennummer von");
        de.put(RULES_GK_RSA_STATIONAEREHMGRELEVANTEDXG, "GK_RSA_StationaereHMGRelevanteDxG");
        de.put(RULES_CRIT_ACG_UNSCALED_PHARMA_CRI_TOOLTIP, "Kostenindex für zukünftige Medikamentenkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG vorbestimmtes Modell PRI für ApothekeN-Kosten. Die geschätzten Arzneimittelkosten für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0), wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalysen stellen Vergleiche zu den nationalen Normen zur Verfügung).");
        de.put(PROCESS_PREVIEW_DOC_DELIVER, "Abgabefrist Unterlagen");
        de.put(RULES_CRIT_ACG_FRAILTY_FLAG_TOOLTIP_1, "Format: Alphanumerisch (Beispiel N)");
        de.put(TEXT_TEMPLATE_CASE_REPORT, "Fallreport Kontext");
        de.put(RULES_TEMP_1_HE_PREIS, "Die Kosten des Hilfsmittels.");
        de.put(CONFIRMATION_YES, "Ja");
        de.put(SAP_BILLINGDATE_EMPTY, "Rechnungsdatum ist nicht bekannt");
        de.put(RULES_CRIT_ACG_LOW_BACK_PAIN, "acg_Rückenbeschwerden_vorhanden");
        de.put(RULES_HM_POSITIONSNUMMER, "hm_positionsnummer");
        de.put(WEBAPP_OPEN_MANAGEMENT, "Administration des checkpoint x Servers (Wildfly)");
        de.put(RULES_TXT_CRIT_CASE_STR_5_DIS, "Fall.String05");
        de.put(GROUPER_OPS_RES_TYPE_SRG_INVALID_LOC, "SRG mit Konflikt Zusatzkennzeichen ");
        de.put(VALIDATION_CATALOGDATA_NO_INSURANCES_EXISTS, "Die hinterlegte Krankenkasse wurde in der Zwischenzeit aus dem Katalog entfernt!");
        de.put(PROCESS_FINALISATION_PROCEED, "Soll der Vorgang trotzdem abgeschlossen werden?");
        de.put(RULE_COLUMN_MESSAGE, "Regelfehler***!***Indikator ob die Regel fehlerhaft ist oder nicht");
        de.put(RULES_TEMP_193_KLINIK_VWD_STUNDEN, "Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.");
        de.put(RULES_CRIT_ACG_RENAL_FC, "acg_Niereninsuffizienz_vorhanden");
        de.put(RULES_CRIT_ACG_PHARMA_COST, "acg_Medi_Kosten");
        de.put(RULES_TEMP_124_ENTLASSUNGSUHRZEIT, "Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten");
        de.put(SAME_TABLE_OTHER_CONTENT, "Tabelle mit der abweichenden Inhalt in dem Pool vorhanden");
        de.put(GENDER_MALE, "männlich");
        de.put(CATALOG_DRG_UNK_CW, "unkorr. CW {0}");
        de.put(LOGIN_FAILED_USERNAME_INVALID, "Name ungültig");
        de.put(RULES_TEMP_140_ANZAHLPROZEDUREN, "Format: Ganzzahlig (Beispiel 2)");
        de.put(CASE_RESOLVE_ICD_UNCORRECTED_CW, "unkorr. CW");
        de.put(EVENT_TYPE_REQUEST_CREATED, "Anfrage angelegt: Typ: {0}, Institutionsname {1}, {2}***Anfrage angelegt");
        de.put(RULES_TXT_PEPP_READM_SK, "SK");
        de.put(PROCESS_REVIEW_COMPLETION_DEADLINE_DATE, "Frist bis zu dem Abschluß des Erörterungsverfahrens***EV Abschlußfrist***Datum, bis zu dem Erörterungsverfahren  abeschloßen werden muss");
        de.put(SAME_RULE_OTHER_CATEGORY, "Regel mit gleichen Ident und anderer Kategorie in dem Pool vorhanden");
        de.put(RULES_TXT_CRIT_RELEASE_DEPARTMENT_TOOLTIP_1, "Kodierung der entlassenden Fachabteilung nach §301(Siehe Anlage 1)");
        de.put(ADMISSION_BY_LAW_VOLUNTARY, "Freiwillig");
        de.put(RULES_CRIT_DIS_TYPE_3_TOOLTIP_9, "6 - arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV");
        de.put(RULES_CRIT_DIS_TYPE_3_TOOLTIP_8, "5 - arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung");
        de.put(RULES_CRIT_DIS_TYPE_3_TOOLTIP_7, "4 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung");
        de.put(MENU_BATCH_GROUPING, "Batchgroupen");
        de.put(ACTION_COMMENT, "Text der letzten Aktion***Aktion Text***Text der letzten Aktion ");
        de.put(RULES_CRIT_DIS_TYPE_3_TOOLTIP_6, "3 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung");
        de.put(RULES_MENU_MASTER_DATES, "Stammdaten");
        de.put(DOCUMENTATION_RISK_FROM_RULES, "Aus Regelverletzungen");
        de.put(RULES_CRIT_DIS_TYPE_3_TOOLTIP_5, "9 - keine Angabe");
        de.put(RULES_CRIT_DIS_TYPE_3_TOOLTIP_4, "2 - nicht arbeitsfähig");
        de.put(RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_5, "B(3) - Beidseitig");
        de.put(RULES_CRIT_DIS_TYPE_3_TOOLTIP_3, "1 - arbeitsfähig");
        de.put(RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_4, "L(2) - Links");
        de.put(RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_3, "R(1) - Rechts");
        de.put(TRANSFERRING, "Verlegung");
        de.put(RULES_TEMP_31_DOSIERUNG, "Format: Fließkommazahl (Beispiel: 2.5)");
        de.put(SOME_FEACHERS_ARE_DEACTIVATED, "Dadurch sind einige Features, wie die Fallnumererkennung im Dokumentenimport, nicht verfügbar.");
        de.put(RULES_KLINIK_ENTLASSUNGSDATUM, "Klinik_Entlassungsdatum");
        de.put(READONLY_DOC_ITEM_MD_RECOMENDATION, "MD Empfehlungen");
        de.put(WORKFLOW_DEADLINE_REVIEW_INSURANCE_ANSWER, "Antwortfrist der Krankenkasse für Erörterungsverfahren");
        de.put(MENU_USER_CHANGE_PROFILE_IMAGE, "Profilbild ändern");
        de.put(AUTHORIZATION_DIALOG_MESSAGE, "Ihre aktuelle Rolle {0} verfügt nicht über die notwendige Berechtigung um ''''{1}'''' auszuführen.");
        de.put(ERROR_VERSION_COULD_NOT_CREATE, "Es konnte keine neue Version angelegt werden!");
        de.put(RULES_CRIT_ACG_ADG_CODES_TOOLTIP_1, "Format: Alphanumerisch (Beispiel 29)");
        de.put(OPS_PLACEHOLDER, "Keine Prozeduren hinzugefügt");
        de.put(CASE_MERGING_JOB_STARTING, "Fallzusammenführung wird gestartet");
        de.put(RULES_TXT_CRIT_CASE_STR_2_DIS, "Fall.String02");
        de.put(RISK_VALUE_TOTAL_FROM, "Risiko in € von");
        de.put(RULES_CRIT_ACG_HEART_FC_CONDITION, "acg_Herzinsuffizienz_vorhanden");
        de.put(RULES_SEKDIAGNOSEPRIM, "SekDiagnosePrim");
        de.put(WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_ERROR, "Die Stornierung für Vorgangsnummer {0} konnte nicht aufgehoben werden");
        de.put(AUDIT_USER_COMMENT, "Notizen");
        de.put(DOCUMENTATION, "Dokumentation");
        de.put(WORKINGLIST_FILTER_DIALOG, "Filter Dialog");
        de.put(DAYS_UNBILLED_DIALOG, "Anzahl Tage der Abwesenheit darf nicht größer als die Anzahl der Belegtage sein.");
        de.put(LAB_DATA_METHOD, "Methode***Methode***Labor Methode");
        de.put(RULES_TEMP_264_GK_RSA_QUARTALDIAGNOSENAMBULANT, "GK RSA:Ambulante Diagnosen Leistungsquartal");
        de.put(RULES_TEMP_164_KLINIK_PEPP, "Klinische Daten:Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik");
        de.put(LOCALISATION_BILATERAL, "beidseitig***b");
        de.put(LOGIN_FAILED_NO_DATABASE_SELECTED, "Es wurde keine Datenbank angegeben");
        de.put(PROCESS_FINALISATION_REVENUE_DIFF_FROM, "Erlös Diff von");
        de.put(WORKING_LIST_CONTEXT_MENU_DELETE, "Fall löschen");
        de.put(CASE_MERGING_CONDITION_TEN_PEPP, "Neuer Fall***Neuer Fall");
        de.put(VALIDATION_ERROR_INVALID_HOSPITAL_IDENT, "IKZ des Krankenhauses ist nicht korrekt!");
        de.put(RULES_TEMP_199_ARZNEIMITTEL, "GK RSA:PZN-Gesamtdosis");
        de.put(RULES_TEMP_51_PZNCODE, "Format: numerisch (Beispiel: 4114918)");
        de.put(MENU_BATCH_INFO_GROUPED, "Fallversionen zu groupen: {0}");
        de.put(MSG_NO_RIGHT_BLANK, "Sie haben keine Berechtigung, eine {0} zu {1}");
        de.put(CASE_TYPE_AMBU_OP, "Ambu OP");
        de.put(ADD_CASE_ADD_DEPARTMENT, "Abteilung hinzufügen");
        de.put(RULES_GK_RSA_ERWERBSMINDERUNGSTAGE, "GK_RSA_Erwerbsminderungstage");
        de.put(RULES_04_SONSTIGE_ENTGELTE_ANLAGE, "04 - Sonstige Entgelte Anlage");
        de.put(RULES_71_PFLEGEGELD, "71 - Pflegegeld");
        de.put(RULES_TEMP_186_KLINIK_FALLANZAHL, "Klinische Daten: Die Summe der Fälle eines Patienten.");
        de.put(RULES_TEMP_123_ENTLASSUNGSTAG, "Format: DD");
        de.put(LOCALISATION_RIGHT, "rechts***r");
        de.put(RULES_TXT_CRIT_REMEDIES_NUMBER, "he_positionsnummer");
        de.put(RULES_TXT_OP_NOT_IN, "keine enthalten ( NOT IN )");
        de.put(PROCESS_REVIEW_COMPLETION_DEADLINE_DATE_FROM, "EV Abschlußfrist von");
        de.put(VERSIONCONTROLL_VERSION_COMMENT, "Versionskommentar");
        de.put(INSURANCE_TYPE, "Art der Kasse");
        de.put(RULE_VALIDATION_SUGG_NO_VALUE, "Regelvorschlag ist nicht vollständig");
        de.put(WIEDERVORLAGE_COMMENT_INFO, "Die maximal zulässige Zeichenanzahl wurde überschritten. 255 Zeichnen sind erlaubt");
        de.put(EVENT_TYPE_INKA_STORED, "INKA Nachricht gespeichert***INKA Nachricht gespeichert");
        de.put(RULES_CRIT_ACG_AGE_TOOLTIP_1, "Format: ganze Zahl (Beispiel 25)");
        de.put(RULES_TEMP_61_FALL_STRING_9, "Fall.String9");
        de.put(RULES_TXT_UNKNOWN, "Unbekannt");
        de.put(RULES_TEMP_134_URLAUB, "Format: Ganzzahlig (Beispiel 2)");
        de.put(ADD_CASE_REMOVE_DEPARTMENT, "Abteilung entfernen");
        de.put(ANTIBIOTIC_TIGECYCLIN, "Tigecyclin");
        de.put(FEE_GROUP_BEFORE_INPATIENT_ALONE_WITH_FINAL_INVOICE, "vorstationär mit Schlussrechnung");
        de.put(RULES_TEMP_86_PFLEGETAGEDRG, "Pflegetage(DRG) ab 2020");
        de.put(RULES_CRIT_ACG_MEDC_TOOLTIP, "Haupt-Diagnosen-Cluster erweitert. Alle der MEDC-Codes für diesen Patienten. Die EDC Taxonomie gliedert sich in breite klinische Kategorien, genannt MEDCs.");
        de.put(MDK_AUDIT_COMPLETION_DEADLINE_TO, "Frist Vv Abschluss bis");
        de.put(CASE_DETAILS_STRING_10, "String 10");
        de.put(RULES_TXT_OP_MANY_IN_TABLE, "mehrere in Tabelle ( #@ )");
        de.put(RULES_TEMP_170_FALL_NUMERIC_7, "Fall.Numeric7");
        de.put(RULES_CRIT_PCCL_TOOLTIP_10, "6 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016");
        de.put(RULES_TEMP_233_GK_RSA_GESCHLECHT, "GK RSA:Geschlecht");
        de.put(RULES_CRIT_ACG_PHARMA_COST_DIS, "ACG: Kosten für Medikamente");
        de.put(RULES_TEMP_244_GK_RSA_ELRLOESGESAMT, "GK RSA:Gesamterlöse aus dem RSA");
        de.put(LEVEL_ALL, "Alle Meldungen werden ungefiltert ausgegeben");
        de.put(CATALOG_DOWNLOAD_PROGRESS_PRIMING, "Vorbereiten...");
        de.put(GROUPER_STATUS_INVALID_ADM_DIS_REASON_MODE, "Ungültiger Entlassungsgrund, Aufnahmeanlass oder Aufnahmegrund");
        de.put(MDK_FAX_VALIDATE, "Ungültige Faxnummer. Bitte geben Sie einen gültigen Eintrag an.");
        de.put(PROCESS_LIST_DATE_FORMAT, "dd.MM.yyyy HH:mm:ss");
        de.put(RULES_TXT_CRIT_VOLUNTARY_DAYS_TOOLTIP_1, "Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen.");
        de.put(VALIDATION_ERROR_INVALID_MDK_NAME, "MD-Name ist nicht korrekt!");
        de.put(RULES_TXT_CRIT_AUX_DIAG_TYPE_DIS, "Nebendiagnose: Typ");
        de.put(CASE_NUMERIC_10, "Zahl 10");
        de.put(WORKFLOW_CLOSE_AND_CREATE_REMINDER_NO_FILTER, "Diese Funktion kann nur genutzt werden, wenn der Filter 'Art der Wiedervorlage' gesetzt ist.");
        de.put(RULES_TEMP_242_GK_RSA_HMGANZAHL, "GK RSA:Anzahl der HMGs");
        de.put(RULES_TEMP_18_HM_GESAMTPREIS_ALLE, "Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.");
        de.put(COUNTRY_GERMANY, "Deutschland");
        de.put(RULES_CRIT_ACG_RESCALED_PHARMA_CRI, "acg_MediKostenIndexGewichtet");
        de.put(RULES_KLINIK_HAUPTDIAGNOSE, "Klinik_Hauptdiagnose");
        de.put(BILL_OPEN_ITEM_TEXT_DESC, "Bezeichnung");
        de.put(WORKFLOW_DEADLINE_REVIEW_DOCUMENTS_SEND_ON_COMMENT, "Grundlage  des  EV  sind  sämtliche  erforderliche  Daten  des  streitbefangenen  Falles,  einschließlich  aller  der  vom  MD  beim  Krankenhaus  erhobenen  Daten,  sowie  die  im  Rahmen  des  EV  übermittelten  Unterlagen  und  vorgetragenen  Argumentationen/Einwendungen.  Die Parteien des Erörterungsverfahrens stellen sicher, dass für die Durchführung des Erörterungsverfahrens  erforderliche  Unterlagen  spätestens  4  Wochen  nach  der  Mitteilung   gemäß Absatz 3 Satz 1 der anderen Partei vorliegen.");
        de.put(RULES_DRG_MDC, "MDC");
        de.put(RULES_CRIT_ACG_ADG_VECTOR_TOOLTIP_1, "Format: Alphanumerisch (Beispiel ADG0000000000100000000000001000000000)");
        de.put(RULE_WL, "Rule Editor Working List");
        de.put(RULES_TEMP_220_GK_RSA_ARZTAUSGABEN, "GK RSA:Ausgaben für Ärzte");
        de.put(RULES_TXT_CRIT_CITY_DIS, "Wohnort");
        de.put(RULES_TEMP_239_ERLOESE, "GK RSA:Gesamterlöse aus dem RSA");
        de.put(CASE_RESOLVED, "Fall abgeschlossen");
        de.put(MDK_CONTINUATION_FEE_PAID, "Fortsetzungspauschale gezahlt");
        de.put(FEE_GROUP_DRG, "DRG");
        de.put(DIALOG_BATCH_GROUPING_UNKCMI_TOOLTIP, "Durchschnittliches Kostengewicht (CW) aller gegroupten Fälle vor Korrektur durch Zu- oder Abschläge (Werte des Fallpauschalenkatalogs)");
        de.put(RULES_TXT_CRIT_PSYCH_DAYS_INTENSIV, "Anzahl_Tage_Intensiv");
        de.put(BILLING_QUARTER, "Rechnungsquartal***Rech.-Quartal");
        de.put(RULES_TXT_CRIT_ACCOUCHEMENT_DATE_1_TOOLTIP_1, "Tag der Geburt des Kindes (des ersten Kindes bei Mehrlingen).");
        de.put(RULES_TEMP_83_PFLEGETAGE, "Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.");
        de.put(REMINDER_FINISHED, "abgearbeitet***Wiedervorlage abgearbeitet");
        de.put(DISCHARGE_REASON_INTERNAL_INSTALLATION_WITH_ALTERNATING_BETWEEN_THE_SCOPES, "interne Verlegung mit Wechsel zwischen den Geltungsbereichen");
        de.put(RULES_CRIT_ACG_UNSCALED_PHARMA_CRI_DIS, "ACG: Index Medikamentenkosten, ungewichtet");
        de.put(REVIEW_DEADLINE_SEND_ON_DATE, "Nachsendefrist bis");
        de.put(RULES_TXT_GROUP_PATIENT_MASTER_DATA_DIS, "Versicherten Stammdaten");
        de.put(RULES_HM_GESAMTMENGE, "hm_gesamtmenge");
        de.put(RULE_FILTER_DIALOG_RULE_NUMBER, "Nummer");
        de.put(STATIONARY, "stationär");
        de.put(BILL_OPEN_ITEM_ACCOUNTS_RECEIVABLE_NO, "Debitorennr");
        de.put(INSURANCE_BILL_RECIVED, "Eingang Rech.-datum  Kasse***Eingang Rech.-datum Kasse***Datum an dem die Rechnung bei der Kasse eingegangen ist.");
        de.put(STATE_SAXONY, "Freistaat Sachsen");
        de.put(DEPARTMENT_MAIN_DIAGNOSIS_TOOLTIP, "BHD für FAB: {0}");
        de.put(PROCESS_FINALISATION_VERSION_COMPARISON_NOTALLOWED, "Vergleich der Version(en) ist nicht möglich, da der Basisfall storniert ist.");
        de.put(ADMISSION_CAUSE_ADMISSION_AFTER_REHA, "Aufnahme nach vorausgegangener Behandlung in einer Rehaeinrichtung");
        de.put(DISCHARGE_REASON_TERMINATION_EXTERNAL_STAY_WITH_ABSENCE_THROUGH_MIDNIGHT, "Beendigung externer Aufenthalt mit Abwesenheit über Mitternacht");
        de.put(RULES_TEMP_74_ABSCHLAGSTAGE, "Format: Ganzzahlig (Beispiel: 5)");
        de.put(VALIDATION_CATALOGDATA_NO_MDK_EXISTS, "Der hinterlegte medizinische Dienst wurde in der Zwischenzeit aus dem Katalog entfernt!");
        de.put(RULES_TXT_CRIT_TIME_OF_STAY_IN_HOURS_DIS, "Verweildauer in Stunden");
        de.put(EDIT, "Bearbeiten");
        de.put(CASE_RESOLVE_RULES_TYPE, "Type");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_9, "%");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_8, "I.E.");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_7, "µg");
        de.put(PATIENT_NUMBER, "Patientennummer***Pat.-Nr.");
        de.put(EVENT_TYPE_CASE_REMOVED, "Fall entfernt: Fallnummer: {1}***Fall entfernt");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_6, "l");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_5, "g");
        de.put(PEPP_TEXT, "PEPP-Text");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_4, "ml");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_3, "mg");
        de.put(RESULT, "Ergebnis");
        de.put(LOGIN_ERROR_MESSAGE_SERVER, "Keine Verbindung zum Checkpoint X Server möglich");
        de.put(PROCESS_STATUS_REMINDER_CLOSED, "abgearbeitet");
        de.put(GROUPER_MDC_OR_SK_MDC_18_B, "Infektiöse und parasitäre Krankheiten***18B");
        de.put(DISCHARGE_REASON_COMPLETED_TREATMENT_AGAINST_MEDICAL_ADVICE, "Behandlung gegen ärztlichen Rat beendet");
        de.put(GROUPER_MDC_OR_SK_MDC_18_A, "HIV***18A");
        de.put(DELETE_REMINDER, "Wollen Sie die Wiedervorlage wirklich löschen?");
        de.put(ORGAN_HEMATOLOGY, "Hämatologie");
        de.put(RULES_TEMP_183_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT, "Format: YYYYMMDD HH:mm");
        de.put(RULES_TEMP_173_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT, "Die Uhrzeit der Aufnahme wird mitberücksichtigt");
        de.put(RULES_TXT_CRIT_ADMISSION_DOC_TOOLTIP_1, "Kennzeichnung des einweisenden Arztes. Siehe Institutionskennzeichen IK.");
        de.put(ADMISSION_CAUSE_BIRTH, "Geburt");
        de.put(RULES_CRIT_DRGPARTITION_TOOLTIP_5, "M - eine rein medizinische Behandlung ohne Eingriffe.");
        de.put(RULES_TEMP_54_ALTERINJAHREN, "Format: Ganzzahlig (Beispiel 50)");
        de.put(RULES_CRIT_DRGPARTITION_TOOLTIP_4, "A - eine nichtoperative, jedoch invasive Behandlung");
        de.put(RULES_TEMP_101_ENTGELTSUMME, "Format: Währung (Beispiel: 2200.55)");
        de.put(RULES_CRIT_DRGPARTITION_TOOLTIP_3, "O - operative Behandlung");
        de.put(DEPARTMENTS, "Abteilungen");
        de.put(READONLY_DOC_ITEM_DKR_PEPP_FILE_NAME, "DKR-Psych_Version_");
        de.put(FILE_ARCHIVE_ERROR_CAN_NOT_ACCESS, "Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil ein Zugriffsproblem aufgetreten ist: {1}");
        de.put(DAY_MONDAY, "Montag***Mo");
        de.put(REVENUE_MATH_DRG_CARE_GRADE_LAYOUT_CARE_REVENUE, "for CareCW {0} (CW in day {1} x {2} days) ");
        de.put(FEE_GROUP_BEFORE_INPATIENT, "vorstationär");
        de.put(PATIENT_SEX_FEMALE, "weiblich");
        de.put(REVENUE_PEPP, "PEPP-Erlös");
        de.put(MDK_SUBSEQUENT_PROCEEDING_DATE_FORM, "Nachverfahren von ");
        de.put(CREATED_FROM, "von {0}");
        de.put(ANTIBIOTIC_TETRACYCLIN_DOXYCYCLIN, "Tetracyclin/Doxycyclin");
        de.put(RULES_11_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004, "11 - gesonderte Entgelte aus den Jahren 2003/2004");
        de.put(INSURANCE_NUMBER, "Versicherten-Nummer***Vers.-Nr.***Versicherten-Nummer des Patienten");
        de.put(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_DIS, "KH Medikament: Dosierung");
        de.put(CASE_RESOLVE_MD, "HD");
        de.put(RULES_TXT_OP_CONCATENATE, "verketten ( | )");
        de.put(REVIEW_REMINDER, "Wiedervorlage");
        de.put(CASE_RESOLVE_ICD_TEXT, "ICD-Text");
        de.put(RULES_TEMP_12_HE_VERORDNUNGSDATUM, "Datum, an dem das Hilfsmittel verordnet wurde.");
        de.put(VALIDATION_ERROR_NO_PATIENT_BIRTHDAY, "Geben Sie den Geburtstag des Patienten ein!");
        de.put(MDK_REPORT_CREATION_DATE_FROM, "Gutachtendatum von");
        de.put(AUDIT_IDENT, "IKZ der Krankenkasse***IKZ Krankenkasse*** ");
        de.put(MENU_BATCH_GROUPING_DO_RULES, "mit automatischer Fallprüfung");
        de.put(AUDIT_STATUS, "Status");
        de.put(RULES_TXT_CRIT_LABOR_DESCRIPTION_DIS, "Labor-Beschreibung");
        de.put(RULES_TXT_CRIT_ACCOUCHEMENT_DATE_2_DIS, "Tag der Entbindung2");
        de.put(ADMISSION_REASON_HOSPITAL_CARE_INPATIENT_WITH_EXPECTED_BEFORE_INPATIENT_TREATMENT, "Krankenhausbehandlung, vollstationär mit vorausgegangener vorstat. Behandlung");
        de.put(MSG_CACHE_ALREADY_CLEAR, "Cache ist bereits geleert");
        de.put(RULES_VPS_DISCOVERED_FROM_TOOLTIP, "VPS: VPS - Fehler wurde festgestellt durch");
        de.put(PROCESS_DOES_NOT_EXIST, "Der Vorgang wurde nicht gefunden");
        de.put(RULES_TEMP_209_AUSGABEN, "GK RSA:Ausgaben für Heil- und Hilfsmittel");
        de.put(MDK_USER_COMMENT, "Eigene Notizen");
        de.put(WORKFLOW_DEADLINE_MDK_AUDIT_COMPLETION_DEADLINE, "Frist bis zum Abschluss der MD-Prüfung");
        de.put(PCCL, "PCCL");
        de.put(RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_ATC_TOOLTIP_1, "Die Summe aller Mengen der Medikamente, bei denen ein ATC - Code eingetragen ist.");
        de.put(DATES, "Datumsangaben");
        de.put(RULES_TEMP_256_DIAGNOSENGRUPPEN, "GK RSA:Stationäre DxG");
        de.put(WORKFLOW_DEADLINE_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE_COMMENT, "Auszug aus § 9 der PruefVV 2016: \"1 Das Krankenhaus kann innerhalb von 6 Wochen nach Zugang der Mitteilungen nach §8 Satz 1 und 2 ein Nachverfahren auf Basis der bis zum Ende der MD-Begutachtung übermittelten Daten und Unterlagen gegenüber der Krankenkasse vorschlagen, indem eine begründete Stellungnahme zur leistungsrechtlichen Entscheidung der Krankenkasse nach §8 Satz 1 abgegeben wird. 2 Die Durchführung des Nachverfahrens ist freiwillig.\"");
        de.put(FEE_GROUP_DMP, "DMP");
        de.put(RULES_TEMP_84_PFLEGETAGE, "Format: Ganzzahlig (Beispiel 2)");
        de.put(RULES_CRIT_ACG_AGE, "acg_alter");
        de.put(MDK_START_AUDIT_TO, "Einl. MD-Prüfung bis");
        de.put(PROCESS_FINALISATION_READONLY_REASON, "Der Grund dafür: {0}");
        de.put(LAB_DATA_TEXT, "Wert/Text***Wert/Text***Ergebniswert als Wert/Text");
        de.put(RULES_KLINIK_PROZEDUR, "Klinik_Prozedur");
        de.put(ANTIBIOTIC_TRIMETHOPRIM_SULFONAMID, "Trimethoprim+Sulfonamid");
        de.put(EVENT_TYPE_PROCESS_SUBJECT_CHANGED, "Vorgangsart geändert***Vorgangsart geändert");
        de.put(RULES_TXT_CRIT_PATIENT_MASTER_DATA_AGE_DIS, "Versicherter: Alter");
        de.put(EXCEPTION, "Ausnahme");
        de.put(RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        de.put(MDK_DOCUMENT_DELIVER_DEADLINE_ERROR, "Keinen gültigen Eintrag für die Frist \"Abgabefrist Unterlagen\" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.");
        de.put(MDK_UPDATE_REQUEST_WINDOW, "Anfrage aktualisieren (MD)");
        de.put(MDK_START_AUDIT, "Einleitung MD-Prüfung");
        de.put(CATALOG_DOWNLOAD_INSURANCE_COMPANYS, "Krankenkassen");
        de.put(USE_TEMPLATE, "Vorlange benutzen");
        de.put(DRG_CASE_DAY_CARE, "Teil- oder vorstationärer DRG - Fall");
        de.put(RULES_TXT_CRIT_SEPARATION_DAY_TOOLTIP_1, "Tag der Entlassung aus stationärer Behandlung.");
        de.put(RULES_SUPERGROUP_GK_RSA_DIS, "GK RSA Prüfung");
        de.put(RULES_CRIT_ACG_AGE_DIS, "ACG: Alter");
        de.put(RULES_7F_KURZZEITPFLEGE_FUER_KINDER_IN_NICHTVERTRAGSEINRICHTUNGEN, "7F - Kurzzeitpflege für Kinder in Nichtvertragseinrichtungen");
        de.put(MDK_NAME_VALIDATE, "Ungültiger MD-Name. Bitte geben Sie einen gültigen Eintrag an.");
        de.put(DIALOG_BATCH_GROUPING_CMIEFF_TOOLTIP, "Summe aller Case weights aller gegroupten Fälle nach Berücksichtigung aller Zu- oder Abschläge");
        de.put(EVENT_OPERATION_CHANGE_ASSIGNED_USER, "Bearbeiter ändern");
        de.put(RULES_CRIT_ACG_PHARMA_COST_BAND, "acg_Medi_KostGruppe");
        de.put(CASE_FILE_FINALISATION, "Fallabschluss");
        de.put(VERSION_RISK_TYPE_NOT_SET, "Keine Zuordnung");
        de.put(INPUT_DATE_FROM, "Von Datum");
        de.put(DURATION_DECLARATION, "Angabe");
        de.put(FLOWRATE_STATUS_TEXT, "Falldetails pro Sekunde: {0}");
        de.put(RULES_TEMP_271_GK_RSA_KRANKHEITSGRUPPE, "GK RSA:Krankheitsgruppe");
        de.put(RULES_TXT_CRIT_FEE_SUM_TOOLTIP_1, "Gesamtbetrag aller Entgelte.");
        de.put(RULES_CRIT_ACG_PREGNANT_TOOLTIP_3, "1 - Patientin war schwanger während Beobachtungszeitraum");
        de.put(DATA_RECORD_CORRECTION_DEADLINE_DAYS, "Tage bis Datenkorrektur Vorverfahren***Datenkorrektur");
        de.put(LAB_DATA_LOCK_DEL, "LockDel***LockDel***LockDel");
        de.put(RULES_TXT_CRIT_DEPARTMENT_DIS, "Fachabteilungsbewegung");
        de.put(RULES_TEMP_125_FALLNUMMER, "Fallnummer dient mit dem IKZ des Krankenhauses zur eindeutigen Bestimmung des Behandlungsfalls. Mit der Vergabe des KH-internen Kennzeichens muß die eindeutige Identifikation des Behandlungsfalls sichergestellt sein. Es ist in der Regel die fortlaufend vergebene Aufnahmenummer.");
        de.put(MS_EXCEL_VERSION, "Die Microsoft Excel Version");
        de.put(FILTER_CASES_CANCEL_NOT, "Alle nicht stornierte Fälle");
        de.put(CASE_MERGING_CONDITION_EIGHT_DRG, "Wiederaufnahme wegen Komplikation***WA wg. Komplikation");
        de.put(TEMPLATE_CONFIRMATION_DIALOG, "Bestätigungsdialog");
        de.put(PROCESS_PREVIEW_AUDIT_COMPLETION, "Frist Abschluss der MD-Prüfung");
        de.put(DISCHARGE_DATE_BEFORE_ADMISSION_DATE, "Entlassungsdatum ist vor dem Aufnahmedatum gesetzt");
        de.put(WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_CONFIRM, "Möchten Sie die Stornierung für den Fall mit der Nummer {0} wirklich aufheben?");
        de.put(MENU_BATCH_GROUPING_DETAILS_FILTER_ALL, "Alle Fallversionen");
        de.put(PROCESS_FINALISATION_CW_CARE_DIFF_FROM, "Pfl. CW Diff von");
        de.put(STATE_HESSE, "Hessen");
        de.put(MENU_BATCH_GROUPING_DO_HISTORY_CASES_TOOLTIP, "Es werden fallübergreifende Regeln an die Fälle abgewendet");
        de.put(EVENT_NAME_REQUEST, "Anfrage");
        de.put(CATALOG_MENU_UPDATE, "Kataloge aktualisieren");
        de.put(RULES_TEMP_231_GK_RSA_DMPTAGE, "GK RSA:DMP-Tage");
        de.put(MENU_BATCH_GROUPING_DO_RULES_SIMULATE, "mit automatischer Fallkorrektur");
        de.put(FILE_NUMBER_EDIT_TOOLTIP, "Um {0} zu bearbeiten, klicken Sie hier.");
        de.put(RULES_TXT_CRIT_SEC_DIAG_DIS, "Sek. Diagnose");
        de.put(ACTION_ADDED_TOOLTIP, "Siehe die Details einer Aktion");
        de.put(RULE_CHECK_CODE_ERROR, "Fehler beim Prüfung des Codes {0}");
        de.put(RULES_KLINIK_ENTLASSUNGSUHRZEIT, "Klinik_Entlassungsuhrzeit");
        de.put(MDK_START_AUDIT_EXTENDED, "Einleitung erweiterte MD-Prüfung");
        de.put(GROUPER_STATUS_INVALID_AGE, "Ungültiges Alter");
        de.put(CATALOG_DIALOG_CONFIRM, "Bestätigen");
        de.put(AUDIT_PROCESS_CREATION_DATE, "Einleitung Prüfverfahren");
        de.put(CASE_MERGING_DO_SAVE, "Fall speichern");
        de.put(RULES_VPS_ERR_TEXT_DIS, "VPS: Fehlertext");
        de.put(RULES_10_DMP, "10 - DMP");
        de.put(RULES_PZNCODE, "PZNCode");
        de.put(WEBAPP_OPEN_BTN_TOOLTIP, "Konfiguration der Stammdaten, Benutzerverwaltung, Listenverwaltung, etc.");
        de.put(DISCHARGE_DEPARTMENT_SHORT, "Entlassene FAB nach §. 301***Entl. 301***Ein 4-stelliger Code für die entlassende Fachabteilung nach §. 301");
        de.put(INSURANCE_NAME, "Versicherungsname***Vers.-Name***Versicherungsname");
        de.put(DEPARTMENT_VALIDATION_ICD_COUNT_ERROR, "Es sind eine oder mehr Diagnosen erforderlich");
        de.put(RULES_4_HAERTEFALL_PFLEGESTUFE_3, "4 - Härtefall (Pflegestufe 3+)");
        de.put(MENU_BATCH_GROUPING_DETAILS_FILTER_TOOLTIP, "Es können alle Fälle der KIS-Version gegroupt werden. Die bestehende Checkpoint DRG-Version bleibt unberührt. Alle Fallversionen zu groupen kann sehr lange dauern!");
        de.put(DATE_OF_ACCIDENT, "Unfalldatum");
        de.put(RULES_TEMP_44_GESAMTATCDOSIERUNG, "Format: Fließkommazahl (Beispiel: 2.5)");
        de.put(RULES_TEMP_146_NEBENDIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        de.put(PROCESS_DEADLINE_OPEN, "Frist offen");
        de.put(LOGIN_FAILED_CLIENT_ID_DOES_NOT_MATCH, "Übergebene Client ID {0} stimmt nicht mit der Client ID in der Session überein");
        de.put(RULES_TEMP_53_FALL_NUMERIC_6, "Fall.Numeric6");
        de.put(AUDIT_QUOTA_RESULT_QUARTER_YEAR_MDREQUEST, "Quartal / Jahr MD-Anfrage");
        de.put(FEE_GROUP_DAK_INTERNAL_CHARGES_WITHOUT_FINAL_INVOICE, "DAK-interne Entgelte ohne Schlussrechnung");
        de.put(RULES_ENTGELTSUMME, "EntgeltSumme");
        de.put(WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_CONFIRM, "Möchten Sie den Fall mit der Nummer {0} wirklich stornieren?");
        de.put(RULES_TEMP_214_AUSGABEN, "GK RSA:Mehrleistungen DMP");
        de.put(MODE_OF_ADMISSION_DEPARTMENT, "Abteilungstyp");
        de.put(JOB_LOCK_ERROR_DATABASE, "Datenbank ist gesperrt durch {0} wegen {1} seit {2} Uhr!");
        de.put(RULES_TXT_CRIT_BOTTOM_LENGTH_OF_STAY_TOOLTIP_1, "Laut DRG - Katalog festgelegte untere Grenzverweildauer für die ermittelte DRG. Bei Unterschreitung der unteren Grenzverweildauer wird (wiederum nach DRG - Katalog) ein Abschlag je Tag vom DRG - Entgelt abgezogen.");
        de.put(RULES_GESAMTPZNPREIS, "GesamtPZNPreis");
        de.put(RULES_TEMP_173_FALL_STRING_10, "Fall.String10");
        de.put(PROCESS_FINALISATION_RESULTS, "Vorgangsergebnisse");
        de.put(REMINDER_LATEST_TO, "Fällig bis");
        de.put(VALIDATION_ERROR_NO_DISCHARGE_DAY_DEPARTMENT, "Geben Sie ein Entlassungsdatum für die Fachabteilung ein!");
        de.put(ADMISSION_MODE_SURGEON_MIDWIFE, "B-Op./B-Heb.******Belegoperateur und -hebamme");
        de.put(RISK_AREA_OTHER_FEE_SURCHARGE, "Sonstige Entgelte und Zuschläge");
        de.put(HOSPITAL_NAME, "Krankenhausname");
        de.put(MENU_BATCH_GROUPING_SUPPLEMENTARY_FEE_TOOLTIP, "Die Zusatzentgelte werden entsprechend der OPS-Codes zugeordnet");
        de.put(DIALOG_BATCH_GROUPING_NDI_TOOLTIP, "Neben-Diagnosen-Index (durchschnittliche Anzahl von Nebendiagnosen/Fall)");
        de.put(PROCESS_FINALISATION_READONLY_MESSAGE, "Vorgangsabschluss wird im schreibgeschützten Modus geöffnet.");
        de.put(DIALOG_BATCH_GROUPING_NINERDIAG_TOOLTIP, "Anzahl der Nebendiagnosen in dem Datensatz, die mit der unspezifischen Endziffer 9 verschlüsselt wurden");
        de.put(ADMISSION_REASON_2_INDICATION_OF_EXTERNAL_VIOLENCE, "Hinweis auf Einwirkung von äußerer Gewalt");
        de.put(ADMISSION_DATE_TO, "Aufnahmedatum bis");
        de.put(SAP_BILLS, "Rechnungen");
        de.put(AGE_IN_DAYS_TO, "Alter Tage bis ");
        de.put(AUDIT_REMINDER_CREATE, "Wiedervorlage erzeugen");
        de.put(RULES_TXT_CRIT_ZIP_CODE_TOOLTIP_1, "Die Postleitzahl des Wohnortes des Patienten.");
        de.put(VERSION_NUMBER_TO, "Versionsnummer bis");
        de.put(GENDER_SALUTATION_UNKNOWN, "Herr/Frau");
        de.put(RULES_TXT_CRIT_LABOR_DATE_DIS, "Datum der Untersuchung");
        de.put(EXTERNAL_OCCUPANCY, "Belegabteilung");
        de.put(ORGAN_EYES, "Augen");
        de.put(WORKFLOW_SUBJECT, "Betreff des Vorgangs***Betreff");
        de.put(RULES_TEMP_188_KLINIK_FALLKOSTEN, "Klinische Daten: Gesamtkosten enes Falls");
        de.put(LOGIN_FAILED_CLIENT_ID_MISSING, "Es wurde keine Client ID angegeben");
        de.put(HOSPITAL_IDENTIFIER, "Krankenhaus IKZ***Krankenhaus***Identifikationskennzeichen (kurz IKZ) des Krankenhauses");
        de.put(SECONDARY_DIAGNOSES, "Nebendiagnosen***ND");
        de.put(CASE_CARE_CWMINIMAL, "PflegeCW minimal***CW Pfl. min.***Minimaler PflegeCW-Wert, welcher durch die Prüfregeln für diesen Fall ermittelt wurde.");
        de.put(FILE_IMPORT_ERRORS, "Import der Datei: {0} wurde mit Fehler(n) abgeschlossen!!");
        de.put(RULES_TXT_CRIT_TRANSFER_DAY_TIME_DIS, "Verlegungsuhrzeit");
        de.put(WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_ERROR, "Die Stornierung für den Fall mit der Nummer {0} konnte nicht aufgehoben werden");
        de.put(DIALOG_BATCH_GROUPING_PCCL, "PCCL");
        de.put(MODIFICATION_DATE, "Änderungsdatum");
        de.put(RULES_SUPERGROUP_MRSA_DIS, "Morbi RSA");
        de.put(INS_SHORT_DAK, "DAK");
        de.put(USERS, "Benutzer");
        de.put(RULES_VERSICHERTER_POSTLEITZAHL, "Versicherter_Postleitzahl");
        de.put(EXTERN_VERSIONS, "KIS-Versionen");
        de.put(GROUPER_MDC_OR_SK_PSYCHOSOMATIC_DAY_CARE, "Psychosomatik, teilstationär***TPO");
        de.put(RULES_BEHANDELNDEFACHABTEILUNG, "BehandelndeFachabteilung");
        de.put(COUNTRY_AUSTRIA, "Österreich");
        de.put(RULES_TEMP_79_ABSCHLAGS_CW, "Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)");
        de.put(MDK_BILL_CORRECTION_DEADLINE, "Frist einmalige Rechnungskorrektur");
        de.put(RULES_GK_RSA_EMG, "GK_RSA_EMG");
        de.put(RULES_GROUP_DRGS_DATA_HOSP_DATA_TOOLTIP, "DRG-Ergebnisse");
        de.put(REVIEW_COMPLETION_DEADLINE_DATE, "Abschlußfrist bis");
        de.put(RULES_HAUPTDIAGNOSELOKALISATION, "HauptdiagnoseLokalisation");
        de.put(BILL_OPEN_ITEM_COMPANY_CODE, "Buchungskreis");
        de.put(RULES_CRIT_MRSA_HOSP_DISEASE_NUMBER_TOOLTIP, "Krankheitsgruppe,  die anhand einer ICD von einem Krankenhaus kodiert worden ist");
        de.put(WORKFLOW_DEADLINE_REVIEW_COMPLETION_COMMENT, "Das  EV  ist,  vorbehaltlich  der  einvernehmlichen  Verlängerung  dieses  Zeitraumes  durch  Krankenhaus und Krankenkasse, binnen 12 Wochen nach Mitteilung der Krankenkasse gemäß  Absatz  4  abzuschließen");
        de.put(ANTIBIOTIC_VANCOMYCIN, "Vancomycin");
        de.put(JOBS, "Jobs");
        de.put(PROCESS_FINALISATION_REVENUE_FINAL, "Erlös Final");
        de.put(BILL_OPEN_ITEM_AMOUNT_IN_LOCAL_CURR, "Betrag");
        de.put(FEE_GROUP_SPECIAL_INSTITUTIONS_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(RULES_TEMP_120_ENTLASSUNGSDATUM_MIT_UHRZEIT, "Format: YYYYMMDD HH:mm");
        de.put(RULES_TXT_CRIT_PATIENT_MASTER_DATA_CARE_STATE_DIS, "Versicherter: Versichertenstatus");
        de.put(VERSIONCONTROLL_CREATE_NEW_VERSION, "Version anlegen");
        de.put(INITIATION_TEST_PROCESSES_FROM, "Einleitung Prüfv. von  ");
        de.put(FILTER_CASES_UNLOCK, "Alle nicht gesperrte Fälle");
        de.put(PROCESS_PREVIEW_REQUEST_TYPE, "Anfragetyp");
        de.put(RULES_HM_VERORDNUNGSDATUM, "hm_verordnungsdatum");
        de.put(RULES_DRG, "DRG");
        de.put(RULES_TXT_CRIT_CLINIC_DISCH_TIME_DIS, "Klinik: Entlassungsuhrzeit");
        de.put(ACTION_REMOVED_TOOLTIP, "Diese Aktion wird entfernt");
        de.put(COUNT_PROC_FROM, "Anz. OPS von");
        de.put(DIALOG_BATCH_GROUPING_GROUPEDCASES_TOOLTIP, "gegroupte Fälle");
        de.put(REQUEST_CREATE, "Anfrage erstellen");
        de.put(CONFIRMATION_DEFAULT_TEXT, "Wollen sie diese Aktion wirklich durchführen?");
        de.put(ADMISSION_REASON_FREE, "frei");
        de.put(WORKFLOW_LIST, "Vorgangsliste");
        de.put(PEPP_COLUMN, "PEPP***PEPP***Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik");
        de.put(TP_301_INFORMATION_KEY_30_MDI05, "Krankenkasse hat sich nicht innerhalb der Frist nach § 8 Satz 3 geäußert und das Verfahren gilt als beendet und die Krankenhausabrechnung als erörtert (INKA)");
        de.put(TP_301_INFORMATION_KEY_30_MDI04, "Einwände gegen Grund oder Höhe des Aufschlages durch das Krankenhaus (INKA)");
        de.put(DAILY_FEE_MATH_PEPP, "CW ({0}) X ({1}) Tage X Baserate ({2}) von {3} bis {4} ");
        de.put(RULES_CRIT_ACG_CONDITION_TOOLTIP_5, "RX - Erkrankung identifiziert durch ATC-Codes");
        de.put(RULES_CRIT_ACG_CONDITION_TOOLTIP_3, "BTH - Erkrankung identifiziert durch ICD-und ATC-Codes");
        de.put(RULES_CRIT_ACG_CONDITION_TOOLTIP_2, "NP - Zustand nicht vorhanden");
        de.put(RULES_VPS_ERR_CODE_DIS, "VPS: Fehlercode");
        de.put(NO_CATEGORY, "Keine Kategorie");
        de.put(BEGE_EDITOR, "Ansprechpartner");
        de.put(VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_SUB_CATEGORY_2_FOUND, "In den Stammdaten wurden keine Vorlagetypen für die 2. Unterkategorie hinterlegt!");
        de.put(GROUPER_MDC_OR_SK_PSYCHO_DAY_CARE, "Psychiatrie, teilstationär***TPY");
        de.put(RULES_TXT_CRIT_SEPARATION_DAY_DIS, "Entlassungstag");
        de.put(ADMISSION_CAUSE_EMERGENCY, "Notfall");
        de.put(VERSION_RISK_TYPE_BEFORE_BILLING, "Bei Abrechnung");
        de.put(LOGIN_FAILED_NO_VALID_LICENSE, "checkpoint x-Lizenz ist abgelaufen. Die Lizenz war gültig bis {0}");
        de.put(RULES_CRIT_ACG_HYPERLIPIDEMIA, "acg_Fettstoffwechselstörungen_vorhanden");
        de.put(INPUT_DATE_ERROR, "{0} ist kein korrektes Datum");
        de.put(ADD_CASE_BILLS, "Rechnungen");
        de.put(RULES_72_HAEUSLICHER_BERATUNGSEINSATZ, "72 - häuslicher Beratungseinsatz");
        de.put(WORKFLOW_DEADLINE_REVIEW_DOCUMENTS_SEND_ON, "Nachsendefrist für Dokumente für Erörterungsverfahren");
        de.put(CASE_DELTA_REVENUE_MAXIMAL_FROM, "dErlös max. von");
        de.put(ANTIBIOTIC_TOBRAMYCIN, "Tobramycin");
        de.put(RULES_TXT_CRIT_WEIGHT_DIS, "Gewicht");
        de.put(ICD_TYPE_WORK, "Arbeits");
        de.put(OPEN_CASES, "Geöffnete Fälle");
        de.put(RULES_TEMP_114_BEATMUNGSDAUER, "Format: Ganzzahlig (Beispiel 30)");
        de.put(PROCESS_REVIEW_DEADLINE_EXTENDED_DAYS, "Tage bis zum Ende des verlängerten Fristes für Starten EV***EV Startverl.");
        de.put(RULES_TXT_CRIT_REDUCTION_DAYS_DIS, "Abschlagstage");
        de.put(GROUPER_OPS_RES_TYPE_NOR_OPS, "NonOR-Prozedur ");
        de.put(COUNT_SD, "Anzahl der Nebendiagnosen***Anz. ND");
        de.put(AUDIT_REQUEST_DATE, "Aufforderung am");
        de.put(RULES_TEMP_48_GESAMTPZNPREIS, "Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)");
        de.put(RULES_TEMP_243_GK_RSA_EMG, "GK RSA:EMG");
        de.put(RULE_TABLE_HAS_ERRORS, "Regeltable hat Validierungsfehler");
        de.put(RULES_GK_RSA_VERSICHERTENTAGE, "GK_RSA_Versichertentage");
        de.put(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_9, "So(0) - Sonntag");
        de.put(ADMISSION_REASON_2_REGULAR_CASE, "Normalfall");
        de.put(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_8, "Sa(6) - Samstag");
        de.put(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_7, "Fr(5) - Freitag");
        de.put(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_6, "Do(4) - Donnerstag");
        de.put(DURATION_TO, "Ablauf bis");
        de.put(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_5, "Mi(3) - Mittwoch");
        de.put(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_4, "Di(2) - Dinstag");
        de.put(MDK_START_AUDIT_EXTENDED_FROM, "Einl. erw. MD-Prüfung von");
        de.put(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_3, "Mo(1) - Montag");
        de.put(LAB_DATA_VALUE_2, "Ergebniswert2***Ergebniswert2***Ergebniswert2");
        de.put(EVENT_OPERATION_CREATE_ITEM, "{0} anlegen");
        de.put(WORKFLOW_CONTEXT_MENU_CANCEL, "Vorgang stornieren");
        de.put(CATALOG_DOWNLOAD_DEPARTMENTS, "Abteilungen");
        de.put(RULES_TXT_CRIT_REMEDIES_FULL_COUNT_DIS, "Heilmittel: Gesamtmenge für Heilmittelpositionsnummer");
        de.put(REMINDER_EXPIRED_TOOLTIP, "Siehe die Details einer Wiedervorlage");
        de.put(RULES_TXT_INTERVAL_CUR_CASE, "Aktueller Fall");
        de.put(PROCESS_START_DATE_FROM, "Anlagedatum von ");
        de.put(EVENT_TYPE_INKA_UPDATED, "INKA Nachricht aktualisiert***INKA Nachricht aktualisiert");
        de.put(RULES_TEMP_79_PFLEGECWTAG, "Pflegeerlös Bewertungsrelation/Tag");
        de.put(AUDIT_CASE_DIALOG_BILL_CORR_DEADLINE_ERROR, "Keinen gültigen Eintrag für die Frist \"Rechnungskorrektur Ende Falldialog\" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.");
        de.put(RULES_TXT_CRIT_PATIENT_MASTER_DATA_GENDER_DIS, "Versicherter: Geschlecht");
        de.put(RULES_CRIT_ACG_FRAILTY_FLAG_TOOLTIP, "Kennzeichen für jedes der 11 Cluster, die für diagnostische diskreten Bedingungen im Einklang mit Gebrechlichkeit stehen (z.B . Mangelernährung, Demenz, Inkontinenz, Schwierigkeiten beim Gehen)");
        de.put(CASEFEE_DAYSOFF, "Tage ohne Berechnung");
        de.put(VALIDATION_ERROR_NO_ADMISSION_DAY_DEPARTMENT, "Geben Sie ein Aufnahmedatum für die Fachabteilung ein!");
        de.put(CASE_MERGING_CONDITION_NINE_PEPP, "Zusammenfassung***Zusammenfassung");
        de.put(CASE_TYPE, "Abrechnungsart***Abrechnungsart***Art der Abrechnung nach DRG- oder PEPP-Entgeltkatalog");
        de.put(RULES_TXT_CRIT_MEDICAMENT_PRICE_TOOLTIP_1, "Der Preis eines Medikamentes.");
        de.put(TEXTTEMPLATES, "Textbausteine");
        de.put(ACG_AGE_BAND_80_84, "80-84");
        de.put(VALIDATION_ERROR_OPS_DATE_INDEX, "Einige Prozeduren haben kein Ausführungsdatum an Position {0} !");
        de.put(CASE_DATA, "Falldaten");
        de.put(PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_FROM, "Frist Antwort von");
        de.put(RULES_TEMP_7_HE_GESAMTPREIS, "Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.");
        de.put(RULES_HM_MENGE, "hm_menge");
        de.put(RULES_TEMP_9_HE_POSITIONSNUMMER, "Pharmazentralnummer für Hilfsmittel");
        de.put(CASE_MERGING_CONDITION_FIVE_PEPP, "Beide in bewerteter PEPP***Beide in bewert. PEPP");
        de.put(SERVICE, "Leistung");
        de.put(RULES_TEMP_66_ENTLASSENDEFACHABTEILUNG, "Format: Ganzzahlig (Beispiel 1500)");
        de.put(CASE_MERGING_CASE_LEADING, "Führender Fall");
        de.put(JOB_STATUS_COMPLETED, "Erfolgreich");
        de.put(RULES_TEMP_55_FALL_NUMERIC_8, "Fall.Numeric8");
        de.put(MDK_START_AUDIT_QUARTER, "Quartal Einleitung MD-Prüfung");
        de.put(WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_SUCCESS, "Der Fall mit der Nummer {0} erfolgreich storniert");
        de.put(CASE_MERGING_CONDITION_FOUR_PEPP, "Gleiche SK***Gleiche SK");
        de.put(FEE_GROUP_SEPARATE_CHARGES, "gesonderte Entgelte");
        de.put(FEE_GROUP_DAK_INTERNAL_CHARGES_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(PROCESS_NUMBER, "Vorgangs-Nr.");
        de.put(REPORT_GENERATE, "Report erstellen");
        de.put(WEBAPP_OPEN_MANAGEMENT_TOOLTIP, "Administration des checkpoint x Servers (Wildfly) - nur für Administratoren");
        de.put(RULES_TXT_CRIT_LABOR_TEXT_DIS, "Labortext");
        de.put(FEE_PLACEHOLDER, "Keine Entgelte zugefügt");
        de.put(ADMISSION_DATE_FROM, "Aufnahmedatum von");
        de.put(ACG_INDEX_TYPE_ICD, "Diagnosen");
        de.put(RULES_VERSICHERTER_PFLEGESTUFE, "Versicherter_Pflegestufe");
        de.put(TEMPLATE_WAIT_NOTIFICATION_TEXT, "Word-Dokument wird aus der ausgewählten Vorlage {0} erzeugt und danach geöffnet!");
        de.put(RISK_EDITOR_RISK_WASTE_DEFAULT_VALUE, "Verlustwert***Verl.-W.***Theoretischer Wert, der zur Berechnung des Verlustvolumens herangezogen wird, wenn kein Vorschlag definiert wurde");
        de.put(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_PZN_TOOLTIP_1, "Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein PZN - Code eingetragen ist.");
        de.put(RULES_TEMP_201_GK_RSA_ATCCODE, "GK RSA:ATC-Code");
        de.put(VALIDATION_ERROR_NO_ADMISSION_DAY_CASE, "Geben Sie ein Aufnahmedatum für den Fall ein!");
        de.put(REVIEW_AFTER_MD, "Erörterungsverfahren nach MD-Prüfung");
        de.put(RULES_TXT_CRIT_CLINIC_ADM_DATE_DIS, "Klinik: Aufnahmedatum");
        de.put(PATIENT_DATA, "Patientendaten");
        de.put(PROCESS_MODIFICATION_USER_LAST, "Letzter Bearbeiter des Vorganges***Änderung von***Name des Bearbeiter der den Vorgang als letztes bearbeitet hat");
        de.put(DETAILED_VIEW_MAIN_LABEL, "Details zum ausgewählten Ereignis");
        de.put(INSURANCE_COMPANY, "Versicherung***Versicherung");
        de.put(RULES_TEMP_29_ATCCODE, "Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04");
        de.put(COUNT_PROC, "Anzahl der Prozeduren***Anz. OPS");
        de.put(RULES_GROUP_PEPPS_DATA_HOSP_DATA_TOOLTIP, "PEPP-Ergebnisse");
        de.put(EVENT_NAME_INKA, "INKA-Nachricht");
        de.put(CANCEL_GROUPING, "Stoppe Grouping");
        de.put(JOB_STATUS_FAILED, "Gescheitert");
        de.put(NUMBER_FORMAT_DECIMAL, ",");
        de.put(RULES_CRIT_LOSLESS_24H_TOOLTIP_4, "1 - Verweildauer < 24");
        de.put(REVIEW_COMMENT, "Kommentar");
        de.put(RULES_CRIT_LOSLESS_24H_TOOLTIP_3, "0 - Verweildauer >= 24");
        de.put(NO_ADMISSION_MODE_FOUND, "Erbringungsart des DRG - Falles wurde ist nicht gesetzt");
        de.put(GROUP_RESULT_NO_RESULT, "Es liegen noch keine Grouperergebnisse vor!");
        de.put(RULES_TEMP_142_DIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        de.put(FILTER_NO, "Kein Filter");
        de.put(RISK_AREA_SECONDARY_MISALLOC, "Sekundäre Fehlbelegung (VWD)");
        de.put(RULES_TXT_CRIT_CW_CATALOG_DIS, "Kostengewicht Katalog");
        de.put(LAB_DATA_BENCHMARK, "Bewertung***Bewertung***Bewertung (zu hoch, zu niedrig)");
        de.put(WORKING_LIST_UPDATE, "Arbeitsliste aktualisieren");
        de.put(RULES_GK_RSA_HMGANZAHL, "GK_RSA_HMGAnzahl");
        de.put(RULES_TXT_CRIT_CW_EFFECTIV_DIS, "Kostengewicht effektiv");
        de.put(PATIENT_DETAILS, "Patient Einzelheiten");
        de.put(ACG_INDEX_TYPE_BTH, "Diagnosen & Medikamente***Beides");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_33, "mPa*s");
        de.put(ADMISSION_WEEKDAY, "Aufnahmedatum Wochentag***Aufn. WT");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_32, "Mio.-Keime");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_31, "Keime");
        de.put(RULES_TXT_LIST_CHANGE, "Ändern ");
        de.put(PROCESS_REVIEW_DEADLINE_EXTENDED_DATE, "Verlängerte Frist für das Starten des Erörterungsverfahrens***EV Fristverl.***Datum, bis zu dem Erörterungsverfahren nach der veranbarten Verlängerung gestartet werden muss");
        de.put(ORGAN_KIDNEY, "Niere");
        de.put(AGE, "Alter");
        de.put(EVENT_OPERATION_REMOVE_ITEM, "{0} entfernen");
        de.put(DISCHARGE_REASON_DISMISSAL_IN_A_REHABILITATION_FACILITY, "Entlassung in eine Rehabilitationseinrichtung");
        de.put(RULES_CRIT_ACG_TOTAL_COST_BAND_DIS, "ACG: Gesamt Kosten Gruppe");
        de.put(RULES_TEMP_175_FALL_STRING_7, "Fall.String7");
        de.put(DOCUMENT_ADDED_TOOLTIP, "Öffnen Sie dieses Dokument");
        de.put(MESSAGE_CASE_HAS_NO_DISCHARGE_DATE, "Der Fall hat kein Entlassungsdatum");
        de.put(GENDER, "Geschlecht***Geschl.***Geschlecht");
        de.put(RULES_CRIT_ACG_AGE_BAND_DIS, "ACG: Altersgruppe");
        de.put(RULES_TXT_CRIT_ENTGELTEINZELBETRAG_TOOLTIP_1, "Der einzelne Betrag eines Entgeltschlüssels.");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_29, "pg");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_28, "nl");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_27, "Ph.Eur.-E.");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_26, "µl");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_25, "cm¢2");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_24, "Aerosolstoß");
        de.put(MENU_BATCH_GROUPING_DETAILS_FILTER_ACTUAL_LOCAL, "lokale aktuelle Fallversionen");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_23, "Sprühstoß");
        de.put(ADD_CASE_EDIT_ICD_OPS_DESCRIPTION, "Zum Aufenthalt in der Abteilung Diagnosen und Prozeduren hinzufügen und bearbeiten");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_22, "g (MW)");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_21, "mg (MW)");
        de.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_9, "G - Geburt");
        de.put(AUDIT_ADDRESS, "Anschrift");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_20, "MSE");
        de.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_8, "K - Verlegung (Aufnahme) aus einem anderen Krankenhaus i.R.e. Kooperation");
        de.put(RULES_TXT_OP_LT_EQUAL, "kleiner gleich ( <= )");
        de.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_6, "R - Aufnahme nach vorausgehender Behandlung in einer Rehaeinrichtung");
        de.put(RULES_23_PFLEGEHILFSMITTEL, "23 - Pflegehilfsmittel");
        de.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_5, "N - Notfall");
        de.put(RULES_TEMP_168_KLINIK_ENTGELTBETRAG, "Format: Währung (Beispiel: 57.52)");
        de.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_4, "Z - Einweisung durch Zahnarzt");
        de.put(RULES_CRIT_ADM_CAUSE_TOOLTIP_3, "E - Einweisung durch Arzt");
        de.put(ACG_INDEX_TYPE_RX, "Medikamente***Rx-Präparate sind verschreibungspflichtige bzw. rezeptpflichtige Medikamente");
        de.put(RULES_TXT_CRIT_PATIENT_MASTER_DATA_ZIPCODE_DIS, "Versicherter: Postleitzahl");
        de.put(BILL_DATE, "Rechnungsdatum");
        de.put(DAYS_CALCULATED, "Berechnete Abwesenheit");
        de.put(PROCESSES, "Vorgänge");
        de.put(PROCESS_CREATION_TITLE, "Neuen Vorgang erstellen");
        de.put(RULES_TEMP_91_KOSTENGEWICHT_EFFEKTIV, "Kostengewicht für DRG - Fälle (DRG + Erbringungsart) + Zuschlags_CW oder - Abschlags_CW .");
        de.put(RULES_7D_BEREUNGSLEISTUNG_GRUNDBETRAG, "7D - Bereungsleistung Grundbetrag");
        de.put(CASE_DOES_NOT_EXIST, "Der Fall wurde nicht gefunden");
        de.put(RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_2, "Format: Ganzzahlig (Beispiel 50)");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_19, "ng");
        de.put(RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_1, "Das tatsächliche Alter des Patienten.");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_18, "Mio E.");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_17, "%V/V, mmol");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_16, "Gew.-%");
        de.put(REVENUE_MATH_DRG_CORR_SURCHARGE_LAYOUT, "Zuschlag: (DRG-Baserate {0}{1} x korr.CW {2}) x korr.Tag(e) {3}");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_15, "Vol.-%");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_14, "BE");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_13, "Mio.I.E.");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_12, "FIP.-E.");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_11, "µmol");
        de.put(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_10, "E.");
        de.put(PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DAYS, "Tage für Antwort der KK***EV Antwort KK");
        de.put(WORKING_LIST_CONTEXT_MENU_UNLOCK_ERROR, "Der Fall mit der Nummer {0} konnte nicht entsperrt werden");
        de.put(ADD, "Hinzufügen");
        de.put(FILTER_REMEINDER_OPEN, "Alle offenen");
        de.put(GROUPER_OPS_RES_TYPE_SRG, "SRG (weder OR noch NonOR-Prozedur) ");
        de.put(PROCESS_REVIEW_DEADLINE_DATE_TO, "EV Frist bis bis");
        de.put(EVENT_TYPE_REQUEST_UPDATED, "Anfrage geändert: Typ: {0}, Institutionsname {1}, {2}***Anfrage geändert");
        de.put(PROCESS_FINALISATION_SUPPLFEE_DIFF_TO, "ZE Diff bis");
        de.put(CASE, "Fall");
        de.put(REQUEST_TYPE, "Anfragetyp");
        de.put(RULES_TXT_CRIT_RECHNUNG_DATUM_DIS, "Rechnungsdatum");
        de.put(PEPP_PAY_TYPE_COMPENSATION_CLASS, "Vergütungsklasse");
        de.put(RULES_GESAMTATCPREIS, "GesamtATCPreis");
        de.put(INSURANCE_DATA, "Versicherungsdaten");
        de.put(RULES_73_PFLEGE_BEI_VERHINDERUNG_DER_PFLEGEPERSON, "73 - Pflege bei Verhinderung der Pflegeperson");
        de.put(DAYS_UNBILLED_DIALOG_CONFIRM, "Information");
        de.put(IS_NOT_SUPPORTED, "wird nicht unterstützt (Minimum benötigt:");
        de.put(MDK_AUDIT_REASONS, "Prüfgründe***Prüfgründe***Prüfgründe welche im Rahmen einer Anfrage verwendet werden.");
        de.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_9, "07 - Wiederaufnahme wg. Komplikation (Fallpauschale)");
        de.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_8, "06 - Geburt");
        de.put(PATIENT_SEX_UNDEFINED, "unbestimmt");
        de.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_7, "05 - stationäre Entbindung");
        de.put(MDK_EMPTY_MDK_DATA_DIALOG, "Entweder wurde eine Anfrage angelegt ohne einen MD auszuwählen oder der ausgewählte MD wurde nach dem Anlegen dieser MD-Anfrage gelöscht. Bitte benötigten MD auswählen.");
        de.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_6, "04 - Krankenhausbehandlung ohne anschl. stationäre Behandlung");
        de.put(PROCESS_FINALISATION_PENALTY_FEE_FROM, "Strafzahlung von");
        de.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_5, "03 - Krankenhausbehandlung teilstationär");
        de.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_4, "02 - Krankenhausbehandlung, vollstationär mit voraus. vorstat. Behandlung");
        de.put(CASEFEE_FROM, "Abrechnung von");
        de.put(ORGAN_TEETH, "Zähne");
        de.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_3, "01 - Krankenhausbehandlung, vollstationär");
        de.put(RULES_CRIT_ACG_PROBABILITY_HIGH_TC, "acg_GesamtTop5");
        de.put(PATIENT_CASES, "Patientenfälle");
        de.put(PATIENT_SEX_UNKNOWN, "unbekannt");
        de.put(DOCUMENTATION_NO_RISK_CONTENT, "kein Risikobereich ausgewählt");
        de.put(INPUT_NUMBER_FROM, "Von");
        de.put(RULE_COLUMN_NUMBER, "Regelnummer***Regelnummer***Nummer der Regel");
        de.put(RULES_TXT_CRIT_ENTGELTABRECHNUNG_VON_TOOLTIP_1, "Der erste Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.");
        de.put(MDK_COMMENT, "MD-Ergebnis/Bemerkung");
        de.put(RULES_TXT_GROUP_SOLE_DAK_DIS, "Hilfsmittel");
        de.put(PROCESS_REVIEW_COMPLETION_DEADLINE_DATE_TO, "EV Abschlußfrist bis");
        de.put(SUPPL_FEE_VALUE_PEPP, "ZP-Betrag");
        de.put(CASE_MERGING_CONDITION_SEVEN_PEPP, "1.Fall aus vorletztem Jahr***1.Fall aus vorletztem Jahr");
        de.put(DISCHARGE_REASON_TRANSFER_TO_ANOTHER_HOSPITAL, "Verlegung in ein anderes Krankenhaus");
        de.put(AUDIT_ANS_DEADLINE, "Frist Antwort");
        de.put(RULES_TXT_CRIT_TRANSFER_DATE_TOOLTIP_1, "Datum des letzen Tages in der vorhergehenden Fachabteilung .");
        de.put(REMINDER_FINISHED_DATE, "Abgearbeitet am");
        de.put(CASE_RESOLVE_RULES_DELTA_CHARGE, "dEntgelt");
        de.put(INSURANCE_FEHLER, "IKZ der Versicherung nicht vorhanden");
        de.put(RULES_TXT_CRIT_WEIGHT_TOOLTIP_1, "Das Aufnahmegewicht eines Kindes unter einem Jahr in Gramm.");
        de.put(VERSIONCONTROLL_HINT_ENTER_COMMENT, "Bitte Kommentar angeben!");
        de.put(REVIEW_DEADLINE_EXTENDED_DATE, "EV Fristverlängerung");
        de.put(DAILY_FEE, "Tagesentgelt");
        de.put(MENU_USER_LOGIN_STATUSTEXT, "eingeloggt seit {0} Uhr");
        de.put(RULES_NEBENDIAGNOSETYPE, "NebendiagnoseType");
        de.put(RULES_TXT_CRIT_CLINIC_ADM_DATE_FULL, "Klinik_Aufnahmedatum_mit_Uhrzeit");
        de.put(RULE_TYPE_IMPORTED, "Regeltyp importiert");
        de.put(CATALOG_DOWNLOAD_TITLE, "checkpoint x wird geladen...");
        de.put(RULES_TXT_CRIT_CLINIC_CASE_COST, "Klinik: Fallkosten");
        de.put(UPDATED_TO, "Aktualisiert bis");
        de.put(REMINDER_MODE_SHOW_CLOSED, "abgearbeitete Wiedervorlagen");
        de.put(PROCESS_PREVIEW_CASE_NO, "Fallnummer");
        de.put(RULE_FILTER_DIALOG_RULE_ERROR_STATUS, "Status");
        de.put(RULES_TXT_CRIT_REDUCTION_CW_DIS, "CW Abschlag");
        de.put(MENU_BATCH_GROUPING_DO_FOR_ACTUAL_ROLE_ONLY, "Ergebnisse für aktuelle Rolle speichern");
        de.put(DIAGNOSIS_REF_TYPE_ASTERISK_FROM, "Sterndiagnose von");
        de.put(WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_ERROR, "Der Fall mit der Nummer {0} konnte nicht storniert werden");
        de.put(WARD, "Station");
        de.put(GENDER_SALUTATION_MALE, "Herr");
        de.put(RULES_GK_RSA_KRANKHEITSGRUPPE, "GK_RSA_Krankheitsgruppe");
        de.put(RULES_KLINIK_IKZ, "Klinik_IKZ");
        de.put(DIFFERENCE, "Differenz");
        de.put(RULES_TXT_CRIT_NO_CRIT_TOOLTIP, "kein Kriterium");
        de.put(ADMISSION_DATE, "Aufnahmedatum***Aufn.-Datum");
        de.put(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_ERROR, "Fall {0} konnte nicht gelöscht werden! Versuchen Sie es erneut oder prüfen Sie den Fehler im Serverprotokoll.");
        de.put(RULES_TEMP_179_KLINIK_ENTLASSUNGSDATUM, "Die Uhrzeit der Entlassung wird nicht berücksichtigt");
        de.put(MDK_START_AUDIT_EQUAL, "Einl. MD-Prüfung");
        de.put(RULES_TXT_CRIT_SEC_DIAG_PRIM_DIS, "Sek. Diagnose: Primär");
        de.put(RULES_TEMP_52_MVERORDNUNGSDATUM, "Format: YYYYMMDD");
        de.put(WORKING_LIST_CONTEXT_MENU_UNCANCEL, "Stornierung aufheben");
        de.put(ACG_INDEX_TYPE_NP, "Nicht vorhanden");
        de.put(CASE_MANAGEMENT_WARNING_CHANGE_LOCALISATION, "Das Ändern der Lokalisation führt zu der Erzeugung einer neuen ICD! Sind Sie sich sicher?");
        de.put(MENU_BATCH_GROUPING_SETTINGS, "Einstellungen");
        de.put(RULES_TXT_CRIT_ENTGELTSUMMEJEENTGELT_TOOLTIP_1, "Die Summe aller Beträge eines Entgeltschlüssels.");
        de.put(RULES_TXT_GROUP_PSYCH_DIS, "Psych-Kriterien");
        de.put(PLACE_OF_REG_BEFORE_BILLING, "Bei Rechnungsstellung");
        de.put(RULE_COLUMN_RULE_SELECTED, "Relevant***Relevant***Als relevant für ein Fall bewertete Regel");
        de.put(RULES_CRIT_ACG_HYPERTENSION, "acg_Bluthochdruck_vorhanden");
        de.put(MDK_EXTENDED_AUDIT_REASONS, "Erweiterte Prüfgründe");
        de.put(SYSTEM_INFO_RECOMMENDED_JAVA_VERSION_TEXT, "(empfohlen ist {0} oder höher!)");
        de.put(RULES_TEMP_176_KLINIK_AUFNAHMEUHRZEIT, "Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten");
        de.put(RULES_CRIT_ACG_PROBABILITY_HIGH_PC, "acg_MediTop");
        de.put(RULES_TEMP_165_KLINIK_PEPP, "Format: Aplhanumerisch (Beispiele P003B, TK04Z)");
        de.put(PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE, "Frist für die Krankenasse eine Antwort zu EV zu geben***EV Antwortfrist KK***Datum, bis dem die Krankenkasse die Antwort über die der vom Krankenhaus vorgetragenen Begründung entscheiden muss");
        de.put(CREATED_ON, "Angelegt am {0}");
        de.put(CATALOG_DIALOG_REMOVE_ALL, "Alle löschen");
        de.put(READONLY_DOC_ITEM_HELP, "Handbuch");
        de.put(FEE_GROUP_DMP_WITHOUT_FINAL_INVOICE, "DMP ohne Schlussrechnung");
        de.put(TREATING_DEPARTMENT, "KH interner Kurzname der beh. FAB ***beh. FAB (intern)***Krankenhausinterner Kurzname der behandelnden Fachabteilung");
        de.put(FIRST_NAME, "Vorname");
        de.put(RULES_TEMP_39_PZNCODE, "Format: numerisch (Beispiel: 4114918)");
        de.put(FEE_GROUP_SPECIAL_FACILITIES_WITHOUT_FINAL_INVOICE, "Besondere Einrichtungen ohne Schlussrechnung");
        de.put(MDK_NAME, "MD-Name");
        de.put(HOSPITAL, "Krankenhaus");
        de.put(RULES_26_SONSTIGE_ENTGELTE_ANLAGE_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "26 - Sonstige Entgelte Anlage ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(PROCESS_FINALISATION_CW_FINAL_TO, "CW Final bis");
        de.put(RULES_TEMP_88_GROUPERRELEVANTEDIAGNOSE, "Diagnose, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Diagnose, Hauptdiagnose, Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.");
        de.put(CASE_RESOLVE_KIND, "Art");
        de.put(DIALOG_BATCH_GROUPING_KORRTRANS_TOOLTIP, "Anzahl der Fälle, deren CW auf Grund einer Unterschreitung der MVD bei Aufnahme- oder Entlassungsgrund „Verlegung“ vom Fallpauschalenkatalogwert abweicht");
        de.put(CATALOG_DIALOG_REMOVE, "Löschen");
        de.put(FEE_GROUP_PARTIAL_PAYMENT_WITHOUT_FINAL_INVOICE_WITHOUT_DISMISSAL, "Teilzahlung (ohne Schlussrechnung / ohne ENTL)");
        de.put(QUOTA_LIST, "Prüfquotenliste");
        de.put(RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM, "Format: YYYYMMDD");
        de.put(NO_DEPARTMENT_CODED, "Im Fall sind keine Bewegungen gesetzt");
        de.put(GROUP_RELEVANT_CODE_FOR_DRG_PEPP_MAPPING_USED_EXCEPT_TO_SATISFY_THE_TEMPORAL_AND_OR_LOGIC_CONDITION_WITHIN_AN_OPD_CONSTRUCT, "Für die DRG/PEPP-Zuordnung verwendet, ausgenommen zur Erfüllung der zeitlichen und/oder logischen Bedingung innerhalb eines OPD-Konstrukts");
        de.put(WORKFLOW_DEADLINE_CONTINUATION_FEE_DEADLINE_COMMENT, "Verlängerung der Frist, nach Zahlung der Fortsetzungspauschale, bis zu der die angeforderten Unterlagen beim MD eingereicht sein müssen");
        de.put(RULES_TXT_CRIT_ENTGELTSUMMEJEENTGELT_DIS, "Entgeltsumme je Entgelt");
        de.put(PROCESS_FINALISATION_SAVED_MONEY, "Verlustvolumnen in €***Verlustvol.***Verlustvolumen aus dem Vorgangsabschluss.Dieser wurde entweder im Zuge der Risikobewertung des Basisfalles ermittelt, oder manuell von einem Nutzer dokumentiert.");
        de.put(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_PROCESSES, "Der Fall ist folgenden Vorgängen zugeordnet: {0}");
        de.put(PROCESS_FINALISATION_SUPPLFEE_INITIAL_TO, "ZE Initial bis");
        de.put(CASE_DELTA_REVENUE_MAXIMAL_TO, "dErlös max. bis");
        de.put(CASE_MERGING_TABLE_PLACEHOLDER, "Keine zusammenführbaren Fälle ermittelt");
        de.put(RULES_TEMP_223_GK_RSA_EXTBLUTREINIGUNGAUSGABEN, "GK RSA:Sachkosten bei extrakorporaler Blutreinigung");
        de.put(RULES_GK_RSA_SOLEASUGABEN, "GK_RSA_SoLeAsugaben");
        de.put(RULES_30_IV_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "30 - IV ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(RULES_CRIT_ACG_RESCALED_TOTAL_CRI_DIS, "ACG: Index aller Kosten, gewichtet");
        de.put(CATALOG_DOWNLOAD_PROGRESS_CATALOG_DROPPED, "{0} wurde gelöscht");
        de.put(REQUEST_TYPE_EXAMINATION, "Prüfanfrage/Vorverfahren");
        de.put(BILL_VALIDATION_ERROR, "Zusätzliche Informationen sind erforderlich");
        de.put(SETTING_SHOW_ALL_REMINDERS, "Die Vorgangsliste zeigt alle Wiedervorlagen ");
        de.put(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_INDICATION_OF_EXTERNAL_VIOLENCE, "Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt");
        de.put(PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_TO, "Frist MD-Abschl. bis");
        de.put(DIALOG_BATCH_GROUPING_INTENSIVCARE_TOOLTIP, "Intensivtage");
        de.put(LOGIN_FAILED_ACCOUNT_INVALID, "Benutzerkonto ist nicht mehr gültig");
        de.put(WORKFLOW_CLOSE_AND_CREATE_REMINDER_CREATE_REMINDER_SUCCESSFULLY, "{0} neue Wiedervorlagen von Art ''''{1}'''' wurden angelegt.");
        de.put(RULES_01_BPFLV, "01 - BPflV");
        de.put(MDK_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE, "Keinen gültigen Eintrag für die Frist \"Frist Vorschlag Nachverfahren\"  in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.");
        de.put(RULE_FILTER_DIALOG_ALL_RULES_SELECTION, "Alle selektieren");
        de.put(DISCHARGE_REASON_DISMISSAL_TRANSFER_WITH_BREATHING_2, "Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit");
        de.put(RULES_TEMP_252_DIAGNOSENGRUPPEN, "GK RSA:Ambulante HMG relevante DxG");
        de.put(RULE_TABLE_CONTENT, "Tabelleninhalt");
        de.put(DISCHARGE_REASON_DISMISSAL_TRANSFER_WITH_BREATHING_1, "Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit");
        de.put(VALIDATION_MASTERDATA_NO_USERS_FOUND, "In den Stammdaten wurden keine passenden Benutzer hinterlegt!");
        de.put(RULES_CRIT_ACG_TOTAL_COST_DIS, "ACG: Gesamtkosten");
        de.put(BILLING_DATE, "Rechnungsdatum***Rech.-Datum***Datum der erstellten Rechnung");
        de.put(RULES_TEMP_112_AUFNAHMETAG, "Format: DD");
        de.put(MDK_REPORT_CREATION_QUARTER, "Gutachten-Quartal");
        de.put(LOGIN_ERROR_MESSAGE_CONFIGURATION, "Die Konfigurationsdatei ist nicht verfügbar");
        de.put(RULES_CRIT_AMBU_CARE_PROVIDED_FROM, "ambu_Pflegeleistung_von");
        de.put(CATALOG_DIALOG_PROCEDURES, "Prozeduren");
        de.put(CASE_DETAILS_INT_9, "Int 9");
        de.put(CASE_DETAILS_INT_8, "Int 8");
        de.put(CASE_DETAILS_INT_7, "Int 7");
        de.put(PROCESS_STATUS_CLOSED, "Vorgang wurde geschlossen");
        de.put(CASE_DETAILS_INT_6, "Int 6");
        de.put(CASE_DETAILS_INT_5, "Int 5");
        de.put(RULES_GK_RSA_DXG, "GK_RSA_DxG");
        de.put(CASE_DETAILS_INT_4, "Int 4");
        de.put(CASE_RESOLVE_SUPPLEMENTARY_CHARGE, "Zusatz-/ergänz. Tagesentgelte ");
        de.put(CASE_DETAILS_INT_3, "Int 3");
        de.put(RULES_TEMP_204_GK_RSA_PZNCODE, "GK RSA:PZN-Code");
        de.put(CASE_DETAILS_INT_2, "Int 2");
        de.put(CASE_DETAILS_INT_1, "Int 1");
        de.put(ADDRESS_STREET, "Straße");
        de.put(RULES_SUPERGROUP_AMBU_DATA_TOOLTIP, "ambulante Daten");
        de.put(RULES_TEMP_273_GK_RSA_STATIONAEREDXG, "GK RSA:Stationäre DxG");
        de.put(WARNING, "Warnung***W");
        de.put(VALIDATION_CATALOGDATA_NO_BEGES_FOUND, "In den Katalogen wurden keine Berufsgenossenschaften hinterlegt!");
        de.put(ITEM_LOCKED, "Gesperrt***Sperre***Wird zurzeit von einem anderen Benutzer bearbeitet");
        de.put(FEE_GROUP_APPENDIX_3_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "Anlage 3 ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(RULES_TEMP_99_PEPP, "Format: Aplhanumerisch (Beispiele P003B, TK04Z)");
        de.put(RULES_GESAMTATCDOSIERUNG, "GesamtATCDosierung");
        de.put(RULES_TEMP_171_KLINIK_AUFNAHMEDATUM, "Format: YYYYMMDD");
        de.put(COUNTRY_FRANCE, "Frankreich");
        de.put(ORGAN_BODY, "ganzer Körper");
        de.put(TP_301_INFORMATION_KEY_30_BEF00, "Beendigung des Prüfverfahrens aufgrund Einigung im Falldialog – ohne Datenkorrektur");
        de.put(RULES_COL_ADRG, "ADRG");
        de.put(TEXT_TEMPLATE_ACTION, "Aktion Kontext");
        de.put(RULES_COL_CASENR, "Fallnummer");
        de.put(WORKING_LIST_COLUMNS_AVAILABLE, "Verfügbare Spalten");
        de.put(RULES_TEMP_60_ANZAHLABTEILUNGEN, "Format: Ganzzahlig (Beispiel 5)");
        de.put(PROCESS_USER, "Vorgangsbearbeiter***Bearbeiter***Nutzer, dem der Vorgang zur Bearbeitung zugewiesen ist");
        de.put(RULES_TEMP_221_GK_RSA_AUSGABENGESAMT, "GK RSA:Ausgaben gesamt");
        de.put(LENGTH_OF_STAY_TO, "Verweildauer bis***VWD");
        de.put(ADMISSION_REASON_HOSPITAL_TREATMENT_WITHOUT_SUBSEQUENT_HOSPITALIZATION, "Krankenhausbehandlung ohne anschl. stationäre Behandlung");
        de.put(ADMISSION_REASON_MATERNITY_HOSPITAL, "stationäre Entbindung");
        de.put(RULES_CRIT_ACG_RXMG_DIS_1, "ACG: EDCs auf Basis der Medikamente");
        de.put(RULES_TEMP_59_WOHNORT, "Format: bis zu 255 Zeichen alphanumerisch (Beispiel: Berlin)");
        de.put(NO_DEPARTMENT_DISCHARGE_DATE, "Entlassungsdatum der nicht entlassenden Bewegung ist nicht gesetzt******Entlassungsdatum einer Bewegung, die nicht die entlassende Bewegung ist, ist nicht gesetzt");
        de.put(REVIEW_MD_NAME, "MD-Name");
        de.put(GROUPER_STATUS_GST_OK, "Normale Gruppierung");
        de.put(ICD_REF_TYPE_ADDITION, "Zusatz");
        de.put(REVIEW_SEND_ON_DOCUMENTS, "Nachsenden der Dokumenten EV");
        de.put(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_ATC_TOOLTIP_1, "Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein ATC - Code eingetragen ist.");
        de.put(CASE_MERGING_WARNING_GROUPED, "Nicht alle Fälle scheinen mit dem Groupermodel: {0} eine Fallpauschale zu haben!Fälle ohne Fallpauschale werden bei der Ermittlung von zusammenführbaren Fällen ignoriert!Trotzdem fortfahren?");
        de.put(AUDIT_AREA_CODE, "Postleitzahl");
        de.put(RULES_TEMP_97_OBERE_GRENZVERWEILDAUER, "Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.");
        de.put(RULES_CRIT_MRSA_EMG_TOOLTIP_2, "Format: 1-stellig, ganze Zahl (Beispiel: 3)");
        de.put(RULES_CRIT_MRSA_INSURANCE_DAYS_TOOLTIP_2, "Versichertentage des Ver-sicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV");
        de.put(RULES_CRIT_MRSA_EMG_TOOLTIP_1, "Vom BVA festgelegte Erwerbsminderungsgruppen");
        de.put(RULES_TEMP_130_TAGDERENTBINDUNG_1, "Format: YYYYMMDD");
        de.put(RULES_TEMP_275_GK_RSA_HAUPTDIAGNOSESTATIONAER, "Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.");
        de.put(RULES_CRIT_MRSA_INSURANCE_DAYS_TOOLTIP_1, "Versichertentage aus Satzart 100");
        de.put(RULES_TXT_CRIT_ADMISSION_MONTH_DIS, "Aufnahmemonat");
        de.put(CASE_DETAILS, "Fall Einzelheiten");
        de.put(INS_SHORT_BARMER, "Barmer");
        de.put(BILL_TYPE_ENUM_PARTIAL, "Zwischenrechnung");
        de.put(RULE_FILTER_DIALOG_RULE_IDENT, "Ident-Nummer");
        de.put(RULES_TEMP_279_GK_RSA_NEBENDIAGNOSESTATIONAER, "GK RSA:stationäre Nebendiagnose");
        de.put(RISK_AREA_PROCEDURES, "Prozeduren");
        de.put(RULES_TXT_CRIT_SEC_DIAG_LOC_DIS, "Sek. Diagnose: Lokalisation");
        de.put(RULES_TEMP_26_HM_MENGE, "Format: numerisch (Beispiel: 5)");
        de.put(WORKFLOW_DEADLINE_PRELIMINARY_PROCEEDINGS_CLOSED_DEADLINE_COMMENT, "Frist, bis zu dem das Vorverfahren abgeschlosssen sein muss");
        de.put(VALIDATION_CATALOGDATA_NO_HOSPITALS_FOUND, "In den Katalogen wurden keine Krankenhäuser hinterlegt!");
        de.put(RULES_TXT_CRIT_REDUCTION_CW_TOOLTIP_1, "Ein Unterschreiten der Unteren Grenzverweildauer bewirkt einen Abschlag, bei dem die einer DRG zugeordneten CW-Wert-Abschläge multipliziert mit den Tagen der Unterschreitung von dem CW-Basiswert abgezogen werden.");
        de.put(PATIENT_FULL_NAME, "Name, Vorname");
        de.put(FEE_GROUP_NUB_WITHOUT_FINAL_INVOICE, "NUB ohne Schlussrechnung");
        de.put(RULE_VALIDATION_NO_VALUE, "kein Wert gefunden");
        de.put(RULES_GROUP_INSURANT_MRSA_DIS, "Versichertendaten");
        de.put(INITIATION_TEST_PROCESSES_TO, "Einleitung Prüfv. bis ");
        de.put(GENDER_FEMALE, "weiblich");
        de.put(ACG_AGE_BAND_75_79, "75-79");
        de.put(ORGAN_MUSCULOSKELETAL, "Muskel-Skelett");
        de.put(GROUP_RELEVANT_CODE_USED_TO_MEET_THE_LOGICAL_AND_TEMPORAL_CONDITION_OF_OPD_CONSTRUCT, "verwendet zur Erfüllung der logischen und zeitlichen Bedingung eines OPD-Konstrukts");
        de.put(GROUPER_OPS_RES_TYPE_OR_INVALID_DATE, "OR-Prozedur mit Konflikt OPS-Datum ");
        de.put(RULES_TEMP_208_AUSGABEN, "GK RSA:Ausgaben für Apotheken");
        de.put(RULES_KLINIK_BEATMUNGSSTUNDEN, "Klinik_Beatmungsstunden");
        de.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_9, "8 - 96-97 Perzentile");
        de.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_8, "7 - 94-95 Perzentile");
        de.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_7, "6 - 91-93 Perzentile");
        de.put(INS_SHORT_BG, "BG");
        de.put(FEE_GROUP_APPENDIX_3, "Anlage 3");
        de.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_6, "5 - 76-90 Perzentile");
        de.put(PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE, "Frist bis zur Antwort des Vorverfahrens, der Prüfanfrage***Frist Antwort");
        de.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_5, "4 - 51-75 Perzentile");
        de.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_4, "3 - 26-50 Perzentile");
        de.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_3, "2 - 11-25 Perzentile");
        de.put(RULES_CRIT_ACG_COST_BAND_TOOLTIP_2, "1 - 1-1 Perzentile");
        de.put(WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_CONFIRM, "Möchten Sie die Vorgangsnummer {0} wirklich stornieren?");
        de.put(INSURANCE_ASSOCIATION_NAME, "BG-Name");
        de.put(AGE_IN_YEARS_TO, "Alter Jahre bis");
        de.put(READMISSION, "Wiederaufnahme");
        de.put(EVENT_TYPE_ACTION_REMOVED, "Aktion gelöscht: Typ: {0}***Aktion gelöscht");
        de.put(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_ATC_DIS, "KH Medikament: Gesamtpreis für ATC");
        de.put(EVENT_NAME_CASE, "Fall");
        de.put(RULES_TXT_CRIT_CASE_NUMERIC_4_DIS, "Fall.Numeric04");
        de.put(RULES_3_UNBESTIMMT, "3 - unbestimmt");
        de.put(VALIDATION_ERROR_INVALID_INSURANCE_IDENT, "IKZ der Krankenkasse ist nicht korrekt!");
        de.put(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_TOOLTIP_1, "In welcher Dosierung das Medikament verordnet wurde.");
        de.put(ADMISSION_MODE_NOT_RELEVANT, "Nicht relevant");
        de.put(RULES_TXT_CRIT_RECHNUNG_NUMMER_DIS, "Rechnungsnummer");
        de.put(TP_301_INFORMATION_KEY_30_FDI20, "Erklärung über die Beendigung des Falldialogs");
        de.put(FEE_GROUP, "Entgeltbereich");
        de.put(CASE_DETAILS_CANCEL_REASON_KIS, "KIS");
        de.put(WORKFLOW_STATE_CLOSED, "geschlossen");
        de.put(CATALOG_DRG_CARE_DESC, "{0} Tag(e), entspr. {1} ");
        de.put(RULES_TEMP_194_KLINIK_VWD_STUNDEN, "Format: Ganzzahlig (Beispiel 2)");
        de.put(CURRENCY_SYMBOL, "€");
        de.put(CASE_NUMBER, "Fallnummer***Fallnummer***krankenhausinternes eindeutiges Kennzeichen (Krankenhaus-Fallnummer)");
        de.put(DISCHARGE_REASON_2_NOT_SPECIFIED, "keine Angabe");
        de.put(STATE_RHINELAND_PALATINATE, "Rheinland-Pfalz");
        de.put(RULES_TXT_CRIT_CW_EFFECTIV_TOOLTIP_1, "( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert)");
        de.put(RULES_TEMP_111_AUFNAHMEMONAT, "Format: MM");
        de.put(RULES_VPS_SEVERITY_LEVEL, "VPS_Schweregrad");
        de.put(DRG_SHORTCUT, "DRG");
        de.put(DAYS_SIMULATED, "Simulationstage");
        de.put(PROCESS_PREVIEW_PROCESS_STATUS, "Status");
        de.put(ANTIBIOTIC_FOSFOMYCIN, "Fosfomycin+");
        de.put(DATE_OF_BIRTH_TO, "Geb.-Datum bis");
        de.put(RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2, "Format: Fließkommazahl (Beispiel: 2.5)");
        de.put(FEE_GROUP_BEFORE_INPATIENT_WITHOUT_FINAL_INVOICE, "vorstationär ohne Schlussrechnung");
        de.put(PROCESS_SUBJECT_CHANGED_TOOLTIP, "Siehe Details zu diesem Vorgang");
        de.put(TP_301_INFORMATION_KEY_30_FDI13, "Ablehnung der Verlängerung des Falldialoges");
        de.put(TP_301_INFORMATION_KEY_30_FDI12, "Annahme der Aufforderung zur Verlängerung des Falldialogs");
        de.put(TP_301_INFORMATION_KEY_30_FDI11, "Aufforderung zur Verlängerung des Falldialogs");
        de.put(CATALOG_DRG_FIRST_DAY_DEDUCTION, "1. Tag mit Abschlag");
        de.put(ADMISSION_MODE_MAIN_DEPARTMENT, "HA******Hauptabteilung");
        de.put(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER, "Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_20, "47 - Integrierte Versorgung - Notfall");
        de.put(RULES_CRIT_PSYCHO_STATE_TOOLTIP_3, "2 - unfreiwillig");
        de.put(PROCESS_TOPICS, "Vorgangsarten");
        de.put(RULES_CRIT_PSYCHO_STATE_TOOLTIP_2, "1 - freiwillig");
        de.put(ANTIBIOTIC_CEFTAZIDIM, "Ceftazidim");
        de.put(RULES_32_DMP_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "32 - DMP ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_6, "0 - sonstige");
        de.put(RULES_TEMP_151_SEKDIAGNOSEPRIM, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        de.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_5, "Z - Zustand nach der betreffenden Diagnose");
        de.put(RULES_TEMP_40_MVERORDNUNGSDATUM, "Format: YYYYMMDD");
        de.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_4, "V - Verdachtsdiagnose");
        de.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_3, "G - gesicherte Diagnose");
        de.put(LAB_DATA_LAB_DATE, "Dokumenten-Datum***Dokumenten-Datum***Dokumenten-Datum");
        de.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_2, "A - ausgeschlossene Doagnose");
        de.put(RISK_VALUE_TOTAL, "Risiko in €");
        de.put(RULES_TXT_CRIT_CASE_NUMERIC_1_DIS, "Fall.Numeric01");
        de.put(TP_301_INFORMATION_KEY_30_FDI03, "Ablehnung eines Falldialoges");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_19, "46 - Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden");
        de.put(TP_301_INFORMATION_KEY_30_FDI02, "Annahme der Aufforderung zum Falldialog");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_18, "44 - Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt");
        de.put(TP_301_INFORMATION_KEY_30_FDI01, "Aufforderung zum Falldialog");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_17, "43 - Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_16, "42 - Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_15, "41 - Integrierte Versorgung - Normalfall");
        de.put(CASE_DETAILS_DATE_5, "Datum 5");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_14, "27 - Kostenträgerwechsel - Notfall");
        de.put(CASE_DETAILS_DATE_4, "Datum 4");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_13, "26 - Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden");
        de.put(CASE_DETAILS_DATE_3, "Datum 3");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_12, "24 - Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt");
        de.put(CASE_DETAILS_DATE_2, "Datum 2");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_11, "23 - Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)");
        de.put(CASE_DETAILS_DATE_1, "Datum 1");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_10, "22 - Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)");
        de.put(GROUPER_STATUS_INVALID_PRINCIPAL_ICD, "Ungültige oder fehlende Hauptdiagnose");
        de.put(CASE_MERGING_CONDITION_THREE_DRG, "Gleiche ADRG***Gleiche ADRG");
        de.put(RULES_CRIT_ACG_TOTAL_COST_BAND_TOOLTIP_1_1, "0 - 0 Gesamtkosten");
        de.put(DRG_CORR_TYPE_DEDUCTION_TRANSFER, "Abzug Verlegung");
        de.put(RULES_TEMP_161_KLINIK_OGVD, "Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.");
        de.put(RULES_TXT_CRIT_CLINIC_AUX_DIAG_DIS, "Klinik: Nebendiagnose");
        de.put(EVENT_TYPE_ACTION_ADDED, "Aktion angelegt: Typ: {0}***Aktion angelegt");
        de.put(DISCHARGE_REASON_TREATMENT_TERMINATE_REGULARLY_PROVIDED_INPATIENT_TREATMENT, "Behandlung regulär beendet, nachstationäre Behandlung vorgesehen");
        de.put(PROCESS_REVIEW_DEADLINE_SEND_ON_DAYS, "Tage für Nachsenden der Unterlagen EV***EV Unterlagen");
        de.put(INSURANCE_BILL_RECIVED_TO, "Eingang Rech.-datum Kasse bis");
        de.put(RULE_COLUMN_TYPE, "Typ***Typ***Regeltyp");
        de.put(PROCESS_KAIN_KEY, "KAIN Schlüssel***KAIN Schl.***Technische Schlüssel der KAIN-Nachricht");
        de.put(RULES_CRIT_ACG_SEX, "acg_geschlecht");
        de.put(PROCESS_FINAL_AUDIT_REASONS, "Prüfgründe des Vorgangabschlusses***Prüfgr. des Vorgangabschl.*** Prüfgründe, die bei dem Vorgangabschluß bearbeitet wurden");
        de.put(RULES_TEMP_73_ENTGELTE, "Rechnung: Rechnungsnummer");
        de.put(ACG_AGE_BAND_45_54, "45-54");
        de.put(RULES_TXT_CRIT_VWD_DIS, "Verweildauer");
        de.put(RULES_TXT_CRIT_AGE_DAYS_DIS, "Alter in Tagen");
        de.put(DRG_CORR_TYPE_DEDUCTION, "Abzug");
        de.put(RULES_TEMP_6_HE_GESAMTPREIS_ALLE, "Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)");
        de.put(VALIDATION_CATALOGDATA_NO_BEGE_EXISTS, "Die hinterlegte Berufsgenossenschaft wurde in der Zwischenzeit aus dem Katalog entfernt!");
        de.put(RISK_PERCENT_TOTAL_EQUAL, "Risiko in %");
        de.put(RULES_TEMP_267_GK_RSA_DIAGNOSEAMBULANTHMGRELEVANT, "GK RSA:ambulante HMG relevante Diagnosen");
        de.put(TEXT_TEMPLATE_REMINDER, "Wiedervorlage Kontext");
        de.put(RULES_CASE_DATES, "Falldaten");
        de.put(CASE_LOCKED, "Gesperrt***G***Der Fall wird zurzeit von einem anderen Benutzer bearbeitet");
        de.put(EVENT_TYPE_REMINDER_EXPIRES, "Wiedervorlage abgelaufen: Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3}***Wiedervorlage abgelaufen");
        de.put(WORKFLOW_DEADLINE_PRELIMINARY_PROCEEDINGS_CLOSED_DEADLINE, "Frist Vorverfahren-Abschluss");
        de.put(NEW_RULE_TABLE, "neue Regeltabelle");
        de.put(RULES_TEMP_106_AUFNAHMEDATUM, "Die Uhrzeit der Aufnahme wird nicht berücksichtigt");
        de.put(RULES_TXT_CRIT_PROC_NUMBER_TOOLTIP_1, "Die Summe aller Prozeduren.");
        de.put(RULES_CRIT_ACG_ISCHEMIC_HEART_DC, "acg_koronare_Herzkrankheit_vorhanden");
        de.put(ADMISSION_REASON_2_COST_UNIT_CHANGE_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER, "Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)");
        de.put(MAIN_DIAGNOSIS_ERROR, "Eine Stern- oder Zusatzdiagnose kann nicht als Hauptdiagnose gesetzt werden.");
        de.put(MDK_REPORT_CREATION_DATE_EQUAL, "Gutachtendatum");
        de.put(RULES_TEMP_213_AUSGABEN, "GK RSA:Ausgaben gesamt");
        de.put(START_GROUPING, "Starte Grouping");
        de.put(RULES_TXT_CRIT_SDX_NUMBER_TOOLTIP_1, "Die Summe aller Nebendiagnosen.");
        de.put(DEPARTMENT_MAIN_DIAGNOSIS, "Fachabteilungs-Hauptdiagnose***FAB-HD");
        de.put(RULES_TXT_OP_AND, "und ( && )");
        de.put(CANCEL, "Abbrechen");
        de.put(RULES_TEMP_158_KLINIK_ADRG, "Klinische Daten: Basis - DRG: DRG ohne letzte Stelle (für Schweregrad).");
        de.put(RULES_TEMP_37_MPREIS, "Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)");
        de.put(LOGIN_START_TEAMVIEWER, "Starte Teamviewer");
        de.put(RULES_TXT_CRIT_CLINIC_IKZ_DIS, "Klinik: IKZ");
        de.put(GROUP_RESULT_PDX_IMPROPER_PDX_CODE, "Unzulässige Hauptdiagnose");
        de.put(ACTION_TYPE, "Aktionstyp");
        de.put(ANTIBIOGRAM_RESULT_INTERMEDIATE, "intermediär");
        de.put(RULES_CRIT_AMBU_CARE_CARE_LEVEL, "ambu_Pflegestufe");
        de.put(RULES_CRIT_ACG_HOS_DOMINANT_COUNT_TOOLTIP, "Anzahl ADGs mit hoher (>50%) Wahrscheinlichkeit einer künftigen Krankenhausaufnahme.");
        de.put(MODIFIED_FROM, "von {0}");
        de.put(RULES_TEMP_33_GESAMTPZNDOSIERUNG, "Format: Fließkommazahl (Beispiel: 2.5)");
        de.put(DISCHARGE_REASON_DISMISSAL_IN_A_NURSING_FACILITY, "Entlassung in eine Pflegeeinrichtung");
        de.put(RULES_TXT_GROUP_LABOR_DIS, "Labor");
        de.put(RULES_27_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "27 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(CASE_RESOLVE_CW, "CW");
        de.put(EVENT_REMOVED, "{0} wurde gelöscht");
        de.put(DATE_FORMAT, "dd.MM.yyyy");
        de.put(RULES_TEMP_109_AUFNAHMEDATUM_MIT_UHRZEIT, "Format: YYYYMMDD HH:mm");
        de.put(RULES_GKMEDICINE_NODE_MEDICINE, "Medikamente");
        de.put(GROUPER_MDC_OR_SK_INFANT_INPATIENT_CARE, "Kinder- und Jugendpsychiatrie, vollstationär***PKJ");
        de.put(COUNTRY_ENGLAND, "England");
        de.put(RULES_TXT_CRIT_SEPARATION_MONTH_DIS, "Entlassungsmonat");
        de.put(RULES_TXT_CRIT_TRANSFER_DAY_TIME_TOOLTIP_1, "Uhrzeit, zu der der Patient in ein anderes Krankenhaus verlegt worden ist.");
        de.put(INS_STATUS_SELF_INSURED, "Selber versichert");
        de.put(PATIENT_IGNORED, "Patienten-Daten (Patienten-Nummer {0}) im ersten Schritt, werden ignoriert, da dieser Fall einem anderen Patienten zugeordnet ist, Patienten-Nummer ({1}) ");
        de.put(RULES_TEMP_196_ARZNEIMITTEL, "GK RSA:ATC-Code");
        de.put(PROCESS_STATUS_REOPEN, "Vorgang neu öffnen");
        de.put(VALIDATION_MASTERDATA_NO_DOCUMENT_TYPES_FOUND, "In den Stammdaten wurden keine passenden Dokumententypen hinterlegt!");
        de.put(AUDIT_SENT_ON_DATE, "gesendet am");
        de.put(INS_SHORT_IKK, "IKK");
        de.put(UPDATED, "Zeitpunkt der letzten Bearbeitung***Aktualisiert***Zeitpunkt der letzten Bearbeitung");
        de.put(RULES_CRIT_ACG_ASTHMA_CONDITION_DIS, "ACG: Asthma vorhanden");
        de.put(MENU_USER_NAME_STATUSTEXT, "Name: {0}");
        de.put(ICD_TYPE_PREOPERATIVE, "Präoperativ");
        de.put(RULES_GROUP_FEES_DATA_HOSP_DATA_TOOLTIP, "Entgelte");
        de.put(MDK_TELEPHONE, "Telefon");
        de.put(DIALOG_BATCH_GROUPING_PCCL_TOOLTIP, "Durchschnittlicher patientenbezogener  klinischer Komplexitätsgrad aller gegroupten Fälle");
        de.put(RULES_GROUPERRELEVANTEPROZEDUR, "GrouperrelevanteProzedur");
        de.put(ADMISSION_REASON_HOSPITAL_DAY_PATIENT, "Krankenhausbehandlung teilstationär");
        de.put(CASE_DAY_CARE, "vorstationärer Fall");
        de.put(CASE_RESOLVE_RULES_PROPOSAL, "Vorschlag");
        de.put(SETTING_SHOW_PREVIEW, "Fall-/Vorgangsvorschau anzeigen");
        de.put(REPORT_CANCELLED, "Berichtsgenerierung wird abgebrochen");
        de.put(REQUEST_TYPE_MDK, "Medizinischer Dienst");
        de.put(PROCESS_FINALISATION_CW_DIFF_FROM, "CW Diff von");
        de.put(RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT_DIS, "ACG: Anzahl chronischer Erkrankungen");
        de.put(DOCUMENTATION_TYPE_RISK_REVIEW, "Risikobeurteilung");
        de.put(ADMISSION_BY_LAW_UNVOLUNTARY, "Unfreiwillig");
        de.put(WORKING_LIST, "Arbeitsliste");
        de.put(PROCESS_FINALISATION_LOS_INITIAL, "VWD Initial***VWD Initial***VWD der KIS-Version des Falles, welche diesem Vorgang initial zugeordnet wurde.");
        de.put(EVENT_NAME_DOCUMENT, "Dokument");
        de.put(RULES_TEMP_155_KLINIK_NEBENDIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        de.put(RULES_TEMP_83_ENTGELTABRECHNUNGBIS, "Format: YYYYMMDD");
        de.put(ICDCODE, "Hauptdiagnose***HD***Hauptdiagnose des Falles");
        de.put(RULES_TXT_AGE_IN_YEARS, "Alter in Jahren");
        de.put(PROCESS_REVIEW_DEADLINE_SEND_ON_DATE, "Nachsendefrist der angefordenten Dokumenten bei EV bis***EV Nachsendefrist***Datum bis zu dem die von der Krankenkasse bei dem Erörterungsverfahren angeforderten Unterlagen nachgesendet werden müssen");
        de.put(LOGIN_DATABASE, "Datenbank");
        de.put(DIALOG_BATCH_GROUPING_DAYSEXTERN, "Belegungstage ausserhalb");
        de.put(RISK_AREA_SECONDARY_DIAGNOSIS, "Nebendiagnosen");
        de.put(SAME_RULE_OTHER_SUGG_LOGIC, "Regel mit gleichen Ident und abweichenden VorschlagsLogik in dem Pool vorhanden");
        de.put(REVENUE_MATH_DRG_CARE_LAYOUT, "Pflege-Erlös: (Pflege-Baserate {0}{1} x PflegeCW {2}) x Pflegetage {3}");
        de.put(MDK_DOCUMENT_DELIVER_DEADLINE_FROM, "Frist Versand von");
        de.put(REVIEW_START_AUDIT_MD, "Einleitung MD-Prüfung");
        de.put(WORKFLOW_DEADLINE_REVIEW_START, "Frist Einleitung Erörterungsverfahren nach MD-Rüfung");
        de.put(RULES_TXT_CRIT_ADMISSION_DATE_TOOLTIP_1, "Aufnahmedatum ist der erste Behandlungstag  im Krankenhaus.");
        de.put(RULES_TXT_CRIT_ADMISSION_DAY_DIS, "Aufnahmetag");
        de.put(RULES_TXT_CRIT_CLINIC_CASE_DRG_TOOLTIP_1, "Klinische Daten: Fallpauschale.");
        de.put(CASE_DETAILS_CANCEL_REASON_USER, "manuelle Stornierung ");
        de.put(RULES_TXT_CRIT_ADMISSION_DAY_TIME_DIS, "Aufnahmeuhrzeit");
        de.put(RULES_GK_RSA_HAUPTDIAGNOSESTATIONAER, "GK_RSA_HauptdiagnoseStationaer");
        de.put(CASE_CREATE_PROCESS, "Vorgang erstellen");
        de.put(AUDIT_TYPE_COLLECTION, "Sammelprüfung");
        de.put(RULES_CRIT_MRSA_HMG_NUMBER_TOOLTIP_2, "Format: ganze Zahl, bis zu 3stellig (Beispiel: 25)");
        de.put(MENU_GROUPER_STATUSTEXT, "Grouper: {0}");
        de.put(RULES_CRIT_MRSA_HMG_NUMBER_TOOLTIP_1, "Anzahl aller ermittelten HMGs unter Berücksichtigung der Hierarchisierung");
        de.put(AUDIT_PREL_PROC_ANS_DEADLINE_ERROR, "Keinen gültigen Eintrag für die Frist \"Antwort\" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.");
        de.put(CASE_TYPE_PEPP, "PEPP");
        de.put(BILL_TYPE_ENUM_FINAL, "Schlussrechnung");
        de.put(WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_SUCCESS, "Vorgangsnummer {0} erfolgreich storniert");
        de.put(NO_CASE_RESOLVES, "Keine Prüfregelanschläge");
        de.put(FEE_GROUP_BPFLV_WITHOUT_FINAL_INVOICE, "BPflV ohne Schlussrechnung");
        de.put(BILL_NO, "Faktura");
        de.put(RULES_CRIT_ACG_MAJOR_ADG_COUNT_TOOLTIP, "Anzahl der Haupt-ADGs,  welche diesem Patienten zugeordnet sind. Ein Haupt-ADG ist ein ADG  mit erheblichen Auswirkungen auf den gleichzeitigen oder zukünftigen Ressourcenverbrauch. Es gibt separate Haupt-ADGs für Kinder und Erwachsene");
        de.put(RULES_TXT_CRIT_BIRTHDAY_DIS, "Geburtsdatum");
        de.put(DISCHARGE_REASON_DISMISSAL_BEFORE_RESUMING_WITH_RECLASSIFICATION, "Entlassung vor Wiederaufnahme mit Neueinstufung");
        de.put(RULES_15_SONSTIGE_ENTGELTE_ANLAGE_OHNE_SCHLUSSRECHNUNG, "15 - Sonstige Entgelte Anlage ohne Schlussrechnung");
        de.put(SERVICE_OVERVIEW, "Leistungsübersicht");
        de.put(RULES_77_VOLLSTATIONRE_PFLEGE, "77 - Vollstationre Pflege");
        de.put(SAME_TABLE_OTHER_COMMENT, "Tabelle mit der abweichenden Kommentar in dem Pool vorhanden");
        de.put(DISCHARGE_REASON, "Entlassungsgrund (Stelle 1 u. 2)***Entl.-Gr.1.u.2.***Entlassungsgrund Stelle 1 und 2");
        de.put(CASEFEE_INFO, "Entgelte von {0} ");
        de.put(AUDIT_CASE_DIALOG, "Falldialog");
        de.put(CASE_DELTA_CWMINIMAL_FROM, "dCW min. von");
        de.put(PAY_CLASS, "Vergütungsklasse");
        de.put(RULES_VPS_DISCOVERED_AT, "VPS_Festgestelt_am");
        de.put(RULES_4_DIVERSE, "4 - divers");
        de.put(RULES_TXT_CRIT_PSYCHO_STATE_DIS, "Psychostatus");
        de.put(JOB_STAUTS_INITIALIZING, "Wird initialisiert");
        de.put(MDK_SUBSEQUENT_PROCEEDING_DATE, "Nachverfahren***Nachverfahren***Datum ab dem ein Nachverfahren innerhalb eines MD-Verfahrens vereinbart wurde. Es wird die zeitlich letzte Anfrage verwendet.");
        de.put(RULES_25_NUB_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "25 - NUB ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(RULES_TEMP_268_GK_RSA_AMBULANTEHMGRELEVANTEDXG, "GK RSA:Ambulante HMG relevante DxG");
        de.put(RULES_24_DRG_ANLAGE_1_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "24 - DRG Anlage 1 ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(TP_301_INFORMATION_KEY_30_EKK61, "Es wurde keine Einigung erzielt und das Erörterungsverfahren ist gemäß § 9 Abs. 12 PrüfvV beendet (KAIN) ");
        de.put(TP_301_INFORMATION_KEY_30_EKK60, "Abrechnungsstreitigkeit gilt infolge fehlender Erörterung oder fehlender Mitwirkung als erörtert gemäß § 9 Abs. 11 PrüfvV (KAIN)");
        de.put(BILL_OPEN_ITEM_CURRENCY_KEY, "Währung");
        de.put(RULES_TEMP_278_GK_RSA_STATIONAEREKRANKHEITSNUMMER, "GK RSA:Stationäre Krankheitsnummer");
        de.put(DIALOG_BATCH_GROUPING_KORRUGVD, "korr. UGVD");
        de.put(ADMISSION_REASON_STATION_EQUIVALENT, "Stationsäquivalente Behandlung");
        de.put(TEMPLATE_CATEGORY_SUB_SECOND, "2. Unterkategorie für eine Vorlage");
        de.put(CASE_DELTA_REVENUE_MINIMAL_TO, "dErlös min. bis");
        de.put(DOCUMENTATION_CASE_EVALUATION_TEXT, "Hier können Bemerkungen zu der Beurteilung des Falls angegeben werden.Diese werden automatisch in einen neuen Fallreport übernommen.");
        de.put(RULES_TEMP_143_HAUPTDIAGNOSE, "Die Diagnose, welche nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.");
        de.put(RULES_AUFNAHMEDIAGNOSETYPE, "AufnahmediagnoseType");
        de.put(PROCESS_INKA_KEY, "INKA Sclüssel***INKA Schl.***Technische Schlüssel der INKA-Nachricht");
        de.put(CASE_MERGING_JOB_COMPLETED, "Erfolgreich");
        de.put(REPORT_FAILED, "Berichtsgenerierung ist fehlgeschlagen");
        de.put(ADMISSION_CAUSE, "Aufnahmeanlass***Anlass");
        de.put(AGE_IN_DAYS_FROM, "Alter Tage von");
        de.put(NO_ADMISSION_DATE_FOUND, "Aufnahmedatum des Falles ist nicht gesetzt");
        de.put(ADMISSION_REASON_2, "Aufnahmegrund (Stelle 3 u. 4)***Aufn.-Gr.3.u.4.***§301 Aufnahmegrund 3. und 4. Stelle");
        de.put(DOCUMENT_REMOVED_TOOLTIP, "Dieses Dokument wird entfernt");
        de.put(RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2, "Format: YYYYMMDD");
        de.put(RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_1, "Entlassungsdatum ist der letzte Behandlungstag im Krankenhaus.");
        de.put(UPDATED_FROM, "Aktualisiert von");
        de.put(VERSIONCONTROLL_HINT_ONE_MUST_REMAIN, "Mind. 1 CP-Version muss existieren.");
        de.put(PROCEED, "Wollen sie fortfahren?***Fortfahren?");
        de.put(RISK_AREA_CASE_MERGE, "Fallzusammenführung");
        de.put(TP_301_INFORMATION_KEY_30_EKK51, "Einvernehmliche Beendigung des Erörterungsverfahren  ohne Einigung gemäß § 9 Abs. 10 PrüfvV (KAIN)");
        de.put(RULES_CRIT_MRSA_DIAG_AMBULANT_HMG_REL_TOOLTIP_1_4, "0 - nicht vorhanden");
        de.put(TP_301_INFORMATION_KEY_30_EKK50, "Einigung im Erörterungsverfahren und Beendigung gemäß § 9 Abs. 8 PrüfvV (KAIN) Tp301.InformationKey30.EKK51 Einvernehmliche Beendigung des Erörterungsverfahren gemäß § 9 Abs. 10 PrüfvV (KAIN) ");
        de.put(RULES_TXT_CRIT_CITY_TOOLTIP_1, "Name des Wohnortes des Patienten.");
        de.put(RULES_CRIT_MRSA_DIAG_AMBULANT_HMG_REL_TOOLTIP_1_3, "1 - vorhanden");
        de.put(AUDIT_PREL_PROC_CLOSED_DEADLINE_ERROR, "Keinen gültigen Eintrag für die Frist \"Vorverfahren Ende\" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.");
        de.put(DEADLINES_ERROR, "Die Liste der Fristen ist leer. Bitte konfigurieren Sie gültige Fristen in den Stammdaten!");
        de.put(MDK_ADDRESS_VALIDATE, "Ungültige Adresse. Bitte geben Sie einen gültigen Eintrag an.");
        de.put(RULES_TXT_CRIT_ZIP_CODE_DIS, "Postleitzahl");
        de.put(RULES_CRIT_ACG_ADG_VECTOR_TOOLTIP, "Ein Vektor von Nullen und Einsen, um anzuzeigen, welchem ADG-Code dieser Patienten zuzuornden ist. Eine \"1\" in der fünften Position zeigt, dass der Patient ADG 5 zugewiesen wurde. Hinweis: ADG15 und ASG19 sind nicht mehr in Gebrauch und somit sollte immer Null sein.");
        de.put(DISCHARGE, "Entlassung");
        de.put(READONLY_DOC_ITEM_AOP_FILE_NAME, "AOP-Katalog_");
        de.put(DOCTOR_IDENT, "Doctor Identifier");
        de.put(WORKFLOW_STATE_DONE, "erledigt");
        de.put(RULES_TEMP_253_DIAGNOSENGRUPPEN, "GK RSA:Ambulante Krankheitsnummer");
        de.put(INSURANCE, "Versicherung");
        de.put(TP_301_INFORMATION_KEY_30_EKK43, "Annahme Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN) ");
        de.put(TP_301_INFORMATION_KEY_30_EKK42, "Ablehnung Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN) ");
        de.put(PROCESS_PREVIEW_AUDIT_REASONS, "Prüfgründe***Prüfgründe***Prüfgründe welche im Rahmen einer MD-Anfrage verwendet werden.");
        de.put(TP_301_INFORMATION_KEY_30_EKK41, "Anzeige einer Ausnahmsweise Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN) ");
        de.put(VERSIONCONTROLL_HINT_SELECT_VERSION, "Bitte Version auswählen!");
        de.put(RULES_GK_RSA_DIAGNOSEAMBULANT, "GK_RSA_DiagnoseAmbulant");
        de.put(AUDIT_QUOTA_RESULT_BILLED_CASES, "abgerechnete Fälle");
        de.put(RULES_CRIT_ACG_RXMG, "acg_RxMG_Code");
        de.put(BILL_TYPE, "Fakturatyp");
        de.put(WORKING_LIST_CONTEXT_MENU_CANCEL, "Fall stornieren");
        de.put(REVENUE_MATH_PEPP_CWDAY, "CW pro Tag({0})");
        de.put(ICD_TYPE_RISK, "Risiko");
        de.put(WORKFLOW_DEADLINE_MDK_AUDIT_COMPLETION_DEADLINE_COMMENT, "Frist, bis zu der die Überprüfung und Bewertung durch den MD abgeschlossen sein muss");
        de.put(CASE_RESOLVE_CW_EFF, "eff. CW");
        de.put(PROCESS_FINALISATION_REVENUE_INIT_FROM, "Erlös Initial von");
        de.put(ICD_TYPE_CARE, "Pflege");
        de.put(DOCUMENT_NAME, "Dokumentenname");
        de.put(DIAGNOSIS_REF_TYPE_DAGGER_FROM, "Kreuzdiagnose von");
        de.put(TP_301_INFORMATION_KEY_30_SF000, "sekundäre Fehlbelegung");
        de.put(DIALOG_BATCH_GROUPING_CMIEFF, "CMI eff.");
        de.put(TP_301_INFORMATION_KEY_30_EKK35, "Ablehnung mündliches Erörterungsverfahren (KAIN) ");
        de.put(TP_301_INFORMATION_KEY_30_EKK34, "Zustimmung mündliches Erörterungsverfahren (KAIN) ");
        de.put(TP_301_INFORMATION_KEY_30_EKK33, "Aufforderung mündliches Erörterungsverfahren (KAIN) ");
        de.put(DISCHARGE_REASON_EXTERNAL_TRANSFER_TO_ANOTHER_HOSPITAL_AND_SUBSEQUENT_REDEPLOYMENT_OR_INTERNAL_INSTALLATION_WITH_ALTERNATING_BETWEEN_THE_SCOPES, "externe Verlegung in ein anderes Krankenhaus und nachfolgende Rückverlegung oder interne Verlegung mit Wechsel zwischen den Geltungsbereichen der BPflV und des KHEntgG und nachfolgende Rückverlegung");
        de.put(TP_301_INFORMATION_KEY_30_EKK32, "Ablehnung der Verlängerung des Erörterungsverfahrens (KAIN) ");
        de.put(TP_301_INFORMATION_KEY_30_EKK31, "Annahme der Aufforderung zur Verlängerung des Erörterungsverfahrens (KAIN) ");
        de.put(TP_301_INFORMATION_KEY_30_EKK30, "Aufforderung zur Verlängerung des Erörterungsverfahrens (KAIN) ");
        de.put(DISCHARGE_DATE_TO, "Entl.-Datum bis");
        de.put(RULES_CRIT_CARE_STATE_TOOLTIP_11, "Pflegegrad 5");
        de.put(RULES_CRIT_CARE_STATE_TOOLTIP_10, "Pflegegrad 4");
        de.put(PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_FROM, "Frist MD-Abschl. von");
        de.put(CASE_MERGING, "Fallzusammenführung");
        de.put(CASE_MERGING_CONDITION_THREE_PEPP, "Gleiches Jahr***Gleiches Jahr");
        de.put(DIALOG_BATCH_GROUPING_LOS_TOOLTIP, "Durchschnittliche Verweildauer aller gegroupten Fälle");
        de.put(RULES_GK_RSA_DDD, "GK_RSA_DDD");
        de.put(ADMISSION_REASON_BIRTH, "Geburt");
        de.put(ICDCATALOG, "ICD Katalog");
        de.put(DOCUMENTATION_CASE_EVALUATION, "Fallbeurteilung");
        de.put(RULES_TXT_CRIT_AUX_DIAG_LOC_DIS, "Nebendiagnose: Lokalisation");
        de.put(REQUEST_TYPE_INSURANCE, "Versicherung");
        de.put(RULES_TXT_CRIT_SEC_DIAG_PRIM_TOOLTIP_1, "Die Diagnose, zu der die sekundäre Diagnose in Bezug steht. Siehe Diagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code .");
        de.put(DIALOG_BATCH_GROUPING_RULES_CHECKRESULTS, "Prüfergebnis");
        de.put(PROCESS_PREVIEW_BILL_CORR, "Frist MD-Rechnungskorrektur");
        de.put(REVIEW_UPDATE_REQUEST_WINDOW, "Anfrage aktualisieren (Erörterungsverfahren)");
        de.put(GROUPER_STATUS_INVALID_LOS, "Ungültige Verweildauer");
        de.put(REMINDER_UPDATE_HEADER, "Wiedervorlage aktualisieren ");
        de.put(AMBULANT, "ambulant");
        de.put(CASE_MERGE_TAB_SECTION_CASE_DATA, "Übersicht Falldaten");
        de.put(INS_STATUS_FAMILY_INSURANCE, "Familienversichert");
        de.put(WORKFLOW_DEADLINE_6_WEEKS_DEADLINE_COMMENT, "Wenn die 6-Wochen-Frist überschritten wird, dann soll beim Anlegen einem neuen Vorgang ein Hinweis erscheinen.");
        de.put(ADMISSION_REASON_2_COST_UNIT_CHANGE_INDICATION_OF_EXTERNAL_VIOLENCE, "Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt");
        de.put(RULES_TEMP_67_ABTEILUNG, "Format: Ganzzahlig (Beispiel 1500)");
        de.put(RULES_CRIT_AMBU_CARE_PROVIDED_TO, "ambu_Pflegeleistung_bis");
        de.put(TP_301_INFORMATION_KEY_30_PF000, "primäre Fehlbelegung");
        de.put(TP_301_INFORMATION_KEY_30_EKK10, "Entscheidung der Krankenkasse wurde nicht fristgemäß bestritten und gilt als erörtert gemäß § 9 Abs. 2 PrüfvV mit Folge der Aufrechnung (KAIN)  ");
        de.put(VALIDATION_ERROR_TIME_FORMAT, "Falsches Zeitformat, benutzen Sie hh:mm!");
        de.put(ARTIFICIAL_VENTILATION, "Beatmungsstunden***Beatm.-Std.***Künstliche Beatmung in Stunden");
        de.put(PROCESS_FINALISATION_REVENUE_FINAL_FROM, "Erlös Final von");
        de.put(CASE_RESOLVE_RULES_DELTA_COST_WEIGHT, "dCW");
        de.put(BILL_TYPE_ENUM_SUPPL, "Nachtragsrechnung");
        de.put(MDK_EMAIL, "Mail-Adresse");
        de.put(DAY_SUNDAY, "Sonntag***So");
        de.put(ICD_TYPE_DISCHARGE, "Entlassung");
        de.put(RULES_CRIT_ACG_TOTAL_COST_BAND, "acg_Gesamt_KostGruppe");
        de.put(RULES_TEMP_200_GK_RSA_PACKUNGANZAHL, "GK RSA:Anzahl der Packungen");
        de.put(WORKFLOW_DEADLINE_REVIEW_INSURANCE_ANSWER_COMMENT, "Schließt sich die Krankenkasse der vom Krankenhaus vorgetragenen Begründung an, teilt sie dies dem Krankenhaus binnen 6 Wochen nach Zugang des Bestreitens nach Absatz 1 mit.");
        de.put(RULES_TEMP_50_PZNCODE, "Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918");
        de.put(RISK_AREA, "Prüfbereich***Prüfbr.***Thematischer Bereich in dem eine Überprüfung einer Krankenhaus-Rechnung erfolgen kann");
        de.put(RULES_VPS_ERR_CODE_TOOLTIP, "VPS: Fehlercode aus der Iskv");
        de.put(RULES_TEMP_229_VERSICHERTENDATEN, "GK RSA:Verstorben");
        de.put(RULES_CRIT_ACG_ADG_CODES_DIS, "ACG: ADG-Code");
        de.put(RULES_TEMP_171_FALL_NUMERIC_8, "Fall.Numeric8");
        de.put(TP_301_INFORMATION_KEY_30_EKK04, "Krankenkasse schließt sich nicht der Begründung des Krankenhauses gemäß §9 Abs. 4 Satz 1 PrüfvV an und leitet das EV ein. (KAIN) ");
        de.put(ANTIBIOTIC_CEFACLOR, "Cefaclor");
        de.put(TP_301_INFORMATION_KEY_30_EKK03, "Krankenkasse schließt sich nicht der Begründung des Krankenhauses gemäß §9 Abs. 4 PrüfvV an, das KH hat das EV bereits eingeleitet. (KAIN) ");
        de.put(RULES_TXT_CRIT_ADMISSION_DAY_TIME_TOOLTIP_1, "Uhrzeit, zu der der Patient am ersten Behandlungstag aufgenommen worden ist.");
        de.put(TP_301_INFORMATION_KEY_30_EKK02, "Krankenkasse schließt sich der Begründung des Krankenhauses gemäß §9 Abs. 3 Satz 1 PrüfvV an. Das durch das Krankenhaus bereits eingeleitete EV ist beendet. (KAIN)  ");
        de.put(LOS_ALTERATION_TO, "Tage sim. bis");
        de.put(HELP, "Hilfe");
        de.put(TP_301_INFORMATION_KEY_30_EKK01, "Krankenkasse schließt sich gemäß §9 Abs. 3 Satz 1 PrüfvV der Begründung des Krankenhauses an. Es erfolgt kein Erörterungsverfahren. (KAIN)  ");
        de.put(REMINDER_CHANGED_TOOLTIP, "Siehe die Details einer Wiedervorlage");
        de.put(PROCESS_FINALISATION_CW_CARE_FINAL, "Pflege CW Final***Pfl. CW Final***Bewertungsrelation der Pflege der Checkpoint-Version des Falles,welche diesem Vorgang zum Vorgangs-Abschluss zugeordnet wurde.");
        de.put(BILL_OPEN_ITEM_NET_VALUE, "Gesamt");
        de.put(FEE_GROUP_IV_INTEGRATED_CARE_WITHOUT_FINAL_INVOICE, "IV (integrierte Versorgung) ohne Schlussrechnung");
        de.put(DATA_RECORD_CORRECTION_DEADLINE_TO, "Frist Dat.-Korrektur bis");
        de.put(AGE_IN_YEARS, "Alter in Jahren***Alter Jahre***Alter des Patienten in Jahren, zum Zeitpunkt der Aufnahme");
        de.put(PROCESS_FINALISATION_CW_CARE_FINAL_TO, "Pfl. CW Final bis");
        de.put(RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_DIS, "KH Medikament: ATC-Code");
        de.put(PROCESS_FINALISATION_CLOSING_DATE, "Abschlussdatum***Abschlussdatum***Datum an dem der Vorgang abgeschlossen wurde");
        de.put(DAY_THURSDAY, "Donnerstag***Do");
        de.put(REVIEW_START_AUDIT_INSURANCE, "Einleitung Prüfverfahren Kasse");
        de.put(VERSION_PARENT_ADD_CASE, "Version angelegt bei manueller Falleingabe");
        de.put(DIALOG_BATCH_GROUPING_ERRORDRGPEPP_TOOLTIP, "Anzahl der Fälle, für die ein Fehler DRG oder PEPP  ermittelt wurde");
        de.put(INPUT_DATE_TO, "Bis Datum");
        de.put(ERROR, "Fehler***F");
        de.put(ACTION_SUBJECTS, "Aktionstypen");
        de.put(RULES_TXT_CRIT_ENTGELTART_DIS, "Entgelt");
        de.put(RULES_CRIT_ACG_RUB, "acg_RUB");
        de.put(MDK_EDITOR, "Bearbeiter");
        de.put(RULES_7E_BONUSZAHLUNG_AN_VOLLSTATIONAERE_PFLEGEEINRICHTUNGEN_BEI_RUECKSTUFUNG, "7E - Bonuszahlung an vollstationäre Pflegeeinrichtungen bei Rückstufung");
        de.put(RULES_TXT_CRIT_PROC_NUMBER_DIS, "Anzahl Prozeduren");
        de.put(DOCUMENTATION_FULL_RISK, "Risiko in % (ges.)***Risiko in % (ges.)***Gesamtes Risiko in Prozent");
        de.put(JOB_STATUS_STOPPED, "Angehalten");
        de.put(CASE_MERGING_DO_SAVE_AND_OPEN, "Fall speichern und öffnen");
        de.put(PLACE_OF_REG_REQUEST_FINALISATION, "Vorgangsabschluss");
        de.put(CHARACTERS, "Zeichen");
        de.put(CASEFEE_KIND, "Art");
        de.put(BILL_CORRECTION_DEADLINE, "Frist bis zur einmaligen Rechnungskorrektur (MD-Anfrage)***Frist Rech.-Korrektur");
        de.put(RULES_TXT_GROUP_MOVEMENT_DIS, "Bewegungen");
        de.put(RULES_TEMP_238_ERLOESE, "GK RSA:EMG");
        de.put(SF_DF_VALUE, "ZP/ET-Betrag");
        de.put(CASE_RESOLVE_LOCALISATION, "Lokalisation***Lok. ");
        de.put(PLEASE_WAIT, "Bitte warten...");
        de.put(REMINDER_CREATION_DATE, "WV angelegt***");
        de.put(RULES_TEMP_11_HE_MENGE, "Format: numerisch (Beispiel: 5)");
        de.put(RULES_KOSTENGEWICHT_KATALOG, "Kostengewicht_Katalog");
        de.put(ADMISSION_WEIGHT, "Aufnahmegewicht***Gewicht***Gewicht des Patienten in Gramm bei der Aufnahme");
        de.put(RULES_TEMP_45_GESAMTPZNDOSIERUNG, "Format: Fließkommazahl (Beispiel: 2.5)");
        de.put(CASE_CARE_CWMAXIMAL, "PflegeCW maximal***CW Pfl. max.***Maximaler PflegeCW-Wert, welcher durch die Prüfregeln für diesen Fall ermittelt wurde.");
        de.put(RULES_TEMP_263_GK_RSA_DIAGNOSEAMBULANT, "GK RSA:ambulante Diagnosen");
        de.put(READONLY_DOC_ITEM_DKR_PEPP, "Deutsche Kodierrichtlinien PEPP");
        de.put(DIAGNOSIS_REF_TYPE_ADDITIONAL_FROM, "Zusatzdiagnose von");
        de.put(DISCHARGE_DEPARTMENT_301, "§301-Schlüssel der FAB***entl. FAB §301***§301-Schlüssel der entlassenden Fachabteilung");
        de.put(RULES_TXT_CRIT_DIAG_TYPE_DIS, "Diagnose: Typ");
        de.put(CW, "CW");
        de.put(RULES_TEMP_240_ERLOESE, "GK RSA:HMG");
        de.put(WM_REQUESTTYPE, "Anfragetyp");
        de.put(MENU_SERVER_STATUSTEXT, "Server: {0}:{1}");
        de.put(ANTIBIOTIC_ERYTHROMYCIN, "Erythromycin");
        de.put(RULES_TEMP_80_ZUSCHLAGS_CW, "Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)");
        de.put(REMINDER_MODE_SHOW_ALL, "alle Wiedervorlagen");
        de.put(CASE_MERGING_ID, "Zusammenführungs ID***Zusf. ID");
        de.put(AUDIT_FAX, "Fax");
        de.put(RULES_TXT_CRIT_RECHNUNG_ART_DIS, "Rechnungsart");
        de.put(RULES_CRIT_MRSA_FULL_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben zu einem Versicherten (SA 700)");
        de.put(RULE_TABLE_CODES_NOT_VALID, "Die Tabelle {0} enthält nicht valide Code(s) {1}");
        de.put(STATE_BAVARIA, "Freistaat Bayern");
        de.put(RULES_TXT_CRIT_CASE_STR_4_DIS, "Fall.String04");
        de.put(CASEFEE_VALUE, "Betrag");
        de.put(CASE_MERGING_CONDITION_EIGHT_PEPP, "1.Fall letztes Jahr vor Umstieg***1.Fall letztes Jahr vor Umstieg");
        de.put(RULES_78_VOLLSTATIONRE_PFLEGE_MIT_ZUSCHUSS, "78 - Vollstationre Pflege mit Zuschuß");
        de.put(ICD_REF_TYPE_STAR, "Stern");
        de.put(MENU_BATCH_GROUPING_MED_AND_REMEDIES_TOOLTIP, "Bei der Regelauswertung werden auch die Regeln angewendet, die Medikamenten-,Heil- und Hilfsmittelkriterien beinhalten.");
        de.put(RULES_TXT_CRIT_REMEDIES_ALL_PRICE, "he_gesamtPreis_alle");
        de.put(REVIEW_EXPERTISE_DATE, "Gutachtendatum");
        de.put(ACG_INDEX_TYPE_TRT, "Durchgehende Behandlung");
        de.put(REVENUE, "Erlös");
        de.put(RULES_TXT_ADMISSION_TYPE_4_LONG, "V - Verlegung");
        de.put(TEXT_TEMPLATE_REQUEST, "Anfrage Kontext");
        de.put(RULES_TXT_CRIT_FEEGROUP, "Entgeltbereich");
        de.put(GROUPER_EINSTELLUNGEN_CONFIRM, "Das aktuell eingestellte Groupermodell ist für das Jahr {0} Die angelegten Fälle werden mit diesem Groupermodell gegroupt!Wollen Sie mit dieser Einstellung fortfahren?");
        de.put(CASE_MERGING_CONDITION_NINE_DRG, "Zusammenfassung***Zusammenfassung");
        de.put(RULES_TEMP_157_KLINIK_PROZEDUR, "Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)");
        de.put(BILL_POSITION_REFERENCE, "Tarifleistung");
        de.put(RULES_TXT_CRIT_SOLE_PRESCRIPT_DATE_DAK_DIS, "Hilfsmittel: Verordnungsdatum");
        de.put(ANTIBIOGRAM_RESULT_SENSITIVE, "sensibel");
        de.put(RULES_TXT_CRIT_CLINIC_SK_DIS, "Klinik: SK");
        de.put(RULES_TEMP_148_PROZEDUR, "Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)");
        de.put(PROCESS_FINALISATION_CLOSING_DATE_TO, "Abschlussdatum bis");
        de.put(RULES_TXT_CRIT_PRINC_DIAG_LOC_DIS, "Hauptdiagnose: Lokalisation");
        de.put(BILL_POSITION_POSITION_NO, "Positionsnummer");
        de.put(REVIEW_EXPERTISE_IN_DATE, "Eingang Gutachten");
        de.put(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_NO_PROCESSES, "Der Fall ist keinen Vorgängen zugeordnet");
        de.put(RULES_TEMP_126_INSTITUTIONSKENNZEICHEN, "Alle Einrichtungen, die Leistungen nach dem Sozialgesetzbuch (SGB) erbringen, erhalten auf Antrag ein IK. Systematik einer IK: die ersten 2 Ziffern kennzeichnen die Art der Einrichtung, die Ziffern 3 und 4 kennzeichnen das Bundesland der Einrichtung, die Ziffer 5 bis 8 werden fortlaufend vergeben, die Ziffer 9 dient als Prüfziffer.");
        de.put(ANTIBIOTIC_CEFAZOLIN, "Cefazolin");
        de.put(INS_SHORT_HZK, "HZK");
        de.put(RULE_VALIDATION_RULE_WITHOUT_TABLES, "Regeltabellen für die Regel sind nicht vorhanden");
        de.put(EVENT_NAME_ACTION, "Aktion");
        de.put(RULES_CASE_SPEC, "Abteilung");
        de.put(ANTIBIOTIC_AMPICILLIN_SULBACTAM, "Ampicillin+Sulbactam");
        de.put(RULES_TXT_CRIT_CASE_STR_1_DIS, "Fall.String01");
        de.put(RULES_GK_RSA_DMPTAGE, "GK_RSA_DMPTage");
        de.put(RULES_TXT_CRIT_BASE_VALUE_TOOLTIP_1, "(auch: Baserate) der Betrag, der bei der Berechnung der DRG - Entgelte für die Krankenhausbehandlung zugrunde gelegt wird.");
        de.put(VALIDATION_ERROR_NO_DISCHARGE_DAY_CASE, "Geben Sie ein Entlassungsdatum für den Fall ein!");
        de.put(RULES_TXT_CRIT_RECEIPT_DEPARTMENT_DIS, "aufnehmende Fachabteilung");
        de.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_12, "11 - Übergangspflege");
        de.put(FEE_GROUP_SEPARATE_CHARGES_WITHOUT_FINAL_INVOICE, "gesonderte Entgelte ohne Schlussrechnung");
        de.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_11, "10 - Stationsäquivalente Behandlung");
        de.put(RULES_CRIT_ADM_1_TYPE_TOOLTIP_10, "08 - Stationäre Aufnahme zur Organentnahme");
        de.put(BILL_POSITION_TEXT, "Bezeichnung");
        de.put(CASE_TYPE_DRG, "DRG");
        de.put(RULES_TEMP_228_VERSICHERTENDATEN, "GK RSA:Versichertentage");
        de.put(AUDIT_INSU_NAME, "KK Name");
        de.put(VALIDATION_ERROR_CASE_ALREADY_EXISTS, "Ein Fall mit der Nummer {0} wurde bereits hinzugefügt!");
        de.put(DATE_OF_BIRTH, "Geburtsdatum***Geb.-Datum***Geburtsdatum des Patienten");
        de.put(WORKFLOW_WARNING_NO_CASE, "Dem Vorgang {0} ist kein Krankenhausfall zugeordnet.Möglicherweise wurde dieser gelöscht.");
        de.put(ORGAN_CARDIOVASCULA, "Herz-Kreislauf");
        de.put(ADMISSION_REASON_2_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE, "Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)");
        de.put(RULES_HM_GESAMTPREIS_ALLE, "hm_gesamtPreis_alle");
        de.put(READONLY_DOC_ITEM_DKR_DRG, "Deutsche Kodierrichtlinien DRG");
        de.put(MENU_BATCH_GROUPING_LAST_RESULTS, "Letzte Ergebnisse");
        de.put(PROCESS_FINALISATION_CW_CARE_FINAL_FROM, "Pfl. CW Final von");
        de.put(CASE_MERGING_STOP_PROCESS, "Stop");
        de.put(RULES_GK_RSA_PZNGESAMTDOSIS, "GK_RSA_PZNGesamtdosis");
        de.put(REVENUE_MATH_DRG_CORR_DEDUCTION_LAYOUT, "Abschlag: (DRG-Baserate {0}{1} x korr.CW {2}) x korr.Tag(e) {3}");
        de.put(MDK_SUBSEQUENT_PROCEEDING, "Fort bezahlt am");
        de.put(RULES_CRIT_CARE_STATE_TOOLTIP_9, "Pflegegrad 3");
        de.put(RULES_CRIT_CARE_STATE_TOOLTIP_8, "Pflegegrad 2");
        de.put(RULES_CRIT_CARE_STATE_TOOLTIP_7, "Pflegegrad 1");
        de.put(LAB_DATA_MIN_LIMIT, "Min-Limit***Min-Limit***Untergrenze");
        de.put(STATE_BRANDENBURG, "Brandenburg");
        de.put(CASE_MERGING_JOB_INITIALIZING, "Wird initialisiert");
        de.put(CASE_RESOLVE_DATE, "Datum");
        de.put(RULE_CODES_4_YEAR_NOT_VALID, "Die Werte {0} für das Jahr {1} müssen angepasst werden");
        de.put(REMINDER_LATEST_FROM, "Fällig von");
        de.put(RULE_RESULT, "Ergebnis der Regel");
        de.put(CASE_STRING_10, "Text 10");
        de.put(WORKFLOW_DEADLINE_CONTINUATION_FEE_DEADLINE, "Frist Fortsetzungspauschale");
        de.put(RULES_KLINIK_ADRG, "Klinik_ADRG");
        de.put(RULES_TXT_CRIT_ADMISSION_JEAR_TOOLTIP_1, "Jahr, in das der erste Behandlungstag fällt.");
        de.put(GERM_GROWTH_PLENTY, "reichlich");
        de.put(RULES_TXT_CRIT_SEPARATION_YEAR_TOOLTIP_1, "Jahr, in das die Entlassung fällt.");
        de.put(RULES_TEMP_276_GK_RSA_DIAGNOSESTATIONAERHMGRELEVANT, "GK RSA:stationäre HMG relevante Diagnosen");
        de.put(NO_RULES_4_IMPORT_FOUND, "die Datei beinhaltet keine Regeln");
        de.put(CASE_RESOLVE_RULES_RELATION, "Bezug");
        de.put(RULES_TXT_OP_NOT_EQUAL, "ungleich ( != )");
        de.put(PROCESS_FINALISATION_CW_INITIAL_FROM, "CW Initial von");
        de.put(RULES_TEMP_175_KLINIK_AUFNAHMEUHRZEIT, "Klinische Daten: Aufnahmeuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.");
        de.put(MDK_CONTINUATION_FEE_DEADLINE_ERROR, "Keinen gültigen Eintrag für die Frist \"Fortsetzungpauschale gezahlt\" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.");
        de.put(INS_SHORT_BKK, "BKK");
        de.put(WORKFLOW_DOES_NOT_EXIST_WITH_REASON, "Die Vorgang mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.");
        de.put(DOCUMENT_TYPES, "Dokumententypen");
        de.put(RULES_CRIT_ACG_ADG_VECTOR, "acg_ADG_Vektor");
        de.put(CATALOG_DRG_NEGO_TITLE, "Tagesgleiches Entgelt");
        de.put(RULE_TYPE_OTHER_DISPLAY_TEXT, "Regeltyp is nicht gefunden");
        de.put(SAVE, "speichern");
        de.put(ADD_CASE_ADD_BILL, "Rechnung zufügen");
        de.put(ANTIBIOTIC_PENICILLIN, "Penicillin");
        de.put(ADMISSION_REASON_2_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER, "Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)");
        de.put(DOCUMENTATION_TYPE_REVIEW, "Fallbeurteilung");
        de.put(RULES_TXT_CRIT_PSYCH_OPS_NUMBER, "Anzahl_Psych_OPS");
        de.put(RULES_TXT_CRIT_BONUS_DAYS_DIS, "Zuschlagstage");
        de.put(RULES_TEMP_218_GK_RSA_KHAUSGABEN, "GK RSA:Ausgaben für KH");
        de.put(FALL_MAIN_FEHLER, "Basis Fall nicht vorhanden");
        de.put(DIALOG_BATCH_GROUPING_ERRORDRGPEPP, "Fehler DRG/PEPP");
        de.put(RULES_TEMP_16_HM_GESAMTMENGE, "Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.");
        de.put(RULES_CRIT_MRSA_DDD_TOOLTIP, "Daily Defined Dosis zu einem Medikament anhand PZN bzw. ATC");
        de.put(RULES_TEMP_174_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT, "Format: YYYYMMDD HH:mm");
        de.put(CASE_CW_EFFECTIVE_FROM, "CW eff. von");
        de.put(WORKFLOW_CONTEXT_MENU_UNCANCEL, "Stornierung aufheben");
        de.put(RULES_CRIT_MRSA_PZNCODE_TOOLTIP_2, "Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können.");
        de.put(RULES_TEMP_20_HM_GESAMTPREIS, "Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.");
        de.put(ORGAN_SKIN, "Haut");
        de.put(RULES_TEMP_82_ENTGELT, "Format: alphanumerisch 8-stellig (Beispiel: 48000001)");
        de.put(RULES_TXT_CRIT_PRINC_DIAG_DIS, "Hauptdiagnose");
        de.put(RULES_TXT_CRIT_SEC_DIAG_TYPE_DIS, "Sek. Diagnose: Typ");
        de.put(DISCHARGE_REASON_2_ABLE_TO_WORK_NO_NEED_RESPIRATION_WEANING, "arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung");
        de.put(CASE_MERGING_JOB_STARTED, "Zusammenführbare Fälle werden ermittelt");
        de.put(STATUS, "der Anfrage***Anfr.-Status***Aktueller Status der letzten Anfrage des Vorgangs.");
        de.put(PATIENT_WEIGHT_MEASURE_GRAM, "Gramm");
        de.put(RULES_CRIT_ACG_CODE_DIS, "ACG: ACG-Code");
        de.put(RULE_FILTER_DIALOG_RULE_CATEGORY, "Kategorie");
        de.put(INS_STATUS_RETIREES_AND_DEPENDENTS, "Rentner und Angehörige");
        de.put(CREATION_DATE_TO, "Anlagedatum bis");
        de.put(TREAT, "Behandeln");
        de.put(DRG_CODE, "DRG-Code");
        de.put(HOLIDAY, "Urlaub");
        de.put(EVENT_TYPE_PROCESS_SUBJECT_CHANGED_DESCRIPTION, "Vorgangsart geändert von {0} auf {1}");
        de.put(ADDRESS_MOBILE_NUMBER, "Mobilnummer");
        de.put(RULES_HM_GESAMTPREIS, "hm_gesamtpreis");
        de.put(DURATION_TIME, "Uhrzeit");
        de.put(DEPARTMENT_TYPE_MAIN_DEPARTMENT, "HA");
        de.put(RULES_TXT_CRIT_REMEDIES_PRESCRIPTION_DATE_DIS, "Heilmittel: Verordnungsdatum");
        de.put(ORGAN_GYNECOLOGY, "Gynäkologie");
        de.put(RULES_TXT_INTERVAL_QUARTERS, "Quartal(e)");
        de.put(CASE_DETAILS_CANCEL_REASON_CASE_MERGE, "Fallzusammenführung");
        de.put(CASE_RESOLVE_DRG, "DRG");
        de.put(RULES_TXT_ADM_WEEKDAY, "Aufnahmewochentag");
        de.put(ANTIBIOTIC_OXACILLIN_FLUCLOXACILL, "Oxacillin/Flucloxacill.");
        de.put(RULES_TXT_CRIT_CLINIC_DIS_DATE_FULL, "Klinik_Entlassungsdatum_mit_Uhrzeit");
        de.put(REQUEST_CREATION_DATE, "Anlagedatum der Anfrage***Anlagedatum***Datum, an dem die Anfrage angelegt wurde");
        de.put(COUNT_SD_FROM, "Anz. ND von");
        de.put(RULES_TXT_CRIT_ADMISSION_DOC_DIS, "Einweisender Arzt");
        de.put(MD_MASTERDATA, "MD Stammdaten");
        de.put(RULES_DOSIERUNGSEINHEIT, "Dosierungseinheit");
        de.put(RISK_AREA_PRIMARY_MISALLOC, "Primäre Fehlbelegung");
        de.put(RULES_ENTLASSENDEFACHABTEILUNG, "EntlassendeFachabteilung");
        de.put(RULES_TXT_CRIT_MEDICAMENT_PRICE_DIS, "KH Medikament: Preis");
        de.put(RULES_TEMP_227_VERSICHERTENDATEN, "GK RSA:Geschlecht");
        de.put(RULES_GK_RSA_STATIONAEREDXG, "GK_RSA_StationaereDxG");
        de.put(MDK_STATUS, "Status der Anfrage ***Anfrage-Status***Aktueller Status eines laufenden Vorgangs. Der Wert ist der Anfrage zugeordnet.Es wird die zeitlich letzte Anfrage verwendet.");
        de.put(SAME_RULE_OTHER_CAPTION, "Regel mit gleichen Ident und abweichender Bezeichnung in dem Pool vorhanden");
        de.put(RULES_TEMP_257_DIAGNOSENGRUPPEN, "GK RSA:stationäre Diagnosen");
        de.put(RULES_CRIT_MRSA_DEAD_TOOLTIP_4, "0 - sonst");
        de.put(RULES_7P_BEWILLIGUNG_PFLEGEGELD, "7P - Bewilligung Pflegegeld");
        de.put(RULES_CRIT_MRSA_DEAD_TOOLTIP_3, "1 - verstorben");
        de.put(CATALOG_DOWNLOAD_DRG_FEE, "DRG Zusatzentgelte");
        de.put(IDENT_CLASS_ID97, "Reserviert zur verwaltungsinternen freien Verwendung bei den Institutionen");
        de.put(IDENT_CLASS_ID96, "Behörden des Bundes und der Länder, Gerichte");
        de.put(ANTIBIOTIC_RIFAMPICIN, "Rifampicin+");
        de.put(RULES_CRIT_ACG_EDC_DIS, "ACG: EDC-Code");
        de.put(RULES_CASE_DISCHARGE_DATE, "Entlassungsdatum");
        de.put(IDENT_CLASS_ID95, "Krankenversicherungsträger außerhalb der gesetzlichen Krankenversicherung");
        de.put(IDENT_CLASS_ID94, "Pflegekassen außerhalb der gesetzlichen Krankenversicherung");
        de.put(IDENT_CLASS_ID93, "Beihilfestellen");
        de.put(RULES_7A_BEREUNGSLEISTUNG_BIS_30_06_2008, "7A - Bereungsleistung bis 30.06.2008");
        de.put(RULES_TXT_CRIT_NOW_TIME_TOOLTIP_1, "Die Systemzeit.");
        de.put(PROCESS_BASERATE_PEPP_VALIDTO, "Gültig bis");
        de.put(DIALOG_BATCH_GROUPING_KORROGVD, "korr. OGVD");
        de.put(FAX, "Fax");
        de.put(INPUT_NUMBER_TO, "Bis");
        de.put(RULES_TXT_CRIT_ACCOUCHEMENT_DATE_1_DIS, "Tag der Entbindung1");
        de.put(CASE_MERGING_CONDITION_ONE_DRG, "Innerhalb oberer Grenzverweildauer***Innerhalb OGVD");
        de.put(DIALOG_BATCH_GROUPING_INTENSIVCARE, "Intensivtage");
        de.put(RULES_TXT_CRIT_PROC_LOCALISATION_DIS, "OPSLokalisation");
        de.put(SETTING_SEARCH_LISTS, "Suchlisten");
        de.put(PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION_TO, "Entsch. Datum bis");
        de.put(IDENT_CLASS_ID89, "Gruppenkennzeichen zur Zusammenfassung mehrerer IK");
        de.put(RULES_CRIT_ACG_ADG_CODES_TOOLTIP, "32 nicht exkluxive Gruppen. Eine ADG ist eine Morbiditätsgruppe, die Schwere und Dauer des Zustandes des Patienten beschreibt. Aggregierte diagnostischen Gruppen. Die Bausteine des ACG-Systems. Jeder ADG-Code ist eine Gruppierung von Diagnose-Codes, die ähnlich im Hinblick auf die Schwere und Wahrscheinlichkeit der Persistenz der Gesundheitszustand im Laufe der Zeit sind.");
        de.put(WORKFLOW_DEADLINE_BILL_CORRECTION_DEADLINE, "Frist für einmalige Rechnungskorrektur");
        de.put(ANTIBIOTIC_PIPERACILLIN_TAZO, "Piperacillin+Tazo.");
        de.put(DRG_TEXT, "DRG-Text");
        de.put(DIALOG_BATCH_GROUPING_NURSINGDAYS_TOOLTIP, "Summe der Verweildauertage aller gegroupten Fälle");
        de.put(CATALOG_UPDATE_NOTIFICATION, "Auf dem Server steht ein Update der Katalogdaten zur Verfügung!");
        de.put(DISCHARGE_REASON_COMPLETED_TREATMENT_REGULARLY, "Behandlung regulär beendet");
        de.put(RULES_KOSTENGEWICHT_EFFEKTIV, "Kostengewicht_effektiv");
        de.put(LEVEL_WARNING, "Auftreten einer unerwarteten Situation");
        de.put(RULES_TXT_OP_IN_FALL, "in Fall ( ~ )");
        de.put(MDK_REPORT_CREATION_DATE, "Gutachtendatum");
        de.put(DATE_OF_BIRTH_FROM, "Geb.-Datum von");
        de.put(CATALOG_DOWNLOAD_BASERATES, "Baserates");
        de.put(FILE, "Datei");
        de.put(RULES_ALTERINJAHREN, "AlterInJahren");
        de.put(GERM_GROWTH_NO_INFORMATION, "keine Information");
        de.put(PROCESS_STATUS_OPEN, "Vorgang wird bearbeitet");
        de.put(LOGIN_PASSWORD, "Passwort");
        de.put(RULES_TAGEOHNEBERECHNUNGPROENTGELT, "TageOhneBerechnungProEntgelt");
        de.put(REPORT_DIALOG_CONTENT_TEXT, "Report wird generiert");
        de.put(WORKFLOW_DEADLINE_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE, "Frist Vorschlag Nachverfahren");
        de.put(FILTER_PROCESS_CANCEL, "Alle stornierte Vorgänge");
        de.put(RULES_TEMP_25_HM_MENGE, "Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.");
        de.put(RULES_33_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "33 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(SAP_BILLS_UPDATE_TOOLTIP, "Die Rechnung aus SAP aktualisieren");
        de.put(CREATION_DATE_FROM, "Anlagedatum von");
        de.put(SUPPL_FEE_SP, "ZP");
        de.put(RULES_TXT_CRIT_CLINIC_VWD_IN_HOURS, "Klinik: Vwd in Stunden");
        de.put(TEMPLATE_CATEGORY_MAIN, "Hauptkategorie für eine Vorlage");
        de.put(RULES_TEMP_122_ENTLASSUNGSMONAT, "Format: MM");
        de.put(RULE_TERM_NOT_COMPLETE, "Regelterm ist nicht vollständig");
        de.put(SUPPL_FEE_SF, "ZE");
        de.put(MS_OFFICE_DISABLED, "Die Verwendung von Microsoft Office wurde deaktiviert!");
        de.put(RULES_TEMP_184_KLINIK_ENTLASSUNGSUHRZEIT, "Klinische Daten: Entlassungsuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.");
        de.put(STATE_MECKLENBURG_WESTERN_POMERANIA, "Mecklenburg-Vorpommern");
        de.put(FEE_GROUP_MODEL_PROJECTS_WITH_FINAL_INVOICE, "Modellvorhaben (mit Schlussrechnung)");
        de.put(IDENT_CLASS_ID66, "Abrechnungsstellen, Rechenzentren, Rechnungsprüfstellen");
        de.put(IDENT_CLASS_ID65, "Bestattungsunternehmen");
        de.put(STATE_NORTH_RHINE_WESTPHALIA, "Nordrhein-Westfalen");
        de.put(IDENT_CLASS_ID60, "Krankentransportunternehmen, Ärzte als Leistungserbringer in der notfallärztlichen Versorgung");
        de.put(RULES_TXT_CRIT_ADMISSION_JEAR_DIS, "Aufnahmejahr");
        de.put(RULES_TEMP_265_GK_RSA_QUALIFIZIERUNGDIAGNOSENAMBULANT, "GK RSA:Ambulante Diagnosen Qualifizierung");
        de.put(RULES_COL_OPDATUM, "Datum");
        de.put(GROUP_RESULT_CODE_VALID_DUPLICATE, "Duplikat");
        de.put(RULES_GROUP_OTHERS_TOOLTIP_2, "Zeitangabe 'Jetzt'");
        de.put(WORKFLOW_CLOSE_AND_CREATE_REMINDER_NOT_UNIQUE, "Diese Funktion kann nur genutzt werden, wenn der Filter 'Art der Wiedervorlage' eindeutig, mit nur einer Auswahl, gesetzt ist.");
        de.put(BILL_TYPE_ENUM_REMINDER, "Zahlungserinnerung");
        de.put(RULES_TXT_GROUP_CARE_DATA_DIS, "Pflegedaten");
        de.put(SAME_RULE_OTHER_RULE_TYPE, "Regel mit gleichen Ident und anderem Regeltyp in dem Pool vorhanden");
        de.put(WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_ERROR, "Vorgangsnummer {0} konnte nicht storniert werden");
        de.put(RULES_CRIT_ACG_MAJOR_ADG_COUNT, "acg_HauptADGsAnzahl");
        de.put(RULES_CRIT_ACG_PHARMA_COST_BAND_DIS, "ACG: Med Kosten Gruppe");
        de.put(DRG_CORR_TYPE_NO, "Nein");
        de.put(RULES_TEMP_121_ENTLASSUNGSJAHR, "Format: YYYY");
        de.put(MENU_ROLE_CHANGE, "Aktive Rolle ändern...");
        de.put(RULES_TXT_CRIT_LOSLESS_24H_DIS, "Verweildauer kleiner 24h");
        de.put(IDENT_CLASS_ID59, "Sonstige Erbringer von Leistungen i. S. des SGB");
        de.put(RULES_2_PFLEGESTUFE_2, "2 - Pflegestufe 2");
        de.put(RULES_CRIT_MRSA_AGG_TOOLTIP_2, "Format: 1-bis 2-stellig, ganze Zahl (Beispiel 23)");
        de.put(RULES_CRIT_MRSA_AGG_TOOLTIP_1, "Vom BVA festgelegte Alters- und Geschlechtsgruppen");
        de.put(IDENT_CLASS_ID57, "Stationäre Vorsorge- und Rehabilitationseinrichtungen");
        de.put(CASE_MERGING_CASE, "Zusammengeführter Fall***Zusammengef. Fall");
        de.put(RULES_TXT_CRIT_SOLE_HIMINUMBER_DIS, "Heil- und Hilfsmittel: Hilfsmittelnummer");
        de.put(IDENT_CLASS_ID54, "Ambulante und mobile Rehabilitationseinrichtungen");
        de.put(IDENT_CLASS_ID53, "Einrichtungen für Maßnahmen der beruflichen Rehabilitation");
        de.put(IDENT_CLASS_ID52, "Vertragshäuser ohne medizinische Einrichtungen");
        de.put(IDENT_CLASS_ID51, "Alten- und Pflegeheime, Tages- und Kurzzeitpflege, Sonderschulheime, Sozialtherapeutische Zentren");
        de.put(IDENT_CLASS_ID50, "Caritative Organisationen, Diakonie- und Sozialstationen, Gemeindeschwestern, Selbsthilfegruppen, Kirchengemeinden, Stadtverwaltungen (Pflegedienste, Kranken-, Sozial- und Schwesternstationen)");
        de.put(COMMENT, "Kommentar");
        de.put(WORKINGLIST_COLUMN_DIALOG_EXPLANATION_LABEL, "Spalten Beschreibung");
        de.put(ICD_TYPE_DEPARTMENT_DISCHARGE, "Fachabteilung Entlassung");
        de.put(RULES_ENTGELTABRECHNUNGVON, "EntgeltabrechnungVon");
        de.put(EXPORT_TYPE_XML, "Xml***Xml-Format");
        de.put(MDK_PHONE_PREFIX_VALIDATE, "Ungültige Vorwahl. Bitte geben Sie einen gültigen Eintrag an.");
        de.put(RULES_TXT_CRIT_SOLE_PRICE_DAK_DIS, "Hilfsmittel: Einzelpreis");
        de.put(IDENT_CLASS_ID49, "Sonstige therapeutische Hilfspersonen, Psychologen, Psychotherapeuten, Unterrichtshilfen, Soziotherapie, Frühfördereinrichtung, Sonderpädagogen, Mobilitätstrainer, Gebärdensprachdolmetscher, Heileurythmisten, Sozialpädiatrische Zentren, Nachsorgeeinrichtungen, PEKIP");
        de.put(RULES_TEMP_5_HE_GESAMTPREIS_ALLE, "Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.");
        de.put(IDENT_CLASS_ID48, "Beschäftigungs- und Suchttherapeuten, Gestaltungs- und Kindertherapie, Ergotherapie, Künstlerische Therapie");
        de.put(IDENT_CLASS_ID47, "Kurverwaltungen");
        de.put(IDENT_CLASS_ID46, "Kranken- und Altenpfleger, Haushaltshilfen, Hauspfleger, Maschinen- und Betriebshilfsring");
        de.put(IDENT_CLASS_ID45, "Hebammen");
        de.put(IDENT_CLASS_ID44, "Krankengymnasten, Physiotherapeuten, Praxen für Physiotherapie, Sportvereine, Schwangerschaftsgymnastik, Rehabilitationssport-, Herzsport- und Behindertensportgruppen, Funktionstrainingsgruppen, Sportstudios, Reittherapie");
        de.put(MENU_SEARCH_FILTER, "Suchfilter");
        de.put(IDENT_CLASS_ID43, "Med. Bademeister, Masseure, Praxen für physikalische Therapie, Orthopäden (als Erbringer von Leistungen, z.B. Massagen), Kurbäder, Kurpacker");
        de.put(IDENT_CLASS_ID42, "Sehschulen");
        de.put(IDENT_CLASS_ID40, "Logopäden, Sprachheilbehandler, Sonderschullehrer");
        de.put(RULES_VPS_ERR_TEXT_TOOLTIP, "VPS: Fehlertext aus der Iskv");
        de.put(REMINDER_VALIDATION_WARNING_NO_RECEIVER, "Kein WV Empfänger eingetragen");
        de.put(RULES_TXT_CRIT_BIRTHDAY_TOOLTIP_1, "Das Geburtsdatum des Patienten.");
        de.put(ADMISSION_REASON_2_EMERGENCY_CASE, "Notfall");
        de.put(RULES_TEMP_190_KLINIK_IKZ, "Format: 9-stellig numerisch (Beispiel: 123456789)");
        de.put(PROCESS_FINALISATION_LOS_FINAL, "VWD Final***VWD Final***VWD der Version des Falles, welche diesem Vorgang zum Vorgangs-Abschluss zugeordnet wurde. ");
        de.put(ADMISSION_DEPARTMENT_SHORT, "Aufnehmende FAB nach §. 301***Aufn. 301***Ein 4-stelliger Code für die aufnehmende Fachabteilung nach §. 301");
        de.put(MENU_BATCH_GROUPING_DO_RULES_SIMULATE_TOOLTIP, "Bei den angeschlagenen Regeln werden die Regelempfehlungen ausgewertet und eine eventuelle Erlösdifferenz, CW-positiv und CW–negativ zusammengefasst, ausgegeben.");
        de.put(ANTIBIOTIC_MEROPENEM, "Meropenem");
        de.put(RULES_TEMP_8_HE_GESAMTPREIS, "Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)");
        de.put(IDENT_CLASS_ID39, "Podologen, med. Fußpfleger");
        de.put(RULES_TEMP_162_KLINIK_OGVD, "Format: Ganzzahlig (Beispiel 15)");
        de.put(IDENT_CLASS_ID35, "Perückenmacher (Friseure)");
        de.put(IDENT_CLASS_ID34, "Orthopädieschuhmacher, Orthopäden (als Erbringer von Leistungen, z.B. Einlagen)");
        de.put(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_REGULAR_CASE, "Integrierte Versorgung - Normalfall");
        de.put(IDENT_CLASS_ID33, "Orthopädiemechaniker, Bandagisten, Sanitätshäuser, Arzt- und Krankenhausbedarf, Stomafachhandel, Hilfsmittel");
        de.put(RULES_CRIT_ACG_UNSCALED_TOTAL_CRI_TOOLTIP, "Kostenindex für zukünftige Gesamkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG P.M. Index (PRI) für ACG P.M. für Voraussage Gesamtkosten. Die geschätzten Gesamtkosten (einschließlich Apothekenkosten) für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0) wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalyse stellen Vergleiche zu den nationalen Normen zur Verfügung.");
        de.put(IDENT_CLASS_ID32, "Hörgeräte-Akustiker, HNO-Ärzte (als Erbringer von Leistungen, z.B. Hörgeräteversorgung)");
        de.put(RULES_TEMP_247_DIAGNOSENGRUPPEN, "GK RSA:ambulante Diagnosen");
        de.put(IDENT_CLASS_ID31, "Augenoptiker, Augenärzte (als Erbringer von Leistungen, z.B. Kontaktlinsen)");
        de.put(IDENT_CLASS_ID30, "Apotheken");
        de.put(NO_SEARCH_RESULTS, "keine Suchergebnisse");
        de.put(PROCESS_BASERATE_PEPP_VALUE, "Wert");
        de.put(RULES_TEMP_168_FALL_NUMERIC_10, "Fall.Numeric10");
        de.put(TP_301_INFORMATION_KEY_30_BEK20, "Im Vorverfahren wurde ein Falldialog durchgeführt, jedoch keine Einigung erzielt und infolge der maximal zulässigen Prüfquote, erfolgt keine Prüfanzeige durch den MD");
        de.put(RULES_UNTERSUCHUNGSDATUM, "Untersuchungsdatum");
        de.put(READONLY_DOC_ITEM_AOP, "AOP");
        de.put(RULES_TEMP_149_SEKDIAGNOSE, "z.B. N08.3* Glomeruläre Krankheiten bei Diabetes mellitus oder U81! Bakterien mit Multiresistenz gegen Antibiotika");
        de.put(IDENT_CLASS_ID29, "Medizinische und technische Labore, Röntgen- und Zahntechnik, Institut für Pathologie, Strahlen- und Hygieneinstitute");
        de.put(RULES_TEMP_72_ENTGELTE, "Rechnung: Rechnungsdatum");
        de.put(RULES_GENDER_MASCULINE, "m");
        de.put(CATALOG_MENU_UPDATE_CHANGES_FOUND, "{0} Änderungen um {1}");
        de.put(IDENT_CLASS_ID27, "Polikliniken, Integrierte Versorgung, Praxiskliniken");
        de.put(RULES_CRIT_AMBU_CARE_PROVIDED_TO_TOOLTIP, "Der letzte Tag der aufgebrachten Leistung");
        de.put(IDENT_CLASS_ID26, "Krankenhäuser, Krankenhausapotheken");
        de.put(RULES_TEMP_202_GK_RSA_ATCCODE, "Wird mit der Satzart 400 übermittelt. Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Angegeben werden die von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATCs. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04");
        de.put(IDENT_CLASS_ID22, "Privatärztliche Verrechnungsstellen");
        de.put(BILL_STATUS, "Status");
        de.put(IDENT_CLASS_ID21, "Kassenzahnärztliche Vereinigungen und Zahnärzte einschl. selbstabrechnender Zahnärzte (z.B. Gutachter)");
        de.put(TREATMENT, "Behandlung");
        de.put(FILE_ALREADY_EXISTS, "Datei {0} ist bereits vorhanden");
        de.put(IDENT_CLASS_ID20, "Kassenärztliche Vereinigungen und Ärzte einschl. selbstabrechnender Ärzte (z.B. Gutachterärzte)");
        de.put(RULES_TEMP_207_GK_RSA_PZNGESAMTDOSIS, "Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können. Ist mit Hilfe der Tabelle des WiDO zu ermitteln. Die Summe aller Mengen der Medikamente, bei denen ein PZN ? Code eingetragen ist.");
        de.put(SEARCH_ABORTED, "Suche wurde vom Benutzer abgebrochen");
        de.put(RULES_TXT_GROUP_OTHERS_DIS, "Sonstige");
        de.put(RULES_LABORBESCHREIBUNG, "Laborbeschreibung");
        de.put(ROW_NUM_TO, "Zeilennummer bis");
        de.put(EVENT_TYPE_CASE_ADDED, "Fall hinzugefügt: Typ: {0}, Fallnummer: {1}***Fall hinzugefügt");
        de.put(DISCHARGE_REASON_COMPLETED_TREATMENT_FOR_OTHER_REASONS, "Behandlung aus sonstigen Gründen beendet");
        de.put(TP_301_INFORMATION_KEY_30_BEK11, "Vorverfahren wurde kein Falldialog durchgeführt und infolge der maximal zulässigen Prüfquote erfolgt keine Prüfanzeige durch den MD (KAIN)");
        de.put(TP_301_INFORMATION_KEY_30_BEK10, "Im Vorverfahren erfolgte keine Datenkorrektur/Ergänzung und infolge der maximal zulässigen Prüfquote, erfolgt keine Prüfanzeige durch den MD");
        de.put(RULE_COLUMN_IDENT, "Identnummer***Identnummer***Identifikationsnummer der Regel");
        de.put(RULES_TEMP_70_VERLEGUNGSUHRZEIT, "Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten");
        de.put(RULES_CRIT_ACG_MAJOR_RXMG_TOOLTIP, "Hauptgruppen Morbiditäts Codes, Medikamten-Basis: Basis-Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten.");
        de.put(DIALOG_BATCH_GROUPING_UNKCMI, "unkorr. CMI");
        de.put(IDENT_CLASS_ID19, "Träger der Gemeinschaftsaufgaben und Medizinischer Dienst der Krankenversicherung (MD) sowie Medizinischer Dienst der Sozialversicherung (MDS)");
        de.put(IDENT_CLASS_ID18, "Pflegekassen der Krankenversicherungsträger");
        de.put(IDENT_CLASS_ID17, "Gesundheitsämter");
        de.put(IDENT_CLASS_ID16, "Private Krankenversicherungen");
        de.put(IDENT_CLASS_ID15, "Versorgungsämter und Orthopädische Versorgungsstellen");
        de.put(IDENT_CLASS_ID14, "Bundesagentur für Arbeit");
        de.put(RULES_KLINIK_SK, "Klinik_SK");
        de.put(REMINDER_HIGH_PRIORITY, "hohe Priorität");
        de.put(IDENT_CLASS_ID13, "Sozialhilfeträger");
        de.put(IDENT_CLASS_ID12, "Unfallversicherungsträger");
        de.put(RULES_TEMP_159_KLINIK_ADRG, "Format: Alphanumerisch (Beispiele: A11 oder B75)");
        de.put(IDENT_CLASS_ID11, "Rentenversicherungsträger");
        de.put(RULES_CRIT_ACG_DEPRESSION, "acg_Depression_vorhanden");
        de.put(IDENT_CLASS_ID10, "Krankenversicherungsträger");
        de.put(PROCESS_FINALISATION_LOS_DIFF, "VWD Diff***VWD Diff***Differenz der Verweildauer der initialen zugeordneten Fallversion (KIS) und der ggf. geänderten Checkpoint-Fallversion, zugeordnet beim Vorgangsabschluss (VWD Initial - VWD Final = VWD DIFF ) ");
        de.put(REVIEW_DEADLINE_DATE, "EV Frist bis");
        de.put(RULES_28_VORSTATIONAER_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "28 - vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(SETTING_SESSION, "Sitzungen");
        de.put(RULES_GLEICHENPROZEDURENANZAHL, "GleichenProzedurenAnzahl");
        de.put(RULE_NO_CONTENT_FOUND, "Regel hat kein Rumpf");
        de.put(BILL_POSITIONS, "Rechnungspositionen");
        de.put(REVIEW_COMPLETED_DATE, "abgeschloßen am");
        de.put(PROCESS_FINALISATION_PENALTY_FEE_TO, "Strafzahlung bis");
        de.put(TP_301_INFORMATION_KEY_30_BEK00, "Beendigung des Prüfverfahrens aufgrund Datenkorrektur – MD nicht notwendig");
        de.put(RULES_TEMP_212_AUSGABEN, "GK RSA:Ausgaben für Ärzte");
        de.put(RULES_17_VORSTATIONAER_OHNE_SCHLUSSRECHNUNG, "17 - vorstationär ohne Schlussrechnung");
        de.put(ADMISSION_REASON_TRANSITIONAL_CARE, "Übergangspflege");
        de.put(HOSPITALIZATION_DIAGNOSIS, "Einweisungsdiagnose");
        de.put(RULES_TEMP_56_FALL_NUMERIC_9, "Fall.Numeric9");
        de.put(REQUEST_ADDED_TOOLTIP, "Aktualisieren Sie diese Anfrage");
        de.put(MENU_USER_CHANGE, "Benutzer wechseln...");
        de.put(RULES_TXT_CRIT_CLINIC_PROCEDURE_DIS, "Klinik: Prozedur");
        de.put(CASE_MERGING_JOB_FAILED, "Gescheitert");
        de.put(MDK_MAIL_ADDRESS_VALIDATE, "Ungültige Mail-Adresse. Bitte geben Sie einen gültigen Eintrag an.");
        de.put(RULES_TEMP_270_GK_RSA_DXG, "GK RSA:DxG");
        de.put(EVENT_TYPE_DOCUMENT_ADDED, "Dokument hinzugefügt: Typ: {0}, Dateiname: {1}***Dokumente hinzugefügt");
        de.put(PROCESS_MAIN_CASE_ERROR, "Hauptfall des Vorgangs ist nicht gesetzt. Bitte fügen Sie einen Hauptfall zu diesem Vorgang hinzu!");
        de.put(ADDRESS_CITY, "Stadt");
        de.put(BILL_FISCAL_YEAR, "Jahr");
        de.put(PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE_TO, "EV Antwortfrist KK bis");
        de.put(SETTING_PROTOCOL_FILE, "Protokolldatei");
        de.put(DISCHARGE_REASON_CASE_STATEMENTS_WHEN_SWITCHING_BETWEEN_INPATIENT_AND_DAYCARE_TREATMENT, "Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung");
        de.put(RULES_KLINIK_ENTLASSUNGSGRUND, "Klinik_Entlassungsgrund");
        de.put(RULE_VALIDATION_RULE_NO_CONTENT, "die Regel hat keine Inhalt");
        de.put(RULES_TXT_CRIT_INTENSIV_STAY_DIS, "Intensivverweildauer");
        de.put(SEARCH_LIST_CHILD_TYPE_BETWEEN, "Bereich");
        de.put(REVENUE_PEPP_SUPPLFEE, "ZP-Erlös");
        de.put(RULES_TEMP_90_GROUPERRELEVANTEPROZEDUR, "Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)");
        de.put(DOCUMENT_TYPE, "Dokumententyp");
        de.put(RULES_TEMP_110_AUFNAHMEJAHR, "Format: YYYY");
        de.put(RULE_TABLE_NOTE, "Tabellennotiz");
        de.put(AUDIT_DATA_RECO_CORR_DEADLINE, "Frist Datensatzkorrektur");
        de.put(RULES_TXT_OP_OR, "oder ( || )");
        de.put(PROCESS_FINALISATION_NO_RIGHT, "Keine Berechtingung zum Vorgangabschloss.");
        de.put(RULES_TXT_INTERVAL_MONTHS, "Monat(e)");
        de.put(CONTEXT_MENU_OPENPATIENT, "Gesundheitszustand öffnen");
        de.put(RULES_TXT_CRIT_SEC_DIAG_TOOLTIP_1_1, "Die Sekundär-Diagnose ist in ein Code aus der Kreuz-Stern-Systematik (der Sterncode) oder ein anderer optionaler Kode.");
        de.put(RULES_CRIT_ACG_HEART_FC_CONDITION_DIS, "ACG: Herzinsuffizienz vorhanden");
        de.put(FEE_GROUP_NUB_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "NUB ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(WORKFLOW_NUMBER, "Vorgangsnummer***Vorgangsnr.***Nummer des Vorganges");
        de.put(PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_DAYS, "Tage bis Antwort Vorverfahren, Antwort Vorverf.***Antwort");
        de.put(DAY_FRIDAY, "Freitag***Fr");
        de.put(RULES_GROUP_DIAG_GROUPS_MRSA_TOOLTIP, "Diagnosengruppen");
        de.put(RULES_TXT_CRIT_SOLE_PRICE_DIS, "Heil- und Hilfsmittel: Einzelpreis");
        de.put(RULES_CRIT_MRSA_HOSP_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben für KH zu einem Versicherten (SA 700)");
        de.put(RULES_TEMP_108_AUFNAHMEDATUM_MIT_UHRZEIT, "Die Uhrzeit der Aufnahme wird mitberücksichtigt");
        de.put(ICD_TYPE_TREATMENT, "Behandlung");
        de.put(VALIDATION_CASE_NUMBER_FOR_PATIENT_INVALID, "Leistungsnummer ist für den Patient nicht valide");
        de.put(CATALOG_SK_PRE, "Fehler-PEPP und sonstige PEPP");
        de.put(DEATAIL_CASE_DATA, "Detailed case data");
        de.put(MDK_ZIP_CODE_VALIDATE, "Ungültige Postleitzahl. Bitte geben Sie einen gültigen Eintrag an.");
        de.put(RULES_TXT_CRIT_REMEDIES_PRICE_DIS, "Heilmittel: Einzelpreis");
        de.put(RULES_TXT_CRIT_REMEDIES_ALL_PRICE_DIS, "Heilmittel: Gesamtpreis");
        de.put(BATCHPROCESSING_LAST_PROCESS, "Letzte Batchverarbeitung: {0}");
        de.put(RULES_TEMP_30_ATCCODE, "Format: alphanumerisch (Beispiel: B01AX04)");
        de.put(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DATE_TOOLTIP_1, "Datum, an dem ein Arzt das Medikament verordnet hat.");
        de.put(RULE_FILTER_DIALOG_POOL, "Regelpool");
        de.put(CATALOG_DRG_COSTWEIGHT, "Kostengewicht (DRG)");
        de.put(PROCESS_FINALISATION_CW_CARE_DIFF_TO, "Pfl. CW Diff bis");
        de.put(BILL_CORRECTION_DEADLINE_FROM, "Frist Rech.-Korrektur von");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_9, "21 - Kostenträgerwechsel - Normalfall");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_8, "07 - Notfall");
        de.put(BILL_CORRECTION_DEADLINE_TO, "Frist Rech.-Korrektur bis");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_7, "06 - Kriegsbeschädigten-Leiden / BVG-Leiden");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_6, "04 - Hinweis auf Einwirkung von äußerer Gewalt");
        de.put(RULES_CRIT_ACG_EDC, "acg_EDC_Code");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_5, "03 - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)");
        de.put(VALIDATION_WARNING_NO_ORIGIN_HOSPITAL, "Hinweis: Aufnahmegrund ist eine Verlegung. Es sollte ein einweisendes Krankenhaus angegeben werden!");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_4, "02 - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)");
        de.put(RULES_CRIT_ADM_2_TYPE_TOOLTIP_3, "01 - Normalfall");
        de.put(GROUP_RESULT_CODE_VALID_GENDER_CONFLICT, "Geschlechtskonflikt");
        de.put(GROUPER_OPS_RES_TYPE_NOR_INVALID_LOC_AND_DATE, "NonOR-Prozedur mit Konflikt Zusatzkennzeichen und OPS-Datum");
        de.put(RULES_VERSICHERTER_VERSICHERTENSTATUS, "Versicherter_Versichertenstatus");
        de.put(RULES_TEMP_156_KLINIK_PROZEDUR, "Klinische Daten: Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.");
        de.put(AGE_YEARS, "Jahre");
        de.put(DAY_CARE, "Teilstationär");
        de.put(ADMISSION_WEIGHT_TO, "Gewicht bis");
        de.put(FILTER, "Filter");
        de.put(LEVEL_TRACE, "ausführlicheres Debugging, Kommentare");
        de.put(RULES_TXT_PCCL_DIS, "PCCL");
        de.put(CATALOG_DIALOG_DIAGNOSES, "Diagnosen");
        de.put(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_PZN_DIS, "KH Medikament: Gesamtpreis für PZN");
        de.put(REMINDER_SUBJECT, "WV Art***WV Art***Art einer Wiedervorlage in diesem Vorgang ");
        de.put(PROCESS_FINALISATION_REVENUE_DIFF_TO, "Erlös Diff bis");
        de.put(RULE_COLUMN_RELEVACE, "Relevanz***Relevanz***Relevanz der Regel für Bewertung eines Falles");
        de.put(FEE_GROUP_PEPP_ANNEX_1A_INPATIENT_AND_2A_PARTIAL_INPATIENT_WITH_FINAL_INVOICE, "PEPP Anlage 1a (vollstat) und 2a (teilstat) (mit Schlussrechnung)");
        de.put(GROUP_RELEVANT_CODE_USING_BOTH_OPD_BY_A_CONSTRUCT_AS_ALSO_OTHERWISE, "Verwendung sowohl durch ein OPD-Konstrukt wie auch anderweitig (also 1+2)");
        de.put(RULES_TXT_OP_LT, "kleiner ( < )");
        de.put(AGE_IN_DAYS, "Alter in Tagen***Alter Tage***Alter des Patienten in Tagen, zum Zeitpunkt der Aufnahme");
        de.put(LOGIN_ERROR_MESSAGE, "Ein Fehler ist aufgetreten . Bitte überprüfen Sie diese möglichen Gründe:");
        de.put(FEE_GROUP_NUB, "NUB");
        de.put(MDC, "Hauptdiagnosegruppe/Strukturkategorie***MDC/SK***MDC(DRG) Hauptdiagnosegruppe - engl.: Major Diagnostic Category (MDC) bezeichnet die Kapiteleinteilung des deutschen DRG-Kataloges. Die Hauptdiagnosegruppen gliedern die DRGs nach dem Organsystem oder der Ursache der Erkrankung.SK(PEPP)- ist eine Kategorie, die vornehmlich über strukturelle Kriterien wie z.B. die Fachabteilung definiert wird");
        de.put(INS_SHORT_HEK, "HEK");
        de.put(CASE_STATUS_CLOSED, "Geschlossen");
        de.put(RULES_TEMP_150_SEKDIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        de.put(RULES_CRIT_ACG_HYPERTENSION_DIS, "ACG: Bluthochdruck vorhanden");
        de.put(RULES_TEMP_185_KLINIK_ENTLASSUNGSUHRZEIT, "Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten");
        de.put(PROCESS_FINALISATION_RESULT_DELTA_FROM, "Erg. Delta von");
        de.put(MDK_REPORT_RECEIVE_DATE, "Eingang Gutachten");
        de.put(DELETE_SERVICE, "Wollen Sie die Leistung wirklich entfernen?");
        de.put(WORKFLOW_CLOSE_AND_CREATE_REMINDER, "Alle in der Liste angezeigten Wiedervorlagen abschließen und neu anlegen ");
        de.put(RULES_TXT_CRIT_PSYCH_OPS_NUMBER_TOOLTIP, "Anzahl Psych-OPS");
        de.put(RULE_MESSAGE_CATALOG_TRANSFER_DIALOG_WARNING, "In der Regel befinden sich noch potenzielle Fehler aus der Prüfung mit den Überleitungstabellen {0} zu {1}.Durch den Speicher-Vorgang akzeptieren Sie diese Fehler und im weiteren werden diese nicht mehr angezeigt!Trotzdem speichern?");
        de.put(CASECREATION_SUCCESS, "Fall wurde erfolgreich angelegt!");
        de.put(CASE_TYPE_PRE_ADMISSION_TERMINATORS, "vorstat. Abbrecher");
        de.put(RULES_TXT_CRIT_ENTGELTANZAHL_DIS, "Entgeltanzahl je Entgelt");
        de.put(RULES_TEMP_61_AUFNEHMENDEFACHABTEILUNG, "z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.");
        de.put(PROCESS_FINALISATION_CLOSING_DATE_FROM, "Abschlussdatum von");
        de.put(RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_TOOLTIP_2, "Format: alphanumerisch (Beispiel: B01AX04)");
        de.put(AUDIT_QUOTA_RESULT_INFORMATION, "Die Prüfquote für die Kasse {0} für das Quartal {1}/{2} wurde noch nicht erreicht.Details:Anzahl abgerechnete vollstationäre Fälle: {3}davon zur Beanstandung eingeleitet (Istwert): {4}Max. zulässige Beanstandungen gemäß Prüfquote (Sollwert): {5}Festgesetzte Prüfquote für dieses Quartal: {6} %");
        de.put(BILL_KIND, "Fakturaart");
        de.put(RULES_TXT_CRIT_CLINIC_DIS_REASON_DIS, "Klinik: Entlassungsgrund");
        de.put(ADMISSION_MODE_DAY_CARE, "Teilstationäre Versorgung(für teilstationäre DRG-Fallpauschale)");
        de.put(VALIDATION_WARNING_PSEUDO_DEPARTMENT, "Pseudo-Fachabteilungen sollten nicht eine oder mehrere Diagnosen haben!");
        de.put(DOCUMENTATION_RISK_DESCRIPTION_TEXT_2, "Die auf der Basis der Regelverletzungen geschätzten Werte sind in den grauen Felder vorgegeben.");
        de.put(DOCUMENTATION_RISK_DESCRIPTION_TEXT_1, "Hier können Sie die Risiken und Verlustvolumen der eventuellen MD-Anfrage/-Kürzung angeben. ");
        de.put(BOOKMARKS, "Textmarken");
        de.put(RULES_TEMP_35_GESAMTATCPREIS, "Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)");
        de.put(BILL_POSITION_AMOUNT, "Menge");
        de.put(RULES_CRIT_MRSA_DRUGSTORE_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben für Apotheken zu einem Versicherten (SA 700)");
        de.put(REVENUE_MATH_DRG_CATALOG_LAYOUT, "Katalog-Erlös: DRG-Baserate {0}{1} x KatalogCW {2}");
        de.put(PROCESS_FINALISATION_CW_CARE_INITIAL, "Pflege CW Initial***Pfl. CW Initial***Bewertungsrelation der Pflege der KIS-Version des Falles,welche diesem Vorgang initial zugeordnet wurde.");
        de.put(DOCUMENT_TYPE_MDK_REPORT, "MD-Gutachten");
        de.put(RULES_TXT_CRIT_SOLE_FULL_PZN_NUMBER_DIS, "Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelnummer");
        de.put(RULES_CRIT_ACG_AGE_TOOLTIP, "Alter aus den ACG Daten");
        de.put(DOCUMENTATION_RISK_FULL_RISK, "Gesamtrisiko");
        de.put(RULES_KLINIK_NEBENDIAGNOSE, "Klinik_Nebendiagnose");
        de.put(RULES_GESAMTPZNDOSIERUNG, "GesamtPZNDosierung");
        de.put(NO_DISCHARGE_REASON_3_FOUND, "Entlassungsgrund 3 des Falles ist nicht gesetzt");
        de.put(ADMISSION_REASON_HOSPITALISATION_TO_ORGAN_REMOVAL, "Stationäre Aufnahme zur Organentnahme");
        de.put(MDK_PROCESS_START_DATE, "Einleitung Prüfverfahren Kasse");
        de.put(CASE_TYPE_PSY, "Psychosomatik");
        de.put(STATE_FOREIGN_COUNTRY, "Ausland");
        de.put(RULES_CRIT_ACG_ASTHMA_CONDITION, "acg_Asthma_vorhanden");
        de.put(RISK_PERCENT_TOTAL, "Risiko in %");
        de.put(PROCESS_FINALISATION_REVENUE_INITIAL, "Erlös Initial");
        de.put(RULES_KLINIK_PEPP, "Klinik_PEPP");
        de.put(ADMISSION_DEPARTMENT, "KH interner Kurzname der aufn. FAB***aufn. FAB (int.)***Krankenhausinterner Kurzname der aufnehmenden Fachabteilung");
        de.put(RULES_TXT_OP_IN, "enthalten ( IN  )");
        de.put(WARD_GROUPING, "Stations Grouping");
        de.put(ADMISSION_MODE_SURGEON, "B-Op.******Belegoperateur");
        de.put(MDK_DOCUMENT_REQUEST, "angefordert am");
        de.put(RULES_7C_BEREUNGSLEISTUNG_MAXIMALBETRAG, "7C - Bereungsleistung Maximalbetrag");
        de.put(RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT, "acg_Anzahl_chronischer_Erkrankungen");
        de.put(LUMP_SUM, "Pauschale");
        de.put(VERSIONCONTROLL_ERROR, "Löschen nicht möglich.");
        de.put(RULES_HM_PREIS, "hm_preis");
        de.put(RULES_TXT_CRIT_CLINIC_CASE_NUMBER_DIS, "Klinik: Fallanzahl");
        de.put(RULE_FILTER_DIALOG_POOL_YEAR, "Jahr");
        de.put(ADMISSION_REASON, "Aufnahmegrund (Stelle 1 u. 2)***Aufn.-Gr.1.u.2.***§301 Aufnahmegrund 1. und 2. Stelle");
        de.put(CASEFEE_COUNT, "Anzahl");
        de.put(RULES_TEMP_147_OPSDATUM, "Format: YYYYMMDD; nur in Verbindung mit einem Prozedurenkode sinnvoll");
        de.put(RULES_CRIT_ACG_SEX_DIS, "ACG: Geschlecht");
        de.put(ACG_AGE_BAND_70_74, "70-74");
        de.put(RULES_CRIT_ACG_MAJOR_RXMG_DIS_1, "ACG: MEDCs auf Basis der Medikamente");
        de.put(SUPPL_FEE_DF, "ET");
        de.put(RULES_CRIT_MRSA_DIAG_HOSP_TOOLTIP_1, "Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code");
        de.put(PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_TO, "Frist Antwort bis");
        de.put(RULES_TXT_CRIT_PEPP_TOOLTIP_1, "Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik");
        de.put(MS_WORD_NOT_FOUND, "Microsoft Word wurde nicht gefunden!");
        de.put(STATE_BREMEN, "Freie Hansestadt Bremen");
        de.put(TEXT_TEMPLATE_PROCESS_FINALISATION, "Vorgangsabschluss Kontext");
        de.put(RULES_GK_RSA_ALTER, "GK_RSA_Alter");
        de.put(RULES_TEMP_176_FALL_STRING_8, "Fall.String8");
        de.put(RULE_TABLE_MESSAGE_CATALOG_TRANSFER_DIALOG_WARNING, "In der Regeltabelle befinden sich noch potenzielle Fehler aus der Prüfung mit den Überleitungstabellen {0} zu {1}.Durch den Speicher-Vorgang akzeptieren Sie diese Fehler und im weiteren werden diese nicht mehr angezeigt!Trotzdem speichern?");
        de.put(TEMPLATE_ERROR_TITLE, "Fehler");
        de.put(ADD_CASE_TITLE_EXTENDED, "Manuelle Falleingabe: {0} {1}/{2}");
        de.put(TREATING_DEPARTMENT_SHORT, "Behandelnde FAB nach §. 301***Behandl. 301***Ein 4-stelliger Code für die behandelnde Fachabteilung nach §. 301");
        de.put(RULES_TXT_OP_GT, "größer ( > )");
        de.put(MENU_BATCH_GROUPING_SUPPLEMENTARY_FEE, "Zusatzentgelte verteilen ");
        de.put(RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT_TOOLTIP, "Anzahl chronischer Erkrankungen (Basis EDC-Gruppe): Ein Zählimpuls von ADGs die Triggerdiagnoses enthalten, die einen chronischen Zustand mit bedeutenden erwarteten Dauer- und Resoruceanforderungen anzeigen.");
        de.put(BILL_POSITION_BILL_NO, "Faktura");
        de.put(AUDIT_TELEPHONE, "Telefon");
        de.put(RULES_TEMP_63_BEHANDELNDEFACHABTEILUNG, "z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.");
        de.put(INS_SHORT_KNAPPSCHAFT, "Knappschaft");
        de.put(PROCESS_FINALISATION_MAIN_CASE_STORNO, "Vorgang wird ohne Vergleich geschlossen, da der Basisfall storniert ist.");
        de.put(RULES_PEPP_GROUPERSTATE, "PEPP");
        de.put(RULES_TXT_CRIT_HOS_CASE_NUMBER_TOOLTIP_1_1, "Das krankenhausinterne Kennzeichen des Versicherten.");
        de.put(ROLES, "Rollen");
        de.put(CASE_MERGING_CONDITION_TWO_PEPP, "Innerhalb 120 Tage***Innerhalb 120 T.");
        de.put(EVENT_TYPE_ACTION_CHANGED, "Aktion geändert: Typ: {0}***Aktion geändert");
        de.put(RULES_TEMP_98_OBERE_GRENZVERWEILDAUER, "Format: Ganzzahlig (Beispiel 15)");
        de.put(EVENT_TYPE_REMINDER_REMOVED, "Wiedervorlage gelöscht: Typ: {0}***Wiedervorlage gelöscht");
        de.put(RULES_TEMP_258_DIAGNOSENGRUPPEN, "GK RSA:Stationäre HMG relevante DxG");
        de.put(EVENT_NAME_KAIN, "KAIN-Nachricht");
        de.put(REVIEW_INSURANCE_NUMBER, "IKZ der Versicherung");
        de.put(RULE_VALIDATION_SUGG_CHECK_BOTH, "Regelvorschlag und Bedignung prüfen");
        de.put(CASE_MERGING_CONDITION_SEVEN_DRG, "Katalog-Ausnahme***Kat.-Ausnahme");
        de.put(EVENT_TYPE_REMINDER_ASSIGNED, "Wiedervorlage zugewiesen***Wiedervorlage zugewiesen");
        de.put(RULES_CRIT_ACG_DIABETES, "acg_Diabetes_vorhanden");
        de.put(RULES_SEKDIAGNOSETYPE, "SekDiagnoseType");
        de.put(TP_301_INFORMATION_KEY_30_NVI01, "Vorschlag eines Nachverfahrens, begründete Stellungnahme");
        de.put(RULE_TYPE_FOUND_IN_DB, "Regeltyp gefunden in DB");
        de.put(FILTER_BELOW, "{0} Filter weiter unten");
        de.put(PROCESS_FINALISATION_REVENUE_INIT, "Erlös Initial");
        de.put(PROCESS_FINALISATION_LOS_DIFF_TO, "VWD Diff bis");
        de.put(EVENT_TYPE_INKA_SENT, "INKA Nachricht gesendet***INKA Nachricht gesendet");
        de.put(RULES_TEMP_266_GK_RSA_AMBULANTEDXG, "GK RSA:Ambulante DxG");
        de.put(TEMPLATE_WAIT_NOTIFICATION_TITLE, "Word-Dokument wird demnächst geöffnet!");
        de.put(RULES_TEMP_172_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT, "Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.");
        de.put(TEMPLATE_GENERATION, "Aus Vorlage erstellen");
        de.put(RULES_TEMP_205_GK_RSA_PZNCODE, "Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918.");
        de.put(RULES_TEMP_163_KLINIK_UGVD, "Format: Ganzzahlig (Beispiel 2)");
        de.put(RULES_TEMP_38_PZNCODE, "Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918");
        de.put(RULES_TXT_CRIT_INSTITUTE_DIS, "Institutionskennzeichen");
        de.put(RULES_TXT_OP_IN_TABLE, "in Tabelle ( @ )");
        de.put(ADDRESS_DIFFER, "Abweichende Anschrift");
        de.put(CATALOG_DOWNLOAD_HOSPITALS, "Krankenhäuser");
        de.put(RULES_GROUP_FEES_TOOLTIP_23, "Zuschlags_CW");
        de.put(RULES_GROUP_FEES_TOOLTIP_22, "Summe der Entgelte");
        de.put(FEE_GROUP_IV_FULL_INPATIENT_AND_DAY_PATIENT_WITH_FINAL_INVOICE, "IV vollstat und teilstat (mit Schlussrechnung)");
        de.put(SECOND_NAME, "Nachname");
        de.put(DIAGNOSIS, "Diagnose");
        de.put(RULES_GK_RSA_GESCHLECHT, "GK_RSA_Geschlecht");
        de.put(VALIDATION_WARNING_DISCHARGE_REASON_34_MATCH_NOT_12, "Entlassungsgrund2 erscheint unplausibel");
        de.put(CASE_RESOLVE_SECUNDARY_ICD, "s. ICD");
        de.put(PROCESS_MODIFICATION_USER, "Letzter Bearbeiter des Vorganges***Änderung von***Name des Bearbeiter der den Vorgang als letztes bearbeitet hat");
        de.put(CASE_RESOLVE_SUPPLEMENTARY_VALUE, "ZE-Betrag ");
        de.put(REVENUE_MATH_DRG_DAY_FEE, "Entgelt-Erlös: Tagesentgelt {0}{1} x Tag(e) {2}");
        de.put(RULES_CRIT_MRSA_FORMAT_MONEY_TOOLTIP, "Format: bis zu 7stellige Zahl mit 2 Nachkommastellen (Beispiel: 5895,25)");
        de.put(RULES_9_UNBEKANNT, "9 - unbekannt");
        de.put(RISK_PLACE_OF_REG, "Ort der Risikoerfassung");
        de.put(RULES_CRIT_ACG_DEPRESSION_DIS, "ACG: Depression vorhanden");
        de.put(WORD_TEMPLATES, "MS-Word Templates");
        de.put(VALIDATION_CATALOGDATA_NO_HOSPITAL_EXISTS, "Das hinterlegte Krankenhaus wurde in der Zwischenzeit aus dem Katalog entfernt!");
        de.put(RULES_GROUP_FEES_TOOLTIP_14, "Grouperrelevant: Prozedur");
        de.put(RULES_GROUP_FEES_TOOLTIP_13, "Grouperrelevant: Diagnose");
        de.put(MS_OFFICE_VERSION, "Die Microsoft Office Version");
        de.put(RULE_SUGG_TERM_NOT_COMPLETE, "Vorschlasterm ist nicht vollständig");
        de.put(RULES_GROUP_FEES_TOOLTIP_11, "Entgeltliste: Entgeltanzahl je Entgelt");
        de.put(RULES_GROUP_FEES_TOOLTIP_10, "Entgeltliste: Entgeltabrechnung bis");
        de.put(DIR_OPEN_IN_EXPLORER_TEXT, "Klicken um den Ordner im Windows Explorer zu öffnen");
        de.put(DIALOG_BATCH_GROUPING_NDI, "NDI");
        de.put(REMINDER_COMMENT, "WV Kommentar***WV Kommentar***Kommentar der Wiedervorlage.");
        de.put(RULES_TXT_CRIT_LABOR_UNIT_DIS, "Labor-Einheit");
        de.put(CATALOG_DOWNLOAD_PROGRESS_DOWNLOAD_FINISHED, "Herunterladen wurde beendet...");
        de.put(MDK_DOCUMENT_DELIVER_DEADLINE_TO, "Frist Versand bis");
        de.put(DISCHARGE_REASON_START_EXTERNAL_STAY_WITH_ABSENCE_THROUGH_MIDNIGHT, "Beginn externer Aufenthalt mit Abwesenheit über Mitternacht");
        de.put(RULES_TEMP_129_KRANKENKASSE, "Format: 9-stellig numerisch (Beispiel: 123456789)");
        de.put(RULES_CRIT_ACG_CODE, "acg_Code");
        de.put(INS_SHORT_AOK, "AOK");
        de.put(MS_OUTLOOK_NOT_FOUND, "Microsoft Outlook wurde nicht gefunden!");
        de.put(RULES_VPS_SEVERITY_LEVEL_DIS, "VPS: Schweregrad");
        de.put(RULES_TXT_CRIT_HEALTH_ENSURANCE_TOOLTIP_1, "Kennzeichnung der Krankenkasse. Siehe Institutionskennzeichen IK.");
        de.put(CASE_MANAGEMENT_WARNING_SELECT_DEPARTMENT, "Wählen Sie eine Fachabteilung/(Station)!");
        de.put(RULES_TEMP_281_VERSICHERTER_ALTER, "Format: Ganzzahlig (Beispiel 5)");
        de.put(PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE_FROM, "EV Antwortfrist KK von");
        de.put(GERM_GROWTH_ISOLATED, "ganz vereinzelt");
        de.put(BATCHPROCESSING_RESULT, "Ergebnis Batchverarbeitung");
        de.put(SUPPLEMENTARY_VALUE, "ZE-Betrag");
        de.put(RULES_TEMP_133_URLAUB, "Eine Beurlaubung liegt vor, wenn ein Patient mit Zustimmung des behandelnden Krankenhausarztes die Krankenhausbehandlung zeitlich befristet unterbricht, die stationäre Behandlung jedoch noch nicht abgeschlossen ist. Wird ein Patient beurlaubt, sind die vollständigen Urlaubstage, d. h. nicht der Tag des Urlaubsantritts bzw. - Endes, in der Rechnung auszuweisen. Vollständige Urlaubstage fließen nicht in die Berechnung der Verweildauer ein. Die Abrechnung erfolgt über die Entgeltgruppe 43.");
        de.put(DIALOG_BATCH_GROUPING_DAYPRECARE_TOOLTIP, "Anzahl der Fälle, die nicht vollstationär aufgenommen wurden ");
        de.put(CATALOG_AOP_CATEGORY, "Kategorie");
        de.put(RULES_TXT_CRIT_DIAG_TOOLTIP_1, "Siehe Hauptdiagnose, Nebendiagnose. Eine Diagnose beinhaltet keine weitere Unterteilung, insofern ein Oberbegriff. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.");
        de.put(CASE_MERGING_CONDITION_TWO_DRG, "Innerhalb 30 Tage***Innerhalb 30 T.");
        de.put(OPEN_PROCESSES, "Geöffnete Vorgänge");
        de.put(DISCHARGE_REASON_2, "Entlassungsgrund (Stelle 3)***Entl.-Gr.3");
        de.put(RULES_TEMP_117_ENTLASSUNGSDATUM, "Die Uhrzeit der Entlassung wird nicht berücksichtigt");
        de.put(HOURS_OF_MECHANICAL_VENTILATION, "Beatmungsdauer");
        de.put(FUNCTIONS, "Funktionen");
        de.put(PROCESS_FINALISATION_RISK, "Risiko");
        de.put(EVENT_OPERATION_REMOVE, "Entfernen");
        de.put(TP_301_INFORMATION_KEY_30_KP000, "Kodierprüfung");
        de.put(FILE_ARCHIVE_ERROR_CAN_NOT_WRITE, "Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil die Schreibrechte fehlen: {1}");
        de.put(CATALOG_DOWNLOAD_PROGRESS_SYNCHRONIZATION_FINISHED, "Synchronisation mit Server abgeschlossen");
        de.put(RULES_TEMP_10_HE_MENGE, "Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.");
        de.put(ADMISSION_REASON_2_COST_UNIT_REGULAR_CASE, "Kostenträgerwechsel - Normalfall");
        de.put(CATALOG_DOWNLOAD_PROGRESS_CATALOG_WILL_DOWNLOAD, "Lade {0} herunter");
        de.put(CATALOG_PEPP_SC, "SK {0}");
        de.put(FLOWRATE_STATUS_TEXT_PATIENT, "Patienten pro Sekunde: {0}");
        de.put(RULES_TEMP_234_GK_RSA_VERSICHERTENTAGE, "GK RSA:Versichertentage");
        de.put(RULES_CRIT_PCCL_TOOLTIP_9, "5 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016");
        de.put(RULES_CRIT_ACG_UNSCALED_PHARMA_CRI, "acg_MediKostenIndexUngewichtet");
        de.put(RULE_FILTER_DIALOG_RULE_SUGGESTION, "Vorschlag");
        de.put(RULES_CRIT_PCCL_TOOLTIP_6, "4 - äußerst schwere Komplikationen und Komorbiditäten (CC)");
        de.put(RULES_CRIT_PCCL_TOOLTIP_5, "3 - schwere Komplikationen und Komorbiditäten (CC)");
        de.put(REVENUE_MATH_DRG_CARE_GRADE, "Pflege-Baserate {0}{1} von {2} bis {3}: {4} Tage ");
        de.put(RULES_CRIT_PCCL_TOOLTIP_4, "2 - mäßig schwere Komplikationen und Komorbiditäten (CC)");
        de.put(RULES_CRIT_PCCL_TOOLTIP_3, "1 - leichte Komplikationen und Komorbiditäten (CC)");
        de.put(RULES_CRIT_PCCL_TOOLTIP_2, "0 - keine Komplikationen und Komorbiditäten (CC)");
        de.put(GROUPER_MDC_OR_SK_PSYCHO_INPATIENT_CARE, "Psychiatrie, vollstationär***PSY");
        de.put(RULES_GROUP_DRGS_DATA_HOSP_DATA_DIS, "DRG-Ergebnis");
        de.put(VALIDATION_MASTERDATA_NO_REMINDER_TYPES_FOUND, "In den Stammdaten wurden keine Arten der Wiedervorlage hinterlegt!");
        de.put(RULES_VPS_TEST_OBJECT_DIS, "VPS: Prüfgegenstand");
        de.put(RULES_TEMP_277_GK_RSA_STATIONAEREHMGRELEVANTEDXG, "GK RSA:Stationäre HMG relevante DxG");
        de.put(ICD_TYPE_HOSPITALIZATION, "Einweisung");
        de.put(RULES_TEMP_260_DIAGNOSENGRUPPEN, "GK RSA:stationäre Hauptdiagnosen");
        de.put(RULES_24_PFLEGEHILFSMITTEL_MIT_LEIHWEISER_UEBERLASSUNG, "24 - Pflegehilfsmittel mit leihweiser Überlassung");
        de.put(DIAGNOSIS_REF_TYPE_ADDITIONAL_TO, "Zusatzdiagnose zu gewählter ICD");
        de.put(EVENT_OPERATION_OPEN, "Öffnen");
        de.put(RULES_79_VOLLSTATIONRE_PFLEGE_IN_BEHINDERTENEINRICHTUNG, "79 - Vollstationre Pflege in Behinderteneinrichtung");
        de.put(ACTION_CREATE, "Aktion erstellen");
        de.put(RULES_TXT_CRIT_PSYCH_ONE_2_ONE_ADULTS_TOOLTIP, "Anzahl Stunden 1:1 Behandlung Erwachsene");
        de.put(ORGAN_ENT, "HNO");
        de.put(ARTIFICIAL_VENTILATION_FROM, "Beatm.-Std. von");
        de.put(REVENUE_PEPP_DAILY_DAY, "ET-Erlös");
        de.put(RULES_TEMP_248_DIAGNOSENGRUPPEN, "GK RSA:Ambulante Diagnosen Leistungsquartal");
        de.put(RULES_CRIT_ACG_ISCHEMIC_HEART_DC_DIS, "ACG: Koronare Herzkrankheit vorhanden");
        de.put(RULES_CRIT_ACG_RESCALED_PHARMA_CRI_DIS, "ACG: Index Medikamentenkosten, gewichtet");
        de.put(EVENT_TYPE_PROCESS_USER_SET_DESCRIPTION, "{1} als Bearbeiter gesetzt");
        de.put(CASE_MERGING_CONDITION_SIX_PEPP, "Beide teil- bzw. vollstationär***Beide teil- bzw. vollstat.");
        de.put(NEGOTIABLE, "Verhandelbar");
        de.put(RULES_LABOREINHEIT, "Laboreinheit");
        de.put(DAY_SATURDAY, "Samstag***Sa");
        de.put(WORKFLOW_DEADLINE_CASE_DIALOG_BILL_CORRECTION_DEADLINE, "Frist Falldialog Rechnungskorrektur");
        de.put(RULES_CRIT_ACG_OB_PUL_DISEASE_CONDITION_DIS, "ACG: chronische obstruktive Lungenerkrankung vorhanden");
        de.put(RULES_70_PFLEGESACHLEISTUNG, "70 - Pflegesachleistung");
        de.put(ORIGIN_HOSPITAL, "IKZ einweis. KH***IKZ einweis. KH***IKZ einweisendes Krankenhaus");
        de.put(PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE, "Frist bis Abschluss der MD-Prüfung***Frist MD-Abschl.***Datum, bis zu der die Überprüfung und Bewertung durch den MD abgeschlossen sein muss");
        de.put(WORKFLOW_DEADLINE_MDK_DOCUMENT_DELIVER_DEADLINE, "Abgabefrist Unterlagen");
        de.put(VALIDATION_CATALOGDATA_NO_INSURANCES_FOUND, "In den Katalogen wurden keine Krankenkassen hinterlegt!");
        de.put(RULES_TXT_CRIT_CLINIC_DISCH_DATE_DIS, "Klinik: Entlassungsdatum");
        de.put(ADMISSION_REASON_2_WAR_INVALIDS_AND_DISABLED_PEOPLE, "Kriegsbeschädigten-Leiden / BVG-Leiden");
        de.put(CASE_TYPE_PIA, "PIA");
        de.put(RULE_VALIDATION_YEAR_NOT_VALID, "Das Jahr ist nicht gültig");
        de.put(SELECT, "Auswählen");
        de.put(ANTIBIOTIC_AMIKACIN, "Amikacin");
        de.put(PROCESS_TOPIC, "Vorgangsart***Vorgangsart***Art des Vorganges ");
        de.put(RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        de.put(DISCHARGE_REASON_2_ABLE_TO_WORK_VENTILATED_NO_SPECIFIED, "arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV");
        de.put(LOGIN_LOGIN, "Einloggen");
        de.put(REVIEW_SENT_DATE, "gesendet am");
        de.put(MDK_DEPARTMENT_VALIDATE, "Ungültige MD-Dienststelle. Bitte geben Sie einen gültigen Eintrag an.");
        de.put(RULE_HAS_ERRORS, "Regel hat Validierungsfehler");
        de.put(CASE_RESOLVE_RULES_ID, "Nummer");
        de.put(RULES_TXT_CRIT_ADRG_TOOLTIP_1, "Basis - DRG: (Adjacent Diagnosis Related Group) DRG ohne letzte Stelle (für Schweregrad).");
        de.put(RULES_MPREIS, "MPreis");
        de.put(PROCESS_DOES_NOT_EXIST_WITH_REASON, "Der Vorgang mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.");
        de.put(COUNTRY_SWITZERLAND, "Schweiz");
        de.put(RULES_TXT_CRIT_PSYCH_ONE_2_ONE_INFANTS, "Anzahl_Stunden_eins2eins_Behandlung_Kinder");
        de.put(LEVEL_FINEST, "Ausgabe feinster Informationen");
        de.put(PROCESS_CREATE_BUTTON, "Vorgang neu anlegen");
        de.put(RULES_TEMP_53_JETZT, "Format: hh:mm:ss");
        de.put(INFORMATION, "Information***I");
        de.put(RULES_VERSICHERTER_GESCHLECHT, "Versicherter_Geschlecht");
        de.put(LOS_ALTERATION_FROM, "Tage sim. von");
        de.put(ADMISSION_CAUSE_TRANSFERRING_WITHIN_24H, "Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden)");
        de.put(WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_SUCCESS, "Die Stornierung für die  Vorgangsnummer {0} ist erfolgreich  aufgehoben ");
        de.put(DIALOG_BATCH_GROUPING_KORRTRANS, "korr. Verl.");
        de.put(PROCESS_PREVIEW_ANSWER, "Frist Vorverfahren Antwort");
        de.put(COURT_FILE_NUMBER, "Aktenzeichen (Gericht)***Akt.-Z. (Gericht)***Aktenzeichen bei Gericht");
        de.put(RULES_GK_RSA_AMBULANTEKRANKHEITSNUMMER, "GK_RSA_AmbulanteKrankheitsnummer");
        de.put(RULES_24_ZUM_VERBRAUCH_BESTIMMTE_PFLEGEHILFSMITTEL, "24 - zum Verbrauch bestimmte Pflegehilfsmittel");
        de.put(GERM_GROWTH_NONE, "nicht nachgewiesen");
        de.put(UNBILLED_DAYS_FROM, "TOB von");
        de.put(VALIDATION_ERROR_NO_CASE_NUMBER, "Geben sie eine gültige Fallnummer ein!");
        de.put(RULE_CALCULATION, "Berechnung");
        de.put(RULES_TEMP_141_AUFNAHMEDIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        de.put(DEPARTMENT_TITLE, "Abteilung § 301*");
        de.put(FILTER_REMEINDER_CLOSE, "Alle abgearbeiteten");
        de.put(ICD_TYPE_DEPARTMENT_TREATMENT, "Fachabteilung Behandlung");
        de.put(PROCESS_PREVIEW_DATA_REC_CORRECTION, "Frist Datensatzkorrektur");
        de.put(RULES_TXT_CRIT_BONUS_CW_DIS, "CW Zuschlag");
        de.put(PROCESS_REVIEW_DEADLINE_SEND_ON_DATE_FROM, "EV Nachsendefrist von");
        de.put(RULES_CRIT_MRSA_DXG_TOOLTIP_2, "Format: bis zu 3-stellig, ganze Zahl (Beispiel: 464)");
        de.put(RULES_CRIT_MRSA_DXG_TOOLTIP_1, "Grundlage der Klassifikation ist die Gruppierung von ICD-Diagnosen zu klinisch homogenen diagnostischen Gruppen - den DxGruppen (DxG).");
        de.put(RULES_CRIT_AMBU_CARE_PROVIDED_TO_DIS, "Pflegedaten: Pflegeleistung bis");
        de.put(NO_DISCHARGE_DATE_FOUND, "Entlassungsdatum des Falles ist nicht gesetzt");
        de.put(RULES_KLINIK_AUFNAHMEDATUM, "Klinik_Aufnahmedatum");
        de.put(PROCESS_FINALISATION_REVENUE_DIFF, "Erlös Diff");
        de.put(RULES_CRIT_ACG_CODE_TOOLTIP_1, "Format: Alphanumerisch Beispiel(4100)");
        de.put(RULES_TEMP_167_KLINIK_ENTGELTART, "Format: alphanumerisch 8-stellig (Beispiel: 48000001)");
        de.put(RULES_CRIT_MRSA_MEDGROUP_TOOLTIP_2, "Format: 1 bis 2stellig, ganze Zahl (Beispiel: 18)");
        de.put(RULES_TEMP_55_ALTERINTAGEN, "Format: Ganzzahlig (Beispiel 5)");
        de.put(ARTIFICIAL_RESPIRATION, "Beatmungsstunden");
        de.put(RULES_CRIT_MRSA_MEDGROUP_TOOLTIP_1, "80 RSA relevante Krankheiten, die Von Bundesversicherungsamt definiert wurden. 3799 ICD-10 Codes wurden den Krankheiten zugeordnet (24_Anhang_4 der BVA Festlegungen)");
        de.put(INPUT_TIME_ERROR, "{0} ist keine korrekte Zeit");
        de.put(CASE_MERGING_DO_MERGE, "Fallzusammenführung simulieren");
        de.put(RULES_GROUP_CODING_DATA_HOSP_DATA_DIS, "Kodierung");
        de.put(DRG_EXTERN, "DRG KIS");
        de.put(RULES_CRIT_ACG_EDC_TOOLTIP_1, "Format: Alphanumerisch (Beispiel MUS06)");
        de.put(DAYS_INTENSIV, "Tage Intensiv");
        de.put(RULES_CRIT_ACG_COST_TOOLTIP_1, "Format: Fließkommazahl Beispiel(125000,00)");
        de.put(ADDRESS_TYPE_RESIDENTIAL, "Wohnanschrift");
        de.put(STATE_SAARLAND, "Saarland");
        de.put(READONLY_DOC_ITEM_HELP_FILE_NAME, "hilfefunktion_cpx");
        de.put(VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_MAIN_CATEGORY_FOUND, "In den Stammdaten wurden keine Vorlagetypen für die Hauptkategorie hinterlegt!");
        de.put(RULES_TXT_CRIT_SOLE_FULL_PRICE_DIS, "Heil- und Hilfsmittel: Gesamtpreis");
        de.put(RULES_TEMP_34_GESAMTMPREIS, "Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)");
        de.put(RULES_TXT_CRIT_INSURANCE_STATUS_DIS, "Versichertenstatus");
        de.put(GROUPER_STATUS_INVALID_WEIGHT, "Ungültiges Aufnahmegewicht");
        de.put(FEE_GROUP_DMP_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "DMP ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(RULES_CRIT_ACG_EDC_TOOLTIP, "Zugeordnete EDC-Code (Expanded Diagnosis Cluster): EDC gruppieren verschiedene Krankheiten und Zustände ausschließlich auf der Basis von ICD-10-Codes und stellen einen klinischen Zusammenhang zum Case-Mix her. Alle ermittelten EDC-Codes für diesen Patienten. Die EDC Taxonomie identifiziert Patienten mit bestimmten Krankheiten oder Symptomen");
        de.put(RULES_SUPERGROUP_HOSP_CASE_TOOLTIP, "Krankenhaus-Einzellfall");
        de.put(MENU_USER_STATUSTEXT, "Benutzername: {0}");
        de.put(ADD_CASE_SEARCH_HOSPITAL_OPTIONEN, "Krankenhaus - weitere Suchkriterien");
        de.put(RULES_CRIT_MRSA_AGE_TOOLTIP_2, "Format: ganze Zahl, bis zu 3stellig");
        de.put(ADD_CASE_SEARCH_INSURANCE_OPTIONEN, "Krankenkasse - weitere Suchkriterien");
        de.put(RULES_CRIT_MRSA_AGE_TOOLTIP_1, "Alter aus der Satzart 100 im Berichtsjahr");
        de.put(CATALOG_DOWNLOAD_DOCTORS, "Ärzte");
        de.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_9, "55-69");
        de.put(ADMISSION_CAUSE_INSTRUCTION_BY_DENTIST, "Einweisung durch Zahnarzt");
        de.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_8, "45-54");
        de.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_7, "35-44");
        de.put(ADMISSION_REASON_2_COST_UNIT_CHANGE_EMERGENCY_CASE, "Kostenträgerwechsel - Notfall");
        de.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_6, "18-34");
        de.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_5, "12-17");
        de.put(DISCHARGE_REASON_DISMISSAL_AT_THE_END_OF_RECORDING_IN_THE_PREVIOUS_YEAR, "Entlassung zum Jahresende bei Aufnahme im Vorjahr");
        de.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_4, "05-11");
        de.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_3, "00-04");
        de.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_2, "<0");
        de.put(RULE_COLUMN_STATUS, "Fehlerart***Fehlerart***Fehlerart(Fehler, Warnung, Information)");
        de.put(RULES_DIAGNOSETYPE, "DiagnoseType");
        de.put(MODE_OF_ADMISSION, "Erbringungsart");
        de.put(PROCESS_PREVIEW_PROCESS_TOPIC, "Vorgangsart");
        de.put(INS_SHORT_TKK, "TK");
        de.put(PROCESS_FINALISATION_LOS_FINAL_FROM, "VWD Final von");
        de.put(FILTER_PROCESS_CANCEL_NOT, "Alle nicht stornierte Vorgänge");
        de.put(PROCESS_COMPLETION_INITAL_VALUES, "Werte initial");
        de.put(ORGAN_PSYCHOSOCIAL, "Psychosozial");
        de.put(CASES, "Fälle");
        de.put(DOCUMENTATION_FULL_WASTE, "Verlustvol. in € (ges.)***Verlustvol. in € (ges.)***Gesamtes Verlustvolumen in Euro");
        de.put(FEE_GROUP_APPENDIX_3_WITHOUT_FINAL_INVOICE, "Anlage 3 ohne Schlussrechnung");
        de.put(FILE_OPEN_IN_EXPLORER_TEXT, "Klicken um die Datei im Windows Explorer zu öffnen");
        de.put(RULES_ANZAHLPROZEDUREN, "AnzahlProzeduren");
        de.put(EVENT_TYPE_DOCUMENT_REMOVED, "Dokument entfernt: Typ: {0}, Dateinamen: {1}***Dokument entfernt");
        de.put(RULES_23_BPFLV_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "23 - BPflV ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(RULES_TEMP_145_NEBENDIAGNOSE, "Eine Krankheit oder Beschwerde, die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.");
        de.put(PROCESS_FINALISATION_RESULT, "Vorgangsergebnis");
        de.put(DISCHARGE_REASON_INTERNAL_RELOCATION, "Interne Verlegung");
        de.put(MENU_DATABASE_CHANGE_VALIDATION_DB_SAME, "Bitte eine unterschiedliche Datenbank wählen");
        de.put(LOS, "VWD");
        de.put(RULES_CRIT_MRSA_FULL_REVENUE_TOOLTIP_1, "Summe aller Erlöse aus den HMGs, AGGs, EMGs");
        de.put(RULES_TEMP_170_KLINIK_AUFNAHMEDATUM, "Die Uhrzeit der Aufnahme wird nicht berücksichtigt");
        de.put(PROCESS_FINALISATION_SAVED_MONEY_FROM, "Verlustvol. von");
        de.put(DRG_CORR_TYPE_DEDUCTION_TRANSFER_DISCHARGE, "Abzug Entlassung Verlegung");
        de.put(RULES_TEMP_58_FALL_STRING_6, "Fall.String6");
        de.put(CASE_MERGING_START_PROCESS, "Fälle ermitteln");
        de.put(RULES_CRIT_ACG_HOS_DOMINANT_COUNT_DIS, "ACG: Anzahl ADGs mit hoher KRH-Wahrscheinlichkeit");
        de.put(CASE_MERGING_CONDITION_ONE_PEPP, "Innerhalb 21 Tage***Innerhalb 21 T.");
        de.put(PROCESS_FINALISATION_CW_CARE_DIFF, "Pflege CW Diff***Pfl. CW Diff***Differenz der Bewertungsrelation der Pflege der initialen zugeordneten Fallversion (KIS) und der ggf. geänderten Checkpoint-Fallversion,zugeordnet beim Vorgangsabschluss (Pflege CW Initial - Pflege CW Final = Pflege CW Diff ).");
        de.put(RULES_CRIT_MRSA_AMBULANT_DISEASE_NUMBER_TOOLTIP, "Krankheitsgruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden");
        de.put(RULES_TXT_CRIT_SEPARATION_DAY_TIME_TOOLTIP_1, "Uhrzeit, zu der der Patient am letzten Tag des Krankenhausaufenthaltes entlassen worden ist.");
        de.put(RULES_CRIT_ACG_ARTHRITIS_CONDITION, "acg_Arthritis_vorhanden");
        de.put(RULES_GK_RSA_EXTBLUTREINIGUNGAUSGABEN, "GK_RSA_ExtBlutreinigungAusgaben");
        de.put(PROCESS_PREVIEW_CLOSED, "Frist Vorverfahren-Abschluss");
        de.put(ICD_TYPE_POSTOPERATIVE, "Postoperativ");
        de.put(RULES_DSA_PRIM_SEC_LIST_MODEL_DIAGNOSE, "Diagnose");
        de.put(RULES_CRIT_ACG_TOTAL_COST, "acg_Gesamtkosten");
        de.put(WORKFLOW_STATE, "Status des Vorgangs***Vorgangsstatus");
        de.put(EVENT_TYPE, "Ereignistyp");
        de.put(MENU_GROUPER_SETTINGS, "Grouper Einstellungen");
        de.put(RULES_CRIT_MRSA_OTHER_SERVICES_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben für Heil- und Hilfsmittel zu einem Versicherten (SA 700)");
        de.put(RULES_GK_RSA_APOTHEKENAUSGABEN, "GK_RSA_ApothekenAusgaben");
        de.put(RULES_7G_ERSTBERATUNG, "7G - Erstberatung");
        de.put(SAME_RULE_OTHER_ERR_TYPE, "Regel mit gleichen Ident und anderem Regelverletzungstyp in dem Pool vorhanden");
        de.put(RULES_TXT_CRIT_ENTGELTANZAHL_TOOLTIP_1, "Wie oft das einzelne Entgelt abgerechnet wird.");
        de.put(PROCESS_FINALISATION_DRG_FINAL, "DRG Final***DRG Final***DRG/PEPP der Version des Falles, welche diesem Vorgang zum Vorgangs-Abschluss zugeordnet wurde. ");
        de.put(UNBILLED_DAYS, "Tage ohne Berechnung***TOB");
        de.put(BILL_TYPE_ENUM_2_WARNING, "2. Mahnung");
        de.put(RULES_GK_RSA_ATCCODE, "GK_RSA_ATCCode");
        de.put(BILL_OPEN_ITEM_FISCAL_YEAR, "Jahr");
        de.put(CATALOG_DIALOG_SEARCH, "Suchen...");
        de.put(RULES_SUPERGROUP_DATA_CASE_TOOLTIP, "Krankenhausdaten");
        de.put(GROUPER_OPS_RES_TYPE_NOR_INVALID_DATE, "NonOR-Prozedur mit Konflikt OPS-Datum ");
        de.put(ORGAN_GASTROINTESTINAL, "Gastrointestinal");
        de.put(CASE_MERGING_CASE_ORGINAL, "Original Fall***Org.");
        de.put(RULES_TXT_CRIT_DIAG_LOC_DIS, "Diagnose: Lokalisation");
        de.put(ADMISSION_DATE_FOR_2013, "Aufnahmedatum des Falles vor {0}");
        de.put(RULES_TEMP_57_GEWICHT, "Format: Ganzzahlig (Beispiel 2500)");
        de.put(RULES_ENTGELTABRECHNUNGBIS, "EntgeltabrechnungBis");
        de.put(MDK_FAX, "Fax");
        de.put(RULES_CRIT_ACG_CRI_TOOLTIP_1, "Format: Fließkommazahl (Beispiel 0,639023466)");
        de.put(DAYS_UNBILLED_COMMENT_DIALOG, "Hinweis");
        de.put(VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_SUB_CATEGORY_1_FOUND, "In den Stammdaten wurden keine Vorlagetypen für die 1. Unterkategorie hinterlegt!");
        de.put(RULES_CRIT_ACG_MEDC, "acg_MEDC_Code");
        de.put(RULES_CRIT_ACG_FRAILTY_FLAG, "acg_Gebrechlichkeits-Indikator");
        de.put(ACG_AGE_BAND_65_69, "65-69");
        de.put(CASE_STATUS_SUGGESTION, "Vorschlag");
        de.put(RULES_TXT_CRIT_CASE_NUMERIC_3_DIS, "Fall.Numeric03");
        de.put(DOCUMENT_PATH, "Dokumentenpfad");
        de.put(CASE_RESOLVE_RULES_DRGSIMULATION, "DRG Simulation***DRG Sim.");
        de.put(RULES_VPS_SEVERITY_LEVEL_TOOLTIP, "VPS: Schweregrad des Fehlers aus der Iskv");
        de.put(CASE_CW_EFFECTIVE_TO, "CW eff. bis");
        de.put(CASE_TYPE_OTHER, "Andere");
        de.put(PROCESS_DEADLINE_EXPIRED, "Frist abgelaufen");
        de.put(EVENT_TYPE_PROCESS_SUBJECT_DELETE_DESCRIPTION, "Vorgangstyp {0} entfernt");
        de.put(PROCESS_FINALISATION_CW_CARE_INITIAL_FROM, "Pfl. CW Initial von");
        de.put(RULES_TEMP_24_HM_MENGE, "Format: numerisch (Beispiel: 5)");
        de.put(BEGE_DIRECT_PHONE_NO, "Durchwahl");
        de.put(FEE_GROUP_MODEL_PROJECTS_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(CATALOG_DOWNLOAD_PROGRESS_CATALOG_DOWNLOADED, "{0} wurde heruntergeladen");
        de.put(RULES_CRIT_MDC_TOOLTIP_30, "PRE - PRÄ - MDC");
        de.put(CASE_RESOLVE_RULES_PEPPSIMULATION, "PEPP Simulation***PEPP Sim.");
        de.put(CONTINUE, "Weiter");
        de.put(RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        de.put(NOT_DEFINED_CASE_TYPE, "Typ des Falles ist unbekannt(DRG oder PEPP)");
        de.put(RULES_ANZAHLABTEILUNGEN, "AnzahlAbteilungen");
        de.put(WORKING_LIST_COLUMNS, "Spalten");
        de.put(MENU_USER_CHANGE_VALIDATION_DB_SELECTION, "Bitte eine Datenbank wählen");
        de.put(RULES_TEMP_177_FALL_STRING_9, "Fall.String9");
        de.put(RULES_TEMP_192_KLINIK_VERWEILDAUER, "Format: Ganzzahlig (Beispiel 2)");
        de.put(VALIDATION_WARNING_DISCHARGE_REASON_12_MATCH_NOT_34, "Entlassungsgrund erscheint unplausibel");
        de.put(DELETE_ERROR_CASE_MAIN_CASE, "Löschen einer Leistung mit einem Hauptfall ist nicht möglich.");
        de.put(RULES_CRIT_MDC_TOOLTIP_29, "25 - Teilstationäre pädiatrische Diagnostik und Behandlung");
        de.put(CASE_STATUS_IN_PROGRESS, "In Bearbeitung");
        de.put(RULES_CRIT_MDC_TOOLTIP_28, "24 - Sonstige DRGs");
        de.put(RULES_CRIT_MDC_TOOLTIP_27, "23 - Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens");
        de.put(RULES_TXT_REQUEST_DISWARD, "Station");
        de.put(MAIN_AUDIT_REASON, "Hauptprüfgrund");
        de.put(RULES_CRIT_MDC_TOOLTIP_26, "22 - Verbrennungen");
        de.put(CHECKRESULT_RESULT, "Ergebnis Fallprüfung");
        de.put(RULES_CRIT_MDC_TOOLTIP_25, "21B - Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten");
        de.put(REPORT_OPEN, "Report anzeigen");
        de.put(RULES_CRIT_MDC_TOOLTIP_24, "21A - Polytrauma");
        de.put(RULES_CRIT_MDC_TOOLTIP_23, "20 - Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen");
        de.put(RULES_TXT_CRIT_MEDICAMENT_PZN_CODE_DIS, "KH Medikament: PZN-Code");
        de.put(RULES_31_MODELLVORHABEN_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "31 - Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(RULES_CRIT_MDC_TOOLTIP_22, "19 - Psychische Krankheiten");
        de.put(RULES_CRIT_MDC_TOOLTIP_21, "18B - Infektiöse und parasitäre Erkrankungen");
        de.put(RULES_CRIT_MDC_TOOLTIP_20, "18A - HIV");
        de.put(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_TOOLTIP_1, "Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat.");
        de.put(VERSION_ADD_CONFIRM, "Wollen Sie eine neue Version von diesem Fall anlegen?");
        de.put(ADMISSION_DEPARTMENT_301_NAME, "§301-Name der FAB***aufn. FAB***§301-Name der aufnehmenden Fachabteilung");
        de.put(PROCESS_REVIEW_DEADLINE_DATE_FROM, "EV Frist bis von");
        de.put(RULES_CHECKRESULT_TYP_OPS, "OPS");
        de.put(RULES_CRIT_MDC_TOOLTIP_19, "17 - Hämatologische und solide Neubildungen");
        de.put(RULES_CRIT_MDC_TOOLTIP_18, "16 - Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems");
        de.put(RULES_CRIT_MDC_TOOLTIP_17, "15 - Neugeborene");
        de.put(RULES_CRIT_MDC_TOOLTIP_16, "14 - Schwangerschaft, Geburt und Wochenbett");
        de.put(RULES_CRIT_MDC_TOOLTIP_15, "13 - Krankheiten und Störungen der weiblichen Geschlechtsorgane");
        de.put(REVIEW_START_DATE, "eingeleitet");
        de.put(RULES_CRIT_MDC_TOOLTIP_14, "12 - Krankheiten und Störungen der männlichen Geschlechtsorgane");
        de.put(RULES_CRIT_MDC_TOOLTIP_13, "11 - Krankheiten und Störungen der Harnorgane");
        de.put(RULES_CRIT_MDC_TOOLTIP_12, "10 - Endokrine, Ernährungs- und Stoffwechselkrankheiten");
        de.put(RULES_CRIT_MDC_TOOLTIP_11, "09 - Krankheiten und Störungen an Haut, Unterhaut und Mamma");
        de.put(RULES_CRIT_MDC_TOOLTIP_10, "08 - Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe");
        de.put(DISCHARGE_REASON_2_ABLE_TO_WORK, "arbeitsfähig entlassen");
        de.put(RULES_TXT_CRIT_CLINIC_UGVD, "Klinik: uGVD");
        de.put(WORKFLOW_STATE_ARCHIVED, "archiviert");
        de.put(WEBAPP_OPEN_BTN, "Konfiguration des checkpoint x (Web App )");
        de.put(RULE_COLUMN_CAPTION, "Bezeichnung***Bezeichnung***Bezeichnung der Regel");
        de.put(GROUP_RESULT_PDX_VWXY_PDX_CODE, "V-,W-,X-,Y-Kode als Hauptdiagnose");
        de.put(MDK_DOCUMENT_DELIVER_DEADLINE_DAYS, "Tage bis Versand MD-Unterlagen***Unterlagen MD***Anzahl der Tage bis zum Fristablauf, an dem die vom MD angeforderten Unterlagen an den MD geliefert werden müssen");
        de.put(GERM_GROWTH_AFTER_ENRICHMENT, "nach Anreicherung");
        de.put(PROCESS_FINALISATION_CW_INITIAL, "CW Initial***CW Initial***Bewertungsrelation der KIS-Version des Falles, welche diesem Vorgang initial zugeordnet wurde.");
        de.put(ADMISSION_CAUSE_COMPANION, "Begleitperson");
        de.put(UNBILLED_DAYS_TO, "TOB bis");
        de.put(RULES_TXT_CRIT_REMEDIES_PRESCRIPTION_DATE, "he_Verordnungsdatum");
        de.put(RISK_EDITOR_RISK_WASTE_VALUE, "Verlust-Risiko***Verl.-R.***Prozentualer-Wert für die Wahrscheinlichkeit, dass es im Zuge einer Anfrage zu einer Rechnungskürzung kommt");
        de.put(MDK_AUDIT_COMPLETION_DEADLINE_FROM, "Frist Vv Abschluss von");
        de.put(CATALOG_DRG_NEGO_REVENUE, "Vereinbartes Entgeld pro Tag {0}{1}, {2} Tag(e) ({3}{4})");
        de.put(FILE_SAVE, "Datei speichern");
        de.put(DIALOG_BATCH_GROUPING_RULES_ERROR, "Fehler");
        de.put(RULES_07_DAK_INTERNE_ENTGELTE, "07 - DAK-interne Entgelte");
        de.put(REMINDER_REMOVED_TOOLTIP, "Siehe die Details einer Wiedervorlage");
        de.put(PROCESS_DATE, "Datum");
        de.put(VALIDATION_ERROR_INVALID_DEPARTMENT, "Bezeichnung der Fachabteilung ist nicht korrekt!");
        de.put(PROCESS_CLOSED_TOOLTIP, "Siehe Details zu diesem Vorgang");
        de.put(GROUP_RESULT_CODE_VALID_AGE_CONFLICT, "Alterskonflikt");
        de.put(RULES_TXT_CRIT_SOLE_FULL_HPN_PRICE_DAK_DIS, "Hilfsmittel: Gesamtpreis für Hilfsmittelpositionsnummer");
        de.put(RULES_EINWEISENDESKRANKENHAUS, "EinweisendesKrankenhaus");
        de.put(RULES_TXT_INTERVAL_OGVD, "OGVD");
        de.put(RULES_CRIT_ACG_MAJOR_RXMG, "acg_HRxMG_Codes");
        de.put(RULES_CRIT_ACG_RENAL_FC_DIS, "ACG: Niereninsuffizienz vorhanden");
        de.put(RULES_TEMP_103_TAGEOHNEBERECHNUNGPROENTGELT, "Format: Ganzzahlig (Beispiel 3)");
        de.put(DISCHARGE_REASON_EXTERNAL_INSTALLATION_FOR_PSYCHIATRIC_TREATMENT, "Externe Verlegung zur psychiatrischen Behandlung");
        de.put(GROUPER_OPS_RES_TYPE_SRG_INVALID_LOC_AND_DATE, "SRG mit Konflikt Zusatzkennzeichen und OPS-Datum");
        de.put(GROUP_RESULT_PDX_VALID_PDX_CODE, "Gültige Hauptdiagnose");
        de.put(ACG_AGE_BAND_35_44, "35-44");
        de.put(DOCUMENTATION_MENU_IS_ACTIVE, "Ist Aktiv");
        de.put(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_DIS, "KH Medikament: Gesamtpreis");
        de.put(RULES_TXT_INTERVAL_ADM_DATE, "Aufnahmedatum");
        de.put(HISTORY_SECTION, "Historie");
        de.put(DISCHARGE_REASON_DISMISSAL_BEFORE_RESUMING_WITH_RECLASSIFICATION_FOR_COMPLICATION, "Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation");
        de.put(MDK_AUDIT_COMPLETION_DEADLINE, "Frist Abschluss MD-Prüfung");
        de.put(NO_RULE_TYPE_FOUND_4_RULE, "in der XML - Regel ist Regeltype definiert, der micht in DB gefunden ist und micht importiert wurde");
        de.put(MDK_SUBSEQUENT_PROCEEDING_DATE_TO, "Nachverfahren bis ");
        de.put(ICD_TYPE_DISCHARGE_AMBULANT, "Entlassung - ambulant");
        de.put(DISCHARGE_REASON_DISMISSAL_FOR_START_STATION_EQUIVALENT, "Beginn eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung)");
        de.put(WORKFLOW_DEADLINE_ANSWER_DEADLINE_COMMENT, "Frist für eine Antwort in der Prüfanfrage Typ.");
        de.put(RULES_TXT_CRIT_ADMISSION_MONTH_TOOLTIP_1, "Monat, in den der erste Behandlungstag fällt.");
        de.put(RULES_TEMP_182_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT, "Die Uhrzeit der Entlassung wird mitberücksichtigt");
        de.put(RULES_TEMP_197_ARZNEIMITTEL, "GK RSA:DDD");
        de.put(MENU_CLOSE, "Schließen");
        de.put(PROCESS_BASERATE_TOOLTIP, "Baserates ermittelt von {0} mit dem Aufnahmedatum {1}");
        de.put(RULES_TEMP_71_ENTGELTE, "Rechnung: Rechnungsart");
        de.put(MENU_DATABASE_STATUSTEXT, "Datenbank: {0}");
        de.put(JOB_STATUS_STOPPING, "Wird beendet");
        de.put(DOCUMENTATION_WASTE, "Verlustvol. in €***Verlustvol. in €***Verlustvolumen in Euro");
        de.put(RULE_FILTER_DIALOG_ERROR_RULES, "Fehler");
        de.put(PROCESS_FINALISATION_SUPPLFEE_FINAL, "ZE Final***ZE Final***Summe der Zusatzentgelte des Falles, welche diesem Vorgang zum Vorgangs-Abschluss zugeordnet wurden. ");
        de.put(CASE_MERGE_MATH_REV_SUM_ORG_CASES, "Summe Erlöse Originalfälle");
        de.put(PROCESSES_AVAILABLITY, "Liste der verfügbaren Vorgänge");
        de.put(COUNT_PROC_TO, "Anz. OPS bis");
        de.put(RULES_TXT_OP_NOT_IN_TABLE, "keine enthalten in Tabelle ( NOT IN @ )");
        de.put(PATIENT, "Patient");
        de.put(WORKFLOW_DEADLINE_6_WEEKS_DEADLINE, "Frist Einleitung Rechnungsprüfung");
        de.put(TYPE_OF_SERVICE, "Art der Leistung");
        de.put(DEPARTMENT_MAIN_DIAGNOSIS_ERROR, "Es wurde keine BHD gesetzt");
        de.put(RULES_GKCOSTS_NODE_COSTS, "Kosten");
        de.put(RULES_TXT_CRIT_TRANSFER_DATE_DIS, "Verlegungsdatum");
        de.put(RULES_CRIT_ACG_LOW_BACK_PAIN_DIS, "ACG: Rückenbeschwerden vorhanden");
        de.put(EVENT_TYPE_REQUEST_REMOVED, "Anfrage gelöscht: Typ: {0}***Anfrage gelöscht");
        de.put(LOGIN_SUPPORT_AND_CONTACT, "Support & Kontaktdaten");
        de.put(RULES_TXT_CRIT_ADMISSION_DIAG_TOOLTIP_1, "Die Diagnose, aufgrund derer ein Patient in ein Krankenhaus aufgenommen worden ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code");
        de.put(CASECREATION_FAILED, "Fall konnte nicht angelegt werden!");
        de.put(DOCTOR_INDENT, "IKZ einweis. Arzt***IKZ einweis. Arzt***IKZ einweisender Arzt");
        de.put(RULES_GK_RSA_AMBULANTEDXG, "GK_RSA_AmbulanteDxG");
        de.put(RULES_TEMP_118_ENTLASSUNGSDATUM, "Format: YYYYMMDD");
        de.put(DEPARTMENT_TYPE_SLIP_DEPARTMENT, "BA");
        de.put(RULES_TEMP_211_AUSGABEN, "GK RSA:Ausgaben für Zahnärzte");
        de.put(AUDIT_QUOTA_RESULT_WARNING, "Die Prüfquote für die Kasse {0} für das Quartal {1}/{2} ist bereits erreicht!Die Anfrage wird mit \"Überschreitung Prüfquote\" markiert.Details:Anzahl abgerechnete vollstationäre Fälle: {3}davon zur Beanstandung eingeleitet (Istwert): {4}Max. zulässige Beanstandungen gemäß Prüfquote (Sollwert): {5}Festgesetzte Prüfquote für dieses Quartal: {6} %");
        de.put(RULES_TXT_CRIT_AGE_DAYS_TOOLTIP_1, "Das Alter in Tagen (nur für Alter < 1 Jahr)");
        de.put(RULES_CRIT_MRSA_BLOOD_PURIFICATION_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben für Sachkosten bei extrakorporaler Blutreinigung zu einem Versicherten (SA 700)");
        de.put(FEE_GROUP_SEPARATE_CHARGES_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "gesonderte Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(RULES_CRIT_MRSA_DIAG_AMBULANT_TOOLTIP_1, "Diagnosen, die von einem niedergelassenen Arzt kodiert worden sind aus der Satzart 600. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code");
        de.put(REVIEW_COMPLETION, "Abschluß EV");
        de.put(DOCUMENT_ADD, "Dokument hinzufügen");
        de.put(CASE_ADDED_TOOLTIP, "Siehe die Details eines Falles");
        de.put(RULES_TXT_CRIT_CLINIC_FEEGROUP, "Klinik: Entgeltbereich");
        de.put(DIALOG_BATCH_GROUPING_DAYPRECARE, "teil/vorstationäre");
        de.put(REPORT_SAVE_AND_OPEN, "Report speichern");
        de.put(RULES_TEMP_132_TAGEOHNEBERECHNUNG, "Format: Format: Ganzzahlig (Beispiel 3)");
        de.put(RULES_19_IV_OHNE_SCHLUSSRECHNUNG, "19 - IV ohne Schlussrechnung");
        de.put(CASE_CARE_CWMINIMAL_FROM, "PflegeCW min. von");
        de.put(RULES_TEMP_54_FALL_NUMERIC_7, "Fall.Numeric7");
        de.put(DEDUCTION, "Abschlag");
        de.put(WORKFLOW_CLOSE_AND_CREATE_REMINDER_CLOSE_REMINDER_SUCCESSFULLY, "{0}  Wiedervorlagen von Art ''''{1}'''' wurden als abgearbeitet gesetzt.");
        de.put(RULES_TXT_CRIT_CLINIC_FEE_COUNT_DIS, "Klinik: Anzahl Entgelte");
        de.put(CASE_RESOLVE_USED_FOR_GROUPING, "G");
        de.put(CASE_RESOLVE_CCL, "CCL");
        de.put(WORKFLOW_DEADLINE_REVIEW_COMPLETION, "Abschlußfrist für Erörterungsverfahren");
        de.put(ICD_REF_TYPE_ADDITION_TO, "Zusatz zu");
        de.put(RULES_ALTERINTAGEN, "AlterInTagen");
        de.put(FILTER_PRIO_NO, "Alle ohne Priorität");
        de.put(DIALOG_BATCH_GROUPING_KORROGVD_TOOLTIP, "Anzahl der Fälle, deren CW auf Grund Überschreitung der OGVD vom Fallpauschalenkatalogwert abweicht");
        de.put(RULES_TEMP_127_INSTITUTIONSKENNZEICHEN, "Format: 9-stellig numerisch (Beispiel: 123456789)");
        de.put(INS_SHORT_GEK, "GEK");
        de.put(RULES_06_VORSTATIONAER, "06 - vorstationär");
        de.put(RULES_TEMP_52_FALL_NUMERIC_10, "Fall.Numeric10");
        de.put(WORKFLOW_DEADLINE_DATA_RECORD_CORRECTION_DEADLINE, "Frist Datensatzkorrektur");
        de.put(CATALOG_DRG_NEGO_DESC, "Vereinbartes Entgeld pro Tag {0}{1}, {2} Tag(e)");
        de.put(RULE_FILTER_DIALOG_RULE_TYPE, "Typ");
        de.put(PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_DAYS, "Tage bis Abschluss MD-Prüfung***Abschluss MD***Anzahl der Tage bis zum Fristablauf, an dem die Überprüfung und Bewertung durch den MD abgeschlossen sein muss");
        de.put(CREATE, "Anlegen");
        de.put(RULES_AUFNEHMENDEFACHABTEILUNG, "AufnehmendeFachabteilung");
        de.put(AUDIT_QUOTA_RESULT_MAX_MD_EXAMINATIONS, "MD-Prüfungen maximal");
        de.put(CASE_STATUS, "Fallstatus***Status***Fallstatus");
        de.put(CATALOG_DRG_MDC, "MDC {0}");
        de.put(DRG_AND_PEPP_COLUMN, "DRG/PEPP***DRG/PEPP***DRG - Fallpauschale, diagnosebezogene Fallgruppe.PEPP - Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik");
        de.put(ACTION_MSG_NO_EDIT_RIGHT, "Sie haben keine Berechtigung, eine Aktion zu editieren");
        de.put(BILL_OPEN_ITEM_NUMBER_RECEIPT, "Belegnr");
        de.put(RULES_TEMP_154_KLINIK_NEBENDIAGNOSE, "Klinische Daten: Siehe Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.");
        de.put(LENGTH_OF_STAY, "Verweildauer***VWD");
        de.put(RULES_GROUP_EXPENDURE_MRSA_DIS, "Ausgaben");
        de.put(RULES_CRIT_CLINIC_CASE_COSTS_TOOLTIP, "Gesamtkosten enes Falls");
        de.put(ACG_AGE_BAND_05_11, "05-11");
        de.put(REMINDER_CREATED_TOOLTIP, "Siehe die Details einer Wiedervorlage");
        de.put(RULES_TXT_CRIT_DIS_TYPE_DIS, "Entlassungsgrund12");
        de.put(RULES_7H_FOLGEBERATUNG, "7H - Folgeberatung");
        de.put(AUDIT_QUOTA_RESULT_MD_EXAMINATIONS, "MD-Prüfungen");
        de.put(RULES_22_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004_OHNE_SCHLUSSRECHNUNG, "22 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung");
        de.put(LENGTH_OF_STAY_FROM, "Verweildauer von***VWD");
        de.put(ADMISSION_REASON_HOSPITAL_CARE_INPATIENT, "Krankenhausbehandlung, vollstationär ");
        de.put(DOCUMENTATION_MENU_SET_ACTIVE, "Auf Aktiv setzen");
        de.put(RULE_VALIDATION_RULE_NOT_VALID, "Regelsyntax ist fehlerhaft");
        de.put(RULES_TEMP_85_ENTGELTANZAHLJEENTGELT, "Format: Ganzzahlig (Beispiel 2)");
        de.put(AUDIT_INFO_LABEL, "KK Informationen");
        de.put(MIDWIFE, "Hebamme");
        de.put(SAME_RULE_FOUND, "Regel mit gleichen Ident und der gleichen Inhalt in dem Pool vorhanden");
        de.put(CATALOG_DRG_FIRST_DAY_SURCHARGE, "1. Tag zusätzliches Entgelt");
        de.put(MDK_ADDRESS, "Anschrift");
        de.put(RULES_CRIT_ACG_PROBABILITY_HIGH_PC_DIS, "ACG: Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten");
        de.put(BILL_POSITION_BASE_AMOUNT, "Preis");
        de.put(RULES_TXT_CRIT_PROC_TOOLTIP_1, "OPS, Operationen- und Prozedurenschlüssel, maximal 6-stellig, z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.");
        de.put(ADMISSION_MODE_MAIN_DEPARTMENT_MIDWIFE, "HA/B-Heb.******Hauptabteilung und Beleghebamme");
        de.put(REMINDER_UNFINISHED_STATUS, "offen");
        de.put(MSG_CLEAR_CACHE, "Cache wurde erfolgreich geleert!Entfernte Einträge:");
        de.put(RULES_CRIT_MRSA_DOC_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben für Ärzte zu einem Versicherten (SA 700)");
        de.put(LOS_ALTERATION, "Tage simuliert***Tage sim.***Tage, die für die Änderung/Simulation der VWD verwendet werden (positiver oder negativer Wert)");
        de.put(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_WAR_INVALIDS_AND_DISABLED_PEOPLE, "Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden");
        de.put(LAB_DATA_DESCRIPTION, "Beschreibung***Beschreibung***Katalogleistungstext");
        de.put(DIALOG_BATCH_GROUPING_CWDIFFPOS, "CW-Differenz positiv");
        de.put(ANTIBIOTIC_DAPTOMYCIN, "Daptomycin");
        de.put(SETTING_WORKFLOW_SIGHT, "Vorgangsansicht");
        de.put(RULES_TEMP_254_DIAGNOSENGRUPPEN, "GK RSA:DxG");
        de.put(BILL_DATE, "Fakturadatum");
        de.put(GENDER_SALUTATION_UNDEFINED, "Herr/Frau");
        de.put(RULES_TXT_CRIT_DISCHARGE_DATE_FULL, "Entlassungsdatum_mit_Uhrzeit");
        de.put(CATALOG_DRG_CARE_TITLE, "Kostengewicht (Pflege)");
        de.put(RULES_CRIT_ACG_RESCALED_PHARMA_CRI_TOOLTIP, "Kostenindex für zukünftige Medikamentenkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1,0");
        de.put(GROUPER_OPS_RES_TYPE_OR_INVALID_LOC_AND_DATE, "OR-Prozedur mit Konflikt Zusatzkennzeichen und OPS-Datum ");
        de.put(RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_ATC_DIS, "KH Medikament: Gesamtdosis für ATC");
        de.put(CASE_CARE_CW_FROM, "PflegeCW von");
        de.put(RULES_TXT_LIST_DO_NOTHING, "Keine Aktion");
        de.put(RULES_TEMP_237_ERLOESE, "GK RSA:Anzahl der HMGs");
        de.put(ACTION_SUBJECT_LATEST, "Typ der letzten Aktion***Aktion***Typ der letzten Aktion innerhalb des Vorgangs");
        de.put(CASE_CW_CATALOG, "Bewertungsrelation: Hauptabteilung***CW Katalog***Bewertungsrelation: Hauptabteilung");
        de.put(DRG_DATA, "DRG-Daten");
        de.put(DRG_CORR_TYPE_SURCHARGE, "Zuschlag");
        de.put(MENU_BATCH_GROUPING_USED_RULES, "Regelauswahl");
        de.put(PROCESS_USER_CHANGED_TOOLTIP, "Siehe Details zu diesem Vorgang");
        de.put(ARTIFICIAL_VENTILATION_TO, "Beatm.-Std. bis");
        de.put(RULES_GK_RSA_HMG, "GK_RSA_HMG");
        de.put(CATALOG_DOWNLOAD_CORE_DATA, "Stammdaten");
        de.put(ADDRESS_ZIP_CODE, "Postleitzahl***PLZ***Postleitzahl");
        de.put(RULES_TXT_CRIT_DEPARTMENT_TOOLTIP_1, "Die Fachabteilungen, in denen der Patient behandelt worden ist. z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.");
        de.put(RULES_AUFENTHALTKLEINER_24H, "AufenthaltKleiner24h");
        de.put(RULES_TXT_OP_NOT_DOUBLE_IN_TABLE, "nicht doppelt in Tabelle ( !! @ )");
        de.put(DEPARTMENT_VALIDATION_ERROR, "Zusätzliche Informationen sind erforderlich");
        de.put(PROCESS_FINALISATION_SUPPLFEE_INITIAL_FROM, "ZE Initial von");
        de.put(RULES_TEMP_135_VERWEILDAUER, "Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.");
        de.put(RULES_CRIT_ACG_UNSCALED_TOTAL_CRI, "acg_GesamtkostenIndexUngewichtet");
        de.put(REQUEST_STATUS, "Status der Anfrage***Anfr.-Status***Aktueller Status der letzten Anfrage des Vorgangs.");
        de.put(LEVEL_DEBUG, "allgemeines Debugging (Auffinden von Fehlern)");
        de.put(DEPARTMENT_MAIN_DIAGNOSIS_ERROR_INDEX, "Es wurde keine BHD an der Position {0} gesetzt");
        de.put(EVENT_NAME_REMINDER, "Wiedervorlage");
        de.put(CASE_DELTA_CWMAXIMAL_FROM, "dCW max. von");
        de.put(PROCESS_INITIAL, "Initial");
        de.put(RULES_TXT_CRIT_PROCEDURE_GROUPED_DIS, "Grouperrelevante Prozedur");
        de.put(DISCHARGE_REASON_CHANGES_IN_RESPONSIBILITIES_OF_PAYERS, "Zuständigkeitswechsel des Kostenträger");
        de.put(RULES_TEMP_75_ADRG, "Format: Alphanumerisch (Beispiele: A11 oder B75)");
        de.put(RULES_TEMP_63_DRGERLOES, "Erlös des DRG - Falles ohne Berücksichtigung der Zusatzentgelten und Pflegeaufwendungen(ab 2020)");
        de.put(RULES_TXT_CRIT_ENTGELTABRECHNUNG_BIS_DIS, "Entgeltabrechnung bis");
        de.put(VALIDATION_ERROR_NO_ALTER, "Geben Sie bitte das Alter des Patienten ein! ");
        de.put(RULES_1_MAENNLICH, "1 - männlich");
        de.put(RULES_TXT_CRIT_PROC_DATE_DIS, "OPSDatum");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_9, "07 - Tod");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_8, "06 - Verlegung in ein anderes Krankenhaus");
        de.put(RULE_VALIDATION_CODE_ERROR, "Fehler in Code");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_7, "05 - Zuständigkeitswechsel des Kostenträger");
        de.put(DISCHARGE_REASON_DEATH, "Tod");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_6, "04 - Behandlung gegen ärztlichen Rat beendet");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_5, "03 - Behandlung aus sonstigen Gründen beendet");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_4, "02 - Behandlung regulär beendet, nachstationäre Behandlung vorgesehen");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_3, "01 - Behandlung regulär beendet");
        de.put(RULES_TEMP_269_GK_RSA_AMBULANTEKRANKHEITSNUMMER, "GK RSA:Ambulante Krankheitsnummer");
        de.put(RULES_TXT_CRIT_DIS_TYPE_3_DIS, "Entlassungsgrund3");
        de.put(RULES_CRIT_MRSA_PUCKNUMBER_TOOLTIP, "Anzahl der Packungen zu einem Medikament");
        de.put(RULES_TAGEOHNEBERECHNUNG, "TageOhneBerechnung");
        de.put(DIFFERENCE_CURRENCY, "Differenz {0}");
        de.put(RULES_TEMP_226_VERSICHERTENDATEN, "GK RSA:Erwerbsminderungstage");
        de.put(ADMISSION_CAUSE_TRANSFERRING, "Verlegung");
        de.put(READONLY_DOC_ITEM_DKR_DRG_FILE_NAME, "Deutsche_Kodierrichtlinien_Version_");
        de.put(CASE_RESOLVE_ESTIMATED_RULES, "Prüfregelanschläge");
        de.put(LEVEL_FATAL, "Kritischer Fehler, Programmabbruch");
        de.put(RULES_TEMP_17_HM_GESAMTMENGE, "Format: numerisch (Beispiel: 5)");
        de.put(FEE_GROUP_DRG_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE, "DRG ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(CASE_RESOLVE_CWCATALOG, "CW-Katalog");
        de.put(RULES_TXT_OP_DIVIDE, "geteilt durch ( / )");
        de.put(RULES_TXT_CRIT_EQUAL_PROC_NUMBER_TOOLTIP_1, "Für jede Prozedur wird ein Wiederholungswert ermittelt und der minimale Wert, der größer als 1 ist, wird hier eingetragen.");
        de.put(CASE_NUMERIC_9, "Zahl 9");
        de.put(CASE_NUMERIC_8, "Zahl 8");
        de.put(CASE_NUMERIC_7, "Zahl 7");
        de.put(RULES_TEMP_219_GK_RSA_ZAHNARZTAUSGABEN, "GK RSA:Ausgaben für Zahnärzte");
        de.put(CASE_NUMERIC_6, "Zahl 6");
        de.put(CASE_NUMERIC_5, "Zahl 5");
        de.put(CASE_NUMERIC_4, "Zahl 4");
        de.put(RULES_TXT_CRIT_SEPARATION_YEAR_DIS, "Entlassungsjahr");
        de.put(CASE_NUMERIC_3, "Zahl 3");
        de.put(RULES_TEMP_21_HM_GESAMTPREIS, "Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)");
        de.put(CASE_NUMERIC_2, "Zahl 2");
        de.put(REMINDER_DUEDATE_IS_BLANK, "nicht gesetzt");
        de.put(CASE_NUMERIC_1, "Zahl 1");
        de.put(DF_VALUE_TOOLTIP, "{0} ({1} x {2}) x {3} von {4} bis {5} ");
        de.put(DISCHARGE_REASON_2_ABLE_TO_WORK_NEED_RESPIRATION_WEANING, "arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung");
        de.put(GROUPER_STATUS_INVALID_CASE, "Ungültiger Fall");
        de.put(EVENT_TYPE_PROCESS_USER_CHANGED_DESCRIPTION, "Vorgangs-Bearbeiter geändert von {0} auf {1}");
        de.put(FEE_GROUP_SPECIAL_INSTITUTIONS, "Besondere Einrichtungen");
        de.put(DISCHARGE_REASON_DISMISSAL_END_STATION_EQUIVALENT, "Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung – für Pseudofachabteilung 0004)");
        de.put(PROCESS_FINALISATION_CW_FINAL, "CW Final***CW Final***Bewertungsrelation der Checkpoint-Version des Falles, welche diesem Vorgang zum Vorgangs-Abschluss zugeordnet wurde.");
        de.put(RISK_PERCENT_TOTAL_FROM, "Risiko in % von");
        de.put(START_GROUPING_TOOLTIP, "Startet das Grouping mit diesen ausgewählten Fällen");
        de.put(ANTIBIOTIC_IMIPENEM, "Imipenem");
        de.put(ACTION_CREATION_DATE, "Anlagedatum der Aktion***Anlagedatum***Datum, an dem die Aktion angelegt wurde");
        de.put(RULES_CRIT_ACG_RUB_DIS, "ACG: RUB");
        de.put(PROCESS_START_DATE, "Anlagedatum des Vorganges***Vorgangsdatum***Datum, an dem der Vorgang angelegt wurde");
        de.put(RULES_VERWEILDAUERINSTUNDEN, "VerweildauerInStunden");
        de.put(WORKFLOW_DEADLINE_DATA_RECORD_CORRECTION_DEADLINE_COMMENT, "Frist zur Korrektur des Datensatzes.");
        de.put(TEMPLATE_ERROR_CONTENT, "Sie können kein Dokument generieren, da der Hauptfall dieses Vorgangs nicht (mehr) verknüpft ist");
        de.put(INSURANCE_STATUS, "Versicherungsstatus");
        de.put(CASEFEE_TO, "Abrechnung bis");
        de.put(SUCCESS, "Erfolg");
        de.put(WORKFLOW_DEADLINE_CASE_DIALOG_BILL_CORRECTION_DEADLINE_COMMENT, "Wird in dem Falldialog eine Einigung erzielt, endet das Prüfverfahren. Eine gegebenenfalls notwendige Korrektur der Rechnung soll innerhalb von 4 Wochen erf");
        de.put(EVENT_TYPE_PROCESS_SUBJECT_SET_DESCRIPTION, "{1} als Vorgangstyp gesetzt");
        de.put(RISK_AREA_DRG_PEPP, "DRG/PEPP");
        de.put(CASE_RESOLVE_RULES_CATEGORIE, "Kategorie");
        de.put(MAIN_DEPARTMENT, "Hauptabteilung");
        de.put(RULES_TXT_CRIT_PSYCH_ONE_2_ONE_ADULTS, "Anzahl_Stunden_eins2eins_Behandlung_Erwachsene");
        de.put(RISK_VALUE_TOTAL_TO, "Risiko in € bis");
        de.put(EXPORT_TYPE_CSV, "CSV***Kommagetrennte Werte");
        de.put(MD_AUDIT_QUOTA, "MD Prüfquote");
        de.put(STEP, "Schritt");
        de.put(EVENT_TYPE_PROCESS_REOPENED, "Vorgang erneut geöffnet***Vorgang erneut geöffnet");
        de.put(CASE_RESOLVE_OPS, "OPS");
        de.put(RULES_TEMP_36_GESAMTPZNPREIS, "Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)");
        de.put(RULES_TXT_CRIT_SOLE_HPN_TOOLTIP_1_2, "");
        de.put(REMINDER_RECEIVER, "WV Empfänger***WV Empfänger***Empfänger einer Wiedervorlage in diesem Vorgang ");
        de.put(BILL_VALIDATION_INVALID_FEE_KEY, "Mindestens ein Entgeltschlüssel ist nicht korrekt");
        de.put(ICD_PLACEHOLDER, "Keine Diagnosen hinzugefügt");
        de.put(RULES_TXT_CRIT_REMEDIES_FULL_PRICE_DIS, "Heilmittel: Gesamtpreis für Heilmittelpositionsnummer");
        de.put(LOGIN_FAILED_PASSWORD_MISSING, "Es wurde kein Passwort angegeben");
        de.put(RULES_TEMP_57_FALL_STRING_10, "Fall.String10");
        de.put(HISTORY_UPCOMING_EVENTS, "Nächste Arbeitsschritte");
        de.put(ICD_TYPE_BEFORE_INPATIENT, "Vorstationäre");
        de.put(REMINDER_LATEST, "Fälligkeitsdatum der offenen Wiedervorlage***WV Fälligkeit***Nächstes Fälligkeitsdatum der ältesten offenen Wiedervorlage");
        de.put(RULES_TEMP_42_ATCCODE, "Format: alphanumerisch (Beispiel: B01AX04)");
        de.put(RULES_TXT_CRIT_PATIENT_MASTER_DATA_CARE_GRADE_DIS, "Versicherter: Pflegestufe");
        de.put(VERSION, "Version");
        de.put(RULES_TXT_CRIT_SOLE_HIMIGROUP_PRICE_DIS, "Heil- und Hilfsmittel: Gesamtpreis für Hilfsmittelgruppe");
        de.put(VERSIONCONTROLL_HINT_PARENT_VERSION, "Elternversion von: ");
        de.put(PROCESS_ERROR_CORE_DATA, "Eine oder mehrere Liste(n) mit Stammdaten konnte(n) für das Vorgangsdatum {0} nicht geladen werden.Keine gültige Zeitspanne konfiguert.");
        de.put(RULES_TXT_CRIT_REMEDIES_COUNT_DIS, "Heilmittel: Menge");
        de.put(CASE_RESOLVE_ICD, "ICD");
        de.put(STATE_LOWER_SAXONY, "Niedersachsen");
        de.put(RULES_TXT_CRIT_NOW_TIME_DIS, "jetzt");
        de.put(MDK_REPORT_CREATION_DATE_TO, "Gutachtendatum bis");
        de.put(CASE_REMOVED_TOOLTIP, "Dieser Fall wird entfernt");
        de.put(SUPPORT, "Support");
        de.put(RULES_TXT_CRIT_ADMISSION_DAY_TOOLTIP_1, "Tag der stationären Aufnahme.");
        de.put(RULES_TEMP_28_HM_VERORDNUNGSDATUM, "Format: YYYYMMDD");
        de.put(SETTING_SHOW_ALWAYS_INFO_FOR_EXAMINATE_QUOTA, "Zeige immer Information über MD-Prüfquote");
        de.put(RULES_CRIT_ACG_PROBABILITY_HIGH_PC_TOOLTIP_1, "Format: Fließkommazahl (Beispiel 0,01)");
        de.put(CASE_MERGING_CONDITION_FOUR_DRG, "Gleiche MDC***Gleiche MDC");
        de.put(REVENUE_MATH_PEPP_LT_2015, "Vergütungsstufe:{0}, Erlös=CW pro Tag ({1}) x Baserate von {2} bis {3} ({4}) X ({5}) Tage");
        de.put(RULES_VPS_DISCOVERED_FROM, "VPS_Festgestelt_durch");
        de.put(ADMISSION_DATA, "Aufnahmedaten");
        de.put(RULES_TXT_CRIT_CASE_STR_3_DIS, "Fall.String03");
        de.put(PROCESS_FINALISATION_RESULT_DELTE, "Result Delta");
        de.put(RULES_CRIT_ACG_PHARMA_COST_TOOLTIP, "Gesamte Medikamentenkosten während des Zeitraums");
        de.put(DELETE_DOCUMENT, "Wollen Sie das Dokument wirklich löschen?");
        de.put(PROCESS_FINALISATION_RESULT_DELTA, "Ergebnis Delta***Erg. Delta***Manuell von einem Nutzer dokumentierte Abweichungvom erwarteten hin zum tatsächlichen Ergbnis im Vorgangsabschluss.");
        de.put(CASE_DELTA_CWMINIMAL, "Delta-CW minimal***dCW min.***Minimaler Delta-CW-Wert, welcher durch die Prüfregeln für diesen Fall ermittelt wurde.");
        de.put(AUDIT_PREL_PROC_CLOSED_DEADLINE, "Frist Vorverfahren Ende");
        de.put(PEPP, "PEPP***PEPP");
        de.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_13, "85+");
        de.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_12, "80-84");
        de.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_11, "75-79");
        de.put(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_10, "70-74");
        de.put(PROCESS_COMPLETION, "Vorgang abschließen");
        de.put(EVENT_TYPE_PROCESS_PAUSED, "Vorgang pausiert***Vorgang pausiert");
        de.put(RULES_KLINIK_ENTGELTANZAHL, "Klinik_Entgeltanzahl");
        de.put(RULES_TEMP_215_AUSGABEN, "GK RSA:Sachkosten bei extrakorporaler Blutreinigung");
        de.put(RULES_CRIT_MRSA_SUPEREROGATION_DMP_EXPENDURE_TOOLTIP_1, "Summe aller Ausgaben für Mehrleistungen DMP zu einem Versicherten (SA 700)");
        de.put(PATIENT_NAME, "Patientenname***Patient***Name und/oder Vorname d. Patienten");
        de.put(RULES_TXT_MEDICINE_COSTS, "Arzneimittel");
        de.put(RULES_TEMP_225_VERSICHERTENDATEN, "GK RSA:DMP-Tage");
        de.put(DATE_TIME_FORMAT, "dd.MM.yyyy HH:mm:ss");
        de.put(INSURANCE_ASSOCIATION, "Berufsgenossenschaft");
        de.put(WORKFLOW_DEADLINE_REVIEW_START_COMMENT, "Ist das Krankenhaus mit der Entscheidung der Krankenkasse nach § 8 nicht einverstanden, hat es diese binnen 6 Wochen nach Zugang der Entscheidung gegenüber der Krankenkasse zu bestreiten.");
        de.put(NO_DEPARMENT_ADMMISION_DATE, "Aufnahmedatum der nicht aufnehmenden Bewegung ist nicht gesetzt******Aufnahmedatum einer Bewegung, die nicht die erste Bewegung ist, ist nicht gesetzt");
        de.put(RULES_TXT_CRIT_CLINIC_OGVD, "Klinik: OGVD");
        de.put(RULES_TEMP_116_EINWEISENDESKRANKENHAUS, "Format: 9-stellig numerisch (Beispiel: 123456789)");
        de.put(BEGE_UPDATE_REQUEST_WINDOW, "Anfrage aktualisieren (Berufsgenossenschaft)");
        de.put(ANTIBIOTIC_AZTREONAM, "Aztreonam");
        de.put(TIME_FORMAT, "HH:mm");
        de.put(WORKINGLIST_COLUMN_DIALOG, "Arbeitsliste konfigurieren");
        de.put(CASE_MERGING_DO_MERGE_AND_SAVE, "Fall zusammenführen & speichern");
        de.put(RULES_TEMP_189_KLINIK_IKZ, "Klinische Daten: Institutionskennzeichen. Siehe Institutionskennzeichen IK.");
        de.put(CASE_MERGE_MATH_REV_MERG_CASE, "Erlös Fallzusammenführung");
        de.put(RULES_SEKDIAGNOSE, "SekDiagnose");
        de.put(PROCESS_FINALISATION_ERROR_NO_MAIN_REVIEW_CAUSE, "Es wurde kein Hauptprüfgrund angegeben.");
        de.put(LAB_DATA_ANALYSIS, "Analyse***Analyse***Auffälligkeitskennzeichen bei Laborwerten");
        de.put(STATE_SCHLESWIG_HOLSTEIN, "Schleswig-Holstein");
        de.put(CASE_RESOLVE_RULES_DESCRIPTION, "Bezeichnung");
        de.put(RULES_TXT_DOSING, "Dosierung");
        de.put(VERSION_RISK_TYPE_AUDIT_CASE_DIALOG, "Anfrage Falldialog");
        de.put(RULES_TXT_INTERVAL_YEARS, "Jahr(e)");
        de.put(RULES_CRIT_ACG_MEDC_DIS, "ACG: MEDC-Code");
        de.put(CASE_STATUS_NEW_VERSION, "Neue Version");
        de.put(RULES_05_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN, "05 - andere Sonstige Entgelte / Besondere Einrichtungen");
        de.put(RULES_CRIT_ACG_RESCALED_TOTAL_CRI, "acg_GesamtkostenIndexGewichtet");
        de.put(LANGUAGE, "Sprache");
        de.put(MENU_BATCH_GROUPING_DO_FOR_ACTUAL_ROLE_ONLY_TOOLTIP, "Die Prüfregelergebnisse werden nur für die eigene Rolle gespeichert.Für Benutzer mit einer anderen Rolle sind die Prüfregelergebnisse nicht sichtbar.");
        de.put(DAYS_STAY, "Belegtage");
        de.put(REMINDER_FINISHED_STATUS, "abgearbeitet");
        de.put(RISK_EDITOR_RISK_AUDIT_VALUE, "Anfrage-Risiko***Anfr.-R.***Prozentualer-Wert für die Wahrscheinlichkeit, dass ein Fall mit diesem Regelanschlag eine Prüfauffälligkeit verursacht");
        de.put(RULES_TXT_PEPP_RESULT, "PEPP-Ergebnis");
        de.put(CASE_OPEN_PROCESS, "Vorgang öffnen");
        de.put(RULES_TXT_CRIT_COMBAT_DEPARTMENT_DIS, "behandelnde Fachabteilung");
        de.put(REMINDER_MODE_SHOW_OPEN, "offene Wiedervorlagen");
        de.put(BILL_OPEN_ITEM_RECEIPT_DATE_RECEIPT, "Belegdatum");
        de.put(RULES_CRIT_RECHNUNG_ART_TOOLTIP_5, "13 - Nachtragsrechnung");
        de.put(MDK_DEPARTMENT, "MD-Dienststelle");
        de.put(RULES_CRIT_RECHNUNG_ART_TOOLTIP_4, "12 - Schlußrechnung");
        de.put(RULES_CRIT_RECHNUNG_ART_TOOLTIP_3, "11 - Zwischenrechnung");
        de.put(DRG_CATALOG, "DRG Katalog");
        de.put(RULES_CRIT_AMBU_CARE_PROVIDED_FROM_DIS, "Pflegedaten: Pflegeleistung von");
        de.put(PLACE_OF_REG_REQUEST_EXTENSION, "Anfrageerweiterung");
        de.put(RULES_TEMP_198_ARZNEIMITTEL, "GK RSA:PZN-Code");
        de.put(ERROR_COULD_NOT_DELETE, "Das ausgewählte Element konnte nicht gelöscht werden!");
        de.put(RULES_TXT_CRIT_CLINIC_MAIN_DIAG_DIS, "Klinik: Hauptdiagnose");
        de.put(RULES_GK_RSA_KHAUSGABEN, "GK_RSA_KHAusgaben");
        de.put(CASELIST_EXCEL_EXPORT_DIAG, "Fallliste wird als Excel exportiert");
        de.put(REMINDER_SENDER, "WV Sender");
        de.put(PROCESS_FINAL, "Final");
        de.put(RULES_TEMP_119_ENTLASSUNGSDATUM_MIT_UHRZEIT, "Die Uhrzeit der Entlassung wird mitberücksichtigt");
        de.put(LAB_DATA, "Labordaten");
        de.put(CASELIST_CSV_EXPORT_DIAG, "Fallliste wird als CSV exportiert");
        de.put(RULES_CRIT_AMBU_CARE_PROVIDED_FROM_TOOLTIP, "Der erste Tag der aufgebrachten Leistung");
        de.put(DIALOG_BATCH_GROUPING_NINERDIAG, "#.9 Diag.");
        de.put(RULES_2_WEIBLICH, "2 - weiblich");
        de.put(AUDIT_COMMENT, "Ergebnis/Bemerkung");
        de.put(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_DIS, "KH Medikament: Dosierungseinheit");
        de.put(RULES_TXT_CRIT_ADM_2_TYPE_DIS, "Aufnahmegrund2");
        de.put(LAB_DATA_POSITION, "Pos.***Pos.***Befund-Position");
        de.put(PROCESS_FINALISATION, "Vorgangsabschluss");
        de.put(RULES_TXT_CRIT_TAGE_OHNE_BERECHNUNG_PRO_ENTGELT_DIS, "Tage ohne Berechnung je Entgelt");
        de.put(RULES_TXT_OP_MULTIPL, "multipliziert ( * )");
        de.put(RULES_TXT_OP_NOT_DOUBLE_IN, "nicht doppelt in ( !! )");
        de.put(MSG_NO_RIGHT_OTHER_BLANK, "Sie haben keine Berechtigung, eine {0} anderer Nutzer zu {1}");
        de.put(LOGIN_FAILED_ACCOUNT_EXPIRED, "Benutzerkonto ist entweder abgelaufen oder noch nicht gültig");
        de.put(VALIDATION_ERROR_OPS_DATE, "Einige Prozeduren haben kein Ausführungsdatum!");
        de.put(RULES_TXT_CRIT_ADMISSION_DIAG_TYPE_DIS, "Aufnahmediagnose: Typ");
        de.put(RULE_COLUMN_CATEGORY, "Kategorie***Kategorie***Kategorie der Regel");
        de.put(RULES_TXT_CRIT_SOLE_NUMBER_DIS, "Heil- und Hilfsmittel: Menge");
        de.put(DEPARTMENTS_WARD_DATE_FORMAT, "dd.MM.yyyy HH:mm");
        de.put(RULES_TEMP_245_GK_RSA_HMG, "GK RSA:HMG");
        de.put(MDK_START_AUDIT_EXTENDED_EQUAL, "Einl. erw. MD-Prüfung");
        de.put(DATE_FORMAT_DEVIDER, ".");
        de.put(PROCESS_FINALISATION_LOS_INITIAL_FROM, "VWD Initial von");
        de.put(RULES_CRIT_ACG_MAJOR_RXMG_TOOLTIP_1, "Format: Alphanumerisch (Beispiel 12)");
        de.put(PROCESS_FINALISATION_CW_FINAL_FROM, "CW Final von");
        de.put(ICD_REF_TYPE_CROSS, "Kreuz");
        de.put(RULES_3_PFLEGESTUFE_3, "3 - Pflegestufe 3");
        de.put(RULES_TXT_CRIT_ADM_CAUSE_DIS, "Aufnahmeanlass");
        de.put(PROCESS_FINALISATION_SUPPLFEE_FINAL_TO, "ZE Final bis");
        de.put(WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_CONFIRM, "Möchten Sie die Stornierung für die Vorgangsnummer {0} wirklich aufheben?");
        de.put(RULES_TXT_CRIT_VOLUNTARY_DAYS_DIS, "Tage ohne Berechnung");
        de.put(RULES_TXT_CRIT_DRG_TOOLTIP_1, "Fallpauschale, diagnosebezogene Fallgruppe.");
        de.put(RULES_TXT_LIST_DELETE, "Löschen ");
        de.put(REMINDER_USER_IS_BLANK, "nicht zugewiesen");
        de.put(DRG_PARTITION_OTHER, "andere");
        de.put(LEVEL_INFO, "allgemeine Informationen");
        de.put(MDK_TELEPHONE_AREA_CODE, "Vorwahl");
        de.put(LAB_DATA_VALUE, "Ergebniswert***Ergebniswert***Ergebniswert");
        de.put(DAYS_SIMUL_WITH_DEDUCTION_CARE, "mit Pflege");
        de.put(RULES_TEMP_102_TAGEOHNEBERECHNUNGPROENTGELT, "Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen. Erfasst am DRG - Entgeltschlüssel für den §301 Datensatz.");
        de.put(RULES_02_DRG_ANLAGE_1, "02 - DRG Anlage 1");
        de.put(GENDER_SALUTATION_DIVERSE, "Herr/Frau");
        de.put(FEE_GROUP_DAK_INTERNAL_CHARGES, "DAK-interne Entgelte");
        de.put(HIS_VERSION, "KIS-Version");
        de.put(GENERAL, "Allgemein");
        de.put(FEE_GROUP_DRG_WITHOUT_FINAL_INVOICE, "DRG ohne Schlussrechnung");
        de.put(ORGAN_URINARY_ORGANS, "Genital/Harnorgane");
        de.put(GENDER_DIVERSE, "divers");
        de.put(CASE_RESOLVE_OPS_TEXT, "OPS-Text");
        de.put(DIALOG_BATCH_GROUPING_DRGRESULT, "DRG-Ergebnis");
        de.put(RULES_TEMP_86_ENTGELTEINZELBETRAG, "Format: Währung (Beispiel: 57.52)");
        de.put(RULES_TEMP_62_DRGERLOES, "Erloes(DRG)");
        de.put(LOGIN_EXIT, "Beenden");
        de.put(RULE_FILTER_DIALOG_RESET_BUTTON, "Zurücksetzen");
        de.put(RULE_COLUMN_RULE_NOT_SELECTED, "Irrelevant***Irrelevant***Die Regel ist für die Bewertung des Falles irrelevant");
        de.put(TEMPLATE_ERROR_HEADER, "Hauptfallfehler");
        de.put(LAB_DATA_COMMENT, "Kommentar***Kommentar***Kommentar");
        de.put(CATALOG_DRG_LOS, "Mittlere Verweildauer");
        de.put(PEPP_CATALOG_LAYOUT, "Kostengewicht gesamt {0} für {1} Tage, entspr. {2} pro Tag");
        de.put(DETAIL_CASE_DATA, "Detail Falldaten ");
        de.put(AUDIT_PRE_TRIAL, "Vorverfahren");
        de.put(REPORT_FILE_CHOOSER_TILE, "PDF-Dokumentation erstellen");
        de.put(CASE_CARE_CWMAXIMAL_TO, "PflegeCW max. bis");
        de.put(RULES_KLINIK_FALLANZAHL, "Klinik_Fallanzahl");
        de.put(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_CONFIRM, "Möchten Sie den Fall mit der Nummer {0} wirklich löschen?");
        de.put(BILL_VALIDATION_INVALID_BILL_NUMBER_LENGTH, "Rechnungsnummer darf nicht länger als 10 Zeichen sein");
        de.put(DRG_LOCAL, "DRG CPX");
        de.put(RULES_TXT_CRIT_BREATHING_DIS, "Beatmungsdauer");
        de.put(RULES_GK_RSA_ZAHNARZTAUSGABEN, "GK_RSA_ZahnarztAusgaben");
        de.put(MENU_BATCH_GROUPING_DETAILS_FILTER_ACTUAL_BOTH, "aktuelle Fallversionen (inkl. KIS)");
        de.put(EVENT_TYPE_KAIN_RECEIVED, "KAIN Nachricht eingegangen***KAIN Nachricht eingegangen");
        de.put(DRAFT_TYPES, "Vorlagen");
        de.put(RULES_CRIT_ACG_SEX_TOOLTIP_1, "Format: ganze Zahl (Beispiel 1)");
        de.put(RULES_TEMP_128_INTENSIVVERWEILDAUER, "Format: Ganzzahlig (Beispiel 5)");
        de.put(EVENT_TYPE_PROCESS_USER_DELETE_DESCRIPTION, "Bearbeiter {0} entfernt");
        de.put(RULES_PRUEFDATUM_2_ENTLASSUNGSDATUM, "Prüfdatum2 (Entlassungsdatum)");
        de.put(LOGIN_FAILED_USERNAME_MISSING, "Es wurde kein Benutzername angegeben");
        de.put(ADD_CASE_DRG_TITLE, "Grouperergebnis/Erlös");
        de.put(AGE_IN_YEARS_FROM, "Alter Jahre von");
        de.put(GENDER_UNDEFINED, "unbestimmt");
        de.put(ACG_AGE_BAND_18_34, "18-34");
        de.put(RULES_TXT_CRIT_ADMISSION_HOSPITAL_TOOLTIP_1, "Kennzeichnung des einweisenden Krankenhauses. Siehe Institutionskennzeichen IK.");
        de.put(PROCESS_FINALISATION_PENALTY_FEE, "Strafzahlung***Strafzahlung***Manuell von einem Nutzer dokumentierte Strafzahlungen im Vorgangsabschluss.");
        de.put(REQUEST_REPORT_DATE_FROM, "Gutachtendatum von");
        de.put(FILE_OPEN, "Datei öffnen");
        de.put(REPORT_DIALOG_HEADER_TEXT, "Hinweis");
        de.put(ICD_TYPE_ADMISSION, "Aufnahme");
        de.put(RULES_TEMP_246_GK_RSA_HMG, "Das Klassifikationssystem unterscheidet 106 zuschlagsfähige hierarchisierte Morbiditätsgruppen (HMG), die jeweils aus mindestens einer DxGruppe (DxG) zusammengesetzt sind, die ihrerseits mindestens einen ICD-Code umfassen. Alle HMG, die ihnen zugeordneten DxG und ICD-Codes sowie die für die Zuordnung definierten Altersgrenzen, das jeweils zulässige Geschlecht sowie die Zusatzkennzeichen des Deutschen Instituts für Medizinische Dokumentation und Information (DIMDI) nach §§ 295 und 301 SGB V werden in Anlage 1 dokumentiert.");
        de.put(RULES_TEMP_46_GESAMTMPREIS, "Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)");
        de.put(MENU_BATCH_GROUPING_DO_HISTORY_CASES, "fallübergreifend");
        de.put(RULES_TEMP_80_DRGPFLEGEERLOES, "PflegeErloes(DRG)");
        de.put(VALIDATION_SELECT_CASE_FROM_LIST, "Wählen Sie bitte eine Leistungsnummer aus der Liste");
        de.put(JOB_STATUS_STARTED, "Wird durchgeführt");
        de.put(SUPPL_FEE_VALUE_DRG, "ZE-Betrag");
        de.put(CASE_DELTA_REVENUE_MINIMAL, "Delta-Erlös minimal***dErlös min.***Minimaler Erlös-Wert, welcher durch die Prüfregeln für diesen Fall ermittelt wurde.");
        de.put(RULES_TEMP_280_GK_RSA_NEBENDIAGNOSESTATIONAER, "Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code");
        de.put(ORGAN_BREATHING, "Atmung");
        de.put(RULES_TEMP_85_PFLEGETAGEDRG, "Pflegetage(DRG)");
        de.put(RULES_TEMP_22_HM_POSITIONSNUMMER, "Pharmazentralnummer für Hilfsmittel");
        de.put(RULES_CRIT_ACG_PREGNANT_DIS, "ACG: Schwangerschaft");
        de.put(RULES_TEMP_255_DIAGNOSENGRUPPEN, "GK RSA:Krankheitsgruppe");
        de.put(RULES_TXT_CRIT_CLINIC_ADM_REASON_DIS, "Klinik: Aufnahmegrund");
        de.put(FILTER_PROCESS_UNLOCK, "Alle nicht gesperrte Vorgänge");
        de.put(RULES_16_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN_OHNE_SCHLUSSRECHNUNG, "16 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung");
        de.put(RULES_TXT_CRIT_MRSA_GENDER_DIS, "Geschlecht");
        de.put(RULE_SUGG_CONDITION_NOT_COMPLETE, "Der Wert ist in WENN-Bedingung nicht gesetzt, Vorschlagsterm ist nicht vollständig");
        de.put(RULES_GK_RSA_VERSTORBEN, "GK_RSA_Verstorben");
        de.put(RULES_TXT_CRIT_SOLE_FULL_PRICE_DAK_DIS, "Hilfsmittel: Gesamtpreis");
        de.put(RULES_TXT_CRIT_EQUAL_PROC_NUMBER_DIS, "Anzahl gleicher Prozeduren");
        de.put(RULES_CRIT_MRSA_HMG_TOOLTIP_2, "Format: bis zu 3-stellig, ganze Zahl (Beispiel: 72)");
        de.put(RULES_TXT_CRIT_DIAGNOSE_GROUPED_DIS, "Grouperrelevante Diagnose");
        de.put(RULES_CRIT_MRSA_AMBULANT_DXG_TOOLTIP, "Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden");
        de.put(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE, "Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)");
        de.put(ACTION_SUBJECT, "Aktion");
        de.put(RULES_KLINIK_ENTGELTART, "Klinik_Entgeltart");
        de.put(INPUT_TIME_TO, "Bis Uhrzeit");
        de.put(RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN, "Format: Ganzzahlig (Beispiel 2)");
        de.put(PROCESS_FINALISATION_SUPPLFEE_DIFF_FROM, "ZE Diff von");
        de.put(CATALOG_AOP_SHEET, "Abschnitt");
        de.put(RULES_TXT_CRIT_SOLE_HPN_DIS, "Heil- und Hilfsmittel: PZN");
        de.put(SETTING_CATEGORY_WEB_APP, "Web App");
        de.put(WORKFLOW_DEADLINE_MDK_DOCUMENT_DELIVER_DEADLINE_COMMENT, "Frist, bis zu der die vom MD angeforderten Unterlagen an den MD geliefert werden müssen");
        de.put(RULES_TXT_CRIT_STATION_TOOLTIP_1, "Der Name der Station.");
        de.put(SERVICE_CREATE, "Leistung erstellen");
        de.put(RULES_TEMP_241_GK_RSA_AGG, "GK RSA:AGG");
        de.put(RULES_CRIT_ACG_HOS_DOMINANT_COUNT, "acg_ADGAnzahlTop");
        de.put(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_EMERGENCY_CASE, "Integrierte Versorgung - Notfall");
        de.put(VALIDATION_ERROR_NO_ALTER_BIRTHDATE, "Das Geburtsdatum wird automatisch berechnet.");
        de.put(WM_REQUESTCREATION_TITLE, "Neue Anfrage erstellen");
        de.put(VALIDATION_ERROR_NO_PATIENT_NUMBER, "Geben Sie eine Patientennummer ein!");
        de.put(RULES_KLINIK_ENTGELTBETRAG, "Klinik_Entgeltbetrag");
        de.put(ANTIBIOTIC_CEFUROXIM_CEFOTIAM, "Cefuroxim/Cefotiam");
        de.put(RULES_CRIT_ACG_CODE_TOOLTIP, "Ermittelter ACG-Code für diesen Patienten. Der ACG-Code wird für jeden einzelnen Patienten zugewiesen. ACGs weisen Personen eindeutige, gegenseitig exklusive Morbiditätskategorien zu, basierend auf einem Erkrankungsmodell und auf dem erwarteten Ressourcenbedarf.");
        de.put(RULES_TEMP_191_KLINIK_VERWEILDAUER, "Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.");
        de.put(WORKING_LIST_CONTEXT_MENU_UNLOCK_SUCCESS, "Der Fall mit der Nummer {0} erfolgreich entsperrt");
        de.put(EVENT_TYPE_REMINDER_CHANGED, "Wiedervorlage geändert:  Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3}***Wiedervorlage geändert");
        de.put(INSURANCE_INSUREE, "Versicherungsnehmer");
        de.put(RULES_TXT_CRIT_ADMISSION_HOSPITAL_DIS, "Einweisendes Krankenhaus");
        de.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_5, "4 - 4. Quartal");
        de.put(RULES_TXT_INTERVAL_CASE, "Fall");
        de.put(INSURANCE_IDENT, "IKZ der Versicherung***Versicherung***Identifikationskennzeichen (kurz IKZ) der Versicherung");
        de.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_4, "3 - 3. Quartal");
        de.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_3, "2 - 2. Quartal");
        de.put(RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_2, "1 - 1. Quartal");
        de.put(LOGIN_FAILED_DATABASE_IS_NOT_AVAILABLE, "Datenbank {0} ist nicht verfügbar: {1}");
        de.put(GROUPER_ERROR_UNGROUPABLE, "Fall ist nicht gruppierbar, Prüfen Sie die Daten!");
        de.put(DOCUMENT_SIZE, "Dokumentgröße");
        de.put(RULES_DIAGNOSELOKALISATION, "DiagnoseLokalisation");
        de.put(RULES_TXT_CRIT_REMEDIES_COUNT, "he_menge");
        de.put(MDK_DOCUMENTS, "MD-Unterlagen");
        de.put(RULES_TXT_CRIT_BASE_VALUE_DIS, "Basisfallwert");
        de.put(PROCESSES_AVAILABLITY_DIALOG, "Vorhandene Vorgänge ");
        de.put(DISCHARGE_REASON_RELOCATION, "Rückverlegung");
        de.put(ADMISSION_BY_LAW, "GPS (Gesetzlich psych. Stat)");
        de.put(RULES_SEKDIAGNOSELOKALISATION, "SekDiagnoseLokalisation");
        de.put(RULES_TEMP_23_HM_MENGE, "Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.");
        de.put(RULES_TXT_CRIT_REMEDIES_PRICE, "he_preis");
        de.put(MS_OUTLOOK_VERSION, "Die Microsoft Outlook Version");
        de.put(REVIEW_ANSWERED_DATE, "geantwortet am");
        de.put(BILL_VALIDATION_NO_FEES, "Eine Rechnung muss mindestens ein Entgelt enthalten");
        de.put(FILE_ARCHIVE_ERROR_PARENT_NOT_FOUND, "Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil das Verzeichnis nicht angelegt werden konnte: {1}");
        de.put(FILE_DONT_EXISTS, "Datei nicht vorhanden");
        de.put(PROCESS_STATUS_CLOSE, "Vorgang schließen");
        de.put(DIALOG_BATCH_GROUPING_KORRUGVD_TOOLTIP, "Anzahl der Fälle, deren CW auf Grund Unterschreitung der UGVD vom Fallpauschalenkatalogwert abweicht");
        de.put(RULES_TEMP_230_GK_RSA_ALTER, "GK RSA:Alter");
        de.put(RULES_TXT_CRIT_PROCEDURE_GROUPED_TOOLTIP_1, "Prozedur, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.");
        de.put(EVENT_OPERATION_OPEN_ITEM, "{0} öffnen");
        de.put(AUDIT_TELEPHONE_AREA_CODE, "Vorwahl");
        de.put(DIALOG_BATCH_GROUPING_RULES_WARNING, "Warnung");
        de.put(INS_SHORT_SBK, "SBK");
        de.put(RULES_TXT_LIST_ADD, "Hinzufügen ");
        de.put(RULES_CRIT_ACG_MAJOR_ADG_COUNT_DIS, "ACG: Anzahl Haupt ADGs");
        de.put(RULES_VPS_DISCOVERED_AT_TOOLTIP, "VPS: VPS - Fehler wurde festgestellt am");
        de.put(PROCESS_COMPLETION_FINAL_VALUES, "Werte final");
        de.put(PROCESS_TYPE_HOSPITAL, "Krankenhaus");
        de.put(REVIEW_DEADLINE_ANSWER_INSURANCE_DATE, "Antwortfrist KK");
        de.put(CONFORMATION, "Bestätigung");
        de.put(CATALOG_AOP_CATALOG, "AOP-Katalog");
        de.put(PROCESS_CONFIRM, "Vorgang {0} öffnen?");
        de.put(CASE_DELETE_PROCESS, "Vorgang löschen");
        de.put(MENU_BATCH_GROUPING_DETAILS_FILTER, "Fallversionen");
        de.put(RULES_TXT_CRIT_SOLE_FULL_HIMIGROUP_COUNT_DIS, "Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelgruppe");
        de.put(DIALOG_BATCH_GROUPING_LOS, "VWD");
        de.put(RULES_TXT_CRIT_BOTTOM_LENGTH_OF_STAY_DIS, "untere Grenzverweildauer");
        de.put(CASE_RESOLVE_RULES, "Regeln");
        de.put(LEVEL_CONFIG, "Informationen zur Konfiguration");
        de.put(BILL_CORRECTION_DEADLINE_DAYS, "Tage bis Rechnungskorrektur MD***Korrektur MD");
        de.put(GERM_GROWTH_SCATTERED, "vereinzelt");
        de.put(RULES_PRUEFDATUM_1_AUFNAHMEDATUM, "Prüfdatum1 (Aufnahmedatum)");
        de.put(RULES_TEMP_65_ENTLASSENDEFACHABTEILUNG, "z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.");
        de.put(BILL_OPEN_ITEM_DEBIT_CREDIT_KEY, "S/H");
        de.put(AUDIT_CASE_DIALOG_END_DATE, "Ende am");
        de.put(RULES_7S_BEWILLIGUNG_PFLEGESACHLEISTUNG, "7S - Bewilligung Pflegesachleistung");
        de.put(SERVER, "Anwendungsserver");
        de.put(PROCESS_FINALISATION_SUPPLFEE_FINAL_FROM, "ZE Final von");
        de.put(DISCHARGE_REASON_2_ABLE_TO_WORK_VENTILATED_NO_PRESCRIPTION, "arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung");
        de.put(VERSION_RISK_TYPE_CASE_FINALISATION, "Vorgangsabschluss");
        de.put(NO_ADMISSION_CAUSE_FOUND, "Aufnahmeanlass ist nicht gesetzt");
        de.put(MENU_DATABASE_CHANGE_VALIDATION_DB_SELECTION, "Bitte eine Datenbank wählen");
        de.put(RULES_TXT_CRIT_CARE_DAYS_DIS, "Anzahl der Pflegetagen");
        de.put(OPSCODE_VALIDATION, "Ungültiger OPS Code. Bitte geben Sie einen gültigen Eintrag ein!");
        de.put(PATIENT_FIRST_NAME, "Vorname");
        de.put(ADDITIONAL_DATA, "Zusätzliche Daten");
        de.put(RULES_TXT_CRIT_INTENSIV_STAY_TOOLTIP_1, "Tage, die der Patient auf der Intensivstation verbracht hat.");
        de.put(RULES_TXT_CRIT_ADMISSION_DIAG_DIS, "Aufnahmediagnose");
        de.put(RULES_CRIT_ACG_RXMG_TOOLTIP, "Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten");
        de.put(FILE_ADD, "Datei hinzufügen");
        de.put(DOCUMENT, "Dokument");
        de.put(DATA_RECORD_CORRECTION_DEADLINE_FROM, "Frist Dat.-Korrektur von");
        de.put(AUDIT_CITY, "Ort");
        de.put(TP_301_INFORMATION_KEY_30_EKH61, "Es wurde keine Einigung erzielt und das Erörterungsverfahren ist gemäß § 9 Abs. 12 PrüfvV beendet (INKA) ");
        de.put(TP_301_INFORMATION_KEY_30_EKH60, "Abrechnungsstreitigkeit gilt infolge fehlender Erörterung oder fehlender Mitwirkung als erörtert gemäß § 9 Abs. 11 PrüfvV (INKA) ");
        de.put(DIALOG_QUESTION_DELETE, "Wollen Sie {0} wirklich löschen?");
        de.put(PROCESSLIST_CSV_EXPORT_DIAG, "Vorgangliste wird als CSV exportiert");
        de.put(RULES_MITTLERE_VERWEILDAUER, "mittlere_Verweildauer");
        de.put(RULES_GK_RSA_AGG, "GK_RSA_AGG");
        de.put(FEE_GROUP_HOSPITAL_INDIVIDUAL_PEPP_ANNEX_1B_INPATIENT_AND_2B_PARTIAL_INPATIENT_WITH_FINAL_INVOICE, "Krankenhausindividuelle PEPP Anlage 1b (vollst) und 2b (teilstat) (mit Schlussrechnung)");
        de.put(RULES_TEMP_105_ZUSCHLAGSTAGE, "Format: Ganzzahlig (Beispiel 5)");
        de.put(ADD_CASE_TITLE, "Falleingabe");
        de.put(RULES_CRIT_INSURANCE_STATUS_TOOLTIP_5, "5 - Rentner & Angehörige");
        de.put(CASE_SIMULATON_ACTIONS, "Aktionen");
        de.put(RULES_CRIT_INSURANCE_STATUS_TOOLTIP_4, "3 - familienversichert");
        de.put(BILL_VALIDATION_INVALID_FEE_KEY_LENGTH, "Entgeltschüssel muss 8 Zeichen haben");
        de.put(PROCESS_FINALISATION_CW_DIFF, "CW Diff***CW Diff***Differenz der Bewertungsrelation der initialen zugeordneten Fallversion (KIS) und der ggf. geänderten Checkpoint-Fallversion,zugeordnet beim Vorgangsabschluss (CW Initial - CW Final = CW Diff ).");
        de.put(RULES_CRIT_INSURANCE_STATUS_TOOLTIP_3, "1 - selbst versichert");
        de.put(RULES_CRIT_INSURANCE_STATUS_TOOLTIP_2, "0 - kein");
        de.put(INSURANCE_VALID_FROM_TO, "Gültig von/bis");
        de.put(AUDIT_EDITOR, "Bearbeiter");
        de.put(GROUPER_STATUS_INVALID_GENDER, "Ungültiges Geschlecht");
        de.put(MENU_DATABASE_CHANGE, "Datenbank wechseln...");
        de.put(TREATING_DEPARTMENT_301, "§301-Schlüssel der FAB***beh. FAB §301***§301-Schlüssel der behandelnden Fachabteilung");
        de.put(ROW_NUM, "Zeilennummer***Zeile***Zeilennummer im Suchergebnis");
        de.put(DOCUMENT_DATE, "Dokumentendatum");
        de.put(TP_301_INFORMATION_KEY_30_EKH51, "Einvernehmliche Beendigung des Erörterungsverfahren ohne Einigung gemäß § 9 Abs. 10 PrüfvV (INKA) ");
        de.put(TP_301_INFORMATION_KEY_30_EKH50, "Einigung im Erörterungsverfahren und Beendigung gemäß § 9 Abs. 8 PrüfvV (INKA) ");
        de.put(RULES_08_IV, "08 - IV");
        de.put(RULES_TEMP_58_POSTLEITZAHL, "Format: Ganzzahlig (Beispiel 10245) 5-stellig");
        de.put(VERSIONCONTROLL_TITLE, "Versionsverwaltung");
        de.put(FEE_GROUP_BPFLV, "BPflV");
        de.put(HOSPITAL_IDENT, "IKZ des Krankenhauses***IKZ Krankenhaus***");
        de.put(CATALOG_AOP_CATEGORY_DESCRIPTION_2, "Leistungen, bei denen sowohl eine ambulante, als auch stationäre Durchführung möglich ist");
        de.put(NO_TABLE_FOUND_VALIDATION, "Die in der Regellogik benutzte Tabelle ist  der XML nicht vorhanden");
        de.put(CATALOG_AOP_CATEGORY_DESCRIPTION_1, "Leistungen, die in der Regel ambulant erbracht werden können");
        de.put(PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION, "KAIN Datum der Entscheidung***Entsch. Datum***Datum der leistungsrechtlichen Entscheidung(MDK01, MDK02, MDK03, MDK10,MDK20)");
        de.put(CASE_MERGING_CONDITION_SIX_DRG, "Zweite DRG Partition O***Zweite a. Part. O");
        de.put(INFORM_SUPPORT, "Support informieren");
        de.put(VALIDATION_CATALOGDATA_NO_MDKS_FOUND, "In den Katalogen wurden keine medizinischen Dienste hinterlegt!");
        de.put(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DATE_DIS, "KHMedikament: Verordnungsdatum");
        de.put(CASE_MERGING_JOB_STOPPING, "Fallzusammenführung wird beendet");
        de.put(RULES_TXT_CRIT_ENTGELTART_TOOLTIP_1, "Der Entgeltschlüssel, alphanumerisch 8-stellig, z.B. 48000001 für DRG - Systemzuschlag, angegeben wird der Code.");
        de.put(RULES_TXT_CRIT_PSYCH_ONE_2_ONE_INFANTS_TOOLTIP, "Anzahl Stunden 1:1 Behandlung Kinder");
        de.put(TP_301_INFORMATION_KEY_30_EKH43, "Annahme nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag gemäß § 9 Abs. 7 PrüfvV (INKA) ");
        de.put(TP_301_INFORMATION_KEY_30_EKH42, "Ablehnung nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (INKA) ");
        de.put(VALIDATION_ERROR_NO_PATIENT_LAST_NAME, "Geben Sie den Nachnamen des Patienten ein!");
        de.put(TP_301_INFORMATION_KEY_30_EKH41, "Anzeige für eine ausnahmsweise Zulassung nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (INKA) ");
        de.put(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_SUCCESS, "Der Fall mit der Nummer {0} erfolgreich gelöscht");
        de.put(RULES_GK_RSA_AUSGABENGESAMT, "GK_RSA_AusgabenGesamt");
        de.put(DAYS_STAY_PEPP, "Berechnungstage");
        de.put(INSURANCE_NUMBER_FEHLER, "Versichertennummer des Patienten bei der Versicherung  nicht vorhanden");
        de.put(FILE_ARCHIVE_ERROR_PARENT_IS_FILE, "Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, da eine Datei als Verzeichnis ausgewählt wurde: {1}");
        de.put(CATALOG_DOWNLOAD_PROGRESS_SYNCHRONIZATION_STARTED, "Prüfe, ob der Client auf dem neuesten Stand ist...");
        de.put(WORKING_LIST_COLUMNS_SELECTED, "Gewählte Spalten");
        de.put(VALIDATION_MASTERDATA_NO_ACTION_TYPES_FOUND, "In den Stammdaten wurden keine Aktionstypen hinterlegt!");
        de.put(NO_RULE_TYPE_FOUND_4_RULE_VALIDATION, "In der zu importierenden Datei ist der Regeltyp nicht vorhanden. Dieser wird beim Import angelegt");
        de.put(GROUPER_OPS_RES_TYPE_OR_OPS, "OR-Prozedur ");
        de.put(RULES_CRIT_MRSA_HOSP_DXG_TOOLTIP, "Diagnosegruppe, die anhand einer ICD von einem Krankenhaus kodiert worden sind");
        de.put(MODIFIED_ON, "Geändert am {0}");
        de.put(ADDRESS_PHONE_NUMBER, "Telefonnummer");
        de.put(TP_301_INFORMATION_KEY_30_EKH35, "Ablehnung mündliches Erörterungsverfahren (INKA) ");
        de.put(TP_301_INFORMATION_KEY_30_EKH34, "Zustimmung mündliches Erörterungsverfahren (INKA) ");
        de.put(MENU_BATCH_GROUPING_START, "Ermitteln");
        de.put(RULES_TEMP_84_ENTGELTABRECHNUNGVON, "Format: YYYYMMDD");
        de.put(TP_301_INFORMATION_KEY_30_EKH33, "Aufforderung mündliches Erörterungsverfahren (INKA) ");
        de.put(ANTIBIOTIC_GENTAMICIN, "Gentamicin");
        de.put(RULES_TEMP_250_DIAGNOSENGRUPPEN, "GK RSA:Ambulante DxG");
        de.put(DAILY_FEE_VALUE, "ET-Betrag");
        de.put(TP_301_INFORMATION_KEY_30_EKH32, "Ablehnung der Verlängerung des Erörterungsverfahrens (INKA) ");
        de.put(TP_301_INFORMATION_KEY_30_EKH31, "Annahme der Aufforderung zur Verlängerung des Erörterungsverfahrens (INKA) ");
        de.put(REMINDER_VALIDATION_ERROR_NO_VALID_RECEIVER, "WV Empfänger nicht vorhanden");
        de.put(TP_301_INFORMATION_KEY_30_EKH30, "Aufforderung zur Verlängerung des Erörterungsverfahrens (INKA) ");
        de.put(MDK_AREA_CODE, "Postleitzahl");
        de.put(RULES_TEMP_32_GESAMTATCDOSIERUNG, "Format: Fließkommazahl (Beispiel: 2.5)");
        de.put(HEALTH_INSURANCE, "Krankenkasse");
        de.put(LOCK_PROCESS_ENTRY_MESSAGE, "Der Vorgang {0} ist seit {2} Uhr bereits von Nutzer {1} geöffnet!");
        de.put(RULES_TEMP_210_AUSGABEN, "GK RSA:Ausgaben für KH");
        de.put(RULES_09_MODELLVORHABEN, "09 - Modellvorhaben");
        de.put(CASE_DETAILS_INT_10, "Int 10");
        de.put(RULES_TEMP_68_STATION, "Format: alphanumerisch (Beispiel: 7B)");
        de.put(RULES_TXT_CRIT_DRGPARTITION_DIS, "DRGPartition");
        de.put(RULES_TEMP_232_GK_RSA_ERWERBSMINDERUNGSTAGE, "GK RSA:Erwerbsminderungstage");
        de.put(RULES_CRIT_ACG_PREGNANTTOOLTIP_2, "0 - Patientin war nicht schwanger während Beobachtungszeitraum");
        de.put(LAB_DATA_CATEGORY, "Kategorie***Kategorie***Labor Kategorie");
        de.put(RULES_TEMP_82_PFLEGETAGE, "Pflegetage (PEPP)");
        de.put(ADMISSION_DIAGNOSIS, "Aufnahmediagnose");
        de.put(REQUEST_TYPE_INSURANCE_ASSOCIATION, "Berufsgenossenschaft");
        de.put(STATE_THURINGIA, "Freistaat Thüringen");
        de.put(RULES_TEMP_166_KLINIK_ENTGELTANZAHL, "Format: Ganzzahlig (Beispiel 2)");
        de.put(DISCHARGE_DEPARTMENT_301_NAME, "§301-Name der FAB***entl. FAB ***§301-Name der entlassende Fachabteilung");
        de.put(RULES_TEMP_107_AUFNAHMEDATUM, "Format: YYYYMMDD");
        de.put(FILTER_CASES_CANCEL, "Alle stornierte Fälle");
        de.put(RULES_VPS_CRIT_GROUP, "VPS Kriterien");
        de.put(RULES_TEMP_222_GK_RSA_MEHRLEISTUNGDMP, "GK RSA:Mehrleistungen DMP");
        de.put(VALIDATION_WARNING_OPS_DATE, "Das Datum der Prozedur ist außerhalb der Aufenthaltsdauer in der Abteilung!");
        de.put(QUARTER_4, "Q4");
        de.put(QUARTER_3, "Q3");
        de.put(QUARTER_2, "Q2");
        de.put(QUARTER_1, "Q1");
        de.put(DISCHARGE_REASON_LAYING_TO_ANOTHER_HOSPITAL_COOPERATION, "Verlegung in ein anderes Krankenhaus i.R.e. Kooperation");
        de.put(RULES_GK_RSA_PZNCODE, "GK_RSA_PZNCode");
        de.put(RULES_KLINIK_VWD_STUNDEN, "Klinik_Vwd_Stunden");
        de.put(RULES_29_DAK_INTERNE_ENTGELTE_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE, "29 - DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige");
        de.put(DOCUMENTATION_RISK_AREA, "Risikobereiche");
        de.put(AUDIT_PRE_TRIAL_END_DATE, "Vorverfahren Ende");
        de.put(FEE_GROUP_IV_INTEGRATED_CARE, "IV (integrierte Versorgung)");
        de.put(LEVEL_ERROR, "Fehler (Ausnahme wurde abgefangen. Bearbeitung wurde alternativ fortgesetzt)");
        de.put(DOCUMENTATION_RISK, "Risiko in %***Risiko in %***Risiko in Prozent");
        de.put(WORKFLOW_MDK_AUDIT_COMPLETION_DEADLINE, "Frist bis zum Abschluss des Vorverfahrens***Frist Vv Abschluss");
        de.put(DISCHARGE_REASON_DISMISSAL_AND_SUBSEQUENT_RECOVERY, "Entlassung mit nachfolgender Wiederaufnahme");
        de.put(PLACE_OF_REG_REQUEST, "Bei Anfrage");
        de.put(MDK_START_AUDIT_FROM, "Einl. MD-Prüfung von");
        de.put(MENU_BATCH_GROUPING_DO_SIMULATE, "DRG/PEPP Simulation");
        de.put(REQUEST_TYPE_EV, "Erörterungsverfahren");
        de.put(DOCUMENT_CREATE, "Dokument hinzufügen");
        de.put(MDK_DEADLINE_FOR_SUBMISSION, "Abgabefrist bis");
        de.put(REQUEST_REPORT_DATE_TO, "Gutachtendatum bis");
        de.put(REVENUE_MATH_DRG_CARE_GRADE_LAYOUT, "Pflege-Erlös: bei PflegeCW {0} (CW pro Tag {1} x {2} Tag(e))");
        de.put(TP_301_INFORMATION_KEY_30_MDK31, "Diese vom MD konkret benannten angeforderten Unterlagen wurden nicht fristgemäß vorgelegt und können nicht im Erörterungsverfahren vorgelegt werden gemäß § 7 Abs. 2 Satz 11 PrüfvV (KAIN)");
        de.put(RULES_ANZAHLNEBENDIAGNOSEN, "AnzahlNebendiagnosen");
        de.put(TP_301_INFORMATION_KEY_30_MDK30, "Keine fristgemäße Übermittlung der Unterlagen. Die Krankenhausabrechnung gilt als erörtert gemäß § 7 Abs. 2 Satz 10 PrüfvV (KAIN) ");
        de.put(RULES_CRIT_ACG_MEDC_TOOLTIP_1, "Format: Alphanumerisch (Beispiel MUS)");
        de.put(RULES_TEMP_206_GK_RSA_PZNGESAMTDOSIS, "GK RSA:PZN-Gesamtdosis");
        de.put(VERSION_NUMBER_FROM, "Versionsnummer von");
        de.put(NEW_RULE, "neue Regel");
        de.put(DEPARTMENT_TYPE_SPECIAL_INSTITUTION, "BE");
        de.put(LAB_DATA_MAX_LIMIT, "Max-Limit***Max-Limit***Obergrenze");
        de.put(TP_301_INFORMATION_KEY_30_EKH02, "Inhaltliche begründetes Bestreiten der Entscheidung der Krankenkasse gemäß § 9 Abs. 1 Satz 1 bis 3 PrüfvV mit gleichzeitiger Einleitung des EV (INKA) Tp301.InformationKey30");
        de.put(TP_301_INFORMATION_KEY_30_EKH01, "Inhaltliche begründetes Bestreiten der Entscheidung der Krankenkasse gemäß § 9 Abs. 1 Satz 1 und 2 PrüfvV ohne Einleitung des EV (INKA) ");
        de.put(RULES_VPS_TEST_OBJECT_TOOLTIP, "VPS: Prüfgegenstand des Fehlers aus der Iskv");
        de.put(RULES_TXT_OP_GT_EQUAL, "größer gleich ( >= )");
        de.put(NEW_RULE_TYPE, "neuer Regeltyp");
        de.put(RULES_TXT_CRIT_CASE_STR_4_TOOLTIP, "Optional herstellbares alphanumerisches Kriterium");
        de.put(VALIDATION_ERROR_NO_DISCHARGE_DAY_DEPARTMENT_INDEX, "Geben Sie ein Entlassungsdatum für die Fachabteilung an Position {0} an!");
        de.put(GROUPER_OPS_RES_TYPE_NOR_INVALID_LOC, "NonOR-Prozedur mit Konflikt Zusatzkennzeichen ");
        de.put(DRG, "Diagnosebezogene Fallgruppen***DRG***DRG");
        de.put(ERROR_OCCURED, "Ein Fehler ist aufgetreten, versuchen Sie es bitte erneut");
        de.put(REVIEW_INSURANCE_WORKER, "Bearbeiter");
        de.put(LAB_DATA_KIS_EXTERN_KEY, "KIS-Extern***KIS-Extern***Schlüssel aus");
        de.put(DRG_COLUMN, "DRG***DRG***engl. Diagnosis Related Groups. Fallpauschale, diagnosebezogene Fallgruppe für Somatik.");
        de.put(WORKFLOW_CLOSE_AND_CREATE_REMINDER_CONFIRMATION, "Alle in der Liste angezeigten Wiedervorlagen werden abgeschlossen.Wollen Sie für diese Vorgänge eine neue Wiedervorlage generieren?");
        de.put(RULE_COLUMN_SUGGESTION, "Vorschlag***Vorschlag***Korrektur Vorschlag");
        de.put(TP_301_INFORMATION_KEY_30_MDK20, "Datum der leistungsrechtlichen Entscheidung");
        de.put(RULES_VPS_ERR_CODE, "VPS_Fehlercode");
        de.put(RULES_TXT_CRIT_MOVEMENTS_COUNT_TOOLTIP_1, "Ist gleich der Summe der Fachabteilungen, in denen der Patient behandelt worden ist.");
        de.put(RULES_VPS_DISCOVERED_FROM_DIS, "VPS: Festgestelt durch");
        de.put(ANTIBIOTIC_METRONIDAZOL, "Metronidazol");
        de.put(PROCESS_FINALISATION_CW_CARE_INITIAL_TO, "Pfl. CW Initial bis");
        de.put(BILL_REF_TYPE, "Fakturabeleg");
        de.put(EXPORT_TYPE_EXCEL, "Excel***Microsoft Excel");
        de.put(FEE_GROUP_MODEL_PROJECTS_WITHOUT_FINAL_INVOICE, "Modellvorhaben ohne Schlussrechnung");
        de.put(ACTUAL, "Aktuell");
        de.put(RULES_CRIT_AMBU_CARE_CARE_LEVEL_DIS, "Pflegedaten: Pflegestufe");
        de.put(PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION_FROM, "Entsch. Datum von");
        de.put(TP_301_INFORMATION_KEY_30_MDK14, "Endgültige Anpassung eines bereits geltend gemachten Aufschlages (KAIN)");
        de.put(TP_301_INFORMATION_KEY_30_MDK13, "Information durch die Krankenkasse über MD Abbruch wegen Datenkorrektur ohne Minderung des Abrechnungsbetrages, Prüfverfahren beendet");
        de.put(RULES_GROUPERRELEVANTEDIAGNOSE, "GrouperrelevanteDiagnose");
        de.put(TP_301_INFORMATION_KEY_30_MDK12, "Information durch die Krankenkasse über MD Abbruch wegen Datenkorrektur mit Minderung des Abrechnungsbetrages, Prüfverfahren beendet");
        de.put(TP_301_INFORMATION_KEY_30_MDK11, "Rücknahme des Aufschlages, keine weitere Geltendmachung (KAIN)");
        de.put(TP_301_INFORMATION_KEY_30_MDK10, "Keine oder nicht vollständige Unterlagen an MD mit Folge der Aufrechnung");
        de.put(RULES_TXT_CRIT_REDUCTION_DAYS_TOOLTIP_1, "(Untere Grenzverweildauer + 1 ) - Ist-Verweildauer. Im Fallpauschalenkatalog ist immer der erste Abschlagstag angegeben.(Spalte 7)");
        de.put(RULES_TXT_OP_EQUAL, "gleich ( == )");
        de.put(GROUPER_MDC_OR_SK_INFANT_DAY_CARE, "Kinder- und Jugendpsychiatrie, teilstationär***TKJ");
        de.put(PROCESS_START_DATE_TO, "Anlagedatum bis ");
        de.put(BILL_TYPE_ENUM_FORECAST, "Vorausberechnung");
        de.put(ANTIBIOTIC_AMPICILLIN_AMOXICILLIN, "Ampicillin/Amoxicillin");
        de.put(CASEFEE_SUM, "Summe");
        de.put(RULES_TEMP_169_FALL_NUMERIC_6, "Fall.Numeric6");
        de.put(RULES_13_DRG_ANLAGE_1_OHNE_SCHLUSSRECHNUNG, "13 - DRG Anlage 1 ohne Schlussrechnung");
        de.put(PROCESS_FINALISATION_CW_DIFF_TO, "CW Diff bis");
        de.put(RULES_TXT_CRIT_CASE_COST, "Fallkosten");
        de.put(MENU_BATCH_GROUPING_DO_RULES_TOOLTIP, "Alle Fälle werden mit den aktivierten Regeln des entsprechenden Jahres geprüft.");
        de.put(ADMISSION_MODE_SURGEON_ANESTHETIST, "B-Op./B-Anäst.******Belegoperateur und -anastesist");
        de.put(CASE_DETAILS_DOUBLE_5, "Gleitkommazahl 5");
        de.put(STATE_SAXONY_ANHALT, "Sachsen-Anhalt");
        de.put(CASE_DETAILS_DOUBLE_4, "Gleitkommazahl 4");
        de.put(CASE_DETAILS_DOUBLE_3, "Gleitkommazahl 3");
        de.put(PROCESS_REVIEW_DEADLINE_DAYS, "Tage bis zu Ende des Fristes für Starten EV***EV Start");
        de.put(STATE_HAMBURG, "Freie und Hansestadt Hamburg");
        de.put(CASE_DETAILS_DOUBLE_2, "Gleitkommazahl 2");
        de.put(CASE_DETAILS_DOUBLE_1, "Gleitkommazahl 1");
        de.put(ICD_TYPE_TRANSFERRING, "Verlegung");
        de.put(DISCHARGE_REASON_COMPLETED_TREATMENT_FOR_OTHER_REASONS_INPATIENT_TREATMENT, "Behandlung aus sonstigen Gründen beendet, nachstationäre Behandlung");
        de.put(TP_301_INFORMATION_KEY_30_MDK09, "Mitteilung des Aufschlages mit Grundlage der Berechnung (KAIN)");
        de.put(RULES_TEMP_93_KOSTENGEWICHT_EFFEKTIV, "Format: Fließkommazahl (Beispiele: 0.202 oder 2.531)");
        de.put(TP_301_INFORMATION_KEY_30_MDK08, "Mitteilung über einen veränderten Aufschlagsbetrag (KAIN)");
        de.put(RULES_TXT_CRIT_SDX_NUMBER_DIS, "Anzahl Nebendiagnosen");
        de.put(TP_301_INFORMATION_KEY_30_MDK07, "Mitteilung über einen unveränderten Aufschlagsbetrag (KAIN)");
        de.put(TP_301_INFORMATION_KEY_30_MDK06, "Reaktion zu evtl. Einwänden des Krankenhauses (KAIN)");
        de.put(TP_301_INFORMATION_KEY_30_MDK04, "Festlegung des Aufschlages gemäß § 275c Abs. 3 SGB V durch die Krankenkasse");
        de.put(TP_301_INFORMATION_KEY_30_MDK03, "Leistungsrechtliche Entscheidung hat aufgrund Datensatzkorrektur (§7 Abs. 5 PrüfvV) im MD-Verfahren, ohne MD Abbruch, keine Beanstandung (ohne Minderung des Abrechnungsbetrages) der Abrechnung als Ergebnis");
        de.put(TP_301_INFORMATION_KEY_30_MDK02, "Leistungsrechtliche Entscheidung hat Beanstandung der Abrechnung (mit Minderung des Abrechnungsbetrages) als Ergebnis");
        de.put(RULES_TXT_CRIT_ENTGELTABRECHNUNG_VON_DIS, "Entgeltabrechnung von");
        de.put(TP_301_INFORMATION_KEY_30_MDK01, "Leistungsrechtliche Entscheidung hat keine Beanstandung der Abrechnung (ohne Minderung des Abrechnungsbetrages) als Ergebnis");
        de.put(RULES_GK_RSA_ARZTAUSGABEN, "GK_RSA_ArztAusgaben");
        de.put(ANTIBIOTIC_LEVOFLOXACIN, "Levofloxacin");
        de.put(RULE_FILTER_DIALOG_WARNING_RULES, "Warnung");
        de.put(TEMPLATE_CONFIRMATION_TEXT, "Möchten Sie das Dokument {0} im Vorgang {1} speichern?");
        de.put(WIEDERVORLAGE_COMMENT_DIALOG, "Hinweis");
        de.put(RULES_74_MASSNAHMEN_IM_WOHNUMFELD, "74 - Maßnahmen im Wohnumfeld");
        de.put(BILL_REF_CURRENCY, "Währung");
        de.put(DIALOG_BATCH_GROUPING_CWDIFFPOS_TOOLTIP, "Summe über alle Fälle: Durch die Prüfregeln ermittelter maximaler positiver dCW eines Falles (Rolle:{0})");
        de.put(VALIDATION_ERROR_ERROR_COUNT, "Anzahl der Fehler {0}:");
        de.put(STATE_BADEN_WUERTTEMBERG, "Baden-Württemberg");
        de.put(BILL_NETVALUE, "Betrag");
        de.put(RULES_TEMP_15_HM_PREIS, "Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)");
        de.put(DISCHARGE_REASON_2_UNABLE_TO_WORK, "arbeitsunfähig entlassen");
        de.put(MDK_CREATE_REQUEST_WINDOW, "Anfrage anlegen");
        de.put(BEGE_DIRECT_FAX, "Fax direkt");
        de.put(DISCHARGE_DATE, "Entlassungsdatum***Entl.-Datum");
        de.put(SAME_TABLE, "Tabelle mit der gleichen Inhalt in dem Pool vorhanden");
        de.put(START_GROUPING_TOOLTIP_RUNNING, "Grouping wurde mit den ausgewählten Fällen gestartet");
        de.put(GROUPER_STATUS_INACCEPTABLE_PRINCIPAL_ICD, "Diagnose-Code als Hauptdiagnose nicht zulässig");
        de.put(CASE_STATUS_NEW, "Neu");
        de.put(RULES_OBERE_GRENZVERWEILDAUER, "obere_Grenzverweildauer");
        de.put(NO_HOSPITAL_CASE, "es wurde kein Fall an Grouper übergeben");
        de.put(ADMISSION_DEPARTMENT_301, "§301-Schlüssel der FAB***aufn. FAB §301***§301-Schlüssel der aufnehmenden Fachabteilung");
        de.put(REQUEST_REPORT_DATE, "Gutachtendatum***Guta.-Datum***Datum, an dem das Gutachten zu einer Anfrage erstellt wurde.Es wird die letzte Anfrage verwendet.");
        de.put(RULES_GK_RSA_STATIONAEREKRANKHEITSNUMMER, "GK_RSA_StationaereKrankheitsnummer");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_33, "30 - Behandlung regulär beendet, Überleitung in die Übergangspflege");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_32, "29 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_31, "28 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_30, "27 - Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung für Pseudofachabteilung 0004(für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)");
        de.put(PROCESS_FINALISATION_REVENUE_FINAL_TO, "Erlös Final bis");
        de.put(COUNT_SD_TO, "Anz. ND bis");
        de.put(RULES_VPS_ERR_TEXT, "VPS_Fehlertext");
        de.put(MENU_BATCH_GROUPING_GROUPED, "Nur Fälle ohne DRG/PEPP");
        de.put(CANCEL_SEARCH, "Suche abbrechen");
        de.put(PROCESS_BASERATE_PEPP_VALID_FROM, "Gültig von");
        de.put(INSURANCE_BILL_RECIVED_FROM, "Eingang Rech.-datum Kasse von");
        de.put(RISK_PERCENT_TOTAL_TO, "Risiko in % bis");
        de.put(ANTIBIOTIC_FUCIDINE, "Fucidine+");
        de.put(LOGIN_FAILED_DATABASE_NO_RIGHT_OTHER_ROLE, "Mit Ihrer Rolle ''''{0}'''' können Sie mit dieser Datenbank arbeiten.");
        de.put(ANTIBIOTIC_PIPERACILLIN, "Piperacillin");
        de.put(CASE_CARE_CWMINIMAL_TO, "PflegeCW min. bis");
        de.put(CATALOG_MDC_PRE, "PRÄ-MDC");
        de.put(RULES_TEMP_259_DIAGNOSENGRUPPEN, "GK RSA:Stationäre Krankheitsnummer");
        de.put(CASE_MERGING_CONDITION_FIVE_DRG, "Erste DRG Partition M oder A***Part. M oder A");
        de.put(LAB_DATA_RANGE, "Normalwert***Normalwert***Normalwert bei Laborwerten");
        de.put(ADMISSION_CAUSE_INSTRUCTION_BY_DOCTOR, "Einweisung durch Arzt");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_29, "26 - Beginn  eines  Zeitraumes  ohne  direkten Patientenkontakt  (stationsäquivalente Behandlung) (für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)");
        de.put(ICD_TYPE_DEPARTMENT_ADMISSION, "Fachabteilung Aufnahme");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_28, "25 - Entlassung zum Jahresende bei Aufnahme im Vorjahr");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_27, "24 - Beendigung eines externen Aufenthalts mit Abwesenheit über Mitternacht (BPflVBereich - für Pseudo-Fachabteilung 0003)");
        de.put(PROCESS_BASERATE_PEPP, "Verwendete Basiswert für IKZ {0}");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_26, "23 - Beginn eines externen Aufenthalts mit Abwesenheit ücber Mitternacht (BPflV-Bereich - für verlegende Fachabteilung)");
        de.put(PROCESS_ERROR_OPEN, "Vorgang konnte nicht geöffnet werden!");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_23, "22 - Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_22, "21 - Entlassung mit nachfolgender Wiederaufnahme");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_21, "20 - Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_20, "19 - Entlassung vor Wiederaufnahme mit Neueinstufung");
        de.put(PROMPT_TEXTFIELD_TEXT, "Suchtext eingeben");
        de.put(VALIDATION_ERROR_INVALID_BILL, "Rechnungsnummer ist nicht eingegeben!");
        de.put(RULES_TEMP_81_DRG, "Format: Alphanumerisch (Beispiele: A11B oder B75A)");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_19, "18 - Rückverlegung");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_18, "17 - interne Verlegung mit Wechsel zwischen den Geltungsbereichen");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_17, "15 - Behandlung gegen ärztlichen Rat beendet, nachstationäre Beh.");
        de.put(ANTIBIOTIC_CEFPODOXIM, "Cefpodoxim");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_16, "14 - Behandlung aus sonstigen Gründen beendet, nachstationäre Beh.");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_15, "13 - Externe Verlegung zur psychiatrischen Behandlung");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_14, "12 - Interne Verlegung");
        de.put(CATALOG_MENU_NO_UPDATE_CHANGES_FOUND, "Keine Änderungen um {0} Uhr");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_13, "11 - Entlassung in ein Hospiz");
        de.put(RULES_ENTGELTSUMMEJEENTGELT, "EntgeltsummeJeEntgelt");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_12, "10 - Entlassung in eine Pflegeeinrichtung");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_11, "09 - Entlassung in eine Rehabilitationseinrichtung");
        de.put(EVENT_NAME_PATIENT, "Patient");
        de.put(RULES_CRIT_DIS_TYPE_TOOLTIP_10, "08 - Verlegung in ein anderes Krankenhaus i.R.e. Kooperation");
        de.put(RULES_GK_RSA_NEBENDIAGNOSESTATIONAER, "GK_RSA_NebendiagnoseStationaer");
        de.put(RULES_TEMP_144_HAUPTDIAGNOSE, "Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)");
        de.put(MDK_AUDIT_COMPLETION_DEADLINE_ERROR, "Keinen gültigen Eintrag für die Frist \"Abschluss MD-Prüfung\" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.");
        de.put(RULES_CRIT_ACG_PROBABILITY_HIGH_TC_DIS, "ACG: Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten");
        de.put(INPUT_TIME_FROM, "Von Uhrzeit");
        de.put(RULES_CRIT_MDC_TOOLTIP_9, "07 - Krankheiten und Störungen an hepatobiliärem System und Pankreas");
        de.put(RULES_TXT_CRIT_RECHNUNG_DATUM_TOOLTIP_1, "Datum, an dem die Rechnung erstellt worden ist.");
        de.put(RULES_CRIT_MDC_TOOLTIP_8, "06 - Krankheiten und Störungen der Verdauungsorgane");
        de.put(RULES_CRIT_MDC_TOOLTIP_7, "05 - Krankheiten und Störungen des Kreislaufsystems");
        de.put(RULES_CRIT_MDC_TOOLTIP_6, "04 - Krankheiten und Störungen der Atmungsorgane");
        de.put(RULES_CRIT_MDC_TOOLTIP_5, "03 - Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO)");
        de.put(PROCESS_FINALISATION_LOS_FINAL_TO, "VWD Final bis");
        de.put(RULES_CRIT_MDC_TOOLTIP_4, "02 - Krankheiten und Störungen des Auges");
        de.put(RULES_CRIT_MDC_TOOLTIP_3, "01 - Krankheiten und Störungen des Nervensystems");
        de.put(RULES_TEMP_174_FALL_STRING_6, "Fall.String6");
        de.put(RULES_CRIT_MDC_TOOLTIP_2, "00 - unbekannt");
        de.put(JOB_LOCK_ERROR_OPEN_CASES, "Bitte den Fall oder die Fälle schließen um fortzufahren! ");
        de.put(WORKFLOW_TYPE_NO_CASE, "Nicht fallbezogener Vorgang");
        de.put(IDENT_NUMBER, "IK-Nummer");
        de.put(DIALOG_BATCH_GROUPING_CWDIFFNEG_TOOLTIP, "Summe über alle Fälle: Durch die Prüfregeln ermittelter maximaler negativer dCW eines Falles (Rolle:{0})");
        de.put(RULES_TEMP_2_HE_PREIS, "Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)");
        de.put(RULES_GK_RSA_QUARTALDIAGNOSENAMBULANT, "GK_RSA_QuartalDiagnosenAmbulant");
        de.put(RULES_TXT_CASE_CRITERIA, "Fallkriterien");
        de.put(DRG_PARTITION_MEDICAL, "medizinisch");
        de.put(RULES_TEMP_96_MITTLERE_VERWEILDAUER, "Format: Ganzzahlig (Beispiel 5)");
        de.put(BILL_TYPE, "Rechnungsart");
        de.put(PROCESS_REVIEW_DEADLINE_DATE, "Frist bis zu dem Start des Erörterungsverfahrens***EV Frist bis***Datum, bis zu dem EV nach dem Erhalten des MD Guthabens in die wege geleitet werden muss");
        de.put(DISCHARGE_REASON_DISMISSAL_IN_A_HOSPICE, "Entlassung in ein Hospiz");
        de.put(ACG_AGE_BAND_12_17, "12-17");
        de.put(ANTIBIOTIC_MOXIFLOXACIN, "Moxifloxacin");
        de.put(CATALOG_DOWNLOAD_PROGRESS_CATALOG_WILL_DROP, "Lösche {0} ");
        de.put(MENU_WIZARD_BACK, "Zurück");
        de.put(COMMON_CASE_DATA, "Allgemeine Falldaten");
        de.put(VALIDATION_ERROR_INVALID_DEPARTMENT_INDEX, "Bezeichnung der Fachabteilung an Position {0} ist nicht korrekt!");
        de.put(GROUPER_OPS_RES_TYPE_OR_INVALID_LOC, "OR-Prozedur mit Konflikt Zusatzkennzeichen ");
        de.put(RULES_TXT_OP_MANY_IN, "mehrere in ( ## )");
        de.put(RISK_AREA_MAIN_DIAGNOSES, "Hauptdiagnose");
        de.put(NO_TABLE_IN_XML_BUT_IN_DB_FOUND, "Die in der Regellogik benutzte Tabelle ist nicht in der XML gefunden, aber in DB vorhanden");
        de.put(RULES_75_TEILSTATIONAERE_PFLEGE_TAGES_NACHTPFLEGE, "75 - Teilstationäre Pflege (Tages-/ Nachtpflege)");
        de.put(REVIEW_REQUEST_STATUS, "Status der Anfrage");
        de.put(WORKFLOW_TYPE, "Typ des Vorgangs***Typ");
        de.put(RULES_20_MODELLVORHABEN_OHNE_SCHLUSSRECHNUNG, "20 - Modellvorhaben ohne Schlussrechnung");
        de.put(RULES_ENTGELTANZAHLJEENTGELT, "EntgeltanzahlJeEntgelt");
        de.put(RULE_VALIDATION_VALUE_NOT_IN_CATALOG, "der Wert ist nicht im Katalog");
        de.put(RULES_MVERORDNUNGSDATUM, "MVerordnungsdatum");
        de.put(WORKING_LIST_CONTEXT_MENU_UNLOCK, "Fall entsperren");
        de.put(ADMISSION_REASON_2_COST_UNIT_CHANGE_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE, "Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)");
        de.put(SAME_RULE_OTHER_LOGIC, "Regel mit gleichen Ident und abweichenden Logik in dem Pool vorhanden");
        de.put(PROCESS_FINALISATION_REVENUE_INIT_TO, "Erlös Initial bis");
        de.put(NO_ADMISSION_REASON_34_FOUND, "Aufnahmegrund 34 ist nicht gesetzt");
        de.put(RULES_TEMP_27_HM_VERORDNUNGSDATUM, "Datum, an dem das Hilfsmittel verordnet wurde.");
        de.put(RULES_KLINIK_PARTITION, "Klinik_Partition");
        de.put(MDK_DOCUMENT_DELIVER_DEADLINE, "Frist bis zum Versenden der Unterlagen an den MD***Frist Versand***Datum, bis zu dem die vom MD angeforderten Unterlagen an den MD geliefert werden müssen");
        de.put(JOB_STATUS_STARTING, "Wird gestartet");
        de.put(DISCHARGE_REASON_COMPLETED_WITH_TRANSFER_IN_TEMPORARY_CARE, "Behandlung regulär beendet, Überleitung in die Übergangspflege");
        de.put(RULES_TXT_CRIT_CLINIC_FEE_VALUE_DIS, "Klinik: Entgeltbetrag");
        de.put(EVENT_TYPE_PROCESS_USER_CHANGED, "Vorgangs-Bearbeiter geändert***Vorgangs-Bearbeiter geändert");
        de.put(RULES_TXT_CRIT_SOLE_PRESCRIPT_DATE_DIS, "Heil- und Hilfsmittel: Verordnungsdatum");
        de.put(REMINDERS, "Wiedervorlagen");
        de.put(INS_SHORT, "Kasse***Versicherungs-/Krankenkassengruppen");
        de.put(EVENT_OPERATION_EDIT_ITEM, "{0} editieren");
        de.put(RULES_TEMP_115_EINWEISENDERARZT, "Format: 9-stellig numerisch (Beispiel: 123456789)");
        de.put(PATIENT_LAST_NAME, "Nachname");
        de.put(RULES_TEMP_261_DIAGNOSENGRUPPEN, "GK RSA:stationäre HMG relevante Diagnosen");
        de.put(WORKFLOW_STATE_OPEN, "offen");
        de.put(RULES_GK_RSA_PACKUNGANZAHL, "GK_RSA_PackungAnzahl");
        de.put(DIALOG_BATCH_GROUPING_GROUPEDCASES, "gegroupte Fälle");
        de.put(MS_OFFICE_NOT_FOUND, "Es wurde keine Office-Installation gefunden");
        de.put(RULES_TEMP_62_AUFNEHMENDEFACHABTEILUNG, "Format: Ganzzahlig (Beispiel 1500)");
        de.put(CATALOG_DOWNLOAD_DAILY_FEE, "Tagesentgelte");
        de.put(RULES_TEMP_138_GLEICHENPROZEDURENANZAHL, "Format: Ganzzahlig (Beispiel 4)");
        de.put(RULES_TEMP_169_KLINIK_AUFNAHMEDATUM, "Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.");
        de.put(RULE_LIST, "Regelliste");
        de.put(EVENT_TYPE_PROCESS_CONTINUED, "Vorgang fortgesetzt***Vorgang fortgesetzt");
        de.put(DOCUMENT_LOCATION, "Ort");
        de.put(ANTIBIOTIC_CLINDAMYCIN, "Clindamycin");
        de.put(RULES_TEMP_56_GEBURTSDATUM, "Format: YYYYMMDD");
        de.put(VERSION_NUMBER, "Versionsnummer***Version***Nummer der Fallversion");
        de.put(BILLING_DATE_TO, "Rech.-Datum bis");
        de.put(RULES_TEMP_249_DIAGNOSENGRUPPEN, "GK RSA:Ambulante Diagnosen Qualifizierung");
        de.put(MESSAGE_CASE_NOT_GROUPED, "Der Fall wurde mit dem Groupermodel {0} noch nicht gegroupt");
        de.put(AGE_DAYS, "Tage");
        de.put(RULES_KLINIK_AUFNAHMEUHRZEIT, "Klinik_Aufnahmeuhrzeit");
        de.put(PROCESS_REVIEW_DEADLINE_SEND_ON_DATE_TO, "EV Nachsendefrist bis");
        de.put(CATALOG_ICD_ERROR, "[ICD Katalog {0} : Hat keinen Bezeichner]");
        de.put(RULES_CRIT_SK_TOOLTIP_7, "'PSY' - Psychiatrie, vollstationär (PEPP PA01A-PA99Z)");
        de.put(RULES_CRIT_SK_TOOLTIP_6, "'PSO' - Psychosomatik, vollstationär (PEPP PP00Z-PP99Z)");
        de.put(RULES_CRIT_SK_TOOLTIP_5, "'PKJ' - Kinder- und Jugendpsychiatrie, vollstationär (PEPP PK01Z-PK99Z)");
        de.put(FILE_IMPORT_SUCCESS, "Import der Datei: {0} war erfolgreich!");
        de.put(COUNT_CASES, "Anzahl Fälle");
        de.put(RULES_CRIT_SK_TOOLTIP_4, "'TPY' - Psychiatrie, teilstationär (PEPP TA02Z-TA99Z)");
        de.put(RULES_CRIT_SK_TOOLTIP_3, "'TPO' - Psychosomatik, teilstationär (PEPP TP20Z-TP99Z)");
        de.put(RULES_CRIT_SK_TOOLTIP_2, "'TKJ' - Kinder- und Jugendpsychiatrie, teilstationär (PEPP TK04Z-TK99Z)");
        de.put(DAYS_SURCHARGE, "Zuschlagstage");
        de.put(RULES_CRIT_SK_TOOLTIP_1, "'PRE' - Prä-Strukturkategorie (PEPP P001Z-PF02Z)");
        de.put(RULES_TEMP_172_FALL_NUMERIC_9, "Fall.Numeric9");
        de.put(NO_CASE_DETAILS_FOUND, "Falleigenschaften des Falles sind nicht vorhanden");
        de.put(DAY_TUESDAY, "Dienstag***Di");
        de.put(RULES_TEMP_81_DRGPFLEGEERLOES, "Pflegeerlös eines DRG - Falles ab 2020 ");
        de.put(DATE_OF_ADMISSION, "Aufnahmetag");
        de.put(LAB_DATA_GROUP, "Gruppe***Gruppe***Laborgruppe");
        de.put(INITIATION_TEST_PROCESSES, "Einleitung Prüfverfahren***Einleitung Prüfv.***Datum, markiert den Beginn des Verfahrens anhand einer Anfrage.Es wird die letzte Anfrage verwendet.");
        de.put(CARE_PERC_INF, "Summe 1:1(K/J)");
        de.put(DURATION_FROM, "von");
        de.put(RULES_TXT_PROCEDURE, "Prozedur");
        de.put(RULES_TXT_CRIT_SEPARATION_DAY_TIME_DIS, "Entlassungsuhrzeit");
        de.put(RULES_TXT_CRIT_VACATION_DIS, "Urlaub");
        de.put(RULES_21_DMP_OHNE_SCHLUSSRECHNUNG, "21 - DMP ohne Schlussrechnung");
        de.put(RENAME, "Umbenennen");
        de.put(RULES_TXT_CRIT_ENTGELTEINZELBETRAG_DIS, "Entgelteinzelbetrag");
        de.put(MDK_START_AUDIT_EXTENDED_TO, "Einl. erw. MD-Prüfung bis");
        de.put(ANTIBIOTIC_CEFOTAXIM_CEFTRIAXON, "Cefotaxim/Ceftriaxon");
        de.put(LOGIN_FAILED_DATABASE_DOES_NOT_EXIST, "Datenbank {0} existiert nicht");
        de.put(CASEFEE, "Entgelte");
        de.put(READONLY_DOC_ITEM_WARD_COMPECATING_THERAPY, "Stationsersetzende Behandlungsmethoden");
        de.put(REVIEW_AUDIT_REASONS, "Prüfgründe");
        de.put(CREATION_DATE, "Anlagedatum des Falles***Anlagedatum***Datum, an dem der Fall angelegt wurde");
        de.put(RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_PZN_DIS, "KH Medikament: Gesamtdosis für PZN");
        de.put(REMINDER_SUBJECT_WAITING_FOR_MDK_REPORT, "Warten auf MD-Gutachten");
        M.put("de", de); 
    } 

    /**
     * <pre>ACG_AGE_BAND_00_04
     * SQLite key: acg_age_band_00-04
     * [en] 00-04
     * [de] 00-04</pre>
     * ATTENTION this value ('00-04') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_3!
     * @return [en] 00-04, [de] 00-04
     */
    public static String getAcgAgeBand00_04() {
        return get(ACG_AGE_BAND_00_04).value;
    }

    /**
     * <pre>ACG_AGE_BAND_05_11
     * SQLite key: acg_age_band_05-11
     * [en] 05-11
     * [de] 05-11</pre>
     * ATTENTION this value ('05-11') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_4!
     * @return [en] 05-11, [de] 05-11
     */
    public static String getAcgAgeBand05_11() {
        return get(ACG_AGE_BAND_05_11).value;
    }

    /**
     * <pre>ACG_AGE_BAND_12_17
     * SQLite key: acg_age_band_12-17
     * [en] 12-17
     * [de] 12-17</pre>
     * ATTENTION this value ('12-17') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_5!
     * @return [en] 12-17, [de] 12-17
     */
    public static String getAcgAgeBand12_17() {
        return get(ACG_AGE_BAND_12_17).value;
    }

    /**
     * <pre>ACG_AGE_BAND_18_34
     * SQLite key: acg_age_band_18-34
     * [en] 18-34
     * [de] 18-34</pre>
     * ATTENTION this value ('18-34') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_6!
     * @return [en] 18-34, [de] 18-34
     */
    public static String getAcgAgeBand18_34() {
        return get(ACG_AGE_BAND_18_34).value;
    }

    /**
     * <pre>ACG_AGE_BAND_35_44
     * SQLite key: acg_age_band_35-44
     * [en] 35-44
     * [de] 35-44</pre>
     * ATTENTION this value ('35-44') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_7!
     * @return [en] 35-44, [de] 35-44
     */
    public static String getAcgAgeBand35_44() {
        return get(ACG_AGE_BAND_35_44).value;
    }

    /**
     * <pre>ACG_AGE_BAND_45_54
     * SQLite key: acg_age_band_45-54
     * [en] 45-54
     * [de] 45-54</pre>
     * ATTENTION this value ('45-54') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_8!
     * @return [en] 45-54, [de] 45-54
     */
    public static String getAcgAgeBand45_54() {
        return get(ACG_AGE_BAND_45_54).value;
    }

    /**
     * <pre>ACG_AGE_BAND_55_64
     * SQLite key: acg_age_band_55-64
     * [en] 55-64
     * [de] 55-64</pre>
     * @return [en] 55-64, [de] 55-64
     */
    public static String getAcgAgeBand55_64() {
        return get(ACG_AGE_BAND_55_64).value;
    }

    /**
     * <pre>ACG_AGE_BAND_65_69
     * SQLite key: acg_age_band_65-69
     * [en] 65-69
     * [de] 65-69</pre>
     * @return [en] 65-69, [de] 65-69
     */
    public static String getAcgAgeBand65_69() {
        return get(ACG_AGE_BAND_65_69).value;
    }

    /**
     * <pre>ACG_AGE_BAND_70_74
     * SQLite key: acg_age_band_70-74
     * [en] 70-74
     * [de] 70-74</pre>
     * ATTENTION this value ('70-74') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_10!
     * @return [en] 70-74, [de] 70-74
     */
    public static String getAcgAgeBand70_74() {
        return get(ACG_AGE_BAND_70_74).value;
    }

    /**
     * <pre>ACG_AGE_BAND_75_79
     * SQLite key: acg_age_band_75-79
     * [en] 75-79
     * [de] 75-79</pre>
     * ATTENTION this value ('75-79') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_11!
     * @return [en] 75-79, [de] 75-79
     */
    public static String getAcgAgeBand75_79() {
        return get(ACG_AGE_BAND_75_79).value;
    }

    /**
     * <pre>ACG_AGE_BAND_80_84
     * SQLite key: acg_age_band_80-84
     * [en] 80-84
     * [de] 80-84</pre>
     * ATTENTION this value ('80-84') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_12!
     * @return [en] 80-84, [de] 80-84
     */
    public static String getAcgAgeBand80_84() {
        return get(ACG_AGE_BAND_80_84).value;
    }

    /**
     * <pre>ACG_AGE_BAND_85_P
     * SQLite key: acg_age_band_85p
     * [en] 85+
     * [de] 85+</pre>
     * ATTENTION this value ('85+') seems to be also defined under the key RULES_CRIT_ACG_AGE_BAND_TOOLTIP_13!
     * @return [en] 85+, [de] 85+
     */
    public static String getAcgAgeBand85P() {
        return get(ACG_AGE_BAND_85_P).value;
    }

    /**
     * <pre>ACG_INDEX_TYPE_BTH
     * SQLite key: acg_index_type_bth
     * [en] Diagnosis &amp; Drugs (Both)
     * [de] Diagnosen &amp; Medikamente (Beides)</pre>
     * @return [en] Diagnosis {@literal &} Drugs (Both), [de] Diagnosen {@literal &} Medikamente (Beides)
     */
    public static String getAcgIndexTypeBTH() {
        return get(ACG_INDEX_TYPE_BTH).value;
    }

    public static Translation getAcgIndexTypeBTHObj() {
        return get(ACG_INDEX_TYPE_BTH);
    }

    /**
     * <pre>ACG_INDEX_TYPE_ICD
     * SQLite key: acg_index_type_icd
     * [en] Diagnosis
     * [de] Diagnosen</pre>
     * ATTENTION this value ('Diagnosis') seems to be also defined under the key DIAGNOSIS!
     * @return [en] Diagnosis, [de] Diagnosen
     */
    public static String getAcgIndexTypeICD() {
        return get(ACG_INDEX_TYPE_ICD).value;
    }

    /**
     * <pre>ACG_INDEX_TYPE_NP
     * SQLite key: acg_index_type_np
     * [en] Not presend
     * [de] Nicht vorhanden</pre>
     * @return [en] Not presend, [de] Nicht vorhanden
     */
    public static String getAcgIndexTypeNP() {
        return get(ACG_INDEX_TYPE_NP).value;
    }

    /**
     * <pre>ACG_INDEX_TYPE_RX
     * SQLite key: acg_index_type_rx
     * [en] Drugs (Rx supplements are prescription or prescription medications)
     * [de] Medikamente (Rx-Präparate sind verschreibungspflichtige bzw. rezeptpflichtige Medikamente)</pre>
     * @return [en] Drugs (Rx supplements are prescription or prescription medications), [de] Medikamente (Rx-Präparate sind verschreibungspflichtige bzw. rezeptpflichtige Medikamente)
     */
    public static String getAcgIndexTypeRx() {
        return get(ACG_INDEX_TYPE_RX).value;
    }

    public static Translation getAcgIndexTypeRxObj() {
        return get(ACG_INDEX_TYPE_RX);
    }

    /**
     * <pre>ACG_INDEX_TYPE_TRT
     * SQLite key: acg_index_type_trt
     * [en] Treatment
     * [de] Durchgehende Behandlung</pre>
     * ATTENTION this value ('Treatment') seems to be also defined under the key ICD_TYPE_TREATMENT! this value ('Treatment') seems to be also defined under the key TREATMENT!
     * @return [en] Treatment, [de] Durchgehende Behandlung
     */
    public static String getAcgIndexTypeTRT() {
        return get(ACG_INDEX_TYPE_TRT).value;
    }

    /**
     * <pre>ACTION_ADDED_TOOLTIP
     * SQLite key: action_added_tooltip
     * [en] See the details of an Action
     * [de] Siehe die Details einer Aktion</pre>
     * @return [en] See the details of an Action, [de] Siehe die Details einer Aktion
     */
    public static String getActionAddedTooltip() {
        return get(ACTION_ADDED_TOOLTIP).value;
    }

    /**
     * <pre>ACTION_COMMENT
     * SQLite key: action_comment
     * [de] Text der letzten Aktion (Aktion Text)</pre>
     * @return [de] Text der letzten Aktion (Aktion Text)
     */
    public static String getActionComment() {
        return get(ACTION_COMMENT).value;
    }

    public static Translation getActionCommentObj() {
        return get(ACTION_COMMENT);
    }

    /**
     * <pre>ACTION_CREATE
     * SQLite key: action_create
     * [en] create Action
     * [de] Aktion erstellen</pre>
     * @return [en] create Action, [de] Aktion erstellen
     */
    public static String getActionCreate() {
        return get(ACTION_CREATE).value;
    }

    /**
     * <pre>ACTION_CREATION_DATE
     * SQLite key: action_creationdate
     * [en] Action Creation Date (Creation Date)
     * [de] Anlagedatum der Aktion (Anlagedatum)</pre>
     * @return [en] Action Creation Date (Creation Date), [de] Anlagedatum der Aktion (Anlagedatum)
     */
    public static String getActionCreationDate() {
        return get(ACTION_CREATION_DATE).value;
    }

    public static Translation getActionCreationDateObj() {
        return get(ACTION_CREATION_DATE);
    }

    /**
     * <pre>ACTION_MSG_NO_CREATE_RIGHT
     * SQLite key: action_msg_no_create_right
     * [en] You do not have right to create any action
     * [de] Sie haben keine Berechtigung, eine Aktion zu erstellen</pre>
     * @return [en] You do not have right to create any action, [de] Sie haben keine Berechtigung, eine Aktion zu erstellen
     */
    public static String getActionMsgNoCreateRight() {
        return get(ACTION_MSG_NO_CREATE_RIGHT).value;
    }

    /**
     * <pre>ACTION_MSG_NO_EDIT_RIGHT
     * SQLite key: action_msg_no_edit_right
     * [en] You do not have right to edit any action
     * [de] Sie haben keine Berechtigung, eine Aktion zu editieren</pre>
     * @return [en] You do not have right to edit any action, [de] Sie haben keine Berechtigung, eine Aktion zu editieren
     */
    public static String getActionMsgNoEditRight() {
        return get(ACTION_MSG_NO_EDIT_RIGHT).value;
    }

    /**
     * <pre>ACTION_REMOVED_TOOLTIP
     * SQLite key: action_removed_tooltip
     * [en] This Action is removed
     * [de] Diese Aktion wird entfernt</pre>
     * @return [en] This Action is removed, [de] Diese Aktion wird entfernt
     */
    public static String getActionRemovedTooltip() {
        return get(ACTION_REMOVED_TOOLTIP).value;
    }

    /**
     * <pre>ACTION_SUBJECT
     * SQLite key: action_subject
     * [en] Action
     * [de] Aktion</pre>
     * ATTENTION this value ('Action') seems to be also defined under the key EVENT_NAME_ACTION!
     * @return [en] Action, [de] Aktion
     */
    public static String getActionSubject() {
        return get(ACTION_SUBJECT).value;
    }

    /**
     * <pre>ACTION_SUBJECT_LATEST
     * SQLite key: action_subject_latest
     * [en] Action (Type of the latest action)
     * [de] Typ der letzten Aktion (Aktion)</pre>
     * @return [en] Action (Type of the latest action), [de] Typ der letzten Aktion (Aktion)
     */
    public static String getActionSubjectLatest() {
        return get(ACTION_SUBJECT_LATEST).value;
    }

    public static Translation getActionSubjectLatestObj() {
        return get(ACTION_SUBJECT_LATEST);
    }

    /**
     * <pre>ACTION_SUBJECTS
     * SQLite key: action_subjects
     * [en] Action subjects
     * [de] Aktionstypen</pre>
     * @return [en] Action subjects, [de] Aktionstypen
     */
    public static String getActionSubjects() {
        return get(ACTION_SUBJECTS).value;
    }

    /**
     * <pre>ACTION_TYPE
     * SQLite key: action_type
     * [en] Action type
     * [de] Aktionstyp</pre>
     * @return [en] Action type, [de] Aktionstyp
     */
    public static String getActionType() {
        return get(ACTION_TYPE).value;
    }

    /**
     * <pre>ACTUAL
     * SQLite key: actual
     * [en] actual
     * [de] Aktuell</pre>
     * @return [en] actual, [de] Aktuell
     */
    public static String getActual() {
        return get(ACTUAL).value;
    }

    /**
     * <pre>ADD
     * SQLite key: add
     * [en] Add
     * [de] Hinzufügen</pre>
     * @return [en] Add, [de] Hinzufügen
     */
    public static String getAdd() {
        return get(ADD).value;
    }

    /**
     * <pre>ADD_CASE_ADD_BILL
     * SQLite key: add_case_add_bill
     * [en] add bill
     * [de] Rechnung zufügen</pre>
     * @return [en] add bill, [de] Rechnung zufügen
     */
    public static String getAddCaseAddBill() {
        return get(ADD_CASE_ADD_BILL).value;
    }

    /**
     * <pre>ADD_CASE_ADD_DEPARTMENT
     * SQLite key: addcase_adddepartment
     * [en] Add Department
     * [de] Abteilung hinzufügen</pre>
     * @return [en] Add Department, [de] Abteilung hinzufügen
     */
    public static String getAddCaseAddDepartment() {
        return get(ADD_CASE_ADD_DEPARTMENT).value;
    }

    /**
     * <pre>ADD_CASE_BILLS
     * SQLite key: add_case_bills
     * [en] bills
     * [de] Rechnungen</pre>
     * ATTENTION this value ('Bills') seems to be also defined under the key SAP_BILLS!
     * @return [en] bills, [de] Rechnungen
     */
    public static String getAddCaseBills() {
        return get(ADD_CASE_BILLS).value;
    }

    /**
     * <pre>ADD_CASE_CANCEL_CONFIRMATION
     * SQLite key: addcase_cancel_confirmation
     * [en] Do you really want to quit  Case input?
     * [de] Wollen Sie die manuelle Falleingabe wirklich beenden?</pre>
     * @return [en] Do you really want to quit  Case input?, [de] Wollen Sie die manuelle Falleingabe wirklich beenden?
     */
    public static String getAddCaseCancelConfirmation() {
        return get(ADD_CASE_CANCEL_CONFIRMATION).value;
    }

    /**
     * <pre>ADD_CASE_DRG_TITLE
     * SQLite key: addcase_drg_title
     * [en] Group Result / Revenue
     * [de] Grouperergebnis/Erlös</pre>
     * @return [en] Group Result / Revenue, [de] Grouperergebnis/Erlös
     */
    public static String getAddCaseDrgTitle() {
        return get(ADD_CASE_DRG_TITLE).value;
    }

    /**
     * <pre>ADD_CASE_EDIT_ICD_OPS_DESCRIPTION
     * SQLite key: addcase_editicdopsdescription
     * [en] Add and edit diagnoses and procedures for the stay in the department
     * [de] Zum Aufenthalt in der Abteilung Diagnosen und Prozeduren hinzufügen und bearbeiten</pre>
     * @return [en] Add and edit diagnoses and procedures for the stay in the department, [de] Zum Aufenthalt in der Abteilung Diagnosen und Prozeduren hinzufügen und bearbeiten
     */
    public static String getAddCaseEditIcdOpsDescription() {
        return get(ADD_CASE_EDIT_ICD_OPS_DESCRIPTION).value;
    }

    /**
     * <pre>ADD_CASE_REMOVE_BILL
     * SQLite key: add_case_remove_bill
     * [en] remove bill
     * [de] Rechnung entfernen</pre>
     * @return [en] remove bill, [de] Rechnung entfernen
     */
    public static String getAddCaseRemoveBill() {
        return get(ADD_CASE_REMOVE_BILL).value;
    }

    /**
     * <pre>ADD_CASE_REMOVE_DEPARTMENT
     * SQLite key: addcase_removedepartment
     * [en] Remove Department
     * [de] Abteilung entfernen</pre>
     * @return [en] Remove Department, [de] Abteilung entfernen
     */
    public static String getAddCaseRemoveDepartment() {
        return get(ADD_CASE_REMOVE_DEPARTMENT).value;
    }

    /**
     * <pre>ADD_CASE_SEARCH_HOSPITAL_OPTIONEN
     * SQLite key: addcase_search_hospital_optionen
     * [en] Further hospital search criteria
     * [de] Krankenhaus - weitere Suchkriterien</pre>
     * @return [en] Further hospital search criteria, [de] Krankenhaus - weitere Suchkriterien
     */
    public static String getAddCaseSearchHospitalOptionen() {
        return get(ADD_CASE_SEARCH_HOSPITAL_OPTIONEN).value;
    }

    /**
     * <pre>ADD_CASE_SEARCH_INSURANCE_OPTIONEN
     * SQLite key: addcase_search_insurance_optionen
     * [en] Further insurance search criteria
     * [de] Krankenkasse - weitere Suchkriterien</pre>
     * @return [en] Further insurance search criteria, [de] Krankenkasse - weitere Suchkriterien
     */
    public static String getAddCaseSearchInsuranceOptionen() {
        return get(ADD_CASE_SEARCH_INSURANCE_OPTIONEN).value;
    }

    /**
     * <pre>ADD_CASE_TITLE
     * SQLite key: addcase_title
     * [en] Create Case
     * [de] Falleingabe</pre>
     * @return [en] Create Case, [de] Falleingabe
     */
    public static String getAddCaseTitle() {
        return get(ADD_CASE_TITLE).value;
    }

    /**
     * <pre>ADD_CASE_TITLE_EXTENDED
     * SQLite key: addcase_title_extended
     * [en] Manual case creation: {0} ({1}/{2})
     * [de] Manuelle Falleingabe: {0} {1}/{2}</pre>
     * @param pParams placeholder replacements
     * @return [en] Manual case creation: {0} ({1}/{2}), [de] Manuelle Falleingabe: {0} {1}/{2}
     */
    public static String getAddCaseTitleExtended(final Object... pParams) {
        return get(ADD_CASE_TITLE_EXTENDED, pParams).value;
    }

    /**
     * <pre>ADDITIONAL_DATA
     * SQLite key: additionaldata
     * [en] Additional Data
     * [de] Zusätzliche Daten</pre>
     * @return [en] Additional Data, [de] Zusätzliche Daten
     */
    public static String getAdditionalData() {
        return get(ADDITIONAL_DATA).value;
    }

    /**
     * <pre>ADDRESS
     * SQLite key: address
     * [en] Address
     * [de] Anschrift</pre>
     * ATTENTION this value ('Address') seems to be also defined under the key AUDIT_ADDRESS! this value ('Address') seems to be also defined under the key MDK_ADDRESS!
     * @return [en] Address, [de] Anschrift
     */
    public static String getAddress() {
        return get(ADDRESS).value;
    }

    /**
     * <pre>ADDRESS_CITY
     * SQLite key: address_city
     * [en] City
     * [de] Stadt</pre>
     * ATTENTION this value ('City') seems to be also defined under the key AUDIT_CITY!
     * @return [en] City, [de] Stadt
     */
    public static String getAddressCity() {
        return get(ADDRESS_CITY).value;
    }

    /**
     * <pre>ADDRESS_DIFFER
     * SQLite key: address_differ
     * [en] Differend Address
     * [de] Abweichende Anschrift</pre>
     * @return [en] Differend Address, [de] Abweichende Anschrift
     */
    public static String getAddressDiffer() {
        return get(ADDRESS_DIFFER).value;
    }

    /**
     * <pre>ADDRESS_MOBILE_NUMBER
     * SQLite key: address_mobilenumber
     * [en] Mobile Number
     * [de] Mobilnummer</pre>
     * @return [en] Mobile Number, [de] Mobilnummer
     */
    public static String getAddressMobileNumber() {
        return get(ADDRESS_MOBILE_NUMBER).value;
    }

    /**
     * <pre>ADDRESS_PHONE_NUMBER
     * SQLite key: address_phonenumber
     * [en] Telephone Number
     * [de] Telefonnummer</pre>
     * @return [en] Telephone Number, [de] Telefonnummer
     */
    public static String getAddressPhoneNumber() {
        return get(ADDRESS_PHONE_NUMBER).value;
    }

    /**
     * <pre>ADDRESS_STREET
     * SQLite key: address_street
     * [en] Street
     * [de] Straße</pre>
     * @return [en] Street, [de] Straße
     */
    public static String getAddressStreet() {
        return get(ADDRESS_STREET).value;
    }

    /**
     * <pre>ADDRESS_TYPE_POSTAL
     * SQLite key: address_type_postal
     * [en] Postal Address
     * [de] Postanschrift</pre>
     * @return [en] Postal Address, [de] Postanschrift
     */
    public static String getAddressTypePostal() {
        return get(ADDRESS_TYPE_POSTAL).value;
    }

    /**
     * <pre>ADDRESS_TYPE_RESIDENTIAL
     * SQLite key: address_type_residential
     * [en] Residential Address
     * [de] Wohnanschrift</pre>
     * @return [en] Residential Address, [de] Wohnanschrift
     */
    public static String getAddressTypeResidential() {
        return get(ADDRESS_TYPE_RESIDENTIAL).value;
    }

    /**
     * <pre>ADDRESS_ZIP_CODE
     * SQLite key: address_zipcode
     * [en] ZIP Code
     * [de] Postleitzahl (PLZ)</pre>
     * @return [en] ZIP Code, [de] Postleitzahl (PLZ)
     */
    public static String getAddressZipCode() {
        return get(ADDRESS_ZIP_CODE).value;
    }

    public static Translation getAddressZipCodeObj() {
        return get(ADDRESS_ZIP_CODE);
    }

    /**
     * <pre>ADMISSION_BY_LAW
     * SQLite key: admissionbylaw
     * [en] Admission By Law
     * [de] GPS (Gesetzlich psych. Stat)</pre>
     * @return [en] Admission By Law, [de] GPS (Gesetzlich psych. Stat)
     */
    public static String getAdmissionByLaw() {
        return get(ADMISSION_BY_LAW).value;
    }

    /**
     * <pre>ADMISSION_BY_LAW_UNVOLUNTARY
     * SQLite key: admission_bylaw_unvoluntary
     * [en] Unvoluntary
     * [de] Unfreiwillig</pre>
     * @return [en] Unvoluntary, [de] Unfreiwillig
     */
    public static String getAdmissionByLawUnvoluntary() {
        return get(ADMISSION_BY_LAW_UNVOLUNTARY).value;
    }

    /**
     * <pre>ADMISSION_BY_LAW_VOLUNTARY
     * SQLite key: admission_bylaw_voluntary
     * [en] Voluntary
     * [de] Freiwillig</pre>
     * @return [en] Voluntary, [de] Freiwillig
     */
    public static String getAdmissionByLawVoluntary() {
        return get(ADMISSION_BY_LAW_VOLUNTARY).value;
    }

    /**
     * <pre>ADMISSION_CAUSE
     * SQLite key: admissioncause
     * [en] Admission Cause (Adm.-Cause)
     * [de] Aufnahmeanlass (Anlass)</pre>
     * @return [en] Admission Cause (Adm.-Cause), [de] Aufnahmeanlass (Anlass)
     */
    public static String getAdmissionCause() {
        return get(ADMISSION_CAUSE).value;
    }

    public static Translation getAdmissionCauseObj() {
        return get(ADMISSION_CAUSE);
    }

    /**
     * <pre>ADMISSION_CAUSE_ADMISSION_AFTER_REHA
     * SQLite key: admission_cause_admissionafterreha
     * [en] Admission after prior treatment in a rehabilitation facility
     * [de] Aufnahme nach vorausgegangener Behandlung in einer Rehaeinrichtung</pre>
     * @return [en] Admission after prior treatment in a rehabilitation facility, [de] Aufnahme nach vorausgegangener Behandlung in einer Rehaeinrichtung
     */
    public static String getAdmissionCauseAdmissionAfterReha() {
        return get(ADMISSION_CAUSE_ADMISSION_AFTER_REHA).value;
    }

    /**
     * <pre>ADMISSION_CAUSE_BIRTH
     * SQLite key: admission_cause_birth
     * [en] Birth
     * [de] Geburt</pre>
     * ATTENTION this value ('Birth') seems to be also defined under the key ADMISSION_REASON_BIRTH!
     * @return [en] Birth, [de] Geburt
     */
    public static String getAdmissionCauseBirth() {
        return get(ADMISSION_CAUSE_BIRTH).value;
    }

    /**
     * <pre>ADMISSION_CAUSE_COMPANION
     * SQLite key: admission_cause_companion
     * [en] Companion
     * [de] Begleitperson</pre>
     * @return [en] Companion, [de] Begleitperson
     */
    public static String getAdmissionCauseCompanion() {
        return get(ADMISSION_CAUSE_COMPANION).value;
    }

    /**
     * <pre>ADMISSION_CAUSE_EMERGENCY
     * SQLite key: admission_cause_emergency
     * [en] Emergency
     * [de] Notfall</pre>
     * @return [en] Emergency, [de] Notfall
     */
    public static String getAdmissionCauseEmergency() {
        return get(ADMISSION_CAUSE_EMERGENCY).value;
    }

    /**
     * <pre>ADMISSION_CAUSE_INSTRUCTION_BY_DENTIST
     * SQLite key: admission_cause_instructionbydentist
     * [en] Admission by dentist
     * [de] Einweisung durch Zahnarzt</pre>
     * @return [en] Admission by dentist, [de] Einweisung durch Zahnarzt
     */
    public static String getAdmissionCauseInstructionByDentist() {
        return get(ADMISSION_CAUSE_INSTRUCTION_BY_DENTIST).value;
    }

    /**
     * <pre>ADMISSION_CAUSE_INSTRUCTION_BY_DOCTOR
     * SQLite key: admission_cause_instructionbydoctor
     * [en] Admission by doctor
     * [de] Einweisung durch Arzt</pre>
     * @return [en] Admission by doctor, [de] Einweisung durch Arzt
     */
    public static String getAdmissionCauseInstructionByDoctor() {
        return get(ADMISSION_CAUSE_INSTRUCTION_BY_DOCTOR).value;
    }

    /**
     * <pre>ADMISSION_CAUSE_TRANSFERRING
     * SQLite key: admission_cause_transferring
     * [en] Transferring
     * [de] Verlegung</pre>
     * ATTENTION this value ('Transferring') seems to be also defined under the key ICD_TYPE_TRANSFERRING! this value ('Transferring') seems to be also defined under the key TRANSFERRING!
     * @return [en] Transferring, [de] Verlegung
     */
    public static String getAdmissionCauseTransferring() {
        return get(ADMISSION_CAUSE_TRANSFERRING).value;
    }

    /**
     * <pre>ADMISSION_CAUSE_TRANSFERRING_FROM_ANOTHER_HOSPITAL
     * SQLite key: admission_cause_transferringfromanotherhospital
     * [en] Transferring from another hospital (e.g. corporations)
     * [de] Verlegung (Aufnahme) aus einem anderem Krankenhaus i.R.e. Kooperation</pre>
     * @return [en] Transferring from another hospital (e.g. corporations), [de] Verlegung (Aufnahme) aus einem anderem Krankenhaus i.R.e. Kooperation
     */
    public static String getAdmissionCauseTransferringFromAnotherHospital() {
        return get(ADMISSION_CAUSE_TRANSFERRING_FROM_ANOTHER_HOSPITAL).value;
    }

    /**
     * <pre>ADMISSION_CAUSE_TRANSFERRING_WITHIN_24H
     * SQLite key: admission_cause_transferringwithin24h
     * [en] Transferring (treatment duration from transferring hospital is within 24 hours)
     * [de] Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden)</pre>
     * @return [en] Transferring (treatment duration from transferring hospital is within 24 hours), [de] Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden)
     */
    public static String getAdmissionCauseTransferringWithin24h() {
        return get(ADMISSION_CAUSE_TRANSFERRING_WITHIN_24H).value;
    }

    /**
     * <pre>ADMISSION_DATA
     * SQLite key: admissiondata
     * [en] Admission Data
     * [de] Aufnahmedaten</pre>
     * @return [en] Admission Data, [de] Aufnahmedaten
     */
    public static String getAdmissionData() {
        return get(ADMISSION_DATA).value;
    }

    /**
     * <pre>ADMISSION_DATE
     * SQLite key: admissiondate
     * [en] Admission Date (Adm.-Date)
     * [de] Aufnahmedatum (Aufn.-Datum)</pre>
     * @return [en] Admission Date (Adm.-Date), [de] Aufnahmedatum (Aufn.-Datum)
     */
    public static String getAdmissionDate() {
        return get(ADMISSION_DATE).value;
    }

    public static Translation getAdmissionDateObj() {
        return get(ADMISSION_DATE);
    }

    /**
     * <pre>ADMISSION_DATE_FOR_2013
     * SQLite key: admission_date_for_2013
     * [en] Admission date is before {0}
     * [de] Aufnahmedatum des Falles vor {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Admission date is before {0}, [de] Aufnahmedatum des Falles vor {0}
     */
    public static String getAdmissionDateFor2013(final Object... pParams) {
        return get(ADMISSION_DATE_FOR_2013, pParams).value;
    }

    /**
     * <pre>ADMISSION_DATE_FROM
     * SQLite key: admissiondatefrom
     * [en] Admission Date from
     * [de] Aufnahmedatum von</pre>
     * @return [en] Admission Date from, [de] Aufnahmedatum von
     */
    public static String getAdmissionDateFrom() {
        return get(ADMISSION_DATE_FROM).value;
    }

    /**
     * <pre>ADMISSION_DATE_TO
     * SQLite key: admissiondateto
     * [en] Admission Date to
     * [de] Aufnahmedatum bis</pre>
     * @return [en] Admission Date to, [de] Aufnahmedatum bis
     */
    public static String getAdmissionDateTo() {
        return get(ADMISSION_DATE_TO).value;
    }

    /**
     * <pre>ADMISSION_DEPARTMENT
     * SQLite key: admission_department
     * [de] KH interner Kurzname der aufn. FAB (aufn. FAB (int.))</pre>
     * @return [de] KH interner Kurzname der aufn. FAB (aufn. FAB (int.))
     */
    public static String getAdmissionDepartment() {
        return get(ADMISSION_DEPARTMENT).value;
    }

    public static Translation getAdmissionDepartmentObj() {
        return get(ADMISSION_DEPARTMENT);
    }

    /**
     * <pre>ADMISSION_DEPARTMENT_301
     * SQLite key: admission_department301
     * [de] §301-Schlüssel der FAB (aufn. FAB §301)</pre>
     * @return [de] §301-Schlüssel der FAB (aufn. FAB §301)
     */
    public static String getAdmissionDepartment301() {
        return get(ADMISSION_DEPARTMENT_301).value;
    }

    public static Translation getAdmissionDepartment301Obj() {
        return get(ADMISSION_DEPARTMENT_301);
    }

    /**
     * <pre>ADMISSION_DEPARTMENT_301_NAME
     * SQLite key: admission_department301_name
     * [de] §301-Name der FAB (aufn. FAB)</pre>
     * @return [de] §301-Name der FAB (aufn. FAB)
     */
    public static String getAdmissionDepartment301Name() {
        return get(ADMISSION_DEPARTMENT_301_NAME).value;
    }

    public static Translation getAdmissionDepartment301NameObj() {
        return get(ADMISSION_DEPARTMENT_301_NAME);
    }

    /**
     * <pre>ADMISSION_DEPARTMENT_SHORT
     * SQLite key: admission_department_short
     * [en] Admission Department §. 301 (Adm. 301)
     * [de] Aufnehmende FAB nach §. 301 (Aufn. 301)</pre>
     * @return [en] Admission Department §. 301 (Adm. 301), [de] Aufnehmende FAB nach §. 301 (Aufn. 301)
     */
    public static String getAdmissionDepartmentShort() {
        return get(ADMISSION_DEPARTMENT_SHORT).value;
    }

    public static Translation getAdmissionDepartmentShortObj() {
        return get(ADMISSION_DEPARTMENT_SHORT);
    }

    /**
     * <pre>ADMISSION_DIAGNOSIS
     * SQLite key: admission_diagnosis
     * [en] Admission Diagnosis
     * [de] Aufnahmediagnose</pre>
     * @return [en] Admission Diagnosis, [de] Aufnahmediagnose
     */
    public static String getAdmissionDiagnosis() {
        return get(ADMISSION_DIAGNOSIS).value;
    }

    /**
     * <pre>ADMISSION_MODE_DAY_CARE
     * SQLite key: admissionmode_daycare
     * [en] Day care (for DRG)
     * [de] Teilstationäre Versorgung(für teilstationäre DRG-Fallpauschale)</pre>
     * @return [en] Day care (for DRG), [de] Teilstationäre Versorgung(für teilstationäre DRG-Fallpauschale)
     */
    public static String getAdmissionModeDayCare() {
        return get(ADMISSION_MODE_DAY_CARE).value;
    }

    /**
     * <pre>ADMISSION_MODE_MAIN_DEPARTMENT
     * SQLite key: admissionmode_maindepartment
     * [en] MD
     * [de] HA</pre>
     * @return [en] MD, [de] HA
     */
    public static String getAdmissionModeMainDepartment() {
        return get(ADMISSION_MODE_MAIN_DEPARTMENT).value;
    }

    public static Translation getAdmissionModeMainDepartmentObj() {
        return get(ADMISSION_MODE_MAIN_DEPARTMENT);
    }

    /**
     * <pre>ADMISSION_MODE_MAIN_DEPARTMENT_CHARGE_DOCTOR
     * SQLite key: admissionmode_maindepartmentchargedoctor
     * [en] MD/B-ChargeDoc.
     * [de] HA/B-Hon.Arzt</pre>
     * @return [en] MD/B-ChargeDoc., [de] HA/B-Hon.Arzt
     */
    public static String getAdmissionModeMainDepartmentChargeDoctor() {
        return get(ADMISSION_MODE_MAIN_DEPARTMENT_CHARGE_DOCTOR).value;
    }

    public static Translation getAdmissionModeMainDepartmentChargeDoctorObj() {
        return get(ADMISSION_MODE_MAIN_DEPARTMENT_CHARGE_DOCTOR);
    }

    /**
     * <pre>ADMISSION_MODE_MAIN_DEPARTMENT_MIDWIFE
     * SQLite key: admissionmode_maindepartmentmidwife
     * [en] MD/B-Mid.
     * [de] HA/B-Heb.</pre>
     * @return [en] MD/B-Mid., [de] HA/B-Heb.
     */
    public static String getAdmissionModeMainDepartmentMidwife() {
        return get(ADMISSION_MODE_MAIN_DEPARTMENT_MIDWIFE).value;
    }

    public static Translation getAdmissionModeMainDepartmentMidwifeObj() {
        return get(ADMISSION_MODE_MAIN_DEPARTMENT_MIDWIFE);
    }

    /**
     * <pre>ADMISSION_MODE_NOT_RELEVANT
     * SQLite key: admissionmode_notrelevant
     * [en] Not Relevant
     * [de] Nicht relevant</pre>
     * @return [en] Not Relevant, [de] Nicht relevant
     */
    public static String getAdmissionModeNotRelevant() {
        return get(ADMISSION_MODE_NOT_RELEVANT).value;
    }

    /**
     * <pre>ADMISSION_MODE_SURGEON
     * SQLite key: admissionmode_surgeon
     * [en] B-Sur.
     * [de] B-Op.</pre>
     * @return [en] B-Sur., [de] B-Op.
     */
    public static String getAdmissionModeSurgeon() {
        return get(ADMISSION_MODE_SURGEON).value;
    }

    public static Translation getAdmissionModeSurgeonObj() {
        return get(ADMISSION_MODE_SURGEON);
    }

    /**
     * <pre>ADMISSION_MODE_SURGEON_ANESTHETIST
     * SQLite key: admissionmode_surgeonanesthetist
     * [en] B-Sur./B-Anest.
     * [de] B-Op./B-Anäst.</pre>
     * @return [en] B-Sur./B-Anest., [de] B-Op./B-Anäst.
     */
    public static String getAdmissionModeSurgeonAnesthetist() {
        return get(ADMISSION_MODE_SURGEON_ANESTHETIST).value;
    }

    public static Translation getAdmissionModeSurgeonAnesthetistObj() {
        return get(ADMISSION_MODE_SURGEON_ANESTHETIST);
    }

    /**
     * <pre>ADMISSION_MODE_SURGEON_ANESTHETIST_MIDWIFE
     * SQLite key: admissionmode_surgeonanesthetistmidwife
     * [en] B-Op./B-Anest./B-Mid.
     * [de] B-Op./B-Anäst./B-Heb.</pre>
     * @return [en] B-Op./B-Anest./B-Mid., [de] B-Op./B-Anäst./B-Heb.
     */
    public static String getAdmissionModeSurgeonAnesthetistMidwife() {
        return get(ADMISSION_MODE_SURGEON_ANESTHETIST_MIDWIFE).value;
    }

    public static Translation getAdmissionModeSurgeonAnesthetistMidwifeObj() {
        return get(ADMISSION_MODE_SURGEON_ANESTHETIST_MIDWIFE);
    }

    /**
     * <pre>ADMISSION_MODE_SURGEON_MIDWIFE
     * SQLite key: admissionmode_surgeonmidwife
     * [en] B-Sur./B-Mid.
     * [de] B-Op./B-Heb.</pre>
     * @return [en] B-Sur./B-Mid., [de] B-Op./B-Heb.
     */
    public static String getAdmissionModeSurgeonMidwife() {
        return get(ADMISSION_MODE_SURGEON_MIDWIFE).value;
    }

    public static Translation getAdmissionModeSurgeonMidwifeObj() {
        return get(ADMISSION_MODE_SURGEON_MIDWIFE);
    }

    /**
     * <pre>ADMISSION_REASON
     * SQLite key: admissionreason
     * [en] Admission Reason (AR12)
     * [de] Aufnahmegrund (Stelle 1 u. 2) (Aufn.-Gr.1.u.2.)</pre>
     * @return [en] Admission Reason (AR12), [de] Aufnahmegrund (Stelle 1 u. 2) (Aufn.-Gr.1.u.2.)
     */
    public static String getAdmissionReason() {
        return get(ADMISSION_REASON).value;
    }

    public static Translation getAdmissionReasonObj() {
        return get(ADMISSION_REASON);
    }

    /**
     * <pre>ADMISSION_REASON_2
     * SQLite key: admissionreason2
     * [en] Admission Reason 2 (AR34)
     * [de] Aufnahmegrund (Stelle 3 u. 4) (Aufn.-Gr.3.u.4.)</pre>
     * @return [en] Admission Reason 2 (AR34), [de] Aufnahmegrund (Stelle 3 u. 4) (Aufn.-Gr.3.u.4.)
     */
    public static String getAdmissionReason2() {
        return get(ADMISSION_REASON_2).value;
    }

    public static Translation getAdmissionReason2Obj() {
        return get(ADMISSION_REASON_2);
    }

    /**
     * <pre>ADMISSION_REASON_2_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER
     * SQLite key: admission_reason2_accidenttypetrafficsportother
     * [en] Traffic accident / sports accident / Other accident (for example, § 116 SGB X)
     * [de] Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)</pre>
     * @return [en] Traffic accident / sports accident / Other accident (for example, § 116 SGB X), [de] Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
     */
    public static String getAdmissionReason2AccidentType_traffic_sport_other() {
        return get(ADMISSION_REASON_2_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE
     * SQLite key: admission_reason2_accidenttypeworkcommutingandwork-relateddisease
     * [en] Accident at work / commuting accident / occupational disease (§ 11 Abs . 4 SGB V)
     * [de] Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)</pre>
     * @return [en] Accident at work / commuting accident / occupational disease (§ 11 Abs . 4 SGB V), [de] Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
     */
    public static String getAdmissionReason2AccidentType_work_commuting_and_work_relatedDisease() {
        return get(ADMISSION_REASON_2_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_COST_UNIT_CHANGE_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER
     * SQLite key: admission_reason2_costunitchangeaccidenttypetrafficsportother
     * [en] Cost unit change - Traffic accident / sports accident / Other accident (for example, § 116 SGB X)
     * [de] Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)</pre>
     * @return [en] Cost unit change - Traffic accident / sports accident / Other accident (for example, § 116 SGB X), [de] Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
     */
    public static String getAdmissionReason2CostUnitChange_accidentType_traffic_sport_other() {
        return get(ADMISSION_REASON_2_COST_UNIT_CHANGE_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_COST_UNIT_CHANGE_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE
     * SQLite key: admission_reason2_costunitchangeaccidenttypeworkcommutingandwork-relateddisease
     * [en] Cost unit change - accidents at work / commuting accident / occupational disease (§ 11 para 4 SGB V .)
     * [de] Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)</pre>
     * @return [en] Cost unit change - accidents at work / commuting accident / occupational disease (§ 11 para 4 SGB V .), [de] Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
     */
    public static String getAdmissionReason2CostUnitChange_accidentType_work_commuting_and_work_relatedDisease() {
        return get(ADMISSION_REASON_2_COST_UNIT_CHANGE_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_COST_UNIT_CHANGE_EMERGENCY_CASE
     * SQLite key: admission_reason2_costunitchangeemergencycase
     * [en] Cost unit change - Emergency Case
     * [de] Kostenträgerwechsel - Notfall</pre>
     * @return [en] Cost unit change - Emergency Case, [de] Kostenträgerwechsel - Notfall
     */
    public static String getAdmissionReason2CostUnitChange_emergencyCase() {
        return get(ADMISSION_REASON_2_COST_UNIT_CHANGE_EMERGENCY_CASE).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_COST_UNIT_CHANGE_INDICATION_OF_EXTERNAL_VIOLENCE
     * SQLite key: admission_reason2_costunitchangeindicationofexternalviolence
     * [en] Cost unit change - Recalling the action of external force
     * [de] Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt</pre>
     * @return [en] Cost unit change - Recalling the action of external force, [de] Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt
     */
    public static String getAdmissionReason2CostUnitChange_indicationOfExternalViolence() {
        return get(ADMISSION_REASON_2_COST_UNIT_CHANGE_INDICATION_OF_EXTERNAL_VIOLENCE).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_COST_UNIT_CHANGE_WAR_INVALIDS_AND_DISABLED_PEOPLE
     * SQLite key: admission_reason2_costunitchangewarinvalidsanddisabledpeople
     * [en] Cost unit change - War Cripples affliction / War Victims affliction
     * [de] Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden</pre>
     * @return [en] Cost unit change - War Cripples affliction / War Victims affliction, [de] Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden
     */
    public static String getAdmissionReason2CostUnitChange_warInvalidsAndDisabledPeople() {
        return get(ADMISSION_REASON_2_COST_UNIT_CHANGE_WAR_INVALIDS_AND_DISABLED_PEOPLE).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_COST_UNIT_REGULAR_CASE
     * SQLite key: admission_reason2_costunitregularcase
     * [en] Cost unit change - Regular case
     * [de] Kostenträgerwechsel - Normalfall</pre>
     * @return [en] Cost unit change - Regular case, [de] Kostenträgerwechsel - Normalfall
     */
    public static String getAdmissionReason2CostUnit_regularCase() {
        return get(ADMISSION_REASON_2_COST_UNIT_REGULAR_CASE).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_EMERGENCY_CASE
     * SQLite key: admission_reason2_emergencycase
     * [en] Emergency Case
     * [de] Notfall</pre>
     * @return [en] Emergency Case, [de] Notfall
     */
    public static String getAdmissionReason2EmergencyCase() {
        return get(ADMISSION_REASON_2_EMERGENCY_CASE).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_INDICATION_OF_EXTERNAL_VIOLENCE
     * SQLite key: admission_reason2_indicationofexternalviolence
     * [en] Recalling the action of external force
     * [de] Hinweis auf Einwirkung von äußerer Gewalt</pre>
     * @return [en] Recalling the action of external force, [de] Hinweis auf Einwirkung von äußerer Gewalt
     */
    public static String getAdmissionReason2IndicationOfExternalViolence() {
        return get(ADMISSION_REASON_2_INDICATION_OF_EXTERNAL_VIOLENCE).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER
     * SQLite key: admission_reason2_integratedhealthcareaccidenttypetrafficsportother
     * [en] Integrated care - Car Accident / Accident Sport / Other accident (for example, § 116 SGB X)
     * [de] Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)</pre>
     * @return [en] Integrated care - Car Accident / Accident Sport / Other accident (for example, § 116 SGB X), [de] Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
     */
    public static String getAdmissionReason2IntegratedHealthCare_accidentType_traffic_sport_other() {
        return get(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_ACCIDENT_TYPE_TRAFFIC_SPORT_OTHER).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE
     * SQLite key: admission_reason2_integratedhealthcareaccidenttypeworkcommutingandwork-relateddisease
     * [en] Integrated care - accidents at work / commuting accident / occupational disease (§ 11 para 4 SGB V .)
     * [de] Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)</pre>
     * @return [en] Integrated care - accidents at work / commuting accident / occupational disease (§ 11 para 4 SGB V .), [de] Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
     */
    public static String getAdmissionReason2IntegratedHealthCare_accidentType_work_commuting_and_work_relatedDisease() {
        return get(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_ACCIDENT_TYPE_WORK_COMMUTING_AND_WORK_RELATED_DISEASE).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_EMERGENCY_CASE
     * SQLite key: admission_reason2_integratedhealthcareemergencycase
     * [en] Integrated care - Emergency Case
     * [de] Integrierte Versorgung - Notfall</pre>
     * @return [en] Integrated care - Emergency Case, [de] Integrierte Versorgung - Notfall
     */
    public static String getAdmissionReason2IntegratedHealthCare_emergencyCase() {
        return get(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_EMERGENCY_CASE).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_INDICATION_OF_EXTERNAL_VIOLENCE
     * SQLite key: admission_reason2_integratedhealthcareindicationofexternalviolence
     * [en] Integrated care - regard to the action of external force
     * [de] Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt</pre>
     * @return [en] Integrated care - regard to the action of external force, [de] Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt
     */
    public static String getAdmissionReason2IntegratedHealthCare_indicationOfExternalViolence() {
        return get(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_INDICATION_OF_EXTERNAL_VIOLENCE).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_REGULAR_CASE
     * SQLite key: admission_reason2_integratedhealthcareregularcase
     * [en] Integrated care - Regular case
     * [de] Integrierte Versorgung - Normalfall</pre>
     * @return [en] Integrated care - Regular case, [de] Integrierte Versorgung - Normalfall
     */
    public static String getAdmissionReason2IntegratedHealthCare_regularCase() {
        return get(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_REGULAR_CASE).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_WAR_INVALIDS_AND_DISABLED_PEOPLE
     * SQLite key: admission_reason2_integratedhealthcarewarinvalidsanddisabledpeople
     * [en] Integrated care - War Cripples affliction / War Victims affliction
     * [de] Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden</pre>
     * @return [en] Integrated care - War Cripples affliction / War Victims affliction, [de] Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden
     */
    public static String getAdmissionReason2IntegratedHealthCare_warInvalidsAndDisabledPeople() {
        return get(ADMISSION_REASON_2_INTEGRATED_HEALTH_CARE_WAR_INVALIDS_AND_DISABLED_PEOPLE).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_REGULAR_CASE
     * SQLite key: admission_reason2_regularcase
     * [en] Regular case
     * [de] Normalfall</pre>
     * @return [en] Regular case, [de] Normalfall
     */
    public static String getAdmissionReason2RegularCase() {
        return get(ADMISSION_REASON_2_REGULAR_CASE).value;
    }

    /**
     * <pre>ADMISSION_REASON_2_WAR_INVALIDS_AND_DISABLED_PEOPLE
     * SQLite key: admission_reason2_warinvalidsanddisabledpeople
     * [en] War Cripples affliction / War Victims affliction
     * [de] Kriegsbeschädigten-Leiden / BVG-Leiden</pre>
     * @return [en] War Cripples affliction / War Victims affliction, [de] Kriegsbeschädigten-Leiden / BVG-Leiden
     */
    public static String getAdmissionReason2WarInvalidsAndDisabledPeople() {
        return get(ADMISSION_REASON_2_WAR_INVALIDS_AND_DISABLED_PEOPLE).value;
    }

    /**
     * <pre>ADMISSION_REASON_BIRTH
     * SQLite key: admission_reason_birth
     * [en] Birth
     * [de] Geburt</pre>
     * ATTENTION this value ('Birth') seems to be also defined under the key ADMISSION_CAUSE_BIRTH!
     * @return [en] Birth, [de] Geburt
     */
    public static String getAdmissionReasonBirth() {
        return get(ADMISSION_REASON_BIRTH).value;
    }

    /**
     * <pre>ADMISSION_REASON_FREE
     * SQLite key: admission_reason_free
     * [en] free
     * [de] frei</pre>
     * @return [en] free, [de] frei
     */
    public static String getAdmissionReasonFree() {
        return get(ADMISSION_REASON_FREE).value;
    }

    /**
     * <pre>ADMISSION_REASON_HOSPITAL_CARE_INPATIENT
     * SQLite key: admission_reason_hospitalcareinpatient
     * [en] Hospital care, inpatient
     * [de] Krankenhausbehandlung, vollstationär</pre>
     * @return [en] Hospital care, inpatient, [de] Krankenhausbehandlung, vollstationär
     */
    public static String getAdmissionReasonHospitalCareInpatient() {
        return get(ADMISSION_REASON_HOSPITAL_CARE_INPATIENT).value;
    }

    /**
     * <pre>ADMISSION_REASON_HOSPITAL_CARE_INPATIENT_WITH_EXPECTED_BEFORE_INPATIENT_TREATMENT
     * SQLite key: admission_reason_hospitalcareinpatientwithexpectedbeforeinpatienttreatment
     * [en] Hospital care, inpatient with expected before inpatient treatment
     * [de] Krankenhausbehandlung, vollstationär mit vorausgegangener vorstat. Behandlung</pre>
     * @return [en] Hospital care, inpatient with expected before inpatient treatment, [de] Krankenhausbehandlung, vollstationär mit vorausgegangener vorstat. Behandlung
     */
    public static String getAdmissionReasonHospitalCareInpatientWithExpectedBeforeInpatientTreatment() {
        return get(ADMISSION_REASON_HOSPITAL_CARE_INPATIENT_WITH_EXPECTED_BEFORE_INPATIENT_TREATMENT).value;
    }

    /**
     * <pre>ADMISSION_REASON_HOSPITAL_DAY_PATIENT
     * SQLite key: admission_reason_hospitaldaypatient
     * [en] Hospital day patient
     * [de] Krankenhausbehandlung teilstationär</pre>
     * @return [en] Hospital day patient, [de] Krankenhausbehandlung teilstationär
     */
    public static String getAdmissionReasonHospitalDayPatient() {
        return get(ADMISSION_REASON_HOSPITAL_DAY_PATIENT).value;
    }

    /**
     * <pre>ADMISSION_REASON_HOSPITAL_TREATMENT_WITHOUT_SUBSEQUENT_HOSPITALIZATION
     * SQLite key: admission_reason_hospitaltreatmentwithoutsubsequenthospitalization
     * [en] Hospital treatment without subsequent hospitalization
     * [de] Krankenhausbehandlung ohne anschl. stationäre Behandlung</pre>
     * @return [en] Hospital treatment without subsequent hospitalization, [de] Krankenhausbehandlung ohne anschl. stationäre Behandlung
     */
    public static String getAdmissionReasonHospitalTreatmentWithoutSubsequentHospitalization() {
        return get(ADMISSION_REASON_HOSPITAL_TREATMENT_WITHOUT_SUBSEQUENT_HOSPITALIZATION).value;
    }

    /**
     * <pre>ADMISSION_REASON_HOSPITALISATION_TO_ORGAN_REMOVAL
     * SQLite key: admission_reason_hospitalisationtoorganremoval
     * [en] Hospitalisation to organ removal
     * [de] Stationäre Aufnahme zur Organentnahme</pre>
     * @return [en] Hospitalisation to organ removal, [de] Stationäre Aufnahme zur Organentnahme
     */
    public static String getAdmissionReasonHospitalisationToOrganRemoval() {
        return get(ADMISSION_REASON_HOSPITALISATION_TO_ORGAN_REMOVAL).value;
    }

    /**
     * <pre>ADMISSION_REASON_MATERNITY_HOSPITAL
     * SQLite key: admission_reason_maternityhospital
     * [en] Maternity hospital
     * [de] stationäre Entbindung</pre>
     * @return [en] Maternity hospital, [de] stationäre Entbindung
     */
    public static String getAdmissionReasonMaternityHospital() {
        return get(ADMISSION_REASON_MATERNITY_HOSPITAL).value;
    }

    /**
     * <pre>ADMISSION_REASON_RECOVERY_DUE_COMPLICATION
     * SQLite key: admission_reason_recoveryduecomplication
     * [en] Recovery due complication
     * [de] Wiederaufnahme wg. Komplikation (Fallpauschale)</pre>
     * @return [en] Recovery due complication, [de] Wiederaufnahme wg. Komplikation (Fallpauschale)
     */
    public static String getAdmissionReasonRecoveryDueComplication() {
        return get(ADMISSION_REASON_RECOVERY_DUE_COMPLICATION).value;
    }

    /**
     * <pre>ADMISSION_REASON_STATION_EQUIVALENT
     * SQLite key: admission_reason_stationequivalent
     * [en] Station equivalent treatment
     * [de] Stationsäquivalente Behandlung</pre>
     * @return [en] Station equivalent treatment, [de] Stationsäquivalente Behandlung
     */
    public static String getAdmissionReasonStationEquivalent() {
        return get(ADMISSION_REASON_STATION_EQUIVALENT).value;
    }

    /**
     * <pre>ADMISSION_REASON_TRANSITIONAL_CARE
     * SQLite key: admission_reason_transitional_care
     * [de] Übergangspflege</pre>
     * @return [de] Übergangspflege
     */
    public static String getAdmissionReasonTransitionalCare() {
        return get(ADMISSION_REASON_TRANSITIONAL_CARE).value;
    }

    /**
     * <pre>ADMISSION_WEEKDAY
     * SQLite key: admission_weekday
     * [en] Admission Date Weekday (Adm. Day)
     * [de] Aufnahmedatum Wochentag (Aufn. WT)</pre>
     * @return [en] Admission Date Weekday (Adm. Day), [de] Aufnahmedatum Wochentag (Aufn. WT)
     */
    public static String getAdmissionWeekday() {
        return get(ADMISSION_WEEKDAY).value;
    }

    public static Translation getAdmissionWeekdayObj() {
        return get(ADMISSION_WEEKDAY);
    }

    /**
     * <pre>ADMISSION_WEIGHT
     * SQLite key: admissionweight
     * [en] Admission Weight (Weight)
     * [de] Aufnahmegewicht (Gewicht)</pre>
     * @return [en] Admission Weight (Weight), [de] Aufnahmegewicht (Gewicht)
     */
    public static String getAdmissionWeight() {
        return get(ADMISSION_WEIGHT).value;
    }

    public static Translation getAdmissionWeightObj() {
        return get(ADMISSION_WEIGHT);
    }

    /**
     * <pre>ADMISSION_WEIGHT_FROM
     * SQLite key: admissionweight_from
     * [en] Weight from
     * [de] Gewicht von</pre>
     * @return [en] Weight from, [de] Gewicht von
     */
    public static String getAdmissionWeightFrom() {
        return get(ADMISSION_WEIGHT_FROM).value;
    }

    /**
     * <pre>ADMISSION_WEIGHT_TO
     * SQLite key: admissionweight_to
     * [en] Weight to
     * [de] Gewicht bis</pre>
     * @return [en] Weight to, [de] Gewicht bis
     */
    public static String getAdmissionWeightTo() {
        return get(ADMISSION_WEIGHT_TO).value;
    }

    /**
     * <pre>AGE
     * SQLite key: age
     * [en] Age
     * [de] Alter</pre>
     * @return [en] Age, [de] Alter
     */
    public static String getAge() {
        return get(AGE).value;
    }

    /**
     * <pre>AGE_DAYS
     * SQLite key: age_days
     * [en] Days
     * [de] Tage</pre>
     * @return [en] Days, [de] Tage
     */
    public static String getAgeDays() {
        return get(AGE_DAYS).value;
    }

    /**
     * <pre>AGE_IN_DAYS
     * SQLite key: ageindays
     * [en] Age in Days (Age D.)
     * [de] Alter in Tagen (Alter Tage)</pre>
     * @return [en] Age in Days (Age D.), [de] Alter in Tagen (Alter Tage)
     */
    public static String getAgeInDays() {
        return get(AGE_IN_DAYS).value;
    }

    public static Translation getAgeInDaysObj() {
        return get(AGE_IN_DAYS);
    }

    /**
     * <pre>AGE_IN_DAYS_FROM
     * SQLite key: ageindays_from
     * [en] Age D. from
     * [de] Alter Tage von</pre>
     * @return [en] Age D. from, [de] Alter Tage von
     */
    public static String getAgeInDaysFrom() {
        return get(AGE_IN_DAYS_FROM).value;
    }

    /**
     * <pre>AGE_IN_DAYS_TO
     * SQLite key: ageindays_to
     * [en] Age D. to
     * [de] Alter Tage bis</pre>
     * @return [en] Age D. to, [de] Alter Tage bis
     */
    public static String getAgeInDaysTo() {
        return get(AGE_IN_DAYS_TO).value;
    }

    /**
     * <pre>AGE_IN_YEARS
     * SQLite key: ageinyears
     * [en] Age in Years (Age)
     * [de] Alter in Jahren (Alter Jahre)</pre>
     * @return [en] Age in Years (Age), [de] Alter in Jahren (Alter Jahre)
     */
    public static String getAgeInYears() {
        return get(AGE_IN_YEARS).value;
    }

    public static Translation getAgeInYearsObj() {
        return get(AGE_IN_YEARS);
    }

    /**
     * <pre>AGE_IN_YEARS_FROM
     * SQLite key: ageinyears_from
     * [en] Age from
     * [de] Alter Jahre von</pre>
     * @return [en] Age from, [de] Alter Jahre von
     */
    public static String getAgeInYearsFrom() {
        return get(AGE_IN_YEARS_FROM).value;
    }

    /**
     * <pre>AGE_IN_YEARS_TO
     * SQLite key: ageinyears_to
     * [en] Age to
     * [de] Alter Jahre bis</pre>
     * @return [en] Age to, [de] Alter Jahre bis
     */
    public static String getAgeInYearsTo() {
        return get(AGE_IN_YEARS_TO).value;
    }

    /**
     * <pre>AGE_YEARS
     * SQLite key: age_years
     * [en] Years
     * [de] Jahre</pre>
     * @return [en] Years, [de] Jahre
     */
    public static String getAgeYears() {
        return get(AGE_YEARS).value;
    }

    /**
     * <pre>AMBULANT
     * SQLite key: ambulant
     * [en] ambulant
     * [de] ambulant</pre>
     * @return [en] ambulant, [de] ambulant
     */
    public static String getAmbulant() {
        return get(AMBULANT).value;
    }

    /**
     * <pre>ANTIBIOGRAM_RESULT_INTERMEDIATE
     * SQLite key: antibiogram_result_intermediate
     * [en] intermediate
     * [de] intermediär</pre>
     * @return [en] intermediate, [de] intermediär
     */
    public static String getAntibiogramResultIntermediate() {
        return get(ANTIBIOGRAM_RESULT_INTERMEDIATE).value;
    }

    /**
     * <pre>ANTIBIOGRAM_RESULT_RESISTENT
     * SQLite key: antibiogram_result_resistent
     * [en] resistent
     * [de] resistent</pre>
     * @return [en] resistent, [de] resistent
     */
    public static String getAntibiogramResultResistent() {
        return get(ANTIBIOGRAM_RESULT_RESISTENT).value;
    }

    /**
     * <pre>ANTIBIOGRAM_RESULT_SENSITIVE
     * SQLite key: antibiogram_result_sensitive
     * [en] sensibel
     * [de] sensibel</pre>
     * @return [en] sensibel, [de] sensibel
     */
    public static String getAntibiogramResultSensitive() {
        return get(ANTIBIOGRAM_RESULT_SENSITIVE).value;
    }

    /**
     * <pre>ANTIBIOTIC_AMIKACIN
     * SQLite key: antibiotic_amikacin
     * [en] Amikacin
     * [de] Amikacin</pre>
     * @return [en] Amikacin, [de] Amikacin
     */
    public static String getAntibioticAmikacin() {
        return get(ANTIBIOTIC_AMIKACIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_AMPICILLIN_AMOXICILLIN
     * SQLite key: antibiotic_ampicillinamoxicillin
     * [en] Ampicillin/Amoxicillin
     * [de] Ampicillin/Amoxicillin</pre>
     * @return [en] Ampicillin/Amoxicillin, [de] Ampicillin/Amoxicillin
     */
    public static String getAntibioticAmpicillinAmoxicillin() {
        return get(ANTIBIOTIC_AMPICILLIN_AMOXICILLIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_AMPICILLIN_SULBACTAM
     * SQLite key: antibiotic_ampicillinsulbactam
     * [en] Ampicillin+Sulbactam
     * [de] Ampicillin+Sulbactam</pre>
     * @return [en] Ampicillin+Sulbactam, [de] Ampicillin+Sulbactam
     */
    public static String getAntibioticAmpicillinSulbactam() {
        return get(ANTIBIOTIC_AMPICILLIN_SULBACTAM).value;
    }

    /**
     * <pre>ANTIBIOTIC_AZTREONAM
     * SQLite key: antibiotic_aztreonam
     * [en] Aztreonam
     * [de] Aztreonam</pre>
     * @return [en] Aztreonam, [de] Aztreonam
     */
    public static String getAntibioticAztreonam() {
        return get(ANTIBIOTIC_AZTREONAM).value;
    }

    /**
     * <pre>ANTIBIOTIC_CEFACLOR
     * SQLite key: antibiotic_cefaclor
     * [en] Cefaclor
     * [de] Cefaclor</pre>
     * @return [en] Cefaclor, [de] Cefaclor
     */
    public static String getAntibioticCefaclor() {
        return get(ANTIBIOTIC_CEFACLOR).value;
    }

    /**
     * <pre>ANTIBIOTIC_CEFAZOLIN
     * SQLite key: antibiotic_cefazolin
     * [en] Cefazolin
     * [de] Cefazolin</pre>
     * @return [en] Cefazolin, [de] Cefazolin
     */
    public static String getAntibioticCefazolin() {
        return get(ANTIBIOTIC_CEFAZOLIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_CEFEPIM
     * SQLite key: antibiotic_cefepim
     * [en] Cefepim
     * [de] Cefepim</pre>
     * @return [en] Cefepim, [de] Cefepim
     */
    public static String getAntibioticCefepim() {
        return get(ANTIBIOTIC_CEFEPIM).value;
    }

    /**
     * <pre>ANTIBIOTIC_CEFOTAXIM_CEFTRIAXON
     * SQLite key: antibiotic_cefotaximceftriaxon
     * [en] Cefotaxim/Ceftriaxon
     * [de] Cefotaxim/Ceftriaxon</pre>
     * @return [en] Cefotaxim/Ceftriaxon, [de] Cefotaxim/Ceftriaxon
     */
    public static String getAntibioticCefotaximCeftriaxon() {
        return get(ANTIBIOTIC_CEFOTAXIM_CEFTRIAXON).value;
    }

    /**
     * <pre>ANTIBIOTIC_CEFPODOXIM
     * SQLite key: antibiotic_cefpodoxim
     * [en] Cefpodoxim
     * [de] Cefpodoxim</pre>
     * @return [en] Cefpodoxim, [de] Cefpodoxim
     */
    public static String getAntibioticCefpodoxim() {
        return get(ANTIBIOTIC_CEFPODOXIM).value;
    }

    /**
     * <pre>ANTIBIOTIC_CEFTAZIDIM
     * SQLite key: antibiotic_ceftazidim
     * [en] Ceftazidim
     * [de] Ceftazidim</pre>
     * @return [en] Ceftazidim, [de] Ceftazidim
     */
    public static String getAntibioticCeftazidim() {
        return get(ANTIBIOTIC_CEFTAZIDIM).value;
    }

    /**
     * <pre>ANTIBIOTIC_CEFUROXIM_CEFOTIAM
     * SQLite key: antibiotic_cefuroximcefotiam
     * [en] Cefuroxim/Cefotiam
     * [de] Cefuroxim/Cefotiam</pre>
     * @return [en] Cefuroxim/Cefotiam, [de] Cefuroxim/Cefotiam
     */
    public static String getAntibioticCefuroximCefotiam() {
        return get(ANTIBIOTIC_CEFUROXIM_CEFOTIAM).value;
    }

    /**
     * <pre>ANTIBIOTIC_CIPROFLOXACIN
     * SQLite key: antibiotic_ciprofloxacin
     * [en] Ciprofloxacin
     * [de] Ciprofloxacin</pre>
     * @return [en] Ciprofloxacin, [de] Ciprofloxacin
     */
    public static String getAntibioticCiprofloxacin() {
        return get(ANTIBIOTIC_CIPROFLOXACIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_CLINDAMYCIN
     * SQLite key: antibiotic_clindamycin
     * [en] Clindamycin
     * [de] Clindamycin</pre>
     * @return [en] Clindamycin, [de] Clindamycin
     */
    public static String getAntibioticClindamycin() {
        return get(ANTIBIOTIC_CLINDAMYCIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_DAPTOMYCIN
     * SQLite key: antibiotic_daptomycin
     * [en] Daptomycin
     * [de] Daptomycin</pre>
     * @return [en] Daptomycin, [de] Daptomycin
     */
    public static String getAntibioticDaptomycin() {
        return get(ANTIBIOTIC_DAPTOMYCIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_ERYTHROMYCIN
     * SQLite key: antibiotic_erythromycin
     * [en] Erythromycin
     * [de] Erythromycin</pre>
     * @return [en] Erythromycin, [de] Erythromycin
     */
    public static String getAntibioticErythromycin() {
        return get(ANTIBIOTIC_ERYTHROMYCIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_FOSFOMYCIN
     * SQLite key: antibiotic_fosfomycin
     * [en] Fosfomycin+
     * [de] Fosfomycin+</pre>
     * @return [en] Fosfomycin+, [de] Fosfomycin+
     */
    public static String getAntibioticFosfomycin() {
        return get(ANTIBIOTIC_FOSFOMYCIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_FUCIDINE
     * SQLite key: antibiotic_fucidine
     * [en] Fucidine+
     * [de] Fucidine+</pre>
     * @return [en] Fucidine+, [de] Fucidine+
     */
    public static String getAntibioticFucidine() {
        return get(ANTIBIOTIC_FUCIDINE).value;
    }

    /**
     * <pre>ANTIBIOTIC_GENTAMICIN
     * SQLite key: antibiotic_gentamicin
     * [en] Gentamicin
     * [de] Gentamicin</pre>
     * @return [en] Gentamicin, [de] Gentamicin
     */
    public static String getAntibioticGentamicin() {
        return get(ANTIBIOTIC_GENTAMICIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_IMIPENEM
     * SQLite key: antibiotic_imipenem
     * [en] Imipenem
     * [de] Imipenem</pre>
     * @return [en] Imipenem, [de] Imipenem
     */
    public static String getAntibioticImipenem() {
        return get(ANTIBIOTIC_IMIPENEM).value;
    }

    /**
     * <pre>ANTIBIOTIC_LEVOFLOXACIN
     * SQLite key: antibiotic_levofloxacin
     * [en] Levofloxacin
     * [de] Levofloxacin</pre>
     * @return [en] Levofloxacin, [de] Levofloxacin
     */
    public static String getAntibioticLevofloxacin() {
        return get(ANTIBIOTIC_LEVOFLOXACIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_LINEZOLID
     * SQLite key: antibiotic_linezolid
     * [en] Linezolid
     * [de] Linezolid</pre>
     * @return [en] Linezolid, [de] Linezolid
     */
    public static String getAntibioticLinezolid() {
        return get(ANTIBIOTIC_LINEZOLID).value;
    }

    /**
     * <pre>ANTIBIOTIC_MEROPENEM
     * SQLite key: antibiotic_meropenem
     * [en] Meropenem
     * [de] Meropenem</pre>
     * @return [en] Meropenem, [de] Meropenem
     */
    public static String getAntibioticMeropenem() {
        return get(ANTIBIOTIC_MEROPENEM).value;
    }

    /**
     * <pre>ANTIBIOTIC_METRONIDAZOL
     * SQLite key: antibiotic_metronidazol
     * [en] Metronidazol
     * [de] Metronidazol</pre>
     * @return [en] Metronidazol, [de] Metronidazol
     */
    public static String getAntibioticMetronidazol() {
        return get(ANTIBIOTIC_METRONIDAZOL).value;
    }

    /**
     * <pre>ANTIBIOTIC_MOXIFLOXACIN
     * SQLite key: antibiotic_moxifloxacin
     * [en] Moxifloxacin
     * [de] Moxifloxacin</pre>
     * @return [en] Moxifloxacin, [de] Moxifloxacin
     */
    public static String getAntibioticMoxifloxacin() {
        return get(ANTIBIOTIC_MOXIFLOXACIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_OXACILLIN_FLUCLOXACILL
     * SQLite key: antibiotic_oxacillinflucloxacill
     * [en] Oxacillin/Flucloxacill.
     * [de] Oxacillin/Flucloxacill.</pre>
     * @return [en] Oxacillin/Flucloxacill., [de] Oxacillin/Flucloxacill.
     */
    public static String getAntibioticOxacillinFlucloxacill() {
        return get(ANTIBIOTIC_OXACILLIN_FLUCLOXACILL).value;
    }

    /**
     * <pre>ANTIBIOTIC_PENICILLIN
     * SQLite key: antibiotic_penicillin
     * [en] Penicillin
     * [de] Penicillin</pre>
     * @return [en] Penicillin, [de] Penicillin
     */
    public static String getAntibioticPenicillin() {
        return get(ANTIBIOTIC_PENICILLIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_PIPERACILLIN
     * SQLite key: antibiotic_piperacillin
     * [en] Piperacillin
     * [de] Piperacillin</pre>
     * @return [en] Piperacillin, [de] Piperacillin
     */
    public static String getAntibioticPiperacillin() {
        return get(ANTIBIOTIC_PIPERACILLIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_PIPERACILLIN_TAZO
     * SQLite key: antibiotic_piperacillintazo
     * [en] Piperacillin+Tazo.
     * [de] Piperacillin+Tazo.</pre>
     * @return [en] Piperacillin+Tazo., [de] Piperacillin+Tazo.
     */
    public static String getAntibioticPiperacillinTazo() {
        return get(ANTIBIOTIC_PIPERACILLIN_TAZO).value;
    }

    /**
     * <pre>ANTIBIOTIC_RIFAMPICIN
     * SQLite key: antibiotic_rifampicin
     * [en] Rifampicin+
     * [de] Rifampicin+</pre>
     * @return [en] Rifampicin+, [de] Rifampicin+
     */
    public static String getAntibioticRifampicin() {
        return get(ANTIBIOTIC_RIFAMPICIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_TETRACYCLIN_DOXYCYCLIN
     * SQLite key: antibiotic_tetracyclindoxycyclin
     * [en] Tetracyclin/Doxycyclin
     * [de] Tetracyclin/Doxycyclin</pre>
     * @return [en] Tetracyclin/Doxycyclin, [de] Tetracyclin/Doxycyclin
     */
    public static String getAntibioticTetracyclinDoxycyclin() {
        return get(ANTIBIOTIC_TETRACYCLIN_DOXYCYCLIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_TIGECYCLIN
     * SQLite key: antibiotic_tigecyclin
     * [en] Tigecyclin
     * [de] Tigecyclin</pre>
     * @return [en] Tigecyclin, [de] Tigecyclin
     */
    public static String getAntibioticTigecyclin() {
        return get(ANTIBIOTIC_TIGECYCLIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_TOBRAMYCIN
     * SQLite key: antibiotic_tobramycin
     * [en] Tobramycin
     * [de] Tobramycin</pre>
     * @return [en] Tobramycin, [de] Tobramycin
     */
    public static String getAntibioticTobramycin() {
        return get(ANTIBIOTIC_TOBRAMYCIN).value;
    }

    /**
     * <pre>ANTIBIOTIC_TRIMETHOPRIM_SULFONAMID
     * SQLite key: antibiotic_trimethoprimsulfonamid
     * [en] Trimethoprim+Sulfonamid
     * [de] Trimethoprim+Sulfonamid</pre>
     * @return [en] Trimethoprim+Sulfonamid, [de] Trimethoprim+Sulfonamid
     */
    public static String getAntibioticTrimethoprimSulfonamid() {
        return get(ANTIBIOTIC_TRIMETHOPRIM_SULFONAMID).value;
    }

    /**
     * <pre>ANTIBIOTIC_VANCOMYCIN
     * SQLite key: antibiotic_vancomycin
     * [en] Vancomycin
     * [de] Vancomycin</pre>
     * @return [en] Vancomycin, [de] Vancomycin
     */
    public static String getAntibioticVancomycin() {
        return get(ANTIBIOTIC_VANCOMYCIN).value;
    }

    /**
     * <pre>APPLICATION_DEFAULT_TITLE
     * SQLite key: application_default_title
     * [en] Checkpoint X
     * [de] Checkpoint X</pre>
     * @return [en] Checkpoint X, [de] Checkpoint X
     */
    public static String getApplicationDefaultTitle() {
        return get(APPLICATION_DEFAULT_TITLE).value;
    }

    /**
     * <pre>ARTIFICIAL_RESPIRATION
     * SQLite key: artificialrespiration
     * [en] Artificial Respiration
     * [de] Beatmungsstunden</pre>
     * @return [en] Artificial Respiration, [de] Beatmungsstunden
     */
    public static String getArtificialRespiration() {
        return get(ARTIFICIAL_RESPIRATION).value;
    }

    /**
     * <pre>ARTIFICIAL_VENTILATION
     * SQLite key: artificialventilation
     * [en] Artificial Ventilation (in hours) (Vent. Hrs.)
     * [de] Beatmungsstunden (Beatm.-Std.)</pre>
     * @return [en] Artificial Ventilation (in hours) (Vent. Hrs.), [de] Beatmungsstunden (Beatm.-Std.)
     */
    public static String getArtificialVentilation() {
        return get(ARTIFICIAL_VENTILATION).value;
    }

    public static Translation getArtificialVentilationObj() {
        return get(ARTIFICIAL_VENTILATION);
    }

    /**
     * <pre>ARTIFICIAL_VENTILATION_FROM
     * SQLite key: artificialventilation_from
     * [en] Vent. Hrs. from
     * [de] Beatm.-Std. von</pre>
     * @return [en] Vent. Hrs. from, [de] Beatm.-Std. von
     */
    public static String getArtificialVentilationFrom() {
        return get(ARTIFICIAL_VENTILATION_FROM).value;
    }

    /**
     * <pre>ARTIFICIAL_VENTILATION_TO
     * SQLite key: artificialventilation_to
     * [en] Vent. Hrs. to
     * [de] Beatm.-Std. bis</pre>
     * @return [en] Vent. Hrs. to, [de] Beatm.-Std. bis
     */
    public static String getArtificialVentilationTo() {
        return get(ARTIFICIAL_VENTILATION_TO).value;
    }

    /**
     * <pre>AUDIT_ADDRESS
     * SQLite key: audit_address
     * [en] Address
     * [de] Anschrift</pre>
     * ATTENTION this value ('Address') seems to be also defined under the key ADDRESS! this value ('Address') seems to be also defined under the key MDK_ADDRESS!
     * @return [en] Address, [de] Anschrift
     */
    public static String getAuditAddress() {
        return get(AUDIT_ADDRESS).value;
    }

    /**
     * <pre>AUDIT_ANS_DEADLINE
     * SQLite key: audit_ansdeadline
     * [en] Audit Answer Deadline
     * [de] Frist Antwort</pre>
     * @return [en] Audit Answer Deadline, [de] Frist Antwort
     */
    public static String getAuditAnsDeadline() {
        return get(AUDIT_ANS_DEADLINE).value;
    }

    /**
     * <pre>AUDIT_AREA_CODE
     * SQLite key: audit_areacode
     * [en] Area Code
     * [de] Postleitzahl</pre>
     * ATTENTION this value ('Area Code') seems to be also defined under the key MDK_AREA_CODE!
     * @return [en] Area Code, [de] Postleitzahl
     */
    public static String getAuditAreaCode() {
        return get(AUDIT_AREA_CODE).value;
    }

    /**
     * <pre>AUDIT_AUDIT_REASONS
     * SQLite key: audit_auditreasons
     * [en] Audit Reasons (Audit Reasons)
     * [de] Prüfgründe (Prüfgründe)</pre>
     * @return [en] Audit Reasons (Audit Reasons), [de] Prüfgründe (Prüfgründe)
     */
    public static String getAuditAuditReasons() {
        return get(AUDIT_AUDIT_REASONS).value;
    }

    public static Translation getAuditAuditReasonsObj() {
        return get(AUDIT_AUDIT_REASONS);
    }

    /**
     * <pre>AUDIT_CASE_DIALOG
     * SQLite key: audit_casedialog
     * [en] Case Dialog
     * [de] Falldialog</pre>
     * @return [en] Case Dialog, [de] Falldialog
     */
    public static String getAuditCaseDialog() {
        return get(AUDIT_CASE_DIALOG).value;
    }

    /**
     * <pre>AUDIT_CASE_DIALOG_BILL_CORR_DEADLINE_ERROR
     * SQLite key: audit_casedialogbillcorrdeadlineerror
     * [de] Keinen gültigen Eintrag für die Frist "Rechnungskorrektur Ende Falldialog" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
     * @return [de] Keinen gültigen Eintrag für die Frist "Rechnungskorrektur Ende Falldialog" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
     */
    public static String getAuditCaseDialogBillCorrDeadlineError() {
        return get(AUDIT_CASE_DIALOG_BILL_CORR_DEADLINE_ERROR).value;
    }

    /**
     * <pre>AUDIT_CASE_DIALOG_END_DATE
     * SQLite key: audit_casedialogenddate
     * [en] End Date
     * [de] Ende am</pre>
     * @return [en] End Date, [de] Ende am
     */
    public static String getAuditCaseDialogEndDate() {
        return get(AUDIT_CASE_DIALOG_END_DATE).value;
    }

    /**
     * <pre>AUDIT_CITY
     * SQLite key: audit_city
     * [en] City
     * [de] Ort</pre>
     * ATTENTION this value ('City') seems to be also defined under the key ADDRESS_CITY!
     * @return [en] City, [de] Ort
     */
    public static String getAuditCity() {
        return get(AUDIT_CITY).value;
    }

    /**
     * <pre>AUDIT_COMMENT
     * SQLite key: audit_comment
     * [en] Audit Comment
     * [de] Ergebnis/Bemerkung</pre>
     * @return [en] Audit Comment, [de] Ergebnis/Bemerkung
     */
    public static String getAuditComment() {
        return get(AUDIT_COMMENT).value;
    }

    /**
     * <pre>AUDIT_DATA_REC_CORR_DEADLINE_ERROR
     * SQLite key: audit_datareccorrdeadlineerror
     * [en] No valid entry is found for the Data Record Correction Deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
     * [de] Keinen gültigen Eintrag für die Frist "Datensatzkorrektur" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
     * @return [en] No valid entry is found for the Data Record Correction Deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Datensatzkorrektur" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
     */
    public static String getAuditDataRecCorrDeadlineError() {
        return get(AUDIT_DATA_REC_CORR_DEADLINE_ERROR).value;
    }

    /**
     * <pre>AUDIT_DATA_RECO_CORR_DEADLINE
     * SQLite key: audit_datarecocorrdeadline
     * [en] Data Record Correction
     * [de] Frist Datensatzkorrektur</pre>
     * @return [en] Data Record Correction, [de] Frist Datensatzkorrektur
     */
    public static String getAuditDataRecoCorrDeadline() {
        return get(AUDIT_DATA_RECO_CORR_DEADLINE).value;
    }

    /**
     * <pre>AUDIT_EDITOR
     * SQLite key: audit_editor
     * [en] Editor
     * [de] Bearbeiter</pre>
     * ATTENTION this value ('Editor') seems to be also defined under the key MDK_EDITOR!
     * @return [en] Editor, [de] Bearbeiter
     */
    public static String getAuditEditor() {
        return get(AUDIT_EDITOR).value;
    }

    /**
     * <pre>AUDIT_FAX
     * SQLite key: audit_fax
     * [en] Fax
     * [de] Fax</pre>
     * ATTENTION this value ('Fax') seems to be also defined under the key FAX! this value ('Fax') seems to be also defined under the key MDK_FAX!
     * @return [en] Fax, [de] Fax
     */
    public static String getAuditFax() {
        return get(AUDIT_FAX).value;
    }

    /**
     * <pre>AUDIT_IDENT
     * SQLite key: audit_ident
     * [en] Insurance Ident
     * [de] IKZ der Krankenkasse (IKZ Krankenkasse)</pre>
     * @return [en] Insurance Ident, [de] IKZ der Krankenkasse (IKZ Krankenkasse)
     */
    public static String getAuditIdent() {
        return get(AUDIT_IDENT).value;
    }

    public static Translation getAuditIdentObj() {
        return get(AUDIT_IDENT);
    }

    /**
     * <pre>AUDIT_INFO_LABEL
     * SQLite key: audit_infolabel
     * [en] Insurance Informations
     * [de] KK Informationen</pre>
     * @return [en] Insurance Informations, [de] KK Informationen
     */
    public static String getAuditInfoLabel() {
        return get(AUDIT_INFO_LABEL).value;
    }

    /**
     * <pre>AUDIT_INSU_NAME
     * SQLite key: audit_insuname
     * [en] Insurance Name
     * [de] KK Name</pre>
     * ATTENTION this value ('Insurance name') seems to be also defined under the key INSURANCE_NAME!
     * @return [en] Insurance Name, [de] KK Name
     */
    public static String getAuditInsuName() {
        return get(AUDIT_INSU_NAME).value;
    }

    /**
     * <pre>AUDIT_PRE_TRIAL
     * SQLite key: audit_pretrial
     * [en] Pre-trial
     * [de] Vorverfahren</pre>
     * @return [en] Pre-trial, [de] Vorverfahren
     */
    public static String getAuditPreTrial() {
        return get(AUDIT_PRE_TRIAL).value;
    }

    /**
     * <pre>AUDIT_PRE_TRIAL_END_DATE
     * SQLite key: audit_pretrialenddate
     * [en] Pre-trial End Date
     * [de] Vorverfahren Ende</pre>
     * @return [en] Pre-trial End Date, [de] Vorverfahren Ende
     */
    public static String getAuditPreTrialEndDate() {
        return get(AUDIT_PRE_TRIAL_END_DATE).value;
    }

    /**
     * <pre>AUDIT_PREL_PROC_ANS_DEADLINE_ERROR
     * SQLite key: audit_prelprocansdeadlineerror
     * [en] No valid entry is found for the Prel. Proc. Answer deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
     * [de] Keinen gültigen Eintrag für die Frist "Antwort" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
     * @return [en] No valid entry is found for the Prel. Proc. Answer deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Antwort" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
     */
    public static String getAuditPrelProcAnsDeadlineError() {
        return get(AUDIT_PREL_PROC_ANS_DEADLINE_ERROR).value;
    }

    /**
     * <pre>AUDIT_PREL_PROC_CLOSED_DEADLINE
     * SQLite key: audit_prelproccloseddeadline
     * [en] Audit Closed Deadline
     * [de] Frist Vorverfahren Ende</pre>
     * @return [en] Audit Closed Deadline, [de] Frist Vorverfahren Ende
     */
    public static String getAuditPrelProcClosedDeadline() {
        return get(AUDIT_PREL_PROC_CLOSED_DEADLINE).value;
    }

    /**
     * <pre>AUDIT_PREL_PROC_CLOSED_DEADLINE_ERROR
     * SQLite key: audit_prelproccloseddeadlineerror
     * [en] No valid entry is found for the Prel. Proc. Closed deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
     * [de] Keinen gültigen Eintrag für die Frist "Vorverfahren Ende" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
     * @return [en] No valid entry is found for the Prel. Proc. Closed deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Vorverfahren Ende" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
     */
    public static String getAuditPrelProcClosedDeadlineError() {
        return get(AUDIT_PREL_PROC_CLOSED_DEADLINE_ERROR).value;
    }

    /**
     * <pre>AUDIT_PROCESS_CREATION_DATE
     * SQLite key: audit_processcreationdate
     * [en] Process Creation
     * [de] Einleitung Prüfverfahren</pre>
     * @return [en] Process Creation, [de] Einleitung Prüfverfahren
     */
    public static String getAuditProcessCreationDate() {
        return get(AUDIT_PROCESS_CREATION_DATE).value;
    }

    /**
     * <pre>AUDIT_QUOTA_RESULT_ACTUAL_EXAMINATION_QUOTA
     * SQLite key: auditquotaresult_actual_examinationquota
     * [en] Actual Examination Quota
     * [de] Aktuelle Prüfquote</pre>
     * @return [en] Actual Examination Quota, [de] Aktuelle Prüfquote
     */
    public static String getAuditQuotaResultActualExaminationQuota() {
        return get(AUDIT_QUOTA_RESULT_ACTUAL_EXAMINATION_QUOTA).value;
    }

    /**
     * <pre>AUDIT_QUOTA_RESULT_BILLED_CASES
     * SQLite key: auditquotaresult_billed_cases
     * [en] Billed Cases
     * [de] abgerechnete Fälle</pre>
     * @return [en] Billed Cases, [de] abgerechnete Fälle
     */
    public static String getAuditQuotaResultBilledCases() {
        return get(AUDIT_QUOTA_RESULT_BILLED_CASES).value;
    }

    /**
     * <pre>AUDIT_QUOTA_RESULT_EXCEEDED_EXAMINATION_QUOTA
     * SQLite key: auditquotaresult_exceeded_examinationquota
     * [en] Examination Quota exceeded
     * [de] Überschreitung Prüfquote</pre>
     * @return [en] Examination Quota exceeded, [de] Überschreitung Prüfquote
     */
    public static String getAuditQuotaResultExceededExaminationQuota() {
        return get(AUDIT_QUOTA_RESULT_EXCEEDED_EXAMINATION_QUOTA).value;
    }

    /**
     * <pre>AUDIT_QUOTA_RESULT_INFORMATION
     * SQLite key: auditquotaresult_information
     * [en] The check rate for the cash register {0} for the quarter {1} / {2} has not yet been reached.Details: Number of inpatient cases: {3}Number of complaints (actual value): {4}Number of complaints (target value) : {5}Quick review rate for the quarter: {6}
     * [de] Die Prüfquote für die Kasse {0} für das Quartal {1}/{2} wurde noch nicht erreicht.Details:Anzahl abgerechnete vollstationäre Fälle: {3}davon zur Beanstandung eingeleitet (Istwert): {4}Max. zulässige Beanstandungen gemäß Prüfquote (Sollwert): {5}Festgesetzte Prüfquote für dieses Quartal: {6} %</pre>
     * @param pParams placeholder replacements
     * @return [en] The check rate for the cash register {0} for the quarter {1} / {2} has not yet been reached.Details: Number of inpatient cases: {3}Number of complaints (actual value): {4}Number of complaints (target value) : {5}Quick review rate for the quarter: {6}, [de] Die Prüfquote für die Kasse {0} für das Quartal {1}/{2} wurde noch nicht erreicht.Details:Anzahl abgerechnete vollstationäre Fälle: {3}davon zur Beanstandung eingeleitet (Istwert): {4}Max. zulässige Beanstandungen gemäß Prüfquote (Sollwert): {5}Festgesetzte Prüfquote für dieses Quartal: {6} %
     */
    public static String getAuditQuotaResultInformation(final Object... pParams) {
        return get(AUDIT_QUOTA_RESULT_INFORMATION, pParams).value;
    }

    /**
     * <pre>AUDIT_QUOTA_RESULT_MAX_MD_EXAMINATIONS
     * SQLite key: auditquotaresult_max_md_examinations
     * [en] Maximal Examinations
     * [de] MD-Prüfungen maximal</pre>
     * @return [en] Maximal Examinations, [de] MD-Prüfungen maximal
     */
    public static String getAuditQuotaResultMaxMDExaminations() {
        return get(AUDIT_QUOTA_RESULT_MAX_MD_EXAMINATIONS).value;
    }

    /**
     * <pre>AUDIT_QUOTA_RESULT_MD_EXAMINATIONS
     * SQLite key: auditquotaresult_md_examinations
     * [en] MD-Examinations
     * [de] MD-Prüfungen</pre>
     * @return [en] MD-Examinations, [de] MD-Prüfungen
     */
    public static String getAuditQuotaResultMDExaminations() {
        return get(AUDIT_QUOTA_RESULT_MD_EXAMINATIONS).value;
    }

    /**
     * <pre>AUDIT_QUOTA_RESULT_QUARTER_YEAR_MDREQUEST
     * SQLite key: auditquotaresult_quarter_year_mdrequest
     * [en] Quarter / Year MD-Request
     * [de] Quartal / Jahr MD-Anfrage</pre>
     * @return [en] Quarter / Year MD-Request, [de] Quartal / Jahr MD-Anfrage
     */
    public static String getAuditQuotaResultQuarterYearMDRequest() {
        return get(AUDIT_QUOTA_RESULT_QUARTER_YEAR_MDREQUEST).value;
    }

    /**
     * <pre>AUDIT_QUOTA_RESULT_WARNING
     * SQLite key: auditquotaresult_warning
     * [en] The checkout rate for the cash register {0} for the quarter {1} / {2} has already been reached!The request is marked as "Examination Quota exceeded".Details: Number of inpatient cases: {3}Number of complaints (actual value): { 4}Number of complaints (target value): {5}Stated inspection quota for the quarter: {6}
     * [de] Die Prüfquote für die Kasse {0} für das Quartal {1}/{2} ist bereits erreicht!Die Anfrage wird mit "Überschreitung Prüfquote" markiert.Details:Anzahl abgerechnete vollstationäre Fälle: {3}davon zur Beanstandung eingeleitet (Istwert): {4}Max. zulässige Beanstandungen gemäß Prüfquote (Sollwert): {5}Festgesetzte Prüfquote für dieses Quartal: {6} %</pre>
     * @param pParams placeholder replacements
     * @return [en] The checkout rate for the cash register {0} for the quarter {1} / {2} has already been reached!The request is marked as "Examination Quota exceeded".Details: Number of inpatient cases: {3}Number of complaints (actual value): { 4}Number of complaints (target value): {5}Stated inspection quota for the quarter: {6}, [de] Die Prüfquote für die Kasse {0} für das Quartal {1}/{2} ist bereits erreicht!Die Anfrage wird mit "Überschreitung Prüfquote" markiert.Details:Anzahl abgerechnete vollstationäre Fälle: {3}davon zur Beanstandung eingeleitet (Istwert): {4}Max. zulässige Beanstandungen gemäß Prüfquote (Sollwert): {5}Festgesetzte Prüfquote für dieses Quartal: {6} %
     */
    public static String getAuditQuotaResultWarning(final Object... pParams) {
        return get(AUDIT_QUOTA_RESULT_WARNING, pParams).value;
    }

    /**
     * <pre>AUDIT_REASONS_ERROR
     * SQLite key: auditreasons_error
     * [en] List of audit reasons is empty. Please configure valid audit reasons!!
     * [de] Die Liste der Prüfgründe ist leer. Bitte konfigurieren Sie gültige Prüfgründe in den Stammdaten!</pre>
     * @return [en] List of audit reasons is empty. Please configure valid audit reasons!!, [de] Die Liste der Prüfgründe ist leer. Bitte konfigurieren Sie gültige Prüfgründe in den Stammdaten!
     */
    public static String getAuditReasonsError() {
        return get(AUDIT_REASONS_ERROR).value;
    }

    /**
     * <pre>AUDIT_REMINDER_CREATE
     * SQLite key: audit_remindercreate
     * [en] Reminder Create
     * [de] Wiedervorlage erzeugen</pre>
     * @return [en] Reminder Create, [de] Wiedervorlage erzeugen
     */
    public static String getAuditReminderCreate() {
        return get(AUDIT_REMINDER_CREATE).value;
    }

    /**
     * <pre>AUDIT_REQUEST_DATE
     * SQLite key: audit_requestdate
     * [en] Request Date
     * [de] Aufforderung am</pre>
     * @return [en] Request Date, [de] Aufforderung am
     */
    public static String getAuditRequestDate() {
        return get(AUDIT_REQUEST_DATE).value;
    }

    /**
     * <pre>AUDIT_SENT_ON_DATE
     * SQLite key: audit_sentondate
     * [en] Sent On
     * [de] gesendet am</pre>
     * @return [en] Sent On, [de] gesendet am
     */
    public static String getAuditSentOnDate() {
        return get(AUDIT_SENT_ON_DATE).value;
    }

    /**
     * <pre>AUDIT_STATUS
     * SQLite key: audit_status
     * [en] Status
     * [de] Status</pre>
     * ATTENTION this value ('Status') seems to be also defined under the key BILL_STATUS! this value ('Status') seems to be also defined under the key PROCESS_PREVIEW_PROCESS_STATUS! this value ('Status') seems to be also defined under the key RULE_FILTER_DIALOG_RULE_ERROR_STATUS!
     * @return [en] Status, [de] Status
     */
    public static String getAuditStatus() {
        return get(AUDIT_STATUS).value;
    }

    /**
     * <pre>AUDIT_TELEPHONE
     * SQLite key: audit_telephone
     * [en] Telephone
     * [de] Telefon</pre>
     * ATTENTION this value ('Telephone') seems to be also defined under the key MDK_TELEPHONE!
     * @return [en] Telephone, [de] Telefon
     */
    public static String getAuditTelephone() {
        return get(AUDIT_TELEPHONE).value;
    }

    /**
     * <pre>AUDIT_TELEPHONE_AREA_CODE
     * SQLite key: audit_telephoneareacode
     * [en] Telephone Area Code
     * [de] Vorwahl</pre>
     * ATTENTION this value ('Telephone Area Code') seems to be also defined under the key MDK_TELEPHONE_AREA_CODE!
     * @return [en] Telephone Area Code, [de] Vorwahl
     */
    public static String getAuditTelephoneAreaCode() {
        return get(AUDIT_TELEPHONE_AREA_CODE).value;
    }

    /**
     * <pre>AUDIT_TYPE_COLLECTION
     * SQLite key: audittype_collection
     * [en] Collective case check
     * [de] Sammelprüfung</pre>
     * @return [en] Collective case check, [de] Sammelprüfung
     */
    public static String getAuditTypeCollection() {
        return get(AUDIT_TYPE_COLLECTION).value;
    }

    /**
     * <pre>AUDIT_TYPE_SINGLE
     * SQLite key: audittype_single
     * [en] Single case check
     * [de] Einzelfallprüfung</pre>
     * @return [en] Single case check, [de] Einzelfallprüfung
     */
    public static String getAuditTypeSingle() {
        return get(AUDIT_TYPE_SINGLE).value;
    }

    /**
     * <pre>AUDIT_UPDATE_REQUEST_WINDOW
     * SQLite key: audit_updaterequestwindow
     * [en] Update a request (Examination/Pre-trial)
     * [de] Anfrage aktualisieren (Prüfanfrage/Vorverfahren)</pre>
     * @return [en] Update a request (Examination/Pre-trial), [de] Anfrage aktualisieren (Prüfanfrage/Vorverfahren)
     */
    public static String getAuditUpdateRequestWindow() {
        return get(AUDIT_UPDATE_REQUEST_WINDOW).value;
    }

    /**
     * <pre>AUDIT_USER_COMMENT
     * SQLite key: audit_usercomment
     * [en] User Comment
     * [de] Notizen</pre>
     * ATTENTION this value ('User Comment') seems to be also defined under the key MDK_USER_COMMENT!
     * @return [en] User Comment, [de] Notizen
     */
    public static String getAuditUserComment() {
        return get(AUDIT_USER_COMMENT).value;
    }

    /**
     * <pre>AUTHORIZATION_DIALOG_MESSAGE
     * SQLite key: authorization_dialog_message
     * [en] Your active role {0} does not have the necessary permissions to ''''{1}''''.
     * [de] Ihre aktuelle Rolle {0} verfügt nicht über die notwendige Berechtigung um ''''{1}'''' auszuführen.</pre>
     * @param pParams placeholder replacements
     * @return [en] Your active role {0} does not have the necessary permissions to ''''{1}''''., [de] Ihre aktuelle Rolle {0} verfügt nicht über die notwendige Berechtigung um ''''{1}'''' auszuführen.
     */
    public static String getAuthorizationDialogMessage(final Object... pParams) {
        return get(AUTHORIZATION_DIALOG_MESSAGE, pParams).value;
    }

    /**
     * <pre>AUTHORIZATION_DIALOG_MESSAGE_CONTACT
     * SQLite key: authorization_dialog_message_contact
     * [en] Please contact your system administrator.
     * [de] Bitte wenden Sie sich an Ihren Systemadministrator.</pre>
     * @return [en] Please contact your system administrator., [de] Bitte wenden Sie sich an Ihren Systemadministrator.
     */
    public static String getAuthorizationDialogMessageContact() {
        return get(AUTHORIZATION_DIALOG_MESSAGE_CONTACT).value;
    }

    /**
     * <pre>BASERATE
     * SQLite key: baserate
     * [en] Baserate
     * [de] Basiswert</pre>
     * @return [en] Baserate, [de] Basiswert
     */
    public static String getBaserate() {
        return get(BASERATE).value;
    }

    /**
     * <pre>BATCHPROCESSING
     * SQLite key: batchprocessing
     * [en] Batchprocessing
     * [de] Batchverarbeitung</pre>
     * @return [en] Batchprocessing, [de] Batchverarbeitung
     */
    public static String getBatchprocessing() {
        return get(BATCHPROCESSING).value;
    }

    /**
     * <pre>BATCHPROCESSING_LAST_PROCESS
     * SQLite key: batchprocessing_lastprocess
     * [en] Last batchprocess: {0}
     * [de] Letzte Batchverarbeitung: {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Last batchprocess: {0}, [de] Letzte Batchverarbeitung: {0}
     */
    public static String getBatchprocessingLastProcess(final Object... pParams) {
        return get(BATCHPROCESSING_LAST_PROCESS, pParams).value;
    }

    /**
     * <pre>BATCHPROCESSING_RESULT
     * SQLite key: batchprocessing_result
     * [en] Result batchprocessing
     * [de] Ergebnis Batchverarbeitung</pre>
     * @return [en] Result batchprocessing, [de] Ergebnis Batchverarbeitung
     */
    public static String getBatchprocessingResult() {
        return get(BATCHPROCESSING_RESULT).value;
    }

    /**
     * <pre>BEGE_DIRECT_FAX
     * SQLite key: bege_directfax
     * [en] Direct Fax No.
     * [de] Fax direkt</pre>
     * @return [en] Direct Fax No., [de] Fax direkt
     */
    public static String getBegeDirectFax() {
        return get(BEGE_DIRECT_FAX).value;
    }

    /**
     * <pre>BEGE_DIRECT_PHONE_NO
     * SQLite key: bege_directphoneno
     * [en] Direct Phone No.
     * [de] Durchwahl</pre>
     * @return [en] Direct Phone No., [de] Durchwahl
     */
    public static String getBegeDirectPhoneNo() {
        return get(BEGE_DIRECT_PHONE_NO).value;
    }

    /**
     * <pre>BEGE_EDITOR
     * SQLite key: bege_editor
     * [en] Contact person
     * [de] Ansprechpartner</pre>
     * @return [en] Contact person, [de] Ansprechpartner
     */
    public static String getBegeEditor() {
        return get(BEGE_EDITOR).value;
    }

    /**
     * <pre>BEGE_UPDATE_REQUEST_WINDOW
     * SQLite key: bege_updaterequestwindow
     * [en] Update a request (Insurance Association)
     * [de] Anfrage aktualisieren (Berufsgenossenschaft)</pre>
     * @return [en] Update a request (Insurance Association), [de] Anfrage aktualisieren (Berufsgenossenschaft)
     */
    public static String getBegeUpdateRequestWindow() {
        return get(BEGE_UPDATE_REQUEST_WINDOW).value;
    }

    /**
     * <pre>BILL_CORRECTION_DEADLINE
     * SQLite key: bill_correction_deadline
     * [de] Frist bis zur einmaligen Rechnungskorrektur (MD-Anfrage) (Frist Rech.-Korrektur)</pre>
     * @return [de] Frist bis zur einmaligen Rechnungskorrektur (MD-Anfrage) (Frist Rech.-Korrektur)
     */
    public static String getBillCorrectionDeadline() {
        return get(BILL_CORRECTION_DEADLINE).value;
    }

    public static Translation getBillCorrectionDeadlineObj() {
        return get(BILL_CORRECTION_DEADLINE);
    }

    /**
     * <pre>BILL_CORRECTION_DEADLINE_DAYS
     * SQLite key: bill_correction_deadline_days
     * [de] Tage bis Rechnungskorrektur MD (Korrektur MD)</pre>
     * @return [de] Tage bis Rechnungskorrektur MD (Korrektur MD)
     */
    public static String getBillCorrectionDeadlineDays() {
        return get(BILL_CORRECTION_DEADLINE_DAYS).value;
    }

    public static Translation getBillCorrectionDeadlineDaysObj() {
        return get(BILL_CORRECTION_DEADLINE_DAYS);
    }

    /**
     * <pre>BILL_CORRECTION_DEADLINE_FROM
     * SQLite key: bill_correction_deadline_from
     * [de] Frist Rech.-Korrektur von</pre>
     * @return [de] Frist Rech.-Korrektur von
     */
    public static String getBillCorrectionDeadlineFrom() {
        return get(BILL_CORRECTION_DEADLINE_FROM).value;
    }

    /**
     * <pre>BILL_CORRECTION_DEADLINE_TO
     * SQLite key: bill_correction_deadline_to
     * [de] Frist Rech.-Korrektur bis</pre>
     * @return [de] Frist Rech.-Korrektur bis
     */
    public static String getBillCorrectionDeadlineTo() {
        return get(BILL_CORRECTION_DEADLINE_TO).value;
    }

    /**
     * <pre>BILL_DATE
     * SQLite key: bill_date
     * [en] Bill date
     * [de] Rechnungsdatum
     * [de] Fakturadatum</pre>
     * @return [en] Bill date, [de] Rechnungsdatum, [de] Fakturadatum
     */
    public static String getBillDate() {
        return get(BILL_DATE).value;
    }

    /**
     * <pre>BILL_FISCAL_YEAR
     * SQLite key: bill_fiscalyear
     * [en] Year
     * [de] Jahr</pre>
     * ATTENTION this value ('Year') seems to be also defined under the key BILL_OPEN_ITEM_FISCAL_YEAR!
     * @return [en] Year, [de] Jahr
     */
    public static String getBillFiscalYear() {
        return get(BILL_FISCAL_YEAR).value;
    }

    /**
     * <pre>BILL_KIND
     * SQLite key: bill_kind
     * [en] Kind
     * [de] Fakturaart</pre>
     * ATTENTION this value ('Kind') seems to be also defined under the key CASE_RESOLVE_KIND! this value ('Kind') seems to be also defined under the key CASEFEE_KIND!
     * @return [en] Kind, [de] Fakturaart
     */
    public static String getBillKind() {
        return get(BILL_KIND).value;
    }

    /**
     * <pre>BILL_NETVALUE
     * SQLite key: bill_netvalue
     * [en] Netvalue
     * [de] Betrag</pre>
     * @return [en] Netvalue, [de] Betrag
     */
    public static String getBillNetvalue() {
        return get(BILL_NETVALUE).value;
    }

    /**
     * <pre>BILL_NO
     * SQLite key: bill_no
     * [en] Bill No.
     * [de] Faktura</pre>
     * ATTENTION this value ('Bill No.') seems to be also defined under the key BILL_POSITION_BILL_NO!
     * @return [en] Bill No., [de] Faktura
     */
    public static String getBillNo() {
        return get(BILL_NO).value;
    }

    /**
     * <pre>BILL_NUMBER
     * SQLite key: bill_number
     * [en] Bill number
     * [de] Rechnungsnummer</pre>
     * @return [en] Bill number, [de] Rechnungsnummer
     */
    public static String getBillNumber() {
        return get(BILL_NUMBER).value;
    }

    /**
     * <pre>BILL_OPEN_ITEM_ACCOUNTS_RECEIVABLE_NO
     * SQLite key: billopenitem_accountsreceivableno
     * [en] Accounts Receivable No.
     * [de] Debitorennr</pre>
     * @return [en] Accounts Receivable No., [de] Debitorennr
     */
    public static String getBillOpenItemAccountsReceivableNo() {
        return get(BILL_OPEN_ITEM_ACCOUNTS_RECEIVABLE_NO).value;
    }

    /**
     * <pre>BILL_OPEN_ITEM_AMOUNT_IN_LOCAL_CURR
     * SQLite key: billopenitem_amountinlocalcurr
     * [en] Amount In Local Curr.
     * [de] Betrag</pre>
     * @return [en] Amount In Local Curr., [de] Betrag
     */
    public static String getBillOpenItemAmountInLocalCurr() {
        return get(BILL_OPEN_ITEM_AMOUNT_IN_LOCAL_CURR).value;
    }

    /**
     * <pre>BILL_OPEN_ITEM_COMPANY_CODE
     * SQLite key: billopenitem_companycode
     * [en] Company code
     * [de] Buchungskreis</pre>
     * @return [en] Company code, [de] Buchungskreis
     */
    public static String getBillOpenItemCompanyCode() {
        return get(BILL_OPEN_ITEM_COMPANY_CODE).value;
    }

    /**
     * <pre>BILL_OPEN_ITEM_CURRENCY_KEY
     * SQLite key: billopenitem_currencykey
     * [en] Currency Key
     * [de] Währung</pre>
     * @return [en] Currency Key, [de] Währung
     */
    public static String getBillOpenItemCurrencyKey() {
        return get(BILL_OPEN_ITEM_CURRENCY_KEY).value;
    }

    /**
     * <pre>BILL_OPEN_ITEM_DEBIT_CREDIT_KEY
     * SQLite key: billopenitem_debitcreditkey
     * [en] Debit Credit Key
     * [de] S/H</pre>
     * @return [en] Debit Credit Key, [de] S/H
     */
    public static String getBillOpenItemDebitCreditKey() {
        return get(BILL_OPEN_ITEM_DEBIT_CREDIT_KEY).value;
    }

    /**
     * <pre>BILL_OPEN_ITEM_FISCAL_YEAR
     * SQLite key: billopenitem_fiscalyear
     * [en] Year
     * [de] Jahr</pre>
     * ATTENTION this value ('Year') seems to be also defined under the key BILL_FISCAL_YEAR!
     * @return [en] Year, [de] Jahr
     */
    public static String getBillOpenItemFiscalYear() {
        return get(BILL_OPEN_ITEM_FISCAL_YEAR).value;
    }

    /**
     * <pre>BILL_OPEN_ITEM_NET_VALUE
     * SQLite key: billopenitem_netvalue
     * [en] Net Value
     * [de] Gesamt</pre>
     * @return [en] Net Value, [de] Gesamt
     */
    public static String getBillOpenItemNetValue() {
        return get(BILL_OPEN_ITEM_NET_VALUE).value;
    }

    /**
     * <pre>BILL_OPEN_ITEM_NUMBER_RECEIPT
     * SQLite key: billopenitem_numberreceipt
     * [en] Number Receipt
     * [de] Belegnr</pre>
     * @return [en] Number Receipt, [de] Belegnr
     */
    public static String getBillOpenItemNumberReceipt() {
        return get(BILL_OPEN_ITEM_NUMBER_RECEIPT).value;
    }

    /**
     * <pre>BILL_OPEN_ITEM_RECEIPT_DATE_RECEIPT
     * SQLite key: billopenitem_receiptdatereceipt
     * [en] Receipt Date
     * [de] Belegdatum</pre>
     * @return [en] Receipt Date, [de] Belegdatum
     */
    public static String getBillOpenItemReceiptDateReceipt() {
        return get(BILL_OPEN_ITEM_RECEIPT_DATE_RECEIPT).value;
    }

    /**
     * <pre>BILL_OPEN_ITEM_REF_NO
     * SQLite key: billopenitem_refno
     * [en] Ref. No.
     * [de] Zuordnung</pre>
     * @return [en] Ref. No., [de] Zuordnung
     */
    public static String getBillOpenItemRefNo() {
        return get(BILL_OPEN_ITEM_REF_NO).value;
    }

    /**
     * <pre>BILL_OPEN_ITEM_TEXT_DESC
     * SQLite key: billopenitem_textdesc
     * [en] Text
     * [de] Bezeichnung</pre>
     * ATTENTION this value ('Text') seems to be also defined under the key BILL_POSITION_TEXT!
     * @return [en] Text, [de] Bezeichnung
     */
    public static String getBillOpenItemTextDesc() {
        return get(BILL_OPEN_ITEM_TEXT_DESC).value;
    }

    /**
     * <pre>BILL_POSITION_AMOUNT
     * SQLite key: billposition_amount
     * [en] Amount
     * [de] Menge</pre>
     * @return [en] Amount, [de] Menge
     */
    public static String getBillPositionAmount() {
        return get(BILL_POSITION_AMOUNT).value;
    }

    /**
     * <pre>BILL_POSITION_BASE_AMOUNT
     * SQLite key: billposition_baseamount
     * [en] Base Amount
     * [de] Preis</pre>
     * @return [en] Base Amount, [de] Preis
     */
    public static String getBillPositionBaseAmount() {
        return get(BILL_POSITION_BASE_AMOUNT).value;
    }

    /**
     * <pre>BILL_POSITION_BILL_NO
     * SQLite key: billposition_billno
     * [en] Bill No.
     * [de] Faktura</pre>
     * ATTENTION this value ('Bill No.') seems to be also defined under the key BILL_NO!
     * @return [en] Bill No., [de] Faktura
     */
    public static String getBillPositionBillNo() {
        return get(BILL_POSITION_BILL_NO).value;
    }

    /**
     * <pre>BILL_POSITION_NET_AMOUNT
     * SQLite key: billposition_netamount
     * [en] Net Amount
     * [de] Nettowert</pre>
     * @return [en] Net Amount, [de] Nettowert
     */
    public static String getBillPositionNetAmount() {
        return get(BILL_POSITION_NET_AMOUNT).value;
    }

    /**
     * <pre>BILL_POSITION_POSITION_NO
     * SQLite key: billposition_positionno
     * [en] Position No.
     * [de] Positionsnummer</pre>
     * @return [en] Position No., [de] Positionsnummer
     */
    public static String getBillPositionPositionNo() {
        return get(BILL_POSITION_POSITION_NO).value;
    }

    /**
     * <pre>BILL_POSITION_REFERENCE
     * SQLite key: billposition_reference
     * [en] Reference
     * [de] Tarifleistung</pre>
     * @return [en] Reference, [de] Tarifleistung
     */
    public static String getBillPositionReference() {
        return get(BILL_POSITION_REFERENCE).value;
    }

    /**
     * <pre>BILL_POSITION_TEXT
     * SQLite key: billposition_text
     * [en] Text
     * [de] Bezeichnung</pre>
     * ATTENTION this value ('Text') seems to be also defined under the key BILL_OPEN_ITEM_TEXT_DESC!
     * @return [en] Text, [de] Bezeichnung
     */
    public static String getBillPositionText() {
        return get(BILL_POSITION_TEXT).value;
    }

    /**
     * <pre>BILL_POSITIONS
     * SQLite key: bill_positions
     * [en] bill positions
     * [de] Rechnungspositionen</pre>
     * @return [en] bill positions, [de] Rechnungspositionen
     */
    public static String getBillPositions() {
        return get(BILL_POSITIONS).value;
    }

    /**
     * <pre>BILL_RECIPIENT
     * SQLite key: bill_recipient
     * [en] Recipient
     * [de] Regulierer</pre>
     * @return [en] Recipient, [de] Regulierer
     */
    public static String getBillRecipient() {
        return get(BILL_RECIPIENT).value;
    }

    /**
     * <pre>BILL_REF_CURRENCY
     * SQLite key: bill_refcurrency
     * [en] Ref. currency
     * [de] Währung</pre>
     * @return [en] Ref. currency, [de] Währung
     */
    public static String getBillRefCurrency() {
        return get(BILL_REF_CURRENCY).value;
    }

    /**
     * <pre>BILL_REF_TYPE
     * SQLite key: bill_reftype
     * [en] Ref. type
     * [de] Fakturabeleg</pre>
     * @return [en] Ref. type, [de] Fakturabeleg
     */
    public static String getBillRefType() {
        return get(BILL_REF_TYPE).value;
    }

    /**
     * <pre>BILL_STATUS
     * SQLite key: bill_status
     * [en] Status
     * [de] Status</pre>
     * ATTENTION this value ('Status') seems to be also defined under the key AUDIT_STATUS! this value ('Status') seems to be also defined under the key PROCESS_PREVIEW_PROCESS_STATUS! this value ('Status') seems to be also defined under the key RULE_FILTER_DIALOG_RULE_ERROR_STATUS!
     * @return [en] Status, [de] Status
     */
    public static String getBillStatus() {
        return get(BILL_STATUS).value;
    }

    /**
     * <pre>BILL_TYPE
     * SQLite key: bill_type
     * [en] Bill type
     * [de] Fakturatyp
     * [de] Rechnungsart</pre>
     * @return [en] Bill type, [de] Fakturatyp, [de] Rechnungsart
     */
    public static String getBillType() {
        return get(BILL_TYPE).value;
    }

    /**
     * <pre>BILL_TYPE_ENUM_1_WARNING
     * SQLite key: bill_type_enum_1_warning
     * [en] first warning
     * [de] 1. Mahnung</pre>
     * @return [en] first warning, [de] 1. Mahnung
     */
    public static String getBillTypeEnum1Warning() {
        return get(BILL_TYPE_ENUM_1_WARNING).value;
    }

    /**
     * <pre>BILL_TYPE_ENUM_2_WARNING
     * SQLite key: bill_type_enum_2_warning
     * [en] second warning
     * [de] 2. Mahnung</pre>
     * @return [en] second warning, [de] 2. Mahnung
     */
    public static String getBillTypeEnum2Warning() {
        return get(BILL_TYPE_ENUM_2_WARNING).value;
    }

    /**
     * <pre>BILL_TYPE_ENUM_CREDIT_STORNO
     * SQLite key: bill_type_enum_credit_storno
     * [en] credit/storno bill
     * [de] Gutschrift/Stornierung</pre>
     * @return [en] credit/storno bill, [de] Gutschrift/Stornierung
     */
    public static String getBillTypeEnumCreditStorno() {
        return get(BILL_TYPE_ENUM_CREDIT_STORNO).value;
    }

    /**
     * <pre>BILL_TYPE_ENUM_FINAL
     * SQLite key: bill_type_enum_final
     * [en] final bill
     * [de] Schlussrechnung</pre>
     * @return [en] final bill, [de] Schlussrechnung
     */
    public static String getBillTypeEnumFinal() {
        return get(BILL_TYPE_ENUM_FINAL).value;
    }

    /**
     * <pre>BILL_TYPE_ENUM_FORECAST
     * SQLite key: bill_type_enum_forecast
     * [en] forecast bill
     * [de] Vorausberechnung</pre>
     * @return [en] forecast bill, [de] Vorausberechnung
     */
    public static String getBillTypeEnumForecast() {
        return get(BILL_TYPE_ENUM_FORECAST).value;
    }

    /**
     * <pre>BILL_TYPE_ENUM_PARTIAL
     * SQLite key: bill_type_enum_partial
     * [en] partial bill
     * [de] Zwischenrechnung</pre>
     * @return [en] partial bill, [de] Zwischenrechnung
     */
    public static String getBillTypeEnumPartial() {
        return get(BILL_TYPE_ENUM_PARTIAL).value;
    }

    /**
     * <pre>BILL_TYPE_ENUM_REMINDER
     * SQLite key: bill_type_enum_reminder
     * [en] reminder bill
     * [de] Zahlungserinnerung</pre>
     * @return [en] reminder bill, [de] Zahlungserinnerung
     */
    public static String getBillTypeEnumReminder() {
        return get(BILL_TYPE_ENUM_REMINDER).value;
    }

    /**
     * <pre>BILL_TYPE_ENUM_SUPPL
     * SQLite key: bill_type_enum_suppl
     * [en] supplimentary bill
     * [de] Nachtragsrechnung</pre>
     * @return [en] supplimentary bill, [de] Nachtragsrechnung
     */
    public static String getBillTypeEnumSuppl() {
        return get(BILL_TYPE_ENUM_SUPPL).value;
    }

    /**
     * <pre>BILL_VALIDATION_ERROR
     * SQLite key: bill_validation_error
     * [en] Need additional information!
     * [de] Zusätzliche Informationen sind erforderlich</pre>
     * @return [en] Need additional information!, [de] Zusätzliche Informationen sind erforderlich
     */
    public static String getBillValidationError() {
        return get(BILL_VALIDATION_ERROR).value;
    }

    /**
     * <pre>BILL_VALIDATION_INVALID_BILL_NUMBER_LENGTH
     * SQLite key: billvalidation_invalid_bill_number_length
     * [en] bill number kann be maximal 10 symbols
     * [de] Rechnungsnummer darf nicht länger als 10 Zeichen sein</pre>
     * @return [en] bill number kann be maximal 10 symbols, [de] Rechnungsnummer darf nicht länger als 10 Zeichen sein
     */
    public static String getBillValidationInvalidBillNumberLength() {
        return get(BILL_VALIDATION_INVALID_BILL_NUMBER_LENGTH).value;
    }

    /**
     * <pre>BILL_VALIDATION_INVALID_FEE_KEY
     * SQLite key: billvalidation_invalid_fee_key
     * [en] one fee key is not valid
     * [de] Mindestens ein Entgeltschlüssel ist nicht korrekt</pre>
     * @return [en] one fee key is not valid, [de] Mindestens ein Entgeltschlüssel ist nicht korrekt
     */
    public static String getBillValidationInvalidFeeKey() {
        return get(BILL_VALIDATION_INVALID_FEE_KEY).value;
    }

    /**
     * <pre>BILL_VALIDATION_INVALID_FEE_KEY_LENGTH
     * SQLite key: billvalidation_invalid_fee_key_length
     * [en] fee key must have 8 symbols
     * [de] Entgeltschüssel muss 8 Zeichen haben</pre>
     * @return [en] fee key must have 8 symbols, [de] Entgeltschüssel muss 8 Zeichen haben
     */
    public static String getBillValidationInvalidFeeKeyLength() {
        return get(BILL_VALIDATION_INVALID_FEE_KEY_LENGTH).value;
    }

    /**
     * <pre>BILL_VALIDATION_INVALID_INSURANCE_KEY_LENGTH
     * SQLite key: billvalidation_invalid_insurance_key_length
     * [en] insurance number has to have 9 symbols
     * [de] Versicherungsnummer muss 9 Zeichen haben</pre>
     * @return [en] insurance number has to have 9 symbols, [de] Versicherungsnummer muss 9 Zeichen haben
     */
    public static String getBillValidationInvalidInsuranceKeyLength() {
        return get(BILL_VALIDATION_INVALID_INSURANCE_KEY_LENGTH).value;
    }

    /**
     * <pre>BILL_VALIDATION_NO_FEES
     * SQLite key: bill_validation_no_fees
     * [en] Bill has to include fee keys
     * [de] Eine Rechnung muss mindestens ein Entgelt enthalten</pre>
     * @return [en] Bill has to include fee keys, [de] Eine Rechnung muss mindestens ein Entgelt enthalten
     */
    public static String getBillValidationNoFees() {
        return get(BILL_VALIDATION_NO_FEES).value;
    }

    /**
     * <pre>BILLING_DATE
     * SQLite key: billingdate
     * [en] Billing Date (Bill.-Date)
     * [de] Rechnungsdatum (Rech.-Datum)</pre>
     * @return [en] Billing Date (Bill.-Date), [de] Rechnungsdatum (Rech.-Datum)
     */
    public static String getBillingDate() {
        return get(BILLING_DATE).value;
    }

    public static Translation getBillingDateObj() {
        return get(BILLING_DATE);
    }

    /**
     * <pre>BILLING_DATE_FROM
     * SQLite key: billingdate_from
     * [en] Bill.-Date from
     * [de] Rech.-Datum von</pre>
     * @return [en] Bill.-Date from, [de] Rech.-Datum von
     */
    public static String getBillingDateFrom() {
        return get(BILLING_DATE_FROM).value;
    }

    /**
     * <pre>BILLING_DATE_TO
     * SQLite key: billingdate_to
     * [en] Bill.-Date to
     * [de] Rech.-Datum bis</pre>
     * @return [en] Bill.-Date to, [de] Rech.-Datum bis
     */
    public static String getBillingDateTo() {
        return get(BILLING_DATE_TO).value;
    }

    /**
     * <pre>BILLING_QUARTER
     * SQLite key: billing_quarter
     * [en] Billing Quarter (Bill. Quarter)
     * [de] Rechnungsquartal (Rech.-Quartal)</pre>
     * @return [en] Billing Quarter (Bill. Quarter), [de] Rechnungsquartal (Rech.-Quartal)
     */
    public static String getBillingQuarter() {
        return get(BILLING_QUARTER).value;
    }

    public static Translation getBillingQuarterObj() {
        return get(BILLING_QUARTER);
    }

    /**
     * <pre>BOOKMARKS
     * SQLite key: bookmarks
     * [en] bookmarks
     * [de] Textmarken</pre>
     * @return [en] bookmarks, [de] Textmarken
     */
    public static String getBookmarks() {
        return get(BOOKMARKS).value;
    }

    /**
     * <pre>CANCEL
     * SQLite key: cancel
     * [en] cancel
     * [de] Abbrechen</pre>
     * ATTENTION this value ('Cancel') seems to be also defined under the key SAP_REFERENCE_TYPE_CANCELLATION!
     * @return [en] cancel, [de] Abbrechen
     */
    public static String getCancel() {
        return get(CANCEL).value;
    }

    /**
     * <pre>CANCEL_GROUPING
     * SQLite key: cancelgrouping
     * [en] cancel Grouping
     * [de] Stoppe Grouping</pre>
     * @return [en] cancel Grouping, [de] Stoppe Grouping
     */
    public static String getCancelGrouping() {
        return get(CANCEL_GROUPING).value;
    }

    /**
     * <pre>CANCEL_SEARCH
     * SQLite key: cancelsearch
     * [en] Cancel Search
     * [de] Suche abbrechen</pre>
     * @return [en] Cancel Search, [de] Suche abbrechen
     */
    public static String getCancelSearch() {
        return get(CANCEL_SEARCH).value;
    }

    /**
     * <pre>CARE_PERC_ADULT
     * SQLite key: carepercadult
     * [en] Total 1:1
     * [de] Summe 1:1</pre>
     * @return [en] Total 1:1, [de] Summe 1:1
     */
    public static String getCarePercAdult() {
        return get(CARE_PERC_ADULT).value;
    }

    /**
     * <pre>CARE_PERC_INF
     * SQLite key: carepercinf
     * [en] Total 1:1(C/T)
     * [de] Summe 1:1(K/J)</pre>
     * @return [en] Total 1:1(C/T), [de] Summe 1:1(K/J)
     */
    public static String getCarePercInf() {
        return get(CARE_PERC_INF).value;
    }

    /**
     * <pre>CASE
     * SQLite key: case
     * [en] Case
     * [de] Fall</pre>
     * ATTENTION this value ('Case') seems to be also defined under the key EVENT_NAME_CASE!
     * @return [en] Case, [de] Fall
     */
    public static String getCase() {
        return get(CASE).value;
    }

    /**
     * <pre>CASE_ADDED_TOOLTIP
     * SQLite key: case_added_tooltip
     * [en] See the details of a Case
     * [de] Siehe die Details eines Falles</pre>
     * @return [en] See the details of a Case, [de] Siehe die Details eines Falles
     */
    public static String getCaseAddedTooltip() {
        return get(CASE_ADDED_TOOLTIP).value;
    }

    /**
     * <pre>CASE_CARE_CW
     * SQLite key: case_carecw
     * [en] CareCW (CW cre.)
     * [de] PflegeCW (CW Pfl.)</pre>
     * @return [en] CareCW (CW cre.), [de] PflegeCW (CW Pfl.)
     */
    public static String getCaseCareCW() {
        return get(CASE_CARE_CW).value;
    }

    public static Translation getCaseCareCWObj() {
        return get(CASE_CARE_CW);
    }

    /**
     * <pre>CASE_CARE_CW_FROM
     * SQLite key: case_carecw_from
     * [en] CW cre. from
     * [de] PflegeCW von</pre>
     * @return [en] CW cre. from, [de] PflegeCW von
     */
    public static String getCaseCareCWFrom() {
        return get(CASE_CARE_CW_FROM).value;
    }

    /**
     * <pre>CASE_CARE_CW_TO
     * SQLite key: case_carecw_to
     * [en] CW cre. to
     * [de] PflegeCW bis</pre>
     * @return [en] CW cre. to, [de] PflegeCW bis
     */
    public static String getCaseCareCWTo() {
        return get(CASE_CARE_CW_TO).value;
    }

    /**
     * <pre>CASE_CARE_CWMAXIMAL
     * SQLite key: case_carecwmaximal
     * [en] CareCW maximal (CW cre. max.)
     * [de] PflegeCW maximal (CW Pfl. max.)</pre>
     * @return [en] CareCW maximal (CW cre. max.), [de] PflegeCW maximal (CW Pfl. max.)
     */
    public static String getCaseCareCWmaximal() {
        return get(CASE_CARE_CWMAXIMAL).value;
    }

    public static Translation getCaseCareCWmaximalObj() {
        return get(CASE_CARE_CWMAXIMAL);
    }

    /**
     * <pre>CASE_CARE_CWMAXIMAL_FROM
     * SQLite key: case_carecwmaximal_from
     * [en] CW cre. max. from
     * [de] PflegeCW max. von</pre>
     * @return [en] CW cre. max. from, [de] PflegeCW max. von
     */
    public static String getCaseCareCWmaximalFrom() {
        return get(CASE_CARE_CWMAXIMAL_FROM).value;
    }

    /**
     * <pre>CASE_CARE_CWMAXIMAL_TO
     * SQLite key: case_carecwmaximal_to
     * [en] CW cre. max. to
     * [de] PflegeCW max. bis</pre>
     * @return [en] CW cre. max. to, [de] PflegeCW max. bis
     */
    public static String getCaseCareCWmaximalTo() {
        return get(CASE_CARE_CWMAXIMAL_TO).value;
    }

    /**
     * <pre>CASE_CARE_CWMINIMAL
     * SQLite key: case_carecwminimal
     * [en] CareCW minimal (CW cre. min.)
     * [de] PflegeCW minimal (CW Pfl. min.)</pre>
     * @return [en] CareCW minimal (CW cre. min.), [de] PflegeCW minimal (CW Pfl. min.)
     */
    public static String getCaseCareCWminimal() {
        return get(CASE_CARE_CWMINIMAL).value;
    }

    public static Translation getCaseCareCWminimalObj() {
        return get(CASE_CARE_CWMINIMAL);
    }

    /**
     * <pre>CASE_CARE_CWMINIMAL_FROM
     * SQLite key: case_carecwminimal_from
     * [en] CW cre. min. from
     * [de] PflegeCW min. von</pre>
     * @return [en] CW cre. min. from, [de] PflegeCW min. von
     */
    public static String getCaseCareCWminimalFrom() {
        return get(CASE_CARE_CWMINIMAL_FROM).value;
    }

    /**
     * <pre>CASE_CARE_CWMINIMAL_TO
     * SQLite key: case_carecwminimal_to
     * [en] CW cre. min. to
     * [de] PflegeCW min. bis</pre>
     * @return [en] CW cre. min. to, [de] PflegeCW min. bis
     */
    public static String getCaseCareCWminimalTo() {
        return get(CASE_CARE_CWMINIMAL_TO).value;
    }

    /**
     * <pre>CASE_CREATE_PROCESS
     * SQLite key: case_create_process
     * [en] Create process
     * [de] Vorgang erstellen</pre>
     * @return [en] Create process, [de] Vorgang erstellen
     */
    public static String getCaseCreateProcess() {
        return get(CASE_CREATE_PROCESS).value;
    }

    /**
     * <pre>CASE_CW_CATALOG
     * SQLite key: case_cwcatalog
     * [en] Assessment Relation: Main Department (CW Catalog)
     * [de] Bewertungsrelation: Hauptabteilung (CW Katalog)</pre>
     * @return [en] Assessment Relation: Main Department (CW Catalog), [de] Bewertungsrelation: Hauptabteilung (CW Katalog)
     */
    public static String getCaseCwCatalog() {
        return get(CASE_CW_CATALOG).value;
    }

    public static Translation getCaseCwCatalogObj() {
        return get(CASE_CW_CATALOG);
    }

    /**
     * <pre>CASE_CW_EFFECTIVE
     * SQLite key: case_cweffective
     * [en] effective CW (CW eff.)
     * [de] Effektiver CW Wert (CW eff.)</pre>
     * @return [en] effective CW (CW eff.), [de] Effektiver CW Wert (CW eff.)
     */
    public static String getCaseCwEffective() {
        return get(CASE_CW_EFFECTIVE).value;
    }

    public static Translation getCaseCwEffectiveObj() {
        return get(CASE_CW_EFFECTIVE);
    }

    /**
     * <pre>CASE_CW_EFFECTIVE_FROM
     * SQLite key: case_cweffective_from
     * [en] CW eff. from
     * [de] CW eff. von</pre>
     * @return [en] CW eff. from, [de] CW eff. von
     */
    public static String getCaseCwEffectiveFrom() {
        return get(CASE_CW_EFFECTIVE_FROM).value;
    }

    /**
     * <pre>CASE_CW_EFFECTIVE_TO
     * SQLite key: case_cweffective_to
     * [en] CW eff. to
     * [de] CW eff. bis</pre>
     * @return [en] CW eff. to, [de] CW eff. bis
     */
    public static String getCaseCwEffectiveTo() {
        return get(CASE_CW_EFFECTIVE_TO).value;
    }

    /**
     * <pre>CASE_CW_NEGATIVE
     * SQLite key: case_cwnegative
     * [en] Total of all negative CW (CW-)
     * [de] Summe aller negativen CW Werte (CW-)</pre>
     * @return [en] Total of all negative CW (CW-), [de] Summe aller negativen CW Werte (CW-)
     */
    public static String getCaseCwNegative() {
        return get(CASE_CW_NEGATIVE).value;
    }

    public static Translation getCaseCwNegativeObj() {
        return get(CASE_CW_NEGATIVE);
    }

    /**
     * <pre>CASE_CW_POSITIVE
     * SQLite key: case_cwpositive
     * [en] Total of all positive CW (CW+)
     * [de] Summe aller positiven CW Werte (CW+)</pre>
     * @return [en] Total of all positive CW (CW+), [de] Summe aller positiven CW Werte (CW+)
     */
    public static String getCaseCwPositive() {
        return get(CASE_CW_POSITIVE).value;
    }

    public static Translation getCaseCwPositiveObj() {
        return get(CASE_CW_POSITIVE);
    }

    /**
     * <pre>CASE_DATA
     * SQLite key: case_data
     * [en] Case data
     * [de] Falldaten</pre>
     * @return [en] Case data, [de] Falldaten
     */
    public static String getCaseData() {
        return get(CASE_DATA).value;
    }

    /**
     * <pre>CASE_DAY_CARE
     * SQLite key: case_day_care
     * [en] case with day care admission reason
     * [de] vorstationärer Fall</pre>
     * @return [en] case with day care admission reason, [de] vorstationärer Fall
     */
    public static String getCaseDayCare() {
        return get(CASE_DAY_CARE).value;
    }

    /**
     * <pre>CASE_DELETE_PROCESS
     * SQLite key: case_delete_process
     * [en] Delete process
     * [de] Vorgang löschen</pre>
     * @return [en] Delete process, [de] Vorgang löschen
     */
    public static String getCaseDeleteProcess() {
        return get(CASE_DELETE_PROCESS).value;
    }

    /**
     * <pre>CASE_DELTA_CWMAXIMAL
     * SQLite key: case_deltacwmaximal
     * [en] Delta-CW maximal (dCW max)
     * [de] Delta-CW maximal (dCW max.)</pre>
     * @return [en] Delta-CW maximal (dCW max), [de] Delta-CW maximal (dCW max.)
     */
    public static String getCaseDeltaCWmaximal() {
        return get(CASE_DELTA_CWMAXIMAL).value;
    }

    public static Translation getCaseDeltaCWmaximalObj() {
        return get(CASE_DELTA_CWMAXIMAL);
    }

    /**
     * <pre>CASE_DELTA_CWMAXIMAL_FROM
     * SQLite key: case_deltacwmaximal_from
     * [en] dCW max from
     * [de] dCW max. von</pre>
     * @return [en] dCW max from, [de] dCW max. von
     */
    public static String getCaseDeltaCWmaximalFrom() {
        return get(CASE_DELTA_CWMAXIMAL_FROM).value;
    }

    /**
     * <pre>CASE_DELTA_CWMAXIMAL_TO
     * SQLite key: case_deltacwmaximal_to
     * [en] dCW max to
     * [de] dCW max. bis</pre>
     * @return [en] dCW max to, [de] dCW max. bis
     */
    public static String getCaseDeltaCWmaximalTo() {
        return get(CASE_DELTA_CWMAXIMAL_TO).value;
    }

    /**
     * <pre>CASE_DELTA_CWMINIMAL
     * SQLite key: case_deltacwminimal
     * [en] DeltaCW minimal (dCWmin)
     * [de] Delta-CW minimal (dCW min.)</pre>
     * @return [en] DeltaCW minimal (dCWmin), [de] Delta-CW minimal (dCW min.)
     */
    public static String getCaseDeltaCWminimal() {
        return get(CASE_DELTA_CWMINIMAL).value;
    }

    public static Translation getCaseDeltaCWminimalObj() {
        return get(CASE_DELTA_CWMINIMAL);
    }

    /**
     * <pre>CASE_DELTA_CWMINIMAL_FROM
     * SQLite key: case_deltacwminimal_from
     * [en] dCWmin from
     * [de] dCW min. von</pre>
     * @return [en] dCWmin from, [de] dCW min. von
     */
    public static String getCaseDeltaCWminimalFrom() {
        return get(CASE_DELTA_CWMINIMAL_FROM).value;
    }

    /**
     * <pre>CASE_DELTA_CWMINIMAL_TO
     * SQLite key: case_deltacwminimal_to
     * [en] dCWmin to
     * [de] dCW min. bis</pre>
     * @return [en] dCWmin to, [de] dCW min. bis
     */
    public static String getCaseDeltaCWminimalTo() {
        return get(CASE_DELTA_CWMINIMAL_TO).value;
    }

    /**
     * <pre>CASE_DELTA_REVENUE_MAXIMAL
     * SQLite key: case_deltarevenuemaximal
     * [en] Delta-Revenue maximal (dRevenue max.)
     * [de] Delta-Erlös maximal (dErlös max.)</pre>
     * @return [en] Delta-Revenue maximal (dRevenue max.), [de] Delta-Erlös maximal (dErlös max.)
     */
    public static String getCaseDeltaRevenueMaximal() {
        return get(CASE_DELTA_REVENUE_MAXIMAL).value;
    }

    public static Translation getCaseDeltaRevenueMaximalObj() {
        return get(CASE_DELTA_REVENUE_MAXIMAL);
    }

    /**
     * <pre>CASE_DELTA_REVENUE_MAXIMAL_FROM
     * SQLite key: case_deltarevenuemaximal_from
     * [en] dRevenue max. from
     * [de] dErlös max. von</pre>
     * @return [en] dRevenue max. from, [de] dErlös max. von
     */
    public static String getCaseDeltaRevenueMaximalFrom() {
        return get(CASE_DELTA_REVENUE_MAXIMAL_FROM).value;
    }

    /**
     * <pre>CASE_DELTA_REVENUE_MAXIMAL_TO
     * SQLite key: case_deltarevenuemaximal_to
     * [en] dRevenue max. to
     * [de] dErlös max. bis</pre>
     * @return [en] dRevenue max. to, [de] dErlös max. bis
     */
    public static String getCaseDeltaRevenueMaximalTo() {
        return get(CASE_DELTA_REVENUE_MAXIMAL_TO).value;
    }

    /**
     * <pre>CASE_DELTA_REVENUE_MINIMAL
     * SQLite key: case_deltarevenueminimal
     * [en] Delta-Revenue minimal (dRevenue min.)
     * [de] Delta-Erlös minimal (dErlös min.)</pre>
     * @return [en] Delta-Revenue minimal (dRevenue min.), [de] Delta-Erlös minimal (dErlös min.)
     */
    public static String getCaseDeltaRevenueMinimal() {
        return get(CASE_DELTA_REVENUE_MINIMAL).value;
    }

    public static Translation getCaseDeltaRevenueMinimalObj() {
        return get(CASE_DELTA_REVENUE_MINIMAL);
    }

    /**
     * <pre>CASE_DELTA_REVENUE_MINIMAL_FROM
     * SQLite key: case_deltarevenueminimal_from
     * [en] dRevenue min. from
     * [de] dErlös min. von</pre>
     * @return [en] dRevenue min. from, [de] dErlös min. von
     */
    public static String getCaseDeltaRevenueMinimalFrom() {
        return get(CASE_DELTA_REVENUE_MINIMAL_FROM).value;
    }

    /**
     * <pre>CASE_DELTA_REVENUE_MINIMAL_TO
     * SQLite key: case_deltarevenueminimal_to
     * [en] dRevenue min. to
     * [de] dErlös min. bis</pre>
     * @return [en] dRevenue min. to, [de] dErlös min. bis
     */
    public static String getCaseDeltaRevenueMinimalTo() {
        return get(CASE_DELTA_REVENUE_MINIMAL_TO).value;
    }

    /**
     * <pre>CASE_DETAILS
     * SQLite key: casedetails
     * [en] Case Details
     * [de] Fall Einzelheiten</pre>
     * @return [en] Case Details, [de] Fall Einzelheiten
     */
    public static String getCaseDetails() {
        return get(CASE_DETAILS).value;
    }

    /**
     * <pre>CASE_DETAILS_CANCEL_REASON_CASE_MERGE
     * SQLite key: casedetailscancelreason_casemerge
     * [en] Case merging
     * [de] Fallzusammenführung</pre>
     * ATTENTION this value ('Case merging') seems to be also defined under the key CASE_MERGING! this value ('Case merging') seems to be also defined under the key RISK_AREA_CASE_MERGE!
     * @return [en] Case merging, [de] Fallzusammenführung
     */
    public static String getCaseDetailsCancelReasonCaseMerge() {
        return get(CASE_DETAILS_CANCEL_REASON_CASE_MERGE).value;
    }

    /**
     * <pre>CASE_DETAILS_CANCEL_REASON_KIS
     * SQLite key: casedetailscancelreason_kis
     * [en] KIS
     * [de] KIS</pre>
     * @return [en] KIS, [de] KIS
     */
    public static String getCaseDetailsCancelReasonKis() {
        return get(CASE_DETAILS_CANCEL_REASON_KIS).value;
    }

    /**
     * <pre>CASE_DETAILS_CANCEL_REASON_USER
     * SQLite key: casedetailscancelreason_user
     * [en] manual cancellation
     * [de] manuelle Stornierung</pre>
     * @return [en] manual cancellation, [de] manuelle Stornierung
     */
    public static String getCaseDetailsCancelReasonUser() {
        return get(CASE_DETAILS_CANCEL_REASON_USER).value;
    }

    /**
     * <pre>CASE_DETAILS_DATE_1
     * SQLite key: casedetails_date1
     * [en] Date 1
     * [de] Datum 1</pre>
     * @return [en] Date 1, [de] Datum 1
     */
    public static String getCaseDetailsDate1() {
        return get(CASE_DETAILS_DATE_1).value;
    }

    /**
     * <pre>CASE_DETAILS_DATE_2
     * SQLite key: casedetails_date2
     * [en] Date 2
     * [de] Datum 2</pre>
     * @return [en] Date 2, [de] Datum 2
     */
    public static String getCaseDetailsDate2() {
        return get(CASE_DETAILS_DATE_2).value;
    }

    /**
     * <pre>CASE_DETAILS_DATE_3
     * SQLite key: casedetails_date3
     * [en] Date 3
     * [de] Datum 3</pre>
     * @return [en] Date 3, [de] Datum 3
     */
    public static String getCaseDetailsDate3() {
        return get(CASE_DETAILS_DATE_3).value;
    }

    /**
     * <pre>CASE_DETAILS_DATE_4
     * SQLite key: casedetails_date4
     * [en] Date 4
     * [de] Datum 4</pre>
     * @return [en] Date 4, [de] Datum 4
     */
    public static String getCaseDetailsDate4() {
        return get(CASE_DETAILS_DATE_4).value;
    }

    /**
     * <pre>CASE_DETAILS_DATE_5
     * SQLite key: casedetails_date5
     * [en] Date 5
     * [de] Datum 5</pre>
     * @return [en] Date 5, [de] Datum 5
     */
    public static String getCaseDetailsDate5() {
        return get(CASE_DETAILS_DATE_5).value;
    }

    /**
     * <pre>CASE_DETAILS_DOUBLE_1
     * SQLite key: casedetails_double1
     * [en] Double 1
     * [de] Gleitkommazahl 1</pre>
     * @return [en] Double 1, [de] Gleitkommazahl 1
     */
    public static String getCaseDetailsDouble1() {
        return get(CASE_DETAILS_DOUBLE_1).value;
    }

    /**
     * <pre>CASE_DETAILS_DOUBLE_2
     * SQLite key: casedetails_double2
     * [en] Double 2
     * [de] Gleitkommazahl 2</pre>
     * @return [en] Double 2, [de] Gleitkommazahl 2
     */
    public static String getCaseDetailsDouble2() {
        return get(CASE_DETAILS_DOUBLE_2).value;
    }

    /**
     * <pre>CASE_DETAILS_DOUBLE_3
     * SQLite key: casedetails_double3
     * [en] Double 3
     * [de] Gleitkommazahl 3</pre>
     * @return [en] Double 3, [de] Gleitkommazahl 3
     */
    public static String getCaseDetailsDouble3() {
        return get(CASE_DETAILS_DOUBLE_3).value;
    }

    /**
     * <pre>CASE_DETAILS_DOUBLE_4
     * SQLite key: casedetails_double4
     * [en] Double 4
     * [de] Gleitkommazahl 4</pre>
     * @return [en] Double 4, [de] Gleitkommazahl 4
     */
    public static String getCaseDetailsDouble4() {
        return get(CASE_DETAILS_DOUBLE_4).value;
    }

    /**
     * <pre>CASE_DETAILS_DOUBLE_5
     * SQLite key: casedetails_double5
     * [en] Double 5
     * [de] Gleitkommazahl 5</pre>
     * @return [en] Double 5, [de] Gleitkommazahl 5
     */
    public static String getCaseDetailsDouble5() {
        return get(CASE_DETAILS_DOUBLE_5).value;
    }

    /**
     * <pre>CASE_DETAILS_INT_1
     * SQLite key: casedetails_int1
     * [en] Int 1
     * [de] Int 1</pre>
     * @return [en] Int 1, [de] Int 1
     */
    public static String getCaseDetailsInt1() {
        return get(CASE_DETAILS_INT_1).value;
    }

    /**
     * <pre>CASE_DETAILS_INT_10
     * SQLite key: casedetails_int10
     * [en] Int 10
     * [de] Int 10</pre>
     * @return [en] Int 10, [de] Int 10
     */
    public static String getCaseDetailsInt10() {
        return get(CASE_DETAILS_INT_10).value;
    }

    /**
     * <pre>CASE_DETAILS_INT_2
     * SQLite key: casedetails_int2
     * [en] Int 2
     * [de] Int 2</pre>
     * @return [en] Int 2, [de] Int 2
     */
    public static String getCaseDetailsInt2() {
        return get(CASE_DETAILS_INT_2).value;
    }

    /**
     * <pre>CASE_DETAILS_INT_3
     * SQLite key: casedetails_int3
     * [en] Int 3
     * [de] Int 3</pre>
     * @return [en] Int 3, [de] Int 3
     */
    public static String getCaseDetailsInt3() {
        return get(CASE_DETAILS_INT_3).value;
    }

    /**
     * <pre>CASE_DETAILS_INT_4
     * SQLite key: casedetails_int4
     * [en] Int 4
     * [de] Int 4</pre>
     * @return [en] Int 4, [de] Int 4
     */
    public static String getCaseDetailsInt4() {
        return get(CASE_DETAILS_INT_4).value;
    }

    /**
     * <pre>CASE_DETAILS_INT_5
     * SQLite key: casedetails_int5
     * [en] Int 5
     * [de] Int 5</pre>
     * @return [en] Int 5, [de] Int 5
     */
    public static String getCaseDetailsInt5() {
        return get(CASE_DETAILS_INT_5).value;
    }

    /**
     * <pre>CASE_DETAILS_INT_6
     * SQLite key: casedetails_int6
     * [en] Int 6
     * [de] Int 6</pre>
     * @return [en] Int 6, [de] Int 6
     */
    public static String getCaseDetailsInt6() {
        return get(CASE_DETAILS_INT_6).value;
    }

    /**
     * <pre>CASE_DETAILS_INT_7
     * SQLite key: casedetails_int7
     * [en] Int 7
     * [de] Int 7</pre>
     * @return [en] Int 7, [de] Int 7
     */
    public static String getCaseDetailsInt7() {
        return get(CASE_DETAILS_INT_7).value;
    }

    /**
     * <pre>CASE_DETAILS_INT_8
     * SQLite key: casedetails_int8
     * [en] Int 8
     * [de] Int 8</pre>
     * @return [en] Int 8, [de] Int 8
     */
    public static String getCaseDetailsInt8() {
        return get(CASE_DETAILS_INT_8).value;
    }

    /**
     * <pre>CASE_DETAILS_INT_9
     * SQLite key: casedetails_int9
     * [en] Int 9
     * [de] Int 9</pre>
     * @return [en] Int 9, [de] Int 9
     */
    public static String getCaseDetailsInt9() {
        return get(CASE_DETAILS_INT_9).value;
    }

    /**
     * <pre>CASE_DETAILS_STRING_1
     * SQLite key: casedetails_string1
     * [en] String 1
     * [de] String 1</pre>
     * @return [en] String 1, [de] String 1
     */
    public static String getCaseDetailsString1() {
        return get(CASE_DETAILS_STRING_1).value;
    }

    /**
     * <pre>CASE_DETAILS_STRING_10
     * SQLite key: casedetails_string10
     * [en] String 10
     * [de] String 10</pre>
     * @return [en] String 10, [de] String 10
     */
    public static String getCaseDetailsString10() {
        return get(CASE_DETAILS_STRING_10).value;
    }

    /**
     * <pre>CASE_DETAILS_STRING_2
     * SQLite key: casedetails_string2
     * [en] String 2
     * [de] String 2</pre>
     * @return [en] String 2, [de] String 2
     */
    public static String getCaseDetailsString2() {
        return get(CASE_DETAILS_STRING_2).value;
    }

    /**
     * <pre>CASE_DETAILS_STRING_3
     * SQLite key: casedetails_string3
     * [en] String 3
     * [de] String 3</pre>
     * @return [en] String 3, [de] String 3
     */
    public static String getCaseDetailsString3() {
        return get(CASE_DETAILS_STRING_3).value;
    }

    /**
     * <pre>CASE_DETAILS_STRING_4
     * SQLite key: casedetails_string4
     * [en] String 4
     * [de] String 4</pre>
     * @return [en] String 4, [de] String 4
     */
    public static String getCaseDetailsString4() {
        return get(CASE_DETAILS_STRING_4).value;
    }

    /**
     * <pre>CASE_DETAILS_STRING_5
     * SQLite key: casedetails_string5
     * [en] String 5
     * [de] String 5</pre>
     * @return [en] String 5, [de] String 5
     */
    public static String getCaseDetailsString5() {
        return get(CASE_DETAILS_STRING_5).value;
    }

    /**
     * <pre>CASE_DETAILS_STRING_6
     * SQLite key: casedetails_string6
     * [en] String 6
     * [de] String 6</pre>
     * @return [en] String 6, [de] String 6
     */
    public static String getCaseDetailsString6() {
        return get(CASE_DETAILS_STRING_6).value;
    }

    /**
     * <pre>CASE_DETAILS_STRING_7
     * SQLite key: casedetails_string7
     * [en] String 7
     * [de] String 7</pre>
     * @return [en] String 7, [de] String 7
     */
    public static String getCaseDetailsString7() {
        return get(CASE_DETAILS_STRING_7).value;
    }

    /**
     * <pre>CASE_DETAILS_STRING_8
     * SQLite key: casedetails_string8
     * [en] String 8
     * [de] String 8</pre>
     * @return [en] String 8, [de] String 8
     */
    public static String getCaseDetailsString8() {
        return get(CASE_DETAILS_STRING_8).value;
    }

    /**
     * <pre>CASE_DETAILS_STRING_9
     * SQLite key: casedetails_string9
     * [en] String 9
     * [de] String 9</pre>
     * @return [en] String 9, [de] String 9
     */
    public static String getCaseDetailsString9() {
        return get(CASE_DETAILS_STRING_9).value;
    }

    /**
     * <pre>CASE_DOES_NOT_EXIST
     * SQLite key: casedoesnotexist
     * [en] Case does not exist
     * [de] Der Fall wurde nicht gefunden</pre>
     * @return [en] Case does not exist, [de] Der Fall wurde nicht gefunden
     */
    public static String getCaseDoesNotExist() {
        return get(CASE_DOES_NOT_EXIST).value;
    }

    /**
     * <pre>CASE_DOES_NOT_EXIST_WITH_REASON
     * SQLite key: casedoesnotexistwithreason
     * [en] Case with ID {0} does not exist. Maybe this case was already deleted by another user meantime.
     * [de] Der Fall mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.</pre>
     * @param pParams placeholder replacements
     * @return [en] Case with ID {0} does not exist. Maybe this case was already deleted by another user meantime., [de] Der Fall mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.
     */
    public static String getCaseDoesNotExistWithReason(final Object... pParams) {
        return get(CASE_DOES_NOT_EXIST_WITH_REASON, pParams).value;
    }

    /**
     * <pre>CASE_FILE_FINALISATION
     * SQLite key: casefilefinalisation
     * [en] Case File Finalisation
     * [de] Fallabschluss</pre>
     * @return [en] Case File Finalisation, [de] Fallabschluss
     */
    public static String getCaseFileFinalisation() {
        return get(CASE_FILE_FINALISATION).value;
    }

    /**
     * <pre>CASE_IS_LOCKED
     * SQLite key: caseislocked
     * [en] Case {0} was already opened by {1} since {2}
     * [de] Der Fall {0} wird bereits von {1} seit {2} Uhr bearbeitet</pre>
     * @param pParams placeholder replacements
     * @return [en] Case {0} was already opened by {1} since {2}, [de] Der Fall {0} wird bereits von {1} seit {2} Uhr bearbeitet
     */
    public static String getCaseIsLocked(final Object... pParams) {
        return get(CASE_IS_LOCKED, pParams).value;
    }

    /**
     * <pre>CASE_LOCKED
     * SQLite key: caselocked
     * [en] Locked (L)
     * [de] Gesperrt (G)</pre>
     * @return [en] Locked (L), [de] Gesperrt (G)
     */
    public static String getCaseLocked() {
        return get(CASE_LOCKED).value;
    }

    public static Translation getCaseLockedObj() {
        return get(CASE_LOCKED);
    }

    /**
     * <pre>CASE_MANAGEMENT
     * SQLite key: casemanagement
     * [en] Case Management
     * [de] Fall Management</pre>
     * @return [en] Case Management, [de] Fall Management
     */
    public static String getCaseManagement() {
        return get(CASE_MANAGEMENT).value;
    }

    /**
     * <pre>CASE_MANAGEMENT_WARNING_CHANGE_LOCALISATION
     * SQLite key: casemanagement_warning_changelocalisation
     * [en] Changing the localisation will result in the creation of an new Icd! Are you sure?
     * [de] Das Ändern der Lokalisation führt zu der Erzeugung einer neuen ICD! Sind Sie sich sicher?</pre>
     * @return [en] Changing the localisation will result in the creation of an new Icd! Are you sure?, [de] Das Ändern der Lokalisation führt zu der Erzeugung einer neuen ICD! Sind Sie sich sicher?
     */
    public static String getCaseManagementWarningChangeLocalisation() {
        return get(CASE_MANAGEMENT_WARNING_CHANGE_LOCALISATION).value;
    }

    /**
     * <pre>CASE_MANAGEMENT_WARNING_SELECT_DEPARTMENT
     * SQLite key: casemanagement_warning_selectdepartment
     * [en] Choose a Department!
     * [de] Wählen Sie eine Fachabteilung/(Station)!</pre>
     * @return [en] Choose a Department!, [de] Wählen Sie eine Fachabteilung/(Station)!
     */
    public static String getCaseManagementWarningSelectDepartment() {
        return get(CASE_MANAGEMENT_WARNING_SELECT_DEPARTMENT).value;
    }

    /**
     * <pre>CASE_MERGE_MATH_REV_MERG_CASE
     * SQLite key: case_merge_math_revmergcase
     * [en] Revenue merged case
     * [de] Erlös Fallzusammenführung</pre>
     * @return [en] Revenue merged case, [de] Erlös Fallzusammenführung
     */
    public static String getCaseMergeMathRevMergCase() {
        return get(CASE_MERGE_MATH_REV_MERG_CASE).value;
    }

    /**
     * <pre>CASE_MERGE_MATH_REV_SUM_ORG_CASES
     * SQLite key: case_merge_math_revsumorgcases
     * [en] Sum revenue original Cases
     * [de] Summe Erlöse Originalfälle</pre>
     * @return [en] Sum revenue original Cases, [de] Summe Erlöse Originalfälle
     */
    public static String getCaseMergeMathRevSumOrgCases() {
        return get(CASE_MERGE_MATH_REV_SUM_ORG_CASES).value;
    }

    /**
     * <pre>CASE_MERGE_TAB_SECTION_CASE_DATA
     * SQLite key: case_merge_tab_section_casedata
     * [en] Overview case data
     * [de] Übersicht Falldaten</pre>
     * @return [en] Overview case data, [de] Übersicht Falldaten
     */
    public static String getCaseMergeTabSectionCaseData() {
        return get(CASE_MERGE_TAB_SECTION_CASE_DATA).value;
    }

    /**
     * <pre>CASE_MERGE_TAB_SECTION_DETECTED_REASONS
     * SQLite key: case_merge_tab_section_detectedreasons
     * [en] Detected reasons
     * [de] Ermittelte Gründe</pre>
     * @return [en] Detected reasons, [de] Ermittelte Gründe
     */
    public static String getCaseMergeTabSectionDetectedReasons() {
        return get(CASE_MERGE_TAB_SECTION_DETECTED_REASONS).value;
    }

    /**
     * <pre>CASE_MERGING
     * SQLite key: case_merging
     * [en] Case merging
     * [de] Fallzusammenführung</pre>
     * ATTENTION this value ('Case merging') seems to be also defined under the key CASE_DETAILS_CANCEL_REASON_CASE_MERGE! this value ('Case merging') seems to be also defined under the key RISK_AREA_CASE_MERGE!
     * @return [en] Case merging, [de] Fallzusammenführung
     */
    public static String getCaseMerging() {
        return get(CASE_MERGING).value;
    }

    /**
     * <pre>CASE_MERGING_CASE
     * SQLite key: case_merging_case
     * [en] Merged Case (Mrg. Case)
     * [de] Zusammengeführter Fall (Zusammengef. Fall)</pre>
     * @return [en] Merged Case (Mrg. Case), [de] Zusammengeführter Fall (Zusammengef. Fall)
     */
    public static String getCaseMergingCase() {
        return get(CASE_MERGING_CASE).value;
    }

    public static Translation getCaseMergingCaseObj() {
        return get(CASE_MERGING_CASE);
    }

    /**
     * <pre>CASE_MERGING_CASE_LEADING
     * SQLite key: case_merging_case_leading
     * [en] Leading case
     * [de] Führender Fall</pre>
     * @return [en] Leading case, [de] Führender Fall
     */
    public static String getCaseMergingCaseLeading() {
        return get(CASE_MERGING_CASE_LEADING).value;
    }

    /**
     * <pre>CASE_MERGING_CASE_ORGINAL
     * SQLite key: case_merging_case_orginal
     * [en] Original Case (Org.)
     * [de] Original Fall (Org.)</pre>
     * @return [en] Original Case (Org.), [de] Original Fall (Org.)
     */
    public static String getCaseMergingCaseOrginal() {
        return get(CASE_MERGING_CASE_ORGINAL).value;
    }

    public static Translation getCaseMergingCaseOrginalObj() {
        return get(CASE_MERGING_CASE_ORGINAL);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_EIGHT_DRG
     * SQLite key: case_merging_condition_eight_drg
     * [en] Readmission via complication (RA via complication)
     * [de] Wiederaufnahme wegen Komplikation (WA wg. Komplikation)</pre>
     * @return [en] Readmission via complication (RA via complication), [de] Wiederaufnahme wegen Komplikation (WA wg. Komplikation)
     */
    public static String getCaseMergingConditionEightDrg() {
        return get(CASE_MERGING_CONDITION_EIGHT_DRG).value;
    }

    public static Translation getCaseMergingConditionEightDrgObj() {
        return get(CASE_MERGING_CONDITION_EIGHT_DRG);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_EIGHT_PEPP
     * SQLite key: case_merging_condition_eight_pepp
     * [en] 1.Fall letztes Jahr vor Umstieg (1.Fall letztes Jahr vor Umstieg)
     * [de] 1.Fall letztes Jahr vor Umstieg (1.Fall letztes Jahr vor Umstieg)</pre>
     * @return [en] 1.Fall letztes Jahr vor Umstieg (1.Fall letztes Jahr vor Umstieg), [de] 1.Fall letztes Jahr vor Umstieg (1.Fall letztes Jahr vor Umstieg)
     */
    public static String getCaseMergingConditionEightPepp() {
        return get(CASE_MERGING_CONDITION_EIGHT_PEPP).value;
    }

    public static Translation getCaseMergingConditionEightPeppObj() {
        return get(CASE_MERGING_CONDITION_EIGHT_PEPP);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_FIVE_DRG
     * SQLite key: case_merging_condition_five_drg
     * [en] First DRG Partition  M or A (Part. M or A)
     * [de] Erste DRG Partition M oder A (Part. M oder A)</pre>
     * @return [en] First DRG Partition  M or A (Part. M or A), [de] Erste DRG Partition M oder A (Part. M oder A)
     */
    public static String getCaseMergingConditionFiveDrg() {
        return get(CASE_MERGING_CONDITION_FIVE_DRG).value;
    }

    public static Translation getCaseMergingConditionFiveDrgObj() {
        return get(CASE_MERGING_CONDITION_FIVE_DRG);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_FIVE_PEPP
     * SQLite key: case_merging_condition_five_pepp
     * [en] Both same PEPP (Both same PEPP)
     * [de] Beide in bewerteter PEPP (Beide in bewert. PEPP)</pre>
     * @return [en] Both same PEPP (Both same PEPP), [de] Beide in bewerteter PEPP (Beide in bewert. PEPP)
     */
    public static String getCaseMergingConditionFivePepp() {
        return get(CASE_MERGING_CONDITION_FIVE_PEPP).value;
    }

    public static Translation getCaseMergingConditionFivePeppObj() {
        return get(CASE_MERGING_CONDITION_FIVE_PEPP);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_FOUR_DRG
     * SQLite key: case_merging_condition_four_drg
     * [en] Same MDC**Same MDC
     * [de] Gleiche MDC (Gleiche MDC)</pre>
     * @return [en] Same MDC**Same MDC, [de] Gleiche MDC (Gleiche MDC)
     */
    public static String getCaseMergingConditionFourDrg() {
        return get(CASE_MERGING_CONDITION_FOUR_DRG).value;
    }

    public static Translation getCaseMergingConditionFourDrgObj() {
        return get(CASE_MERGING_CONDITION_FOUR_DRG);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_FOUR_PEPP
     * SQLite key: case_merging_condition_four_pepp
     * [en] Same SK (Same SK)
     * [de] Gleiche SK (Gleiche SK)</pre>
     * @return [en] Same SK (Same SK), [de] Gleiche SK (Gleiche SK)
     */
    public static String getCaseMergingConditionFourPepp() {
        return get(CASE_MERGING_CONDITION_FOUR_PEPP).value;
    }

    public static Translation getCaseMergingConditionFourPeppObj() {
        return get(CASE_MERGING_CONDITION_FOUR_PEPP);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_NINE_DRG
     * SQLite key: case_merging_condition_nine_drg
     * [en] Summary**Summary
     * [de] Zusammenfassung (Zusammenfassung)</pre>
     * @return [en] Summary**Summary, [de] Zusammenfassung (Zusammenfassung)
     */
    public static String getCaseMergingConditionNineDrg() {
        return get(CASE_MERGING_CONDITION_NINE_DRG).value;
    }

    public static Translation getCaseMergingConditionNineDrgObj() {
        return get(CASE_MERGING_CONDITION_NINE_DRG);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_NINE_PEPP
     * SQLite key: case_merging_condition_nine_pepp
     * [en] Summary (Summary)
     * [de] Zusammenfassung (Zusammenfassung)</pre>
     * @return [en] Summary (Summary), [de] Zusammenfassung (Zusammenfassung)
     */
    public static String getCaseMergingConditionNinePepp() {
        return get(CASE_MERGING_CONDITION_NINE_PEPP).value;
    }

    public static Translation getCaseMergingConditionNinePeppObj() {
        return get(CASE_MERGING_CONDITION_NINE_PEPP);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_ONE_DRG
     * SQLite key: case_merging_condition_one_drg
     * [en] Within High (Within High trim point)
     * [de] Innerhalb oberer Grenzverweildauer (Innerhalb OGVD)</pre>
     * @return [en] Within High (Within High trim point), [de] Innerhalb oberer Grenzverweildauer (Innerhalb OGVD)
     */
    public static String getCaseMergingConditionOneDrg() {
        return get(CASE_MERGING_CONDITION_ONE_DRG).value;
    }

    public static Translation getCaseMergingConditionOneDrgObj() {
        return get(CASE_MERGING_CONDITION_ONE_DRG);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_ONE_PEPP
     * SQLite key: case_merging_condition_one_pepp
     * [en] Within 21 Days (Within 21 D.)
     * [de] Innerhalb 21 Tage (Innerhalb 21 T.)</pre>
     * @return [en] Within 21 Days (Within 21 D.), [de] Innerhalb 21 Tage (Innerhalb 21 T.)
     */
    public static String getCaseMergingConditionOnePepp() {
        return get(CASE_MERGING_CONDITION_ONE_PEPP).value;
    }

    public static Translation getCaseMergingConditionOnePeppObj() {
        return get(CASE_MERGING_CONDITION_ONE_PEPP);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_SEVEN_DRG
     * SQLite key: case_merging_condition_seven_drg
     * [en] Catalog-Exception (Cat.-Exception)
     * [de] Katalog-Ausnahme (Kat.-Ausnahme)</pre>
     * @return [en] Catalog-Exception (Cat.-Exception), [de] Katalog-Ausnahme (Kat.-Ausnahme)
     */
    public static String getCaseMergingConditionSevenDrg() {
        return get(CASE_MERGING_CONDITION_SEVEN_DRG).value;
    }

    public static Translation getCaseMergingConditionSevenDrgObj() {
        return get(CASE_MERGING_CONDITION_SEVEN_DRG);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_SEVEN_PEPP
     * SQLite key: case_merging_condition_seven_pepp
     * [en] 1.Fall aus vorletztem Jahr (1.Fall aus vorletztem Jahr)
     * [de] 1.Fall aus vorletztem Jahr (1.Fall aus vorletztem Jahr)</pre>
     * @return [en] 1.Fall aus vorletztem Jahr (1.Fall aus vorletztem Jahr), [de] 1.Fall aus vorletztem Jahr (1.Fall aus vorletztem Jahr)
     */
    public static String getCaseMergingConditionSevenPepp() {
        return get(CASE_MERGING_CONDITION_SEVEN_PEPP).value;
    }

    public static Translation getCaseMergingConditionSevenPeppObj() {
        return get(CASE_MERGING_CONDITION_SEVEN_PEPP);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_SIX_DRG
     * SQLite key: case_merging_condition_six_drg
     * [en] Second DRG Partition O (Second a. Part. O)
     * [de] Zweite DRG Partition O (Zweite a. Part. O)</pre>
     * @return [en] Second DRG Partition O (Second a. Part. O), [de] Zweite DRG Partition O (Zweite a. Part. O)
     */
    public static String getCaseMergingConditionSixDrg() {
        return get(CASE_MERGING_CONDITION_SIX_DRG).value;
    }

    public static Translation getCaseMergingConditionSixDrgObj() {
        return get(CASE_MERGING_CONDITION_SIX_DRG);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_SIX_PEPP
     * SQLite key: case_merging_condition_six_pepp
     * [en] Both day-/fullpatient (Both day-/fullpatient)
     * [de] Beide teil- bzw. vollstationär (Beide teil- bzw. vollstat.)</pre>
     * @return [en] Both day-/fullpatient (Both day-/fullpatient), [de] Beide teil- bzw. vollstationär (Beide teil- bzw. vollstat.)
     */
    public static String getCaseMergingConditionSixPepp() {
        return get(CASE_MERGING_CONDITION_SIX_PEPP).value;
    }

    public static Translation getCaseMergingConditionSixPeppObj() {
        return get(CASE_MERGING_CONDITION_SIX_PEPP);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_TEN_DRG
     * SQLite key: case_merging_condition_ten_drg
     * [en] New case (New case)
     * [de] Neuer Fall (Neuer Fall)</pre>
     * ATTENTION this value ('New case***New case') seems to be also defined under the key CASE_MERGING_CONDITION_TEN_PEPP!
     * @return [en] New case (New case), [de] Neuer Fall (Neuer Fall)
     */
    public static String getCaseMergingConditionTenDrg() {
        return get(CASE_MERGING_CONDITION_TEN_DRG).value;
    }

    public static Translation getCaseMergingConditionTenDrgObj() {
        return get(CASE_MERGING_CONDITION_TEN_DRG);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_TEN_PEPP
     * SQLite key: case_merging_condition_ten_pepp
     * [en] New case (New case)
     * [de] Neuer Fall (Neuer Fall)</pre>
     * ATTENTION this value ('New case***New case') seems to be also defined under the key CASE_MERGING_CONDITION_TEN_DRG!
     * @return [en] New case (New case), [de] Neuer Fall (Neuer Fall)
     */
    public static String getCaseMergingConditionTenPepp() {
        return get(CASE_MERGING_CONDITION_TEN_PEPP).value;
    }

    public static Translation getCaseMergingConditionTenPeppObj() {
        return get(CASE_MERGING_CONDITION_TEN_PEPP);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_THREE_DRG
     * SQLite key: case_merging_condition_three_drg
     * [en] Same ADRG (Same ADRG)
     * [de] Gleiche ADRG (Gleiche ADRG)</pre>
     * @return [en] Same ADRG (Same ADRG), [de] Gleiche ADRG (Gleiche ADRG)
     */
    public static String getCaseMergingConditionThreeDrg() {
        return get(CASE_MERGING_CONDITION_THREE_DRG).value;
    }

    public static Translation getCaseMergingConditionThreeDrgObj() {
        return get(CASE_MERGING_CONDITION_THREE_DRG);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_THREE_PEPP
     * SQLite key: case_merging_condition_three_pepp
     * [en] Same year (Same year)
     * [de] Gleiches Jahr (Gleiches Jahr)</pre>
     * @return [en] Same year (Same year), [de] Gleiches Jahr (Gleiches Jahr)
     */
    public static String getCaseMergingConditionThreePepp() {
        return get(CASE_MERGING_CONDITION_THREE_PEPP).value;
    }

    public static Translation getCaseMergingConditionThreePeppObj() {
        return get(CASE_MERGING_CONDITION_THREE_PEPP);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_TWO_DRG
     * SQLite key: case_merging_condition_two_drg
     * [en] Within 30 Days (Within 30 D.)
     * [de] Innerhalb 30 Tage (Innerhalb 30 T.)</pre>
     * @return [en] Within 30 Days (Within 30 D.), [de] Innerhalb 30 Tage (Innerhalb 30 T.)
     */
    public static String getCaseMergingConditionTwoDrg() {
        return get(CASE_MERGING_CONDITION_TWO_DRG).value;
    }

    public static Translation getCaseMergingConditionTwoDrgObj() {
        return get(CASE_MERGING_CONDITION_TWO_DRG);
    }

    /**
     * <pre>CASE_MERGING_CONDITION_TWO_PEPP
     * SQLite key: case_merging_condition_two_pepp
     * [en] Within 120 Days (Within 120 D.)
     * [de] Innerhalb 120 Tage (Innerhalb 120 T.)</pre>
     * @return [en] Within 120 Days (Within 120 D.), [de] Innerhalb 120 Tage (Innerhalb 120 T.)
     */
    public static String getCaseMergingConditionTwoPepp() {
        return get(CASE_MERGING_CONDITION_TWO_PEPP).value;
    }

    public static Translation getCaseMergingConditionTwoPeppObj() {
        return get(CASE_MERGING_CONDITION_TWO_PEPP);
    }

    /**
     * <pre>CASE_MERGING_DO_MERGE
     * SQLite key: case_merging_do_merge
     * [en] Merge case
     * [de] Fallzusammenführung simulieren</pre>
     * @return [en] Merge case, [de] Fallzusammenführung simulieren
     */
    public static String getCaseMergingDoMerge() {
        return get(CASE_MERGING_DO_MERGE).value;
    }

    /**
     * <pre>CASE_MERGING_DO_MERGE_AND_SAVE
     * SQLite key: case_merging_do_mergeandsave
     * [en] Merge case &amp; save
     * [de] Fall zusammenführen &amp; speichern</pre>
     * @return [en] Merge case {@literal &} save, [de] Fall zusammenführen {@literal &} speichern
     */
    public static String getCaseMergingDoMergeAndSave() {
        return get(CASE_MERGING_DO_MERGE_AND_SAVE).value;
    }

    /**
     * <pre>CASE_MERGING_DO_SAVE
     * SQLite key: case_merging_do_save
     * [en] Save case
     * [de] Fall speichern</pre>
     * @return [en] Save case, [de] Fall speichern
     */
    public static String getCaseMergingDoSave() {
        return get(CASE_MERGING_DO_SAVE).value;
    }

    /**
     * <pre>CASE_MERGING_DO_SAVE_AND_OPEN
     * SQLite key: case_merging_do_saveandopen
     * [en] Save case and open
     * [de] Fall speichern und öffnen</pre>
     * @return [en] Save case and open, [de] Fall speichern und öffnen
     */
    public static String getCaseMergingDoSaveAndOpen() {
        return get(CASE_MERGING_DO_SAVE_AND_OPEN).value;
    }

    /**
     * <pre>CASE_MERGING_ID
     * SQLite key: case_merging_id
     * [en] Merging ID (Mrg. ID)
     * [de] Zusammenführungs ID (Zusf. ID)</pre>
     * @return [en] Merging ID (Mrg. ID), [de] Zusammenführungs ID (Zusf. ID)
     */
    public static String getCaseMergingId() {
        return get(CASE_MERGING_ID).value;
    }

    public static Translation getCaseMergingIdObj() {
        return get(CASE_MERGING_ID);
    }

    /**
     * <pre>CASE_MERGING_JOB_COMPLETED
     * SQLite key: case_merging_job_completed
     * [en] Completed
     * [de] Erfolgreich</pre>
     * ATTENTION this value ('completed') seems to be also defined under the key JOB_STATUS_COMPLETED!
     * @return [en] Completed, [de] Erfolgreich
     */
    public static String getCaseMergingJobCompleted() {
        return get(CASE_MERGING_JOB_COMPLETED).value;
    }

    /**
     * <pre>CASE_MERGING_JOB_FAILED
     * SQLite key: case_merging_job_failed
     * [en] Failed
     * [de] Gescheitert</pre>
     * ATTENTION this value ('Failed') seems to be also defined under the key FAILED! this value ('failed') seems to be also defined under the key JOB_STATUS_FAILED!
     * @return [en] Failed, [de] Gescheitert
     */
    public static String getCaseMergingJobFailed() {
        return get(CASE_MERGING_JOB_FAILED).value;
    }

    /**
     * <pre>CASE_MERGING_JOB_INITIALIZING
     * SQLite key: case_merging_job_initializing
     * [en] Initializing
     * [de] Wird initialisiert</pre>
     * ATTENTION this value ('initializing') seems to be also defined under the key JOB_STAUTS_INITIALIZING!
     * @return [en] Initializing, [de] Wird initialisiert
     */
    public static String getCaseMergingJobInitializing() {
        return get(CASE_MERGING_JOB_INITIALIZING).value;
    }

    /**
     * <pre>CASE_MERGING_JOB_STARTED
     * SQLite key: case_merging_job_started
     * [en] Determine cases to merge
     * [de] Zusammenführbare Fälle werden ermittelt</pre>
     * @return [en] Determine cases to merge, [de] Zusammenführbare Fälle werden ermittelt
     */
    public static String getCaseMergingJobStarted() {
        return get(CASE_MERGING_JOB_STARTED).value;
    }

    /**
     * <pre>CASE_MERGING_JOB_STARTING
     * SQLite key: case_merging_job_starting
     * [en] Starting case merging
     * [de] Fallzusammenführung wird gestartet</pre>
     * @return [en] Starting case merging, [de] Fallzusammenführung wird gestartet
     */
    public static String getCaseMergingJobStarting() {
        return get(CASE_MERGING_JOB_STARTING).value;
    }

    /**
     * <pre>CASE_MERGING_JOB_STOPPED
     * SQLite key: case_merging_job_stopped
     * [en] Stopped
     * [de] Angehalten</pre>
     * ATTENTION this value ('stopped') seems to be also defined under the key JOB_STATUS_STOPPED!
     * @return [en] Stopped, [de] Angehalten
     */
    public static String getCaseMergingJobStopped() {
        return get(CASE_MERGING_JOB_STOPPED).value;
    }

    /**
     * <pre>CASE_MERGING_JOB_STOPPING
     * SQLite key: case_merging_job_stopping
     * [en] Stopping case merging
     * [de] Fallzusammenführung wird beendet</pre>
     * @return [en] Stopping case merging, [de] Fallzusammenführung wird beendet
     */
    public static String getCaseMergingJobStopping() {
        return get(CASE_MERGING_JOB_STOPPING).value;
    }

    /**
     * <pre>CASE_MERGING_START_PROCESS
     * SQLite key: case_merging_start_process
     * [en] Determine cases
     * [de] Fälle ermitteln</pre>
     * @return [en] Determine cases, [de] Fälle ermitteln
     */
    public static String getCaseMergingStartProcess() {
        return get(CASE_MERGING_START_PROCESS).value;
    }

    /**
     * <pre>CASE_MERGING_STOP_PROCESS
     * SQLite key: case_merging_stop_process
     * [en] Stop
     * [de] Stop</pre>
     * @return [en] Stop, [de] Stop
     */
    public static String getCaseMergingStopProcess() {
        return get(CASE_MERGING_STOP_PROCESS).value;
    }

    /**
     * <pre>CASE_MERGING_TABLE_PLACEHOLDER
     * SQLite key: case_merging_table_placeholder
     * [en] No merged cases determined
     * [de] Keine zusammenführbaren Fälle ermittelt</pre>
     * @return [en] No merged cases determined, [de] Keine zusammenführbaren Fälle ermittelt
     */
    public static String getCaseMergingTablePlaceholder() {
        return get(CASE_MERGING_TABLE_PLACEHOLDER).value;
    }

    /**
     * <pre>CASE_MERGING_WARNING_GROUPED
     * SQLite key: case_merging_warning_grouped
     * [en] Apparently, not all cases are grouped with model: {0}!Cases that are not grouped are ignored!Continue?
     * [de] Nicht alle Fälle scheinen mit dem Groupermodel: {0} eine Fallpauschale zu haben!Fälle ohne Fallpauschale werden bei der Ermittlung von zusammenführbaren Fällen ignoriert!Trotzdem fortfahren?</pre>
     * @param pParams placeholder replacements
     * @return [en] Apparently, not all cases are grouped with model: {0}!Cases that are not grouped are ignored!Continue?, [de] Nicht alle Fälle scheinen mit dem Groupermodel: {0} eine Fallpauschale zu haben!Fälle ohne Fallpauschale werden bei der Ermittlung von zusammenführbaren Fällen ignoriert!Trotzdem fortfahren?
     */
    public static String getCaseMergingWarningGrouped(final Object... pParams) {
        return get(CASE_MERGING_WARNING_GROUPED, pParams).value;
    }

    /**
     * <pre>CASE_NUMBER
     * SQLite key: casenumber
     * [en] Case Number (Case Number)
     * [de] Fallnummer (Fallnummer)</pre>
     * @return [en] Case Number (Case Number), [de] Fallnummer (Fallnummer)
     */
    public static String getCaseNumber() {
        return get(CASE_NUMBER).value;
    }

    public static Translation getCaseNumberObj() {
        return get(CASE_NUMBER);
    }

    /**
     * <pre>CASE_NUMERIC_1
     * SQLite key: case_numeric1
     * [de] Zahl 1</pre>
     * @return [de] Zahl 1
     */
    public static String getCaseNumeric1() {
        return get(CASE_NUMERIC_1).value;
    }

    /**
     * <pre>CASE_NUMERIC_10
     * SQLite key: case_numeric10
     * [de] Zahl 10</pre>
     * @return [de] Zahl 10
     */
    public static String getCaseNumeric10() {
        return get(CASE_NUMERIC_10).value;
    }

    /**
     * <pre>CASE_NUMERIC_2
     * SQLite key: case_numeric2
     * [de] Zahl 2</pre>
     * @return [de] Zahl 2
     */
    public static String getCaseNumeric2() {
        return get(CASE_NUMERIC_2).value;
    }

    /**
     * <pre>CASE_NUMERIC_3
     * SQLite key: case_numeric3
     * [de] Zahl 3</pre>
     * @return [de] Zahl 3
     */
    public static String getCaseNumeric3() {
        return get(CASE_NUMERIC_3).value;
    }

    /**
     * <pre>CASE_NUMERIC_4
     * SQLite key: case_numeric4
     * [de] Zahl 4</pre>
     * @return [de] Zahl 4
     */
    public static String getCaseNumeric4() {
        return get(CASE_NUMERIC_4).value;
    }

    /**
     * <pre>CASE_NUMERIC_5
     * SQLite key: case_numeric5
     * [de] Zahl 5</pre>
     * @return [de] Zahl 5
     */
    public static String getCaseNumeric5() {
        return get(CASE_NUMERIC_5).value;
    }

    /**
     * <pre>CASE_NUMERIC_6
     * SQLite key: case_numeric6
     * [de] Zahl 6</pre>
     * @return [de] Zahl 6
     */
    public static String getCaseNumeric6() {
        return get(CASE_NUMERIC_6).value;
    }

    /**
     * <pre>CASE_NUMERIC_7
     * SQLite key: case_numeric7
     * [de] Zahl 7</pre>
     * @return [de] Zahl 7
     */
    public static String getCaseNumeric7() {
        return get(CASE_NUMERIC_7).value;
    }

    /**
     * <pre>CASE_NUMERIC_8
     * SQLite key: case_numeric8
     * [de] Zahl 8</pre>
     * @return [de] Zahl 8
     */
    public static String getCaseNumeric8() {
        return get(CASE_NUMERIC_8).value;
    }

    /**
     * <pre>CASE_NUMERIC_9
     * SQLite key: case_numeric9
     * [de] Zahl 9</pre>
     * @return [de] Zahl 9
     */
    public static String getCaseNumeric9() {
        return get(CASE_NUMERIC_9).value;
    }

    /**
     * <pre>CASE_OPEN_PROCESS
     * SQLite key: case_open_process
     * [en] Open process
     * [de] Vorgang öffnen</pre>
     * @return [en] Open process, [de] Vorgang öffnen
     */
    public static String getCaseOpenProcess() {
        return get(CASE_OPEN_PROCESS).value;
    }

    /**
     * <pre>CASE_REMOVED_TOOLTIP
     * SQLite key: case_removed_tooltip
     * [en] This case is Removed
     * [de] Dieser Fall wird entfernt</pre>
     * @return [en] This case is Removed, [de] Dieser Fall wird entfernt
     */
    public static String getCaseRemovedTooltip() {
        return get(CASE_REMOVED_TOOLTIP).value;
    }

    /**
     * <pre>CASE_RESOLVE_CCL
     * SQLite key: caseresolve_ccl
     * [en] CCL
     * [de] CCL</pre>
     * @return [en] CCL, [de] CCL
     */
    public static String getCaseResolveCCL() {
        return get(CASE_RESOLVE_CCL).value;
    }

    /**
     * <pre>CASE_RESOLVE_CW
     * SQLite key: caseresolve_cw
     * [en] CW
     * [de] CW</pre>
     * ATTENTION this value ('CW') seems to be also defined under the key CW!
     * @return [en] CW, [de] CW
     */
    public static String getCaseResolveCW() {
        return get(CASE_RESOLVE_CW).value;
    }

    /**
     * <pre>CASE_RESOLVE_CW_EFF
     * SQLite key: caseresolve_cw_eff
     * [en] eff. CW
     * [de] eff. CW</pre>
     * @return [en] eff. CW, [de] eff. CW
     */
    public static String getCaseResolveCWEff() {
        return get(CASE_RESOLVE_CW_EFF).value;
    }

    /**
     * <pre>CASE_RESOLVE_CWCATALOG
     * SQLite key: caseresolve_cwcatalog
     * [en] CW-Catalog
     * [de] CW-Katalog</pre>
     * @return [en] CW-Catalog, [de] CW-Katalog
     */
    public static String getCaseResolveCWCatalog() {
        return get(CASE_RESOLVE_CWCATALOG).value;
    }

    /**
     * <pre>CASE_RESOLVE_DATE
     * SQLite key: caseresolve_date
     * [en] Date
     * [de] Datum</pre>
     * ATTENTION this value ('Date') seems to be also defined under the key PROCESS_DATE!
     * @return [en] Date, [de] Datum
     */
    public static String getCaseResolveDate() {
        return get(CASE_RESOLVE_DATE).value;
    }

    /**
     * <pre>CASE_RESOLVE_DRG
     * SQLite key: caseresolve_drg
     * [en] DRG
     * [de] DRG</pre>
     * ATTENTION this value ('DRG') seems to be also defined under the key CASE_TYPE_DRG! this value ('DRG') seems to be also defined under the key DRG! this value ('DRG') seems to be also defined under the key DRG_SHORTCUT! this value ('DRG') seems to be also defined under the key FEE_GROUP_DRG! this value ('DRG') seems to be also defined under the key ICD_TYPE_DRG! this value ('DRG') seems to be also defined under the key RULES_DRG!
     * @return [en] DRG, [de] DRG
     */
    public static String getCaseResolveDRG() {
        return get(CASE_RESOLVE_DRG).value;
    }

    /**
     * <pre>CASE_RESOLVE_ESTIMATED_RULES
     * SQLite key: caseresolve_estimatedrules
     * [en] Estimated Rules
     * [de] Prüfregelanschläge</pre>
     * @return [en] Estimated Rules, [de] Prüfregelanschläge
     */
    public static String getCaseResolveEstimatedRules() {
        return get(CASE_RESOLVE_ESTIMATED_RULES).value;
    }

    /**
     * <pre>CASE_RESOLVE_GROUP_RESULT_CODE
     * SQLite key: caseresolve_groupresultcode
     * [en] R
     * [de] R</pre>
     * @return [en] R, [de] R
     */
    public static String getCaseResolveGroupResultCode() {
        return get(CASE_RESOLVE_GROUP_RESULT_CODE).value;
    }

    /**
     * <pre>CASE_RESOLVE_ICD
     * SQLite key: caseresolve_icd
     * [en] ICD
     * [de] ICD</pre>
     * @return [en] ICD, [de] ICD
     */
    public static String getCaseResolveICD() {
        return get(CASE_RESOLVE_ICD).value;
    }

    /**
     * <pre>CASE_RESOLVE_ICD_TEXT
     * SQLite key: caseresolve_icd-text
     * [en] ICD-Text
     * [de] ICD-Text</pre>
     * @return [en] ICD-Text, [de] ICD-Text
     */
    public static String getCaseResolveICD_Text() {
        return get(CASE_RESOLVE_ICD_TEXT).value;
    }

    /**
     * <pre>CASE_RESOLVE_ICD_UNCORRECTED_CW
     * SQLite key: caseresolve_icd_uncorrectedcw
     * [en] unc. CW
     * [de] unkorr. CW</pre>
     * @return [en] unc. CW, [de] unkorr. CW
     */
    public static String getCaseResolveICDUncorrectedCW() {
        return get(CASE_RESOLVE_ICD_UNCORRECTED_CW).value;
    }

    /**
     * <pre>CASE_RESOLVE_KIND
     * SQLite key: caseresolve_kind
     * [en] Kind
     * [de] Art</pre>
     * ATTENTION this value ('Kind') seems to be also defined under the key BILL_KIND! this value ('Kind') seems to be also defined under the key CASEFEE_KIND!
     * @return [en] Kind, [de] Art
     */
    public static String getCaseResolveKind() {
        return get(CASE_RESOLVE_KIND).value;
    }

    /**
     * <pre>CASE_RESOLVE_LOCALISATION
     * SQLite key: caseresolve_localisation
     * [en] Localisation (Loc.)
     * [de] Lokalisation (Lok.)</pre>
     * @return [en] Localisation (Loc.), [de] Lokalisation (Lok.)
     */
    public static String getCaseResolveLocalisation() {
        return get(CASE_RESOLVE_LOCALISATION).value;
    }

    public static Translation getCaseResolveLocalisationObj() {
        return get(CASE_RESOLVE_LOCALISATION);
    }

    /**
     * <pre>CASE_RESOLVE_MD
     * SQLite key: caseresolve_md
     * [en] MD
     * [de] HD</pre>
     * ATTENTION this value ('MD') seems to be also defined under the key DEPARTMENT_TYPE_MAIN_DEPARTMENT! this value ('MD') seems to be also defined under the key REQUEST_TYPE_MDK!
     * @return [en] MD, [de] HD
     */
    public static String getCaseResolveMd() {
        return get(CASE_RESOLVE_MD).value;
    }

    /**
     * <pre>CASE_RESOLVE_OPS
     * SQLite key: caseresolve_ops
     * [en] OPS
     * [de] OPS</pre>
     * ATTENTION this value ('OPS') seems to be also defined under the key RULES_CHECKRESULT_TYP_OPS!
     * @return [en] OPS, [de] OPS
     */
    public static String getCaseResolveOPS() {
        return get(CASE_RESOLVE_OPS).value;
    }

    /**
     * <pre>CASE_RESOLVE_OPS_TEXT
     * SQLite key: caseresolve_ops-text
     * [en] OPS-Text
     * [de] OPS-Text</pre>
     * @return [en] OPS-Text, [de] OPS-Text
     */
    public static String getCaseResolveOPS_TEXT() {
        return get(CASE_RESOLVE_OPS_TEXT).value;
    }

    /**
     * <pre>CASE_RESOLVE_RULES
     * SQLite key: caseresolve_rules
     * [en] Rules
     * [de] Regeln</pre>
     * @return [en] Rules, [de] Regeln
     */
    public static String getCaseResolveRules() {
        return get(CASE_RESOLVE_RULES).value;
    }

    /**
     * <pre>CASE_RESOLVE_RULES_CATEGORIE
     * SQLite key: caseresolve_rules_categorie
     * [en] Categorie
     * [de] Kategorie</pre>
     * @return [en] Categorie, [de] Kategorie
     */
    public static String getCaseResolveRulesCategorie() {
        return get(CASE_RESOLVE_RULES_CATEGORIE).value;
    }

    /**
     * <pre>CASE_RESOLVE_RULES_DELTA_CHARGE
     * SQLite key: caseresolve_rules_deltacharge
     * [en] dCharge
     * [de] dEntgelt</pre>
     * @return [en] dCharge, [de] dEntgelt
     */
    public static String getCaseResolveRulesDeltaCharge() {
        return get(CASE_RESOLVE_RULES_DELTA_CHARGE).value;
    }

    /**
     * <pre>CASE_RESOLVE_RULES_DELTA_COST_WEIGHT
     * SQLite key: caseresolve_rules_deltacostweight
     * [en] dCW
     * [de] dCW</pre>
     * @return [en] dCW, [de] dCW
     */
    public static String getCaseResolveRulesDeltaCostWeight() {
        return get(CASE_RESOLVE_RULES_DELTA_COST_WEIGHT).value;
    }

    /**
     * <pre>CASE_RESOLVE_RULES_DESCRIPTION
     * SQLite key: caseresolve_rules_description
     * [en] Description
     * [de] Bezeichnung</pre>
     * ATTENTION this value ('Description') seems to be also defined under the key DESCRIPTION!
     * @return [en] Description, [de] Bezeichnung
     */
    public static String getCaseResolveRulesDescription() {
        return get(CASE_RESOLVE_RULES_DESCRIPTION).value;
    }

    /**
     * <pre>CASE_RESOLVE_RULES_DRGSIMULATION
     * SQLite key: caseresolve_rules_drgsimulation
     * [en] DRG Simulation (DRG Sim.)
     * [de] DRG Simulation (DRG Sim.)</pre>
     * @return [en] DRG Simulation (DRG Sim.), [de] DRG Simulation (DRG Sim.)
     */
    public static String getCaseResolveRulesDRGSimulation() {
        return get(CASE_RESOLVE_RULES_DRGSIMULATION).value;
    }

    public static Translation getCaseResolveRulesDRGSimulationObj() {
        return get(CASE_RESOLVE_RULES_DRGSIMULATION);
    }

    /**
     * <pre>CASE_RESOLVE_RULES_ID
     * SQLite key: caseresolve_rules_id
     * [en] Identifier
     * [de] Nummer</pre>
     * @return [en] Identifier, [de] Nummer
     */
    public static String getCaseResolveRulesId() {
        return get(CASE_RESOLVE_RULES_ID).value;
    }

    /**
     * <pre>CASE_RESOLVE_RULES_PEPPSIMULATION
     * SQLite key: caseresolve_rules_peppsimulation
     * [en] PEPP (PEPP Sim.)
     * [de] PEPP Simulation (PEPP Sim.)</pre>
     * @return [en] PEPP (PEPP Sim.), [de] PEPP Simulation (PEPP Sim.)
     */
    public static String getCaseResolveRulesPEPPSimulation() {
        return get(CASE_RESOLVE_RULES_PEPPSIMULATION).value;
    }

    public static Translation getCaseResolveRulesPEPPSimulationObj() {
        return get(CASE_RESOLVE_RULES_PEPPSIMULATION);
    }

    /**
     * <pre>CASE_RESOLVE_RULES_PROPOSAL
     * SQLite key: caseresolve_rules_proposal
     * [en] Proposal
     * [de] Vorschlag</pre>
     * @return [en] Proposal, [de] Vorschlag
     */
    public static String getCaseResolveRulesProposal() {
        return get(CASE_RESOLVE_RULES_PROPOSAL).value;
    }

    /**
     * <pre>CASE_RESOLVE_RULES_RELATION
     * SQLite key: caseresolve_rules_relation
     * [en] Relation
     * [de] Bezug</pre>
     * @return [en] Relation, [de] Bezug
     */
    public static String getCaseResolveRulesRelation() {
        return get(CASE_RESOLVE_RULES_RELATION).value;
    }

    /**
     * <pre>CASE_RESOLVE_RULES_TYPE
     * SQLite key: caseresolve_rules_type
     * [en] Type
     * [de] Type</pre>
     * ATTENTION this value ('Type') seems to be also defined under the key WORKFLOW_TYPE!
     * @return [en] Type, [de] Type
     */
    public static String getCaseResolveRulesType() {
        return get(CASE_RESOLVE_RULES_TYPE).value;
    }

    /**
     * <pre>CASE_RESOLVE_SECUNDARY_ICD
     * SQLite key: caseresolve_secundaryicd
     * [en] sec. ICD
     * [de] s. ICD</pre>
     * @return [en] sec. ICD, [de] s. ICD
     */
    public static String getCaseResolveSecundaryICD() {
        return get(CASE_RESOLVE_SECUNDARY_ICD).value;
    }

    /**
     * <pre>CASE_RESOLVE_SUPPLEMENTARY_CHARGE
     * SQLite key: caseresolve_supplementarycharge
     * [en] SC
     * [de] Zusatz-/ergänz. Tagesentgelte</pre>
     * @return [en] SC, [de] Zusatz-/ergänz. Tagesentgelte
     */
    public static String getCaseResolveSupplementaryCharge() {
        return get(CASE_RESOLVE_SUPPLEMENTARY_CHARGE).value;
    }

    /**
     * <pre>CASE_RESOLVE_SUPPLEMENTARY_VALUE
     * SQLite key: caseresolve_supplementaryvalue
     * [en] SC-Value
     * [de] ZE-Betrag</pre>
     * @return [en] SC-Value, [de] ZE-Betrag
     */
    public static String getCaseResolveSupplementaryValue() {
        return get(CASE_RESOLVE_SUPPLEMENTARY_VALUE).value;
    }

    /**
     * <pre>CASE_RESOLVE_USED_FOR_GROUPING
     * SQLite key: caseresolve_usedforgrouping
     * [en] G
     * [de] G</pre>
     * ATTENTION this value ('g') seems to be also defined under the key RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_5!
     * @return [en] G, [de] G
     */
    public static String getCaseResolveUsedForGrouping() {
        return get(CASE_RESOLVE_USED_FOR_GROUPING).value;
    }

    /**
     * <pre>CASE_RESOLVED
     * SQLite key: case_resolved
     * [en] Case resolved
     * [de] Fall abgeschlossen</pre>
     * @return [en] Case resolved, [de] Fall abgeschlossen
     */
    public static String getCaseResolved() {
        return get(CASE_RESOLVED).value;
    }

    /**
     * <pre>CASE_SIMULATON_ACTIONS
     * SQLite key: case_simulaton_actions
     * [en] Actions
     * [de] Aktionen</pre>
     * @return [en] Actions, [de] Aktionen
     */
    public static String getCaseSimulatonActions() {
        return get(CASE_SIMULATON_ACTIONS).value;
    }

    /**
     * <pre>CASE_STATUS
     * SQLite key: casestatus
     * [en] Case Status (Status)
     * [de] Fallstatus (Status)</pre>
     * @return [en] Case Status (Status), [de] Fallstatus (Status)
     */
    public static String getCaseStatus() {
        return get(CASE_STATUS).value;
    }

    public static Translation getCaseStatusObj() {
        return get(CASE_STATUS);
    }

    /**
     * <pre>CASE_STATUS_CLOSED
     * SQLite key: casestatus_closed
     * [en] Closed
     * [de] Geschlossen</pre>
     * ATTENTION this value ('closed') seems to be also defined under the key PROCESS_STATUS_REMINDER_CLOSED! this value ('closed') seems to be also defined under the key WORKFLOW_STATE_CLOSED!
     * @return [en] Closed, [de] Geschlossen
     */
    public static String getCaseStatusClosed() {
        return get(CASE_STATUS_CLOSED).value;
    }

    /**
     * <pre>CASE_STATUS_IN_PROGRESS
     * SQLite key: casestatus_inprogress
     * [en] In Progress
     * [de] In Bearbeitung</pre>
     * @return [en] In Progress, [de] In Bearbeitung
     */
    public static String getCaseStatusInProgress() {
        return get(CASE_STATUS_IN_PROGRESS).value;
    }

    /**
     * <pre>CASE_STATUS_NEW
     * SQLite key: casestatus_new
     * [en] New
     * [de] Neu</pre>
     * @return [en] New, [de] Neu
     */
    public static String getCaseStatusNew() {
        return get(CASE_STATUS_NEW).value;
    }

    /**
     * <pre>CASE_STATUS_NEW_VERSION
     * SQLite key: casestatus_newversion
     * [en] New Version
     * [de] Neue Version</pre>
     * @return [en] New Version, [de] Neue Version
     */
    public static String getCaseStatusNewVersion() {
        return get(CASE_STATUS_NEW_VERSION).value;
    }

    /**
     * <pre>CASE_STATUS_SAP_CLOSED
     * SQLite key: casestatus_sapclosed
     * [en] SAP closed
     * [de] SAP geschlossen</pre>
     * @return [en] SAP closed, [de] SAP geschlossen
     */
    public static String getCaseStatusSapClosed() {
        return get(CASE_STATUS_SAP_CLOSED).value;
    }

    /**
     * <pre>CASE_STATUS_STANDARD
     * SQLite key: casestatus_standard
     * [en] Standard
     * [de] Standard</pre>
     * @return [en] Standard, [de] Standard
     */
    public static String getCaseStatusStandard() {
        return get(CASE_STATUS_STANDARD).value;
    }

    /**
     * <pre>CASE_STATUS_SUGGESTION
     * SQLite key: casestatus_suggestion
     * [en] Suggestion
     * [de] Vorschlag</pre>
     * @return [en] Suggestion, [de] Vorschlag
     */
    public static String getCaseStatusSuggestion() {
        return get(CASE_STATUS_SUGGESTION).value;
    }

    /**
     * <pre>CASE_STRING_1
     * SQLite key: case_string1
     * [de] Text 1</pre>
     * @return [de] Text 1
     */
    public static String getCaseString1() {
        return get(CASE_STRING_1).value;
    }

    /**
     * <pre>CASE_STRING_10
     * SQLite key: case_string10
     * [de] Text 10</pre>
     * @return [de] Text 10
     */
    public static String getCaseString10() {
        return get(CASE_STRING_10).value;
    }

    /**
     * <pre>CASE_STRING_2
     * SQLite key: case_string2
     * [de] Text 2</pre>
     * @return [de] Text 2
     */
    public static String getCaseString2() {
        return get(CASE_STRING_2).value;
    }

    /**
     * <pre>CASE_STRING_3
     * SQLite key: case_string3
     * [de] Text 3</pre>
     * @return [de] Text 3
     */
    public static String getCaseString3() {
        return get(CASE_STRING_3).value;
    }

    /**
     * <pre>CASE_STRING_4
     * SQLite key: case_string4
     * [de] Text 4</pre>
     * @return [de] Text 4
     */
    public static String getCaseString4() {
        return get(CASE_STRING_4).value;
    }

    /**
     * <pre>CASE_STRING_5
     * SQLite key: case_string5
     * [de] Text 5</pre>
     * @return [de] Text 5
     */
    public static String getCaseString5() {
        return get(CASE_STRING_5).value;
    }

    /**
     * <pre>CASE_STRING_6
     * SQLite key: case_string6
     * [de] Text 6</pre>
     * @return [de] Text 6
     */
    public static String getCaseString6() {
        return get(CASE_STRING_6).value;
    }

    /**
     * <pre>CASE_STRING_7
     * SQLite key: case_string7
     * [de] Text 7</pre>
     * @return [de] Text 7
     */
    public static String getCaseString7() {
        return get(CASE_STRING_7).value;
    }

    /**
     * <pre>CASE_STRING_8
     * SQLite key: case_string8
     * [de] Text 8</pre>
     * @return [de] Text 8
     */
    public static String getCaseString8() {
        return get(CASE_STRING_8).value;
    }

    /**
     * <pre>CASE_STRING_9
     * SQLite key: case_string9
     * [de] Text 9</pre>
     * @return [de] Text 9
     */
    public static String getCaseString9() {
        return get(CASE_STRING_9).value;
    }

    /**
     * <pre>CASE_TYPE
     * SQLite key: casetype
     * [en] Case Type (Case Type)
     * [de] Abrechnungsart (Abrechnungsart)</pre>
     * @return [en] Case Type (Case Type), [de] Abrechnungsart (Abrechnungsart)
     */
    public static String getCaseType() {
        return get(CASE_TYPE).value;
    }

    public static Translation getCaseTypeObj() {
        return get(CASE_TYPE);
    }

    /**
     * <pre>CASE_TYPE_AMBU_OP
     * SQLite key: casetype_ambuop
     * [en] Ambu OP
     * [de] Ambu OP</pre>
     * @return [en] Ambu OP, [de] Ambu OP
     */
    public static String getCaseTypeAmbuOP() {
        return get(CASE_TYPE_AMBU_OP).value;
    }

    /**
     * <pre>CASE_TYPE_DRG
     * SQLite key: casetype_drg
     * [en] DRG
     * [de] DRG</pre>
     * ATTENTION this value ('DRG') seems to be also defined under the key CASE_RESOLVE_DRG! this value ('DRG') seems to be also defined under the key DRG! this value ('DRG') seems to be also defined under the key DRG_SHORTCUT! this value ('DRG') seems to be also defined under the key FEE_GROUP_DRG! this value ('DRG') seems to be also defined under the key ICD_TYPE_DRG! this value ('DRG') seems to be also defined under the key RULES_DRG!
     * @return [en] DRG, [de] DRG
     */
    public static String getCaseTypeDRG() {
        return get(CASE_TYPE_DRG).value;
    }

    /**
     * <pre>CASE_TYPE_OTHER
     * SQLite key: casetype_other
     * [en] Other
     * [de] Andere</pre>
     * ATTENTION this value ('other') seems to be also defined under the key DRG_PARTITION_OTHER! this value ('Other') seems to be also defined under the key REQUEST_TYPE_OTHER! this value ('Other') seems to be also defined under the key RISK_AREA_OTHER!
     * @return [en] Other, [de] Andere
     */
    public static String getCaseTypeOTHER() {
        return get(CASE_TYPE_OTHER).value;
    }

    /**
     * <pre>CASE_TYPE_PEPP
     * SQLite key: casetype_pepp
     * [en] PEPP
     * [de] PEPP</pre>
     * ATTENTION this value ('PEPP') seems to be also defined under the key RULES_PEPP_GROUPERSTATE!
     * @return [en] PEPP, [de] PEPP
     */
    public static String getCaseTypePEPP() {
        return get(CASE_TYPE_PEPP).value;
    }

    /**
     * <pre>CASE_TYPE_PIA
     * SQLite key: casetype_pia
     * [en] PIA
     * [de] PIA</pre>
     * ATTENTION this value ('PIA') seems to be also defined under the key PIA!
     * @return [en] PIA, [de] PIA
     */
    public static String getCaseTypePIA() {
        return get(CASE_TYPE_PIA).value;
    }

    /**
     * <pre>CASE_TYPE_PRE_ADMISSION_TERMINATORS
     * SQLite key: casetype_preadmissionterminators
     * [en] pre-admission terminators
     * [de] vorstat. Abbrecher</pre>
     * @return [en] pre-admission terminators, [de] vorstat. Abbrecher
     */
    public static String getCaseTypePreAdmissionTerminators() {
        return get(CASE_TYPE_PRE_ADMISSION_TERMINATORS).value;
    }

    /**
     * <pre>CASE_TYPE_PSY
     * SQLite key: casetype_psy
     * [en] Psychosomatic
     * [de] Psychosomatik</pre>
     * ATTENTION this value ('Psychosomatic') seems to be also defined under the key PSY!
     * @return [en] Psychosomatic, [de] Psychosomatik
     */
    public static String getCaseTypePSY() {
        return get(CASE_TYPE_PSY).value;
    }

    /**
     * <pre>CASECREATION_FAILED
     * SQLite key: casecreation_failed
     * [en] Case creation failed!
     * [de] Fall konnte nicht angelegt werden!</pre>
     * @return [en] Case creation failed!, [de] Fall konnte nicht angelegt werden!
     */
    public static String getCasecreationFailed() {
        return get(CASECREATION_FAILED).value;
    }

    /**
     * <pre>CASECREATION_SUCCESS
     * SQLite key: casecreation_success
     * [en] Case successfully created!
     * [de] Fall wurde erfolgreich angelegt!</pre>
     * @return [en] Case successfully created!, [de] Fall wurde erfolgreich angelegt!
     */
    public static String getCasecreationSuccess() {
        return get(CASECREATION_SUCCESS).value;
    }

    /**
     * <pre>CASEFEE
     * SQLite key: casefee
     * [en] Case Fees
     * [de] Entgelte</pre>
     * @return [en] Case Fees, [de] Entgelte
     */
    public static String getCasefee() {
        return get(CASEFEE).value;
    }

    /**
     * <pre>CASEFEE_COUNT
     * SQLite key: casefee_count
     * [en] Count
     * [de] Anzahl</pre>
     * @return [en] Count, [de] Anzahl
     */
    public static String getCasefeeCount() {
        return get(CASEFEE_COUNT).value;
    }

    /**
     * <pre>CASEFEE_DAYSOFF
     * SQLite key: casefee_daysoff
     * [en] Days without Calculation
     * [de] Tage ohne Berechnung</pre>
     * @return [en] Days without Calculation, [de] Tage ohne Berechnung
     */
    public static String getCasefeeDaysoff() {
        return get(CASEFEE_DAYSOFF).value;
    }

    /**
     * <pre>CASEFEE_FROM
     * SQLite key: casefee_from
     * [en] Billing from
     * [de] Abrechnung von</pre>
     * @return [en] Billing from, [de] Abrechnung von
     */
    public static String getCasefeeFrom() {
        return get(CASEFEE_FROM).value;
    }

    /**
     * <pre>CASEFEE_INFO
     * SQLite key: casefee_info
     * [en] Case fees of {0}
     * [de] Entgelte von {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Case fees of {0}, [de] Entgelte von {0}
     */
    public static String getCasefeeInfo(final Object... pParams) {
        return get(CASEFEE_INFO, pParams).value;
    }

    /**
     * <pre>CASEFEE_KIND
     * SQLite key: casefee_kind
     * [en] Kind
     * [de] Art</pre>
     * ATTENTION this value ('Kind') seems to be also defined under the key BILL_KIND! this value ('Kind') seems to be also defined under the key CASE_RESOLVE_KIND!
     * @return [en] Kind, [de] Art
     */
    public static String getCasefeeKind() {
        return get(CASEFEE_KIND).value;
    }

    /**
     * <pre>CASEFEE_SUM
     * SQLite key: casefee_sum
     * [en] Total
     * [de] Summe</pre>
     * @return [en] Total, [de] Summe
     */
    public static String getCasefeeSum() {
        return get(CASEFEE_SUM).value;
    }

    /**
     * <pre>CASEFEE_TO
     * SQLite key: casefee_to
     * [en] Billing to
     * [de] Abrechnung bis</pre>
     * @return [en] Billing to, [de] Abrechnung bis
     */
    public static String getCasefeeTo() {
        return get(CASEFEE_TO).value;
    }

    /**
     * <pre>CASEFEE_VALUE
     * SQLite key: casefee_value
     * [en] Value
     * [de] Betrag</pre>
     * ATTENTION this value ('value') seems to be also defined under the key PROCESS_BASERATE_PEPP_VALUE!
     * @return [en] Value, [de] Betrag
     */
    public static String getCasefeeValue() {
        return get(CASEFEE_VALUE).value;
    }

    /**
     * <pre>CASELIST_CSV_EXPORT_DIAG
     * SQLite key: caselist_csv_export_diag
     * [en] Caselist is exporting as CSV
     * [de] Fallliste wird als CSV exportiert</pre>
     * @return [en] Caselist is exporting as CSV, [de] Fallliste wird als CSV exportiert
     */
    public static String getCaselistCsvExportDiag() {
        return get(CASELIST_CSV_EXPORT_DIAG).value;
    }

    /**
     * <pre>CASELIST_EXCEL_EXPORT_DIAG
     * SQLite key: caselist_excel_export_diag
     * [en] Caselist is exporting as Excel
     * [de] Fallliste wird als Excel exportiert</pre>
     * @return [en] Caselist is exporting as Excel, [de] Fallliste wird als Excel exportiert
     */
    public static String getCaselistExcelExportDiag() {
        return get(CASELIST_EXCEL_EXPORT_DIAG).value;
    }

    /**
     * <pre>CASES
     * SQLite key: cases
     * [en] Cases
     * [de] Fälle</pre>
     * @return [en] Cases, [de] Fälle
     */
    public static String getCases() {
        return get(CASES).value;
    }

    /**
     * <pre>CATALOG
     * SQLite key: catalog
     * [en] Catalog
     * [de] Katalog</pre>
     * @return [en] Catalog, [de] Katalog
     */
    public static String getCatalog() {
        return get(CATALOG).value;
    }

    /**
     * <pre>CATALOG_AOP_CATALOG
     * SQLite key: catalog_aop_catalog
     * [en] AOP-Katalog
     * [de] AOP-Katalog</pre>
     * @return [en] AOP-Katalog, [de] AOP-Katalog
     */
    public static String getCatalogAopCatalog() {
        return get(CATALOG_AOP_CATALOG).value;
    }

    /**
     * <pre>CATALOG_AOP_CATEGORY
     * SQLite key: catalog_aop_category
     * [en] Kategorie
     * [de] Kategorie</pre>
     * ATTENTION this value ('Kategorie') seems to be also defined under the key RULE_FILTER_DIALOG_RULE_CATEGORY!
     * @return [en] Kategorie, [de] Kategorie
     */
    public static String getCatalogAopCategory() {
        return get(CATALOG_AOP_CATEGORY).value;
    }

    /**
     * <pre>CATALOG_AOP_CATEGORY_DESCRIPTION_1
     * SQLite key: catalog_aop_category_description_1
     * [en] Leistungen, die in der Regel ambulant erbracht werden können
     * [de] Leistungen, die in der Regel ambulant erbracht werden können</pre>
     * @return [en] Leistungen, die in der Regel ambulant erbracht werden können, [de] Leistungen, die in der Regel ambulant erbracht werden können
     */
    public static String getCatalogAopCategoryDescription1() {
        return get(CATALOG_AOP_CATEGORY_DESCRIPTION_1).value;
    }

    /**
     * <pre>CATALOG_AOP_CATEGORY_DESCRIPTION_2
     * SQLite key: catalog_aop_category_description_2
     * [en] Leistungen, bei denen sowohl eine ambulante, als auch stationäre Durchführung möglich ist
     * [de] Leistungen, bei denen sowohl eine ambulante, als auch stationäre Durchführung möglich ist</pre>
     * @return [en] Leistungen, bei denen sowohl eine ambulante, als auch stationäre Durchführung möglich ist, [de] Leistungen, bei denen sowohl eine ambulante, als auch stationäre Durchführung möglich ist
     */
    public static String getCatalogAopCategoryDescription2() {
        return get(CATALOG_AOP_CATEGORY_DESCRIPTION_2).value;
    }

    /**
     * <pre>CATALOG_AOP_SHEET
     * SQLite key: catalog_aop_sheet
     * [en] Abschnitt
     * [de] Abschnitt</pre>
     * @return [en] Abschnitt, [de] Abschnitt
     */
    public static String getCatalogAopSheet() {
        return get(CATALOG_AOP_SHEET).value;
    }

    /**
     * <pre>CATALOG_DIALOG_CONFIRM
     * SQLite key: catalogdialog_confirm
     * [en] Confirm
     * [de] Bestätigen</pre>
     * @return [en] Confirm, [de] Bestätigen
     */
    public static String getCatalogDialogConfirm() {
        return get(CATALOG_DIALOG_CONFIRM).value;
    }

    /**
     * <pre>CATALOG_DIALOG_DIAGNOSES
     * SQLite key: catalogdialog_diagnoses
     * [en] Diagnoses
     * [de] Diagnosen</pre>
     * @return [en] Diagnoses, [de] Diagnosen
     */
    public static String getCatalogDialogDiagnoses() {
        return get(CATALOG_DIALOG_DIAGNOSES).value;
    }

    /**
     * <pre>CATALOG_DIALOG_PROCEDURES
     * SQLite key: catalogdialog_procedures
     * [en] Procedures
     * [de] Prozeduren</pre>
     * ATTENTION this value ('Procedures') seems to be also defined under the key RISK_AREA_PROCEDURES!
     * @return [en] Procedures, [de] Prozeduren
     */
    public static String getCatalogDialogProcedures() {
        return get(CATALOG_DIALOG_PROCEDURES).value;
    }

    /**
     * <pre>CATALOG_DIALOG_REMOVE
     * SQLite key: catalogdialog_remove
     * [en] Remove
     * [de] Löschen</pre>
     * ATTENTION this value ('Remove') seems to be also defined under the key EVENT_OPERATION_REMOVE!
     * @return [en] Remove, [de] Löschen
     */
    public static String getCatalogDialogRemove() {
        return get(CATALOG_DIALOG_REMOVE).value;
    }

    /**
     * <pre>CATALOG_DIALOG_REMOVE_ALL
     * SQLite key: catalogdialog_removeall
     * [en] Remove all
     * [de] Alle löschen</pre>
     * @return [en] Remove all, [de] Alle löschen
     */
    public static String getCatalogDialogRemoveAll() {
        return get(CATALOG_DIALOG_REMOVE_ALL).value;
    }

    /**
     * <pre>CATALOG_DIALOG_SEARCH
     * SQLite key: catalogdialog_search
     * [en] Search...
     * [de] Suchen...</pre>
     * @return [en] Search..., [de] Suchen...
     */
    public static String getCatalogDialogSearch() {
        return get(CATALOG_DIALOG_SEARCH).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_BASERATES
     * SQLite key: catalog_download_baserates
     * [en] Baserates
     * [de] Baserates</pre>
     * @return [en] Baserates, [de] Baserates
     */
    public static String getCatalogDownloadBaserates() {
        return get(CATALOG_DOWNLOAD_BASERATES).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_CATALOGS
     * SQLite key: catalog_download_catalogs
     * [en] Catalogs
     * [de] Kataloge</pre>
     * @return [en] Catalogs, [de] Kataloge
     */
    public static String getCatalogDownloadCatalogs() {
        return get(CATALOG_DOWNLOAD_CATALOGS).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_CORE_DATA
     * SQLite key: catalog_download_coredata
     * [en] Core data
     * [de] Stammdaten</pre>
     * @return [en] Core data, [de] Stammdaten
     */
    public static String getCatalogDownloadCore_data() {
        return get(CATALOG_DOWNLOAD_CORE_DATA).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_DAILY_FEE
     * SQLite key: catalog_download_dailyfee
     * [en] Daily Fees
     * [de] Tagesentgelte</pre>
     * @return [en] Daily Fees, [de] Tagesentgelte
     */
    public static String getCatalogDownloadDailyFee() {
        return get(CATALOG_DOWNLOAD_DAILY_FEE).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_DEPARTMENTS
     * SQLite key: catalog_download_departments
     * [en] Departments
     * [de] Abteilungen</pre>
     * ATTENTION this value ('Departments') seems to be also defined under the key DEPARTMENTS!
     * @return [en] Departments, [de] Abteilungen
     */
    public static String getCatalogDownloadDepartments() {
        return get(CATALOG_DOWNLOAD_DEPARTMENTS).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_DOCTORS
     * SQLite key: catalog_download_doctors
     * [en] Doctors
     * [de] Ärzte</pre>
     * @return [en] Doctors, [de] Ärzte
     */
    public static String getCatalogDownloadDoctors() {
        return get(CATALOG_DOWNLOAD_DOCTORS).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_DRG_FEE
     * SQLite key: catalog_download_drgfee
     * [en] DRG Supp. Fees
     * [de] DRG Zusatzentgelte</pre>
     * @return [en] DRG Supp. Fees, [de] DRG Zusatzentgelte
     */
    public static String getCatalogDownloadDrgFee() {
        return get(CATALOG_DOWNLOAD_DRG_FEE).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_HOSPITALS
     * SQLite key: catalog_download_hospitals
     * [en] Hospitals
     * [de] Krankenhäuser</pre>
     * @return [en] Hospitals, [de] Krankenhäuser
     */
    public static String getCatalogDownloadHospitals() {
        return get(CATALOG_DOWNLOAD_HOSPITALS).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_INSURANCE_COMPANYS
     * SQLite key: catalog_download_insurancecompanys
     * [en] Insurances
     * [de] Krankenkassen</pre>
     * ATTENTION this value ('Insurances') seems to be also defined under the key INSURANCES!
     * @return [en] Insurances, [de] Krankenkassen
     */
    public static String getCatalogDownloadInsurance_companys() {
        return get(CATALOG_DOWNLOAD_INSURANCE_COMPANYS).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_PEPP_FEE
     * SQLite key: catalog_download_peppfee
     * [en] PEPP Supp. Fees
     * [de] PEPP Zusatzentgelte</pre>
     * @return [en] PEPP Supp. Fees, [de] PEPP Zusatzentgelte
     */
    public static String getCatalogDownloadPeppFee() {
        return get(CATALOG_DOWNLOAD_PEPP_FEE).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_PROGRESS_CATALOG_DOWNLOADED
     * SQLite key: catalog_download_progress_catalogdownloaded
     * [en] {0} was downloaded
     * [de] {0} wurde heruntergeladen</pre>
     * @param pParams placeholder replacements
     * @return [en] {0} was downloaded, [de] {0} wurde heruntergeladen
     */
    public static String getCatalogDownloadProgressCatalog_downloaded(final Object... pParams) {
        return get(CATALOG_DOWNLOAD_PROGRESS_CATALOG_DOWNLOADED, pParams).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_PROGRESS_CATALOG_DROPPED
     * SQLite key: catalog_download_progress_catalogdropped
     * [en] {0} was dropped
     * [de] {0} wurde gelöscht</pre>
     * @param pParams placeholder replacements
     * @return [en] {0} was dropped, [de] {0} wurde gelöscht
     */
    public static String getCatalogDownloadProgressCatalog_dropped(final Object... pParams) {
        return get(CATALOG_DOWNLOAD_PROGRESS_CATALOG_DROPPED, pParams).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_PROGRESS_CATALOG_WILL_DOWNLOAD
     * SQLite key: catalog_download_progress_catalogwilldownload
     * [en] Will download {0}
     * [de] Lade {0} herunter</pre>
     * @param pParams placeholder replacements
     * @return [en] Will download {0}, [de] Lade {0} herunter
     */
    public static String getCatalogDownloadProgressCatalog_will_download(final Object... pParams) {
        return get(CATALOG_DOWNLOAD_PROGRESS_CATALOG_WILL_DOWNLOAD, pParams).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_PROGRESS_CATALOG_WILL_DROP
     * SQLite key: catalog_download_progress_catalogwilldrop
     * [en] Will drop {0}
     * [de] Lösche {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Will drop {0}, [de] Lösche {0}
     */
    public static String getCatalogDownloadProgressCatalog_will_drop(final Object... pParams) {
        return get(CATALOG_DOWNLOAD_PROGRESS_CATALOG_WILL_DROP, pParams).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_PROGRESS_DOWNLOAD_FINISHED
     * SQLite key: catalog_download_progress_downloadfinished
     * [en] Download has finished...
     * [de] Herunterladen wurde beendet...</pre>
     * @return [en] Download has finished..., [de] Herunterladen wurde beendet...
     */
    public static String getCatalogDownloadProgressDownload_finished() {
        return get(CATALOG_DOWNLOAD_PROGRESS_DOWNLOAD_FINISHED).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_PROGRESS_DOWNLOAD_STARTED
     * SQLite key: catalog_download_progress_downloadstarted
     * [en] Download has started...
     * [de] Herunterladen wurde gestartet...</pre>
     * @return [en] Download has started..., [de] Herunterladen wurde gestartet...
     */
    public static String getCatalogDownloadProgressDownload_started() {
        return get(CATALOG_DOWNLOAD_PROGRESS_DOWNLOAD_STARTED).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_PROGRESS_PRIMING
     * SQLite key: catalog_download_progress_priming
     * [en] Priming...
     * [de] Vorbereiten...</pre>
     * @return [en] Priming..., [de] Vorbereiten...
     */
    public static String getCatalogDownloadProgressPriming() {
        return get(CATALOG_DOWNLOAD_PROGRESS_PRIMING).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_PROGRESS_SYNCHRONIZATION_FINISHED
     * SQLite key: catalog_download_progress_synchronizationfinished
     * [en] Synchronization with server was finished
     * [de] Synchronisation mit Server abgeschlossen</pre>
     * @return [en] Synchronization with server was finished, [de] Synchronisation mit Server abgeschlossen
     */
    public static String getCatalogDownloadProgressSynchronization_finished() {
        return get(CATALOG_DOWNLOAD_PROGRESS_SYNCHRONIZATION_FINISHED).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_PROGRESS_SYNCHRONIZATION_STARTED
     * SQLite key: catalog_download_progress_synchronizationstarted
     * [en] Check if client is up to date...
     * [de] Prüfe, ob der Client auf dem neuesten Stand ist...</pre>
     * @return [en] Check if client is up to date..., [de] Prüfe, ob der Client auf dem neuesten Stand ist...
     */
    public static String getCatalogDownloadProgressSynchronization_started() {
        return get(CATALOG_DOWNLOAD_PROGRESS_SYNCHRONIZATION_STARTED).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_TITLE
     * SQLite key: catalog_download_title
     * [en] CPX is loading...
     * [de] checkpoint x wird geladen...</pre>
     * @return [en] CPX is loading..., [de] checkpoint x wird geladen...
     */
    public static String getCatalogDownloadTitle() {
        return get(CATALOG_DOWNLOAD_TITLE).value;
    }

    /**
     * <pre>CATALOG_DOWNLOAD_WINDOW_TITLE
     * SQLite key: catalog_download_windowtitle
     * [en] Loading catalogs and core data
     * [de] Kataloge und Stammdaten laden</pre>
     * @return [en] Loading catalogs and core data, [de] Kataloge und Stammdaten laden
     */
    public static String getCatalogDownloadWindow_title() {
        return get(CATALOG_DOWNLOAD_WINDOW_TITLE).value;
    }

    /**
     * <pre>CATALOG_DRG_CARE_DESC
     * SQLite key: catalog_drg_care_desc
     * [en] {0} Day(s), equals {1}
     * [de] {0} Tag(e), entspr. {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] {0} Day(s), equals {1}, [de] {0} Tag(e), entspr. {1}
     */
    public static String getCatalogDrgCareDesc(final Object... pParams) {
        return get(CATALOG_DRG_CARE_DESC, pParams).value;
    }

    /**
     * <pre>CATALOG_DRG_CARE_TITLE
     * SQLite key: catalog_drg_care_title
     * [en] Cost weight (Care)
     * [de] Kostengewicht (Pflege)</pre>
     * @return [en] Cost weight (Care), [de] Kostengewicht (Pflege)
     */
    public static String getCatalogDrgCareTitle() {
        return get(CATALOG_DRG_CARE_TITLE).value;
    }

    /**
     * <pre>CATALOG_DRG_COSTWEIGHT
     * SQLite key: catalog_drg_costweight
     * [en] Cost weight (DRG)
     * [de] Kostengewicht (DRG)</pre>
     * @return [en] Cost weight (DRG), [de] Kostengewicht (DRG)
     */
    public static String getCatalogDrgCostweight() {
        return get(CATALOG_DRG_COSTWEIGHT).value;
    }

    /**
     * <pre>CATALOG_DRG_EFF_CW
     * SQLite key: catalog_drg_effcw
     * [en] eff. CW {0}
     * [de] eff. CW {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] eff. CW {0}, [de] eff. CW {0}
     */
    public static String getCatalogDrgEffCw(final Object... pParams) {
        return get(CATALOG_DRG_EFF_CW, pParams).value;
    }

    /**
     * <pre>CATALOG_DRG_FIRST_DAY_DEDUCTION
     * SQLite key: catalog_drg_firstdaydeduction
     * [en] 1. day of deduction
     * [de] 1. Tag mit Abschlag</pre>
     * @return [en] 1. day of deduction, [de] 1. Tag mit Abschlag
     */
    public static String getCatalogDrgFirstDayDeduction() {
        return get(CATALOG_DRG_FIRST_DAY_DEDUCTION).value;
    }

    /**
     * <pre>CATALOG_DRG_FIRST_DAY_SURCHARGE
     * SQLite key: catalog_drg_firstdaysurcharge
     * [en] 1. day of surcharge
     * [de] 1. Tag zusätzliches Entgelt</pre>
     * @return [en] 1. day of surcharge, [de] 1. Tag zusätzliches Entgelt
     */
    public static String getCatalogDrgFirstDaySurcharge() {
        return get(CATALOG_DRG_FIRST_DAY_SURCHARGE).value;
    }

    /**
     * <pre>CATALOG_DRG_LOS
     * SQLite key: catalog_drg_los
     * [en] Average length of stay
     * [de] Mittlere Verweildauer</pre>
     * @return [en] Average length of stay, [de] Mittlere Verweildauer
     */
    public static String getCatalogDrgLos() {
        return get(CATALOG_DRG_LOS).value;
    }

    /**
     * <pre>CATALOG_DRG_MDC
     * SQLite key: catalog_drg_mdc
     * [en] MDC {0}
     * [de] MDC {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] MDC {0}, [de] MDC {0}
     */
    public static String getCatalogDrgMdc(final Object... pParams) {
        return get(CATALOG_DRG_MDC, pParams).value;
    }

    /**
     * <pre>CATALOG_DRG_NEGO_DESC
     * SQLite key: catalog_drg_nego_desc
     * [en] Negotiated Fee per day {0}{1}, {2} day(s)
     * [de] Vereinbartes Entgeld pro Tag {0}{1}, {2} Tag(e)</pre>
     * @param pParams placeholder replacements
     * @return [en] Negotiated Fee per day {0}{1}, {2} day(s), [de] Vereinbartes Entgeld pro Tag {0}{1}, {2} Tag(e)
     */
    public static String getCatalogDrgNegoDesc(final Object... pParams) {
        return get(CATALOG_DRG_NEGO_DESC, pParams).value;
    }

    /**
     * <pre>CATALOG_DRG_NEGO_REVENUE
     * SQLite key: catalog_drg_nego_revenue
     * [en] Negotiated Fee per day {0}{1}, {2} day(s) ({3}{4})
     * [de] Vereinbartes Entgeld pro Tag {0}{1}, {2} Tag(e) ({3}{4})</pre>
     * @param pParams placeholder replacements
     * @return [en] Negotiated Fee per day {0}{1}, {2} day(s) ({3}{4}), [de] Vereinbartes Entgeld pro Tag {0}{1}, {2} Tag(e) ({3}{4})
     */
    public static String getCatalogDrgNegoRevenue(final Object... pParams) {
        return get(CATALOG_DRG_NEGO_REVENUE, pParams).value;
    }

    /**
     * <pre>CATALOG_DRG_NEGO_TITLE
     * SQLite key: catalog_drg_nego_title
     * [en] Negotiated Fee
     * [de] Tagesgleiches Entgelt</pre>
     * @return [en] Negotiated Fee, [de] Tagesgleiches Entgelt
     */
    public static String getCatalogDrgNegoTitle() {
        return get(CATALOG_DRG_NEGO_TITLE).value;
    }

    /**
     * <pre>CATALOG_DRG_UNK_CW
     * SQLite key: catalog_drg_unkcw
     * [en] unc. CW {0}
     * [de] unkorr. CW {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] unc. CW {0}, [de] unkorr. CW {0}
     */
    public static String getCatalogDrgUnkCw(final Object... pParams) {
        return get(CATALOG_DRG_UNK_CW, pParams).value;
    }

    /**
     * <pre>CATALOG_ICD_ERROR
     * SQLite key: catalog_icd_error
     * [en] [ICD Catalog {0} : Has no value]
     * [de] [ICD Katalog {0} : Hat keinen Bezeichner]</pre>
     * @param pParams placeholder replacements
     * @return [en] [ICD Catalog {0} : Has no value], [de] [ICD Katalog {0} : Hat keinen Bezeichner]
     */
    public static String getCatalogIcdError(final Object... pParams) {
        return get(CATALOG_ICD_ERROR, pParams).value;
    }

    /**
     * <pre>CATALOG_MDC_PRE
     * SQLite key: catalog_mdc_pre
     * [en] PRE-MDC
     * [de] PRÄ-MDC</pre>
     * @return [en] PRE-MDC, [de] PRÄ-MDC
     */
    public static String getCatalogMdcPre() {
        return get(CATALOG_MDC_PRE).value;
    }

    /**
     * <pre>CATALOG_MENU_NO_UPDATE_CHANGES_FOUND
     * SQLite key: catalog_menu_noupdatechangesfound
     * [en] no changes at {0}
     * [de] Keine Änderungen um {0} Uhr</pre>
     * @param pParams placeholder replacements
     * @return [en] no changes at {0}, [de] Keine Änderungen um {0} Uhr
     */
    public static String getCatalogMenuNo_update_changes_found(final Object... pParams) {
        return get(CATALOG_MENU_NO_UPDATE_CHANGES_FOUND, pParams).value;
    }

    /**
     * <pre>CATALOG_MENU_NO_UPDATES_FOUND
     * SQLite key: catalog_menu_noupdatesfound
     * [en] Catalogs have not been changed
     * [de] Kataloge wurden nicht geändert</pre>
     * @return [en] Catalogs have not been changed, [de] Kataloge wurden nicht geändert
     */
    public static String getCatalogMenuNo_updates_found() {
        return get(CATALOG_MENU_NO_UPDATES_FOUND).value;
    }

    /**
     * <pre>CATALOG_MENU_UPDATE
     * SQLite key: catalog_menu_update
     * [en] Update catalogs
     * [de] Kataloge aktualisieren</pre>
     * @return [en] Update catalogs, [de] Kataloge aktualisieren
     */
    public static String getCatalogMenuUpdate() {
        return get(CATALOG_MENU_UPDATE).value;
    }

    /**
     * <pre>CATALOG_MENU_UPDATE_CHANGES_FOUND
     * SQLite key: catalog_menu_updatechangesfound
     * [en] {0} changes at {1}
     * [de] {0} Änderungen um {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] {0} changes at {1}, [de] {0} Änderungen um {1}
     */
    public static String getCatalogMenuUpdate_changes_found(final Object... pParams) {
        return get(CATALOG_MENU_UPDATE_CHANGES_FOUND, pParams).value;
    }

    /**
     * <pre>CATALOG_OPS_ERROR
     * SQLite key: catalog_ops_error
     * [en] [OPS Catalog {0} : Has no value]
     * [de] [OPS Katalog {0} : Hat keinen Bezeichner]</pre>
     * @param pParams placeholder replacements
     * @return [en] [OPS Catalog {0} : Has no value], [de] [OPS Katalog {0} : Hat keinen Bezeichner]
     */
    public static String getCatalogOpsError(final Object... pParams) {
        return get(CATALOG_OPS_ERROR, pParams).value;
    }

    /**
     * <pre>CATALOG_PEPP_SC
     * SQLite key: catalog_pepp_sc
     * [en] SK {0}
     * [de] SK {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] SK {0}, [de] SK {0}
     */
    public static String getCatalogPeppSc(final Object... pParams) {
        return get(CATALOG_PEPP_SC, pParams).value;
    }

    /**
     * <pre>CATALOG_SK_PRE
     * SQLite key: catalog_sk_pre
     * [en] Error-PEPP and other PEPP
     * [de] Fehler-PEPP und sonstige PEPP</pre>
     * @return [en] Error-PEPP and other PEPP, [de] Fehler-PEPP und sonstige PEPP
     */
    public static String getCatalogSkPre() {
        return get(CATALOG_SK_PRE).value;
    }

    /**
     * <pre>CATALOG_UPDATE_NOTIFICATION
     * SQLite key: catalog_update_notification
     * [en] The server has an update of catalog data available!
     * [de] Auf dem Server steht ein Update der Katalogdaten zur Verfügung!</pre>
     * @return [en] The server has an update of catalog data available!, [de] Auf dem Server steht ein Update der Katalogdaten zur Verfügung!
     */
    public static String getCatalogUpdateNotification() {
        return get(CATALOG_UPDATE_NOTIFICATION).value;
    }

    /**
     * <pre>CHARACTERS
     * SQLite key: characters
     * [en] Characters
     * [de] Zeichen</pre>
     * @return [en] Characters, [de] Zeichen
     */
    public static String getCharacters() {
        return get(CHARACTERS).value;
    }

    /**
     * <pre>CHECKRESULT_RESULT
     * SQLite key: checkresult_result
     * [en] Result checkresult
     * [de] Ergebnis Fallprüfung</pre>
     * @return [en] Result checkresult, [de] Ergebnis Fallprüfung
     */
    public static String getCheckresultResult() {
        return get(CHECKRESULT_RESULT).value;
    }

    /**
     * <pre>CLIENT_ERROR_CONFIGURATION
     * SQLite key: client_error_configuration
     * [en] Client user configuration file seems to be corrupted:
     * [de] Die Konfigurationsdatei des Client-Benutzers scheint beschädigt zu sein:</pre>
     * @return [en] Client user configuration file seems to be corrupted:, [de] Die Konfigurationsdatei des Client-Benutzers scheint beschädigt zu sein:
     */
    public static String getClientErrorConfiguration() {
        return get(CLIENT_ERROR_CONFIGURATION).value;
    }

    /**
     * <pre>COMMENT
     * SQLite key: comment
     * [en] Comment
     * [de] Kommentar</pre>
     * ATTENTION this value ('Comment') seems to be also defined under the key VERSIONCONTROLL_COMMENT!
     * @return [en] Comment, [de] Kommentar
     */
    public static String getComment() {
        return get(COMMENT).value;
    }

    /**
     * <pre>COMMON_CASE_DATA
     * SQLite key: commoncasedata
     * [en] Common Case Data
     * [de] Allgemeine Falldaten</pre>
     * @return [en] Common Case Data, [de] Allgemeine Falldaten
     */
    public static String getCommonCaseData() {
        return get(COMMON_CASE_DATA).value;
    }

    /**
     * <pre>CONFIRMATION_DEFAULT_TEXT
     * SQLite key: confirmation_default_text
     * [en] Do you really want to do this action?
     * [de] Wollen sie diese Aktion wirklich durchführen?</pre>
     * @return [en] Do you really want to do this action?, [de] Wollen sie diese Aktion wirklich durchführen?
     */
    public static String getConfirmationDefaultText() {
        return get(CONFIRMATION_DEFAULT_TEXT).value;
    }

    /**
     * <pre>CONFIRMATION_NO
     * SQLite key: confirmation_no
     * [en] No
     * [de] Nein</pre>
     * ATTENTION this value ('No') seems to be also defined under the key DRG_CORR_TYPE_NO!
     * @return [en] No, [de] Nein
     */
    public static String getConfirmationNo() {
        return get(CONFIRMATION_NO).value;
    }

    /**
     * <pre>CONFIRMATION_YES
     * SQLite key: confirmation_yes
     * [en] Yes
     * [de] Ja</pre>
     * @return [en] Yes, [de] Ja
     */
    public static String getConfirmationYes() {
        return get(CONFIRMATION_YES).value;
    }

    /**
     * <pre>CONFORMATION
     * SQLite key: conformation
     * [en] Confirmation
     * [de] Bestätigung</pre>
     * ATTENTION this value ('Confirmation') seems to be also defined under the key TEMPLATE_CONFIRMATION!
     * @return [en] Confirmation, [de] Bestätigung
     */
    public static String getConformation() {
        return get(CONFORMATION).value;
    }

    /**
     * <pre>CONTEXT_MENU_OPENPATIENT
     * SQLite key: contextmenu_openpatient
     * [en] open health status
     * [de] Gesundheitszustand öffnen</pre>
     * @return [en] open health status, [de] Gesundheitszustand öffnen
     */
    public static String getContextMenuOpenpatient() {
        return get(CONTEXT_MENU_OPENPATIENT).value;
    }

    /**
     * <pre>CONTINUE
     * SQLite key: continue
     * [en] Continue
     * [de] Weiter</pre>
     * @return [en] Continue, [de] Weiter
     */
    public static String getContinue() {
        return get(CONTINUE).value;
    }

    /**
     * <pre>COUNT_CASES
     * SQLite key: countcases
     * [en] Count Cases
     * [de] Anzahl Fälle</pre>
     * @return [en] Count Cases, [de] Anzahl Fälle
     */
    public static String getCountCases() {
        return get(COUNT_CASES).value;
    }

    /**
     * <pre>COUNT_PROC
     * SQLite key: countproc
     * [en] Count of procedures (∑ OPS)
     * [de] Anzahl der Prozeduren (Anz. OPS)</pre>
     * @return [en] Count of procedures (∑ OPS), [de] Anzahl der Prozeduren (Anz. OPS)
     */
    public static String getCountProc() {
        return get(COUNT_PROC).value;
    }

    public static Translation getCountProcObj() {
        return get(COUNT_PROC);
    }

    /**
     * <pre>COUNT_PROC_FROM
     * SQLite key: countproc_from
     * [en] ∑ OPS from
     * [de] Anz. OPS von</pre>
     * @return [en] ∑ OPS from, [de] Anz. OPS von
     */
    public static String getCountProcFrom() {
        return get(COUNT_PROC_FROM).value;
    }

    /**
     * <pre>COUNT_PROC_TO
     * SQLite key: countproc_to
     * [en] ∑ OPS to
     * [de] Anz. OPS bis</pre>
     * @return [en] ∑ OPS to, [de] Anz. OPS bis
     */
    public static String getCountProcTo() {
        return get(COUNT_PROC_TO).value;
    }

    /**
     * <pre>COUNT_SD
     * SQLite key: countsd
     * [en] Count of secondary diagnoses (∑ SD)
     * [de] Anzahl der Nebendiagnosen (Anz. ND)</pre>
     * @return [en] Count of secondary diagnoses (∑ SD), [de] Anzahl der Nebendiagnosen (Anz. ND)
     */
    public static String getCountSD() {
        return get(COUNT_SD).value;
    }

    public static Translation getCountSDObj() {
        return get(COUNT_SD);
    }

    /**
     * <pre>COUNT_SD_FROM
     * SQLite key: countsd_from
     * [en] ∑ SD from
     * [de] Anz. ND von</pre>
     * @return [en] ∑ SD from, [de] Anz. ND von
     */
    public static String getCountSDFrom() {
        return get(COUNT_SD_FROM).value;
    }

    /**
     * <pre>COUNT_SD_TO
     * SQLite key: countsd_to
     * [en] ∑ SD to
     * [de] Anz. ND bis</pre>
     * @return [en] ∑ SD to, [de] Anz. ND bis
     */
    public static String getCountSDTo() {
        return get(COUNT_SD_TO).value;
    }

    /**
     * <pre>COUNTRY
     * SQLite key: country
     * [en] Country
     * [de] Staat</pre>
     * @return [en] Country, [de] Staat
     */
    public static String getCountry() {
        return get(COUNTRY).value;
    }

    /**
     * <pre>COUNTRY_AUSTRIA
     * SQLite key: country_austria
     * [en] Austria
     * [de] Österreich</pre>
     * @return [en] Austria, [de] Österreich
     */
    public static String getCountryAustria() {
        return get(COUNTRY_AUSTRIA).value;
    }

    /**
     * <pre>COUNTRY_ENGLAND
     * SQLite key: country_england
     * [en] England
     * [de] England</pre>
     * @return [en] England, [de] England
     */
    public static String getCountryEngland() {
        return get(COUNTRY_ENGLAND).value;
    }

    /**
     * <pre>COUNTRY_FRANCE
     * SQLite key: country_france
     * [en] France
     * [de] Frankreich</pre>
     * @return [en] France, [de] Frankreich
     */
    public static String getCountryFrance() {
        return get(COUNTRY_FRANCE).value;
    }

    /**
     * <pre>COUNTRY_GERMANY
     * SQLite key: country_germany
     * [en] Germany
     * [de] Deutschland</pre>
     * @return [en] Germany, [de] Deutschland
     */
    public static String getCountryGermany() {
        return get(COUNTRY_GERMANY).value;
    }

    /**
     * <pre>COUNTRY_SWITZERLAND
     * SQLite key: country_switzerland
     * [en] Switzerland
     * [de] Schweiz</pre>
     * @return [en] Switzerland, [de] Schweiz
     */
    public static String getCountrySwitzerland() {
        return get(COUNTRY_SWITZERLAND).value;
    }

    /**
     * <pre>COURT_FILE_NUMBER
     * SQLite key: courtfilenumber
     * [en] court file number
     * [de] Aktenzeichen (Gericht) (Akt.-Z. (Gericht))</pre>
     * @return [en] court file number, [de] Aktenzeichen (Gericht) (Akt.-Z. (Gericht))
     */
    public static String getCourtFileNumber() {
        return get(COURT_FILE_NUMBER).value;
    }

    public static Translation getCourtFileNumberObj() {
        return get(COURT_FILE_NUMBER);
    }

    /**
     * <pre>CREATE
     * SQLite key: create
     * [en] Create
     * [de] Anlegen</pre>
     * ATTENTION this value ('Create') seems to be also defined under the key EVENT_OPERATION_CREATE!
     * @return [en] Create, [de] Anlegen
     */
    public static String getCreate() {
        return get(CREATE).value;
    }

    /**
     * <pre>CREATED_FROM
     * SQLite key: createdfrom
     * [en] from {0}
     * [de] von {0}</pre>
     * ATTENTION this value ('from {0}') seems to be also defined under the key MODIFIED_FROM!
     * @param pParams placeholder replacements
     * @return [en] from {0}, [de] von {0}
     */
    public static String getCreatedFrom(final Object... pParams) {
        return get(CREATED_FROM, pParams).value;
    }

    /**
     * <pre>CREATED_ON
     * SQLite key: createdon
     * [en] Created on {0}
     * [de] Angelegt am {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Created on {0}, [de] Angelegt am {0}
     */
    public static String getCreatedOn(final Object... pParams) {
        return get(CREATED_ON, pParams).value;
    }

    /**
     * <pre>CREATION_DATE
     * SQLite key: creationdate
     * [en] Creation Date (Creation Date)
     * [de] Anlagedatum des Falles (Anlagedatum)</pre>
     * @return [en] Creation Date (Creation Date), [de] Anlagedatum des Falles (Anlagedatum)
     */
    public static String getCreationDate() {
        return get(CREATION_DATE).value;
    }

    public static Translation getCreationDateObj() {
        return get(CREATION_DATE);
    }

    /**
     * <pre>CREATION_DATE_DOCUMENT
     * SQLite key: creationdate_document
     * [en] Creation Date
     * [de] Anlagedatum</pre>
     * @return [en] Creation Date, [de] Anlagedatum
     */
    public static String getCreationDateDocument() {
        return get(CREATION_DATE_DOCUMENT).value;
    }

    /**
     * <pre>CREATION_DATE_FROM
     * SQLite key: creationdate_from
     * [en] Creation Date from
     * [de] Anlagedatum von</pre>
     * @return [en] Creation Date from, [de] Anlagedatum von
     */
    public static String getCreationDateFrom() {
        return get(CREATION_DATE_FROM).value;
    }

    /**
     * <pre>CREATION_DATE_TO
     * SQLite key: creationdate_to
     * [en] Creation Date to
     * [de] Anlagedatum bis</pre>
     * @return [en] Creation Date to, [de] Anlagedatum bis
     */
    public static String getCreationDateTo() {
        return get(CREATION_DATE_TO).value;
    }

    /**
     * <pre>CURRENCY_SYMBOL
     * SQLite key: currency_symbol
     * [en] €
     * [de] €</pre>
     * @return [en] €, [de] €
     */
    public static String getCurrencySymbol() {
        return get(CURRENCY_SYMBOL).value;
    }

    /**
     * <pre>CW
     * SQLite key: cw
     * [en] CW
     * [de] CW</pre>
     * ATTENTION this value ('CW') seems to be also defined under the key CASE_RESOLVE_CW!
     * @return [en] CW, [de] CW
     */
    public static String getCw() {
        return get(CW).value;
    }

    /**
     * <pre>DAILY_FEE
     * SQLite key: dailyfee
     * [en] Daily Fee
     * [de] Tagesentgelt</pre>
     * @return [en] Daily Fee, [de] Tagesentgelt
     */
    public static String getDailyFee() {
        return get(DAILY_FEE).value;
    }

    /**
     * <pre>DAILY_FEE_MATH_PEPP
     * SQLite key: dailyfee_math_pepp
     * [en] CW ({0}) X ({1}) Days X Baserate ({2}) from {3} to {4}
     * [de] CW ({0}) X ({1}) Tage X Baserate ({2}) von {3} bis {4}</pre>
     * @param pParams placeholder replacements
     * @return [en] CW ({0}) X ({1}) Days X Baserate ({2}) from {3} to {4}, [de] CW ({0}) X ({1}) Tage X Baserate ({2}) von {3} bis {4}
     */
    public static String getDailyFeeMathPepp(final Object... pParams) {
        return get(DAILY_FEE_MATH_PEPP, pParams).value;
    }

    /**
     * <pre>DAILY_FEE_VALUE
     * SQLite key: dailyfeevalue
     * [en] DF-Value
     * [de] ET-Betrag</pre>
     * @return [en] DF-Value, [de] ET-Betrag
     */
    public static String getDailyFeeValue() {
        return get(DAILY_FEE_VALUE).value;
    }

    /**
     * <pre>DATA_RECORD_CORRECTION_DEADLINE
     * SQLite key: data_record_correction_deadline
     * [de] Frist bis zur Datenkorrektur im Vorverfahren (Frist Dat.-Korrektur)</pre>
     * @return [de] Frist bis zur Datenkorrektur im Vorverfahren (Frist Dat.-Korrektur)
     */
    public static String getDataRecordCorrectionDeadline() {
        return get(DATA_RECORD_CORRECTION_DEADLINE).value;
    }

    public static Translation getDataRecordCorrectionDeadlineObj() {
        return get(DATA_RECORD_CORRECTION_DEADLINE);
    }

    /**
     * <pre>DATA_RECORD_CORRECTION_DEADLINE_DAYS
     * SQLite key: data_record_correction_deadline_days
     * [de] Tage bis Datenkorrektur Vorverfahren (Datenkorrektur)</pre>
     * @return [de] Tage bis Datenkorrektur Vorverfahren (Datenkorrektur)
     */
    public static String getDataRecordCorrectionDeadlineDays() {
        return get(DATA_RECORD_CORRECTION_DEADLINE_DAYS).value;
    }

    public static Translation getDataRecordCorrectionDeadlineDaysObj() {
        return get(DATA_RECORD_CORRECTION_DEADLINE_DAYS);
    }

    /**
     * <pre>DATA_RECORD_CORRECTION_DEADLINE_FROM
     * SQLite key: data_record_correction_deadline_from
     * [de] Frist Dat.-Korrektur von</pre>
     * @return [de] Frist Dat.-Korrektur von
     */
    public static String getDataRecordCorrectionDeadlineFrom() {
        return get(DATA_RECORD_CORRECTION_DEADLINE_FROM).value;
    }

    /**
     * <pre>DATA_RECORD_CORRECTION_DEADLINE_TO
     * SQLite key: data_record_correction_deadline_to
     * [de] Frist Dat.-Korrektur bis</pre>
     * @return [de] Frist Dat.-Korrektur bis
     */
    public static String getDataRecordCorrectionDeadlineTo() {
        return get(DATA_RECORD_CORRECTION_DEADLINE_TO).value;
    }

    /**
     * <pre>DATE_FORMAT
     * SQLite key: dateformat
     * [en] yyyy-MM-dd
     * [de] dd.MM.yyyy</pre>
     * @return [en] yyyy-MM-dd, [de] dd.MM.yyyy
     */
    public static String getDateFormat() {
        return get(DATE_FORMAT).value;
    }

    /**
     * <pre>DATE_FORMAT_DEVIDER
     * SQLite key: dateformat_devider
     * [en] -
     * [de] .</pre>
     * @return [en] -, [de] .
     */
    public static String getDateFormatDevider() {
        return get(DATE_FORMAT_DEVIDER).value;
    }

    /**
     * <pre>DATE_OF_ACCIDENT
     * SQLite key: dateofaccident
     * [en] Date of Accident
     * [de] Unfalldatum</pre>
     * @return [en] Date of Accident, [de] Unfalldatum
     */
    public static String getDateOfAccident() {
        return get(DATE_OF_ACCIDENT).value;
    }

    /**
     * <pre>DATE_OF_ADMISSION
     * SQLite key: dateofadmission
     * [en] Admission Date
     * [de] Aufnahmetag</pre>
     * @return [en] Admission Date, [de] Aufnahmetag
     */
    public static String getDateOfAdmission() {
        return get(DATE_OF_ADMISSION).value;
    }

    /**
     * <pre>DATE_OF_BIRTH
     * SQLite key: dateofbirth
     * [en] Date of Birth (Birth)
     * [de] Geburtsdatum (Geb.-Datum)</pre>
     * @return [en] Date of Birth (Birth), [de] Geburtsdatum (Geb.-Datum)
     */
    public static String getDateOfBirth() {
        return get(DATE_OF_BIRTH).value;
    }

    public static Translation getDateOfBirthObj() {
        return get(DATE_OF_BIRTH);
    }

    /**
     * <pre>DATE_OF_BIRTH_FROM
     * SQLite key: dateofbirth_from
     * [en] Birth from
     * [de] Geb.-Datum von</pre>
     * @return [en] Birth from, [de] Geb.-Datum von
     */
    public static String getDateOfBirthFrom() {
        return get(DATE_OF_BIRTH_FROM).value;
    }

    /**
     * <pre>DATE_OF_BIRTH_TO
     * SQLite key: dateofbirth_to
     * [en] Birth to
     * [de] Geb.-Datum bis</pre>
     * @return [en] Birth to, [de] Geb.-Datum bis
     */
    public static String getDateOfBirthTo() {
        return get(DATE_OF_BIRTH_TO).value;
    }

    /**
     * <pre>DATE_TIME_FORMAT
     * SQLite key: datetimeformat
     * [en] yyyy-MM-dd HH:mm:ss
     * [de] dd.MM.yyyy HH:mm:ss</pre>
     * @return [en] yyyy-MM-dd HH:mm:ss, [de] dd.MM.yyyy HH:mm:ss
     */
    public static String getDateTimeFormat() {
        return get(DATE_TIME_FORMAT).value;
    }

    /**
     * <pre>DATES
     * SQLite key: dates
     * [en] Dates
     * [de] Datumsangaben</pre>
     * @return [en] Dates, [de] Datumsangaben
     */
    public static String getDates() {
        return get(DATES).value;
    }

    /**
     * <pre>DAY_CARE
     * SQLite key: daycare
     * [en] DayCare
     * [de] Teilstationär</pre>
     * @return [en] DayCare, [de] Teilstationär
     */
    public static String getDayCare() {
        return get(DAY_CARE).value;
    }

    /**
     * <pre>DAY_FRIDAY
     * SQLite key: day_friday
     * [en] Friday (Fr)
     * [de] Freitag (Fr)</pre>
     * @return [en] Friday (Fr), [de] Freitag (Fr)
     */
    public static String getDayFriday() {
        return get(DAY_FRIDAY).value;
    }

    public static Translation getDayFridayObj() {
        return get(DAY_FRIDAY);
    }

    /**
     * <pre>DAY_MONDAY
     * SQLite key: day_monday
     * [en] Monday (Mo)
     * [de] Montag (Mo)</pre>
     * @return [en] Monday (Mo), [de] Montag (Mo)
     */
    public static String getDayMonday() {
        return get(DAY_MONDAY).value;
    }

    public static Translation getDayMondayObj() {
        return get(DAY_MONDAY);
    }

    /**
     * <pre>DAY_SATURDAY
     * SQLite key: day_saturday
     * [en] Saturday (Sa)
     * [de] Samstag (Sa)</pre>
     * @return [en] Saturday (Sa), [de] Samstag (Sa)
     */
    public static String getDaySaturday() {
        return get(DAY_SATURDAY).value;
    }

    public static Translation getDaySaturdayObj() {
        return get(DAY_SATURDAY);
    }

    /**
     * <pre>DAY_SUNDAY
     * SQLite key: day_sunday
     * [en] Sunday (Su)
     * [de] Sonntag (So)</pre>
     * @return [en] Sunday (Su), [de] Sonntag (So)
     */
    public static String getDaySunday() {
        return get(DAY_SUNDAY).value;
    }

    public static Translation getDaySundayObj() {
        return get(DAY_SUNDAY);
    }

    /**
     * <pre>DAY_THURSDAY
     * SQLite key: day_thursday
     * [en] Thursday (Th)
     * [de] Donnerstag (Do)</pre>
     * @return [en] Thursday (Th), [de] Donnerstag (Do)
     */
    public static String getDayThursday() {
        return get(DAY_THURSDAY).value;
    }

    public static Translation getDayThursdayObj() {
        return get(DAY_THURSDAY);
    }

    /**
     * <pre>DAY_TUESDAY
     * SQLite key: day_tuesday
     * [en] Tuesday (Tu)
     * [de] Dienstag (Di)</pre>
     * @return [en] Tuesday (Tu), [de] Dienstag (Di)
     */
    public static String getDayTuesday() {
        return get(DAY_TUESDAY).value;
    }

    public static Translation getDayTuesdayObj() {
        return get(DAY_TUESDAY);
    }

    /**
     * <pre>DAY_WEDNESDAY
     * SQLite key: day_wednesday
     * [en] Wednesday (We)
     * [de] Mittwoch (Mi)</pre>
     * @return [en] Wednesday (We), [de] Mittwoch (Mi)
     */
    public static String getDayWednesday() {
        return get(DAY_WEDNESDAY).value;
    }

    public static Translation getDayWednesdayObj() {
        return get(DAY_WEDNESDAY);
    }

    /**
     * <pre>DAYS_CALCULATED
     * SQLite key: days_calculated
     * [en] Days calculated
     * [de] Berechnete Abwesenheit</pre>
     * @return [en] Days calculated, [de] Berechnete Abwesenheit
     */
    public static String getDaysCalculated() {
        return get(DAYS_CALCULATED).value;
    }

    /**
     * <pre>DAYS_INTENSIV
     * SQLite key: daysintensiv
     * [en] Days intensiv
     * [de] Tage Intensiv</pre>
     * @return [en] Days intensiv, [de] Tage Intensiv
     */
    public static String getDaysIntensiv() {
        return get(DAYS_INTENSIV).value;
    }

    /**
     * <pre>DAYS_SIMUL_NO_DEDUCTION_CARE
     * SQLite key: days_simul_no_deduction_care
     * [en] without deduction care
     * [de] ohne Pflege</pre>
     * @return [en] without deduction care, [de] ohne Pflege
     */
    public static String getDaysSimulNoDeductionCare() {
        return get(DAYS_SIMUL_NO_DEDUCTION_CARE).value;
    }

    /**
     * <pre>DAYS_SIMUL_WITH_DEDUCTION_CARE
     * SQLite key: days_simul_with_deduction_care
     * [en] with deduction care
     * [de] mit Pflege</pre>
     * @return [en] with deduction care, [de] mit Pflege
     */
    public static String getDaysSimulWithDeductionCare() {
        return get(DAYS_SIMUL_WITH_DEDUCTION_CARE).value;
    }

    /**
     * <pre>DAYS_SIMULATED
     * SQLite key: days_simulated
     * [en] Days simulated
     * [de] Simulationstage</pre>
     * @return [en] Days simulated, [de] Simulationstage
     */
    public static String getDaysSimulated() {
        return get(DAYS_SIMULATED).value;
    }

    /**
     * <pre>DAYS_STAY
     * SQLite key: days_stay
     * [en] Days' stay
     * [de] Belegtage</pre>
     * @return [en] Days' stay, [de] Belegtage
     */
    public static String getDaysStay() {
        return get(DAYS_STAY).value;
    }

    /**
     * <pre>DAYS_STAY_PEPP
     * SQLite key: days_stay_pepp
     * [de] Berechnungstage</pre>
     * @return [de] Berechnungstage
     */
    public static String getDaysStayPepp() {
        return get(DAYS_STAY_PEPP).value;
    }

    /**
     * <pre>DAYS_SURCHARGE
     * SQLite key: dayssurcharge
     * [en] Days Surcharge
     * [de] Zuschlagstage</pre>
     * @return [en] Days Surcharge, [de] Zuschlagstage
     */
    public static String getDaysSurcharge() {
        return get(DAYS_SURCHARGE).value;
    }

    /**
     * <pre>DAYS_UNBILLED_COMMENT_DIALOG
     * SQLite key: daysunbilled_comment_dialog
     * [de] Hinweis</pre>
     * @return [de] Hinweis
     */
    public static String getDaysUnbilledCommentDialog() {
        return get(DAYS_UNBILLED_COMMENT_DIALOG).value;
    }

    /**
     * <pre>DAYS_UNBILLED_DIALOG
     * SQLite key: daysunbilled_dialog
     * [en] Unbilled days may not exceed the Length Of Stay(LOS)
     * [de] Anzahl Tage der Abwesenheit darf nicht größer als die Anzahl der Belegtage sein.</pre>
     * @return [en] Unbilled days may not exceed the Length Of Stay(LOS), [de] Anzahl Tage der Abwesenheit darf nicht größer als die Anzahl der Belegtage sein.
     */
    public static String getDaysUnbilledDialog() {
        return get(DAYS_UNBILLED_DIALOG).value;
    }

    /**
     * <pre>DAYS_UNBILLED_DIALOG_CONFIRM
     * SQLite key: daysunbilled_dialog_confirm
     * [en] Information
     * [de] Information</pre>
     * ATTENTION this value ('Information') seems to be also defined under the key RULE_FILTER_DIALOG_INFORMATION_RULES!
     * @return [en] Information, [de] Information
     */
    public static String getDaysUnbilledDialogConfirm() {
        return get(DAYS_UNBILLED_DIALOG_CONFIRM).value;
    }

    /**
     * <pre>DEADLINES_ERROR
     * SQLite key: deadlines_error
     * [en] List of deadlines is empty. Please configure valid deadlines!!
     * [de] Die Liste der Fristen ist leer. Bitte konfigurieren Sie gültige Fristen in den Stammdaten!</pre>
     * @return [en] List of deadlines is empty. Please configure valid deadlines!!, [de] Die Liste der Fristen ist leer. Bitte konfigurieren Sie gültige Fristen in den Stammdaten!
     */
    public static String getDeadlinesError() {
        return get(DEADLINES_ERROR).value;
    }

    /**
     * <pre>DEATAIL_CASE_DATA
     * SQLite key: deatailcasedata
     * [en] Detailed case data
     * [de] Detailed case data</pre>
     * @return [en] Detailed case data, [de] Detailed case data
     */
    public static String getDeatailCaseData() {
        return get(DEATAIL_CASE_DATA).value;
    }

    /**
     * <pre>DEDUCTION
     * SQLite key: deduction
     * [en] Deduction
     * [de] Abschlag</pre>
     * ATTENTION this value ('Deduction') seems to be also defined under the key DRG_CORR_TYPE_DEDUCTION!
     * @return [en] Deduction, [de] Abschlag
     */
    public static String getDeduction() {
        return get(DEDUCTION).value;
    }

    /**
     * <pre>DELETE
     * SQLite key: delete
     * [en] Delete
     * [de] Löschen</pre>
     * @return [en] Delete, [de] Löschen
     */
    public static String getDelete() {
        return get(DELETE).value;
    }

    /**
     * <pre>DELETE_DOCUMENT
     * SQLite key: delete_document
     * [en] Do you really want to delete the document?
     * [de] Wollen Sie das Dokument wirklich löschen?</pre>
     * @return [en] Do you really want to delete the document?, [de] Wollen Sie das Dokument wirklich löschen?
     */
    public static String getDeleteDocument() {
        return get(DELETE_DOCUMENT).value;
    }

    /**
     * <pre>DELETE_ERROR_CASE_MAIN_CASE
     * SQLite key: delete_error_case_maincase
     * [en] Can not delete service with main case.
     * [de] Löschen einer Leistung mit einem Hauptfall ist nicht möglich.</pre>
     * @return [en] Can not delete service with main case., [de] Löschen einer Leistung mit einem Hauptfall ist nicht möglich.
     */
    public static String getDeleteErrorCaseMainCase() {
        return get(DELETE_ERROR_CASE_MAIN_CASE).value;
    }

    /**
     * <pre>DELETE_REMINDER
     * SQLite key: delete_reminder
     * [en] Do you really want to delete the reminder?
     * [de] Wollen Sie die Wiedervorlage wirklich löschen?</pre>
     * @return [en] Do you really want to delete the reminder?, [de] Wollen Sie die Wiedervorlage wirklich löschen?
     */
    public static String getDeleteReminder() {
        return get(DELETE_REMINDER).value;
    }

    /**
     * <pre>DELETE_SERVICE
     * SQLite key: delete_service
     * [en] Do you really want to delete the service?
     * [de] Wollen Sie die Leistung wirklich entfernen?</pre>
     * @return [en] Do you really want to delete the service?, [de] Wollen Sie die Leistung wirklich entfernen?
     */
    public static String getDeleteService() {
        return get(DELETE_SERVICE).value;
    }

    /**
     * <pre>DEPARTMENT_GROUPING
     * SQLite key: departmentgrouping
     * [en] Department Grouping
     * [de] Abteilungs-Grouping</pre>
     * @return [en] Department Grouping, [de] Abteilungs-Grouping
     */
    public static String getDepartmentGrouping() {
        return get(DEPARTMENT_GROUPING).value;
    }

    /**
     * <pre>DEPARTMENT_MAIN_DIAGNOSIS
     * SQLite key: department_maindiagnosis
     * [en] Department MD (DMD)
     * [de] Fachabteilungs-Hauptdiagnose (FAB-HD)</pre>
     * @return [en] Department MD (DMD), [de] Fachabteilungs-Hauptdiagnose (FAB-HD)
     */
    public static String getDepartmentMainDiagnosis() {
        return get(DEPARTMENT_MAIN_DIAGNOSIS).value;
    }

    public static Translation getDepartmentMainDiagnosisObj() {
        return get(DEPARTMENT_MAIN_DIAGNOSIS);
    }

    /**
     * <pre>DEPARTMENT_MAIN_DIAGNOSIS_ERROR
     * SQLite key: department_maindiagnosis_error
     * [en] No DMD was set
     * [de] Es wurde keine BHD gesetzt</pre>
     * @return [en] No DMD was set, [de] Es wurde keine BHD gesetzt
     */
    public static String getDepartmentMainDiagnosisError() {
        return get(DEPARTMENT_MAIN_DIAGNOSIS_ERROR).value;
    }

    /**
     * <pre>DEPARTMENT_MAIN_DIAGNOSIS_ERROR_INDEX
     * SQLite key: department_maindiagnosis_error_index
     * [en] No DMD was set on Position {0}
     * [de] Es wurde keine BHD an der Position {0} gesetzt</pre>
     * @param pParams placeholder replacements
     * @return [en] No DMD was set on Position {0}, [de] Es wurde keine BHD an der Position {0} gesetzt
     */
    public static String getDepartmentMainDiagnosisErrorIndex(final Object... pParams) {
        return get(DEPARTMENT_MAIN_DIAGNOSIS_ERROR_INDEX, pParams).value;
    }

    /**
     * <pre>DEPARTMENT_MAIN_DIAGNOSIS_TOOLTIP
     * SQLite key: department_maindiagnosis_tooltip
     * [en] DMD for department: {0}
     * [de] BHD für FAB: {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] DMD for department: {0}, [de] BHD für FAB: {0}
     */
    public static String getDepartmentMainDiagnosisTooltip(final Object... pParams) {
        return get(DEPARTMENT_MAIN_DIAGNOSIS_TOOLTIP, pParams).value;
    }

    /**
     * <pre>DEPARTMENT_TITLE
     * SQLite key: department_title
     * [en] Department
     * [de] Abteilung § 301*</pre>
     * @return [en] Department, [de] Abteilung § 301*
     */
    public static String getDepartmentTitle() {
        return get(DEPARTMENT_TITLE).value;
    }

    /**
     * <pre>DEPARTMENT_TYPE_MAIN_DEPARTMENT
     * SQLite key: department_type_maindepartment
     * [en] MD
     * [de] HA</pre>
     * ATTENTION this value ('MD') seems to be also defined under the key CASE_RESOLVE_MD! this value ('MD') seems to be also defined under the key REQUEST_TYPE_MDK!
     * @return [en] MD, [de] HA
     */
    public static String getDepartmentTypeMainDepartment() {
        return get(DEPARTMENT_TYPE_MAIN_DEPARTMENT).value;
    }

    /**
     * <pre>DEPARTMENT_TYPE_SLIP_DEPARTMENT
     * SQLite key: department_type_slipdepartment
     * [en] SD
     * [de] BA</pre>
     * @return [en] SD, [de] BA
     */
    public static String getDepartmentTypeSlipDepartment() {
        return get(DEPARTMENT_TYPE_SLIP_DEPARTMENT).value;
    }

    /**
     * <pre>DEPARTMENT_TYPE_SPECIAL_INSTITUTION
     * SQLite key: department_type_specialinstitution
     * [en] SI
     * [de] BE</pre>
     * @return [en] SI, [de] BE
     */
    public static String getDepartmentTypeSpecialInstitution() {
        return get(DEPARTMENT_TYPE_SPECIAL_INSTITUTION).value;
    }

    /**
     * <pre>DEPARTMENT_VALIDATION_ERROR
     * SQLite key: department_validation_error
     * [en] Additional information required
     * [de] Zusätzliche Informationen sind erforderlich</pre>
     * @return [en] Additional information required, [de] Zusätzliche Informationen sind erforderlich
     */
    public static String getDepartmentValidationError() {
        return get(DEPARTMENT_VALIDATION_ERROR).value;
    }

    /**
     * <pre>DEPARTMENT_VALIDATION_ICD_COUNT_ERROR
     * SQLite key: department_validation_icd_count_error
     * [en] One or more diagnoses required
     * [de] Es sind eine oder mehr Diagnosen erforderlich</pre>
     * @return [en] One or more diagnoses required, [de] Es sind eine oder mehr Diagnosen erforderlich
     */
    public static String getDepartmentValidationIcdCountError() {
        return get(DEPARTMENT_VALIDATION_ICD_COUNT_ERROR).value;
    }

    /**
     * <pre>DEPARTMENTS
     * SQLite key: departments
     * [en] Departments
     * [de] Abteilungen</pre>
     * ATTENTION this value ('Departments') seems to be also defined under the key CATALOG_DOWNLOAD_DEPARTMENTS!
     * @return [en] Departments, [de] Abteilungen
     */
    public static String getDepartments() {
        return get(DEPARTMENTS).value;
    }

    /**
     * <pre>DEPARTMENTS_WARD_DATE_FORMAT
     * SQLite key: departments_ward_dateformat
     * [en] dd/MM/yyyy HH:mm
     * [de] dd.MM.yyyy HH:mm</pre>
     * @return [en] dd/MM/yyyy HH:mm, [de] dd.MM.yyyy HH:mm
     */
    public static String getDepartmentsWardDateFormat() {
        return get(DEPARTMENTS_WARD_DATE_FORMAT).value;
    }

    /**
     * <pre>DESCRIPTION
     * SQLite key: description
     * [en] Description
     * [de] Beschreibung</pre>
     * ATTENTION this value ('Description') seems to be also defined under the key CASE_RESOLVE_RULES_DESCRIPTION!
     * @return [en] Description, [de] Beschreibung
     */
    public static String getDescription() {
        return get(DESCRIPTION).value;
    }

    /**
     * <pre>DETAIL_CASE_DATA
     * SQLite key: detailcasedata
     * [de] Detail Falldaten</pre>
     * @return [de] Detail Falldaten
     */
    public static String getDetailCaseData() {
        return get(DETAIL_CASE_DATA).value;
    }

    /**
     * <pre>DETAILED_VIEW_MAIN_LABEL
     * SQLite key: detailedviewmainlabel
     * [en] Details about selected event
     * [de] Details zum ausgewählten Ereignis</pre>
     * @return [en] Details about selected event, [de] Details zum ausgewählten Ereignis
     */
    public static String getDetailedViewMainLabel() {
        return get(DETAILED_VIEW_MAIN_LABEL).value;
    }

    /**
     * <pre>DF_VALUE_TOOLTIP
     * SQLite key: dfvalue_tooltip
     * [en] {0} ({1} x {2}) x {3} from {4} to {5}
     * [de] {0} ({1} x {2}) x {3} von {4} bis {5}</pre>
     * @param pParams placeholder replacements
     * @return [en] {0} ({1} x {2}) x {3} from {4} to {5}, [de] {0} ({1} x {2}) x {3} von {4} bis {5}
     */
    public static String getDfValueTooltip(final Object... pParams) {
        return get(DF_VALUE_TOOLTIP, pParams).value;
    }

    /**
     * <pre>DIAGNOSIS
     * SQLite key: diagnosis
     * [en] Diagnosis
     * [de] Diagnose</pre>
     * ATTENTION this value ('Diagnosis') seems to be also defined under the key ACG_INDEX_TYPE_ICD!
     * @return [en] Diagnosis, [de] Diagnose
     */
    public static String getDiagnosis() {
        return get(DIAGNOSIS).value;
    }

    /**
     * <pre>DIAGNOSIS_REF_TYPE_ADDITIONAL_FROM
     * SQLite key: diagnosis_reftype_additionalfrom
     * [en] Additional diagnose from
     * [de] Zusatzdiagnose von</pre>
     * @return [en] Additional diagnose from, [de] Zusatzdiagnose von
     */
    public static String getDiagnosisRefTypeAdditionalFrom() {
        return get(DIAGNOSIS_REF_TYPE_ADDITIONAL_FROM).value;
    }

    /**
     * <pre>DIAGNOSIS_REF_TYPE_ADDITIONAL_TO
     * SQLite key: diagnosis_reftype_additionalto
     * [en] Additional diagnose to selected ICD
     * [de] Zusatzdiagnose zu gewählter ICD</pre>
     * @return [en] Additional diagnose to selected ICD, [de] Zusatzdiagnose zu gewählter ICD
     */
    public static String getDiagnosisRefTypeAdditionalTo() {
        return get(DIAGNOSIS_REF_TYPE_ADDITIONAL_TO).value;
    }

    /**
     * <pre>DIAGNOSIS_REF_TYPE_ASTERISK_FROM
     * SQLite key: diagnosis_reftype_asteriskfrom
     * [en] Asterisk diagnose from
     * [de] Sterndiagnose von</pre>
     * @return [en] Asterisk diagnose from, [de] Sterndiagnose von
     */
    public static String getDiagnosisRefTypeAsteriskFrom() {
        return get(DIAGNOSIS_REF_TYPE_ASTERISK_FROM).value;
    }

    /**
     * <pre>DIAGNOSIS_REF_TYPE_DAGGER_FROM
     * SQLite key: diagnosis_reftype_daggerfrom
     * [en] Dagger diagnose from
     * [de] Kreuzdiagnose von</pre>
     * @return [en] Dagger diagnose from, [de] Kreuzdiagnose von
     */
    public static String getDiagnosisRefTypeDaggerFrom() {
        return get(DIAGNOSIS_REF_TYPE_DAGGER_FROM).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING
     * SQLite key: dialog_batch_grouping
     * [en] Batch-Results
     * [de] Batch-Ergebnisse</pre>
     * @return [en] Batch-Results, [de] Batch-Ergebnisse
     */
    public static String getDialogBatchGrouping() {
        return get(DIALOG_BATCH_GROUPING).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_CMIEFF
     * SQLite key: dialog_batch_grouping_cmieff
     * [en] CMI eff.
     * [de] CMI eff.</pre>
     * @return [en] CMI eff., [de] CMI eff.
     */
    public static String getDialogBatchGroupingCmieff() {
        return get(DIALOG_BATCH_GROUPING_CMIEFF).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_CMIEFF_TOOLTIP
     * SQLite key: dialog_batch_grouping_cmieff_tooltip
     * [en] Sum of CW of all cases, after correction with catalog data
     * [de] Summe aller Case weights aller gegroupten Fälle nach Berücksichtigung aller Zu- oder Abschläge</pre>
     * @return [en] Sum of CW of all cases, after correction with catalog data, [de] Summe aller Case weights aller gegroupten Fälle nach Berücksichtigung aller Zu- oder Abschläge
     */
    public static String getDialogBatchGroupingCmieffTooltip() {
        return get(DIALOG_BATCH_GROUPING_CMIEFF_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_CWDIFFNEG
     * SQLite key: dialog_batch_grouping_cwdiffneg
     * [en] CW-Difference negativ
     * [de] CW-Differenz negativ</pre>
     * @return [en] CW-Difference negativ, [de] CW-Differenz negativ
     */
    public static String getDialogBatchGroupingCwdiffneg() {
        return get(DIALOG_BATCH_GROUPING_CWDIFFNEG).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_CWDIFFNEG_TOOLTIP
     * SQLite key: dialog_batch_grouping_cwdiffneg_tooltip
     * [en] Sum of max negativ dCW of all cases, computed with rules (Role:{0})
     * [de] Summe über alle Fälle: Durch die Prüfregeln ermittelter maximaler negativer dCW eines Falles (Rolle:{0})</pre>
     * @param pParams placeholder replacements
     * @return [en] Sum of max negativ dCW of all cases, computed with rules (Role:{0}), [de] Summe über alle Fälle: Durch die Prüfregeln ermittelter maximaler negativer dCW eines Falles (Rolle:{0})
     */
    public static String getDialogBatchGroupingCwdiffnegTooltip(final Object... pParams) {
        return get(DIALOG_BATCH_GROUPING_CWDIFFNEG_TOOLTIP, pParams).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_CWDIFFPOS
     * SQLite key: dialog_batch_grouping_cwdiffpos
     * [en] CW-Difference positiv
     * [de] CW-Differenz positiv</pre>
     * @return [en] CW-Difference positiv, [de] CW-Differenz positiv
     */
    public static String getDialogBatchGroupingCwdiffpos() {
        return get(DIALOG_BATCH_GROUPING_CWDIFFPOS).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_CWDIFFPOS_TOOLTIP
     * SQLite key: dialog_batch_grouping_cwdiffpos_tooltip
     * [en] Sum of max positiv dCW of all cases, computed with rules (Role:{0})
     * [de] Summe über alle Fälle: Durch die Prüfregeln ermittelter maximaler positiver dCW eines Falles (Rolle:{0})</pre>
     * @param pParams placeholder replacements
     * @return [en] Sum of max positiv dCW of all cases, computed with rules (Role:{0}), [de] Summe über alle Fälle: Durch die Prüfregeln ermittelter maximaler positiver dCW eines Falles (Rolle:{0})
     */
    public static String getDialogBatchGroupingCwdiffposTooltip(final Object... pParams) {
        return get(DIALOG_BATCH_GROUPING_CWDIFFPOS_TOOLTIP, pParams).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_DAYPRECARE
     * SQLite key: dialog_batch_grouping_dayprecare
     * [en] Day/Pre-Care
     * [de] teil/vorstationäre</pre>
     * @return [en] Day/Pre-Care, [de] teil/vorstationäre
     */
    public static String getDialogBatchGroupingDayprecare() {
        return get(DIALOG_BATCH_GROUPING_DAYPRECARE).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_DAYPRECARE_TOOLTIP
     * SQLite key: dialog_batch_grouping_dayprecare_tooltip
     * [en] Count of pre-care cases
     * [de] Anzahl der Fälle, die nicht vollstationär aufgenommen wurden</pre>
     * @return [en] Count of pre-care cases, [de] Anzahl der Fälle, die nicht vollstationär aufgenommen wurden
     */
    public static String getDialogBatchGroupingDayprecareTooltip() {
        return get(DIALOG_BATCH_GROUPING_DAYPRECARE_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_DAYSEXTERN
     * SQLite key: dialog_batch_grouping_daysextern
     * [en] Days extern
     * [de] Belegungstage ausserhalb</pre>
     * @return [en] Days extern, [de] Belegungstage ausserhalb
     */
    public static String getDialogBatchGroupingDaysextern() {
        return get(DIALOG_BATCH_GROUPING_DAYSEXTERN).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_DAYSEXTERN_TOOLTIP
     * SQLite key: dialog_batch_grouping_daysextern_tooltip
     * [en] Sum of days, which are not considered due to legal regulations
     * [de] entsprechen den Tagen außerhalb der Gültigkeit des KHEntgG, also z.B. BPflV</pre>
     * @return [en] Sum of days, which are not considered due to legal regulations, [de] entsprechen den Tagen außerhalb der Gültigkeit des KHEntgG, also z.B. BPflV
     */
    public static String getDialogBatchGroupingDaysexternTooltip() {
        return get(DIALOG_BATCH_GROUPING_DAYSEXTERN_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_DRGRESULT
     * SQLite key: dialog_batch_grouping_drgresult
     * [en] Drg-Result
     * [de] DRG-Ergebnis</pre>
     * @return [en] Drg-Result, [de] DRG-Ergebnis
     */
    public static String getDialogBatchGroupingDrgresult() {
        return get(DIALOG_BATCH_GROUPING_DRGRESULT).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_ERRORDRGPEPP
     * SQLite key: dialog_batch_grouping_errordrgpepp
     * [en] Error DRG/PEPP
     * [de] Fehler DRG/PEPP</pre>
     * @return [en] Error DRG/PEPP, [de] Fehler DRG/PEPP
     */
    public static String getDialogBatchGroupingErrordrgpepp() {
        return get(DIALOG_BATCH_GROUPING_ERRORDRGPEPP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_ERRORDRGPEPP_TOOLTIP
     * SQLite key: dialog_batch_grouping_errordrgpepp_tooltip
     * [en] Count of cases, with error DRG or PEPP
     * [de] Anzahl der Fälle, für die ein Fehler DRG oder PEPP  ermittelt wurde</pre>
     * @return [en] Count of cases, with error DRG or PEPP, [de] Anzahl der Fälle, für die ein Fehler DRG oder PEPP  ermittelt wurde
     */
    public static String getDialogBatchGroupingErrordrgpeppTooltip() {
        return get(DIALOG_BATCH_GROUPING_ERRORDRGPEPP_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_GROUPEDCASES
     * SQLite key: dialog_batch_grouping_groupedcases
     * [en] grouped Cases
     * [de] gegroupte Fälle</pre>
     * @return [en] grouped Cases, [de] gegroupte Fälle
     */
    public static String getDialogBatchGroupingGroupedcases() {
        return get(DIALOG_BATCH_GROUPING_GROUPEDCASES).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_GROUPEDCASES_TOOLTIP
     * SQLite key: dialog_batch_grouping_groupedcases_tooltip
     * [en] gegroupte Fälle
     * [de] gegroupte Fälle</pre>
     * @return [en] gegroupte Fälle, [de] gegroupte Fälle
     */
    public static String getDialogBatchGroupingGroupedcasesTooltip() {
        return get(DIALOG_BATCH_GROUPING_GROUPEDCASES_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_INTENSIVCARE
     * SQLite key: dialog_batch_grouping_intensivcare
     * [en] Intensivcare
     * [de] Intensivtage</pre>
     * ATTENTION this value ('Intensivcare') seems to be also defined under the key DIALOG_BATCH_GROUPING_INTENSIVCARE_TOOLTIP!
     * @return [en] Intensivcare, [de] Intensivtage
     */
    public static String getDialogBatchGroupingIntensivcare() {
        return get(DIALOG_BATCH_GROUPING_INTENSIVCARE).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_INTENSIVCARE_TOOLTIP
     * SQLite key: dialog_batch_grouping_intensivcare_tooltip
     * [en] Intensivcare
     * [de] Intensivtage</pre>
     * ATTENTION this value ('Intensivcare') seems to be also defined under the key DIALOG_BATCH_GROUPING_INTENSIVCARE!
     * @return [en] Intensivcare, [de] Intensivtage
     */
    public static String getDialogBatchGroupingIntensivcareTooltip() {
        return get(DIALOG_BATCH_GROUPING_INTENSIVCARE_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_KORROGVD
     * SQLite key: dialog_batch_grouping_korrogvd
     * [en] corr. HTP
     * [de] korr. OGVD</pre>
     * @return [en] corr. HTP, [de] korr. OGVD
     */
    public static String getDialogBatchGroupingKorrogvd() {
        return get(DIALOG_BATCH_GROUPING_KORROGVD).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_KORROGVD_TOOLTIP
     * SQLite key: dialog_batch_grouping_korrogvd_tooltip
     * [en] Count of cases, which CW differs from catalog value due to a higher HTP
     * [de] Anzahl der Fälle, deren CW auf Grund Überschreitung der OGVD vom Fallpauschalenkatalogwert abweicht</pre>
     * @return [en] Count of cases, which CW differs from catalog value due to a higher HTP, [de] Anzahl der Fälle, deren CW auf Grund Überschreitung der OGVD vom Fallpauschalenkatalogwert abweicht
     */
    public static String getDialogBatchGroupingKorrogvdTooltip() {
        return get(DIALOG_BATCH_GROUPING_KORROGVD_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_KORRTRANS
     * SQLite key: dialog_batch_grouping_korrtrans
     * [en] korr. Trans.
     * [de] korr. Verl.</pre>
     * @return [en] korr. Trans., [de] korr. Verl.
     */
    public static String getDialogBatchGroupingKorrtrans() {
        return get(DIALOG_BATCH_GROUPING_KORRTRANS).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_KORRTRANS_TOOLTIP
     * SQLite key: dialog_batch_grouping_korrtrans_tooltip
     * [en] Count of cases, which CW differs from catalog value due to lower MTP on admission- or discharge reason "Transferring"
     * [de] Anzahl der Fälle, deren CW auf Grund einer Unterschreitung der MVD bei Aufnahme- oder Entlassungsgrund „Verlegung“ vom Fallpauschalenkatalogwert abweicht</pre>
     * @return [en] Count of cases, which CW differs from catalog value due to lower MTP on admission- or discharge reason "Transferring", [de] Anzahl der Fälle, deren CW auf Grund einer Unterschreitung der MVD bei Aufnahme- oder Entlassungsgrund „Verlegung“ vom Fallpauschalenkatalogwert abweicht
     */
    public static String getDialogBatchGroupingKorrtransTooltip() {
        return get(DIALOG_BATCH_GROUPING_KORRTRANS_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_KORRUGVD
     * SQLite key: dialog_batch_grouping_korrugvd
     * [en] corr. LTP
     * [de] korr. UGVD</pre>
     * @return [en] corr. LTP, [de] korr. UGVD
     */
    public static String getDialogBatchGroupingKorrugvd() {
        return get(DIALOG_BATCH_GROUPING_KORRUGVD).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_KORRUGVD_TOOLTIP
     * SQLite key: dialog_batch_grouping_korrugvd_tooltip
     * [en] Count of cases, which CW differs from catalog value due to a lower LTP
     * [de] Anzahl der Fälle, deren CW auf Grund Unterschreitung der UGVD vom Fallpauschalenkatalogwert abweicht</pre>
     * @return [en] Count of cases, which CW differs from catalog value due to a lower LTP, [de] Anzahl der Fälle, deren CW auf Grund Unterschreitung der UGVD vom Fallpauschalenkatalogwert abweicht
     */
    public static String getDialogBatchGroupingKorrugvdTooltip() {
        return get(DIALOG_BATCH_GROUPING_KORRUGVD_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_LOS
     * SQLite key: dialog_batch_grouping_los
     * [en] LOS
     * [de] VWD</pre>
     * ATTENTION this value ('LoS') seems to be also defined under the key LOS!
     * @return [en] LOS, [de] VWD
     */
    public static String getDialogBatchGroupingLos() {
        return get(DIALOG_BATCH_GROUPING_LOS).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_LOS_TOOLTIP
     * SQLite key: dialog_batch_grouping_los_tooltip
     * [en] Average LOS for all grouped cases
     * [de] Durchschnittliche Verweildauer aller gegroupten Fälle</pre>
     * @return [en] Average LOS for all grouped cases, [de] Durchschnittliche Verweildauer aller gegroupten Fälle
     */
    public static String getDialogBatchGroupingLosTooltip() {
        return get(DIALOG_BATCH_GROUPING_LOS_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_NDI
     * SQLite key: dialog_batch_grouping_ndi
     * [en] NDI
     * [de] NDI</pre>
     * @return [en] NDI, [de] NDI
     */
    public static String getDialogBatchGroupingNdi() {
        return get(DIALOG_BATCH_GROUPING_NDI).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_NDI_TOOLTIP
     * SQLite key: dialog_batch_grouping_ndi_tooltip
     * [en] Secondary-Diagnosis-Index (average count of secondary diagnosis/case)
     * [de] Neben-Diagnosen-Index (durchschnittliche Anzahl von Nebendiagnosen/Fall)</pre>
     * @return [en] Secondary-Diagnosis-Index (average count of secondary diagnosis/case), [de] Neben-Diagnosen-Index (durchschnittliche Anzahl von Nebendiagnosen/Fall)
     */
    public static String getDialogBatchGroupingNdiTooltip() {
        return get(DIALOG_BATCH_GROUPING_NDI_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_NINERDIAG
     * SQLite key: dialog_batch_grouping_ninerdiag
     * [en] #.9 Diag.
     * [de] #.9 Diag.</pre>
     * @return [en] #.9 Diag., [de] #.9 Diag.
     */
    public static String getDialogBatchGroupingNinerdiag() {
        return get(DIALOG_BATCH_GROUPING_NINERDIAG).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_NINERDIAG_TOOLTIP
     * SQLite key: dialog_batch_grouping_ninerdiag_tooltip
     * [en] Count of secondary diagnosis, which are coded with end digit of 9
     * [de] Anzahl der Nebendiagnosen in dem Datensatz, die mit der unspezifischen Endziffer 9 verschlüsselt wurden</pre>
     * @return [en] Count of secondary diagnosis, which are coded with end digit of 9, [de] Anzahl der Nebendiagnosen in dem Datensatz, die mit der unspezifischen Endziffer 9 verschlüsselt wurden
     */
    public static String getDialogBatchGroupingNinerdiagTooltip() {
        return get(DIALOG_BATCH_GROUPING_NINERDIAG_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_NURSINGDAYS
     * SQLite key: dialog_batch_grouping_nursingdays
     * [en] Nursingdays
     * [de] Pflegetage</pre>
     * @return [en] Nursingdays, [de] Pflegetage
     */
    public static String getDialogBatchGroupingNursingdays() {
        return get(DIALOG_BATCH_GROUPING_NURSINGDAYS).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_NURSINGDAYS_TOOLTIP
     * SQLite key: dialog_batch_grouping_nursingdays_tooltip
     * [en] Sum of LOS from all cases
     * [de] Summe der Verweildauertage aller gegroupten Fälle</pre>
     * @return [en] Sum of LOS from all cases, [de] Summe der Verweildauertage aller gegroupten Fälle
     */
    public static String getDialogBatchGroupingNursingdaysTooltip() {
        return get(DIALOG_BATCH_GROUPING_NURSINGDAYS_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_PCCL
     * SQLite key: dialog_batch_grouping_pccl
     * [en] PCCL
     * [de] PCCL</pre>
     * ATTENTION this value ('PCCL') seems to be also defined under the key PCCL! this value ('PCCL') seems to be also defined under the key RULES_TXT_PCCL_DIS!
     * @return [en] PCCL, [de] PCCL
     */
    public static String getDialogBatchGroupingPccl() {
        return get(DIALOG_BATCH_GROUPING_PCCL).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_PCCL_TOOLTIP
     * SQLite key: dialog_batch_grouping_pccl_tooltip
     * [en] Average PCCL-value of all cases
     * [de] Durchschnittlicher patientenbezogener  klinischer Komplexitätsgrad aller gegroupten Fälle</pre>
     * @return [en] Average PCCL-value of all cases, [de] Durchschnittlicher patientenbezogener  klinischer Komplexitätsgrad aller gegroupten Fälle
     */
    public static String getDialogBatchGroupingPcclTooltip() {
        return get(DIALOG_BATCH_GROUPING_PCCL_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_RULES_CHECKRESULTS
     * SQLite key: dialog_batch_grouping_rules_checkresults
     * [en] Checkresult
     * [de] Prüfergebnis</pre>
     * @return [en] Checkresult, [de] Prüfergebnis
     */
    public static String getDialogBatchGroupingRulesCheckresults() {
        return get(DIALOG_BATCH_GROUPING_RULES_CHECKRESULTS).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_RULES_CLUES
     * SQLite key: dialog_batch_grouping_rules_clues
     * [en] Clues
     * [de] Hinweise</pre>
     * @return [en] Clues, [de] Hinweise
     */
    public static String getDialogBatchGroupingRulesClues() {
        return get(DIALOG_BATCH_GROUPING_RULES_CLUES).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_RULES_ERROR
     * SQLite key: dialog_batch_grouping_rules_error
     * [en] Error
     * [de] Fehler</pre>
     * ATTENTION this value ('Error') seems to be also defined under the key TEMPLATE_ERROR_TITLE!
     * @return [en] Error, [de] Fehler
     */
    public static String getDialogBatchGroupingRulesError() {
        return get(DIALOG_BATCH_GROUPING_RULES_ERROR).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_RULES_TYP
     * SQLite key: dialog_batch_grouping_rules_typ
     * [en] Typ
     * [de] Typ</pre>
     * ATTENTION this value ('Typ') seems to be also defined under the key RULE_FILTER_DIALOG_RULE_TYPE!
     * @return [en] Typ, [de] Typ
     */
    public static String getDialogBatchGroupingRulesTyp() {
        return get(DIALOG_BATCH_GROUPING_RULES_TYP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_RULES_WARNING
     * SQLite key: dialog_batch_grouping_rules_warning
     * [en] Warning
     * [de] Warnung</pre>
     * @return [en] Warning, [de] Warnung
     */
    public static String getDialogBatchGroupingRulesWarning() {
        return get(DIALOG_BATCH_GROUPING_RULES_WARNING).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_TOTALCASES
     * SQLite key: dialog_batch_grouping_totalcases
     * [en] Total Cases
     * [de] Fallanzahl ges.</pre>
     * @return [en] Total Cases, [de] Fallanzahl ges.
     */
    public static String getDialogBatchGroupingTotalcases() {
        return get(DIALOG_BATCH_GROUPING_TOTALCASES).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_TOTALCASES_TOOLTIP
     * SQLite key: dialog_batch_grouping_totalcases_tooltip
     * [en] Total of all cases in Database (including cases, for which no DRG/PEPP could be computed)
     * [de] Anzahl aller Fälle in der Datenbank (mit teil- und vorstationären Fällen, denen eine DRG/PEPP zugewiesen werden konnte)</pre>
     * @return [en] Total of all cases in Database (including cases, for which no DRG/PEPP could be computed), [de] Anzahl aller Fälle in der Datenbank (mit teil- und vorstationären Fällen, denen eine DRG/PEPP zugewiesen werden konnte)
     */
    public static String getDialogBatchGroupingTotalcasesTooltip() {
        return get(DIALOG_BATCH_GROUPING_TOTALCASES_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_UNKCMI
     * SQLite key: dialog_batch_grouping_unkcmi
     * [en] unk. CMI
     * [de] unkorr. CMI</pre>
     * @return [en] unk. CMI, [de] unkorr. CMI
     */
    public static String getDialogBatchGroupingUnkcmi() {
        return get(DIALOG_BATCH_GROUPING_UNKCMI).value;
    }

    /**
     * <pre>DIALOG_BATCH_GROUPING_UNKCMI_TOOLTIP
     * SQLite key: dialog_batch_grouping_unkcmi_tooltip
     * [en] Average CW of all cases before correction with catalog data
     * [de] Durchschnittliches Kostengewicht (CW) aller gegroupten Fälle vor Korrektur durch Zu- oder Abschläge (Werte des Fallpauschalenkatalogs)</pre>
     * @return [en] Average CW of all cases before correction with catalog data, [de] Durchschnittliches Kostengewicht (CW) aller gegroupten Fälle vor Korrektur durch Zu- oder Abschläge (Werte des Fallpauschalenkatalogs)
     */
    public static String getDialogBatchGroupingUnkcmiTooltip() {
        return get(DIALOG_BATCH_GROUPING_UNKCMI_TOOLTIP).value;
    }

    /**
     * <pre>DIALOG_QUESTION_DELETE
     * SQLite key: dialog_question_delete
     * [en] Do you really want to drop {0} ?
     * [de] Wollen Sie {0} wirklich löschen?</pre>
     * @param pParams placeholder replacements
     * @return [en] Do you really want to drop {0} ?, [de] Wollen Sie {0} wirklich löschen?
     */
    public static String getDialogQuestionDelete(final Object... pParams) {
        return get(DIALOG_QUESTION_DELETE, pParams).value;
    }

    /**
     * <pre>DIFFERENCE
     * SQLite key: difference
     * [en] Difference
     * [de] Differenz</pre>
     * @return [en] Difference, [de] Differenz
     */
    public static String getDifference() {
        return get(DIFFERENCE).value;
    }

    /**
     * <pre>DIFFERENCE_CURRENCY
     * SQLite key: difference_currency
     * [en] Difference {0}
     * [de] Differenz {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Difference {0}, [de] Differenz {0}
     */
    public static String getDifferenceCurrency(final Object... pParams) {
        return get(DIFFERENCE_CURRENCY, pParams).value;
    }

    /**
     * <pre>DIFFERENCE_DAYS
     * SQLite key: difference_days
     * [en] Difference days
     * [de] Differenz Tage</pre>
     * @return [en] Difference days, [de] Differenz Tage
     */
    public static String getDifferenceDays() {
        return get(DIFFERENCE_DAYS).value;
    }

    /**
     * <pre>DIR_OPEN_IN_EXPLORER_TEXT
     * SQLite key: dir_open_in_explorer_text
     * [en] Click to select directory in Windows Explorer
     * [de] Klicken um den Ordner im Windows Explorer zu öffnen</pre>
     * @return [en] Click to select directory in Windows Explorer, [de] Klicken um den Ordner im Windows Explorer zu öffnen
     */
    public static String getDirOpenInExplorerText() {
        return get(DIR_OPEN_IN_EXPLORER_TEXT).value;
    }

    /**
     * <pre>DISCHARGE
     * SQLite key: discharge
     * [en] Discharge
     * [de] Entlassung</pre>
     * ATTENTION this value ('Discharge') seems to be also defined under the key ICD_TYPE_DISCHARGE!
     * @return [en] Discharge, [de] Entlassung
     */
    public static String getDischarge() {
        return get(DISCHARGE).value;
    }

    /**
     * <pre>DISCHARGE_DATE
     * SQLite key: dischargedate
     * [en] Date of Discharge (Dis.-Date)
     * [de] Entlassungsdatum (Entl.-Datum)</pre>
     * @return [en] Date of Discharge (Dis.-Date), [de] Entlassungsdatum (Entl.-Datum)
     */
    public static String getDischargeDate() {
        return get(DISCHARGE_DATE).value;
    }

    public static Translation getDischargeDateObj() {
        return get(DISCHARGE_DATE);
    }

    /**
     * <pre>DISCHARGE_DATE_BEFORE_ADMISSION_DATE
     * SQLite key: discharge_date_before_admission_date
     * [en] Discharge date is set before the admission date
     * [de] Entlassungsdatum ist vor dem Aufnahmedatum gesetzt</pre>
     * @return [en] Discharge date is set before the admission date, [de] Entlassungsdatum ist vor dem Aufnahmedatum gesetzt
     */
    public static String getDischargeDateBeforeAdmissionDate() {
        return get(DISCHARGE_DATE_BEFORE_ADMISSION_DATE).value;
    }

    /**
     * <pre>DISCHARGE_DATE_FROM
     * SQLite key: dischargedate_from
     * [en] Dis.-Date from
     * [de] Entl.-Datum von</pre>
     * @return [en] Dis.-Date from, [de] Entl.-Datum von
     */
    public static String getDischargeDateFrom() {
        return get(DISCHARGE_DATE_FROM).value;
    }

    /**
     * <pre>DISCHARGE_DATE_TO
     * SQLite key: dischargedate_to
     * [en] Dis.-Date to
     * [de] Entl.-Datum bis</pre>
     * @return [en] Dis.-Date to, [de] Entl.-Datum bis
     */
    public static String getDischargeDateTo() {
        return get(DISCHARGE_DATE_TO).value;
    }

    /**
     * <pre>DISCHARGE_DEPARTMENT
     * SQLite key: discharge_department
     * [en] Discharge Department
     * [de] KH interner Kurzname der entl. FAB (entl. FAB (int.))</pre>
     * @return [en] Discharge Department, [de] KH interner Kurzname der entl. FAB (entl. FAB (int.))
     */
    public static String getDischargeDepartment() {
        return get(DISCHARGE_DEPARTMENT).value;
    }

    public static Translation getDischargeDepartmentObj() {
        return get(DISCHARGE_DEPARTMENT);
    }

    /**
     * <pre>DISCHARGE_DEPARTMENT_301
     * SQLite key: discharge_department301
     * [de] §301-Schlüssel der FAB (entl. FAB §301)</pre>
     * @return [de] §301-Schlüssel der FAB (entl. FAB §301)
     */
    public static String getDischargeDepartment301() {
        return get(DISCHARGE_DEPARTMENT_301).value;
    }

    public static Translation getDischargeDepartment301Obj() {
        return get(DISCHARGE_DEPARTMENT_301);
    }

    /**
     * <pre>DISCHARGE_DEPARTMENT_301_NAME
     * SQLite key: discharge_department301_name
     * [de] §301-Name der FAB (entl. FAB)</pre>
     * @return [de] §301-Name der FAB (entl. FAB)
     */
    public static String getDischargeDepartment301Name() {
        return get(DISCHARGE_DEPARTMENT_301_NAME).value;
    }

    public static Translation getDischargeDepartment301NameObj() {
        return get(DISCHARGE_DEPARTMENT_301_NAME);
    }

    /**
     * <pre>DISCHARGE_DEPARTMENT_SHORT
     * SQLite key: discharge_department_short
     * [en] Discharge Department §. 301 (Dis. 301)
     * [de] Entlassene FAB nach §. 301 (Entl. 301)</pre>
     * @return [en] Discharge Department §. 301 (Dis. 301), [de] Entlassene FAB nach §. 301 (Entl. 301)
     */
    public static String getDischargeDepartmentShort() {
        return get(DISCHARGE_DEPARTMENT_SHORT).value;
    }

    public static Translation getDischargeDepartmentShortObj() {
        return get(DISCHARGE_DEPARTMENT_SHORT);
    }

    /**
     * <pre>DISCHARGE_REASON
     * SQLite key: dischargereason
     * [en] Discharge Reason (DR12)
     * [de] Entlassungsgrund (Stelle 1 u. 2) (Entl.-Gr.1.u.2.)</pre>
     * @return [en] Discharge Reason (DR12), [de] Entlassungsgrund (Stelle 1 u. 2) (Entl.-Gr.1.u.2.)
     */
    public static String getDischargeReason() {
        return get(DISCHARGE_REASON).value;
    }

    public static Translation getDischargeReasonObj() {
        return get(DISCHARGE_REASON);
    }

    /**
     * <pre>DISCHARGE_REASON_2
     * SQLite key: dischargereason2
     * [en] Discharge Reason 2
     * [de] Entlassungsgrund (Stelle 3) (Entl.-Gr.3)</pre>
     * @return [en] Discharge Reason 2, [de] Entlassungsgrund (Stelle 3) (Entl.-Gr.3)
     */
    public static String getDischargeReason2() {
        return get(DISCHARGE_REASON_2).value;
    }

    public static Translation getDischargeReason2Obj() {
        return get(DISCHARGE_REASON_2);
    }

    /**
     * <pre>DISCHARGE_REASON_2_ABLE_TO_WORK
     * SQLite key: discharge_reason2_abletowork
     * [en] able to work
     * [de] arbeitsfähig entlassen</pre>
     * @return [en] able to work, [de] arbeitsfähig entlassen
     */
    public static String getDischargeReason2AbleToWork() {
        return get(DISCHARGE_REASON_2_ABLE_TO_WORK).value;
    }

    /**
     * <pre>DISCHARGE_REASON_2_ABLE_TO_WORK_NEED_RESPIRATION_WEANING
     * SQLite key: discharge_reason2_abletowork_needrespirationweaning
     * [de] arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung</pre>
     * @return [de] arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung
     */
    public static String getDischargeReason2AbleToWorkNeedRespirationWeaning() {
        return get(DISCHARGE_REASON_2_ABLE_TO_WORK_NEED_RESPIRATION_WEANING).value;
    }

    /**
     * <pre>DISCHARGE_REASON_2_ABLE_TO_WORK_NO_NEED_RESPIRATION_WEANING
     * SQLite key: discharge_reason2_abletowork_noneedrespirationweaning
     * [de] arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung</pre>
     * @return [de] arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung
     */
    public static String getDischargeReason2AbleToWorkNoNeedRespirationWeaning() {
        return get(DISCHARGE_REASON_2_ABLE_TO_WORK_NO_NEED_RESPIRATION_WEANING).value;
    }

    /**
     * <pre>DISCHARGE_REASON_2_ABLE_TO_WORK_VENTILATED_NO_PRESCRIPTION
     * SQLite key: discharge_reason2_abletoworkventilated_noprescription
     * [de] arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung</pre>
     * @return [de] arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung
     */
    public static String getDischargeReason2AbleToWorkVentilatedNoPrescription() {
        return get(DISCHARGE_REASON_2_ABLE_TO_WORK_VENTILATED_NO_PRESCRIPTION).value;
    }

    /**
     * <pre>DISCHARGE_REASON_2_ABLE_TO_WORK_VENTILATED_NO_SPECIFIED
     * SQLite key: discharge_reason2_abletoworkventilated_nospecified
     * [de] arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV</pre>
     * @return [de] arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV
     */
    public static String getDischargeReason2AbleToWorkVentilatedNoSpecified() {
        return get(DISCHARGE_REASON_2_ABLE_TO_WORK_VENTILATED_NO_SPECIFIED).value;
    }

    /**
     * <pre>DISCHARGE_REASON_2_NOT_SPECIFIED
     * SQLite key: discharge_reason2_notspecified
     * [en] not specified
     * [de] keine Angabe</pre>
     * @return [en] not specified, [de] keine Angabe
     */
    public static String getDischargeReason2NotSpecified() {
        return get(DISCHARGE_REASON_2_NOT_SPECIFIED).value;
    }

    /**
     * <pre>DISCHARGE_REASON_2_UNABLE_TO_WORK
     * SQLite key: discharge_reason2_unabletowork
     * [en] unable to work
     * [de] arbeitsunfähig entlassen</pre>
     * @return [en] unable to work, [de] arbeitsunfähig entlassen
     */
    public static String getDischargeReason2UnableToWork() {
        return get(DISCHARGE_REASON_2_UNABLE_TO_WORK).value;
    }

    /**
     * <pre>DISCHARGE_REASON_CASE_STATEMENTS_WHEN_SWITCHING_BETWEEN_INPATIENT_AND_DAYCARE_TREATMENT
     * SQLite key: discharge_reason_casestatementswhenswitchingbetweeninpatientanddaycaretreatment
     * [en] Case statements (internal transfer) when switching between in-patient and day-care treatment
     * [de] Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung</pre>
     * @return [en] Case statements (internal transfer) when switching between in-patient and day-care treatment, [de] Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung
     */
    public static String getDischargeReasonCaseStatementsWhenSwitchingBetweenInpatientAndDaycareTreatment() {
        return get(DISCHARGE_REASON_CASE_STATEMENTS_WHEN_SWITCHING_BETWEEN_INPATIENT_AND_DAYCARE_TREATMENT).value;
    }

    /**
     * <pre>DISCHARGE_REASON_CHANGES_IN_RESPONSIBILITIES_OF_PAYERS
     * SQLite key: discharge_reason_changesinresponsibilitiesofpayers
     * [en] Changes in responsibilities of payers
     * [de] Zuständigkeitswechsel des Kostenträger</pre>
     * @return [en] Changes in responsibilities of payers, [de] Zuständigkeitswechsel des Kostenträger
     */
    public static String getDischargeReasonChangesInResponsibilitiesOfPayers() {
        return get(DISCHARGE_REASON_CHANGES_IN_RESPONSIBILITIES_OF_PAYERS).value;
    }

    /**
     * <pre>DISCHARGE_REASON_COMPLETED_TREATMENT_AGAINST_MEDICAL_ADVICE
     * SQLite key: discharge_reason_completedtreatmentagainstmedicaladvice
     * [en] completed treatment against medical advice
     * [de] Behandlung gegen ärztlichen Rat beendet</pre>
     * @return [en] completed treatment against medical advice, [de] Behandlung gegen ärztlichen Rat beendet
     */
    public static String getDischargeReasonCompletedTreatmentAgainstMedicalAdvice() {
        return get(DISCHARGE_REASON_COMPLETED_TREATMENT_AGAINST_MEDICAL_ADVICE).value;
    }

    /**
     * <pre>DISCHARGE_REASON_COMPLETED_TREATMENT_AGAINST_MEDICAL_ADVICE_INPATIENT_TREATMENT
     * SQLite key: discharge_reason_completedtreatmentagainstmedicaladviceinpatienttreatment
     * [en] completed treatment against medical advice, inpatient treatment
     * [de] Behandlung gegen ärztlichen Rat beendet, nachstationäre Behandlung</pre>
     * @return [en] completed treatment against medical advice, inpatient treatment, [de] Behandlung gegen ärztlichen Rat beendet, nachstationäre Behandlung
     */
    public static String getDischargeReasonCompletedTreatmentAgainstMedicalAdviceInpatientTreatment() {
        return get(DISCHARGE_REASON_COMPLETED_TREATMENT_AGAINST_MEDICAL_ADVICE_INPATIENT_TREATMENT).value;
    }

    /**
     * <pre>DISCHARGE_REASON_COMPLETED_TREATMENT_FOR_OTHER_REASONS
     * SQLite key: discharge_reason_completedtreatmentforotherreasons
     * [en] completed treatment for other reasons
     * [de] Behandlung aus sonstigen Gründen beendet</pre>
     * @return [en] completed treatment for other reasons, [de] Behandlung aus sonstigen Gründen beendet
     */
    public static String getDischargeReasonCompletedTreatmentForOtherReasons() {
        return get(DISCHARGE_REASON_COMPLETED_TREATMENT_FOR_OTHER_REASONS).value;
    }

    /**
     * <pre>DISCHARGE_REASON_COMPLETED_TREATMENT_FOR_OTHER_REASONS_INPATIENT_TREATMENT
     * SQLite key: discharge_reason_completedtreatmentforotherreasonsinpatienttreatment
     * [en] completed treatment for other reasons, inpatient treatment
     * [de] Behandlung aus sonstigen Gründen beendet, nachstationäre Behandlung</pre>
     * @return [en] completed treatment for other reasons, inpatient treatment, [de] Behandlung aus sonstigen Gründen beendet, nachstationäre Behandlung
     */
    public static String getDischargeReasonCompletedTreatmentForOtherReasonsInpatientTreatment() {
        return get(DISCHARGE_REASON_COMPLETED_TREATMENT_FOR_OTHER_REASONS_INPATIENT_TREATMENT).value;
    }

    /**
     * <pre>DISCHARGE_REASON_COMPLETED_TREATMENT_REGULARLY
     * SQLite key: discharge_reason_completedtreatmentregularly
     * [en] completed treatment regularly
     * [de] Behandlung regulär beendet</pre>
     * @return [en] completed treatment regularly, [de] Behandlung regulär beendet
     */
    public static String getDischargeReasonCompletedTreatmentRegularly() {
        return get(DISCHARGE_REASON_COMPLETED_TREATMENT_REGULARLY).value;
    }

    /**
     * <pre>DISCHARGE_REASON_COMPLETED_WITH_TRANSFER_IN_TEMPORARY_CARE
     * SQLite key: discharge_reason_completedwithtransferintemporarycare
     * [de] Behandlung regulär beendet, Überleitung in die Übergangspflege</pre>
     * @return [de] Behandlung regulär beendet, Überleitung in die Übergangspflege
     */
    public static String getDischargeReasonCompletedWithTransferInTemporaryCare() {
        return get(DISCHARGE_REASON_COMPLETED_WITH_TRANSFER_IN_TEMPORARY_CARE).value;
    }

    /**
     * <pre>DISCHARGE_REASON_DEATH
     * SQLite key: discharge_reason_death
     * [en] Death
     * [de] Tod</pre>
     * @return [en] Death, [de] Tod
     */
    public static String getDischargeReasonDeath() {
        return get(DISCHARGE_REASON_DEATH).value;
    }

    /**
     * <pre>DISCHARGE_REASON_DISMISSAL_AND_SUBSEQUENT_RECOVERY
     * SQLite key: discharge_reason_dismissalandsubsequentrecovery
     * [en] Dismissal and subsequent recovery
     * [de] Entlassung mit nachfolgender Wiederaufnahme</pre>
     * @return [en] Dismissal and subsequent recovery, [de] Entlassung mit nachfolgender Wiederaufnahme
     */
    public static String getDischargeReasonDismissalAndSubsequentRecovery() {
        return get(DISCHARGE_REASON_DISMISSAL_AND_SUBSEQUENT_RECOVERY).value;
    }

    /**
     * <pre>DISCHARGE_REASON_DISMISSAL_AT_THE_END_OF_RECORDING_IN_THE_PREVIOUS_YEAR
     * SQLite key: discharge_reason_dismissalattheendofrecordinginthepreviousyear
     * [en] Dismissal at the end of recording in the previous year
     * [de] Entlassung zum Jahresende bei Aufnahme im Vorjahr</pre>
     * @return [en] Dismissal at the end of recording in the previous year, [de] Entlassung zum Jahresende bei Aufnahme im Vorjahr
     */
    public static String getDischargeReasonDismissalAtTheEndOfRecordingInThePreviousYear() {
        return get(DISCHARGE_REASON_DISMISSAL_AT_THE_END_OF_RECORDING_IN_THE_PREVIOUS_YEAR).value;
    }

    /**
     * <pre>DISCHARGE_REASON_DISMISSAL_BEFORE_RESUMING_WITH_RECLASSIFICATION
     * SQLite key: discharge_reason_dismissalbeforeresumingwithreclassification
     * [en] Dismissal before resuming with reclassification
     * [de] Entlassung vor Wiederaufnahme mit Neueinstufung</pre>
     * @return [en] Dismissal before resuming with reclassification, [de] Entlassung vor Wiederaufnahme mit Neueinstufung
     */
    public static String getDischargeReasonDismissalBeforeResumingWithReclassification() {
        return get(DISCHARGE_REASON_DISMISSAL_BEFORE_RESUMING_WITH_RECLASSIFICATION).value;
    }

    /**
     * <pre>DISCHARGE_REASON_DISMISSAL_BEFORE_RESUMING_WITH_RECLASSIFICATION_FOR_COMPLICATION
     * SQLite key: discharge_reason_dismissalbeforeresumingwithreclassificationforcomplication
     * [en] Dismissal before resuming with reclassification for complication
     * [de] Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation</pre>
     * @return [en] Dismissal before resuming with reclassification for complication, [de] Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation
     */
    public static String getDischargeReasonDismissalBeforeResumingWithReclassificationForComplication() {
        return get(DISCHARGE_REASON_DISMISSAL_BEFORE_RESUMING_WITH_RECLASSIFICATION_FOR_COMPLICATION).value;
    }

    /**
     * <pre>DISCHARGE_REASON_DISMISSAL_END_STATION_EQUIVALENT
     * SQLite key: discharge_reason_dismissalendstationequivalent
     * [en] Dismissal from  station equivalent treatment (Department 0004)
     * [de] Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung – für Pseudofachabteilung 0004)</pre>
     * @return [en] Dismissal from  station equivalent treatment (Department 0004), [de] Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung – für Pseudofachabteilung 0004)
     */
    public static String getDischargeReasonDismissalEndStationEquivalent() {
        return get(DISCHARGE_REASON_DISMISSAL_END_STATION_EQUIVALENT).value;
    }

    /**
     * <pre>DISCHARGE_REASON_DISMISSAL_FOR_START_STATION_EQUIVALENT
     * SQLite key: discharge_reason_dismissalforstartstationequivalent
     * [en] Dismissal into station equivalent treatment
     * [de] Beginn eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung)</pre>
     * @return [en] Dismissal into station equivalent treatment, [de] Beginn eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung)
     */
    public static String getDischargeReasonDismissalForStartStationEquivalent() {
        return get(DISCHARGE_REASON_DISMISSAL_FOR_START_STATION_EQUIVALENT).value;
    }

    /**
     * <pre>DISCHARGE_REASON_DISMISSAL_IN_A_HOSPICE
     * SQLite key: discharge_reason_dismissalinahospice
     * [en] Dismissal in a hospice
     * [de] Entlassung in ein Hospiz</pre>
     * @return [en] Dismissal in a hospice, [de] Entlassung in ein Hospiz
     */
    public static String getDischargeReasonDismissalInA_Hospice() {
        return get(DISCHARGE_REASON_DISMISSAL_IN_A_HOSPICE).value;
    }

    /**
     * <pre>DISCHARGE_REASON_DISMISSAL_IN_A_NURSING_FACILITY
     * SQLite key: discharge_reason_dismissalinanursingfacility
     * [en] Dismissal in a nursing facility
     * [de] Entlassung in eine Pflegeeinrichtung</pre>
     * @return [en] Dismissal in a nursing facility, [de] Entlassung in eine Pflegeeinrichtung
     */
    public static String getDischargeReasonDismissalInA_NursingFacility() {
        return get(DISCHARGE_REASON_DISMISSAL_IN_A_NURSING_FACILITY).value;
    }

    /**
     * <pre>DISCHARGE_REASON_DISMISSAL_IN_A_REHABILITATION_FACILITY
     * SQLite key: discharge_reason_dismissalinarehabilitationfacility
     * [en] Dismissal in a rehabilitation facility
     * [de] Entlassung in eine Rehabilitationseinrichtung</pre>
     * @return [en] Dismissal in a rehabilitation facility, [de] Entlassung in eine Rehabilitationseinrichtung
     */
    public static String getDischargeReasonDismissalInA_RehabilitationFacility() {
        return get(DISCHARGE_REASON_DISMISSAL_IN_A_REHABILITATION_FACILITY).value;
    }

    /**
     * <pre>DISCHARGE_REASON_DISMISSAL_TRANSFER_WITH_BREATHING_1
     * SQLite key: discharge_reason_dismissaltransferwithbreathing_1
     * [en] Transfer of a ventilated patient to an organized residential unit
     * [de] Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit</pre>
     * @return [en] Transfer of a ventilated patient to an organized residential unit, [de] Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit
     */
    public static String getDischargeReasonDismissalTransferWithBreathing1() {
        return get(DISCHARGE_REASON_DISMISSAL_TRANSFER_WITH_BREATHING_1).value;
    }

    /**
     * <pre>DISCHARGE_REASON_DISMISSAL_TRANSFER_WITH_BREATHING_2
     * SQLite key: discharge_reason_dismissaltransferwithbreathing_2
     * [en] Treatment ended normally, transferring a ventilated patient to a residential unit
     * [de] Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit</pre>
     * @return [en] Treatment ended normally, transferring a ventilated patient to a residential unit, [de] Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit
     */
    public static String getDischargeReasonDismissalTransferWithBreathing2() {
        return get(DISCHARGE_REASON_DISMISSAL_TRANSFER_WITH_BREATHING_2).value;
    }

    /**
     * <pre>DISCHARGE_REASON_EXTERNAL_INSTALLATION_FOR_PSYCHIATRIC_TREATMENT
     * SQLite key: discharge_reason_externalinstallationforpsychiatrictreatment
     * [en] External installation for psychiatric treatment
     * [de] Externe Verlegung zur psychiatrischen Behandlung</pre>
     * @return [en] External installation for psychiatric treatment, [de] Externe Verlegung zur psychiatrischen Behandlung
     */
    public static String getDischargeReasonExternalInstallationForPsychiatricTreatment() {
        return get(DISCHARGE_REASON_EXTERNAL_INSTALLATION_FOR_PSYCHIATRIC_TREATMENT).value;
    }

    /**
     * <pre>DISCHARGE_REASON_EXTERNAL_TRANSFER_TO_ANOTHER_HOSPITAL_AND_SUBSEQUENT_REDEPLOYMENT_OR_INTERNAL_INSTALLATION_WITH_ALTERNATING_BETWEEN_THE_SCOPES
     * SQLite key: discharge_reason_externaltransfertoanotherhospitalandsubsequentredeploymentorinternalinstallationwithalternatingbetweenthescopes
     * [en] external transfer to another hospital and subsequent redeployment or internal installation with alternating between the scopes of BPflV and KHEntgG and subsequent relocation
     * [de] externe Verlegung in ein anderes Krankenhaus und nachfolgende Rückverlegung oder interne Verlegung mit Wechsel zwischen den Geltungsbereichen der BPflV und des KHEntgG und nachfolgende Rückverlegung</pre>
     * @return [en] external transfer to another hospital and subsequent redeployment or internal installation with alternating between the scopes of BPflV and KHEntgG and subsequent relocation, [de] externe Verlegung in ein anderes Krankenhaus und nachfolgende Rückverlegung oder interne Verlegung mit Wechsel zwischen den Geltungsbereichen der BPflV und des KHEntgG und nachfolgende Rückverlegung
     */
    public static String getDischargeReasonExternalTransferToAnotherHospitalAndSubsequentRedeploymentOrInternalInstallationWithAlternatingBetweenTheScopes() {
        return get(DISCHARGE_REASON_EXTERNAL_TRANSFER_TO_ANOTHER_HOSPITAL_AND_SUBSEQUENT_REDEPLOYMENT_OR_INTERNAL_INSTALLATION_WITH_ALTERNATING_BETWEEN_THE_SCOPES).value;
    }

    /**
     * <pre>DISCHARGE_REASON_INTERNAL_INSTALLATION_WITH_ALTERNATING_BETWEEN_THE_SCOPES
     * SQLite key: discharge_reason_internalinstallationwithalternatingbetweenthescopes
     * [en] Internal installation with alternating between the scopes
     * [de] interne Verlegung mit Wechsel zwischen den Geltungsbereichen</pre>
     * @return [en] Internal installation with alternating between the scopes, [de] interne Verlegung mit Wechsel zwischen den Geltungsbereichen
     */
    public static String getDischargeReasonInternalInstallationWithAlternatingBetweenTheScopes() {
        return get(DISCHARGE_REASON_INTERNAL_INSTALLATION_WITH_ALTERNATING_BETWEEN_THE_SCOPES).value;
    }

    /**
     * <pre>DISCHARGE_REASON_INTERNAL_RELOCATION
     * SQLite key: discharge_reason_internalrelocation
     * [en] Internal relocation
     * [de] Interne Verlegung</pre>
     * @return [en] Internal relocation, [de] Interne Verlegung
     */
    public static String getDischargeReasonInternalRelocation() {
        return get(DISCHARGE_REASON_INTERNAL_RELOCATION).value;
    }

    /**
     * <pre>DISCHARGE_REASON_LAYING_TO_ANOTHER_HOSPITAL_COOPERATION
     * SQLite key: discharge_reason_layingtoanotherhospitalcooperation
     * [en] Laying to another hospital cooperation
     * [de] Verlegung in ein anderes Krankenhaus i.R.e. Kooperation</pre>
     * @return [en] Laying to another hospital cooperation, [de] Verlegung in ein anderes Krankenhaus i.R.e. Kooperation
     */
    public static String getDischargeReasonLayingToAnotherHospitalCooperation() {
        return get(DISCHARGE_REASON_LAYING_TO_ANOTHER_HOSPITAL_COOPERATION).value;
    }

    /**
     * <pre>DISCHARGE_REASON_RELOCATION
     * SQLite key: discharge_reason_relocation
     * [en] relocation
     * [de] Rückverlegung</pre>
     * @return [en] relocation, [de] Rückverlegung
     */
    public static String getDischargeReasonRelocation() {
        return get(DISCHARGE_REASON_RELOCATION).value;
    }

    /**
     * <pre>DISCHARGE_REASON_START_EXTERNAL_STAY_WITH_ABSENCE_THROUGH_MIDNIGHT
     * SQLite key: discharge_reason_startexternalstaywithabsencethroughmidnight
     * [en] Start external stay with absence through midnight
     * [de] Beginn externer Aufenthalt mit Abwesenheit über Mitternacht</pre>
     * @return [en] Start external stay with absence through midnight, [de] Beginn externer Aufenthalt mit Abwesenheit über Mitternacht
     */
    public static String getDischargeReasonStartExternalStayWithAbsenceThroughMidnight() {
        return get(DISCHARGE_REASON_START_EXTERNAL_STAY_WITH_ABSENCE_THROUGH_MIDNIGHT).value;
    }

    /**
     * <pre>DISCHARGE_REASON_TERMINATION_EXTERNAL_STAY_WITH_ABSENCE_THROUGH_MIDNIGHT
     * SQLite key: discharge_reason_terminationexternalstaywithabsencethroughmidnight
     * [en] Termination external stay with absence through midnight
     * [de] Beendigung externer Aufenthalt mit Abwesenheit über Mitternacht</pre>
     * @return [en] Termination external stay with absence through midnight, [de] Beendigung externer Aufenthalt mit Abwesenheit über Mitternacht
     */
    public static String getDischargeReasonTerminationExternalStayWithAbsenceThroughMidnight() {
        return get(DISCHARGE_REASON_TERMINATION_EXTERNAL_STAY_WITH_ABSENCE_THROUGH_MIDNIGHT).value;
    }

    /**
     * <pre>DISCHARGE_REASON_TRANSFER_TO_ANOTHER_HOSPITAL
     * SQLite key: discharge_reason_transfertoanotherhospital
     * [en] Transfer to another hospital
     * [de] Verlegung in ein anderes Krankenhaus</pre>
     * @return [en] Transfer to another hospital, [de] Verlegung in ein anderes Krankenhaus
     */
    public static String getDischargeReasonTransferToAnotherHospital() {
        return get(DISCHARGE_REASON_TRANSFER_TO_ANOTHER_HOSPITAL).value;
    }

    /**
     * <pre>DISCHARGE_REASON_TREATMENT_TERMINATE_REGULARLY_PROVIDED_INPATIENT_TREATMENT
     * SQLite key: discharge_reason_treatmentterminateregularlyprovidedinpatienttreatment
     * [en] Treatment terminate regularly provided inpatient treatment
     * [de] Behandlung regulär beendet, nachstationäre Behandlung vorgesehen</pre>
     * @return [en] Treatment terminate regularly provided inpatient treatment, [de] Behandlung regulär beendet, nachstationäre Behandlung vorgesehen
     */
    public static String getDischargeReasonTreatmentTerminateRegularlyProvidedInpatientTreatment() {
        return get(DISCHARGE_REASON_TREATMENT_TERMINATE_REGULARLY_PROVIDED_INPATIENT_TREATMENT).value;
    }

    /**
     * <pre>DISCHARGE_WEEKDAY
     * SQLite key: discharge_weekday
     * [en] Discharge Date Weekday (Dis. Day)
     * [de] Entlassungsdatum Wochentag (Entl. WT)</pre>
     * @return [en] Discharge Date Weekday (Dis. Day), [de] Entlassungsdatum Wochentag (Entl. WT)
     */
    public static String getDischargeWeekday() {
        return get(DISCHARGE_WEEKDAY).value;
    }

    public static Translation getDischargeWeekdayObj() {
        return get(DISCHARGE_WEEKDAY);
    }

    /**
     * <pre>DOCTOR_IDENT
     * SQLite key: doctor_ident
     * [en] Doctor Identifier
     * [de] Doctor Identifier</pre>
     * @return [en] Doctor Identifier, [de] Doctor Identifier
     */
    public static String getDoctorIdent() {
        return get(DOCTOR_IDENT).value;
    }

    /**
     * <pre>DOCTOR_INDENT
     * SQLite key: doctor_indent
     * [de] IKZ einweis. Arzt (IKZ einweis. Arzt)</pre>
     * @return [de] IKZ einweis. Arzt (IKZ einweis. Arzt)
     */
    public static String getDoctorIndent() {
        return get(DOCTOR_INDENT).value;
    }

    public static Translation getDoctorIndentObj() {
        return get(DOCTOR_INDENT);
    }

    /**
     * <pre>DOCUMENT
     * SQLite key: document
     * [en] Document
     * [de] Dokument</pre>
     * ATTENTION this value ('Document') seems to be also defined under the key EVENT_NAME_DOCUMENT!
     * @return [en] Document, [de] Dokument
     */
    public static String getDocument() {
        return get(DOCUMENT).value;
    }

    /**
     * <pre>DOCUMENT_ADD
     * SQLite key: document_add
     * [en] Add Document
     * [de] Dokument hinzufügen</pre>
     * ATTENTION this value ('add Document') seems to be also defined under the key DOCUMENT_CREATE!
     * @return [en] Add Document, [de] Dokument hinzufügen
     */
    public static String getDocumentAdd() {
        return get(DOCUMENT_ADD).value;
    }

    /**
     * <pre>DOCUMENT_ADDED_TOOLTIP
     * SQLite key: document_added_tooltip
     * [en] Open this Document
     * [de] Öffnen Sie dieses Dokument</pre>
     * @return [en] Open this Document, [de] Öffnen Sie dieses Dokument
     */
    public static String getDocumentAddedTooltip() {
        return get(DOCUMENT_ADDED_TOOLTIP).value;
    }

    /**
     * <pre>DOCUMENT_CREATE
     * SQLite key: document_create
     * [en] add Document
     * [de] Dokument hinzufügen</pre>
     * ATTENTION this value ('Add Document') seems to be also defined under the key DOCUMENT_ADD!
     * @return [en] add Document, [de] Dokument hinzufügen
     */
    public static String getDocumentCreate() {
        return get(DOCUMENT_CREATE).value;
    }

    /**
     * <pre>DOCUMENT_DATE
     * SQLite key: document_date
     * [de] Dokumentendatum</pre>
     * @return [de] Dokumentendatum
     */
    public static String getDocumentDate() {
        return get(DOCUMENT_DATE).value;
    }

    /**
     * <pre>DOCUMENT_LOCATION
     * SQLite key: document_location
     * [en] location
     * [de] Ort</pre>
     * @return [en] location, [de] Ort
     */
    public static String getDocumentLocation() {
        return get(DOCUMENT_LOCATION).value;
    }

    /**
     * <pre>DOCUMENT_NAME
     * SQLite key: document_name
     * [en] Document name
     * [de] Dokumentenname</pre>
     * @return [en] Document name, [de] Dokumentenname
     */
    public static String getDocumentName() {
        return get(DOCUMENT_NAME).value;
    }

    /**
     * <pre>DOCUMENT_PATH
     * SQLite key: document_path
     * [en] Document path
     * [de] Dokumentenpfad</pre>
     * @return [en] Document path, [de] Dokumentenpfad
     */
    public static String getDocumentPath() {
        return get(DOCUMENT_PATH).value;
    }

    /**
     * <pre>DOCUMENT_REMOVED_TOOLTIP
     * SQLite key: document_removed_tooltip
     * [en] This Document is removed
     * [de] Dieses Dokument wird entfernt</pre>
     * @return [en] This Document is removed, [de] Dieses Dokument wird entfernt
     */
    public static String getDocumentRemovedTooltip() {
        return get(DOCUMENT_REMOVED_TOOLTIP).value;
    }

    /**
     * <pre>DOCUMENT_SIZE
     * SQLite key: document_size
     * [en] Document size
     * [de] Dokumentgröße</pre>
     * @return [en] Document size, [de] Dokumentgröße
     */
    public static String getDocumentSize() {
        return get(DOCUMENT_SIZE).value;
    }

    /**
     * <pre>DOCUMENT_TYPE
     * SQLite key: document_type
     * [en] Document type
     * [de] Dokumententyp</pre>
     * @return [en] Document type, [de] Dokumententyp
     */
    public static String getDocumentType() {
        return get(DOCUMENT_TYPE).value;
    }

    /**
     * <pre>DOCUMENT_TYPE_MDK_REPORT
     * SQLite key: documenttype_mdkreport
     * [en] MD Report
     * [de] MD-Gutachten</pre>
     * @return [en] MD Report, [de] MD-Gutachten
     */
    public static String getDocumentTypeMdkReport() {
        return get(DOCUMENT_TYPE_MDK_REPORT).value;
    }

    /**
     * <pre>DOCUMENT_TYPES
     * SQLite key: document_types
     * [de] Dokumententypen</pre>
     * @return [de] Dokumententypen
     */
    public static String getDocumentTypes() {
        return get(DOCUMENT_TYPES).value;
    }

    /**
     * <pre>DOCUMENTATION
     * SQLite key: documentation
     * [en] Documentation
     * [de] Dokumentation</pre>
     * @return [en] Documentation, [de] Dokumentation
     */
    public static String getDocumentation() {
        return get(DOCUMENTATION).value;
    }

    /**
     * <pre>DOCUMENTATION_CASE_EVALUATION
     * SQLite key: documentation_case_evaluation
     * [en] Case evaluation
     * [de] Fallbeurteilung</pre>
     * @return [en] Case evaluation, [de] Fallbeurteilung
     */
    public static String getDocumentationCaseEvaluation() {
        return get(DOCUMENTATION_CASE_EVALUATION).value;
    }

    /**
     * <pre>DOCUMENTATION_CASE_EVALUATION_TEXT
     * SQLite key: documentation_case_evaluation_text
     * [en] Notes can be placed here for the case evaluation.These notes will be shown in the case report.
     * [de] Hier können Bemerkungen zu der Beurteilung des Falls angegeben werden.Diese werden automatisch in einen neuen Fallreport übernommen.</pre>
     * @return [en] Notes can be placed here for the case evaluation.These notes will be shown in the case report., [de] Hier können Bemerkungen zu der Beurteilung des Falls angegeben werden.Diese werden automatisch in einen neuen Fallreport übernommen.
     */
    public static String getDocumentationCaseEvaluationText() {
        return get(DOCUMENTATION_CASE_EVALUATION_TEXT).value;
    }

    /**
     * <pre>DOCUMENTATION_FULL_RISK
     * SQLite key: documentation_full_risk
     * [en] Estimated Full Risk in Percent
     * [de] Risiko in % (ges.) (Risiko in % (ges.))</pre>
     * @return [en] Estimated Full Risk in Percent, [de] Risiko in % (ges.) (Risiko in % (ges.))
     */
    public static String getDocumentationFullRisk() {
        return get(DOCUMENTATION_FULL_RISK).value;
    }

    public static Translation getDocumentationFullRiskObj() {
        return get(DOCUMENTATION_FULL_RISK);
    }

    /**
     * <pre>DOCUMENTATION_FULL_WASTE
     * SQLite key: documentation_full_waste
     * [en] Estimated Full Waste in Euro
     * [de] Verlustvol. in € (ges.) (Verlustvol. in € (ges.))</pre>
     * @return [en] Estimated Full Waste in Euro, [de] Verlustvol. in € (ges.) (Verlustvol. in € (ges.))
     */
    public static String getDocumentationFullWaste() {
        return get(DOCUMENTATION_FULL_WASTE).value;
    }

    public static Translation getDocumentationFullWasteObj() {
        return get(DOCUMENTATION_FULL_WASTE);
    }

    /**
     * <pre>DOCUMENTATION_MENU_IS_ACTIVE
     * SQLite key: documentation_menu_isactive
     * [en] Is active
     * [de] Ist Aktiv</pre>
     * @return [en] Is active, [de] Ist Aktiv
     */
    public static String getDocumentationMenuIsActive() {
        return get(DOCUMENTATION_MENU_IS_ACTIVE).value;
    }

    /**
     * <pre>DOCUMENTATION_MENU_SET_ACTIVE
     * SQLite key: documentation_menu_setactive
     * [en] Set active
     * [de] Auf Aktiv setzen</pre>
     * @return [en] Set active, [de] Auf Aktiv setzen
     */
    public static String getDocumentationMenuSetActive() {
        return get(DOCUMENTATION_MENU_SET_ACTIVE).value;
    }

    /**
     * <pre>DOCUMENTATION_NO_RISK_CONTENT
     * SQLite key: documentation_no_risk_content
     * [en] No Risk Area Selected
     * [de] kein Risikobereich ausgewählt</pre>
     * @return [en] No Risk Area Selected, [de] kein Risikobereich ausgewählt
     */
    public static String getDocumentationNoRiskContent() {
        return get(DOCUMENTATION_NO_RISK_CONTENT).value;
    }

    /**
     * <pre>DOCUMENTATION_RISK
     * SQLite key: documentation_risk
     * [en] Estimated Risk in Percent
     * [de] Risiko in % (Risiko in %)</pre>
     * @return [en] Estimated Risk in Percent, [de] Risiko in % (Risiko in %)
     */
    public static String getDocumentationRisk() {
        return get(DOCUMENTATION_RISK).value;
    }

    public static Translation getDocumentationRiskObj() {
        return get(DOCUMENTATION_RISK);
    }

    /**
     * <pre>DOCUMENTATION_RISK_AREA
     * SQLite key: documentation_risk_area
     * [en] Risk Areas
     * [de] Risikobereiche</pre>
     * @return [en] Risk Areas, [de] Risikobereiche
     */
    public static String getDocumentationRiskArea() {
        return get(DOCUMENTATION_RISK_AREA).value;
    }

    /**
     * <pre>DOCUMENTATION_RISK_DESCRIPTION_TEXT_1
     * SQLite key: documentation_risk_description_text1
     * [en] Hier können Sie die Risiken und Verlustvolumen der eventuellen MD -Anfrage/-Kürzung abgeben.
     * [de] Hier können Sie die Risiken und Verlustvolumen der eventuellen MD-Anfrage/-Kürzung angeben.</pre>
     * @return [en] Hier können Sie die Risiken und Verlustvolumen der eventuellen MD -Anfrage/-Kürzung abgeben., [de] Hier können Sie die Risiken und Verlustvolumen der eventuellen MD-Anfrage/-Kürzung angeben.
     */
    public static String getDocumentationRiskDescriptionText1() {
        return get(DOCUMENTATION_RISK_DESCRIPTION_TEXT_1).value;
    }

    /**
     * <pre>DOCUMENTATION_RISK_DESCRIPTION_TEXT_2
     * SQLite key: documentation_risk_description_text2
     * [en] Die auf dem Basis der Regelverletzungen geschätzte Werte sind in den grauen Felder vorgegeben.
     * [de] Die auf der Basis der Regelverletzungen geschätzten Werte sind in den grauen Felder vorgegeben.</pre>
     * @return [en] Die auf dem Basis der Regelverletzungen geschätzte Werte sind in den grauen Felder vorgegeben., [de] Die auf der Basis der Regelverletzungen geschätzten Werte sind in den grauen Felder vorgegeben.
     */
    public static String getDocumentationRiskDescriptionText2() {
        return get(DOCUMENTATION_RISK_DESCRIPTION_TEXT_2).value;
    }

    /**
     * <pre>DOCUMENTATION_RISK_FROM_RULES
     * SQLite key: documentation_risk_from_rules
     * [en] From Rules
     * [de] Aus Regelverletzungen</pre>
     * @return [en] From Rules, [de] Aus Regelverletzungen
     */
    public static String getDocumentationRiskFromRules() {
        return get(DOCUMENTATION_RISK_FROM_RULES).value;
    }

    /**
     * <pre>DOCUMENTATION_RISK_FULL_RISK
     * SQLite key: documentation_risk_full_risk
     * [en] Full Risk
     * [de] Gesamtrisiko</pre>
     * @return [en] Full Risk, [de] Gesamtrisiko
     */
    public static String getDocumentationRiskFullRisk() {
        return get(DOCUMENTATION_RISK_FULL_RISK).value;
    }

    /**
     * <pre>DOCUMENTATION_RISK_SET
     * SQLite key: documentation_risk_set
     * [en] Risks set
     * [de] Risiken gesetzt</pre>
     * @return [en] Risks set, [de] Risiken gesetzt
     */
    public static String getDocumentationRiskSet() {
        return get(DOCUMENTATION_RISK_SET).value;
    }

    /**
     * <pre>DOCUMENTATION_TYPE_REVIEW
     * SQLite key: documentation_type_review
     * [en] Case review
     * [de] Fallbeurteilung</pre>
     * @return [en] Case review, [de] Fallbeurteilung
     */
    public static String getDocumentationTypeReview() {
        return get(DOCUMENTATION_TYPE_REVIEW).value;
    }

    /**
     * <pre>DOCUMENTATION_TYPE_RISK_REVIEW
     * SQLite key: documentation_type_risk_review
     * [en] Risk review
     * [de] Risikobeurteilung</pre>
     * @return [en] Risk review, [de] Risikobeurteilung
     */
    public static String getDocumentationTypeRiskReview() {
        return get(DOCUMENTATION_TYPE_RISK_REVIEW).value;
    }

    /**
     * <pre>DOCUMENTATION_WASTE
     * SQLite key: documentation_waste
     * [en] Estimated Waste in Euro
     * [de] Verlustvol. in € (Verlustvol. in €)</pre>
     * @return [en] Estimated Waste in Euro, [de] Verlustvol. in € (Verlustvol. in €)
     */
    public static String getDocumentationWaste() {
        return get(DOCUMENTATION_WASTE).value;
    }

    public static Translation getDocumentationWasteObj() {
        return get(DOCUMENTATION_WASTE);
    }

    /**
     * <pre>DRAFT_TYPES
     * SQLite key: draft_types
     * [en] Draft types
     * [de] Vorlagen</pre>
     * @return [en] Draft types, [de] Vorlagen
     */
    public static String getDraftTypes() {
        return get(DRAFT_TYPES).value;
    }

    /**
     * <pre>DRG
     * SQLite key: drg
     * [en] DRG
     * [de] Diagnosebezogene Fallgruppen (DRG)</pre>
     * ATTENTION this value ('DRG') seems to be also defined under the key CASE_RESOLVE_DRG! this value ('DRG') seems to be also defined under the key CASE_TYPE_DRG! this value ('DRG') seems to be also defined under the key DRG_SHORTCUT! this value ('DRG') seems to be also defined under the key FEE_GROUP_DRG! this value ('DRG') seems to be also defined under the key ICD_TYPE_DRG! this value ('DRG') seems to be also defined under the key RULES_DRG!
     * @return [en] DRG, [de] Diagnosebezogene Fallgruppen (DRG)
     */
    public static String getDRG() {
        return get(DRG).value;
    }

    public static Translation getDRGObj() {
        return get(DRG);
    }

    /**
     * <pre>DRG_AND_PEPP_COLUMN
     * SQLite key: drg_and_pepp_column
     * [de] DRG/PEPP (DRG/PEPP)</pre>
     * @return [de] DRG/PEPP (DRG/PEPP)
     */
    public static String getDrgAndPeppColumn() {
        return get(DRG_AND_PEPP_COLUMN).value;
    }

    public static Translation getDrgAndPeppColumnObj() {
        return get(DRG_AND_PEPP_COLUMN);
    }

    /**
     * <pre>DRG_CASE_DAY_CARE
     * SQLite key: drg_case_day_care
     * [en] DRG case with day care admission reason
     * [de] Teil- oder vorstationärer DRG - Fall</pre>
     * @return [en] DRG case with day care admission reason, [de] Teil- oder vorstationärer DRG - Fall
     */
    public static String getDrgCaseDayCare() {
        return get(DRG_CASE_DAY_CARE).value;
    }

    /**
     * <pre>DRG_CATALOG
     * SQLite key: drg_catalog
     * [en] DRG catalog
     * [de] DRG Katalog</pre>
     * @return [en] DRG catalog, [de] DRG Katalog
     */
    public static String getDrgCatalog() {
        return get(DRG_CATALOG).value;
    }

    /**
     * <pre>DRG_CODE
     * SQLite key: drg_code
     * [en] DRG-Code
     * [de] DRG-Code</pre>
     * @return [en] DRG-Code, [de] DRG-Code
     */
    public static String getDrgCode() {
        return get(DRG_CODE).value;
    }

    /**
     * <pre>DRG_COLUMN
     * SQLite key: drg_column
     * [de] DRG (DRG)</pre>
     * @return [de] DRG (DRG)
     */
    public static String getDrgColumn() {
        return get(DRG_COLUMN).value;
    }

    public static Translation getDrgColumnObj() {
        return get(DRG_COLUMN);
    }

    /**
     * <pre>DRG_CORR_TYPE_DEDUCTION
     * SQLite key: drg_corrtype_deduction
     * [en] Deduction
     * [de] Abzug</pre>
     * ATTENTION this value ('Deduction') seems to be also defined under the key DEDUCTION!
     * @return [en] Deduction, [de] Abzug
     */
    public static String getDrgCorrTypeDeduction() {
        return get(DRG_CORR_TYPE_DEDUCTION).value;
    }

    /**
     * <pre>DRG_CORR_TYPE_DEDUCTION_TRANSFER
     * SQLite key: drg_corrtype_deductiontransfer
     * [en] Deduction Transfer
     * [de] Abzug Verlegung</pre>
     * @return [en] Deduction Transfer, [de] Abzug Verlegung
     */
    public static String getDrgCorrTypeDeductionTransfer() {
        return get(DRG_CORR_TYPE_DEDUCTION_TRANSFER).value;
    }

    /**
     * <pre>DRG_CORR_TYPE_DEDUCTION_TRANSFER_ADMISSION
     * SQLite key: drg_corrtype_deductiontransferadmission
     * [en] Deduction Admission Transfer
     * [de] Abzug Aufnahme Verlegung</pre>
     * @return [en] Deduction Admission Transfer, [de] Abzug Aufnahme Verlegung
     */
    public static String getDrgCorrTypeDeductionTransferAdmission() {
        return get(DRG_CORR_TYPE_DEDUCTION_TRANSFER_ADMISSION).value;
    }

    /**
     * <pre>DRG_CORR_TYPE_DEDUCTION_TRANSFER_DISCHARGE
     * SQLite key: drg_corrtype_deductiontransferdischarge
     * [en] Deduction Discharge Transfer
     * [de] Abzug Entlassung Verlegung</pre>
     * @return [en] Deduction Discharge Transfer, [de] Abzug Entlassung Verlegung
     */
    public static String getDrgCorrTypeDeductionTransferDischarge() {
        return get(DRG_CORR_TYPE_DEDUCTION_TRANSFER_DISCHARGE).value;
    }

    /**
     * <pre>DRG_CORR_TYPE_NO
     * SQLite key: drg_corrtype_no
     * [en] No
     * [de] Nein</pre>
     * ATTENTION this value ('No') seems to be also defined under the key CONFIRMATION_NO!
     * @return [en] No, [de] Nein
     */
    public static String getDrgCorrTypeNo() {
        return get(DRG_CORR_TYPE_NO).value;
    }

    /**
     * <pre>DRG_CORR_TYPE_SURCHARGE
     * SQLite key: drg_corrtype_surcharge
     * [en] Surcharge
     * [de] Zuschlag</pre>
     * ATTENTION this value ('Surcharge') seems to be also defined under the key SURCHARGE!
     * @return [en] Surcharge, [de] Zuschlag
     */
    public static String getDrgCorrTypeSurcharge() {
        return get(DRG_CORR_TYPE_SURCHARGE).value;
    }

    /**
     * <pre>DRG_DATA
     * SQLite key: drg_data
     * [en] DRG-Data
     * [de] DRG-Daten</pre>
     * @return [en] DRG-Data, [de] DRG-Daten
     */
    public static String getDrgData() {
        return get(DRG_DATA).value;
    }

    /**
     * <pre>DRG_EXTERN
     * SQLite key: drg_extern
     * [en] DRG KIS
     * [de] DRG KIS</pre>
     * @return [en] DRG KIS, [de] DRG KIS
     */
    public static String getDrgExtern() {
        return get(DRG_EXTERN).value;
    }

    /**
     * <pre>DRG_LOCAL
     * SQLite key: drg_local
     * [en] DRG CPX
     * [de] DRG CPX</pre>
     * @return [en] DRG CPX, [de] DRG CPX
     */
    public static String getDrgLocal() {
        return get(DRG_LOCAL).value;
    }

    /**
     * <pre>DRG_PARTITION_MEDICAL
     * SQLite key: drgpartition_medical
     * [en] medical
     * [de] medizinisch</pre>
     * @return [en] medical, [de] medizinisch
     */
    public static String getDrgPartitionMedical() {
        return get(DRG_PARTITION_MEDICAL).value;
    }

    /**
     * <pre>DRG_PARTITION_OTHER
     * SQLite key: drgpartition_other
     * [en] other
     * [de] andere</pre>
     * ATTENTION this value ('Other') seems to be also defined under the key CASE_TYPE_OTHER! this value ('Other') seems to be also defined under the key REQUEST_TYPE_OTHER! this value ('Other') seems to be also defined under the key RISK_AREA_OTHER!
     * @return [en] other, [de] andere
     */
    public static String getDrgPartitionOther() {
        return get(DRG_PARTITION_OTHER).value;
    }

    /**
     * <pre>DRG_PARTITION_SURGICAL
     * SQLite key: drgpartition_surgical
     * [en] surgical
     * [de] operative</pre>
     * @return [en] surgical, [de] operative
     */
    public static String getDrgPartitionSurgical() {
        return get(DRG_PARTITION_SURGICAL).value;
    }

    /**
     * <pre>DRG_SHORTCUT
     * SQLite key: drg_shortcut
     * [en] DRG
     * [de] DRG</pre>
     * ATTENTION this value ('DRG') seems to be also defined under the key CASE_RESOLVE_DRG! this value ('DRG') seems to be also defined under the key CASE_TYPE_DRG! this value ('DRG') seems to be also defined under the key DRG! this value ('DRG') seems to be also defined under the key FEE_GROUP_DRG! this value ('DRG') seems to be also defined under the key ICD_TYPE_DRG! this value ('DRG') seems to be also defined under the key RULES_DRG!
     * @return [en] DRG, [de] DRG
     */
    public static String getDrgShortcut() {
        return get(DRG_SHORTCUT).value;
    }

    /**
     * <pre>DRG_TEXT
     * SQLite key: drg_text
     * [en] DRG-Text
     * [de] DRG-Text</pre>
     * @return [en] DRG-Text, [de] DRG-Text
     */
    public static String getDrgText() {
        return get(DRG_TEXT).value;
    }

    /**
     * <pre>DURATION_DECLARATION
     * SQLite key: duration_declaration
     * [en] Declaration
     * [de] Angabe</pre>
     * @return [en] Declaration, [de] Angabe
     */
    public static String getDurationDeclaration() {
        return get(DURATION_DECLARATION).value;
    }

    /**
     * <pre>DURATION_FROM
     * SQLite key: duration_from
     * [en] from
     * [de] von</pre>
     * ATTENTION this value ('From') seems to be also defined under the key INPUT_NUMBER_FROM!
     * @return [en] from, [de] von
     */
    public static String getDurationFrom() {
        return get(DURATION_FROM).value;
    }

    /**
     * <pre>DURATION_TIME
     * SQLite key: duration_time
     * [en] time
     * [de] Uhrzeit</pre>
     * @return [en] time, [de] Uhrzeit
     */
    public static String getDurationTime() {
        return get(DURATION_TIME).value;
    }

    /**
     * <pre>DURATION_TO
     * SQLite key: duration_to
     * [en] to
     * [de] Ablauf bis</pre>
     * ATTENTION this value ('To') seems to be also defined under the key INPUT_NUMBER_TO!
     * @return [en] to, [de] Ablauf bis
     */
    public static String getDurationTo() {
        return get(DURATION_TO).value;
    }

    /**
     * <pre>EDIT
     * SQLite key: edit
     * [en] Edit
     * [de] Bearbeiten</pre>
     * @return [en] Edit, [de] Bearbeiten
     */
    public static String getEdit() {
        return get(EDIT).value;
    }

    /**
     * <pre>ERROR
     * SQLite key: error
     * [en] Error (E)
     * [de] Fehler (F)</pre>
     * @return [en] Error (E), [de] Fehler (F)
     */
    public static String getError() {
        return get(ERROR).value;
    }

    public static Translation getErrorObj() {
        return get(ERROR);
    }

    /**
     * <pre>ERROR_COULD_NOT_DELETE
     * SQLite key: error_couldnotdelete
     * [en] Could not delete item!
     * [de] Das ausgewählte Element konnte nicht gelöscht werden!</pre>
     * @return [en] Could not delete item!, [de] Das ausgewählte Element konnte nicht gelöscht werden!
     */
    public static String getErrorCouldNotDelete() {
        return get(ERROR_COULD_NOT_DELETE).value;
    }

    /**
     * <pre>ERROR_OCCURED
     * SQLite key: erroroccured
     * [en] Error occured, please try again
     * [de] Ein Fehler ist aufgetreten, versuchen Sie es bitte erneut</pre>
     * @return [en] Error occured, please try again, [de] Ein Fehler ist aufgetreten, versuchen Sie es bitte erneut
     */
    public static String getErrorOccured() {
        return get(ERROR_OCCURED).value;
    }

    /**
     * <pre>ERROR_VERSION_COULD_NOT_CREATE
     * SQLite key: error_version_couldnotcreate
     * [en] A new version could not be created!
     * [de] Es konnte keine neue Version angelegt werden!</pre>
     * @return [en] A new version could not be created!, [de] Es konnte keine neue Version angelegt werden!
     */
    public static String getErrorVersionCouldNotCreate() {
        return get(ERROR_VERSION_COULD_NOT_CREATE).value;
    }

    /**
     * <pre>ERROR_VERSION_COULD_NOT_REMOVE
     * SQLite key: error_version_couldnotremove
     * [en] this version could not be removed!
     * [de] Die Version konnte nicht entfernt werden!</pre>
     * @return [en] this version could not be removed!, [de] Die Version konnte nicht entfernt werden!
     */
    public static String getErrorVersionCouldNotRemove() {
        return get(ERROR_VERSION_COULD_NOT_REMOVE).value;
    }

    /**
     * <pre>EVENT_NAME_ACTION
     * SQLite key: event_name_action
     * [en] Action
     * [de] Aktion</pre>
     * ATTENTION this value ('Action') seems to be also defined under the key ACTION_SUBJECT!
     * @return [en] Action, [de] Aktion
     */
    public static String getEventNameAction() {
        return get(EVENT_NAME_ACTION).value;
    }

    /**
     * <pre>EVENT_NAME_CASE
     * SQLite key: event_name_case
     * [en] Case
     * [de] Fall</pre>
     * ATTENTION this value ('Case') seems to be also defined under the key CASE!
     * @return [en] Case, [de] Fall
     */
    public static String getEventNameCase() {
        return get(EVENT_NAME_CASE).value;
    }

    /**
     * <pre>EVENT_NAME_DOCUMENT
     * SQLite key: event_name_document
     * [en] Document
     * [de] Dokument</pre>
     * ATTENTION this value ('Document') seems to be also defined under the key DOCUMENT!
     * @return [en] Document, [de] Dokument
     */
    public static String getEventNameDocument() {
        return get(EVENT_NAME_DOCUMENT).value;
    }

    /**
     * <pre>EVENT_NAME_INKA
     * SQLite key: event_name_inka
     * [en] INKA Message
     * [de] INKA-Nachricht</pre>
     * @return [en] INKA Message, [de] INKA-Nachricht
     */
    public static String getEventNameInka() {
        return get(EVENT_NAME_INKA).value;
    }

    /**
     * <pre>EVENT_NAME_KAIN
     * SQLite key: event_name_kain
     * [en] KAIN Message
     * [de] KAIN-Nachricht</pre>
     * @return [en] KAIN Message, [de] KAIN-Nachricht
     */
    public static String getEventNameKain() {
        return get(EVENT_NAME_KAIN).value;
    }

    /**
     * <pre>EVENT_NAME_PATIENT
     * SQLite key: event_name_patient
     * [en] Patient
     * [de] Patient</pre>
     * ATTENTION this value ('Patient') seems to be also defined under the key PATIENT!
     * @return [en] Patient, [de] Patient
     */
    public static String getEventNamePatient() {
        return get(EVENT_NAME_PATIENT).value;
    }

    /**
     * <pre>EVENT_NAME_PROCESS
     * SQLite key: event_name_process
     * [en] Process
     * [de] Vorgang</pre>
     * @return [en] Process, [de] Vorgang
     */
    public static String getEventNameProcess() {
        return get(EVENT_NAME_PROCESS).value;
    }

    /**
     * <pre>EVENT_NAME_PROCESS_FINALISATION
     * SQLite key: event_name_processfinalisation
     * [en] Process Finalisation
     * [de] Vorgangsabschluss</pre>
     * ATTENTION this value ('Process finalisation') seems to be also defined under the key PROCESS_FINALISATION!
     * @return [en] Process Finalisation, [de] Vorgangsabschluss
     */
    public static String getEventNameProcessFinalisation() {
        return get(EVENT_NAME_PROCESS_FINALISATION).value;
    }

    /**
     * <pre>EVENT_NAME_REMINDER
     * SQLite key: event_name_reminder
     * [en] Reminder
     * [de] Wiedervorlage</pre>
     * ATTENTION this value ('Reminder') seems to be also defined under the key REMINDER_SUBJECT!
     * @return [en] Reminder, [de] Wiedervorlage
     */
    public static String getEventNameReminder() {
        return get(EVENT_NAME_REMINDER).value;
    }

    /**
     * <pre>EVENT_NAME_REQUEST
     * SQLite key: event_name_request
     * [en] Request
     * [de] Anfrage</pre>
     * ATTENTION this value ('Request') seems to be also defined under the key PLACE_OF_REG_REQUEST!
     * @return [en] Request, [de] Anfrage
     */
    public static String getEventNameRequest() {
        return get(EVENT_NAME_REQUEST).value;
    }

    /**
     * <pre>EVENT_OPERATION_CHANGE_ASSIGNED_USER
     * SQLite key: event_operation_changeassigneduser
     * [en] Change assigned user
     * [de] Bearbeiter ändern</pre>
     * @return [en] Change assigned user, [de] Bearbeiter ändern
     */
    public static String getEventOperationChangeAssignedUser() {
        return get(EVENT_OPERATION_CHANGE_ASSIGNED_USER).value;
    }

    /**
     * <pre>EVENT_OPERATION_CREATE
     * SQLite key: event_operation_create
     * [en] Create
     * [de] Anlegen</pre>
     * ATTENTION this value ('Create') seems to be also defined under the key CREATE!
     * @return [en] Create, [de] Anlegen
     */
    public static String getEventOperationCreate() {
        return get(EVENT_OPERATION_CREATE).value;
    }

    /**
     * <pre>EVENT_OPERATION_CREATE_ITEM
     * SQLite key: event_operation_createitem
     * [en] Create {0}
     * [de] {0} anlegen</pre>
     * @param pParams placeholder replacements
     * @return [en] Create {0}, [de] {0} anlegen
     */
    public static String getEventOperationCreateItem(final Object... pParams) {
        return get(EVENT_OPERATION_CREATE_ITEM, pParams).value;
    }

    /**
     * <pre>EVENT_OPERATION_EDIT
     * SQLite key: event_operation_edit
     * [en] Change
     * [de] Ändern</pre>
     * ATTENTION this value ('change') seems to be also defined under the key MENU_CHANGE!
     * @return [en] Change, [de] Ändern
     */
    public static String getEventOperationEdit() {
        return get(EVENT_OPERATION_EDIT).value;
    }

    /**
     * <pre>EVENT_OPERATION_EDIT_ITEM
     * SQLite key: event_operation_edititem
     * [en] Change {0}
     * [de] {0} editieren</pre>
     * @param pParams placeholder replacements
     * @return [en] Change {0}, [de] {0} editieren
     */
    public static String getEventOperationEditItem(final Object... pParams) {
        return get(EVENT_OPERATION_EDIT_ITEM, pParams).value;
    }

    /**
     * <pre>EVENT_OPERATION_OPEN
     * SQLite key: event_operation_open
     * [en] Open
     * [de] Öffnen</pre>
     * ATTENTION this value ('open') seems to be also defined under the key PROCESS_STATUS_REMINDER_OPEN! this value ('open') seems to be also defined under the key REMINDER_UNFINISHED_STATUS! this value ('open') seems to be also defined under the key WORKFLOW_STATE_OPEN!
     * @return [en] Open, [de] Öffnen
     */
    public static String getEventOperationOpen() {
        return get(EVENT_OPERATION_OPEN).value;
    }

    /**
     * <pre>EVENT_OPERATION_OPEN_ITEM
     * SQLite key: event_operation_openitem
     * [en] Open {0}
     * [de] {0} öffnen</pre>
     * @param pParams placeholder replacements
     * @return [en] Open {0}, [de] {0} öffnen
     */
    public static String getEventOperationOpenItem(final Object... pParams) {
        return get(EVENT_OPERATION_OPEN_ITEM, pParams).value;
    }

    /**
     * <pre>EVENT_OPERATION_REMOVE
     * SQLite key: event_operation_remove
     * [en] Remove
     * [de] Entfernen</pre>
     * ATTENTION this value ('Remove') seems to be also defined under the key CATALOG_DIALOG_REMOVE!
     * @return [en] Remove, [de] Entfernen
     */
    public static String getEventOperationRemove() {
        return get(EVENT_OPERATION_REMOVE).value;
    }

    /**
     * <pre>EVENT_OPERATION_REMOVE_ITEM
     * SQLite key: event_operation_removeitem
     * [en] Remove {0}
     * [de] {0} entfernen</pre>
     * @param pParams placeholder replacements
     * @return [en] Remove {0}, [de] {0} entfernen
     */
    public static String getEventOperationRemoveItem(final Object... pParams) {
        return get(EVENT_OPERATION_REMOVE_ITEM, pParams).value;
    }

    /**
     * <pre>EVENT_REMOVED
     * SQLite key: event_removed
     * [en] {0} was removed
     * [de] {0} wurde gelöscht</pre>
     * @param pParams placeholder replacements
     * @return [en] {0} was removed, [de] {0} wurde gelöscht
     */
    public static String getEventRemoved(final Object... pParams) {
        return get(EVENT_REMOVED, pParams).value;
    }

    /**
     * <pre>EVENT_TYPE
     * SQLite key: eventtype
     * [en] Event type
     * [de] Ereignistyp</pre>
     * @return [en] Event type, [de] Ereignistyp
     */
    public static String getEventType() {
        return get(EVENT_TYPE).value;
    }

    /**
     * <pre>EVENT_TYPE_ACTION_ADDED
     * SQLite key: eventtype_action_added
     * [en] Action of type {0} is generated (Added actions)
     * [de] Aktion angelegt: Typ: {0} (Aktion angelegt)</pre>
     * @param pParams placeholder replacements
     * @return [en] Action of type {0} is generated (Added actions), [de] Aktion angelegt: Typ: {0} (Aktion angelegt)
     */
    public static String getEventTypeActionAdded(final Object... pParams) {
        return get(EVENT_TYPE_ACTION_ADDED, pParams).value;
    }

    public static Translation getEventTypeActionAddedObj(final Object... pParams) {
        return get(EVENT_TYPE_ACTION_ADDED, pParams);
    }

    /**
     * <pre>EVENT_TYPE_ACTION_CHANGED
     * SQLite key: eventtype_action_changed
     * [en] Action of type {0} is changed (Changed actions)
     * [de] Aktion geändert: Typ: {0} (Aktion geändert)</pre>
     * @param pParams placeholder replacements
     * @return [en] Action of type {0} is changed (Changed actions), [de] Aktion geändert: Typ: {0} (Aktion geändert)
     */
    public static String getEventTypeActionChanged(final Object... pParams) {
        return get(EVENT_TYPE_ACTION_CHANGED, pParams).value;
    }

    public static Translation getEventTypeActionChangedObj(final Object... pParams) {
        return get(EVENT_TYPE_ACTION_CHANGED, pParams);
    }

    /**
     * <pre>EVENT_TYPE_ACTION_REMOVED
     * SQLite key: eventtype_action_removed
     * [en] Action {0} was removed (Removed actions)
     * [de] Aktion gelöscht: Typ: {0} (Aktion gelöscht)</pre>
     * @param pParams placeholder replacements
     * @return [en] Action {0} was removed (Removed actions), [de] Aktion gelöscht: Typ: {0} (Aktion gelöscht)
     */
    public static String getEventTypeActionRemoved(final Object... pParams) {
        return get(EVENT_TYPE_ACTION_REMOVED, pParams).value;
    }

    public static Translation getEventTypeActionRemovedObj(final Object... pParams) {
        return get(EVENT_TYPE_ACTION_REMOVED, pParams);
    }

    /**
     * <pre>EVENT_TYPE_CASE_ADDED
     * SQLite key: eventtype_case_added
     * [en] Case of type {0} is added: Case number: {1} (Added cases)
     * [de] Fall hinzugefügt: Typ: {0}, Fallnummer: {1} (Fall hinzugefügt)</pre>
     * @param pParams placeholder replacements
     * @return [en] Case of type {0} is added: Case number: {1} (Added cases), [de] Fall hinzugefügt: Typ: {0}, Fallnummer: {1} (Fall hinzugefügt)
     */
    public static String getEventTypeCaseAdded(final Object... pParams) {
        return get(EVENT_TYPE_CASE_ADDED, pParams).value;
    }

    public static Translation getEventTypeCaseAddedObj(final Object... pParams) {
        return get(EVENT_TYPE_CASE_ADDED, pParams);
    }

    /**
     * <pre>EVENT_TYPE_CASE_REMOVED
     * SQLite key: eventtype_case_removed
     * [en] case with number {1} has been removed (Removed cases)
     * [de] Fall entfernt: Fallnummer: {1} (Fall entfernt)</pre>
     * @param pParams placeholder replacements
     * @return [en] case with number {1} has been removed (Removed cases), [de] Fall entfernt: Fallnummer: {1} (Fall entfernt)
     */
    public static String getEventTypeCaseRemoved(final Object... pParams) {
        return get(EVENT_TYPE_CASE_REMOVED, pParams).value;
    }

    public static Translation getEventTypeCaseRemovedObj(final Object... pParams) {
        return get(EVENT_TYPE_CASE_REMOVED, pParams);
    }

    /**
     * <pre>EVENT_TYPE_DOCUMENT_ADDED
     * SQLite key: eventtype_document_added
     * [en] Document added: type {0}, file name {1} (Added documents)
     * [de] Dokument hinzugefügt: Typ: {0}, Dateiname: {1} (Dokumente hinzugefügt)</pre>
     * @param pParams placeholder replacements
     * @return [en] Document added: type {0}, file name {1} (Added documents), [de] Dokument hinzugefügt: Typ: {0}, Dateiname: {1} (Dokumente hinzugefügt)
     */
    public static String getEventTypeDocumentAdded(final Object... pParams) {
        return get(EVENT_TYPE_DOCUMENT_ADDED, pParams).value;
    }

    public static Translation getEventTypeDocumentAddedObj(final Object... pParams) {
        return get(EVENT_TYPE_DOCUMENT_ADDED, pParams);
    }

    /**
     * <pre>EVENT_TYPE_DOCUMENT_REMOVED
     * SQLite key: eventtype_document_removed
     * [en] document of type {0} with document name {1} has been removed (Removed documents)
     * [de] Dokument entfernt: Typ: {0}, Dateinamen: {1} (Dokument entfernt)</pre>
     * @param pParams placeholder replacements
     * @return [en] document of type {0} with document name {1} has been removed (Removed documents), [de] Dokument entfernt: Typ: {0}, Dateinamen: {1} (Dokument entfernt)
     */
    public static String getEventTypeDocumentRemoved(final Object... pParams) {
        return get(EVENT_TYPE_DOCUMENT_REMOVED, pParams).value;
    }

    public static Translation getEventTypeDocumentRemovedObj(final Object... pParams) {
        return get(EVENT_TYPE_DOCUMENT_REMOVED, pParams);
    }

    /**
     * <pre>EVENT_TYPE_INKA_CANCELLED
     * SQLite key: eventtype_inka_cancelled
     * [en] INKA message cancelled (INKA message cancelled)
     * [de] INKA Nachricht storniert (INKA Nachricht storniert)</pre>
     * @return [en] INKA message cancelled (INKA message cancelled), [de] INKA Nachricht storniert (INKA Nachricht storniert)
     */
    public static String getEventTypeInkaCancelled() {
        return get(EVENT_TYPE_INKA_CANCELLED).value;
    }

    public static Translation getEventTypeInkaCancelledObj() {
        return get(EVENT_TYPE_INKA_CANCELLED);
    }

    /**
     * <pre>EVENT_TYPE_INKA_SENT
     * SQLite key: eventtype_inka_sent
     * [en] INKA message sent (INKA message sent)
     * [de] INKA Nachricht gesendet (INKA Nachricht gesendet)</pre>
     * @return [en] INKA message sent (INKA message sent), [de] INKA Nachricht gesendet (INKA Nachricht gesendet)
     */
    public static String getEventTypeInkaSent() {
        return get(EVENT_TYPE_INKA_SENT).value;
    }

    public static Translation getEventTypeInkaSentObj() {
        return get(EVENT_TYPE_INKA_SENT);
    }

    /**
     * <pre>EVENT_TYPE_INKA_STORED
     * SQLite key: eventtype_inka_stored
     * [en] INKA message stored (INKA message stored)
     * [de] INKA Nachricht gespeichert (INKA Nachricht gespeichert)</pre>
     * @return [en] INKA message stored (INKA message stored), [de] INKA Nachricht gespeichert (INKA Nachricht gespeichert)
     */
    public static String getEventTypeInkaStored() {
        return get(EVENT_TYPE_INKA_STORED).value;
    }

    public static Translation getEventTypeInkaStoredObj() {
        return get(EVENT_TYPE_INKA_STORED);
    }

    /**
     * <pre>EVENT_TYPE_INKA_UPDATED
     * SQLite key: eventtype_inka_updated
     * [en] INKA message updated (INKA message updated)
     * [de] INKA Nachricht aktualisiert (INKA Nachricht aktualisiert)</pre>
     * @return [en] INKA message updated (INKA message updated), [de] INKA Nachricht aktualisiert (INKA Nachricht aktualisiert)
     */
    public static String getEventTypeInkaUpdated() {
        return get(EVENT_TYPE_INKA_UPDATED).value;
    }

    public static Translation getEventTypeInkaUpdatedObj() {
        return get(EVENT_TYPE_INKA_UPDATED);
    }

    /**
     * <pre>EVENT_TYPE_KAIN_RECEIVED
     * SQLite key: eventtype_kain_received
     * [en] KAIN message received (KAIN message received)
     * [de] KAIN Nachricht eingegangen (KAIN Nachricht eingegangen)</pre>
     * @return [en] KAIN message received (KAIN message received), [de] KAIN Nachricht eingegangen (KAIN Nachricht eingegangen)
     */
    public static String getEventTypeKainReceived() {
        return get(EVENT_TYPE_KAIN_RECEIVED).value;
    }

    public static Translation getEventTypeKainReceivedObj() {
        return get(EVENT_TYPE_KAIN_RECEIVED);
    }

    /**
     * <pre>EVENT_TYPE_PROCESS_CLOSED
     * SQLite key: eventtype_process_closed
     * [en] Process closed (Closed processes)
     * [de] Vorgang abgeschlossen (Vorgang abgeschlossen)</pre>
     * @return [en] Process closed (Closed processes), [de] Vorgang abgeschlossen (Vorgang abgeschlossen)
     */
    public static String getEventTypeProcessClosed() {
        return get(EVENT_TYPE_PROCESS_CLOSED).value;
    }

    public static Translation getEventTypeProcessClosedObj() {
        return get(EVENT_TYPE_PROCESS_CLOSED);
    }

    /**
     * <pre>EVENT_TYPE_PROCESS_CONTINUED
     * SQLite key: eventtype_process_continued
     * [de] Vorgang fortgesetzt (Vorgang fortgesetzt)</pre>
     * @return [de] Vorgang fortgesetzt (Vorgang fortgesetzt)
     */
    public static String getEventTypeProcessContinued() {
        return get(EVENT_TYPE_PROCESS_CONTINUED).value;
    }

    public static Translation getEventTypeProcessContinuedObj() {
        return get(EVENT_TYPE_PROCESS_CONTINUED);
    }

    /**
     * <pre>EVENT_TYPE_PROCESS_PAUSED
     * SQLite key: eventtype_process_paused
     * [de] Vorgang pausiert (Vorgang pausiert)</pre>
     * @return [de] Vorgang pausiert (Vorgang pausiert)
     */
    public static String getEventTypeProcessPaused() {
        return get(EVENT_TYPE_PROCESS_PAUSED).value;
    }

    public static Translation getEventTypeProcessPausedObj() {
        return get(EVENT_TYPE_PROCESS_PAUSED);
    }

    /**
     * <pre>EVENT_TYPE_PROCESS_REOPENED
     * SQLite key: eventtype_process_reopened
     * [en] Process reopened (Process reopened)
     * [de] Vorgang erneut geöffnet (Vorgang erneut geöffnet)</pre>
     * @return [en] Process reopened (Process reopened), [de] Vorgang erneut geöffnet (Vorgang erneut geöffnet)
     */
    public static String getEventTypeProcessReopened() {
        return get(EVENT_TYPE_PROCESS_REOPENED).value;
    }

    public static Translation getEventTypeProcessReopenedObj() {
        return get(EVENT_TYPE_PROCESS_REOPENED);
    }

    /**
     * <pre>EVENT_TYPE_PROCESS_SUBJECT_CHANGED
     * SQLite key: eventtype_process_subject_changed
     * [en] Process subject changed (Changed process-subjects)
     * [de] Vorgangsart geändert (Vorgangsart geändert)</pre>
     * @return [en] Process subject changed (Changed process-subjects), [de] Vorgangsart geändert (Vorgangsart geändert)
     */
    public static String getEventTypeProcessSubjectChanged() {
        return get(EVENT_TYPE_PROCESS_SUBJECT_CHANGED).value;
    }

    public static Translation getEventTypeProcessSubjectChangedObj() {
        return get(EVENT_TYPE_PROCESS_SUBJECT_CHANGED);
    }

    /**
     * <pre>EVENT_TYPE_PROCESS_SUBJECT_CHANGED_DESCRIPTION
     * SQLite key: eventtype_process_subject_changed_description
     * [en] Process subject changed from: {0} to: {1}
     * [de] Vorgangsart geändert von {0} auf {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] Process subject changed from: {0} to: {1}, [de] Vorgangsart geändert von {0} auf {1}
     */
    public static String getEventTypeProcessSubjectChangedDescription(final Object... pParams) {
        return get(EVENT_TYPE_PROCESS_SUBJECT_CHANGED_DESCRIPTION, pParams).value;
    }

    /**
     * <pre>EVENT_TYPE_PROCESS_SUBJECT_DELETE_DESCRIPTION
     * SQLite key: eventtype_process_subject_delete_description
     * [de] Vorgangstyp {0} entfernt</pre>
     * @param pParams placeholder replacements
     * @return [de] Vorgangstyp {0} entfernt
     */
    public static String getEventTypeProcessSubjectDeleteDescription(final Object... pParams) {
        return get(EVENT_TYPE_PROCESS_SUBJECT_DELETE_DESCRIPTION, pParams).value;
    }

    /**
     * <pre>EVENT_TYPE_PROCESS_SUBJECT_SET_DESCRIPTION
     * SQLite key: eventtype_process_subject_set_description
     * [en] {1} set as process-subject
     * [de] {1} als Vorgangstyp gesetzt</pre>
     * @param pParams placeholder replacements
     * @return [en] {1} set as process-subject, [de] {1} als Vorgangstyp gesetzt
     */
    public static String getEventTypeProcessSubjectSetDescription(final Object... pParams) {
        return get(EVENT_TYPE_PROCESS_SUBJECT_SET_DESCRIPTION, pParams).value;
    }

    /**
     * <pre>EVENT_TYPE_PROCESS_USER_CHANGED
     * SQLite key: eventtype_process_user_changed
     * [en] Process user changed (Changed process-users)
     * [de] Vorgangs-Bearbeiter geändert (Vorgangs-Bearbeiter geändert)</pre>
     * @return [en] Process user changed (Changed process-users), [de] Vorgangs-Bearbeiter geändert (Vorgangs-Bearbeiter geändert)
     */
    public static String getEventTypeProcessUserChanged() {
        return get(EVENT_TYPE_PROCESS_USER_CHANGED).value;
    }

    public static Translation getEventTypeProcessUserChangedObj() {
        return get(EVENT_TYPE_PROCESS_USER_CHANGED);
    }

    /**
     * <pre>EVENT_TYPE_PROCESS_USER_CHANGED_DESCRIPTION
     * SQLite key: eventtype_process_user_changed_description
     * [en] Process user changed from: {0} to: {1}
     * [de] Vorgangs-Bearbeiter geändert von {0} auf {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] Process user changed from: {0} to: {1}, [de] Vorgangs-Bearbeiter geändert von {0} auf {1}
     */
    public static String getEventTypeProcessUserChangedDescription(final Object... pParams) {
        return get(EVENT_TYPE_PROCESS_USER_CHANGED_DESCRIPTION, pParams).value;
    }

    /**
     * <pre>EVENT_TYPE_PROCESS_USER_DELETE_DESCRIPTION
     * SQLite key: eventtype_process_user_delete_description
     * [de] Bearbeiter {0} entfernt</pre>
     * @param pParams placeholder replacements
     * @return [de] Bearbeiter {0} entfernt
     */
    public static String getEventTypeProcessUserDeleteDescription(final Object... pParams) {
        return get(EVENT_TYPE_PROCESS_USER_DELETE_DESCRIPTION, pParams).value;
    }

    /**
     * <pre>EVENT_TYPE_PROCESS_USER_SET_DESCRIPTION
     * SQLite key: eventtype_process_user_set_description
     * [en] {1} set as process-user
     * [de] {1} als Bearbeiter gesetzt</pre>
     * @param pParams placeholder replacements
     * @return [en] {1} set as process-user, [de] {1} als Bearbeiter gesetzt
     */
    public static String getEventTypeProcessUserSetDescription(final Object... pParams) {
        return get(EVENT_TYPE_PROCESS_USER_SET_DESCRIPTION, pParams).value;
    }

    /**
     * <pre>EVENT_TYPE_REMINDER_ASSIGNED
     * SQLite key: eventtype_reminder_assigned
     * [en] Reminder assigned (Assigned reminders)
     * [de] Wiedervorlage zugewiesen (Wiedervorlage zugewiesen)</pre>
     * @return [en] Reminder assigned (Assigned reminders), [de] Wiedervorlage zugewiesen (Wiedervorlage zugewiesen)
     */
    public static String getEventTypeReminderAssigned() {
        return get(EVENT_TYPE_REMINDER_ASSIGNED).value;
    }

    public static Translation getEventTypeReminderAssignedObj() {
        return get(EVENT_TYPE_REMINDER_ASSIGNED);
    }

    /**
     * <pre>EVENT_TYPE_REMINDER_CHANGED
     * SQLite key: eventtype_reminder_changed
     * [en] Reminder changed: type {0}, due date: {1}, assigned to: {2}, status: {3} (Changed reminders)
     * [de] Wiedervorlage geändert:  Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3} (Wiedervorlage geändert)</pre>
     * @param pParams placeholder replacements
     * @return [en] Reminder changed: type {0}, due date: {1}, assigned to: {2}, status: {3} (Changed reminders), [de] Wiedervorlage geändert:  Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3} (Wiedervorlage geändert)
     */
    public static String getEventTypeReminderChanged(final Object... pParams) {
        return get(EVENT_TYPE_REMINDER_CHANGED, pParams).value;
    }

    public static Translation getEventTypeReminderChangedObj(final Object... pParams) {
        return get(EVENT_TYPE_REMINDER_CHANGED, pParams);
    }

    /**
     * <pre>EVENT_TYPE_REMINDER_CREATED
     * SQLite key: eventtype_reminder_created
     * [en] Reminder created: type {0}, due date: {1}, assigned to: {2}, status: {3} (Created reminders)
     * [de] Wiedervorlage angelegt: Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3} (Wiedervorlage angelegt)</pre>
     * @param pParams placeholder replacements
     * @return [en] Reminder created: type {0}, due date: {1}, assigned to: {2}, status: {3} (Created reminders), [de] Wiedervorlage angelegt: Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3} (Wiedervorlage angelegt)
     */
    public static String getEventTypeReminderCreated(final Object... pParams) {
        return get(EVENT_TYPE_REMINDER_CREATED, pParams).value;
    }

    public static Translation getEventTypeReminderCreatedObj(final Object... pParams) {
        return get(EVENT_TYPE_REMINDER_CREATED, pParams);
    }

    /**
     * <pre>EVENT_TYPE_REMINDER_EXPIRES
     * SQLite key: eventtype_reminder_expires
     * [en] Reminder Expired: type {0}, due date: {1}, assigned to: {2}, status: {3} (Expired reminders)
     * [de] Wiedervorlage abgelaufen: Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3} (Wiedervorlage abgelaufen)</pre>
     * @param pParams placeholder replacements
     * @return [en] Reminder Expired: type {0}, due date: {1}, assigned to: {2}, status: {3} (Expired reminders), [de] Wiedervorlage abgelaufen: Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3} (Wiedervorlage abgelaufen)
     */
    public static String getEventTypeReminderExpires(final Object... pParams) {
        return get(EVENT_TYPE_REMINDER_EXPIRES, pParams).value;
    }

    public static Translation getEventTypeReminderExpiresObj(final Object... pParams) {
        return get(EVENT_TYPE_REMINDER_EXPIRES, pParams);
    }

    /**
     * <pre>EVENT_TYPE_REMINDER_REMOVED
     * SQLite key: eventtype_reminder_removed
     * [en] Reminder {0} was removed (Removed reminders)
     * [de] Wiedervorlage gelöscht: Typ: {0} (Wiedervorlage gelöscht)</pre>
     * @param pParams placeholder replacements
     * @return [en] Reminder {0} was removed (Removed reminders), [de] Wiedervorlage gelöscht: Typ: {0} (Wiedervorlage gelöscht)
     */
    public static String getEventTypeReminderRemoved(final Object... pParams) {
        return get(EVENT_TYPE_REMINDER_REMOVED, pParams).value;
    }

    public static Translation getEventTypeReminderRemovedObj(final Object... pParams) {
        return get(EVENT_TYPE_REMINDER_REMOVED, pParams);
    }

    /**
     * <pre>EVENT_TYPE_REQUEST_CREATED
     * SQLite key: eventtype_request_created
     * [en] Request added: type {0}, Institution name: {1}, {2} (Created requests)
     * [de] Anfrage angelegt: Typ: {0}, Institutionsname {1}, {2} (Anfrage angelegt)</pre>
     * @param pParams placeholder replacements
     * @return [en] Request added: type {0}, Institution name: {1}, {2} (Created requests), [de] Anfrage angelegt: Typ: {0}, Institutionsname {1}, {2} (Anfrage angelegt)
     */
    public static String getEventTypeRequestCreated(final Object... pParams) {
        return get(EVENT_TYPE_REQUEST_CREATED, pParams).value;
    }

    public static Translation getEventTypeRequestCreatedObj(final Object... pParams) {
        return get(EVENT_TYPE_REQUEST_CREATED, pParams);
    }

    /**
     * <pre>EVENT_TYPE_REQUEST_REMOVED
     * SQLite key: eventtype_request_removed
     * [en] Request removed: Typ {0} (Removed requests)
     * [de] Anfrage gelöscht: Typ: {0} (Anfrage gelöscht)</pre>
     * @param pParams placeholder replacements
     * @return [en] Request removed: Typ {0} (Removed requests), [de] Anfrage gelöscht: Typ: {0} (Anfrage gelöscht)
     */
    public static String getEventTypeRequestRemoved(final Object... pParams) {
        return get(EVENT_TYPE_REQUEST_REMOVED, pParams).value;
    }

    public static Translation getEventTypeRequestRemovedObj(final Object... pParams) {
        return get(EVENT_TYPE_REQUEST_REMOVED, pParams);
    }

    /**
     * <pre>EVENT_TYPE_REQUEST_UPDATED
     * SQLite key: eventtype_request_updated
     * [en] Request changed: Typ {0}, Institutionsname: {1}, {2} (Changed requests)
     * [de] Anfrage geändert: Typ: {0}, Institutionsname {1}, {2} (Anfrage geändert)</pre>
     * @param pParams placeholder replacements
     * @return [en] Request changed: Typ {0}, Institutionsname: {1}, {2} (Changed requests), [de] Anfrage geändert: Typ: {0}, Institutionsname {1}, {2} (Anfrage geändert)
     */
    public static String getEventTypeRequestUpdated(final Object... pParams) {
        return get(EVENT_TYPE_REQUEST_UPDATED, pParams).value;
    }

    public static Translation getEventTypeRequestUpdatedObj(final Object... pParams) {
        return get(EVENT_TYPE_REQUEST_UPDATED, pParams);
    }

    /**
     * <pre>EXCEPTION
     * SQLite key: exception
     * [en] Exception
     * [de] Ausnahme</pre>
     * @return [en] Exception, [de] Ausnahme
     */
    public static String getException() {
        return get(EXCEPTION).value;
    }

    /**
     * <pre>EXIT
     * SQLite key: exit
     * [en] Exit
     * [de] Beenden</pre>
     * ATTENTION this value ('Exit') seems to be also defined under the key LOGIN_EXIT!
     * @return [en] Exit, [de] Beenden
     */
    public static String getExit() {
        return get(EXIT).value;
    }

    /**
     * <pre>EXPORT_TYPE_CSV
     * SQLite key: export_type_csv
     * [en] CSV (comma-separated values)
     * [de] CSV (Kommagetrennte Werte)</pre>
     * @return [en] CSV (comma-separated values), [de] CSV (Kommagetrennte Werte)
     */
    public static String getExportTypeCSV() {
        return get(EXPORT_TYPE_CSV).value;
    }

    public static Translation getExportTypeCSVObj() {
        return get(EXPORT_TYPE_CSV);
    }

    /**
     * <pre>EXPORT_TYPE_EXCEL
     * SQLite key: export_type_excel
     * [en] Excel (Microsoft Excel)
     * [de] Excel (Microsoft Excel)</pre>
     * @return [en] Excel (Microsoft Excel), [de] Excel (Microsoft Excel)
     */
    public static String getExportTypeEXCEL() {
        return get(EXPORT_TYPE_EXCEL).value;
    }

    public static Translation getExportTypeEXCELObj() {
        return get(EXPORT_TYPE_EXCEL);
    }

    /**
     * <pre>EXPORT_TYPE_XML
     * SQLite key: export_type_xml
     * [de] Xml (Xml-Format)</pre>
     * @return [de] Xml (Xml-Format)
     */
    public static String getExportTypeXML() {
        return get(EXPORT_TYPE_XML).value;
    }

    public static Translation getExportTypeXMLObj() {
        return get(EXPORT_TYPE_XML);
    }

    /**
     * <pre>EXTERN_VERSIONS
     * SQLite key: externversions
     * [en] HIS-Versions
     * [de] KIS-Versionen</pre>
     * @return [en] HIS-Versions, [de] KIS-Versionen
     */
    public static String getExternVersions() {
        return get(EXTERN_VERSIONS).value;
    }

    /**
     * <pre>EXTERNAL_OCCUPANCY
     * SQLite key: externaloccupancy
     * [en] External Occupancy
     * [de] Belegabteilung</pre>
     * @return [en] External Occupancy, [de] Belegabteilung
     */
    public static String getExternalOccupancy() {
        return get(EXTERNAL_OCCUPANCY).value;
    }

    /**
     * <pre>FAILED
     * SQLite key: failed
     * [en] Failed
     * [de] Fehlgeschlagen</pre>
     * ATTENTION this value ('Failed') seems to be also defined under the key CASE_MERGING_JOB_FAILED! this value ('failed') seems to be also defined under the key JOB_STATUS_FAILED!
     * @return [en] Failed, [de] Fehlgeschlagen
     */
    public static String getFailed() {
        return get(FAILED).value;
    }

    /**
     * <pre>FALL_MAIN_FEHLER
     * SQLite key: fall_main_fehler
     * [de] Basis Fall nicht vorhanden</pre>
     * @return [de] Basis Fall nicht vorhanden
     */
    public static String getFallMainFehler() {
        return get(FALL_MAIN_FEHLER).value;
    }

    /**
     * <pre>FAX
     * SQLite key: fax
     * [en] Fax
     * [de] Fax</pre>
     * ATTENTION this value ('Fax') seems to be also defined under the key AUDIT_FAX! this value ('Fax') seems to be also defined under the key MDK_FAX!
     * @return [en] Fax, [de] Fax
     */
    public static String getFax() {
        return get(FAX).value;
    }

    /**
     * <pre>FEE_CODE_VALIDATION
     * SQLite key: feecode_validation
     * [de] Ungültiger Entgelteintrag. Bitte geben Sie einen gültigen Eintrag ein!</pre>
     * @return [de] Ungültiger Entgelteintrag. Bitte geben Sie einen gültigen Eintrag ein!
     */
    public static String getFeeCodeValidation() {
        return get(FEE_CODE_VALIDATION).value;
    }

    /**
     * <pre>FEE_GROUP
     * SQLite key: feegroup
     * [en] Fee Group
     * [de] Entgeltbereich</pre>
     * @return [en] Fee Group, [de] Entgeltbereich
     */
    public static String getFeeGroup() {
        return get(FEE_GROUP).value;
    }

    /**
     * <pre>FEE_GROUP_APPENDIX_3
     * SQLite key: feegroup_appendix3
     * [en] Appendix 3
     * [de] Anlage 3</pre>
     * @return [en] Appendix 3, [de] Anlage 3
     */
    public static String getFeeGroupAppendix3() {
        return get(FEE_GROUP_APPENDIX_3).value;
    }

    /**
     * <pre>FEE_GROUP_APPENDIX_3_WITHOUT_FINAL_INVOICE
     * SQLite key: feegroup_appendix3withoutfinalinvoice
     * [en] Appendix 3 without final invoice
     * [de] Anlage 3 ohne Schlussrechnung</pre>
     * @return [en] Appendix 3 without final invoice, [de] Anlage 3 ohne Schlussrechnung
     */
    public static String getFeeGroupAppendix3WithoutFinalInvoice() {
        return get(FEE_GROUP_APPENDIX_3_WITHOUT_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_APPENDIX_3_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
     * SQLite key: feegroup_appendix3withoutfinalinvoiceandwithoutdischarge
     * [en] Appendix 3 without final invoice and without Discharge
     * [de] Anlage 3 ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] Appendix 3 without final invoice and without Discharge, [de] Anlage 3 ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getFeeGroupAppendix3WithoutFinalInvoiceAndWithoutDischarge() {
        return get(FEE_GROUP_APPENDIX_3_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE).value;
    }

    /**
     * <pre>FEE_GROUP_BEFORE_INPATIENT
     * SQLite key: feegroup_beforeinpatient
     * [en] before inpatient
     * [de] vorstationär</pre>
     * ATTENTION this value ('Before inpatient') seems to be also defined under the key ICD_TYPE_BEFORE_INPATIENT!
     * @return [en] before inpatient, [de] vorstationär
     */
    public static String getFeeGroupBeforeInpatient() {
        return get(FEE_GROUP_BEFORE_INPATIENT).value;
    }

    /**
     * <pre>FEE_GROUP_BEFORE_INPATIENT_ALONE_WITH_FINAL_INVOICE
     * SQLite key: feegroup_beforeinpatientalonewithfinalinvoice
     * [en] Before stationary (alone) (with final invoice)
     * [de] vorstationär mit Schlussrechnung</pre>
     * @return [en] Before stationary (alone) (with final invoice), [de] vorstationär mit Schlussrechnung
     */
    public static String getFeeGroupBeforeInpatientAloneWithFinalInvoice() {
        return get(FEE_GROUP_BEFORE_INPATIENT_ALONE_WITH_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_BEFORE_INPATIENT_WITHOUT_FINAL_INVOICE
     * SQLite key: feegroup_beforeinpatientwithoutfinalinvoice
     * [en] before inpatient without final invoice
     * [de] vorstationär ohne Schlussrechnung</pre>
     * @return [en] before inpatient without final invoice, [de] vorstationär ohne Schlussrechnung
     */
    public static String getFeeGroupBeforeInpatientWithoutFinalInvoice() {
        return get(FEE_GROUP_BEFORE_INPATIENT_WITHOUT_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_BEFORE_INPATIENT_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
     * SQLite key: feegroup_beforeinpatientwithoutfinalinvoiceandwithoutdischarge
     * [en] before inpatient without final invoice and without Discharge
     * [de] vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] before inpatient without final invoice and without Discharge, [de] vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getFeeGroupBeforeInpatientWithoutFinalInvoiceAndWithoutDischarge() {
        return get(FEE_GROUP_BEFORE_INPATIENT_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE).value;
    }

    /**
     * <pre>FEE_GROUP_BPFLV
     * SQLite key: feegroup_bpflv
     * [en] BPflV
     * [de] BPflV</pre>
     * @return [en] BPflV, [de] BPflV
     */
    public static String getFeeGroupBPFLV() {
        return get(FEE_GROUP_BPFLV).value;
    }

    /**
     * <pre>FEE_GROUP_BPFLV_WITHOUT_FINAL_INVOICE
     * SQLite key: feegroup_bpflvwithoutfinalinvoice
     * [en] BPflV without final invoice
     * [de] BPflV ohne Schlussrechnung</pre>
     * @return [en] BPflV without final invoice, [de] BPflV ohne Schlussrechnung
     */
    public static String getFeeGroupBPFLV_WithoutFinalInvoice() {
        return get(FEE_GROUP_BPFLV_WITHOUT_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_BPFLV_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
     * SQLite key: feegroup_bpflvwithoutfinalinvoiceandwithoutdischarge
     * [en] BPflV without final invoice and without Discharge
     * [de] BPflV ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] BPflV without final invoice and without Discharge, [de] BPflV ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getFeeGroupBPFLV_WithoutFinalInvoiceAndWithoutDischarge() {
        return get(FEE_GROUP_BPFLV_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE).value;
    }

    /**
     * <pre>FEE_GROUP_DAK_INTERNAL_CHARGES
     * SQLite key: feegroup_dakinternalcharges
     * [en] DAK internal charges
     * [de] DAK-interne Entgelte</pre>
     * @return [en] DAK internal charges, [de] DAK-interne Entgelte
     */
    public static String getFeeGroupDAK_InternalCharges() {
        return get(FEE_GROUP_DAK_INTERNAL_CHARGES).value;
    }

    /**
     * <pre>FEE_GROUP_DAK_INTERNAL_CHARGES_WITHOUT_FINAL_INVOICE
     * SQLite key: feegroup_dakinternalchargeswithoutfinalinvoice
     * [en] DAK internal charges without final invoice
     * [de] DAK-interne Entgelte ohne Schlussrechnung</pre>
     * @return [en] DAK internal charges without final invoice, [de] DAK-interne Entgelte ohne Schlussrechnung
     */
    public static String getFeeGroupDAK_InternalChargesWithoutFinalInvoice() {
        return get(FEE_GROUP_DAK_INTERNAL_CHARGES_WITHOUT_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_DAK_INTERNAL_CHARGES_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
     * SQLite key: feegroup_dakinternalchargeswithoutfinalinvoiceandwithoutdischarge
     * [en] DAK internal charges without final invoice and without Discharge
     * [de] DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] DAK internal charges without final invoice and without Discharge, [de] DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getFeeGroupDAK_InternalChargesWithoutFinalInvoiceAndWithoutDischarge() {
        return get(FEE_GROUP_DAK_INTERNAL_CHARGES_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE).value;
    }

    /**
     * <pre>FEE_GROUP_DMP
     * SQLite key: feegroup_dmp
     * [en] DMP
     * [de] DMP</pre>
     * @return [en] DMP, [de] DMP
     */
    public static String getFeeGroupDMP() {
        return get(FEE_GROUP_DMP).value;
    }

    /**
     * <pre>FEE_GROUP_DMP_WITHOUT_FINAL_INVOICE
     * SQLite key: feegroup_dmpwithoutfinalinvoice
     * [en] DMP without final invoice
     * [de] DMP ohne Schlussrechnung</pre>
     * @return [en] DMP without final invoice, [de] DMP ohne Schlussrechnung
     */
    public static String getFeeGroupDMP_WithoutFinalInvoice() {
        return get(FEE_GROUP_DMP_WITHOUT_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_DMP_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
     * SQLite key: feegroup_dmpwithoutfinalinvoiceandwithoutdischarge
     * [en] DMP without final invoice and without Discharge
     * [de] DMP ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] DMP without final invoice and without Discharge, [de] DMP ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getFeeGroupDMP_WithoutFinalInvoiceAndWithoutDischarge() {
        return get(FEE_GROUP_DMP_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE).value;
    }

    /**
     * <pre>FEE_GROUP_DRG
     * SQLite key: feegroup_drg
     * [en] DRG
     * [de] DRG</pre>
     * ATTENTION this value ('DRG') seems to be also defined under the key CASE_RESOLVE_DRG! this value ('DRG') seems to be also defined under the key CASE_TYPE_DRG! this value ('DRG') seems to be also defined under the key DRG! this value ('DRG') seems to be also defined under the key DRG_SHORTCUT! this value ('DRG') seems to be also defined under the key ICD_TYPE_DRG! this value ('DRG') seems to be also defined under the key RULES_DRG!
     * @return [en] DRG, [de] DRG
     */
    public static String getFeeGroupDRG() {
        return get(FEE_GROUP_DRG).value;
    }

    /**
     * <pre>FEE_GROUP_DRG_WITHOUT_FINAL_INVOICE
     * SQLite key: feegroup_drgwithoutfinalinvoice
     * [en] DRG without final invoice
     * [de] DRG ohne Schlussrechnung</pre>
     * @return [en] DRG without final invoice, [de] DRG ohne Schlussrechnung
     */
    public static String getFeeGroupDRG_WithoutFinalInvoice() {
        return get(FEE_GROUP_DRG_WITHOUT_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_DRG_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
     * SQLite key: feegroup_drgwithoutfinalinvoiceandwithoutdischarge
     * [en] DRG without final invoice and without Discharge
     * [de] DRG ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] DRG without final invoice and without Discharge, [de] DRG ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getFeeGroupDRG_WithoutFinalInvoiceAndWithoutDischarge() {
        return get(FEE_GROUP_DRG_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE).value;
    }

    /**
     * <pre>FEE_GROUP_HOSPITAL_INDIVIDUAL_PEPP_ANNEX_1B_INPATIENT_AND_2B_PARTIAL_INPATIENT_WITH_FINAL_INVOICE
     * SQLite key: feegroup_hospitalindividualpeppannex1binpatientand2bpartialinpatientwithfinalinvoice
     * [en] Hospital Individual PEPP Annex 1b (inpatient) and 2b (partial inpatient) (with final invoice)
     * [de] Krankenhausindividuelle PEPP Anlage 1b (vollst) und 2b (teilstat) (mit Schlussrechnung)</pre>
     * @return [en] Hospital Individual PEPP Annex 1b (inpatient) and 2b (partial inpatient) (with final invoice), [de] Krankenhausindividuelle PEPP Anlage 1b (vollst) und 2b (teilstat) (mit Schlussrechnung)
     */
    public static String getFeeGroupHospitalIndividualPEPP_Annex1bInpatientAnd2bPartialInpatientWithFinalInvoice() {
        return get(FEE_GROUP_HOSPITAL_INDIVIDUAL_PEPP_ANNEX_1B_INPATIENT_AND_2B_PARTIAL_INPATIENT_WITH_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_IV_FULL_INPATIENT_AND_DAY_PATIENT_WITH_FINAL_INVOICE
     * SQLite key: feegroup_ivfullinpatientanddaypatientwithfinalinvoice
     * [en] IV full inpatient and day patient (with final invoice)
     * [de] IV vollstat und teilstat (mit Schlussrechnung)</pre>
     * @return [en] IV full inpatient and day patient (with final invoice), [de] IV vollstat und teilstat (mit Schlussrechnung)
     */
    public static String getFeeGroupIV_FullInpatientAndDayPatientWithFinalInvoice() {
        return get(FEE_GROUP_IV_FULL_INPATIENT_AND_DAY_PATIENT_WITH_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_IV_INTEGRATED_CARE
     * SQLite key: feegroup_ivintegratedcare
     * [en] IV (integrated care)
     * [de] IV (integrierte Versorgung)</pre>
     * @return [en] IV (integrated care), [de] IV (integrierte Versorgung)
     */
    public static String getFeeGroupIV_IntegratedCare() {
        return get(FEE_GROUP_IV_INTEGRATED_CARE).value;
    }

    /**
     * <pre>FEE_GROUP_IV_INTEGRATED_CARE_WITHOUT_FINAL_INVOICE
     * SQLite key: feegroup_ivintegratedcarewithoutfinalinvoice
     * [en] IV (integrated care) without final invoice
     * [de] IV (integrierte Versorgung) ohne Schlussrechnung</pre>
     * @return [en] IV (integrated care) without final invoice, [de] IV (integrierte Versorgung) ohne Schlussrechnung
     */
    public static String getFeeGroupIV_IntegratedCareWithoutFinalInvoice() {
        return get(FEE_GROUP_IV_INTEGRATED_CARE_WITHOUT_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_IV_INTEGRATED_CARE_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
     * SQLite key: feegroup_ivintegratedcarewithoutfinalinvoiceandwithoutdischarge
     * [en] IV (integrated care) without final invoice and without Discharge
     * [de] IV (integrierte Versorgung) ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] IV (integrated care) without final invoice and without Discharge, [de] IV (integrierte Versorgung) ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getFeeGroupIV_IntegratedCareWithoutFinalInvoiceAndWithoutDischarge() {
        return get(FEE_GROUP_IV_INTEGRATED_CARE_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE).value;
    }

    /**
     * <pre>FEE_GROUP_MODEL_PROJECTS
     * SQLite key: feegroup_modelprojects
     * [en] Model projects
     * [de] Modellvorhaben</pre>
     * @return [en] Model projects, [de] Modellvorhaben
     */
    public static String getFeeGroupModelProjects() {
        return get(FEE_GROUP_MODEL_PROJECTS).value;
    }

    /**
     * <pre>FEE_GROUP_MODEL_PROJECTS_WITH_FINAL_INVOICE
     * SQLite key: feegroup_modelprojectswithfinalinvoice
     * [en] Model projects (with final invoice)
     * [de] Modellvorhaben (mit Schlussrechnung)</pre>
     * @return [en] Model projects (with final invoice), [de] Modellvorhaben (mit Schlussrechnung)
     */
    public static String getFeeGroupModelProjectsWithFinalInvoice() {
        return get(FEE_GROUP_MODEL_PROJECTS_WITH_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_MODEL_PROJECTS_WITHOUT_FINAL_INVOICE
     * SQLite key: feegroup_modelprojectswithoutfinalinvoice
     * [en] Model projects without final invoice
     * [de] Modellvorhaben ohne Schlussrechnung</pre>
     * @return [en] Model projects without final invoice, [de] Modellvorhaben ohne Schlussrechnung
     */
    public static String getFeeGroupModelProjectsWithoutFinalInvoice() {
        return get(FEE_GROUP_MODEL_PROJECTS_WITHOUT_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_MODEL_PROJECTS_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
     * SQLite key: feegroup_modelprojectswithoutfinalinvoiceandwithoutdischarge
     * [en] Model projects without final invoice and without Discharge
     * [de] Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] Model projects without final invoice and without Discharge, [de] Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getFeeGroupModelProjectsWithoutFinalInvoiceAndWithoutDischarge() {
        return get(FEE_GROUP_MODEL_PROJECTS_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE).value;
    }

    /**
     * <pre>FEE_GROUP_NUB
     * SQLite key: feegroup_nub
     * [en] NUB
     * [de] NUB</pre>
     * @return [en] NUB, [de] NUB
     */
    public static String getFeeGroupNUB() {
        return get(FEE_GROUP_NUB).value;
    }

    /**
     * <pre>FEE_GROUP_NUB_WITHOUT_FINAL_INVOICE
     * SQLite key: feegroup_nubwithoutfinalinvoice
     * [en] NUB without final invoice
     * [de] NUB ohne Schlussrechnung</pre>
     * @return [en] NUB without final invoice, [de] NUB ohne Schlussrechnung
     */
    public static String getFeeGroupNUB_WithoutFinalInvoice() {
        return get(FEE_GROUP_NUB_WITHOUT_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_NUB_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
     * SQLite key: feegroup_nubwithoutfinalinvoiceandwithoutdischarge
     * [en] NUB without final invoice and without Discharge
     * [de] NUB ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] NUB without final invoice and without Discharge, [de] NUB ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getFeeGroupNUB_WithoutFinalInvoiceAndWithoutDischarge() {
        return get(FEE_GROUP_NUB_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE).value;
    }

    /**
     * <pre>FEE_GROUP_PARTIAL_PAYMENT_WITHOUT_FINAL_INVOICE_WITH_DISMISSAL
     * SQLite key: feegroup_partialpaymentwithoutfinalinvoicewithdismissal
     * [en] Partial payment (without final invoice / with dismissal)
     * [de] Teilzahlung (ohne Schlussrechnung / mit ENTL)</pre>
     * @return [en] Partial payment (without final invoice / with dismissal), [de] Teilzahlung (ohne Schlussrechnung / mit ENTL)
     */
    public static String getFeeGroupPartialPaymentWithoutFinalInvoiceWithDismissal() {
        return get(FEE_GROUP_PARTIAL_PAYMENT_WITHOUT_FINAL_INVOICE_WITH_DISMISSAL).value;
    }

    /**
     * <pre>FEE_GROUP_PARTIAL_PAYMENT_WITHOUT_FINAL_INVOICE_WITHOUT_DISMISSAL
     * SQLite key: feegroup_partialpaymentwithoutfinalinvoicewithoutdismissal
     * [en] Partial payment (without final invoice / without dismissal)
     * [de] Teilzahlung (ohne Schlussrechnung / ohne ENTL)</pre>
     * @return [en] Partial payment (without final invoice / without dismissal), [de] Teilzahlung (ohne Schlussrechnung / ohne ENTL)
     */
    public static String getFeeGroupPartialPaymentWithoutFinalInvoiceWithoutDismissal() {
        return get(FEE_GROUP_PARTIAL_PAYMENT_WITHOUT_FINAL_INVOICE_WITHOUT_DISMISSAL).value;
    }

    /**
     * <pre>FEE_GROUP_PEPP_ANNEX_1A_INPATIENT_AND_2A_PARTIAL_INPATIENT_WITH_FINAL_INVOICE
     * SQLite key: feegroup_peppannex1ainpatientand2apartialinpatientwithfinalinvoice
     * [en] PEPP Annex 1a (inpatient) and 2a (partial inpatient) (with final invoice)
     * [de] PEPP Anlage 1a (vollstat) und 2a (teilstat) (mit Schlussrechnung)</pre>
     * @return [en] PEPP Annex 1a (inpatient) and 2a (partial inpatient) (with final invoice), [de] PEPP Anlage 1a (vollstat) und 2a (teilstat) (mit Schlussrechnung)
     */
    public static String getFeeGroupPEPP_Annex1aInpatientAnd2aPartialInpatientWithFinalInvoice() {
        return get(FEE_GROUP_PEPP_ANNEX_1A_INPATIENT_AND_2A_PARTIAL_INPATIENT_WITH_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_SEPARATE_CHARGES
     * SQLite key: feegroup_separatecharges
     * [en] separate charges
     * [de] gesonderte Entgelte</pre>
     * @return [en] separate charges, [de] gesonderte Entgelte
     */
    public static String getFeeGroupSeparateCharges() {
        return get(FEE_GROUP_SEPARATE_CHARGES).value;
    }

    /**
     * <pre>FEE_GROUP_SEPARATE_CHARGES_WITHOUT_FINAL_INVOICE
     * SQLite key: feegroup_separatechargeswithoutfinalinvoice
     * [en] separate charges without final invoice
     * [de] gesonderte Entgelte ohne Schlussrechnung</pre>
     * @return [en] separate charges without final invoice, [de] gesonderte Entgelte ohne Schlussrechnung
     */
    public static String getFeeGroupSeparateChargesWithoutFinalInvoice() {
        return get(FEE_GROUP_SEPARATE_CHARGES_WITHOUT_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_SEPARATE_CHARGES_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
     * SQLite key: feegroup_separatechargeswithoutfinalinvoiceandwithoutdischarge
     * [en] separate charges without final invoice and without Discharge
     * [de] gesonderte Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] separate charges without final invoice and without Discharge, [de] gesonderte Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getFeeGroupSeparateChargesWithoutFinalInvoiceAndWithoutDischarge() {
        return get(FEE_GROUP_SEPARATE_CHARGES_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE).value;
    }

    /**
     * <pre>FEE_GROUP_SPECIAL_FACILITIES_WITHOUT_FINAL_INVOICE
     * SQLite key: feegroup_specialfacilitieswithoutfinalinvoice
     * [en] Special facilities without final invoice
     * [de] Besondere Einrichtungen ohne Schlussrechnung</pre>
     * @return [en] Special facilities without final invoice, [de] Besondere Einrichtungen ohne Schlussrechnung
     */
    public static String getFeeGroupSpecialFacilitiesWithoutFinalInvoice() {
        return get(FEE_GROUP_SPECIAL_FACILITIES_WITHOUT_FINAL_INVOICE).value;
    }

    /**
     * <pre>FEE_GROUP_SPECIAL_INSTITUTIONS
     * SQLite key: feegroup_specialinstitutions
     * [en] Special institutions
     * [de] Besondere Einrichtungen</pre>
     * @return [en] Special institutions, [de] Besondere Einrichtungen
     */
    public static String getFeeGroupSpecialInstitutions() {
        return get(FEE_GROUP_SPECIAL_INSTITUTIONS).value;
    }

    /**
     * <pre>FEE_GROUP_SPECIAL_INSTITUTIONS_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE
     * SQLite key: feegroup_specialinstitutionswithoutfinalinvoiceandwithoutdischarge
     * [en] Special institutions without final invoice and without Discharge
     * [de] Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] Special institutions without final invoice and without Discharge, [de] Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getFeeGroupSpecialInstitutionsWithoutFinalInvoiceAndWithoutDischarge() {
        return get(FEE_GROUP_SPECIAL_INSTITUTIONS_WITHOUT_FINAL_INVOICE_AND_WITHOUT_DISCHARGE).value;
    }

    /**
     * <pre>FEE_PLACEHOLDER
     * SQLite key: fee_placeholder
     * [en] no fees added
     * [de] Keine Entgelte zugefügt</pre>
     * @return [en] no fees added, [de] Keine Entgelte zugefügt
     */
    public static String getFeePlaceholder() {
        return get(FEE_PLACEHOLDER).value;
    }

    /**
     * <pre>FILE
     * SQLite key: file
     * [en] File
     * [de] Datei</pre>
     * @return [en] File, [de] Datei
     */
    public static String getFile() {
        return get(FILE).value;
    }

    /**
     * <pre>FILE_ADD
     * SQLite key: file_add
     * [en] Add file
     * [de] Datei hinzufügen</pre>
     * @return [en] Add file, [de] Datei hinzufügen
     */
    public static String getFileAdd() {
        return get(FILE_ADD).value;
    }

    /**
     * <pre>FILE_ALREADY_EXISTS
     * SQLite key: file_alreadyexists
     * [en] File {0} already exists
     * [de] Datei {0} ist bereits vorhanden</pre>
     * @param pParams placeholder replacements
     * @return [en] File {0} already exists, [de] Datei {0} ist bereits vorhanden
     */
    public static String getFileAlreadyExists(final Object... pParams) {
        return get(FILE_ALREADY_EXISTS, pParams).value;
    }

    /**
     * <pre>FILE_ARCHIVE_ERROR_CAN_NOT_ACCESS
     * SQLite key: file_archive_error_can_not_access
     * [en] File {0} could not be archived, because there was a security error: {1}
     * [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil ein Zugriffsproblem aufgetreten ist: {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] File {0} could not be archived, because there was a security error: {1}, [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil ein Zugriffsproblem aufgetreten ist: {1}
     */
    public static String getFileArchiveErrorCanNotAccess(final Object... pParams) {
        return get(FILE_ARCHIVE_ERROR_CAN_NOT_ACCESS, pParams).value;
    }

    /**
     * <pre>FILE_ARCHIVE_ERROR_CAN_NOT_WRITE
     * SQLite key: file_archive_error_can_not_write
     * [en] File {0} could not be archived, because you did not have writing permissions: {1}
     * [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil die Schreibrechte fehlen: {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] File {0} could not be archived, because you did not have writing permissions: {1}, [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil die Schreibrechte fehlen: {1}
     */
    public static String getFileArchiveErrorCanNotWrite(final Object... pParams) {
        return get(FILE_ARCHIVE_ERROR_CAN_NOT_WRITE, pParams).value;
    }

    /**
     * <pre>FILE_ARCHIVE_ERROR_PARENT_IS_FILE
     * SQLite key: file_archive_error_parent_is_file
     * [en] File {0} could not be archived, because a file was selected: {1}
     * [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, da eine Datei als Verzeichnis ausgewählt wurde: {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] File {0} could not be archived, because a file was selected: {1}, [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, da eine Datei als Verzeichnis ausgewählt wurde: {1}
     */
    public static String getFileArchiveErrorParentIsFile(final Object... pParams) {
        return get(FILE_ARCHIVE_ERROR_PARENT_IS_FILE, pParams).value;
    }

    /**
     * <pre>FILE_ARCHIVE_ERROR_PARENT_NOT_FOUND
     * SQLite key: file_archive_error_parent_not_found
     * [en] File {0} could not be archived, because the directory: {1} could not be created
     * [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil das Verzeichnis nicht angelegt werden konnte: {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] File {0} could not be archived, because the directory: {1} could not be created, [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil das Verzeichnis nicht angelegt werden konnte: {1}
     */
    public static String getFileArchiveErrorParentNotFound(final Object... pParams) {
        return get(FILE_ARCHIVE_ERROR_PARENT_NOT_FOUND, pParams).value;
    }

    /**
     * <pre>FILE_DONT_EXISTS
     * SQLite key: file_dontexists
     * [en] File do not exist
     * [de] Datei nicht vorhanden</pre>
     * @return [en] File do not exist, [de] Datei nicht vorhanden
     */
    public static String getFileDontExists() {
        return get(FILE_DONT_EXISTS).value;
    }

    /**
     * <pre>FILE_IMPORT_ERRORS
     * SQLite key: file_import_errors
     * [de] Import der Datei: {0} wurde mit Fehler(n) abgeschlossen!!</pre>
     * @param pParams placeholder replacements
     * @return [de] Import der Datei: {0} wurde mit Fehler(n) abgeschlossen!!
     */
    public static String getFileImportErrors(final Object... pParams) {
        return get(FILE_IMPORT_ERRORS, pParams).value;
    }

    /**
     * <pre>FILE_IMPORT_SUCCESS
     * SQLite key: file_import_success
     * [de] Import der Datei: {0} war erfolgreich!</pre>
     * @param pParams placeholder replacements
     * @return [de] Import der Datei: {0} war erfolgreich!
     */
    public static String getFileImportSuccess(final Object... pParams) {
        return get(FILE_IMPORT_SUCCESS, pParams).value;
    }

    /**
     * <pre>FILE_NUMBER_EDIT_TOOLTIP
     * SQLite key: filenumber_edit_tooltip
     * [de] Um {0} zu bearbeiten, klicken Sie hier.</pre>
     * @param pParams placeholder replacements
     * @return [de] Um {0} zu bearbeiten, klicken Sie hier.
     */
    public static String getFileNumberEditTooltip(final Object... pParams) {
        return get(FILE_NUMBER_EDIT_TOOLTIP, pParams).value;
    }

    /**
     * <pre>FILE_NUMBER_SAVE_TOOLTIP
     * SQLite key: filenumber_save_tooltip
     * [de] Zum Abspeicheren drücken Sie die Enter Taste</pre>
     * @return [de] Zum Abspeicheren drücken Sie die Enter Taste
     */
    public static String getFileNumberSaveTooltip() {
        return get(FILE_NUMBER_SAVE_TOOLTIP).value;
    }

    /**
     * <pre>FILE_OPEN
     * SQLite key: file_open
     * [en] Open file
     * [de] Datei öffnen</pre>
     * @return [en] Open file, [de] Datei öffnen
     */
    public static String getFileOpen() {
        return get(FILE_OPEN).value;
    }

    /**
     * <pre>FILE_OPEN_IN_EXPLORER_TEXT
     * SQLite key: file_open_in_explorer_text
     * [en] Click to select file in Windows Explorer
     * [de] Klicken um die Datei im Windows Explorer zu öffnen</pre>
     * @return [en] Click to select file in Windows Explorer, [de] Klicken um die Datei im Windows Explorer zu öffnen
     */
    public static String getFileOpenInExplorerText() {
        return get(FILE_OPEN_IN_EXPLORER_TEXT).value;
    }

    /**
     * <pre>FILE_SAVE
     * SQLite key: file_save
     * [en] Save file
     * [de] Datei speichern</pre>
     * @return [en] Save file, [de] Datei speichern
     */
    public static String getFileSave() {
        return get(FILE_SAVE).value;
    }

    /**
     * <pre>FILTER
     * SQLite key: filter
     * [en] Filter
     * [de] Filter</pre>
     * @return [en] Filter, [de] Filter
     */
    public static String getFilter() {
        return get(FILTER).value;
    }

    /**
     * <pre>FILTER_ABOVE
     * SQLite key: filterabove
     * [en] {0} filter(s) above
     * [de] {0} Filter weiter oben</pre>
     * @param pParams placeholder replacements
     * @return [en] {0} filter(s) above, [de] {0} Filter weiter oben
     */
    public static String getFilterAbove(final Object... pParams) {
        return get(FILTER_ABOVE, pParams).value;
    }

    /**
     * <pre>FILTER_BELOW
     * SQLite key: filterbelow
     * [en] {0} filter(s) below
     * [de] {0} Filter weiter unten</pre>
     * @param pParams placeholder replacements
     * @return [en] {0} filter(s) below, [de] {0} Filter weiter unten
     */
    public static String getFilterBelow(final Object... pParams) {
        return get(FILTER_BELOW, pParams).value;
    }

    /**
     * <pre>FILTER_CASES_CANCEL
     * SQLite key: filter_cases_cancel
     * [en] All canceled cases
     * [de] Alle stornierte Fälle</pre>
     * @return [en] All canceled cases, [de] Alle stornierte Fälle
     */
    public static String getFilterCasesCancel() {
        return get(FILTER_CASES_CANCEL).value;
    }

    /**
     * <pre>FILTER_CASES_CANCEL_NOT
     * SQLite key: filter_cases_cancel_not
     * [en] All not canceled cases
     * [de] Alle nicht stornierte Fälle</pre>
     * @return [en] All not canceled cases, [de] Alle nicht stornierte Fälle
     */
    public static String getFilterCasesCancelNot() {
        return get(FILTER_CASES_CANCEL_NOT).value;
    }

    /**
     * <pre>FILTER_CASES_LOCK
     * SQLite key: filter_cases_lock
     * [en] All locked cases
     * [de] Alle gesperrte Fälle</pre>
     * @return [en] All locked cases, [de] Alle gesperrte Fälle
     */
    public static String getFilterCasesLock() {
        return get(FILTER_CASES_LOCK).value;
    }

    /**
     * <pre>FILTER_CASES_UNLOCK
     * SQLite key: filter_cases_unlock
     * [de] Alle nicht gesperrte Fälle</pre>
     * @return [de] Alle nicht gesperrte Fälle
     */
    public static String getFilterCasesUnlock() {
        return get(FILTER_CASES_UNLOCK).value;
    }

    /**
     * <pre>FILTER_MORE
     * SQLite key: filter_more
     * [en] more
     * [de] weitere</pre>
     * @return [en] more, [de] weitere
     */
    public static String getFilterMore() {
        return get(FILTER_MORE).value;
    }

    /**
     * <pre>FILTER_NO
     * SQLite key: filter_no
     * [en] no filter
     * [de] Kein Filter</pre>
     * @return [en] no filter, [de] Kein Filter
     */
    public static String getFilterNo() {
        return get(FILTER_NO).value;
    }

    /**
     * <pre>FILTER_PRIO
     * SQLite key: filter_prio
     * [en] All with Prio
     * [de] Alle mit Priorität</pre>
     * @return [en] All with Prio, [de] Alle mit Priorität
     */
    public static String getFilterPrio() {
        return get(FILTER_PRIO).value;
    }

    /**
     * <pre>FILTER_PRIO_NO
     * SQLite key: filter_prio_no
     * [en] All without Prio
     * [de] Alle ohne Priorität</pre>
     * @return [en] All without Prio, [de] Alle ohne Priorität
     */
    public static String getFilterPrioNo() {
        return get(FILTER_PRIO_NO).value;
    }

    /**
     * <pre>FILTER_PROCESS_CANCEL
     * SQLite key: filter_process_cancel
     * [en] All canceled processes
     * [de] Alle stornierte Vorgänge</pre>
     * @return [en] All canceled processes, [de] Alle stornierte Vorgänge
     */
    public static String getFilterProcessCancel() {
        return get(FILTER_PROCESS_CANCEL).value;
    }

    /**
     * <pre>FILTER_PROCESS_CANCEL_NOT
     * SQLite key: filter_process_cancel_not
     * [en] All not canceled processes
     * [de] Alle nicht stornierte Vorgänge</pre>
     * @return [en] All not canceled processes, [de] Alle nicht stornierte Vorgänge
     */
    public static String getFilterProcessCancelNot() {
        return get(FILTER_PROCESS_CANCEL_NOT).value;
    }

    /**
     * <pre>FILTER_PROCESS_LOCK
     * SQLite key: filter_process_lock
     * [en] All locked processes
     * [de] Alle gesperrte Vorgänge</pre>
     * @return [en] All locked processes, [de] Alle gesperrte Vorgänge
     */
    public static String getFilterProcessLock() {
        return get(FILTER_PROCESS_LOCK).value;
    }

    /**
     * <pre>FILTER_PROCESS_UNLOCK
     * SQLite key: filter_process_unlock
     * [en] All unlocked processes
     * [de] Alle nicht gesperrte Vorgänge</pre>
     * @return [en] All unlocked processes, [de] Alle nicht gesperrte Vorgänge
     */
    public static String getFilterProcessUnlock() {
        return get(FILTER_PROCESS_UNLOCK).value;
    }

    /**
     * <pre>FILTER_REMEINDER_CLOSE
     * SQLite key: filter_remeinder_close
     * [en] All finished
     * [de] Alle abgearbeiteten</pre>
     * @return [en] All finished, [de] Alle abgearbeiteten
     */
    public static String getFilterRemeinderClose() {
        return get(FILTER_REMEINDER_CLOSE).value;
    }

    /**
     * <pre>FILTER_REMEINDER_OPEN
     * SQLite key: filter_remeinder_open
     * [en] All opened
     * [de] Alle offenen</pre>
     * @return [en] All opened, [de] Alle offenen
     */
    public static String getFilterRemeinderOpen() {
        return get(FILTER_REMEINDER_OPEN).value;
    }

    /**
     * <pre>FIRST_NAME
     * SQLite key: firstname
     * [en] First Name
     * [de] Vorname</pre>
     * ATTENTION this value ('First Name') seems to be also defined under the key PATIENT_FIRST_NAME!
     * @return [en] First Name, [de] Vorname
     */
    public static String getFirstName() {
        return get(FIRST_NAME).value;
    }

    /**
     * <pre>FLOWRATE_STATUS_TEXT
     * SQLite key: flowrate_status_text
     * [en] Case details per second: {0}
     * [de] Falldetails pro Sekunde: {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Case details per second: {0}, [de] Falldetails pro Sekunde: {0}
     */
    public static String getFlowrateStatusText(final Object... pParams) {
        return get(FLOWRATE_STATUS_TEXT, pParams).value;
    }

    /**
     * <pre>FLOWRATE_STATUS_TEXT_PATIENT
     * SQLite key: flowrate_status_text_patient
     * [en] Patients per second: {0}
     * [de] Patienten pro Sekunde: {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Patients per second: {0}, [de] Patienten pro Sekunde: {0}
     */
    public static String getFlowrateStatusTextPatient(final Object... pParams) {
        return get(FLOWRATE_STATUS_TEXT_PATIENT, pParams).value;
    }

    /**
     * <pre>FUNCTIONS
     * SQLite key: functions
     * [en] Functions
     * [de] Funktionen</pre>
     * @return [en] Functions, [de] Funktionen
     */
    public static String getFunctions() {
        return get(FUNCTIONS).value;
    }

    /**
     * <pre>GENDER
     * SQLite key: gender
     * [en] Gender
     * [de] Geschlecht (Geschl.)</pre>
     * @return [en] Gender, [de] Geschlecht (Geschl.)
     */
    public static String getGender() {
        return get(GENDER).value;
    }

    public static Translation getGenderObj() {
        return get(GENDER);
    }

    /**
     * <pre>GENDER_DIVERSE
     * SQLite key: gender_diverse
     * [en] diverse
     * [de] divers</pre>
     * @return [en] diverse, [de] divers
     */
    public static String getGenderDiverse() {
        return get(GENDER_DIVERSE).value;
    }

    /**
     * <pre>GENDER_FEMALE
     * SQLite key: gender_female
     * [en] female
     * [de] weiblich</pre>
     * ATTENTION this value ('Female') seems to be also defined under the key PATIENT_SEX_FEMALE!
     * @return [en] female, [de] weiblich
     */
    public static String getGenderFemale() {
        return get(GENDER_FEMALE).value;
    }

    /**
     * <pre>GENDER_MALE
     * SQLite key: gender_male
     * [en] male
     * [de] männlich</pre>
     * ATTENTION this value ('Male') seems to be also defined under the key PATIENT_SEX_MALE!
     * @return [en] male, [de] männlich
     */
    public static String getGenderMale() {
        return get(GENDER_MALE).value;
    }

    /**
     * <pre>GENDER_SALUTATION_DIVERSE
     * SQLite key: gender_salutation_diverse
     * [en] Mr./Ms.
     * [de] Herr/Frau</pre>
     * ATTENTION this value ('Mr./Ms.') seems to be also defined under the key GENDER_SALUTATION_UNDEFINED! this value ('Mr./Ms.') seems to be also defined under the key GENDER_SALUTATION_UNKNOWN!
     * @return [en] Mr./Ms., [de] Herr/Frau
     */
    public static String getGenderSalutationDiverse() {
        return get(GENDER_SALUTATION_DIVERSE).value;
    }

    /**
     * <pre>GENDER_SALUTATION_FEMALE
     * SQLite key: gender_salutation_female
     * [en] Ms.
     * [de] Frau</pre>
     * @return [en] Ms., [de] Frau
     */
    public static String getGenderSalutationFemale() {
        return get(GENDER_SALUTATION_FEMALE).value;
    }

    /**
     * <pre>GENDER_SALUTATION_MALE
     * SQLite key: gender_salutation_male
     * [en] Mr.
     * [de] Herr</pre>
     * @return [en] Mr., [de] Herr
     */
    public static String getGenderSalutationMale() {
        return get(GENDER_SALUTATION_MALE).value;
    }

    /**
     * <pre>GENDER_SALUTATION_UNDEFINED
     * SQLite key: gender_salutation_undefined
     * [en] Mr./Ms.
     * [de] Herr/Frau</pre>
     * ATTENTION this value ('Mr./Ms.') seems to be also defined under the key GENDER_SALUTATION_DIVERSE! this value ('Mr./Ms.') seems to be also defined under the key GENDER_SALUTATION_UNKNOWN!
     * @return [en] Mr./Ms., [de] Herr/Frau
     */
    public static String getGenderSalutationUndefined() {
        return get(GENDER_SALUTATION_UNDEFINED).value;
    }

    /**
     * <pre>GENDER_SALUTATION_UNKNOWN
     * SQLite key: gender_salutation_unknown
     * [en] Mr./Ms.
     * [de] Herr/Frau</pre>
     * ATTENTION this value ('Mr./Ms.') seems to be also defined under the key GENDER_SALUTATION_DIVERSE! this value ('Mr./Ms.') seems to be also defined under the key GENDER_SALUTATION_UNDEFINED!
     * @return [en] Mr./Ms., [de] Herr/Frau
     */
    public static String getGenderSalutationUnknown() {
        return get(GENDER_SALUTATION_UNKNOWN).value;
    }

    /**
     * <pre>GENDER_UNDEFINED
     * SQLite key: gender_undefined
     * [en] undefined
     * [de] unbestimmt</pre>
     * @return [en] undefined, [de] unbestimmt
     */
    public static String getGenderUndefined() {
        return get(GENDER_UNDEFINED).value;
    }

    /**
     * <pre>GENDER_UNKNOWN
     * SQLite key: gender_unknown
     * [en] unknown
     * [de] unbekannt</pre>
     * ATTENTION this value ('Unknown') seems to be also defined under the key PATIENT_SEX_UNKNOWN!
     * @return [en] unknown, [de] unbekannt
     */
    public static String getGenderUnknown() {
        return get(GENDER_UNKNOWN).value;
    }

    /**
     * <pre>GENERAL
     * SQLite key: general
     * [en] General
     * [de] Allgemein</pre>
     * @return [en] General, [de] Allgemein
     */
    public static String getGeneral() {
        return get(GENERAL).value;
    }

    /**
     * <pre>GERM_GROWTH_AFTER_ENRICHMENT
     * SQLite key: germ_growth_afterenrichment
     * [en] after enrichment
     * [de] nach Anreicherung</pre>
     * @return [en] after enrichment, [de] nach Anreicherung
     */
    public static String getGermGrowthAfterEnrichment() {
        return get(GERM_GROWTH_AFTER_ENRICHMENT).value;
    }

    /**
     * <pre>GERM_GROWTH_ISOLATED
     * SQLite key: germ_growth_isolated
     * [en] isolated
     * [de] ganz vereinzelt</pre>
     * @return [en] isolated, [de] ganz vereinzelt
     */
    public static String getGermGrowthIsolated() {
        return get(GERM_GROWTH_ISOLATED).value;
    }

    /**
     * <pre>GERM_GROWTH_MODERATELY
     * SQLite key: germ_growth_moderately
     * [en] moderately
     * [de] mäßig viel</pre>
     * @return [en] moderately, [de] mäßig viel
     */
    public static String getGermGrowthModerately() {
        return get(GERM_GROWTH_MODERATELY).value;
    }

    /**
     * <pre>GERM_GROWTH_NO_INFORMATION
     * SQLite key: germ_growth_noinformation
     * [en] no information
     * [de] keine Information</pre>
     * @return [en] no information, [de] keine Information
     */
    public static String getGermGrowthNoInformation() {
        return get(GERM_GROWTH_NO_INFORMATION).value;
    }

    /**
     * <pre>GERM_GROWTH_NONE
     * SQLite key: germ_growth_none
     * [en] none
     * [de] nicht nachgewiesen</pre>
     * @return [en] none, [de] nicht nachgewiesen
     */
    public static String getGermGrowthNone() {
        return get(GERM_GROWTH_NONE).value;
    }

    /**
     * <pre>GERM_GROWTH_PLENTY
     * SQLite key: germ_growth_plenty
     * [en] plenty
     * [de] reichlich</pre>
     * @return [en] plenty, [de] reichlich
     */
    public static String getGermGrowthPlenty() {
        return get(GERM_GROWTH_PLENTY).value;
    }

    /**
     * <pre>GERM_GROWTH_SCATTERED
     * SQLite key: germ_growth_scattered
     * [en] scattered
     * [de] vereinzelt</pre>
     * @return [en] scattered, [de] vereinzelt
     */
    public static String getGermGrowthScattered() {
        return get(GERM_GROWTH_SCATTERED).value;
    }

    /**
     * <pre>GROUP_RELEVANT_CODE_FOR_DRG_PEPP_MAPPING_USED_EXCEPT_TO_SATISFY_THE_TEMPORAL_AND_OR_LOGIC_CONDITION_WITHIN_AN_OPD_CONSTRUCT
     * SQLite key: grouprelevantcode_fordrgpeppmappingusedexcepttosatisfythetemporalandorlogicconditionwithinanopdconstruct
     * [en] For the DRG / PEPP mapping used, except to satisfy the temporal and / or logic condition within an OPD construct
     * [de] Für die DRG/PEPP-Zuordnung verwendet, ausgenommen zur Erfüllung der zeitlichen und/oder logischen Bedingung innerhalb eines OPD-Konstrukts</pre>
     * @return [en] For the DRG / PEPP mapping used, except to satisfy the temporal and / or logic condition within an OPD construct, [de] Für die DRG/PEPP-Zuordnung verwendet, ausgenommen zur Erfüllung der zeitlichen und/oder logischen Bedingung innerhalb eines OPD-Konstrukts
     */
    public static String getGroupRelevantCodeForDRG_PEPP_MappingUsedExceptToSatisfyTheTemporalAndOrLogicConditionWithinAnOPD_Construct() {
        return get(GROUP_RELEVANT_CODE_FOR_DRG_PEPP_MAPPING_USED_EXCEPT_TO_SATISFY_THE_TEMPORAL_AND_OR_LOGIC_CONDITION_WITHIN_AN_OPD_CONSTRUCT).value;
    }

    /**
     * <pre>GROUP_RELEVANT_CODE_NOT_USED_FOR_DRG_PEPP_ASSIGNMENT
     * SQLite key: grouprelevantcode_notusedfordrgpeppassignment
     * [en] Not used for the DRG / PEPP - assignment
     * [de] Nicht für die DRG/PEPP-Zuordnung verwendet</pre>
     * @return [en] Not used for the DRG / PEPP - assignment, [de] Nicht für die DRG/PEPP-Zuordnung verwendet
     */
    public static String getGroupRelevantCodeNotUsedForDRG_PEPP_Assignment() {
        return get(GROUP_RELEVANT_CODE_NOT_USED_FOR_DRG_PEPP_ASSIGNMENT).value;
    }

    /**
     * <pre>GROUP_RELEVANT_CODE_USED_TO_MEET_THE_LOGICAL_AND_TEMPORAL_CONDITION_OF_OPD_CONSTRUCT
     * SQLite key: grouprelevantcode_usedtomeetthelogicalandtemporalconditionofopdconstruct
     * [en] used to meet the logical and temporal condition of OPD construct
     * [de] verwendet zur Erfüllung der logischen und zeitlichen Bedingung eines OPD-Konstrukts</pre>
     * @return [en] used to meet the logical and temporal condition of OPD construct, [de] verwendet zur Erfüllung der logischen und zeitlichen Bedingung eines OPD-Konstrukts
     */
    public static String getGroupRelevantCodeUsedToMeetTheLogicalAndTemporalConditionOfOPD_Construct() {
        return get(GROUP_RELEVANT_CODE_USED_TO_MEET_THE_LOGICAL_AND_TEMPORAL_CONDITION_OF_OPD_CONSTRUCT).value;
    }

    /**
     * <pre>GROUP_RELEVANT_CODE_USING_BOTH_OPD_BY_A_CONSTRUCT_AS_ALSO_OTHERWISE
     * SQLite key: grouprelevantcode_usingbothopdbyaconstructasalsootherwise
     * [en] Using both OPD by a construct as also otherwise (i.e., 1 + 2)
     * [de] Verwendung sowohl durch ein OPD-Konstrukt wie auch anderweitig (also 1+2)</pre>
     * @return [en] Using both OPD by a construct as also otherwise (i.e., 1 + 2), [de] Verwendung sowohl durch ein OPD-Konstrukt wie auch anderweitig (also 1+2)
     */
    public static String getGroupRelevantCodeUsingBothOPD_ByA_ConstructAsAlsoOtherwise() {
        return get(GROUP_RELEVANT_CODE_USING_BOTH_OPD_BY_A_CONSTRUCT_AS_ALSO_OTHERWISE).value;
    }

    /**
     * <pre>GROUP_RESULT_CODE_VALID_AGE_CONFLICT
     * SQLite key: groupresult_code_valid_ageconflict
     * [en] age conflict
     * [de] Alterskonflikt</pre>
     * @return [en] age conflict, [de] Alterskonflikt
     */
    public static String getGroupResultCodeValidAgeConflict() {
        return get(GROUP_RESULT_CODE_VALID_AGE_CONFLICT).value;
    }

    /**
     * <pre>GROUP_RESULT_CODE_VALID_DUPLICATE
     * SQLite key: groupresult_code_valid_duplicate
     * [en] duplicate
     * [de] Duplikat</pre>
     * @return [en] duplicate, [de] Duplikat
     */
    public static String getGroupResultCodeValidDuplicate() {
        return get(GROUP_RESULT_CODE_VALID_DUPLICATE).value;
    }

    /**
     * <pre>GROUP_RESULT_CODE_VALID_GENDER_CONFLICT
     * SQLite key: groupresult_code_valid_genderconflict
     * [en] gender conflict
     * [de] Geschlechtskonflikt</pre>
     * @return [en] gender conflict, [de] Geschlechtskonflikt
     */
    public static String getGroupResultCodeValidGenderConflict() {
        return get(GROUP_RESULT_CODE_VALID_GENDER_CONFLICT).value;
    }

    /**
     * <pre>GROUP_RESULT_CODE_VALID_INVALID
     * SQLite key: groupresult_code_valid_invalid
     * [en] invalid Code
     * [de] Ungültiger Code</pre>
     * @return [en] invalid Code, [de] Ungültiger Code
     */
    public static String getGroupResultCodeValidInvalid() {
        return get(GROUP_RESULT_CODE_VALID_INVALID).value;
    }

    /**
     * <pre>GROUP_RESULT_CODE_VALID_VALID
     * SQLite key: groupresult_code_valid_valid
     * [en] valid Code
     * [de] Gültiger Code</pre>
     * @return [en] valid Code, [de] Gültiger Code
     */
    public static String getGroupResultCodeValidValid() {
        return get(GROUP_RESULT_CODE_VALID_VALID).value;
    }

    /**
     * <pre>GROUP_RESULT_NO_RESULT
     * SQLite key: groupresult_noresult
     * [en] There are no Grouperresults!
     * [de] Es liegen noch keine Grouperergebnisse vor!</pre>
     * @return [en] There are no Grouperresults!, [de] Es liegen noch keine Grouperergebnisse vor!
     */
    public static String getGroupResultNoResult() {
        return get(GROUP_RESULT_NO_RESULT).value;
    }

    /**
     * <pre>GROUP_RESULT_PDX_IMPROPER_PDX_CODE
     * SQLite key: groupresult_pdx_improperpdxcode
     * [en] Invalid main diagnosis
     * [de] Unzulässige Hauptdiagnose</pre>
     * @return [en] Invalid main diagnosis, [de] Unzulässige Hauptdiagnose
     */
    public static String getGroupResultPdxImproper_pdx_code() {
        return get(GROUP_RESULT_PDX_IMPROPER_PDX_CODE).value;
    }

    /**
     * <pre>GROUP_RESULT_PDX_INVALID_PDX_CODE
     * SQLite key: groupresult_pdx_invalidpdxcode
     * [en] Invalid ICD-10-GM-Code as the main diagnosis
     * [de] Ungültiger ICD-10-GM-Kode als Hauptdiagnose</pre>
     * @return [en] Invalid ICD-10-GM-Code as the main diagnosis, [de] Ungültiger ICD-10-GM-Kode als Hauptdiagnose
     */
    public static String getGroupResultPdxInvalid_pdx_code() {
        return get(GROUP_RESULT_PDX_INVALID_PDX_CODE).value;
    }

    /**
     * <pre>GROUP_RESULT_PDX_VALID_PDX_CODE
     * SQLite key: groupresult_pdx_validpdxcode
     * [en] Valid main diagnosis
     * [de] Gültige Hauptdiagnose</pre>
     * @return [en] Valid main diagnosis, [de] Gültige Hauptdiagnose
     */
    public static String getGroupResultPdxValid_pdx_code() {
        return get(GROUP_RESULT_PDX_VALID_PDX_CODE).value;
    }

    /**
     * <pre>GROUP_RESULT_PDX_VWXY_PDX_CODE
     * SQLite key: groupresult_pdx_vwxypdxcode
     * [en] V-,W-,X-,Y-Code as the main diagnosis
     * [de] V-,W-,X-,Y-Kode als Hauptdiagnose</pre>
     * @return [en] V-,W-,X-,Y-Code as the main diagnosis, [de] V-,W-,X-,Y-Kode als Hauptdiagnose
     */
    public static String getGroupResultPdxVwxy_pdx_code() {
        return get(GROUP_RESULT_PDX_VWXY_PDX_CODE).value;
    }

    /**
     * <pre>GROUPER_EINSTELLUNGEN_CONFIRM
     * SQLite key: grouper_einstellungen_confirm
     * [en] The currently set modeler model is for the year {0} . Created cases are rooted with this grouper model!  nDo you want to continue with this setting?
     * [de] Das aktuell eingestellte Groupermodell ist für das Jahr {0} Die angelegten Fälle werden mit diesem Groupermodell gegroupt!Wollen Sie mit dieser Einstellung fortfahren?</pre>
     * @param pParams placeholder replacements
     * @return [en] The currently set modeler model is for the year {0} . Created cases are rooted with this grouper model!  nDo you want to continue with this setting?, [de] Das aktuell eingestellte Groupermodell ist für das Jahr {0} Die angelegten Fälle werden mit diesem Groupermodell gegroupt!Wollen Sie mit dieser Einstellung fortfahren?
     */
    public static String getGrouperEinstellungenConfirm(final Object... pParams) {
        return get(GROUPER_EINSTELLUNGEN_CONFIRM, pParams).value;
    }

    /**
     * <pre>GROUPER_ERROR_UNGROUPABLE
     * SQLite key: grouper_error_ungroupable
     * [en] Case is not groupable, Plese check the data!
     * [de] Fall ist nicht gruppierbar, Prüfen Sie die Daten!</pre>
     * @return [en] Case is not groupable, Plese check the data!, [de] Fall ist nicht gruppierbar, Prüfen Sie die Daten!
     */
    public static String getGrouperErrorUngroupable() {
        return get(GROUPER_ERROR_UNGROUPABLE).value;
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_INFANT_DAY_CARE
     * SQLite key: grouper_mdcorsk_infantdaycare
     * [en] Child and Adolescent Psychiatry, part stationary (TKJ)
     * [de] Kinder- und Jugendpsychiatrie, teilstationär (TKJ)</pre>
     * @return [en] Child and Adolescent Psychiatry, part stationary (TKJ), [de] Kinder- und Jugendpsychiatrie, teilstationär (TKJ)
     */
    public static String getGrouperMdcOrSkInfantDayCare() {
        return get(GROUPER_MDC_OR_SK_INFANT_DAY_CARE).value;
    }

    public static Translation getGrouperMdcOrSkInfantDayCareObj() {
        return get(GROUPER_MDC_OR_SK_INFANT_DAY_CARE);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_INFANT_INPATIENT_CARE
     * SQLite key: grouper_mdcorsk_infantinpatientcare
     * [en] Child and adolescent psychiatry, inpatient (PKJ)
     * [de] Kinder- und Jugendpsychiatrie, vollstationär (PKJ)</pre>
     * @return [en] Child and adolescent psychiatry, inpatient (PKJ), [de] Kinder- und Jugendpsychiatrie, vollstationär (PKJ)
     */
    public static String getGrouperMdcOrSkInfantInpatientCare() {
        return get(GROUPER_MDC_OR_SK_INFANT_INPATIENT_CARE).value;
    }

    public static Translation getGrouperMdcOrSkInfantInpatientCareObj() {
        return get(GROUPER_MDC_OR_SK_INFANT_INPATIENT_CARE);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_01
     * SQLite key: grouper_mdcorsk_mdc01
     * [en] Diseases and disorders of the eye (01)
     * [de] Krankheiten und Störungen des Nervensystems (01)</pre>
     * @return [en] Diseases and disorders of the eye (01), [de] Krankheiten und Störungen des Nervensystems (01)
     */
    public static String getGrouperMdcOrSkMdc01() {
        return get(GROUPER_MDC_OR_SK_MDC_01).value;
    }

    public static Translation getGrouperMdcOrSkMdc01Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_01);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_02
     * SQLite key: grouper_mdcorsk_mdc02
     * [en] Diseases and disorders of the ear (02)
     * [de] Krankheiten und Störungen des Auges (02)</pre>
     * @return [en] Diseases and disorders of the ear (02), [de] Krankheiten und Störungen des Auges (02)
     */
    public static String getGrouperMdcOrSkMdc02() {
        return get(GROUPER_MDC_OR_SK_MDC_02).value;
    }

    public static Translation getGrouperMdcOrSkMdc02Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_02);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_03
     * SQLite key: grouper_mdcorsk_mdc03
     * [en] Diseases of the nose, mouth and neck (03)
     * [de] Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO) (03)</pre>
     * @return [en] Diseases of the nose, mouth and neck (03), [de] Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO) (03)
     */
    public static String getGrouperMdcOrSkMdc03() {
        return get(GROUPER_MDC_OR_SK_MDC_03).value;
    }

    public static Translation getGrouperMdcOrSkMdc03Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_03);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_04
     * SQLite key: grouper_mdcorsk_mdc04
     * [en] Diseases and disorders of the respiratory system (04)
     * [de] Krankheiten und Störungen der Atmungsorgane (04)</pre>
     * @return [en] Diseases and disorders of the respiratory system (04), [de] Krankheiten und Störungen der Atmungsorgane (04)
     */
    public static String getGrouperMdcOrSkMdc04() {
        return get(GROUPER_MDC_OR_SK_MDC_04).value;
    }

    public static Translation getGrouperMdcOrSkMdc04Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_04);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_05
     * SQLite key: grouper_mdcorsk_mdc05
     * [en] Diseases and disorders of the circulatory system (05)
     * [de] Krankheiten und Störungen des Kreislaufsystems (05)</pre>
     * @return [en] Diseases and disorders of the circulatory system (05), [de] Krankheiten und Störungen des Kreislaufsystems (05)
     */
    public static String getGrouperMdcOrSkMdc05() {
        return get(GROUPER_MDC_OR_SK_MDC_05).value;
    }

    public static Translation getGrouperMdcOrSkMdc05Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_05);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_06
     * SQLite key: grouper_mdcorsk_mdc06
     * [en] Diseases and disorders of the digestive organs (06)
     * [de] Krankheiten und Störungen der Verdauungsorgane (06)</pre>
     * @return [en] Diseases and disorders of the digestive organs (06), [de] Krankheiten und Störungen der Verdauungsorgane (06)
     */
    public static String getGrouperMdcOrSkMdc06() {
        return get(GROUPER_MDC_OR_SK_MDC_06).value;
    }

    public static Translation getGrouperMdcOrSkMdc06Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_06);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_07
     * SQLite key: grouper_mdcorsk_mdc07
     * [en] Diseases and disorders of hepato biliary system and pancreas (07)
     * [de] Krankheiten und Störungen an hepatobiliärem System und Pankreas (07)</pre>
     * @return [en] Diseases and disorders of hepato biliary system and pancreas (07), [de] Krankheiten und Störungen an hepatobiliärem System und Pankreas (07)
     */
    public static String getGrouperMdcOrSkMdc07() {
        return get(GROUPER_MDC_OR_SK_MDC_07).value;
    }

    public static Translation getGrouperMdcOrSkMdc07Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_07);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_08
     * SQLite key: grouper_mdcorsk_mdc08
     * [en] Diseases and disorders of the musculoskeletal system and connective tissue (08)
     * [de] Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe (08)</pre>
     * @return [en] Diseases and disorders of the musculoskeletal system and connective tissue (08), [de] Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe (08)
     */
    public static String getGrouperMdcOrSkMdc08() {
        return get(GROUPER_MDC_OR_SK_MDC_08).value;
    }

    public static Translation getGrouperMdcOrSkMdc08Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_08);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_09
     * SQLite key: grouper_mdcorsk_mdc09
     * [en] Diseases and disorders of the skin, subcutaneous tissue and breast (09)
     * [de] Krankheiten und Störungen an Haut, Unterhaut und Mamma (09)</pre>
     * @return [en] Diseases and disorders of the skin, subcutaneous tissue and breast (09), [de] Krankheiten und Störungen an Haut, Unterhaut und Mamma (09)
     */
    public static String getGrouperMdcOrSkMdc09() {
        return get(GROUPER_MDC_OR_SK_MDC_09).value;
    }

    public static Translation getGrouperMdcOrSkMdc09Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_09);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_10
     * SQLite key: grouper_mdcorsk_mdc10
     * [en] Endocrine, nutritional and metabolic diseases (10)
     * [de] Endokrine, Ernährungs- und Stoffwechselkrankheiten (10)</pre>
     * @return [en] Endocrine, nutritional and metabolic diseases (10), [de] Endokrine, Ernährungs- und Stoffwechselkrankheiten (10)
     */
    public static String getGrouperMdcOrSkMdc10() {
        return get(GROUPER_MDC_OR_SK_MDC_10).value;
    }

    public static Translation getGrouperMdcOrSkMdc10Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_10);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_11
     * SQLite key: grouper_mdcorsk_mdc11
     * [en] Diseases and disorders of the urinary organs (11)
     * [de] Krankheiten und Störungen der Harnorgane (11)</pre>
     * @return [en] Diseases and disorders of the urinary organs (11), [de] Krankheiten und Störungen der Harnorgane (11)
     */
    public static String getGrouperMdcOrSkMdc11() {
        return get(GROUPER_MDC_OR_SK_MDC_11).value;
    }

    public static Translation getGrouperMdcOrSkMdc11Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_11);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_12
     * SQLite key: grouper_mdcorsk_mdc12
     * [en] Diseases and disorders of the male reproductive system (12)
     * [de] Krankheiten und Störungen der männlichen Geschlechtsorgane (12)</pre>
     * @return [en] Diseases and disorders of the male reproductive system (12), [de] Krankheiten und Störungen der männlichen Geschlechtsorgane (12)
     */
    public static String getGrouperMdcOrSkMdc12() {
        return get(GROUPER_MDC_OR_SK_MDC_12).value;
    }

    public static Translation getGrouperMdcOrSkMdc12Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_12);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_13
     * SQLite key: grouper_mdcorsk_mdc13
     * [en] Diseases and disorders of the female reproductive organs (13)
     * [de] Krankheiten und Störungen der weiblichen Geschlechtsorgane (13)</pre>
     * @return [en] Diseases and disorders of the female reproductive organs (13), [de] Krankheiten und Störungen der weiblichen Geschlechtsorgane (13)
     */
    public static String getGrouperMdcOrSkMdc13() {
        return get(GROUPER_MDC_OR_SK_MDC_13).value;
    }

    public static Translation getGrouperMdcOrSkMdc13Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_13);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_14
     * SQLite key: grouper_mdcorsk_mdc14
     * [en] Pregnancy, childbirth and postpartum (14)
     * [de] Schwangerschaft, Geburt und Wochenbett (14)</pre>
     * @return [en] Pregnancy, childbirth and postpartum (14), [de] Schwangerschaft, Geburt und Wochenbett (14)
     */
    public static String getGrouperMdcOrSkMdc14() {
        return get(GROUPER_MDC_OR_SK_MDC_14).value;
    }

    public static Translation getGrouperMdcOrSkMdc14Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_14);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_15
     * SQLite key: grouper_mdcorsk_mdc15
     * [en] newborn (15)
     * [de] Neugeborene (15)</pre>
     * @return [en] newborn (15), [de] Neugeborene (15)
     */
    public static String getGrouperMdcOrSkMdc15() {
        return get(GROUPER_MDC_OR_SK_MDC_15).value;
    }

    public static Translation getGrouperMdcOrSkMdc15Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_15);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_16
     * SQLite key: grouper_mdcorsk_mdc16
     * [en] Diseases of the blood, the blood-forming organs and the immune system (16)
     * [de] Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems (16)</pre>
     * @return [en] Diseases of the blood, the blood-forming organs and the immune system (16), [de] Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems (16)
     */
    public static String getGrouperMdcOrSkMdc16() {
        return get(GROUPER_MDC_OR_SK_MDC_16).value;
    }

    public static Translation getGrouperMdcOrSkMdc16Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_16);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_17
     * SQLite key: grouper_mdcorsk_mdc17
     * [en] Hematologic and solid neoplasms (17)
     * [de] Hämatologische und solide Neubildungen (17)</pre>
     * @return [en] Hematologic and solid neoplasms (17), [de] Hämatologische und solide Neubildungen (17)
     */
    public static String getGrouperMdcOrSkMdc17() {
        return get(GROUPER_MDC_OR_SK_MDC_17).value;
    }

    public static Translation getGrouperMdcOrSkMdc17Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_17);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_18_A
     * SQLite key: grouper_mdcorsk_mdc18a
     * [en] HIV (18A)
     * [de] HIV (18A)</pre>
     * @return [en] HIV (18A), [de] HIV (18A)
     */
    public static String getGrouperMdcOrSkMdc18A() {
        return get(GROUPER_MDC_OR_SK_MDC_18_A).value;
    }

    public static Translation getGrouperMdcOrSkMdc18AObj() {
        return get(GROUPER_MDC_OR_SK_MDC_18_A);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_18_B
     * SQLite key: grouper_mdcorsk_mdc18b
     * [en] Infectious and parasitic diseases (18B)
     * [de] Infektiöse und parasitäre Krankheiten (18B)</pre>
     * @return [en] Infectious and parasitic diseases (18B), [de] Infektiöse und parasitäre Krankheiten (18B)
     */
    public static String getGrouperMdcOrSkMdc18B() {
        return get(GROUPER_MDC_OR_SK_MDC_18_B).value;
    }

    public static Translation getGrouperMdcOrSkMdc18BObj() {
        return get(GROUPER_MDC_OR_SK_MDC_18_B);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_19
     * SQLite key: grouper_mdcorsk_mdc19
     * [en] Mental diseases and disorders (19)
     * [de] Psychische Krankheiten und Störungen (19)</pre>
     * @return [en] Mental diseases and disorders (19), [de] Psychische Krankheiten und Störungen (19)
     */
    public static String getGrouperMdcOrSkMdc19() {
        return get(GROUPER_MDC_OR_SK_MDC_19).value;
    }

    public static Translation getGrouperMdcOrSkMdc19Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_19);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_20
     * SQLite key: grouper_mdcorsk_mdc20
     * [en] Alcohol and drug use, and alcohol and drug -induced mental disorders (20)
     * [de] Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen (20)</pre>
     * @return [en] Alcohol and drug use, and alcohol and drug -induced mental disorders (20), [de] Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen (20)
     */
    public static String getGrouperMdcOrSkMdc20() {
        return get(GROUPER_MDC_OR_SK_MDC_20).value;
    }

    public static Translation getGrouperMdcOrSkMdc20Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_20);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_21_A
     * SQLite key: grouper_mdcorsk_mdc21a
     * [en] Poly trauma (21A)
     * [de] Polytrauma (21A)</pre>
     * @return [en] Poly trauma (21A), [de] Polytrauma (21A)
     */
    public static String getGrouperMdcOrSkMdc21A() {
        return get(GROUPER_MDC_OR_SK_MDC_21_A).value;
    }

    public static Translation getGrouperMdcOrSkMdc21AObj() {
        return get(GROUPER_MDC_OR_SK_MDC_21_A);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_21_B
     * SQLite key: grouper_mdcorsk_mdc21b
     * [en] Injury, poisoning and toxic effects of drugs and medicines (21B)
     * [de] Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten (21B)</pre>
     * @return [en] Injury, poisoning and toxic effects of drugs and medicines (21B), [de] Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten (21B)
     */
    public static String getGrouperMdcOrSkMdc21B() {
        return get(GROUPER_MDC_OR_SK_MDC_21_B).value;
    }

    public static Translation getGrouperMdcOrSkMdc21BObj() {
        return get(GROUPER_MDC_OR_SK_MDC_21_B);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_22
     * SQLite key: grouper_mdcorsk_mdc22
     * [en] burns (22)
     * [de] Verbrennungen (22)</pre>
     * @return [en] burns (22), [de] Verbrennungen (22)
     */
    public static String getGrouperMdcOrSkMdc22() {
        return get(GROUPER_MDC_OR_SK_MDC_22).value;
    }

    public static Translation getGrouperMdcOrSkMdc22Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_22);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_23
     * SQLite key: grouper_mdcorsk_mdc23
     * [en] Factors influencing health, and other health care utilization (23)
     * [de] Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens (23)</pre>
     * @return [en] Factors influencing health, and other health care utilization (23), [de] Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens (23)
     */
    public static String getGrouperMdcOrSkMdc23() {
        return get(GROUPER_MDC_OR_SK_MDC_23).value;
    }

    public static Translation getGrouperMdcOrSkMdc23Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_23);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_24
     * SQLite key: grouper_mdcorsk_mdc24
     * [en] Other DRGs (24)
     * [de] Sonstige DRGs (24)</pre>
     * @return [en] Other DRGs (24), [de] Sonstige DRGs (24)
     */
    public static String getGrouperMdcOrSkMdc24() {
        return get(GROUPER_MDC_OR_SK_MDC_24).value;
    }

    public static Translation getGrouperMdcOrSkMdc24Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_24);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_25
     * SQLite key: grouper_mdcorsk_mdc25
     * [en] Semi-stationary paediatric diagnostics and treatment (25)
     * [de] Teilstationäre pädiatrische Diagnostik und Behandlung (25)</pre>
     * @return [en] Semi-stationary paediatric diagnostics and treatment (25), [de] Teilstationäre pädiatrische Diagnostik und Behandlung (25)
     */
    public static String getGrouperMdcOrSkMdc25() {
        return get(GROUPER_MDC_OR_SK_MDC_25).value;
    }

    public static Translation getGrouperMdcOrSkMdc25Obj() {
        return get(GROUPER_MDC_OR_SK_MDC_25);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_MDC_PRE
     * SQLite key: grouper_mdcorsk_mdcpre
     * [en] Diseases and disorders of the nervous system (PRE)
     * [de] Sonderfälle (Beatmungsfälle, Transplantationen u. ä.)</pre>
     * @return [en] Diseases and disorders of the nervous system (PRE), [de] Sonderfälle (Beatmungsfälle, Transplantationen u. ä.)
     */
    public static String getGrouperMdcOrSkMdcPre() {
        return get(GROUPER_MDC_OR_SK_MDC_PRE).value;
    }

    public static Translation getGrouperMdcOrSkMdcPreObj() {
        return get(GROUPER_MDC_OR_SK_MDC_PRE);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_PSYCHO_DAY_CARE
     * SQLite key: grouper_mdcorsk_psychodaycare
     * [en] Psychiatry, day patient (TPY)
     * [de] Psychiatrie, teilstationär (TPY)</pre>
     * @return [en] Psychiatry, day patient (TPY), [de] Psychiatrie, teilstationär (TPY)
     */
    public static String getGrouperMdcOrSkPsychoDayCare() {
        return get(GROUPER_MDC_OR_SK_PSYCHO_DAY_CARE).value;
    }

    public static Translation getGrouperMdcOrSkPsychoDayCareObj() {
        return get(GROUPER_MDC_OR_SK_PSYCHO_DAY_CARE);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_PSYCHO_INPATIENT_CARE
     * SQLite key: grouper_mdcorsk_psychoinpatientcare
     * [en] Psychiatry, inpatient (PSY)
     * [de] Psychiatrie, vollstationär (PSY)</pre>
     * @return [en] Psychiatry, inpatient (PSY), [de] Psychiatrie, vollstationär (PSY)
     */
    public static String getGrouperMdcOrSkPsychoInpatientCare() {
        return get(GROUPER_MDC_OR_SK_PSYCHO_INPATIENT_CARE).value;
    }

    public static Translation getGrouperMdcOrSkPsychoInpatientCareObj() {
        return get(GROUPER_MDC_OR_SK_PSYCHO_INPATIENT_CARE);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_PSYCHOSOMATIC_DAY_CARE
     * SQLite key: grouper_mdcorsk_psychosomaticdaycare
     * [en] Psychosomatics, day patient (TPO)
     * [de] Psychosomatik, teilstationär (TPO)</pre>
     * @return [en] Psychosomatics, day patient (TPO), [de] Psychosomatik, teilstationär (TPO)
     */
    public static String getGrouperMdcOrSkPsychosomaticDayCare() {
        return get(GROUPER_MDC_OR_SK_PSYCHOSOMATIC_DAY_CARE).value;
    }

    public static Translation getGrouperMdcOrSkPsychosomaticDayCareObj() {
        return get(GROUPER_MDC_OR_SK_PSYCHOSOMATIC_DAY_CARE);
    }

    /**
     * <pre>GROUPER_MDC_OR_SK_PSYCHOSOMATIC_INPATIENT_CARE
     * SQLite key: grouper_mdcorsk_psychosomaticinpatientcare
     * [en] Psychosomatics, inpatient (PSO)
     * [de] Psychosomatik, vollstationär (PSO)</pre>
     * @return [en] Psychosomatics, inpatient (PSO), [de] Psychosomatik, vollstationär (PSO)
     */
    public static String getGrouperMdcOrSkPsychosomaticInpatientCare() {
        return get(GROUPER_MDC_OR_SK_PSYCHOSOMATIC_INPATIENT_CARE).value;
    }

    public static Translation getGrouperMdcOrSkPsychosomaticInpatientCareObj() {
        return get(GROUPER_MDC_OR_SK_PSYCHOSOMATIC_INPATIENT_CARE);
    }

    /**
     * <pre>GROUPER_OPS_RES_TYPE_NOR_INVALID_DATE
     * SQLite key: grouper_ops_restype_norinvaliddate
     * [en] NonOR procedure with conflict OPS date
     * [de] NonOR-Prozedur mit Konflikt OPS-Datum</pre>
     * @return [en] NonOR procedure with conflict OPS date, [de] NonOR-Prozedur mit Konflikt OPS-Datum
     */
    public static String getGrouperOpsResTypeNorInvalidDate() {
        return get(GROUPER_OPS_RES_TYPE_NOR_INVALID_DATE).value;
    }

    /**
     * <pre>GROUPER_OPS_RES_TYPE_NOR_INVALID_LOC
     * SQLite key: grouper_ops_restype_norinvalidloc
     * [en] NonOR procedure with conflict subsidiary risk label
     * [de] NonOR-Prozedur mit Konflikt Zusatzkennzeichen</pre>
     * @return [en] NonOR procedure with conflict subsidiary risk label, [de] NonOR-Prozedur mit Konflikt Zusatzkennzeichen
     */
    public static String getGrouperOpsResTypeNorInvalidLoc() {
        return get(GROUPER_OPS_RES_TYPE_NOR_INVALID_LOC).value;
    }

    /**
     * <pre>GROUPER_OPS_RES_TYPE_NOR_INVALID_LOC_AND_DATE
     * SQLite key: grouper_ops_restype_norinvalidlocanddate
     * [en] NonOR procedure with conflict subsidiary risk label and OPS date
     * [de] NonOR-Prozedur mit Konflikt Zusatzkennzeichen und OPS-Datum</pre>
     * @return [en] NonOR procedure with conflict subsidiary risk label and OPS date, [de] NonOR-Prozedur mit Konflikt Zusatzkennzeichen und OPS-Datum
     */
    public static String getGrouperOpsResTypeNorInvalidLocAndDate() {
        return get(GROUPER_OPS_RES_TYPE_NOR_INVALID_LOC_AND_DATE).value;
    }

    /**
     * <pre>GROUPER_OPS_RES_TYPE_NOR_OPS
     * SQLite key: grouper_ops_restype_norops
     * [en] NonOR procedure
     * [de] NonOR-Prozedur</pre>
     * @return [en] NonOR procedure, [de] NonOR-Prozedur
     */
    public static String getGrouperOpsResTypeNorOps() {
        return get(GROUPER_OPS_RES_TYPE_NOR_OPS).value;
    }

    /**
     * <pre>GROUPER_OPS_RES_TYPE_OR_INVALID_DATE
     * SQLite key: grouper_ops_restype_orinvaliddate
     * [en] OR procedure with conflict OPS date
     * [de] OR-Prozedur mit Konflikt OPS-Datum</pre>
     * @return [en] OR procedure with conflict OPS date, [de] OR-Prozedur mit Konflikt OPS-Datum
     */
    public static String getGrouperOpsResTypeOrInvalidDate() {
        return get(GROUPER_OPS_RES_TYPE_OR_INVALID_DATE).value;
    }

    /**
     * <pre>GROUPER_OPS_RES_TYPE_OR_INVALID_LOC
     * SQLite key: grouper_ops_restype_orinvalidloc
     * [en] OR procedure with conflict subsidiary risk label
     * [de] OR-Prozedur mit Konflikt Zusatzkennzeichen</pre>
     * @return [en] OR procedure with conflict subsidiary risk label, [de] OR-Prozedur mit Konflikt Zusatzkennzeichen
     */
    public static String getGrouperOpsResTypeOrInvalidLoc() {
        return get(GROUPER_OPS_RES_TYPE_OR_INVALID_LOC).value;
    }

    /**
     * <pre>GROUPER_OPS_RES_TYPE_OR_INVALID_LOC_AND_DATE
     * SQLite key: grouper_ops_restype_orinvalidlocanddate
     * [en] OR procedure with conflict subsidiary risk label and OPS date
     * [de] OR-Prozedur mit Konflikt Zusatzkennzeichen und OPS-Datum</pre>
     * @return [en] OR procedure with conflict subsidiary risk label and OPS date, [de] OR-Prozedur mit Konflikt Zusatzkennzeichen und OPS-Datum
     */
    public static String getGrouperOpsResTypeOrInvalidLocAndDate() {
        return get(GROUPER_OPS_RES_TYPE_OR_INVALID_LOC_AND_DATE).value;
    }

    /**
     * <pre>GROUPER_OPS_RES_TYPE_OR_OPS
     * SQLite key: grouper_ops_restype_orops
     * [en] OR procedure
     * [de] OR-Prozedur</pre>
     * @return [en] OR procedure, [de] OR-Prozedur
     */
    public static String getGrouperOpsResTypeOrOps() {
        return get(GROUPER_OPS_RES_TYPE_OR_OPS).value;
    }

    /**
     * <pre>GROUPER_OPS_RES_TYPE_SRG
     * SQLite key: grouper_ops_restype_srg
     * [en] SRG (neither OR nor NonOR procedure)
     * [de] SRG (weder OR noch NonOR-Prozedur)</pre>
     * @return [en] SRG (neither OR nor NonOR procedure), [de] SRG (weder OR noch NonOR-Prozedur)
     */
    public static String getGrouperOpsResTypeSrg() {
        return get(GROUPER_OPS_RES_TYPE_SRG).value;
    }

    /**
     * <pre>GROUPER_OPS_RES_TYPE_SRG_INVALID_DATE
     * SQLite key: grouper_ops_restype_srginvaliddate
     * [en] SRG with conflict OPS date
     * [de] SRG mit Konflikt OPS-Datum</pre>
     * @return [en] SRG with conflict OPS date, [de] SRG mit Konflikt OPS-Datum
     */
    public static String getGrouperOpsResTypeSrgInvalidDate() {
        return get(GROUPER_OPS_RES_TYPE_SRG_INVALID_DATE).value;
    }

    /**
     * <pre>GROUPER_OPS_RES_TYPE_SRG_INVALID_LOC
     * SQLite key: grouper_ops_restype_srginvalidloc
     * [en] SRG with conflict subsidiary risk label
     * [de] SRG mit Konflikt Zusatzkennzeichen</pre>
     * @return [en] SRG with conflict subsidiary risk label, [de] SRG mit Konflikt Zusatzkennzeichen
     */
    public static String getGrouperOpsResTypeSrgInvalidLoc() {
        return get(GROUPER_OPS_RES_TYPE_SRG_INVALID_LOC).value;
    }

    /**
     * <pre>GROUPER_OPS_RES_TYPE_SRG_INVALID_LOC_AND_DATE
     * SQLite key: grouper_ops_restype_srginvalidlocanddate
     * [en] SRG with conflict subsidiary risk label and OPS date
     * [de] SRG mit Konflikt Zusatzkennzeichen und OPS-Datum</pre>
     * @return [en] SRG with conflict subsidiary risk label and OPS date, [de] SRG mit Konflikt Zusatzkennzeichen und OPS-Datum
     */
    public static String getGrouperOpsResTypeSrgInvalidLocAndDate() {
        return get(GROUPER_OPS_RES_TYPE_SRG_INVALID_LOC_AND_DATE).value;
    }

    /**
     * <pre>GROUPER_STATUS_GST_OK
     * SQLite key: grouper_status_gstok
     * [en] Gst Ok
     * [de] Normale Gruppierung</pre>
     * @return [en] Gst Ok, [de] Normale Gruppierung
     */
    public static String getGrouperStatusGstOk() {
        return get(GROUPER_STATUS_GST_OK).value;
    }

    /**
     * <pre>GROUPER_STATUS_INACCEPTABLE_PRINCIPAL_ICD
     * SQLite key: grouper_status_inacceptableprincipalicd
     * [en] Inacceptable Principal Icd
     * [de] Diagnose-Code als Hauptdiagnose nicht zulässig</pre>
     * @return [en] Inacceptable Principal Icd, [de] Diagnose-Code als Hauptdiagnose nicht zulässig
     */
    public static String getGrouperStatusInacceptablePrincipalIcd() {
        return get(GROUPER_STATUS_INACCEPTABLE_PRINCIPAL_ICD).value;
    }

    /**
     * <pre>GROUPER_STATUS_INVALID_ADM_DIS_REASON_MODE
     * SQLite key: grouper_status_invalidadmdisreasonmode
     * [en] Invalid Admission Reason Mode
     * [de] Ungültiger Entlassungsgrund, Aufnahmeanlass oder Aufnahmegrund</pre>
     * @return [en] Invalid Admission Reason Mode, [de] Ungültiger Entlassungsgrund, Aufnahmeanlass oder Aufnahmegrund
     */
    public static String getGrouperStatusInvalidAdmDisReasonMode() {
        return get(GROUPER_STATUS_INVALID_ADM_DIS_REASON_MODE).value;
    }

    /**
     * <pre>GROUPER_STATUS_INVALID_AGE
     * SQLite key: grouper_status_invalidage
     * [en] Invalid Age
     * [de] Ungültiges Alter</pre>
     * @return [en] Invalid Age, [de] Ungültiges Alter
     */
    public static String getGrouperStatusInvalidAge() {
        return get(GROUPER_STATUS_INVALID_AGE).value;
    }

    /**
     * <pre>GROUPER_STATUS_INVALID_CASE
     * SQLite key: grouper_status_invalidcase
     * [en] Invalid Case
     * [de] Ungültiger Fall</pre>
     * @return [en] Invalid Case, [de] Ungültiger Fall
     */
    public static String getGrouperStatusInvalidCase() {
        return get(GROUPER_STATUS_INVALID_CASE).value;
    }

    /**
     * <pre>GROUPER_STATUS_INVALID_GENDER
     * SQLite key: grouper_status_invalidgender
     * [en] Invalid Gender
     * [de] Ungültiges Geschlecht</pre>
     * @return [en] Invalid Gender, [de] Ungültiges Geschlecht
     */
    public static String getGrouperStatusInvalidGender() {
        return get(GROUPER_STATUS_INVALID_GENDER).value;
    }

    /**
     * <pre>GROUPER_STATUS_INVALID_LOS
     * SQLite key: grouper_status_invalidlos
     * [en] Invalid LOS
     * [de] Ungültige Verweildauer</pre>
     * @return [en] Invalid LOS, [de] Ungültige Verweildauer
     */
    public static String getGrouperStatusInvalidLos() {
        return get(GROUPER_STATUS_INVALID_LOS).value;
    }

    /**
     * <pre>GROUPER_STATUS_INVALID_PRINCIPAL_ICD
     * SQLite key: grouper_status_invalidprincipalicd
     * [en] Invalid Principal Icd
     * [de] Ungültige oder fehlende Hauptdiagnose</pre>
     * @return [en] Invalid Principal Icd, [de] Ungültige oder fehlende Hauptdiagnose
     */
    public static String getGrouperStatusInvalidPrincipalIcd() {
        return get(GROUPER_STATUS_INVALID_PRINCIPAL_ICD).value;
    }

    /**
     * <pre>GROUPER_STATUS_INVALID_WEIGHT
     * SQLite key: grouper_status_invalidweight
     * [en] Invalid Weight
     * [de] Ungültiges Aufnahmegewicht</pre>
     * @return [en] Invalid Weight, [de] Ungültiges Aufnahmegewicht
     */
    public static String getGrouperStatusInvalidWeight() {
        return get(GROUPER_STATUS_INVALID_WEIGHT).value;
    }

    /**
     * <pre>HEALTH_INSURANCE
     * SQLite key: healthinsurance
     * [en] Health Insurance
     * [de] Krankenkasse</pre>
     * ATTENTION this value ('health insurance') seems to be also defined under the key IDENT_CLASS_ID10!
     * @return [en] Health Insurance, [de] Krankenkasse
     */
    public static String getHealthInsurance() {
        return get(HEALTH_INSURANCE).value;
    }

    /**
     * <pre>HELP
     * SQLite key: help
     * [en] Help
     * [de] Hilfe</pre>
     * @return [en] Help, [de] Hilfe
     */
    public static String getHelp() {
        return get(HELP).value;
    }

    /**
     * <pre>HIS_VERSION
     * SQLite key: hisversion
     * [en] HIS-Version
     * [de] KIS-Version</pre>
     * @return [en] HIS-Version, [de] KIS-Version
     */
    public static String getHisVersion() {
        return get(HIS_VERSION).value;
    }

    /**
     * <pre>HISTORY_ACTION_CREATED
     * SQLite key: history_action_created
     * [en] Action {0} created (Created actions)
     * [de] Aktion {0} angelegt (Aktion angelegt)</pre>
     * @param pParams placeholder replacements
     * @return [en] Action {0} created (Created actions), [de] Aktion {0} angelegt (Aktion angelegt)
     */
    public static String getHistoryActionCreated(final Object... pParams) {
        return get(HISTORY_ACTION_CREATED, pParams).value;
    }

    public static Translation getHistoryActionCreatedObj(final Object... pParams) {
        return get(HISTORY_ACTION_CREATED, pParams);
    }

    /**
     * <pre>HISTORY_SECTION
     * SQLite key: history_section
     * [en] History
     * [de] Historie</pre>
     * @return [en] History, [de] Historie
     */
    public static String getHistorySection() {
        return get(HISTORY_SECTION).value;
    }

    /**
     * <pre>HISTORY_UPCOMING_EVENTS
     * SQLite key: history_upcoming_events
     * [en] UPCOMING EVENTS WILL COME HERE!!
     * [de] Nächste Arbeitsschritte</pre>
     * @return [en] UPCOMING EVENTS WILL COME HERE!!, [de] Nächste Arbeitsschritte
     */
    public static String getHistoryUpcomingEvents() {
        return get(HISTORY_UPCOMING_EVENTS).value;
    }

    /**
     * <pre>HOLIDAY
     * SQLite key: holiday
     * [en] Holiday
     * [de] Urlaub</pre>
     * @return [en] Holiday, [de] Urlaub
     */
    public static String getHoliday() {
        return get(HOLIDAY).value;
    }

    /**
     * <pre>HOSPITAL
     * SQLite key: hospital
     * [en] Hospital
     * [de] Krankenhaus</pre>
     * @return [en] Hospital, [de] Krankenhaus
     */
    public static String getHospital() {
        return get(HOSPITAL).value;
    }

    /**
     * <pre>HOSPITAL_IDENT
     * SQLite key: hospitalident
     * [en] Hospital Identifier
     * [de] IKZ des Krankenhauses (IKZ Krankenhaus)</pre>
     * @return [en] Hospital Identifier, [de] IKZ des Krankenhauses (IKZ Krankenhaus)
     */
    public static String getHospitalIdent() {
        return get(HOSPITAL_IDENT).value;
    }

    public static Translation getHospitalIdentObj() {
        return get(HOSPITAL_IDENT);
    }

    /**
     * <pre>HOSPITAL_IDENTIFIER
     * SQLite key: hospitalidentifier
     * [en] Hospital
     * [de] Krankenhaus IKZ (Krankenhaus)</pre>
     * @return [en] Hospital, [de] Krankenhaus IKZ (Krankenhaus)
     */
    public static String getHospitalIdentifier() {
        return get(HOSPITAL_IDENTIFIER).value;
    }

    public static Translation getHospitalIdentifierObj() {
        return get(HOSPITAL_IDENTIFIER);
    }

    /**
     * <pre>HOSPITAL_NAME
     * SQLite key: hospitalname
     * [en] Hospital Name
     * [de] Krankenhausname</pre>
     * @return [en] Hospital Name, [de] Krankenhausname
     */
    public static String getHospitalName() {
        return get(HOSPITAL_NAME).value;
    }

    /**
     * <pre>HOSPITALIZATION
     * SQLite key: hospitalization
     * [en] Hospitalization
     * [de] Einweisung</pre>
     * ATTENTION this value ('Hospitalization') seems to be also defined under the key ICD_TYPE_HOSPITALIZATION!
     * @return [en] Hospitalization, [de] Einweisung
     */
    public static String getHospitalization() {
        return get(HOSPITALIZATION).value;
    }

    /**
     * <pre>HOSPITALIZATION_DIAGNOSIS
     * SQLite key: hospitalization_diagnosis
     * [en] Hospitalization Diagnosis
     * [de] Einweisungsdiagnose</pre>
     * @return [en] Hospitalization Diagnosis, [de] Einweisungsdiagnose
     */
    public static String getHospitalizationDiagnosis() {
        return get(HOSPITALIZATION_DIAGNOSIS).value;
    }

    /**
     * <pre>HOURS_OF_MECHANICAL_VENTILATION
     * SQLite key: hoursofmechanicalventilation
     * [en] Hours of Mechanical Ventilation
     * [de] Beatmungsdauer</pre>
     * @return [en] Hours of Mechanical Ventilation, [de] Beatmungsdauer
     */
    public static String getHoursOfMechanicalVentilation() {
        return get(HOURS_OF_MECHANICAL_VENTILATION).value;
    }

    /**
     * <pre>ICD_PLACEHOLDER
     * SQLite key: icd_placeholder
     * [en] No diagnoses added
     * [de] Keine Diagnosen hinzugefügt</pre>
     * @return [en] No diagnoses added, [de] Keine Diagnosen hinzugefügt
     */
    public static String getIcdPlaceholder() {
        return get(ICD_PLACEHOLDER).value;
    }

    /**
     * <pre>ICD_REF_TYPE_ADDITION
     * SQLite key: icd_reftype_addition
     * [en] Addition
     * [de] Zusatz</pre>
     * @return [en] Addition, [de] Zusatz
     */
    public static String getIcdRefTypeAddition() {
        return get(ICD_REF_TYPE_ADDITION).value;
    }

    /**
     * <pre>ICD_REF_TYPE_ADDITION_TO
     * SQLite key: icd_reftype_additionto
     * [en] AdditionTo
     * [de] Zusatz zu</pre>
     * @return [en] AdditionTo, [de] Zusatz zu
     */
    public static String getIcdRefTypeAdditionTo() {
        return get(ICD_REF_TYPE_ADDITION_TO).value;
    }

    /**
     * <pre>ICD_REF_TYPE_CROSS
     * SQLite key: icd_reftype_cross
     * [en] Cross
     * [de] Kreuz</pre>
     * @return [en] Cross, [de] Kreuz
     */
    public static String getIcdRefTypeCross() {
        return get(ICD_REF_TYPE_CROSS).value;
    }

    /**
     * <pre>ICD_REF_TYPE_STAR
     * SQLite key: icd_reftype_star
     * [en] Star
     * [de] Stern</pre>
     * @return [en] Star, [de] Stern
     */
    public static String getIcdRefTypeStar() {
        return get(ICD_REF_TYPE_STAR).value;
    }

    /**
     * <pre>ICD_TYPE_ADMISSION
     * SQLite key: icdtype_admission
     * [en] Admission
     * [de] Aufnahme</pre>
     * @return [en] Admission, [de] Aufnahme
     */
    public static String getIcdTypeAdmission() {
        return get(ICD_TYPE_ADMISSION).value;
    }

    /**
     * <pre>ICD_TYPE_AFTER_INPATIENT
     * SQLite key: icdtype_afterinpatient
     * [en] After inpatient
     * [de] Nachstationäre</pre>
     * @return [en] After inpatient, [de] Nachstationäre
     */
    public static String getIcdTypeAfterInpatient() {
        return get(ICD_TYPE_AFTER_INPATIENT).value;
    }

    /**
     * <pre>ICD_TYPE_BEFORE_INPATIENT
     * SQLite key: icdtype_beforeinpatient
     * [en] Before inpatient
     * [de] Vorstationäre</pre>
     * ATTENTION this value ('before inpatient') seems to be also defined under the key FEE_GROUP_BEFORE_INPATIENT!
     * @return [en] Before inpatient, [de] Vorstationäre
     */
    public static String getIcdTypeBeforeInpatient() {
        return get(ICD_TYPE_BEFORE_INPATIENT).value;
    }

    /**
     * <pre>ICD_TYPE_BILLING
     * SQLite key: icdtype_billing
     * [en] Billing
     * [de] Abrechnungs-</pre>
     * @return [en] Billing, [de] Abrechnungs-
     */
    public static String getIcdTypeBilling() {
        return get(ICD_TYPE_BILLING).value;
    }

    /**
     * <pre>ICD_TYPE_CARE
     * SQLite key: icdtype_care
     * [en] Care
     * [de] Pflege</pre>
     * @return [en] Care, [de] Pflege
     */
    public static String getIcdTypeCare() {
        return get(ICD_TYPE_CARE).value;
    }

    /**
     * <pre>ICD_TYPE_DEPARTMENT_ADMISSION
     * SQLite key: icdtype_departmentadmission
     * [en] Department Admission
     * [de] Fachabteilung Aufnahme</pre>
     * @return [en] Department Admission, [de] Fachabteilung Aufnahme
     */
    public static String getIcdTypeDepartmentAdmission() {
        return get(ICD_TYPE_DEPARTMENT_ADMISSION).value;
    }

    /**
     * <pre>ICD_TYPE_DEPARTMENT_DISCHARGE
     * SQLite key: icdtype_departmentdischarge
     * [en] Department Discharge
     * [de] Fachabteilung Entlassung</pre>
     * @return [en] Department Discharge, [de] Fachabteilung Entlassung
     */
    public static String getIcdTypeDepartmentDischarge() {
        return get(ICD_TYPE_DEPARTMENT_DISCHARGE).value;
    }

    /**
     * <pre>ICD_TYPE_DEPARTMENT_TREATMENT
     * SQLite key: icdtype_departmenttreatment
     * [en] Department Treatment
     * [de] Fachabteilung Behandlung</pre>
     * @return [en] Department Treatment, [de] Fachabteilung Behandlung
     */
    public static String getIcdTypeDepartmentTreatment() {
        return get(ICD_TYPE_DEPARTMENT_TREATMENT).value;
    }

    /**
     * <pre>ICD_TYPE_DISCHARGE
     * SQLite key: icdtype_discharge
     * [en] Discharge
     * [de] Entlassung</pre>
     * ATTENTION this value ('Discharge') seems to be also defined under the key DISCHARGE!
     * @return [en] Discharge, [de] Entlassung
     */
    public static String getIcdTypeDischarge() {
        return get(ICD_TYPE_DISCHARGE).value;
    }

    /**
     * <pre>ICD_TYPE_DISCHARGE_AMBULANT
     * SQLite key: icdtype_dischargeambulant
     * [en] Discharge - ambulant
     * [de] Entlassung - ambulant</pre>
     * @return [en] Discharge - ambulant, [de] Entlassung - ambulant
     */
    public static String getIcdTypeDischargeAmbulant() {
        return get(ICD_TYPE_DISCHARGE_AMBULANT).value;
    }

    /**
     * <pre>ICD_TYPE_DRG
     * SQLite key: icdtype_drg
     * [en] DRG
     * [de] DRG</pre>
     * ATTENTION this value ('DRG') seems to be also defined under the key CASE_RESOLVE_DRG! this value ('DRG') seems to be also defined under the key CASE_TYPE_DRG! this value ('DRG') seems to be also defined under the key DRG! this value ('DRG') seems to be also defined under the key DRG_SHORTCUT! this value ('DRG') seems to be also defined under the key FEE_GROUP_DRG! this value ('DRG') seems to be also defined under the key RULES_DRG!
     * @return [en] DRG, [de] DRG
     */
    public static String getIcdTypeDRG() {
        return get(ICD_TYPE_DRG).value;
    }

    /**
     * <pre>ICD_TYPE_HOSPITALIZATION
     * SQLite key: icdtype_hospitalization
     * [en] Hospitalization
     * [de] Einweisung</pre>
     * ATTENTION this value ('Hospitalization') seems to be also defined under the key HOSPITALIZATION!
     * @return [en] Hospitalization, [de] Einweisung
     */
    public static String getIcdTypeHospitalization() {
        return get(ICD_TYPE_HOSPITALIZATION).value;
    }

    /**
     * <pre>ICD_TYPE_POSTOPERATIVE
     * SQLite key: icdtype_postoperative
     * [en] Postoperative
     * [de] Postoperativ</pre>
     * @return [en] Postoperative, [de] Postoperativ
     */
    public static String getIcdTypePostoperative() {
        return get(ICD_TYPE_POSTOPERATIVE).value;
    }

    /**
     * <pre>ICD_TYPE_PREOPERATIVE
     * SQLite key: icdtype_preoperative
     * [en] Preoperative
     * [de] Präoperativ</pre>
     * @return [en] Preoperative, [de] Präoperativ
     */
    public static String getIcdTypePreoperative() {
        return get(ICD_TYPE_PREOPERATIVE).value;
    }

    /**
     * <pre>ICD_TYPE_RISK
     * SQLite key: icdtype_risk
     * [en] Risk
     * [de] Risiko</pre>
     * ATTENTION this value ('risk') seems to be also defined under the key PROCESS_FINALISATION_RISK!
     * @return [en] Risk, [de] Risiko
     */
    public static String getIcdTypeRisk() {
        return get(ICD_TYPE_RISK).value;
    }

    /**
     * <pre>ICD_TYPE_TRANSFERRING
     * SQLite key: icdtype_transferring
     * [en] Transferring
     * [de] Verlegung</pre>
     * ATTENTION this value ('Transferring') seems to be also defined under the key ADMISSION_CAUSE_TRANSFERRING! this value ('Transferring') seems to be also defined under the key TRANSFERRING!
     * @return [en] Transferring, [de] Verlegung
     */
    public static String getIcdTypeTransferring() {
        return get(ICD_TYPE_TRANSFERRING).value;
    }

    /**
     * <pre>ICD_TYPE_TREATMENT
     * SQLite key: icdtype_treatment
     * [en] Treatment
     * [de] Behandlung</pre>
     * ATTENTION this value ('Treatment') seems to be also defined under the key ACG_INDEX_TYPE_TRT! this value ('Treatment') seems to be also defined under the key TREATMENT!
     * @return [en] Treatment, [de] Behandlung
     */
    public static String getIcdTypeTreatment() {
        return get(ICD_TYPE_TREATMENT).value;
    }

    /**
     * <pre>ICD_TYPE_WORK
     * SQLite key: icdtype_work
     * [en] Work
     * [de] Arbeits</pre>
     * @return [en] Work, [de] Arbeits
     */
    public static String getIcdTypeWork() {
        return get(ICD_TYPE_WORK).value;
    }

    /**
     * <pre>ICDCATALOG
     * SQLite key: icdcatalog
     * [en] ICD Catalog
     * [de] ICD Katalog</pre>
     * @return [en] ICD Catalog, [de] ICD Katalog
     */
    public static String getICDCatalog() {
        return get(ICDCATALOG).value;
    }

    /**
     * <pre>ICDCODE
     * SQLite key: icdcode
     * [en] Main diagnosis (MD)
     * [de] Hauptdiagnose (HD)</pre>
     * @return [en] Main diagnosis (MD), [de] Hauptdiagnose (HD)
     */
    public static String getICDCode() {
        return get(ICDCODE).value;
    }

    public static Translation getICDCodeObj() {
        return get(ICDCODE);
    }

    /**
     * <pre>IDENT_CLASS_ID10
     * SQLite key: identclass_id10
     * [en] health insurance
     * [de] Krankenversicherungsträger</pre>
     * ATTENTION this value ('Health Insurance') seems to be also defined under the key HEALTH_INSURANCE!
     * @return [en] health insurance, [de] Krankenversicherungsträger
     */
    public static String getIdentClassID10() {
        return get(IDENT_CLASS_ID10).value;
    }

    /**
     * <pre>IDENT_CLASS_ID11
     * SQLite key: identclass_id11
     * [en] pension insurance
     * [de] Rentenversicherungsträger</pre>
     * @return [en] pension insurance, [de] Rentenversicherungsträger
     */
    public static String getIdentClassID11() {
        return get(IDENT_CLASS_ID11).value;
    }

    /**
     * <pre>IDENT_CLASS_ID12
     * SQLite key: identclass_id12
     * [en] Accident insurance institutions
     * [de] Unfallversicherungsträger</pre>
     * @return [en] Accident insurance institutions, [de] Unfallversicherungsträger
     */
    public static String getIdentClassID12() {
        return get(IDENT_CLASS_ID12).value;
    }

    /**
     * <pre>IDENT_CLASS_ID13
     * SQLite key: identclass_id13
     * [en] Welfare agency
     * [de] Sozialhilfeträger</pre>
     * @return [en] Welfare agency, [de] Sozialhilfeträger
     */
    public static String getIdentClassID13() {
        return get(IDENT_CLASS_ID13).value;
    }

    /**
     * <pre>IDENT_CLASS_ID14
     * SQLite key: identclass_id14
     * [en] Federal agency for work
     * [de] Bundesagentur für Arbeit</pre>
     * @return [en] Federal agency for work, [de] Bundesagentur für Arbeit
     */
    public static String getIdentClassID14() {
        return get(IDENT_CLASS_ID14).value;
    }

    /**
     * <pre>IDENT_CLASS_ID15
     * SQLite key: identclass_id15
     * [en] Pension offices and Orthopedic Supplies Set
     * [de] Versorgungsämter und Orthopädische Versorgungsstellen</pre>
     * @return [en] Pension offices and Orthopedic Supplies Set, [de] Versorgungsämter und Orthopädische Versorgungsstellen
     */
    public static String getIdentClassID15() {
        return get(IDENT_CLASS_ID15).value;
    }

    /**
     * <pre>IDENT_CLASS_ID16
     * SQLite key: identclass_id16
     * [en] private health insurance
     * [de] Private Krankenversicherungen</pre>
     * @return [en] private health insurance, [de] Private Krankenversicherungen
     */
    public static String getIdentClassID16() {
        return get(IDENT_CLASS_ID16).value;
    }

    /**
     * <pre>IDENT_CLASS_ID17
     * SQLite key: identclass_id17
     * [en] health authorities
     * [de] Gesundheitsämter</pre>
     * @return [en] health authorities, [de] Gesundheitsämter
     */
    public static String getIdentClassID17() {
        return get(IDENT_CLASS_ID17).value;
    }

    /**
     * <pre>IDENT_CLASS_ID18
     * SQLite key: identclass_id18
     * [en] Care funds of the health insurance
     * [de] Pflegekassen der Krankenversicherungsträger</pre>
     * @return [en] Care funds of the health insurance, [de] Pflegekassen der Krankenversicherungsträger
     */
    public static String getIdentClassID18() {
        return get(IDENT_CLASS_ID18).value;
    }

    /**
     * <pre>IDENT_CLASS_ID19
     * SQLite key: identclass_id19
     * [en] Support the Community's tasks and medical service of health insurance (MD) and the Medical Service Social (MDS)
     * [de] Träger der Gemeinschaftsaufgaben und Medizinischer Dienst der Krankenversicherung (MD) sowie Medizinischer Dienst der Sozialversicherung (MDS)</pre>
     * @return [en] Support the Community's tasks and medical service of health insurance (MD) and the Medical Service Social (MDS), [de] Träger der Gemeinschaftsaufgaben und Medizinischer Dienst der Krankenversicherung (MD) sowie Medizinischer Dienst der Sozialversicherung (MDS)
     */
    public static String getIdentClassID19() {
        return get(IDENT_CLASS_ID19).value;
    }

    /**
     * <pre>IDENT_CLASS_ID20
     * SQLite key: identclass_id20
     * [en] Panel physician associations and doctors incl. Selbstabrechnender doctors (as evaluators doctors)
     * [de] Kassenärztliche Vereinigungen und Ärzte einschl. selbstabrechnender Ärzte (z.B. Gutachterärzte)</pre>
     * @return [en] Panel physician associations and doctors incl. Selbstabrechnender doctors (as evaluators doctors), [de] Kassenärztliche Vereinigungen und Ärzte einschl. selbstabrechnender Ärzte (z.B. Gutachterärzte)
     */
    public static String getIdentClassID20() {
        return get(IDENT_CLASS_ID20).value;
    }

    /**
     * <pre>IDENT_CLASS_ID21
     * SQLite key: identclass_id21
     * [en] Kassen dental associations and dentists incl. Selbstabrechnender dentists (as consultant)
     * [de] Kassenzahnärztliche Vereinigungen und Zahnärzte einschl. selbstabrechnender Zahnärzte (z.B. Gutachter)</pre>
     * @return [en] Kassen dental associations and dentists incl. Selbstabrechnender dentists (as consultant), [de] Kassenzahnärztliche Vereinigungen und Zahnärzte einschl. selbstabrechnender Zahnärzte (z.B. Gutachter)
     */
    public static String getIdentClassID21() {
        return get(IDENT_CLASS_ID21).value;
    }

    /**
     * <pre>IDENT_CLASS_ID22
     * SQLite key: identclass_id22
     * [en] Private medical clearing centers
     * [de] Privatärztliche Verrechnungsstellen</pre>
     * @return [en] Private medical clearing centers, [de] Privatärztliche Verrechnungsstellen
     */
    public static String getIdentClassID22() {
        return get(IDENT_CLASS_ID22).value;
    }

    /**
     * <pre>IDENT_CLASS_ID26
     * SQLite key: identclass_id26
     * [en] Hospitals, hospital pharmacies
     * [de] Krankenhäuser, Krankenhausapotheken</pre>
     * @return [en] Hospitals, hospital pharmacies, [de] Krankenhäuser, Krankenhausapotheken
     */
    public static String getIdentClassID26() {
        return get(IDENT_CLASS_ID26).value;
    }

    /**
     * <pre>IDENT_CLASS_ID27
     * SQLite key: identclass_id27
     * [en] Polyclinics, Integrated care, practice clinics
     * [de] Polikliniken, Integrierte Versorgung, Praxiskliniken</pre>
     * @return [en] Polyclinics, Integrated care, practice clinics, [de] Polikliniken, Integrierte Versorgung, Praxiskliniken
     */
    public static String getIdentClassID27() {
        return get(IDENT_CLASS_ID27).value;
    }

    /**
     * <pre>IDENT_CLASS_ID29
     * SQLite key: identclass_id29
     * [en] Medical and technical laboratories, X-ray and Dental Technology, Institute of Pathology, Radiation and Hygiene Institute
     * [de] Medizinische und technische Labore, Röntgen- und Zahntechnik, Institut für Pathologie, Strahlen- und Hygieneinstitute</pre>
     * @return [en] Medical and technical laboratories, X-ray and Dental Technology, Institute of Pathology, Radiation and Hygiene Institute, [de] Medizinische und technische Labore, Röntgen- und Zahntechnik, Institut für Pathologie, Strahlen- und Hygieneinstitute
     */
    public static String getIdentClassID29() {
        return get(IDENT_CLASS_ID29).value;
    }

    /**
     * <pre>IDENT_CLASS_ID30
     * SQLite key: identclass_id30
     * [en] pharmacies
     * [de] Apotheken</pre>
     * @return [en] pharmacies, [de] Apotheken
     */
    public static String getIdentClassID30() {
        return get(IDENT_CLASS_ID30).value;
    }

    /**
     * <pre>IDENT_CLASS_ID31
     * SQLite key: identclass_id31
     * [en] Optometrists, Ophthalmologists (point of service provision, for example, contact lenses)
     * [de] Augenoptiker, Augenärzte (als Erbringer von Leistungen, z.B. Kontaktlinsen)</pre>
     * @return [en] Optometrists, Ophthalmologists (point of service provision, for example, contact lenses), [de] Augenoptiker, Augenärzte (als Erbringer von Leistungen, z.B. Kontaktlinsen)
     */
    public static String getIdentClassID31() {
        return get(IDENT_CLASS_ID31).value;
    }

    /**
     * <pre>IDENT_CLASS_ID32
     * SQLite key: identclass_id32
     * [en] Audiologist, otolaryngologists (point of service provision, for example, hearing aids)
     * [de] Hörgeräte-Akustiker, HNO-Ärzte (als Erbringer von Leistungen, z.B. Hörgeräteversorgung)</pre>
     * @return [en] Audiologist, otolaryngologists (point of service provision, for example, hearing aids), [de] Hörgeräte-Akustiker, HNO-Ärzte (als Erbringer von Leistungen, z.B. Hörgeräteversorgung)
     */
    public static String getIdentClassID32() {
        return get(IDENT_CLASS_ID32).value;
    }

    /**
     * <pre>IDENT_CLASS_ID33
     * SQLite key: identclass_id33
     * [en] Orthopedic technician, bandages, medical supply stores, medical and hospital supplies, Stomafachhandel Aids
     * [de] Orthopädiemechaniker, Bandagisten, Sanitätshäuser, Arzt- und Krankenhausbedarf, Stomafachhandel, Hilfsmittel</pre>
     * @return [en] Orthopedic technician, bandages, medical supply stores, medical and hospital supplies, Stomafachhandel Aids, [de] Orthopädiemechaniker, Bandagisten, Sanitätshäuser, Arzt- und Krankenhausbedarf, Stomafachhandel, Hilfsmittel
     */
    public static String getIdentClassID33() {
        return get(IDENT_CLASS_ID33).value;
    }

    /**
     * <pre>IDENT_CLASS_ID34
     * SQLite key: identclass_id34
     * [en] Orthopädieschuhmacher, orthopedists (point of service provision, as deposits)
     * [de] Orthopädieschuhmacher, Orthopäden (als Erbringer von Leistungen, z.B. Einlagen)</pre>
     * @return [en] Orthopädieschuhmacher, orthopedists (point of service provision, as deposits), [de] Orthopädieschuhmacher, Orthopäden (als Erbringer von Leistungen, z.B. Einlagen)
     */
    public static String getIdentClassID34() {
        return get(IDENT_CLASS_ID34).value;
    }

    /**
     * <pre>IDENT_CLASS_ID35
     * SQLite key: identclass_id35
     * [en] Wigs (hairdressers)
     * [de] Perückenmacher (Friseure)</pre>
     * @return [en] Wigs (hairdressers), [de] Perückenmacher (Friseure)
     */
    public static String getIdentClassID35() {
        return get(IDENT_CLASS_ID35).value;
    }

    /**
     * <pre>IDENT_CLASS_ID39
     * SQLite key: identclass_id39
     * [en] Podiatrists, med. Chiropodists
     * [de] Podologen, med. Fußpfleger</pre>
     * @return [en] Podiatrists, med. Chiropodists, [de] Podologen, med. Fußpfleger
     */
    public static String getIdentClassID39() {
        return get(IDENT_CLASS_ID39).value;
    }

    /**
     * <pre>IDENT_CLASS_ID40
     * SQLite key: identclass_id40
     * [en] Speech therapist, speech therapy therapist, special education
     * [de] Logopäden, Sprachheilbehandler, Sonderschullehrer</pre>
     * @return [en] Speech therapist, speech therapy therapist, special education, [de] Logopäden, Sprachheilbehandler, Sonderschullehrer
     */
    public static String getIdentClassID40() {
        return get(IDENT_CLASS_ID40).value;
    }

    /**
     * <pre>IDENT_CLASS_ID42
     * SQLite key: identclass_id42
     * [en] See schools
     * [de] Sehschulen</pre>
     * @return [en] See schools, [de] Sehschulen
     */
    public static String getIdentClassID42() {
        return get(IDENT_CLASS_ID42).value;
    }

    /**
     * <pre>IDENT_CLASS_ID43
     * SQLite key: identclass_id43
     * [en] Med. Spa therapists, masseurs, practices for physical therapy, orthopedic surgeons (point of service provision, for example, massages), spas, Kurpacker
     * [de] Med. Bademeister, Masseure, Praxen für physikalische Therapie, Orthopäden (als Erbringer von Leistungen, z.B. Massagen), Kurbäder, Kurpacker</pre>
     * @return [en] Med. Spa therapists, masseurs, practices for physical therapy, orthopedic surgeons (point of service provision, for example, massages), spas, Kurpacker, [de] Med. Bademeister, Masseure, Praxen für physikalische Therapie, Orthopäden (als Erbringer von Leistungen, z.B. Massagen), Kurbäder, Kurpacker
     */
    public static String getIdentClassID43() {
        return get(IDENT_CLASS_ID43).value;
    }

    /**
     * <pre>IDENT_CLASS_ID44
     * SQLite key: identclass_id44
     * [en] Physiotherapists, practices for physiotherapy, sports clubs, antenatal exercises, Rehabilitationssport-, Herzsport- and disabled sports groups, functional training groups, gyms, riding therapy
     * [de] Krankengymnasten, Physiotherapeuten, Praxen für Physiotherapie, Sportvereine, Schwangerschaftsgymnastik, Rehabilitationssport-, Herzsport- und Behindertensportgruppen, Funktionstrainingsgruppen, Sportstudios, Reittherapie</pre>
     * @return [en] Physiotherapists, practices for physiotherapy, sports clubs, antenatal exercises, Rehabilitationssport-, Herzsport- and disabled sports groups, functional training groups, gyms, riding therapy, [de] Krankengymnasten, Physiotherapeuten, Praxen für Physiotherapie, Sportvereine, Schwangerschaftsgymnastik, Rehabilitationssport-, Herzsport- und Behindertensportgruppen, Funktionstrainingsgruppen, Sportstudios, Reittherapie
     */
    public static String getIdentClassID44() {
        return get(IDENT_CLASS_ID44).value;
    }

    /**
     * <pre>IDENT_CLASS_ID45
     * SQLite key: identclass_id45
     * [en] midwives
     * [de] Hebammen</pre>
     * @return [en] midwives, [de] Hebammen
     */
    public static String getIdentClassID45() {
        return get(IDENT_CLASS_ID45).value;
    }

    /**
     * <pre>IDENT_CLASS_ID46
     * SQLite key: identclass_id46
     * [en] Sick and elderly carers, housekeepers, hospice nurse, power and industrial auxiliary ring
     * [de] Kranken- und Altenpfleger, Haushaltshilfen, Hauspfleger, Maschinen- und Betriebshilfsring</pre>
     * @return [en] Sick and elderly carers, housekeepers, hospice nurse, power and industrial auxiliary ring, [de] Kranken- und Altenpfleger, Haushaltshilfen, Hauspfleger, Maschinen- und Betriebshilfsring
     */
    public static String getIdentClassID46() {
        return get(IDENT_CLASS_ID46).value;
    }

    /**
     * <pre>IDENT_CLASS_ID47
     * SQLite key: identclass_id47
     * [en] health resorts
     * [de] Kurverwaltungen</pre>
     * @return [en] health resorts, [de] Kurverwaltungen
     */
    public static String getIdentClassID47() {
        return get(IDENT_CLASS_ID47).value;
    }

    /**
     * <pre>IDENT_CLASS_ID48
     * SQLite key: identclass_id48
     * [en] Employment and addiction therapists design and child therapy, occupational therapy, expressive therapy
     * [de] Beschäftigungs- und Suchttherapeuten, Gestaltungs- und Kindertherapie, Ergotherapie, Künstlerische Therapie</pre>
     * @return [en] Employment and addiction therapists design and child therapy, occupational therapy, expressive therapy, [de] Beschäftigungs- und Suchttherapeuten, Gestaltungs- und Kindertherapie, Ergotherapie, Künstlerische Therapie
     */
    public static String getIdentClassID48() {
        return get(IDENT_CLASS_ID48).value;
    }

    /**
     * <pre>IDENT_CLASS_ID49
     * SQLite key: identclass_id49
     * [en] Other therapeutic assistants, psychologists, psychotherapists, teaching aids, sociotherapy, Breakfast conveyor, special education, mobility manager, sign language interpreters, eurythmy therapists, social pediatric centers, after-care service PEKIP
     * [de] Sonstige therapeutische Hilfspersonen, Psychologen, Psychotherapeuten, Unterrichtshilfen, Soziotherapie, Frühfördereinrichtung, Sonderpädagogen, Mobilitätstrainer, Gebärdensprachdolmetscher, Heileurythmisten, Sozialpädiatrische Zentren, Nachsorgeeinrichtungen, PEKIP</pre>
     * @return [en] Other therapeutic assistants, psychologists, psychotherapists, teaching aids, sociotherapy, Breakfast conveyor, special education, mobility manager, sign language interpreters, eurythmy therapists, social pediatric centers, after-care service PEKIP, [de] Sonstige therapeutische Hilfspersonen, Psychologen, Psychotherapeuten, Unterrichtshilfen, Soziotherapie, Frühfördereinrichtung, Sonderpädagogen, Mobilitätstrainer, Gebärdensprachdolmetscher, Heileurythmisten, Sozialpädiatrische Zentren, Nachsorgeeinrichtungen, PEKIP
     */
    public static String getIdentClassID49() {
        return get(IDENT_CLASS_ID49).value;
    }

    /**
     * <pre>IDENT_CLASS_ID50
     * SQLite key: identclass_id50
     * [en] Charitable organizations, diaconal and social centers, community nurses, support groups, parishes, municipalities (care services, health, social care and nursing stations)
     * [de] Caritative Organisationen, Diakonie- und Sozialstationen, Gemeindeschwestern, Selbsthilfegruppen, Kirchengemeinden, Stadtverwaltungen (Pflegedienste, Kranken-, Sozial- und Schwesternstationen)</pre>
     * @return [en] Charitable organizations, diaconal and social centers, community nurses, support groups, parishes, municipalities (care services, health, social care and nursing stations), [de] Caritative Organisationen, Diakonie- und Sozialstationen, Gemeindeschwestern, Selbsthilfegruppen, Kirchengemeinden, Stadtverwaltungen (Pflegedienste, Kranken-, Sozial- und Schwesternstationen)
     */
    public static String getIdentClassID50() {
        return get(IDENT_CLASS_ID50).value;
    }

    /**
     * <pre>IDENT_CLASS_ID51
     * SQLite key: identclass_id51
     * [en] Care homes, day and respite care, special education centers, centers Sozialtherapeutische
     * [de] Alten- und Pflegeheime, Tages- und Kurzzeitpflege, Sonderschulheime, Sozialtherapeutische Zentren</pre>
     * @return [en] Care homes, day and respite care, special education centers, centers Sozialtherapeutische, [de] Alten- und Pflegeheime, Tages- und Kurzzeitpflege, Sonderschulheime, Sozialtherapeutische Zentren
     */
    public static String getIdentClassID51() {
        return get(IDENT_CLASS_ID51).value;
    }

    /**
     * <pre>IDENT_CLASS_ID52
     * SQLite key: identclass_id52
     * [en] Contract homes without medical institutions
     * [de] Vertragshäuser ohne medizinische Einrichtungen</pre>
     * @return [en] Contract homes without medical institutions, [de] Vertragshäuser ohne medizinische Einrichtungen
     */
    public static String getIdentClassID52() {
        return get(IDENT_CLASS_ID52).value;
    }

    /**
     * <pre>IDENT_CLASS_ID53
     * SQLite key: identclass_id53
     * [en] Facilities for vocational rehabilitation measures
     * [de] Einrichtungen für Maßnahmen der beruflichen Rehabilitation</pre>
     * @return [en] Facilities for vocational rehabilitation measures, [de] Einrichtungen für Maßnahmen der beruflichen Rehabilitation
     */
    public static String getIdentClassID53() {
        return get(IDENT_CLASS_ID53).value;
    }

    /**
     * <pre>IDENT_CLASS_ID54
     * SQLite key: identclass_id54
     * [en] Outpatient and mobile rehabilitation facilities
     * [de] Ambulante und mobile Rehabilitationseinrichtungen</pre>
     * @return [en] Outpatient and mobile rehabilitation facilities, [de] Ambulante und mobile Rehabilitationseinrichtungen
     */
    public static String getIdentClassID54() {
        return get(IDENT_CLASS_ID54).value;
    }

    /**
     * <pre>IDENT_CLASS_ID57
     * SQLite key: identclass_id57
     * [en] Stationary prevention and rehabilitation facilities
     * [de] Stationäre Vorsorge- und Rehabilitationseinrichtungen</pre>
     * @return [en] Stationary prevention and rehabilitation facilities, [de] Stationäre Vorsorge- und Rehabilitationseinrichtungen
     */
    public static String getIdentClassID57() {
        return get(IDENT_CLASS_ID57).value;
    }

    /**
     * <pre>IDENT_CLASS_ID59
     * SQLite key: identclass_id59
     * [en] Other providers of services i. P of the SGB
     * [de] Sonstige Erbringer von Leistungen i. S. des SGB</pre>
     * @return [en] Other providers of services i. P of the SGB, [de] Sonstige Erbringer von Leistungen i. S. des SGB
     */
    public static String getIdentClassID59() {
        return get(IDENT_CLASS_ID59).value;
    }

    /**
     * <pre>IDENT_CLASS_ID60
     * SQLite key: identclass_id60
     * [en] Ambulance companies, doctors and providers in the emergency medical care
     * [de] Krankentransportunternehmen, Ärzte als Leistungserbringer in der notfallärztlichen Versorgung</pre>
     * @return [en] Ambulance companies, doctors and providers in the emergency medical care, [de] Krankentransportunternehmen, Ärzte als Leistungserbringer in der notfallärztlichen Versorgung
     */
    public static String getIdentClassID60() {
        return get(IDENT_CLASS_ID60).value;
    }

    /**
     * <pre>IDENT_CLASS_ID65
     * SQLite key: identclass_id65
     * [en] Undertakers
     * [de] Bestattungsunternehmen</pre>
     * @return [en] Undertakers, [de] Bestattungsunternehmen
     */
    public static String getIdentClassID65() {
        return get(IDENT_CLASS_ID65).value;
    }

    /**
     * <pre>IDENT_CLASS_ID66
     * SQLite key: identclass_id66
     * [en] Clearinghouses, data centers, accounting inspection
     * [de] Abrechnungsstellen, Rechenzentren, Rechnungsprüfstellen</pre>
     * @return [en] Clearinghouses, data centers, accounting inspection, [de] Abrechnungsstellen, Rechenzentren, Rechnungsprüfstellen
     */
    public static String getIdentClassID66() {
        return get(IDENT_CLASS_ID66).value;
    }

    /**
     * <pre>IDENT_CLASS_ID89
     * SQLite key: identclass_id89
     * [en] Group indicator grouping several IK
     * [de] Gruppenkennzeichen zur Zusammenfassung mehrerer IK</pre>
     * @return [en] Group indicator grouping several IK, [de] Gruppenkennzeichen zur Zusammenfassung mehrerer IK
     */
    public static String getIdentClassID89() {
        return get(IDENT_CLASS_ID89).value;
    }

    /**
     * <pre>IDENT_CLASS_ID93
     * SQLite key: identclass_id93
     * [en] aid agencies
     * [de] Beihilfestellen</pre>
     * @return [en] aid agencies, [de] Beihilfestellen
     */
    public static String getIdentClassID93() {
        return get(IDENT_CLASS_ID93).value;
    }

    /**
     * <pre>IDENT_CLASS_ID94
     * SQLite key: identclass_id94
     * [en] Care funds outside the statutory health insurance
     * [de] Pflegekassen außerhalb der gesetzlichen Krankenversicherung</pre>
     * @return [en] Care funds outside the statutory health insurance, [de] Pflegekassen außerhalb der gesetzlichen Krankenversicherung
     */
    public static String getIdentClassID94() {
        return get(IDENT_CLASS_ID94).value;
    }

    /**
     * <pre>IDENT_CLASS_ID95
     * SQLite key: identclass_id95
     * [en] Health insurance outside the statutory health insurance
     * [de] Krankenversicherungsträger außerhalb der gesetzlichen Krankenversicherung</pre>
     * @return [en] Health insurance outside the statutory health insurance, [de] Krankenversicherungsträger außerhalb der gesetzlichen Krankenversicherung
     */
    public static String getIdentClassID95() {
        return get(IDENT_CLASS_ID95).value;
    }

    /**
     * <pre>IDENT_CLASS_ID96
     * SQLite key: identclass_id96
     * [en] Authorities of the federal and state governments, courts
     * [de] Behörden des Bundes und der Länder, Gerichte</pre>
     * @return [en] Authorities of the federal and state governments, courts, [de] Behörden des Bundes und der Länder, Gerichte
     */
    public static String getIdentClassID96() {
        return get(IDENT_CLASS_ID96).value;
    }

    /**
     * <pre>IDENT_CLASS_ID97
     * SQLite key: identclass_id97
     * [en] Reserved for internal administrative-free use in the institutions
     * [de] Reserviert zur verwaltungsinternen freien Verwendung bei den Institutionen</pre>
     * @return [en] Reserved for internal administrative-free use in the institutions, [de] Reserviert zur verwaltungsinternen freien Verwendung bei den Institutionen
     */
    public static String getIdentClassID97() {
        return get(IDENT_CLASS_ID97).value;
    }

    /**
     * <pre>IDENT_NUMBER
     * SQLite key: identnumber
     * [en] Ident. Number
     * [de] IK-Nummer</pre>
     * @return [en] Ident. Number, [de] IK-Nummer
     */
    public static String getIdentNumber() {
        return get(IDENT_NUMBER).value;
    }

    /**
     * <pre>INFORM_SUPPORT
     * SQLite key: informsupport
     * [en] Inform Support
     * [de] Support informieren</pre>
     * @return [en] Inform Support, [de] Support informieren
     */
    public static String getInformSupport() {
        return get(INFORM_SUPPORT).value;
    }

    /**
     * <pre>INFORMATION
     * SQLite key: information
     * [en] Information (I)
     * [de] Information (I)</pre>
     * @return [en] Information (I), [de] Information (I)
     */
    public static String getInformation() {
        return get(INFORMATION).value;
    }

    public static Translation getInformationObj() {
        return get(INFORMATION);
    }

    /**
     * <pre>INITIATION_TEST_PROCESSES
     * SQLite key: initiationtestprocesses
     * [en] Initiation test processes
     * [de] Einleitung Prüfverfahren (Einleitung Prüfv.)</pre>
     * @return [en] Initiation test processes, [de] Einleitung Prüfverfahren (Einleitung Prüfv.)
     */
    public static String getInitiationTestProcesses() {
        return get(INITIATION_TEST_PROCESSES).value;
    }

    public static Translation getInitiationTestProcessesObj() {
        return get(INITIATION_TEST_PROCESSES);
    }

    /**
     * <pre>INITIATION_TEST_PROCESSES_FROM
     * SQLite key: initiationtestprocesses_from
     * [en] Initiation test processes from
     * [de] Einleitung Prüfv. von</pre>
     * @return [en] Initiation test processes from, [de] Einleitung Prüfv. von
     */
    public static String getInitiationTestProcessesFrom() {
        return get(INITIATION_TEST_PROCESSES_FROM).value;
    }

    /**
     * <pre>INITIATION_TEST_PROCESSES_TO
     * SQLite key: initiationtestprocesses_to
     * [en] Initiation test processes to
     * [de] Einleitung Prüfv. bis</pre>
     * @return [en] Initiation test processes to, [de] Einleitung Prüfv. bis
     */
    public static String getInitiationTestProcessesTo() {
        return get(INITIATION_TEST_PROCESSES_TO).value;
    }

    /**
     * <pre>INPUT_DATE_ERROR
     * SQLite key: input_date_error
     * [en] {0} no correct date
     * [de] {0} ist kein korrektes Datum</pre>
     * @param pParams placeholder replacements
     * @return [en] {0} no correct date, [de] {0} ist kein korrektes Datum
     */
    public static String getInputDateError(final Object... pParams) {
        return get(INPUT_DATE_ERROR, pParams).value;
    }

    /**
     * <pre>INPUT_DATE_FROM
     * SQLite key: input_date_from
     * [en] From date
     * [de] Von Datum</pre>
     * @return [en] From date, [de] Von Datum
     */
    public static String getInputDateFrom() {
        return get(INPUT_DATE_FROM).value;
    }

    /**
     * <pre>INPUT_DATE_TO
     * SQLite key: input_date_to
     * [en] To date
     * [de] Bis Datum</pre>
     * @return [en] To date, [de] Bis Datum
     */
    public static String getInputDateTo() {
        return get(INPUT_DATE_TO).value;
    }

    /**
     * <pre>INPUT_NUMBER_FROM
     * SQLite key: input_number_from
     * [en] From
     * [de] Von</pre>
     * ATTENTION this value ('from') seems to be also defined under the key DURATION_FROM!
     * @return [en] From, [de] Von
     */
    public static String getInputNumberFrom() {
        return get(INPUT_NUMBER_FROM).value;
    }

    /**
     * <pre>INPUT_NUMBER_TO
     * SQLite key: input_number_to
     * [en] To
     * [de] Bis</pre>
     * ATTENTION this value ('to') seems to be also defined under the key DURATION_TO!
     * @return [en] To, [de] Bis
     */
    public static String getInputNumberTo() {
        return get(INPUT_NUMBER_TO).value;
    }

    /**
     * <pre>INPUT_TIME_ERROR
     * SQLite key: input_time_error
     * [en] {0} no correct time
     * [de] {0} ist keine korrekte Zeit</pre>
     * @param pParams placeholder replacements
     * @return [en] {0} no correct time, [de] {0} ist keine korrekte Zeit
     */
    public static String getInputTimeError(final Object... pParams) {
        return get(INPUT_TIME_ERROR, pParams).value;
    }

    /**
     * <pre>INPUT_TIME_FROM
     * SQLite key: input_time_from
     * [en] From time
     * [de] Von Uhrzeit</pre>
     * @return [en] From time, [de] Von Uhrzeit
     */
    public static String getInputTimeFrom() {
        return get(INPUT_TIME_FROM).value;
    }

    /**
     * <pre>INPUT_TIME_TO
     * SQLite key: input_time_to
     * [en] To time
     * [de] Bis Uhrzeit</pre>
     * @return [en] To time, [de] Bis Uhrzeit
     */
    public static String getInputTimeTo() {
        return get(INPUT_TIME_TO).value;
    }

    /**
     * <pre>INS_SHORT
     * SQLite key: ins_short
     * [en] Insurance (Insurance Group)
     * [de] Kasse (Versicherungs-/Krankenkassengruppen)</pre>
     * @return [en] Insurance (Insurance Group), [de] Kasse (Versicherungs-/Krankenkassengruppen)
     */
    public static String getInsShort() {
        return get(INS_SHORT).value;
    }

    public static Translation getInsShortObj() {
        return get(INS_SHORT);
    }

    /**
     * <pre>INS_SHORT_AOK
     * SQLite key: ins_short_aok
     * [en] AOK
     * [de] AOK</pre>
     * @return [en] AOK, [de] AOK
     */
    public static String getInsShortAOK() {
        return get(INS_SHORT_AOK).value;
    }

    /**
     * <pre>INS_SHORT_BARMER
     * SQLite key: ins_short_barmer
     * [en] Barmer
     * [de] Barmer</pre>
     * @return [en] Barmer, [de] Barmer
     */
    public static String getInsShortBarmer() {
        return get(INS_SHORT_BARMER).value;
    }

    /**
     * <pre>INS_SHORT_BG
     * SQLite key: ins_short_bg
     * [en] BG
     * [de] BG</pre>
     * @return [en] BG, [de] BG
     */
    public static String getInsShortBG() {
        return get(INS_SHORT_BG).value;
    }

    /**
     * <pre>INS_SHORT_BKK
     * SQLite key: ins_short_bkk
     * [en] BKK
     * [de] BKK</pre>
     * @return [en] BKK, [de] BKK
     */
    public static String getInsShortBKK() {
        return get(INS_SHORT_BKK).value;
    }

    /**
     * <pre>INS_SHORT_DAK
     * SQLite key: ins_short_dak
     * [en] DAK
     * [de] DAK</pre>
     * @return [en] DAK, [de] DAK
     */
    public static String getInsShortDAK() {
        return get(INS_SHORT_DAK).value;
    }

    /**
     * <pre>INS_SHORT_GEK
     * SQLite key: ins_short_gek
     * [en] GEK
     * [de] GEK</pre>
     * @return [en] GEK, [de] GEK
     */
    public static String getInsShortGEK() {
        return get(INS_SHORT_GEK).value;
    }

    /**
     * <pre>INS_SHORT_HA_MUE
     * SQLite key: ins_short_hamue
     * [en] HaMü
     * [de] HaMü</pre>
     * @return [en] HaMü, [de] HaMü
     */
    public static String getInsShortHaMue() {
        return get(INS_SHORT_HA_MUE).value;
    }

    /**
     * <pre>INS_SHORT_HEK
     * SQLite key: ins_short_hek
     * [en] HEK
     * [de] HEK</pre>
     * @return [en] HEK, [de] HEK
     */
    public static String getInsShortHEK() {
        return get(INS_SHORT_HEK).value;
    }

    /**
     * <pre>INS_SHORT_HZK
     * SQLite key: ins_short_hzk
     * [en] HZK
     * [de] HZK</pre>
     * @return [en] HZK, [de] HZK
     */
    public static String getInsShortHZK() {
        return get(INS_SHORT_HZK).value;
    }

    /**
     * <pre>INS_SHORT_IKK
     * SQLite key: ins_short_ikk
     * [en] IKK
     * [de] IKK</pre>
     * @return [en] IKK, [de] IKK
     */
    public static String getInsShortIKK() {
        return get(INS_SHORT_IKK).value;
    }

    /**
     * <pre>INS_SHORT_KEH
     * SQLite key: ins_short_keh
     * [en] KEH
     * [de] KEH</pre>
     * @return [en] KEH, [de] KEH
     */
    public static String getInsShortKEH() {
        return get(INS_SHORT_KEH).value;
    }

    /**
     * <pre>INS_SHORT_KKH
     * SQLite key: ins_short_kkh
     * [en] KKH
     * [de] KKH</pre>
     * @return [en] KKH, [de] KKH
     */
    public static String getInsShortKKH() {
        return get(INS_SHORT_KKH).value;
    }

    /**
     * <pre>INS_SHORT_KNAPPSCHAFT
     * SQLite key: ins_short_knappschaft
     * [en] Knappschaft
     * [de] Knappschaft</pre>
     * @return [en] Knappschaft, [de] Knappschaft
     */
    public static String getInsShortKnappschaft() {
        return get(INS_SHORT_KNAPPSCHAFT).value;
    }

    /**
     * <pre>INS_SHORT_SBK
     * SQLite key: ins_short_sbk
     * [en] SBK
     * [de] SBK</pre>
     * @return [en] SBK, [de] SBK
     */
    public static String getInsShortSBK() {
        return get(INS_SHORT_SBK).value;
    }

    /**
     * <pre>INS_SHORT_SOZIALAMT
     * SQLite key: ins_short_sozialamt
     * [en] Sozialamt
     * [de] Sozialamt</pre>
     * @return [en] Sozialamt, [de] Sozialamt
     */
    public static String getInsShortSozialamt() {
        return get(INS_SHORT_SOZIALAMT).value;
    }

    /**
     * <pre>INS_SHORT_TKK
     * SQLite key: ins_short_tkk
     * [en] TKK
     * [de] TK</pre>
     * @return [en] TKK, [de] TK
     */
    public static String getInsShortTKK() {
        return get(INS_SHORT_TKK).value;
    }

    /**
     * <pre>INS_STATUS_FAMILY_INSURANCE
     * SQLite key: ins_status_familyinsurance
     * [en] family insurance
     * [de] Familienversichert</pre>
     * @return [en] family insurance, [de] Familienversichert
     */
    public static String getInsStatusFamilyInsurance() {
        return get(INS_STATUS_FAMILY_INSURANCE).value;
    }

    /**
     * <pre>INS_STATUS_RETIREES_AND_DEPENDENTS
     * SQLite key: ins_status_retireesanddependents
     * [en] Retirees and dependents
     * [de] Rentner und Angehörige</pre>
     * @return [en] Retirees and dependents, [de] Rentner und Angehörige
     */
    public static String getInsStatusRetireesAndDependents() {
        return get(INS_STATUS_RETIREES_AND_DEPENDENTS).value;
    }

    /**
     * <pre>INS_STATUS_SELF_INSURED
     * SQLite key: ins_status_selfinsured
     * [en] self insured
     * [de] Selber versichert</pre>
     * @return [en] self insured, [de] Selber versichert
     */
    public static String getInsStatusSelfInsured() {
        return get(INS_STATUS_SELF_INSURED).value;
    }

    /**
     * <pre>INSURANCE
     * SQLite key: insurance
     * [en] Insurance
     * [de] Versicherung</pre>
     * ATTENTION this value ('Insurance') seems to be also defined under the key REQUEST_TYPE_INSURANCE!
     * @return [en] Insurance, [de] Versicherung
     */
    public static String getInsurance() {
        return get(INSURANCE).value;
    }

    /**
     * <pre>INSURANCE_ASSOCIATION
     * SQLite key: insuranceassociation
     * [en] Insurance Association
     * [de] Berufsgenossenschaft</pre>
     * ATTENTION this value ('Insurance Association') seems to be also defined under the key REQUEST_TYPE_INSURANCE_ASSOCIATION!
     * @return [en] Insurance Association, [de] Berufsgenossenschaft
     */
    public static String getInsuranceAssociation() {
        return get(INSURANCE_ASSOCIATION).value;
    }

    /**
     * <pre>INSURANCE_ASSOCIATION_NAME
     * SQLite key: insuranceassociation_name
     * [en] Assoc. Name
     * [de] BG-Name</pre>
     * @return [en] Assoc. Name, [de] BG-Name
     */
    public static String getInsuranceAssociationName() {
        return get(INSURANCE_ASSOCIATION_NAME).value;
    }

    /**
     * <pre>INSURANCE_BILL_RECIVED
     * SQLite key: insurance_bill_recived
     * [en] Insurance Recived Bill Date
     * [de] Eingang Rech.-datum  Kasse (Eingang Rech.-datum Kasse)</pre>
     * @return [en] Insurance Recived Bill Date, [de] Eingang Rech.-datum  Kasse (Eingang Rech.-datum Kasse)
     */
    public static String getInsuranceBillRecived() {
        return get(INSURANCE_BILL_RECIVED).value;
    }

    public static Translation getInsuranceBillRecivedObj() {
        return get(INSURANCE_BILL_RECIVED);
    }

    /**
     * <pre>INSURANCE_BILL_RECIVED_FROM
     * SQLite key: insurance_bill_recived_from
     * [de] Eingang Rech.-datum Kasse von</pre>
     * @return [de] Eingang Rech.-datum Kasse von
     */
    public static String getInsuranceBillRecivedFrom() {
        return get(INSURANCE_BILL_RECIVED_FROM).value;
    }

    /**
     * <pre>INSURANCE_BILL_RECIVED_TO
     * SQLite key: insurance_bill_recived_to
     * [de] Eingang Rech.-datum Kasse bis</pre>
     * @return [de] Eingang Rech.-datum Kasse bis
     */
    public static String getInsuranceBillRecivedTo() {
        return get(INSURANCE_BILL_RECIVED_TO).value;
    }

    /**
     * <pre>INSURANCE_COMPANY
     * SQLite key: insurance_company
     * [en] Insurance Company (Insurance Comp.)
     * [de] Versicherung (Versicherung)</pre>
     * @return [en] Insurance Company (Insurance Comp.), [de] Versicherung (Versicherung)
     */
    public static String getInsuranceCompany() {
        return get(INSURANCE_COMPANY).value;
    }

    public static Translation getInsuranceCompanyObj() {
        return get(INSURANCE_COMPANY);
    }

    /**
     * <pre>INSURANCE_DATA
     * SQLite key: insurance_data
     * [en] Insurance Data
     * [de] Versicherungsdaten</pre>
     * @return [en] Insurance Data, [de] Versicherungsdaten
     */
    public static String getInsuranceData() {
        return get(INSURANCE_DATA).value;
    }

    /**
     * <pre>INSURANCE_FEHLER
     * SQLite key: insurance_fehler
     * [de] IKZ der Versicherung nicht vorhanden</pre>
     * @return [de] IKZ der Versicherung nicht vorhanden
     */
    public static String getInsuranceFehler() {
        return get(INSURANCE_FEHLER).value;
    }

    /**
     * <pre>INSURANCE_IDENT
     * SQLite key: insurance_ident
     * [en] Insurance Identifier
     * [de] IKZ der Versicherung (Versicherung)</pre>
     * @return [en] Insurance Identifier, [de] IKZ der Versicherung (Versicherung)
     */
    public static String getInsuranceIdent() {
        return get(INSURANCE_IDENT).value;
    }

    public static Translation getInsuranceIdentObj() {
        return get(INSURANCE_IDENT);
    }

    /**
     * <pre>INSURANCE_INSUREE
     * SQLite key: insurance_insuree
     * [en] Insuree
     * [de] Versicherungsnehmer</pre>
     * @return [en] Insuree, [de] Versicherungsnehmer
     */
    public static String getInsuranceInsuree() {
        return get(INSURANCE_INSUREE).value;
    }

    /**
     * <pre>INSURANCE_NAME
     * SQLite key: insurance_name
     * [en] Insurance name
     * [de] Versicherungsname (Vers.-Name)</pre>
     * ATTENTION this value ('Insurance Name') seems to be also defined under the key AUDIT_INSU_NAME!
     * @return [en] Insurance name, [de] Versicherungsname (Vers.-Name)
     */
    public static String getInsuranceName() {
        return get(INSURANCE_NAME).value;
    }

    public static Translation getInsuranceNameObj() {
        return get(INSURANCE_NAME);
    }

    /**
     * <pre>INSURANCE_NUMBER
     * SQLite key: insurance_number
     * [en] Insurance Number
     * [de] Versicherten-Nummer (Vers.-Nr.)</pre>
     * @return [en] Insurance Number, [de] Versicherten-Nummer (Vers.-Nr.)
     */
    public static String getInsuranceNumber() {
        return get(INSURANCE_NUMBER).value;
    }

    public static Translation getInsuranceNumberObj() {
        return get(INSURANCE_NUMBER);
    }

    /**
     * <pre>INSURANCE_NUMBER_FEHLER
     * SQLite key: insurance_number_fehler
     * [de] Versichertennummer des Patienten bei der Versicherung  nicht vorhanden</pre>
     * @return [de] Versichertennummer des Patienten bei der Versicherung  nicht vorhanden
     */
    public static String getInsuranceNumberFehler() {
        return get(INSURANCE_NUMBER_FEHLER).value;
    }

    /**
     * <pre>INSURANCE_STATUS
     * SQLite key: insurance_status
     * [en] Insurance Status
     * [de] Versicherungsstatus</pre>
     * @return [en] Insurance Status, [de] Versicherungsstatus
     */
    public static String getInsuranceStatus() {
        return get(INSURANCE_STATUS).value;
    }

    /**
     * <pre>INSURANCE_TYPE
     * SQLite key: insurance_type
     * [en] Insurancetype
     * [de] Art der Kasse</pre>
     * @return [en] Insurancetype, [de] Art der Kasse
     */
    public static String getInsuranceType() {
        return get(INSURANCE_TYPE).value;
    }

    /**
     * <pre>INSURANCE_VALID_FROM_TO
     * SQLite key: insurance_validfromto
     * [en] Valid From-To
     * [de] Gültig von/bis</pre>
     * @return [en] Valid From-To, [de] Gültig von/bis
     */
    public static String getInsuranceValidFromTo() {
        return get(INSURANCE_VALID_FROM_TO).value;
    }

    /**
     * <pre>INSURANCES
     * SQLite key: insurances
     * [en] Insurances
     * [de] Versicherungen</pre>
     * ATTENTION this value ('Insurances') seems to be also defined under the key CATALOG_DOWNLOAD_INSURANCE_COMPANYS!
     * @return [en] Insurances, [de] Versicherungen
     */
    public static String getInsurances() {
        return get(INSURANCES).value;
    }

    /**
     * <pre>IS_NOT_SUPPORTED
     * SQLite key: isnotsupported
     * [en] is not supported:
     * [de] wird nicht unterstützt (Minimum benötigt:</pre>
     * @return [en] is not supported:, [de] wird nicht unterstützt (Minimum benötigt:
     */
    public static String getIsNotSupported() {
        return get(IS_NOT_SUPPORTED).value;
    }

    /**
     * <pre>ITEM_LOCKED
     * SQLite key: itemlocked
     * [en] Locked (Lock)
     * [de] Gesperrt (Sperre)</pre>
     * @return [en] Locked (Lock), [de] Gesperrt (Sperre)
     */
    public static String getItemLocked() {
        return get(ITEM_LOCKED).value;
    }

    public static Translation getItemLockedObj() {
        return get(ITEM_LOCKED);
    }

    /**
     * <pre>JOB_LOCK_ERROR_DATABASE
     * SQLite key: job_lock_error_database
     * [en] Database is locked by {0} because of {1} since {2}!
     * [de] Datenbank ist gesperrt durch {0} wegen {1} seit {2} Uhr!</pre>
     * @param pParams placeholder replacements
     * @return [en] Database is locked by {0} because of {1} since {2}!, [de] Datenbank ist gesperrt durch {0} wegen {1} seit {2} Uhr!
     */
    public static String getJobLockErrorDatabase(final Object... pParams) {
        return get(JOB_LOCK_ERROR_DATABASE, pParams).value;
    }

    /**
     * <pre>JOB_LOCK_ERROR_OPEN_CASES
     * SQLite key: job_lock_error_opencases
     * [en] Please close open case or cases to proceed!
     * [de] Bitte den Fall oder die Fälle schließen um fortzufahren!</pre>
     * @return [en] Please close open case or cases to proceed!, [de] Bitte den Fall oder die Fälle schließen um fortzufahren!
     */
    public static String getJobLockErrorOpenCases() {
        return get(JOB_LOCK_ERROR_OPEN_CASES).value;
    }

    /**
     * <pre>JOB_STATUS_COMPLETED
     * SQLite key: job_status_completed
     * [en] completed
     * [de] Erfolgreich</pre>
     * ATTENTION this value ('Completed') seems to be also defined under the key CASE_MERGING_JOB_COMPLETED!
     * @return [en] completed, [de] Erfolgreich
     */
    public static String getJobStatusCompleted() {
        return get(JOB_STATUS_COMPLETED).value;
    }

    /**
     * <pre>JOB_STATUS_FAILED
     * SQLite key: job_status_failed
     * [en] failed
     * [de] Gescheitert</pre>
     * ATTENTION this value ('Failed') seems to be also defined under the key CASE_MERGING_JOB_FAILED! this value ('Failed') seems to be also defined under the key FAILED!
     * @return [en] failed, [de] Gescheitert
     */
    public static String getJobStatusFailed() {
        return get(JOB_STATUS_FAILED).value;
    }

    /**
     * <pre>JOB_STATUS_STARTED
     * SQLite key: job_status_started
     * [en] execute Task
     * [de] Wird durchgeführt</pre>
     * @return [en] execute Task, [de] Wird durchgeführt
     */
    public static String getJobStatusStarted() {
        return get(JOB_STATUS_STARTED).value;
    }

    /**
     * <pre>JOB_STATUS_STARTING
     * SQLite key: job_status_starting
     * [en] start Task
     * [de] Wird gestartet</pre>
     * @return [en] start Task, [de] Wird gestartet
     */
    public static String getJobStatusStarting() {
        return get(JOB_STATUS_STARTING).value;
    }

    /**
     * <pre>JOB_STATUS_STOPPED
     * SQLite key: job_status_stopped
     * [en] stopped
     * [de] Angehalten</pre>
     * ATTENTION this value ('Stopped') seems to be also defined under the key CASE_MERGING_JOB_STOPPED!
     * @return [en] stopped, [de] Angehalten
     */
    public static String getJobStatusStopped() {
        return get(JOB_STATUS_STOPPED).value;
    }

    /**
     * <pre>JOB_STATUS_STOPPING
     * SQLite key: job_status_stopping
     * [en] cancel Task
     * [de] Wird beendet</pre>
     * @return [en] cancel Task, [de] Wird beendet
     */
    public static String getJobStatusStopping() {
        return get(JOB_STATUS_STOPPING).value;
    }

    /**
     * <pre>JOB_STAUTS_INITIALIZING
     * SQLite key: job_stauts_initializing
     * [en] initializing
     * [de] Wird initialisiert</pre>
     * ATTENTION this value ('Initializing') seems to be also defined under the key CASE_MERGING_JOB_INITIALIZING!
     * @return [en] initializing, [de] Wird initialisiert
     */
    public static String getJobStautsInitializing() {
        return get(JOB_STAUTS_INITIALIZING).value;
    }

    /**
     * <pre>JOBS
     * SQLite key: jobs
     * [en] Jobs
     * [de] Jobs</pre>
     * @return [en] Jobs, [de] Jobs
     */
    public static String getJobs() {
        return get(JOBS).value;
    }

    /**
     * <pre>LAB_DATA
     * SQLite key: lab_data
     * [en] Laboratory data
     * [de] Labordaten</pre>
     * @return [en] Laboratory data, [de] Labordaten
     */
    public static String getLabData() {
        return get(LAB_DATA).value;
    }

    /**
     * <pre>LAB_DATA_ANALYSIS
     * SQLite key: lab_data_analysis
     * [en] Analysis (Analysis)
     * [de] Analyse (Analyse)</pre>
     * @return [en] Analysis (Analysis), [de] Analyse (Analyse)
     */
    public static String getLabDataAnalysis() {
        return get(LAB_DATA_ANALYSIS).value;
    }

    public static Translation getLabDataAnalysisObj() {
        return get(LAB_DATA_ANALYSIS);
    }

    /**
     * <pre>LAB_DATA_ANALYSIS_DATE
     * SQLite key: lab_data_analysisdate
     * [en] Analysis Date (Analysis Date)
     * [de] Datum Analyse (Datum Analyse)</pre>
     * @return [en] Analysis Date (Analysis Date), [de] Datum Analyse (Datum Analyse)
     */
    public static String getLabDataAnalysisDate() {
        return get(LAB_DATA_ANALYSIS_DATE).value;
    }

    public static Translation getLabDataAnalysisDateObj() {
        return get(LAB_DATA_ANALYSIS_DATE);
    }

    /**
     * <pre>LAB_DATA_BENCHMARK
     * SQLite key: lab_data_benchmark
     * [en] Benchmark (Benchmark)
     * [de] Bewertung (Bewertung)</pre>
     * @return [en] Benchmark (Benchmark), [de] Bewertung (Bewertung)
     */
    public static String getLabDataBenchmark() {
        return get(LAB_DATA_BENCHMARK).value;
    }

    public static Translation getLabDataBenchmarkObj() {
        return get(LAB_DATA_BENCHMARK);
    }

    /**
     * <pre>LAB_DATA_CATEGORY
     * SQLite key: lab_data_category
     * [en] Category (Category)
     * [de] Kategorie (Kategorie)</pre>
     * @return [en] Category (Category), [de] Kategorie (Kategorie)
     */
    public static String getLabDataCategory() {
        return get(LAB_DATA_CATEGORY).value;
    }

    public static Translation getLabDataCategoryObj() {
        return get(LAB_DATA_CATEGORY);
    }

    /**
     * <pre>LAB_DATA_COMMENT
     * SQLite key: lab_data_comment
     * [en] Comment (Comment)
     * [de] Kommentar (Kommentar)</pre>
     * @return [en] Comment (Comment), [de] Kommentar (Kommentar)
     */
    public static String getLabDataComment() {
        return get(LAB_DATA_COMMENT).value;
    }

    public static Translation getLabDataCommentObj() {
        return get(LAB_DATA_COMMENT);
    }

    /**
     * <pre>LAB_DATA_DESCRIPTION
     * SQLite key: lab_data_description
     * [en] Description (Description)
     * [de] Beschreibung (Beschreibung)</pre>
     * @return [en] Description (Description), [de] Beschreibung (Beschreibung)
     */
    public static String getLabDataDescription() {
        return get(LAB_DATA_DESCRIPTION).value;
    }

    public static Translation getLabDataDescriptionObj() {
        return get(LAB_DATA_DESCRIPTION);
    }

    /**
     * <pre>LAB_DATA_GROUP
     * SQLite key: lab_data_group
     * [en] Group (Group)
     * [de] Gruppe (Gruppe)</pre>
     * @return [en] Group (Group), [de] Gruppe (Gruppe)
     */
    public static String getLabDataGroup() {
        return get(LAB_DATA_GROUP).value;
    }

    public static Translation getLabDataGroupObj() {
        return get(LAB_DATA_GROUP);
    }

    /**
     * <pre>LAB_DATA_KIS_EXTERN_KEY
     * SQLite key: lab_data_kisexternkey
     * [en] KIS-External (KIS-External)
     * [de] KIS-Extern (KIS-Extern)</pre>
     * @return [en] KIS-External (KIS-External), [de] KIS-Extern (KIS-Extern)
     */
    public static String getLabDataKisExternKey() {
        return get(LAB_DATA_KIS_EXTERN_KEY).value;
    }

    public static Translation getLabDataKisExternKeyObj() {
        return get(LAB_DATA_KIS_EXTERN_KEY);
    }

    /**
     * <pre>LAB_DATA_LAB_DATE
     * SQLite key: lab_data_labdate
     * [en] Document Date (Document Date)
     * [de] Dokumenten-Datum (Dokumenten-Datum)</pre>
     * @return [en] Document Date (Document Date), [de] Dokumenten-Datum (Dokumenten-Datum)
     */
    public static String getLabDataLabDate() {
        return get(LAB_DATA_LAB_DATE).value;
    }

    public static Translation getLabDataLabDateObj() {
        return get(LAB_DATA_LAB_DATE);
    }

    /**
     * <pre>LAB_DATA_LOCK_DEL
     * SQLite key: lab_data_lockdel
     * [en] LockDel (LockDel)
     * [de] LockDel (LockDel)</pre>
     * @return [en] LockDel (LockDel), [de] LockDel (LockDel)
     */
    public static String getLabDataLockDel() {
        return get(LAB_DATA_LOCK_DEL).value;
    }

    public static Translation getLabDataLockDelObj() {
        return get(LAB_DATA_LOCK_DEL);
    }

    /**
     * <pre>LAB_DATA_MAX_LIMIT
     * SQLite key: lab_data_maxlimit
     * [en] Max Limit (Max Limit)
     * [de] Max-Limit (Max-Limit)</pre>
     * @return [en] Max Limit (Max Limit), [de] Max-Limit (Max-Limit)
     */
    public static String getLabDataMaxLimit() {
        return get(LAB_DATA_MAX_LIMIT).value;
    }

    public static Translation getLabDataMaxLimitObj() {
        return get(LAB_DATA_MAX_LIMIT);
    }

    /**
     * <pre>LAB_DATA_METHOD
     * SQLite key: lab_data_method
     * [en] Method (Method)
     * [de] Methode (Methode)</pre>
     * @return [en] Method (Method), [de] Methode (Methode)
     */
    public static String getLabDataMethod() {
        return get(LAB_DATA_METHOD).value;
    }

    public static Translation getLabDataMethodObj() {
        return get(LAB_DATA_METHOD);
    }

    /**
     * <pre>LAB_DATA_MIN_LIMIT
     * SQLite key: lab_data_minlimit
     * [en] Min Limit (Min Limit)
     * [de] Min-Limit (Min-Limit)</pre>
     * @return [en] Min Limit (Min Limit), [de] Min-Limit (Min-Limit)
     */
    public static String getLabDataMinLimit() {
        return get(LAB_DATA_MIN_LIMIT).value;
    }

    public static Translation getLabDataMinLimitObj() {
        return get(LAB_DATA_MIN_LIMIT);
    }

    /**
     * <pre>LAB_DATA_POSITION
     * SQLite key: lab_data_position
     * [en] Pos. (Pos.)
     * [de] Pos. (Pos.)</pre>
     * @return [en] Pos. (Pos.), [de] Pos. (Pos.)
     */
    public static String getLabDataPosition() {
        return get(LAB_DATA_POSITION).value;
    }

    public static Translation getLabDataPositionObj() {
        return get(LAB_DATA_POSITION);
    }

    /**
     * <pre>LAB_DATA_RANGE
     * SQLite key: lab_data_range
     * [en] Normal Value (Normal Value)
     * [de] Normalwert (Normalwert)</pre>
     * @return [en] Normal Value (Normal Value), [de] Normalwert (Normalwert)
     */
    public static String getLabDataRange() {
        return get(LAB_DATA_RANGE).value;
    }

    public static Translation getLabDataRangeObj() {
        return get(LAB_DATA_RANGE);
    }

    /**
     * <pre>LAB_DATA_TEXT
     * SQLite key: lab_data_text
     * [en] Result value (Result value)
     * [de] Wert/Text (Wert/Text)</pre>
     * @return [en] Result value (Result value), [de] Wert/Text (Wert/Text)
     */
    public static String getLabDataText() {
        return get(LAB_DATA_TEXT).value;
    }

    public static Translation getLabDataTextObj() {
        return get(LAB_DATA_TEXT);
    }

    /**
     * <pre>LAB_DATA_UNIT
     * SQLite key: lab_data_unit
     * [en] Unit (Unit)
     * [de] Einheit (Einheit)</pre>
     * @return [en] Unit (Unit), [de] Einheit (Einheit)
     */
    public static String getLabDataUnit() {
        return get(LAB_DATA_UNIT).value;
    }

    public static Translation getLabDataUnitObj() {
        return get(LAB_DATA_UNIT);
    }

    /**
     * <pre>LAB_DATA_VALUE
     * SQLite key: lab_data_value
     * [en] result value (result value)
     * [de] Ergebniswert (Ergebniswert)</pre>
     * @return [en] result value (result value), [de] Ergebniswert (Ergebniswert)
     */
    public static String getLabDataValue() {
        return get(LAB_DATA_VALUE).value;
    }

    public static Translation getLabDataValueObj() {
        return get(LAB_DATA_VALUE);
    }

    /**
     * <pre>LAB_DATA_VALUE_2
     * SQLite key: lab_data_value2
     * [en] result value 2 (result value 2)
     * [de] Ergebniswert2 (Ergebniswert2)</pre>
     * @return [en] result value 2 (result value 2), [de] Ergebniswert2 (Ergebniswert2)
     */
    public static String getLabDataValue2() {
        return get(LAB_DATA_VALUE_2).value;
    }

    public static Translation getLabDataValue2Obj() {
        return get(LAB_DATA_VALUE_2);
    }

    /**
     * <pre>LANGUAGE
     * SQLite key: language
     * [en] Language
     * [de] Sprache</pre>
     * @return [en] Language, [de] Sprache
     */
    public static String getLanguage() {
        return get(LANGUAGE).value;
    }

    /**
     * <pre>LAWER_FILE_NUMBER
     * SQLite key: lawerfilenumber
     * [en] lawer filen number
     * [de] Aktenzeichen (RA) (Akt.-Z. (RA))</pre>
     * @return [en] lawer filen number, [de] Aktenzeichen (RA) (Akt.-Z. (RA))
     */
    public static String getLawerFileNumber() {
        return get(LAWER_FILE_NUMBER).value;
    }

    public static Translation getLawerFileNumberObj() {
        return get(LAWER_FILE_NUMBER);
    }

    /**
     * <pre>LENGTH_OF_STAY
     * SQLite key: lengthofstay
     * [en] Length of Stay (LoS)
     * [de] Verweildauer (VWD)</pre>
     * @return [en] Length of Stay (LoS), [de] Verweildauer (VWD)
     */
    public static String getLengthOfStay() {
        return get(LENGTH_OF_STAY).value;
    }

    public static Translation getLengthOfStayObj() {
        return get(LENGTH_OF_STAY);
    }

    /**
     * <pre>LENGTH_OF_STAY_FROM
     * SQLite key: lengthofstayfrom
     * [en] LoS from (LoS)
     * [de] Verweildauer von (VWD)</pre>
     * @return [en] LoS from (LoS), [de] Verweildauer von (VWD)
     */
    public static String getLengthOfStayFrom() {
        return get(LENGTH_OF_STAY_FROM).value;
    }

    public static Translation getLengthOfStayFromObj() {
        return get(LENGTH_OF_STAY_FROM);
    }

    /**
     * <pre>LENGTH_OF_STAY_TO
     * SQLite key: lengthofstayto
     * [en] LoS to (LoS)
     * [de] Verweildauer bis (VWD)</pre>
     * @return [en] LoS to (LoS), [de] Verweildauer bis (VWD)
     */
    public static String getLengthOfStayTo() {
        return get(LENGTH_OF_STAY_TO).value;
    }

    public static Translation getLengthOfStayToObj() {
        return get(LENGTH_OF_STAY_TO);
    }

    /**
     * <pre>LEVEL_ALL
     * SQLite key: level_all
     * [en] Alle Meldungen werden ungefiltert ausgegeben
     * [de] Alle Meldungen werden ungefiltert ausgegeben</pre>
     * @return [en] Alle Meldungen werden ungefiltert ausgegeben, [de] Alle Meldungen werden ungefiltert ausgegeben
     */
    public static String getLevelAll() {
        return get(LEVEL_ALL).value;
    }

    /**
     * <pre>LEVEL_CONFIG
     * SQLite key: level_config
     * [en] Informationen zur Konfiguration
     * [de] Informationen zur Konfiguration</pre>
     * @return [en] Informationen zur Konfiguration, [de] Informationen zur Konfiguration
     */
    public static String getLevelConfig() {
        return get(LEVEL_CONFIG).value;
    }

    /**
     * <pre>LEVEL_DEBUG
     * SQLite key: level_debug
     * [en] allgemeines Debugging (Auffinden von Fehlern)
     * [de] allgemeines Debugging (Auffinden von Fehlern)</pre>
     * @return [en] allgemeines Debugging (Auffinden von Fehlern), [de] allgemeines Debugging (Auffinden von Fehlern)
     */
    public static String getLevelDebug() {
        return get(LEVEL_DEBUG).value;
    }

    /**
     * <pre>LEVEL_ERROR
     * SQLite key: level_error
     * [en] Fehler (Ausnahme wurde abgefangen. Bearbeitung wurde alternativ fortgesetzt)
     * [de] Fehler (Ausnahme wurde abgefangen. Bearbeitung wurde alternativ fortgesetzt)</pre>
     * @return [en] Fehler (Ausnahme wurde abgefangen. Bearbeitung wurde alternativ fortgesetzt), [de] Fehler (Ausnahme wurde abgefangen. Bearbeitung wurde alternativ fortgesetzt)
     */
    public static String getLevelError() {
        return get(LEVEL_ERROR).value;
    }

    /**
     * <pre>LEVEL_FATAL
     * SQLite key: level_fatal
     * [en] Kritischer Fehler, Programmabbruch
     * [de] Kritischer Fehler, Programmabbruch</pre>
     * @return [en] Kritischer Fehler, Programmabbruch, [de] Kritischer Fehler, Programmabbruch
     */
    public static String getLevelFatal() {
        return get(LEVEL_FATAL).value;
    }

    /**
     * <pre>LEVEL_FINEST
     * SQLite key: level_finest
     * [en] Ausgabe feinster Informationen
     * [de] Ausgabe feinster Informationen</pre>
     * @return [en] Ausgabe feinster Informationen, [de] Ausgabe feinster Informationen
     */
    public static String getLevelFinest() {
        return get(LEVEL_FINEST).value;
    }

    /**
     * <pre>LEVEL_INFO
     * SQLite key: level_info
     * [en] allgemeine Informationen
     * [de] allgemeine Informationen</pre>
     * @return [en] allgemeine Informationen, [de] allgemeine Informationen
     */
    public static String getLevelInfo() {
        return get(LEVEL_INFO).value;
    }

    /**
     * <pre>LEVEL_OFF
     * SQLite key: level_off
     * [en] Logging ist deaktiviert
     * [de] Logging ist deaktiviert</pre>
     * @return [en] Logging ist deaktiviert, [de] Logging ist deaktiviert
     */
    public static String getLevelOff() {
        return get(LEVEL_OFF).value;
    }

    /**
     * <pre>LEVEL_TRACE
     * SQLite key: level_trace
     * [en] ausführlicheres Debugging, Kommentare
     * [de] ausführlicheres Debugging, Kommentare</pre>
     * @return [en] ausführlicheres Debugging, Kommentare, [de] ausführlicheres Debugging, Kommentare
     */
    public static String getLevelTrace() {
        return get(LEVEL_TRACE).value;
    }

    /**
     * <pre>LEVEL_WARNING
     * SQLite key: level_warning
     * [en] Auftreten einer unerwarteten Situation
     * [de] Auftreten einer unerwarteten Situation</pre>
     * @return [en] Auftreten einer unerwarteten Situation, [de] Auftreten einer unerwarteten Situation
     */
    public static String getLevelWarning() {
        return get(LEVEL_WARNING).value;
    }

    /**
     * <pre>LOCAL_VERSIONS
     * SQLite key: localversions
     * [en] CP-Versions
     * [de] CPX-Versionen</pre>
     * @return [en] CP-Versions, [de] CPX-Versionen
     */
    public static String getLocalVersions() {
        return get(LOCAL_VERSIONS).value;
    }

    /**
     * <pre>LOCALISATION_BILATERAL
     * SQLite key: localisation_bilateral
     * [en] both sides (b)
     * [de] beidseitig (b)</pre>
     * @return [en] both sides (b), [de] beidseitig (b)
     */
    public static String getLocalisationBilateral() {
        return get(LOCALISATION_BILATERAL).value;
    }

    public static Translation getLocalisationBilateralObj() {
        return get(LOCALISATION_BILATERAL);
    }

    /**
     * <pre>LOCALISATION_LEFT
     * SQLite key: localisation_left
     * [en] left (l)
     * [de] links (l)</pre>
     * @return [en] left (l), [de] links (l)
     */
    public static String getLocalisationLeft() {
        return get(LOCALISATION_LEFT).value;
    }

    public static Translation getLocalisationLeftObj() {
        return get(LOCALISATION_LEFT);
    }

    /**
     * <pre>LOCALISATION_RIGHT
     * SQLite key: localisation_right
     * [en] right (r)
     * [de] rechts (r)</pre>
     * @return [en] right (r), [de] rechts (r)
     */
    public static String getLocalisationRight() {
        return get(LOCALISATION_RIGHT).value;
    }

    public static Translation getLocalisationRightObj() {
        return get(LOCALISATION_RIGHT);
    }

    /**
     * <pre>LOCK_CASE_ENTRY_MESSAGE
     * SQLite key: lock_case_entry_message
     * [en] Hospital case {0} is already opened by user {1} since {2}!
     * [de] Der Fall {0} ist seit {2} Uhr bereits von Nutzer {1} geöffnet!</pre>
     * @param pParams placeholder replacements
     * @return [en] Hospital case {0} is already opened by user {1} since {2}!, [de] Der Fall {0} ist seit {2} Uhr bereits von Nutzer {1} geöffnet!
     */
    public static String getLockCaseEntryMessage(final Object... pParams) {
        return get(LOCK_CASE_ENTRY_MESSAGE, pParams).value;
    }

    /**
     * <pre>LOCK_PROCESS_ENTRY_MESSAGE
     * SQLite key: lock_process_entry_message
     * [en] Process {0} is already opened by user {1} since {2}!
     * [de] Der Vorgang {0} ist seit {2} Uhr bereits von Nutzer {1} geöffnet!</pre>
     * @param pParams placeholder replacements
     * @return [en] Process {0} is already opened by user {1} since {2}!, [de] Der Vorgang {0} ist seit {2} Uhr bereits von Nutzer {1} geöffnet!
     */
    public static String getLockProcessEntryMessage(final Object... pParams) {
        return get(LOCK_PROCESS_ENTRY_MESSAGE, pParams).value;
    }

    /**
     * <pre>LOGIN_DATABASE
     * SQLite key: login_database
     * [en] Database
     * [de] Datenbank</pre>
     * @return [en] Database, [de] Datenbank
     */
    public static String getLoginDatabase() {
        return get(LOGIN_DATABASE).value;
    }

    /**
     * <pre>LOGIN_ERROR_MESSAGE
     * SQLite key: login_error_message
     * [en] Error happened when I tried to connect configuration service.Please check these possible reasons:
     * [de] Ein Fehler ist aufgetreten . Bitte überprüfen Sie diese möglichen Gründe:</pre>
     * @return [en] Error happened when I tried to connect configuration service.Please check these possible reasons:, [de] Ein Fehler ist aufgetreten . Bitte überprüfen Sie diese möglichen Gründe:
     */
    public static String getLoginErrorMessage() {
        return get(LOGIN_ERROR_MESSAGE).value;
    }

    /**
     * <pre>LOGIN_ERROR_MESSAGE_CONFIGURATION
     * SQLite key: login_error_message_configuration
     * [en] The configuration file is not available
     * [de] Die Konfigurationsdatei ist nicht verfügbar</pre>
     * @return [en] The configuration file is not available, [de] Die Konfigurationsdatei ist nicht verfügbar
     */
    public static String getLoginErrorMessageConfiguration() {
        return get(LOGIN_ERROR_MESSAGE_CONFIGURATION).value;
    }

    /**
     * <pre>LOGIN_ERROR_MESSAGE_CONFIGURATION_INVALID
     * SQLite key: login_error_message_configuration_invalid
     * [en] The configuration file is faulty
     * [de] Die Konfigurationsdatei ist fehlerhaft</pre>
     * @return [en] The configuration file is faulty, [de] Die Konfigurationsdatei ist fehlerhaft
     */
    public static String getLoginErrorMessageConfigurationInvalid() {
        return get(LOGIN_ERROR_MESSAGE_CONFIGURATION_INVALID).value;
    }

    /**
     * <pre>LOGIN_ERROR_MESSAGE_SERVER
     * SQLite key: login_error_message_server
     * [en] No connection to Checkpoint X Server possible
     * [de] Keine Verbindung zum Checkpoint X Server möglich</pre>
     * @return [en] No connection to Checkpoint X Server possible, [de] Keine Verbindung zum Checkpoint X Server möglich
     */
    public static String getLoginErrorMessageServer() {
        return get(LOGIN_ERROR_MESSAGE_SERVER).value;
    }

    /**
     * <pre>LOGIN_EXIT
     * SQLite key: login_exit
     * [en] Exit
     * [de] Beenden</pre>
     * ATTENTION this value ('Exit') seems to be also defined under the key EXIT!
     * @return [en] Exit, [de] Beenden
     */
    public static String getLoginExit() {
        return get(LOGIN_EXIT).value;
    }

    /**
     * <pre>LOGIN_FAILED_ACCOUNT_EXPIRED
     * SQLite key: login_failed_accountexpired
     * [en] Account has been expired or becomes valid in the future
     * [de] Benutzerkonto ist entweder abgelaufen oder noch nicht gültig</pre>
     * @return [en] Account has been expired or becomes valid in the future, [de] Benutzerkonto ist entweder abgelaufen oder noch nicht gültig
     */
    public static String getLoginFailedAccountExpired() {
        return get(LOGIN_FAILED_ACCOUNT_EXPIRED).value;
    }

    /**
     * <pre>LOGIN_FAILED_ACCOUNT_INVALID
     * SQLite key: login_failed_accountinvalid
     * [en] Account is not valid anymore
     * [de] Benutzerkonto ist nicht mehr gültig</pre>
     * @return [en] Account is not valid anymore, [de] Benutzerkonto ist nicht mehr gültig
     */
    public static String getLoginFailedAccountInvalid() {
        return get(LOGIN_FAILED_ACCOUNT_INVALID).value;
    }

    /**
     * <pre>LOGIN_FAILED_CLIENT_ID_DOES_NOT_MATCH
     * SQLite key: login_failed_clientiddoesnotmatch
     * [en] Passed Client ID {0} does not match with with session Client ID
     * [de] Übergebene Client ID {0} stimmt nicht mit der Client ID in der Session überein</pre>
     * @param pParams placeholder replacements
     * @return [en] Passed Client ID {0} does not match with with session Client ID, [de] Übergebene Client ID {0} stimmt nicht mit der Client ID in der Session überein
     */
    public static String getLoginFailedClientIdDoesNotMatch(final Object... pParams) {
        return get(LOGIN_FAILED_CLIENT_ID_DOES_NOT_MATCH, pParams).value;
    }

    /**
     * <pre>LOGIN_FAILED_CLIENT_ID_MISSING
     * SQLite key: login_failed_clientidmissing
     * [en] No Client ID passed
     * [de] Es wurde keine Client ID angegeben</pre>
     * @return [en] No Client ID passed, [de] Es wurde keine Client ID angegeben
     */
    public static String getLoginFailedClientIdMissing() {
        return get(LOGIN_FAILED_CLIENT_ID_MISSING).value;
    }

    /**
     * <pre>LOGIN_FAILED_DATABASE_DOES_NOT_EXIST
     * SQLite key: login_failed_databasedoesnotexist
     * [en] Database {0} does not exist
     * [de] Datenbank {0} existiert nicht</pre>
     * @param pParams placeholder replacements
     * @return [en] Database {0} does not exist, [de] Datenbank {0} existiert nicht
     */
    public static String getLoginFailedDatabaseDoesNotExist(final Object... pParams) {
        return get(LOGIN_FAILED_DATABASE_DOES_NOT_EXIST, pParams).value;
    }

    /**
     * <pre>LOGIN_FAILED_DATABASE_IS_NOT_AVAILABLE
     * SQLite key: login_failed_databaseisnotavailable
     * [en] Database {0} is not available: {1}
     * [de] Datenbank {0} ist nicht verfügbar: {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] Database {0} is not available: {1}, [de] Datenbank {0} ist nicht verfügbar: {1}
     */
    public static String getLoginFailedDatabaseIsNotAvailable(final Object... pParams) {
        return get(LOGIN_FAILED_DATABASE_IS_NOT_AVAILABLE, pParams).value;
    }

    /**
     * <pre>LOGIN_FAILED_DATABASE_NO_RIGHT
     * SQLite key: login_failed_database_noright
     * [en] Role ''''{0}'''' has no permission for database {1}
     * [de] Die Rolle ''''{0}'''' hat keine Berechtigung für die Datenbank {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] Role ''''{0}'''' has no permission for database {1}, [de] Die Rolle ''''{0}'''' hat keine Berechtigung für die Datenbank {1}
     */
    public static String getLoginFailedDatabaseNoRight(final Object... pParams) {
        return get(LOGIN_FAILED_DATABASE_NO_RIGHT, pParams).value;
    }

    /**
     * <pre>LOGIN_FAILED_DATABASE_NO_RIGHT_OTHER_ROLE
     * SQLite key: login_failed_database_noright_other_role
     * [en] You can use this database with your role ''''{0}''''.
     * [de] Mit Ihrer Rolle ''''{0}'''' können Sie mit dieser Datenbank arbeiten.</pre>
     * @param pParams placeholder replacements
     * @return [en] You can use this database with your role ''''{0}''''., [de] Mit Ihrer Rolle ''''{0}'''' können Sie mit dieser Datenbank arbeiten.
     */
    public static String getLoginFailedDatabaseNoRightOtherRole(final Object... pParams) {
        return get(LOGIN_FAILED_DATABASE_NO_RIGHT_OTHER_ROLE, pParams).value;
    }

    /**
     * <pre>LOGIN_FAILED_DATABASE_NO_RIGHT_OTHER_ROLE_1
     * SQLite key: login_failed_database_noright_other_role_1
     * [en] Do you want to continue with this role?
     * [de] Wollen Sie mit dieser Rolle die Anmeldung fortsetzen?</pre>
     * @return [en] Do you want to continue with this role?, [de] Wollen Sie mit dieser Rolle die Anmeldung fortsetzen?
     */
    public static String getLoginFailedDatabaseNoRightOtherRole1() {
        return get(LOGIN_FAILED_DATABASE_NO_RIGHT_OTHER_ROLE_1).value;
    }

    /**
     * <pre>LOGIN_FAILED_NO_DATABASE_SELECTED
     * SQLite key: login_failed_nodatabaseselected
     * [en] No database selected
     * [de] Es wurde keine Datenbank angegeben</pre>
     * @return [en] No database selected, [de] Es wurde keine Datenbank angegeben
     */
    public static String getLoginFailedNoDatabaseSelected() {
        return get(LOGIN_FAILED_NO_DATABASE_SELECTED).value;
    }

    /**
     * <pre>LOGIN_FAILED_NO_LICENSE
     * SQLite key: login_failed_no_license
     * [en] There's no CPX license installed
     * [de] Es wurde keine checkpoint x-Lizenz gefunden</pre>
     * @return [en] There's no CPX license installed, [de] Es wurde keine checkpoint x-Lizenz gefunden
     */
    public static String getLoginFailedNoLicense() {
        return get(LOGIN_FAILED_NO_LICENSE).value;
    }

    /**
     * <pre>LOGIN_FAILED_NO_VALID_LICENSE
     * SQLite key: login_failed_no_valid_license
     * [en] CPX License is expired. The License was valid till {0}
     * [de] checkpoint x-Lizenz ist abgelaufen. Die Lizenz war gültig bis {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] CPX License is expired. The License was valid till {0}, [de] checkpoint x-Lizenz ist abgelaufen. Die Lizenz war gültig bis {0}
     */
    public static String getLoginFailedNoValidLicense(final Object... pParams) {
        return get(LOGIN_FAILED_NO_VALID_LICENSE, pParams).value;
    }

    /**
     * <pre>LOGIN_FAILED_PASSWORD_INVALID
     * SQLite key: login_failed_passwordinvalid
     * [en] Password invalid
     * [de] Passwort ungültig</pre>
     * @return [en] Password invalid, [de] Passwort ungültig
     */
    public static String getLoginFailedPasswordInvalid() {
        return get(LOGIN_FAILED_PASSWORD_INVALID).value;
    }

    /**
     * <pre>LOGIN_FAILED_PASSWORD_MISSING
     * SQLite key: login_failed_passwordmissing
     * [en] No password passed
     * [de] Es wurde kein Passwort angegeben</pre>
     * @return [en] No password passed, [de] Es wurde kein Passwort angegeben
     */
    public static String getLoginFailedPasswordMissing() {
        return get(LOGIN_FAILED_PASSWORD_MISSING).value;
    }

    /**
     * <pre>LOGIN_FAILED_USERNAME_INVALID
     * SQLite key: login_failed_usernameinvalid
     * [en] Name invalid
     * [de] Name ungültig</pre>
     * @return [en] Name invalid, [de] Name ungültig
     */
    public static String getLoginFailedUsernameInvalid() {
        return get(LOGIN_FAILED_USERNAME_INVALID).value;
    }

    /**
     * <pre>LOGIN_FAILED_USERNAME_MISSING
     * SQLite key: login_failed_usernamemissing
     * [en] No user name passed
     * [de] Es wurde kein Benutzername angegeben</pre>
     * @return [en] No user name passed, [de] Es wurde kein Benutzername angegeben
     */
    public static String getLoginFailedUsernameMissing() {
        return get(LOGIN_FAILED_USERNAME_MISSING).value;
    }

    /**
     * <pre>LOGIN_LOGIN
     * SQLite key: login_login
     * [en] Login
     * [de] Einloggen</pre>
     * @return [en] Login, [de] Einloggen
     */
    public static String getLoginLogin() {
        return get(LOGIN_LOGIN).value;
    }

    /**
     * <pre>LOGIN_PASSWORD
     * SQLite key: login_password
     * [en] Password
     * [de] Passwort</pre>
     * @return [en] Password, [de] Passwort
     */
    public static String getLoginPassword() {
        return get(LOGIN_PASSWORD).value;
    }

    /**
     * <pre>LOGIN_START_TEAMVIEWER
     * SQLite key: login_startteamviewer
     * [en] Start Teamviewer
     * [de] Starte Teamviewer</pre>
     * @return [en] Start Teamviewer, [de] Starte Teamviewer
     */
    public static String getLoginStartTeamviewer() {
        return get(LOGIN_START_TEAMVIEWER).value;
    }

    /**
     * <pre>LOGIN_SUPPORT_AND_CONTACT
     * SQLite key: login_supportandcontact
     * [en] Support &amp; Contact Details
     * [de] Support &amp; Kontaktdaten</pre>
     * @return [en] Support {@literal &} Contact Details, [de] Support {@literal &} Kontaktdaten
     */
    public static String getLoginSupportAndContact() {
        return get(LOGIN_SUPPORT_AND_CONTACT).value;
    }

    /**
     * <pre>LOGIN_USER
     * SQLite key: login_user
     * [en] User
     * [de] Benutzer</pre>
     * @return [en] User, [de] Benutzer
     */
    public static String getLoginUser() {
        return get(LOGIN_USER).value;
    }

    /**
     * <pre>LOS
     * SQLite key: los
     * [en] LoS
     * [de] VWD</pre>
     * ATTENTION this value ('LOS') seems to be also defined under the key DIALOG_BATCH_GROUPING_LOS!
     * @return [en] LoS, [de] VWD
     */
    public static String getLOS() {
        return get(LOS).value;
    }

    /**
     * <pre>LOS_ALTERATION
     * SQLite key: losalteration
     * [en] Los Alteration?
     * [de] Tage simuliert (Tage sim.)</pre>
     * @return [en] Los Alteration?, [de] Tage simuliert (Tage sim.)
     */
    public static String getLosAlteration() {
        return get(LOS_ALTERATION).value;
    }

    public static Translation getLosAlterationObj() {
        return get(LOS_ALTERATION);
    }

    /**
     * <pre>LOS_ALTERATION_FROM
     * SQLite key: losalteration_from
     * [en] Los Alteration from
     * [de] Tage sim. von</pre>
     * @return [en] Los Alteration from, [de] Tage sim. von
     */
    public static String getLosAlterationFrom() {
        return get(LOS_ALTERATION_FROM).value;
    }

    /**
     * <pre>LOS_ALTERATION_TO
     * SQLite key: losalteration_to
     * [en] Los Alteration to
     * [de] Tage sim. bis</pre>
     * @return [en] Los Alteration to, [de] Tage sim. bis
     */
    public static String getLosAlterationTo() {
        return get(LOS_ALTERATION_TO).value;
    }

    /**
     * <pre>LUMP_SUM
     * SQLite key: lumpsum
     * [en] Lump Sum
     * [de] Pauschale</pre>
     * @return [en] Lump Sum, [de] Pauschale
     */
    public static String getLumpSum() {
        return get(LUMP_SUM).value;
    }

    /**
     * <pre>MAIN_AUDIT_REASON
     * SQLite key: mainauditreason
     * [en] Main audit reason
     * [de] Hauptprüfgrund</pre>
     * @return [en] Main audit reason, [de] Hauptprüfgrund
     */
    public static String getMainAuditReason() {
        return get(MAIN_AUDIT_REASON).value;
    }

    /**
     * <pre>MAIN_DEPARTMENT
     * SQLite key: maindepartment
     * [en] Main Department
     * [de] Hauptabteilung</pre>
     * @return [en] Main Department, [de] Hauptabteilung
     */
    public static String getMainDepartment() {
        return get(MAIN_DEPARTMENT).value;
    }

    /**
     * <pre>MAIN_DIAGNOSIS_ERROR
     * SQLite key: maindiagnosis_error
     * [de] Eine Stern- oder Zusatzdiagnose kann nicht als Hauptdiagnose gesetzt werden.</pre>
     * @return [de] Eine Stern- oder Zusatzdiagnose kann nicht als Hauptdiagnose gesetzt werden.
     */
    public static String getMainDiagnosisError() {
        return get(MAIN_DIAGNOSIS_ERROR).value;
    }

    /**
     * <pre>MD_AUDIT_QUOTA
     * SQLite key: md_audit_quota
     * [en] MD auditquotas
     * [de] MD Prüfquote</pre>
     * @return [en] MD auditquotas, [de] MD Prüfquote
     */
    public static String getMdAuditQuota() {
        return get(MD_AUDIT_QUOTA).value;
    }

    /**
     * <pre>MD_MASTERDATA
     * SQLite key: md_masterdata
     * [en] MD masterdata
     * [de] MD Stammdaten</pre>
     * @return [en] MD masterdata, [de] MD Stammdaten
     */
    public static String getMdMasterdata() {
        return get(MD_MASTERDATA).value;
    }

    /**
     * <pre>MDC
     * SQLite key: mdc
     * [en] MDC
     * [de] Hauptdiagnosegruppe/Strukturkategorie (MDC/SK)</pre>
     * ATTENTION this value ('MDC') seems to be also defined under the key RULES_DRG_MDC!
     * @return [en] MDC, [de] Hauptdiagnosegruppe/Strukturkategorie (MDC/SK)
     */
    public static String getMDC() {
        return get(MDC).value;
    }

    public static Translation getMDCObj() {
        return get(MDC);
    }

    /**
     * <pre>MDK_ADDRESS
     * SQLite key: mdk_address
     * [en] Address
     * [de] Anschrift</pre>
     * ATTENTION this value ('Address') seems to be also defined under the key ADDRESS! this value ('Address') seems to be also defined under the key AUDIT_ADDRESS!
     * @return [en] Address, [de] Anschrift
     */
    public static String getMdkAddress() {
        return get(MDK_ADDRESS).value;
    }

    /**
     * <pre>MDK_ADDRESS_VALIDATE
     * SQLite key: mdk_addressvalidate
     * [en] Invalid Address. Please provide valid entry.
     * [de] Ungültige Adresse. Bitte geben Sie einen gültigen Eintrag an.</pre>
     * @return [en] Invalid Address. Please provide valid entry., [de] Ungültige Adresse. Bitte geben Sie einen gültigen Eintrag an.
     */
    public static String getMdkAddressValidate() {
        return get(MDK_ADDRESS_VALIDATE).value;
    }

    /**
     * <pre>MDK_AREA_CODE
     * SQLite key: mdk_areacode
     * [en] Area Code
     * [de] Postleitzahl</pre>
     * ATTENTION this value ('Area Code') seems to be also defined under the key AUDIT_AREA_CODE!
     * @return [en] Area Code, [de] Postleitzahl
     */
    public static String getMdkAreaCode() {
        return get(MDK_AREA_CODE).value;
    }

    /**
     * <pre>MDK_AUDIT_COMPLETION_DEADLINE
     * SQLite key: mdk_auditcompletiondeadline
     * [en] Mdk Audit Completion Deadline
     * [de] Frist Abschluss MD-Prüfung</pre>
     * @return [en] Mdk Audit Completion Deadline, [de] Frist Abschluss MD-Prüfung
     */
    public static String getMdkAuditCompletionDeadline() {
        return get(MDK_AUDIT_COMPLETION_DEADLINE).value;
    }

    /**
     * <pre>MDK_AUDIT_COMPLETION_DEADLINE_DAYS
     * SQLite key: mdk_audit_completion_deadline_days
     * [de] Tage bis Abschluss Vorverfahren (Abschluss Vorverf.)</pre>
     * @return [de] Tage bis Abschluss Vorverfahren (Abschluss Vorverf.)
     */
    public static String getMdkAuditCompletionDeadlineDays() {
        return get(MDK_AUDIT_COMPLETION_DEADLINE_DAYS).value;
    }

    public static Translation getMdkAuditCompletionDeadlineDaysObj() {
        return get(MDK_AUDIT_COMPLETION_DEADLINE_DAYS);
    }

    /**
     * <pre>MDK_AUDIT_COMPLETION_DEADLINE_ERROR
     * SQLite key: mdk_auditcompletiondeadlineerror
     * [en] No valid entry is found for the audit completion deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
     * [de] Keinen gültigen Eintrag für die Frist "Abschluss MD-Prüfung" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
     * @return [en] No valid entry is found for the audit completion deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Abschluss MD-Prüfung" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
     */
    public static String getMdkAuditCompletionDeadlineError() {
        return get(MDK_AUDIT_COMPLETION_DEADLINE_ERROR).value;
    }

    /**
     * <pre>MDK_AUDIT_COMPLETION_DEADLINE_FROM
     * SQLite key: mdk_audit_completion_deadline_from
     * [de] Frist Vv Abschluss von</pre>
     * @return [de] Frist Vv Abschluss von
     */
    public static String getMdkAuditCompletionDeadlineFrom() {
        return get(MDK_AUDIT_COMPLETION_DEADLINE_FROM).value;
    }

    /**
     * <pre>MDK_AUDIT_COMPLETION_DEADLINE_TO
     * SQLite key: mdk_audit_completion_deadline_to
     * [de] Frist Vv Abschluss bis</pre>
     * @return [de] Frist Vv Abschluss bis
     */
    public static String getMdkAuditCompletionDeadlineTo() {
        return get(MDK_AUDIT_COMPLETION_DEADLINE_TO).value;
    }

    /**
     * <pre>MDK_AUDIT_REASONS
     * SQLite key: mdk_auditreasons
     * [en] Audit Reasons (Audit Reasons)
     * [de] Prüfgründe (Prüfgründe)</pre>
     * @return [en] Audit Reasons (Audit Reasons), [de] Prüfgründe (Prüfgründe)
     */
    public static String getMdkAuditReasons() {
        return get(MDK_AUDIT_REASONS).value;
    }

    public static Translation getMdkAuditReasonsObj() {
        return get(MDK_AUDIT_REASONS);
    }

    /**
     * <pre>MDK_BILL_CORRECTION_DEADLINE
     * SQLite key: mdk_billcorrectiondeadline
     * [en] Bill Correction Deadline
     * [de] Frist einmalige Rechnungskorrektur</pre>
     * @return [en] Bill Correction Deadline, [de] Frist einmalige Rechnungskorrektur
     */
    public static String getMdkBillCorrectionDeadline() {
        return get(MDK_BILL_CORRECTION_DEADLINE).value;
    }

    /**
     * <pre>MDK_BILL_CORRECTION_DEADLINE_ERROR
     * SQLite key: mdk_billcorrectiondeadlineerror
     * [en] No valid entry is found for the bill correction deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
     * [de] Keinen gültigen Eintrag für die Frist "Einmalige Rechnungskorrektur" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
     * @return [en] No valid entry is found for the bill correction deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Einmalige Rechnungskorrektur" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
     */
    public static String getMdkBillCorrectionDeadlineError() {
        return get(MDK_BILL_CORRECTION_DEADLINE_ERROR).value;
    }

    /**
     * <pre>MDK_COMMENT
     * SQLite key: mdk_comment
     * [en] Mdk Comment
     * [de] MD-Ergebnis/Bemerkung</pre>
     * @return [en] Mdk Comment, [de] MD-Ergebnis/Bemerkung
     */
    public static String getMdkComment() {
        return get(MDK_COMMENT).value;
    }

    /**
     * <pre>MDK_CONTINUATION_FEE_DEADLINE_ERROR
     * SQLite key: mdk_continuationfeedeadlineerror
     * [en] No valid entry is found for the continuation fee deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
     * [de] Keinen gültigen Eintrag für die Frist "Fortsetzungpauschale gezahlt" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
     * @return [en] No valid entry is found for the continuation fee deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Fortsetzungpauschale gezahlt" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
     */
    public static String getMdkContinuationFeeDeadlineError() {
        return get(MDK_CONTINUATION_FEE_DEADLINE_ERROR).value;
    }

    /**
     * <pre>MDK_CONTINUATION_FEE_PAID
     * SQLite key: mdk_continuationfeepaid
     * [en] Continuation Fee Paid
     * [de] Fortsetzungspauschale gezahlt</pre>
     * @return [en] Continuation Fee Paid, [de] Fortsetzungspauschale gezahlt
     */
    public static String getMdkContinuationFeePaid() {
        return get(MDK_CONTINUATION_FEE_PAID).value;
    }

    /**
     * <pre>MDK_CREATE_REQUEST_WINDOW
     * SQLite key: mdk_createrequestwindow
     * [en] Create a request
     * [de] Anfrage anlegen</pre>
     * @return [en] Create a request, [de] Anfrage anlegen
     */
    public static String getMdkCreateRequestWindow() {
        return get(MDK_CREATE_REQUEST_WINDOW).value;
    }

    /**
     * <pre>MDK_DEADLINE_FOR_SUBMISSION
     * SQLite key: mdk_deadlineforsubmission
     * [en] Deadline For Submission
     * [de] Abgabefrist bis</pre>
     * @return [en] Deadline For Submission, [de] Abgabefrist bis
     */
    public static String getMdkDeadlineForSubmission() {
        return get(MDK_DEADLINE_FOR_SUBMISSION).value;
    }

    /**
     * <pre>MDK_DEPARTMENT
     * SQLite key: mdk_department
     * [en] Mdk Department
     * [de] MD-Dienststelle</pre>
     * @return [en] Mdk Department, [de] MD-Dienststelle
     */
    public static String getMdkDepartment() {
        return get(MDK_DEPARTMENT).value;
    }

    /**
     * <pre>MDK_DEPARTMENT_VALIDATE
     * SQLite key: mdk_departmentvalidate
     * [en] Invalid MD Department. Please provide valid entry.
     * [de] Ungültige MD-Dienststelle. Bitte geben Sie einen gültigen Eintrag an.</pre>
     * @return [en] Invalid MD Department. Please provide valid entry., [de] Ungültige MD-Dienststelle. Bitte geben Sie einen gültigen Eintrag an.
     */
    public static String getMdkDepartmentValidate() {
        return get(MDK_DEPARTMENT_VALIDATE).value;
    }

    /**
     * <pre>MDK_DOCUMENT_DELIVER_AND_CONTINUATION_FEE_DEADLINES_ERROR
     * SQLite key: mdk_documentdeliverandcontinuationfeedeadlineserror
     * [en] No valid entry is found for the document deliver and continuation fee deadlines in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
     * [de] Keinen gültigen Eintrag für die Frist "Abgabefrist Unterlagen" und "Fortsetzungpauschale gezahlt" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
     * @return [en] No valid entry is found for the document deliver and continuation fee deadlines in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Abgabefrist Unterlagen" und "Fortsetzungpauschale gezahlt" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
     */
    public static String getMdkDocumentDeliverAndContinuationFeeDeadlinesError() {
        return get(MDK_DOCUMENT_DELIVER_AND_CONTINUATION_FEE_DEADLINES_ERROR).value;
    }

    /**
     * <pre>MDK_DOCUMENT_DELIVER_DEADLINE
     * SQLite key: mdk_document_deliver_deadline
     * [de] Frist bis zum Versenden der Unterlagen an den MD (Frist Versand)</pre>
     * @return [de] Frist bis zum Versenden der Unterlagen an den MD (Frist Versand)
     */
    public static String getMdkDocumentDeliverDeadline() {
        return get(MDK_DOCUMENT_DELIVER_DEADLINE).value;
    }

    public static Translation getMdkDocumentDeliverDeadlineObj() {
        return get(MDK_DOCUMENT_DELIVER_DEADLINE);
    }

    /**
     * <pre>MDK_DOCUMENT_DELIVER_DEADLINE_DAYS
     * SQLite key: mdk_document_deliver_deadline_days
     * [de] Tage bis Versand MD-Unterlagen (Unterlagen MD)</pre>
     * @return [de] Tage bis Versand MD-Unterlagen (Unterlagen MD)
     */
    public static String getMdkDocumentDeliverDeadlineDays() {
        return get(MDK_DOCUMENT_DELIVER_DEADLINE_DAYS).value;
    }

    public static Translation getMdkDocumentDeliverDeadlineDaysObj() {
        return get(MDK_DOCUMENT_DELIVER_DEADLINE_DAYS);
    }

    /**
     * <pre>MDK_DOCUMENT_DELIVER_DEADLINE_ERROR
     * SQLite key: mdk_documentdeliverdeadlineerror
     * [en] No valid entry is found for the document deliver deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
     * [de] Keinen gültigen Eintrag für die Frist "Abgabefrist Unterlagen" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
     * @return [en] No valid entry is found for the document deliver deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Abgabefrist Unterlagen" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
     */
    public static String getMdkDocumentDeliverDeadlineError() {
        return get(MDK_DOCUMENT_DELIVER_DEADLINE_ERROR).value;
    }

    /**
     * <pre>MDK_DOCUMENT_DELIVER_DEADLINE_FROM
     * SQLite key: mdk_document_deliver_deadline_from
     * [de] Frist Versand von</pre>
     * @return [de] Frist Versand von
     */
    public static String getMdkDocumentDeliverDeadlineFrom() {
        return get(MDK_DOCUMENT_DELIVER_DEADLINE_FROM).value;
    }

    /**
     * <pre>MDK_DOCUMENT_DELIVER_DEADLINE_TO
     * SQLite key: mdk_document_deliver_deadline_to
     * [de] Frist Versand bis</pre>
     * @return [de] Frist Versand bis
     */
    public static String getMdkDocumentDeliverDeadlineTo() {
        return get(MDK_DOCUMENT_DELIVER_DEADLINE_TO).value;
    }

    /**
     * <pre>MDK_DOCUMENT_DELIVERED
     * SQLite key: mdk_documentdelivered
     * [en] Document Delivered at
     * [de] gesendet am</pre>
     * @return [en] Document Delivered at, [de] gesendet am
     */
    public static String getMdkDocumentDelivered() {
        return get(MDK_DOCUMENT_DELIVERED).value;
    }

    /**
     * <pre>MDK_DOCUMENT_REQUEST
     * SQLite key: mdk_documentrequest
     * [en] Document Request at
     * [de] angefordert am</pre>
     * @return [en] Document Request at, [de] angefordert am
     */
    public static String getMdkDocumentRequest() {
        return get(MDK_DOCUMENT_REQUEST).value;
    }

    /**
     * <pre>MDK_DOCUMENTS
     * SQLite key: mdk_documents
     * [en] MD Documents
     * [de] MD-Unterlagen</pre>
     * @return [en] MD Documents, [de] MD-Unterlagen
     */
    public static String getMdkDocuments() {
        return get(MDK_DOCUMENTS).value;
    }

    /**
     * <pre>MDK_EDITOR
     * SQLite key: mdk_editor
     * [en] Editor
     * [de] Bearbeiter</pre>
     * ATTENTION this value ('Editor') seems to be also defined under the key AUDIT_EDITOR!
     * @return [en] Editor, [de] Bearbeiter
     */
    public static String getMdkEditor() {
        return get(MDK_EDITOR).value;
    }

    /**
     * <pre>MDK_EMAIL
     * SQLite key: mdk_email
     * [en] Email Address
     * [de] Mail-Adresse</pre>
     * @return [en] Email Address, [de] Mail-Adresse
     */
    public static String getMdkEmail() {
        return get(MDK_EMAIL).value;
    }

    /**
     * <pre>MDK_EMPTY_MDK_DATA_DIALOG
     * SQLite key: mdk_emptymdkdatadialog
     * [en] Either request was created without selecting any MD or selected MD was deleted after creating this MD request. Please select required MD.
     * [de] Entweder wurde eine Anfrage angelegt ohne einen MD auszuwählen oder der ausgewählte MD wurde nach dem Anlegen dieser MD-Anfrage gelöscht. Bitte benötigten MD auswählen.</pre>
     * @return [en] Either request was created without selecting any MD or selected MD was deleted after creating this MD request. Please select required MD., [de] Entweder wurde eine Anfrage angelegt ohne einen MD auszuwählen oder der ausgewählte MD wurde nach dem Anlegen dieser MD-Anfrage gelöscht. Bitte benötigten MD auswählen.
     */
    public static String getMdkEmptyMdkDataDialog() {
        return get(MDK_EMPTY_MDK_DATA_DIALOG).value;
    }

    /**
     * <pre>MDK_EXTENDED_AUDIT_REASONS
     * SQLite key: mdk_extendedauditreasons
     * [en] Extended Audit Reasons
     * [de] Erweiterte Prüfgründe</pre>
     * @return [en] Extended Audit Reasons, [de] Erweiterte Prüfgründe
     */
    public static String getMdkExtendedAuditReasons() {
        return get(MDK_EXTENDED_AUDIT_REASONS).value;
    }

    /**
     * <pre>MDK_FAX
     * SQLite key: mdk_fax
     * [en] Fax
     * [de] Fax</pre>
     * ATTENTION this value ('Fax') seems to be also defined under the key AUDIT_FAX! this value ('Fax') seems to be also defined under the key FAX!
     * @return [en] Fax, [de] Fax
     */
    public static String getMdkFax() {
        return get(MDK_FAX).value;
    }

    /**
     * <pre>MDK_FAX_VALIDATE
     * SQLite key: mdk_faxvalidate
     * [en] Invalid Fax No. Please provide valid entry.
     * [de] Ungültige Faxnummer. Bitte geben Sie einen gültigen Eintrag an.</pre>
     * @return [en] Invalid Fax No. Please provide valid entry., [de] Ungültige Faxnummer. Bitte geben Sie einen gültigen Eintrag an.
     */
    public static String getMdkFaxValidate() {
        return get(MDK_FAX_VALIDATE).value;
    }

    /**
     * <pre>MDK_INFORMATIONS
     * SQLite key: mdk_informations
     * [en] MD Informations
     * [de] MD-Informationen</pre>
     * @return [en] MD Informations, [de] MD-Informationen
     */
    public static String getMdkInformations() {
        return get(MDK_INFORMATIONS).value;
    }

    /**
     * <pre>MDK_MAIL_ADDRESS_VALIDATE
     * SQLite key: mdk_mailaddressvalidate
     * [en] Invalid Email-address. Please provide valid entry.
     * [de] Ungültige Mail-Adresse. Bitte geben Sie einen gültigen Eintrag an.</pre>
     * @return [en] Invalid Email-address. Please provide valid entry., [de] Ungültige Mail-Adresse. Bitte geben Sie einen gültigen Eintrag an.
     */
    public static String getMdkMailAddressValidate() {
        return get(MDK_MAIL_ADDRESS_VALIDATE).value;
    }

    /**
     * <pre>MDK_NAME
     * SQLite key: mdk_name
     * [en] MD Name
     * [de] MD-Name</pre>
     * @return [en] MD Name, [de] MD-Name
     */
    public static String getMdkName() {
        return get(MDK_NAME).value;
    }

    /**
     * <pre>MDK_NAME_VALIDATE
     * SQLite key: mdk_namevalidate
     * [en] Invalid MD Name. Please provide valid entry.
     * [de] Ungültiger MD-Name. Bitte geben Sie einen gültigen Eintrag an.</pre>
     * @return [en] Invalid MD Name. Please provide valid entry., [de] Ungültiger MD-Name. Bitte geben Sie einen gültigen Eintrag an.
     */
    public static String getMdkNameValidate() {
        return get(MDK_NAME_VALIDATE).value;
    }

    /**
     * <pre>MDK_PHONE_NO_VALIDATE
     * SQLite key: mdk_phonenovalidate
     * [en] Invalid Telephone No. Please provide valid entry.
     * [de] Ungültige Telefonnummer. Bitte geben Sie einen gültigen Eintrag an.</pre>
     * @return [en] Invalid Telephone No. Please provide valid entry., [de] Ungültige Telefonnummer. Bitte geben Sie einen gültigen Eintrag an.
     */
    public static String getMdkPhoneNoValidate() {
        return get(MDK_PHONE_NO_VALIDATE).value;
    }

    /**
     * <pre>MDK_PHONE_PREFIX_VALIDATE
     * SQLite key: mdk_phoneprefixvalidate
     * [en] Invalid Telephone-prefix. Please provide valid entry.
     * [de] Ungültige Vorwahl. Bitte geben Sie einen gültigen Eintrag an.</pre>
     * @return [en] Invalid Telephone-prefix. Please provide valid entry., [de] Ungültige Vorwahl. Bitte geben Sie einen gültigen Eintrag an.
     */
    public static String getMdkPhonePrefixValidate() {
        return get(MDK_PHONE_PREFIX_VALIDATE).value;
    }

    /**
     * <pre>MDK_PROCESS_START_DATE
     * SQLite key: mdk_processstartdate
     * [en] Process Start Date
     * [de] Einleitung Prüfverfahren Kasse</pre>
     * @return [en] Process Start Date, [de] Einleitung Prüfverfahren Kasse
     */
    public static String getMdkProcessStartDate() {
        return get(MDK_PROCESS_START_DATE).value;
    }

    /**
     * <pre>MDK_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE
     * SQLite key: mdk_proposalsubsequentproceedingsdeadline
     * [en] No valid entry is found for the Proposal Subsequent Proceedings Deadline  in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline.
     * [de] Keinen gültigen Eintrag für die Frist "Frist Vorschlag Nachverfahren"  in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.</pre>
     * @return [en] No valid entry is found for the Proposal Subsequent Proceedings Deadline  in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Frist Vorschlag Nachverfahren"  in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
     */
    public static String getMdkProposalSubsequentProceedingsDeadline() {
        return get(MDK_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE).value;
    }

    /**
     * <pre>MDK_REPORT_CREATION_DATE
     * SQLite key: mdk_reportcreationdate
     * [en] Report Creation Date
     * [de] Gutachtendatum</pre>
     * ATTENTION this value ('Report Creation Date') seems to be also defined under the key MDK_REPORT_CREATION_DATE_EQUAL!
     * @return [en] Report Creation Date, [de] Gutachtendatum
     */
    public static String getMdkReportCreationDate() {
        return get(MDK_REPORT_CREATION_DATE).value;
    }

    /**
     * <pre>MDK_REPORT_CREATION_DATE_EQUAL
     * SQLite key: mdk_reportcreationdateequal
     * [en] Report Creation Date
     * [de] Gutachtendatum</pre>
     * ATTENTION this value ('Report Creation Date') seems to be also defined under the key MDK_REPORT_CREATION_DATE!
     * @return [en] Report Creation Date, [de] Gutachtendatum
     */
    public static String getMdkReportCreationDateEqual() {
        return get(MDK_REPORT_CREATION_DATE_EQUAL).value;
    }

    /**
     * <pre>MDK_REPORT_CREATION_DATE_FROM
     * SQLite key: mdk_reportcreationdatefrom
     * [en] Report Creation Date from
     * [de] Gutachtendatum von</pre>
     * @return [en] Report Creation Date from, [de] Gutachtendatum von
     */
    public static String getMdkReportCreationDateFrom() {
        return get(MDK_REPORT_CREATION_DATE_FROM).value;
    }

    /**
     * <pre>MDK_REPORT_CREATION_DATE_TO
     * SQLite key: mdk_reportcreationdateto
     * [en] Report Creation Date to
     * [de] Gutachtendatum bis</pre>
     * @return [en] Report Creation Date to, [de] Gutachtendatum bis
     */
    public static String getMdkReportCreationDateTo() {
        return get(MDK_REPORT_CREATION_DATE_TO).value;
    }

    /**
     * <pre>MDK_REPORT_CREATION_QUARTER
     * SQLite key: mdk_reportcreationquarter
     * [en] Report Creation Quarter
     * [de] Gutachten-Quartal</pre>
     * @return [en] Report Creation Quarter, [de] Gutachten-Quartal
     */
    public static String getMdkReportCreationQuarter() {
        return get(MDK_REPORT_CREATION_QUARTER).value;
    }

    /**
     * <pre>MDK_REPORT_RECEIVE_DATE
     * SQLite key: mdk_reportreceivedate
     * [en] Report Receive Date
     * [de] Eingang Gutachten</pre>
     * @return [en] Report Receive Date, [de] Eingang Gutachten
     */
    public static String getMdkReportReceiveDate() {
        return get(MDK_REPORT_RECEIVE_DATE).value;
    }

    /**
     * <pre>MDK_START_AUDIT
     * SQLite key: mdk_startaudit
     * [en] Mdk Start Audit
     * [de] Einleitung MD-Prüfung</pre>
     * ATTENTION this value ('Mdk Start Audit') seems to be also defined under the key MDK_START_AUDIT_EQUAL!
     * @return [en] Mdk Start Audit, [de] Einleitung MD-Prüfung
     */
    public static String getMdkStartAudit() {
        return get(MDK_START_AUDIT).value;
    }

    /**
     * <pre>MDK_START_AUDIT_EQUAL
     * SQLite key: mdk_startauditequal
     * [en] Mdk Start Audit
     * [de] Einl. MD-Prüfung</pre>
     * ATTENTION this value ('Mdk Start Audit') seems to be also defined under the key MDK_START_AUDIT!
     * @return [en] Mdk Start Audit, [de] Einl. MD-Prüfung
     */
    public static String getMdkStartAuditEqual() {
        return get(MDK_START_AUDIT_EQUAL).value;
    }

    /**
     * <pre>MDK_START_AUDIT_EXTENDED
     * SQLite key: mdk_startauditextended
     * [en] Mdk Start Audit Extended
     * [de] Einleitung erweiterte MD-Prüfung</pre>
     * ATTENTION this value ('Mdk Start Audit Extended') seems to be also defined under the key MDK_START_AUDIT_EXTENDED_EQUAL!
     * @return [en] Mdk Start Audit Extended, [de] Einleitung erweiterte MD-Prüfung
     */
    public static String getMdkStartAuditExtended() {
        return get(MDK_START_AUDIT_EXTENDED).value;
    }

    /**
     * <pre>MDK_START_AUDIT_EXTENDED_EQUAL
     * SQLite key: mdk_startauditextendedequal
     * [en] Mdk Start Audit Extended
     * [de] Einl. erw. MD-Prüfung</pre>
     * ATTENTION this value ('Mdk Start Audit Extended') seems to be also defined under the key MDK_START_AUDIT_EXTENDED!
     * @return [en] Mdk Start Audit Extended, [de] Einl. erw. MD-Prüfung
     */
    public static String getMdkStartAuditExtendedEqual() {
        return get(MDK_START_AUDIT_EXTENDED_EQUAL).value;
    }

    /**
     * <pre>MDK_START_AUDIT_EXTENDED_FROM
     * SQLite key: mdk_startauditextendedfrom
     * [en] Mdk Start Audit Extended from
     * [de] Einl. erw. MD-Prüfung von</pre>
     * @return [en] Mdk Start Audit Extended from, [de] Einl. erw. MD-Prüfung von
     */
    public static String getMdkStartAuditExtendedFrom() {
        return get(MDK_START_AUDIT_EXTENDED_FROM).value;
    }

    /**
     * <pre>MDK_START_AUDIT_EXTENDED_TO
     * SQLite key: mdk_startauditextendedto
     * [en] Mdk Start Audit Extended to
     * [de] Einl. erw. MD-Prüfung bis</pre>
     * @return [en] Mdk Start Audit Extended to, [de] Einl. erw. MD-Prüfung bis
     */
    public static String getMdkStartAuditExtendedTo() {
        return get(MDK_START_AUDIT_EXTENDED_TO).value;
    }

    /**
     * <pre>MDK_START_AUDIT_FROM
     * SQLite key: mdk_startauditfrom
     * [en] Mdk Start Audit from
     * [de] Einl. MD-Prüfung von</pre>
     * @return [en] Mdk Start Audit from, [de] Einl. MD-Prüfung von
     */
    public static String getMdkStartAuditFrom() {
        return get(MDK_START_AUDIT_FROM).value;
    }

    /**
     * <pre>MDK_START_AUDIT_QUARTER
     * SQLite key: mdk_startauditquarter
     * [en] Quartal Einleitung MD-Prüfung
     * [de] Quartal Einleitung MD-Prüfung</pre>
     * @return [en] Quartal Einleitung MD-Prüfung, [de] Quartal Einleitung MD-Prüfung
     */
    public static String getMdkStartAuditQuarter() {
        return get(MDK_START_AUDIT_QUARTER).value;
    }

    /**
     * <pre>MDK_START_AUDIT_TO
     * SQLite key: mdk_startauditto
     * [en] Mdk Start Audit to
     * [de] Einl. MD-Prüfung bis</pre>
     * @return [en] Mdk Start Audit to, [de] Einl. MD-Prüfung bis
     */
    public static String getMdkStartAuditTo() {
        return get(MDK_START_AUDIT_TO).value;
    }

    /**
     * <pre>MDK_STATUS
     * SQLite key: mdk_status
     * [en] Request State
     * [de] Status der Anfrage (Anfrage-Status)</pre>
     * ATTENTION this value ('Request State') seems to be also defined under the key REQUEST_STATUS!
     * @return [en] Request State, [de] Status der Anfrage (Anfrage-Status)
     */
    public static String getMdkStatus() {
        return get(MDK_STATUS).value;
    }

    public static Translation getMdkStatusObj() {
        return get(MDK_STATUS);
    }

    /**
     * <pre>MDK_SUBSEQUENT_PROCEEDING
     * SQLite key: mdk_subsequentproceeding
     * [en] subsequent Proceeding
     * [de] Fort bezahlt am</pre>
     * @return [en] subsequent Proceeding, [de] Fort bezahlt am
     */
    public static String getMdkSubsequentProceeding() {
        return get(MDK_SUBSEQUENT_PROCEEDING).value;
    }

    /**
     * <pre>MDK_SUBSEQUENT_PROCEEDING_DATE
     * SQLite key: mdk_subsequent_proceeding_date
     * [en] subsequent proceeding date
     * [de] Nachverfahren (Nachverfahren)</pre>
     * @return [en] subsequent proceeding date, [de] Nachverfahren (Nachverfahren)
     */
    public static String getMdkSubsequentProceedingDate() {
        return get(MDK_SUBSEQUENT_PROCEEDING_DATE).value;
    }

    public static Translation getMdkSubsequentProceedingDateObj() {
        return get(MDK_SUBSEQUENT_PROCEEDING_DATE);
    }

    /**
     * <pre>MDK_SUBSEQUENT_PROCEEDING_DATE_FORM
     * SQLite key: mdk_subsequent_proceeding_date_form
     * [en] Nsubsequent proceeding date from
     * [de] Nachverfahren von</pre>
     * @return [en] Nsubsequent proceeding date from, [de] Nachverfahren von
     */
    public static String getMdkSubsequentProceedingDateForm() {
        return get(MDK_SUBSEQUENT_PROCEEDING_DATE_FORM).value;
    }

    /**
     * <pre>MDK_SUBSEQUENT_PROCEEDING_DATE_TO
     * SQLite key: mdk_subsequent_proceeding_date_to
     * [en] subsequent proceeding date to
     * [de] Nachverfahren bis</pre>
     * @return [en] subsequent proceeding date to, [de] Nachverfahren bis
     */
    public static String getMdkSubsequentProceedingDateTo() {
        return get(MDK_SUBSEQUENT_PROCEEDING_DATE_TO).value;
    }

    /**
     * <pre>MDK_TELEPHONE
     * SQLite key: mdk_telephone
     * [en] Telephone
     * [de] Telefon</pre>
     * ATTENTION this value ('Telephone') seems to be also defined under the key AUDIT_TELEPHONE!
     * @return [en] Telephone, [de] Telefon
     */
    public static String getMdkTelephone() {
        return get(MDK_TELEPHONE).value;
    }

    /**
     * <pre>MDK_TELEPHONE_AREA_CODE
     * SQLite key: mdk_telephoneareacode
     * [en] Telephone Area Code
     * [de] Vorwahl</pre>
     * ATTENTION this value ('Telephone Area Code') seems to be also defined under the key AUDIT_TELEPHONE_AREA_CODE!
     * @return [en] Telephone Area Code, [de] Vorwahl
     */
    public static String getMdkTelephoneAreaCode() {
        return get(MDK_TELEPHONE_AREA_CODE).value;
    }

    /**
     * <pre>MDK_UPDATE_REQUEST_WINDOW
     * SQLite key: mdk_updaterequestwindow
     * [en] Update a request (MD)
     * [de] Anfrage aktualisieren (MD)</pre>
     * @return [en] Update a request (MD), [de] Anfrage aktualisieren (MD)
     */
    public static String getMdkUpdateRequestWindow() {
        return get(MDK_UPDATE_REQUEST_WINDOW).value;
    }

    /**
     * <pre>MDK_USER_COMMENT
     * SQLite key: mdk_usercomment
     * [en] User Comment
     * [de] Eigene Notizen</pre>
     * ATTENTION this value ('User Comment') seems to be also defined under the key AUDIT_USER_COMMENT!
     * @return [en] User Comment, [de] Eigene Notizen
     */
    public static String getMdkUserComment() {
        return get(MDK_USER_COMMENT).value;
    }

    /**
     * <pre>MDK_ZIP_CODE_VALIDATE
     * SQLite key: mdk_zipcodevalidate
     * [en] Invalid Zipcode. Please provide valid entry.
     * [de] Ungültige Postleitzahl. Bitte geben Sie einen gültigen Eintrag an.</pre>
     * @return [en] Invalid Zipcode. Please provide valid entry., [de] Ungültige Postleitzahl. Bitte geben Sie einen gültigen Eintrag an.
     */
    public static String getMdkZipCodeValidate() {
        return get(MDK_ZIP_CODE_VALIDATE).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING
     * SQLite key: menu_batch_grouping
     * [en] Batchgrouping
     * [de] Batchgroupen</pre>
     * @return [en] Batchgrouping, [de] Batchgroupen
     */
    public static String getMenuBatchGrouping() {
        return get(MENU_BATCH_GROUPING).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DETAILS_FILTER
     * SQLite key: menu_batch_grouping_detailsfilter
     * [en] Case version filter
     * [de] Fallversionen</pre>
     * @return [en] Case version filter, [de] Fallversionen
     */
    public static String getMenuBatchGroupingDetailsFilter() {
        return get(MENU_BATCH_GROUPING_DETAILS_FILTER).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DETAILS_FILTER_ACTUAL_BOTH
     * SQLite key: menu_batch_grouping_detailsfilter_actualboth
     * [en] current case versions (incl. KIS)
     * [de] aktuelle Fallversionen (inkl. KIS)</pre>
     * @return [en] current case versions (incl. KIS), [de] aktuelle Fallversionen (inkl. KIS)
     */
    public static String getMenuBatchGroupingDetailsFilterActualBoth() {
        return get(MENU_BATCH_GROUPING_DETAILS_FILTER_ACTUAL_BOTH).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DETAILS_FILTER_ACTUAL_LOCAL
     * SQLite key: menu_batch_grouping_detailsfilter_actuallocal
     * [en] current local case versions
     * [de] lokale aktuelle Fallversionen</pre>
     * @return [en] current local case versions, [de] lokale aktuelle Fallversionen
     */
    public static String getMenuBatchGroupingDetailsFilterActualLocal() {
        return get(MENU_BATCH_GROUPING_DETAILS_FILTER_ACTUAL_LOCAL).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DETAILS_FILTER_ALL
     * SQLite key: menu_batch_grouping_detailsfilter_all
     * [en] all case versions
     * [de] Alle Fallversionen</pre>
     * @return [en] all case versions, [de] Alle Fallversionen
     */
    public static String getMenuBatchGroupingDetailsFilterAll() {
        return get(MENU_BATCH_GROUPING_DETAILS_FILTER_ALL).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DETAILS_FILTER_TOOLTIP
     * SQLite key: menu_batch_grouping_detailsfilter_tooltip
     * [de] Es können alle Fälle der KIS-Version gegroupt werden. Die bestehende Checkpoint DRG-Version bleibt unberührt. Alle Fallversionen zu groupen kann sehr lange dauern!</pre>
     * @return [de] Es können alle Fälle der KIS-Version gegroupt werden. Die bestehende Checkpoint DRG-Version bleibt unberührt. Alle Fallversionen zu groupen kann sehr lange dauern!
     */
    public static String getMenuBatchGroupingDetailsFilterTooltip() {
        return get(MENU_BATCH_GROUPING_DETAILS_FILTER_TOOLTIP).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DO_FOR_ACTUAL_ROLE_ONLY
     * SQLite key: menu_batch_grouping_doforactualroleonly
     * [en] Save Results for current Role
     * [de] Ergebnisse für aktuelle Rolle speichern</pre>
     * @return [en] Save Results for current Role, [de] Ergebnisse für aktuelle Rolle speichern
     */
    public static String getMenuBatchGroupingDoForActualRoleOnly() {
        return get(MENU_BATCH_GROUPING_DO_FOR_ACTUAL_ROLE_ONLY).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DO_FOR_ACTUAL_ROLE_ONLY_TOOLTIP
     * SQLite key: menu_batch_grouping_doforactualroleonly_tooltip
     * [de] Die Prüfregelergebnisse werden nur für die eigene Rolle gespeichert.Für Benutzer mit einer anderen Rolle sind die Prüfregelergebnisse nicht sichtbar.</pre>
     * @return [de] Die Prüfregelergebnisse werden nur für die eigene Rolle gespeichert.Für Benutzer mit einer anderen Rolle sind die Prüfregelergebnisse nicht sichtbar.
     */
    public static String getMenuBatchGroupingDoForActualRoleOnlyTooltip() {
        return get(MENU_BATCH_GROUPING_DO_FOR_ACTUAL_ROLE_ONLY_TOOLTIP).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DO_HISTORY_CASES
     * SQLite key: menu_batch_grouping_dohistorycases
     * [en] check with history
     * [de] fallübergreifend</pre>
     * @return [en] check with history, [de] fallübergreifend
     */
    public static String getMenuBatchGroupingDoHistoryCases() {
        return get(MENU_BATCH_GROUPING_DO_HISTORY_CASES).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DO_HISTORY_CASES_TOOLTIP
     * SQLite key: menu_batch_grouping_dohistorycases_tooltip
     * [en] use rules for check of history cases for patient
     * [de] Es werden fallübergreifende Regeln an die Fälle abgewendet</pre>
     * @return [en] use rules for check of history cases for patient, [de] Es werden fallübergreifende Regeln an die Fälle abgewendet
     */
    public static String getMenuBatchGroupingDoHistoryCasesTooltip() {
        return get(MENU_BATCH_GROUPING_DO_HISTORY_CASES_TOOLTIP).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DO_RULES
     * SQLite key: menu_batch_grouping_dorules
     * [en] with automatic Case Check
     * [de] mit automatischer Fallprüfung</pre>
     * @return [en] with automatic Case Check, [de] mit automatischer Fallprüfung
     */
    public static String getMenuBatchGroupingDoRules() {
        return get(MENU_BATCH_GROUPING_DO_RULES).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DO_RULES_SIMULATE
     * SQLite key: menu_batch_grouping_dorulessimulate
     * [en] with automatic Case Correction
     * [de] mit automatischer Fallkorrektur</pre>
     * @return [en] with automatic Case Correction, [de] mit automatischer Fallkorrektur
     */
    public static String getMenuBatchGroupingDoRulesSimulate() {
        return get(MENU_BATCH_GROUPING_DO_RULES_SIMULATE).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DO_RULES_SIMULATE_TOOLTIP
     * SQLite key: menu_batch_grouping_dorulessimulate_tooltip
     * [de] Bei den angeschlagenen Regeln werden die Regelempfehlungen ausgewertet und eine eventuelle Erlösdifferenz, CW-positiv und CW–negativ zusammengefasst, ausgegeben.</pre>
     * @return [de] Bei den angeschlagenen Regeln werden die Regelempfehlungen ausgewertet und eine eventuelle Erlösdifferenz, CW-positiv und CW–negativ zusammengefasst, ausgegeben.
     */
    public static String getMenuBatchGroupingDoRulesSimulateTooltip() {
        return get(MENU_BATCH_GROUPING_DO_RULES_SIMULATE_TOOLTIP).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DO_RULES_TOOLTIP
     * SQLite key: menu_batch_grouping_dorules_tooltip
     * [de] Alle Fälle werden mit den aktivierten Regeln des entsprechenden Jahres geprüft.</pre>
     * @return [de] Alle Fälle werden mit den aktivierten Regeln des entsprechenden Jahres geprüft.
     */
    public static String getMenuBatchGroupingDoRulesTooltip() {
        return get(MENU_BATCH_GROUPING_DO_RULES_TOOLTIP).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DO_SIMULATE
     * SQLite key: menu_batch_grouping_dosimulate
     * [en] DRG/PEPP Simulation
     * [de] DRG/PEPP Simulation</pre>
     * @return [en] DRG/PEPP Simulation, [de] DRG/PEPP Simulation
     */
    public static String getMenuBatchGroupingDoSimulate() {
        return get(MENU_BATCH_GROUPING_DO_SIMULATE).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_DO_SIMULATE_TOOLTIP
     * SQLite key: menu_batch_grouping_dosimulate_tooltip
     * [de] Für jede Nebendiagnose des Falles wird eine DRG/PEPP Simulation durchgeführt,indem diese als Hauptdiagnose ausgewählt wird.</pre>
     * @return [de] Für jede Nebendiagnose des Falles wird eine DRG/PEPP Simulation durchgeführt,indem diese als Hauptdiagnose ausgewählt wird.
     */
    public static String getMenuBatchGroupingDoSimulateTooltip() {
        return get(MENU_BATCH_GROUPING_DO_SIMULATE_TOOLTIP).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_GROUPED
     * SQLite key: menu_batch_grouping_grouped
     * [en] Only Cases without DRG/PEPP
     * [de] Nur Fälle ohne DRG/PEPP</pre>
     * @return [en] Only Cases without DRG/PEPP, [de] Nur Fälle ohne DRG/PEPP
     */
    public static String getMenuBatchGroupingGrouped() {
        return get(MENU_BATCH_GROUPING_GROUPED).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_GROUPED_TOOLTIP
     * SQLite key: menu_batch_grouping_grouped_tooltip
     * [de] Es werden nur Fälle gegroupt,die noch kein DRG- bzw. PEPP-Ergebnis enthalten.</pre>
     * @return [de] Es werden nur Fälle gegroupt,die noch kein DRG- bzw. PEPP-Ergebnis enthalten.
     */
    public static String getMenuBatchGroupingGroupedTooltip() {
        return get(MENU_BATCH_GROUPING_GROUPED_TOOLTIP).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_LAST_RESULTS
     * SQLite key: menu_batch_grouping_lastresults
     * [en] Last Results
     * [de] Letzte Ergebnisse</pre>
     * @return [en] Last Results, [de] Letzte Ergebnisse
     */
    public static String getMenuBatchGroupingLastResults() {
        return get(MENU_BATCH_GROUPING_LAST_RESULTS).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_MED_AND_REMEDIES
     * SQLite key: menu_batch_grouping_medandremedies
     * [en] GK Check
     * [de] GK Prüfung</pre>
     * @return [en] GK Check, [de] GK Prüfung
     */
    public static String getMenuBatchGroupingMedAndRemedies() {
        return get(MENU_BATCH_GROUPING_MED_AND_REMEDIES).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_MED_AND_REMEDIES_TOOLTIP
     * SQLite key: menu_batch_grouping_medandremedies_tooltip
     * [de] Bei der Regelauswertung werden auch die Regeln angewendet, die Medikamenten-,Heil- und Hilfsmittelkriterien beinhalten.</pre>
     * @return [de] Bei der Regelauswertung werden auch die Regeln angewendet, die Medikamenten-,Heil- und Hilfsmittelkriterien beinhalten.
     */
    public static String getMenuBatchGroupingMedAndRemediesTooltip() {
        return get(MENU_BATCH_GROUPING_MED_AND_REMEDIES_TOOLTIP).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_SETTINGS
     * SQLite key: menu_batch_grouping_settings
     * [en] Settings
     * [de] Einstellungen</pre>
     * @return [en] Settings, [de] Einstellungen
     */
    public static String getMenuBatchGroupingSettings() {
        return get(MENU_BATCH_GROUPING_SETTINGS).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_START
     * SQLite key: menu_batch_grouping_start
     * [en] Start
     * [de] Ermitteln</pre>
     * @return [en] Start, [de] Ermitteln
     */
    public static String getMenuBatchGroupingStart() {
        return get(MENU_BATCH_GROUPING_START).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_SUPPLEMENTARY_FEE
     * SQLite key: menu_batch_grouping_supplementaryfee
     * [en] Distribute Fee
     * [de] Zusatzentgelte verteilen</pre>
     * @return [en] Distribute Fee, [de] Zusatzentgelte verteilen
     */
    public static String getMenuBatchGroupingSupplementaryFee() {
        return get(MENU_BATCH_GROUPING_SUPPLEMENTARY_FEE).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_SUPPLEMENTARY_FEE_TOOLTIP
     * SQLite key: menu_batch_grouping_supplementaryfee_tooltip
     * [de] Die Zusatzentgelte werden entsprechend der OPS-Codes zugeordnet</pre>
     * @return [de] Die Zusatzentgelte werden entsprechend der OPS-Codes zugeordnet
     */
    public static String getMenuBatchGroupingSupplementaryFeeTooltip() {
        return get(MENU_BATCH_GROUPING_SUPPLEMENTARY_FEE_TOOLTIP).value;
    }

    /**
     * <pre>MENU_BATCH_GROUPING_USED_RULES
     * SQLite key: menu_batch_grouping_usedrules
     * [en] Rules to use
     * [de] Regelauswahl</pre>
     * @return [en] Rules to use, [de] Regelauswahl
     */
    public static String getMenuBatchGroupingUsedRules() {
        return get(MENU_BATCH_GROUPING_USED_RULES).value;
    }

    /**
     * <pre>MENU_BATCH_INFO_GROUPED
     * SQLite key: menu_batch_info_grouped
     * [en] cases to group: {0}
     * [de] Fallversionen zu groupen: {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] cases to group: {0}, [de] Fallversionen zu groupen: {0}
     */
    public static String getMenuBatchInfoGrouped(final Object... pParams) {
        return get(MENU_BATCH_INFO_GROUPED, pParams).value;
    }

    /**
     * <pre>MENU_CHANGE
     * SQLite key: menu_change
     * [en] change
     * [de] Wechseln</pre>
     * ATTENTION this value ('Change') seems to be also defined under the key EVENT_OPERATION_EDIT!
     * @return [en] change, [de] Wechseln
     */
    public static String getMenuChange() {
        return get(MENU_CHANGE).value;
    }

    /**
     * <pre>MENU_CLOSE
     * SQLite key: menu_close
     * [en] close
     * [de] Schließen</pre>
     * @return [en] close, [de] Schließen
     */
    public static String getMenuClose() {
        return get(MENU_CLOSE).value;
    }

    /**
     * <pre>MENU_DATABASE_CHANGE
     * SQLite key: menu_database_change
     * [en] Change database
     * [de] Datenbank wechseln...</pre>
     * @return [en] Change database, [de] Datenbank wechseln...
     */
    public static String getMenuDatabaseChange() {
        return get(MENU_DATABASE_CHANGE).value;
    }

    /**
     * <pre>MENU_DATABASE_CHANGE_VALIDATION_DB_SAME
     * SQLite key: menu_database_change_validation_db_same
     * [en] Choose a different database
     * [de] Bitte eine unterschiedliche Datenbank wählen</pre>
     * @return [en] Choose a different database, [de] Bitte eine unterschiedliche Datenbank wählen
     */
    public static String getMenuDatabaseChangeValidationDbSame() {
        return get(MENU_DATABASE_CHANGE_VALIDATION_DB_SAME).value;
    }

    /**
     * <pre>MENU_DATABASE_CHANGE_VALIDATION_DB_SELECTION
     * SQLite key: menu_database_change_validation_db_selection
     * [en] Choose a database
     * [de] Bitte eine Datenbank wählen</pre>
     * ATTENTION this value ('Choose a database') seems to be also defined under the key MENU_USER_CHANGE_VALIDATION_DB_SELECTION!
     * @return [en] Choose a database, [de] Bitte eine Datenbank wählen
     */
    public static String getMenuDatabaseChangeValidationDbSelection() {
        return get(MENU_DATABASE_CHANGE_VALIDATION_DB_SELECTION).value;
    }

    /**
     * <pre>MENU_DATABASE_STATUSTEXT
     * SQLite key: menu_database_statustext
     * [en] Database: {0}
     * [de] Datenbank: {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Database: {0}, [de] Datenbank: {0}
     */
    public static String getMenuDatabaseStatustext(final Object... pParams) {
        return get(MENU_DATABASE_STATUSTEXT, pParams).value;
    }

    /**
     * <pre>MENU_GROUPER_SETTINGS
     * SQLite key: menu_grouper_settings
     * [en] Grouper Settings
     * [de] Grouper Einstellungen</pre>
     * @return [en] Grouper Settings, [de] Grouper Einstellungen
     */
    public static String getMenuGrouperSettings() {
        return get(MENU_GROUPER_SETTINGS).value;
    }

    /**
     * <pre>MENU_GROUPER_STATUSTEXT
     * SQLite key: menu_grouper_statustext
     * [en] Grouper: {0}
     * [de] Grouper: {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Grouper: {0}, [de] Grouper: {0}
     */
    public static String getMenuGrouperStatustext(final Object... pParams) {
        return get(MENU_GROUPER_STATUSTEXT, pParams).value;
    }

    /**
     * <pre>MENU_ROLE_CHANGE
     * SQLite key: menu_role_change
     * [en] Change the active role of the user...
     * [de] Aktive Rolle ändern...</pre>
     * @return [en] Change the active role of the user..., [de] Aktive Rolle ändern...
     */
    public static String getMenuRoleChange() {
        return get(MENU_ROLE_CHANGE).value;
    }

    /**
     * <pre>MENU_ROLE_CHANGE_VALIDATION_SELECTION
     * SQLite key: menu_role_change_validation_selection
     * [en] Please choose a role
     * [de] Bitte eine Rolle wählen</pre>
     * @return [en] Please choose a role, [de] Bitte eine Rolle wählen
     */
    public static String getMenuRoleChangeValidationSelection() {
        return get(MENU_ROLE_CHANGE_VALIDATION_SELECTION).value;
    }

    /**
     * <pre>MENU_SEARCH_FILTER
     * SQLite key: menu_search_filter
     * [en] Searchfilter
     * [de] Suchfilter</pre>
     * @return [en] Searchfilter, [de] Suchfilter
     */
    public static String getMenuSearchFilter() {
        return get(MENU_SEARCH_FILTER).value;
    }

    /**
     * <pre>MENU_SERVER_STATUSTEXT
     * SQLite key: menu_server_statustext
     * [en] Server: {0}:{1}
     * [de] Server: {0}:{1}</pre>
     * @param pParams placeholder replacements
     * @return [en] Server: {0}:{1}, [de] Server: {0}:{1}
     */
    public static String getMenuServerStatustext(final Object... pParams) {
        return get(MENU_SERVER_STATUSTEXT, pParams).value;
    }

    /**
     * <pre>MENU_USER_CHANGE
     * SQLite key: menu_user_change
     * [en] Change user
     * [de] Benutzer wechseln...</pre>
     * @return [en] Change user, [de] Benutzer wechseln...
     */
    public static String getMenuUserChange() {
        return get(MENU_USER_CHANGE).value;
    }

    /**
     * <pre>MENU_USER_CHANGE_PROFILE_IMAGE
     * SQLite key: menu_user_change_profile_image
     * [en] Change profile image
     * [de] Profilbild ändern</pre>
     * @return [en] Change profile image, [de] Profilbild ändern
     */
    public static String getMenuUserChangeProfileImage() {
        return get(MENU_USER_CHANGE_PROFILE_IMAGE).value;
    }

    /**
     * <pre>MENU_USER_CHANGE_VALIDATION_DB_SELECTION
     * SQLite key: menu_user_change_validation_db_selection
     * [en] Choose a database
     * [de] Bitte eine Datenbank wählen</pre>
     * ATTENTION this value ('Choose a database') seems to be also defined under the key MENU_DATABASE_CHANGE_VALIDATION_DB_SELECTION!
     * @return [en] Choose a database, [de] Bitte eine Datenbank wählen
     */
    public static String getMenuUserChangeValidationDbSelection() {
        return get(MENU_USER_CHANGE_VALIDATION_DB_SELECTION).value;
    }

    /**
     * <pre>MENU_USER_LOGIN_STATUSTEXT
     * SQLite key: menu_user_login_statustext
     * [en] logged in since {0}
     * [de] eingeloggt seit {0} Uhr</pre>
     * @param pParams placeholder replacements
     * @return [en] logged in since {0}, [de] eingeloggt seit {0} Uhr
     */
    public static String getMenuUserLoginStatustext(final Object... pParams) {
        return get(MENU_USER_LOGIN_STATUSTEXT, pParams).value;
    }

    /**
     * <pre>MENU_USER_NAME_STATUSTEXT
     * SQLite key: menu_user_name_statustext
     * [en] Name: {0}
     * [de] Name: {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Name: {0}, [de] Name: {0}
     */
    public static String getMenuUserNameStatustext(final Object... pParams) {
        return get(MENU_USER_NAME_STATUSTEXT, pParams).value;
    }

    /**
     * <pre>MENU_USER_ROLE_STATUSTEXT
     * SQLite key: menu_user_role_statustext
     * [en] Role: {0}
     * [de] Rolle: {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Role: {0}, [de] Rolle: {0}
     */
    public static String getMenuUserRoleStatustext(final Object... pParams) {
        return get(MENU_USER_ROLE_STATUSTEXT, pParams).value;
    }

    /**
     * <pre>MENU_USER_STATUSTEXT
     * SQLite key: menu_user_statustext
     * [en] Username: {0}
     * [de] Benutzername: {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Username: {0}, [de] Benutzername: {0}
     */
    public static String getMenuUserStatustext(final Object... pParams) {
        return get(MENU_USER_STATUSTEXT, pParams).value;
    }

    /**
     * <pre>MENU_WIZARD_BACK
     * SQLite key: menu_wizard_back
     * [en] Back
     * [de] Zurück</pre>
     * @return [en] Back, [de] Zurück
     */
    public static String getMenuWizardBack() {
        return get(MENU_WIZARD_BACK).value;
    }

    /**
     * <pre>MENU_WIZARD_NEXT
     * SQLite key: menu_wizard_next
     * [en] Next
     * [de] Weiter</pre>
     * @return [en] Next, [de] Weiter
     */
    public static String getMenuWizardNext() {
        return get(MENU_WIZARD_NEXT).value;
    }

    /**
     * <pre>MESSAGE_CASE_DATE_NOT_VALID
     * SQLite key: message_case_date_not_valid
     * [en] The admision year  {0} is not supporten by Grouper any more
     * [de] Das Aufnahmejahr {0} wird nicht mehr vom Grouper unterstützt</pre>
     * @param pParams placeholder replacements
     * @return [en] The admision year  {0} is not supporten by Grouper any more, [de] Das Aufnahmejahr {0} wird nicht mehr vom Grouper unterstützt
     */
    public static String getMessageCaseDateNotValid(final Object... pParams) {
        return get(MESSAGE_CASE_DATE_NOT_VALID, pParams).value;
    }

    /**
     * <pre>MESSAGE_CASE_HAS_NO_DISCHARGE_DATE
     * SQLite key: message_case_has_no_discharge_date
     * [en] The case does not have a discharge date
     * [de] Der Fall hat kein Entlassungsdatum</pre>
     * @return [en] The case does not have a discharge date, [de] Der Fall hat kein Entlassungsdatum
     */
    public static String getMessageCaseHasNoDischargeDate() {
        return get(MESSAGE_CASE_HAS_NO_DISCHARGE_DATE).value;
    }

    /**
     * <pre>MESSAGE_CASE_NOT_GROUPED
     * SQLite key: message_case_not_grouped
     * [en] The case was not grouped with the model '{0}'
     * [de] Der Fall wurde mit dem Groupermodel {0} noch nicht gegroupt</pre>
     * @param pParams placeholder replacements
     * @return [en] The case was not grouped with the model '{0}', [de] Der Fall wurde mit dem Groupermodel {0} noch nicht gegroupt
     */
    public static String getMessageCaseNotGrouped(final Object... pParams) {
        return get(MESSAGE_CASE_NOT_GROUPED, pParams).value;
    }

    /**
     * <pre>MIDWIFE
     * SQLite key: midwife
     * [en] Midwife
     * [de] Hebamme</pre>
     * @return [en] Midwife, [de] Hebamme
     */
    public static String getMidwife() {
        return get(MIDWIFE).value;
    }

    /**
     * <pre>MODE_OF_ADMISSION
     * SQLite key: modeofadmission
     * [en] Mode of Admission
     * [de] Erbringungsart</pre>
     * @return [en] Mode of Admission, [de] Erbringungsart
     */
    public static String getModeOfAdmission() {
        return get(MODE_OF_ADMISSION).value;
    }

    /**
     * <pre>MODE_OF_ADMISSION_DEPARTMENT
     * SQLite key: modeofadmission_department
     * [en] Departmenttype
     * [de] Abteilungstyp</pre>
     * @return [en] Departmenttype, [de] Abteilungstyp
     */
    public static String getModeOfAdmissionDepartment() {
        return get(MODE_OF_ADMISSION_DEPARTMENT).value;
    }

    /**
     * <pre>MODIFICATION_DATE
     * SQLite key: modificationdate
     * [en] Modification Date
     * [de] Änderungsdatum</pre>
     * @return [en] Modification Date, [de] Änderungsdatum
     */
    public static String getModificationDate() {
        return get(MODIFICATION_DATE).value;
    }

    /**
     * <pre>MODIFIED_FROM
     * SQLite key: modifiedfrom
     * [en] from {0}
     * [de] von {0}</pre>
     * ATTENTION this value ('from {0}') seems to be also defined under the key CREATED_FROM!
     * @param pParams placeholder replacements
     * @return [en] from {0}, [de] von {0}
     */
    public static String getModifiedFrom(final Object... pParams) {
        return get(MODIFIED_FROM, pParams).value;
    }

    /**
     * <pre>MODIFIED_ON
     * SQLite key: modifiedon
     * [en] Modified on {0}
     * [de] Geändert am {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Modified on {0}, [de] Geändert am {0}
     */
    public static String getModifiedOn(final Object... pParams) {
        return get(MODIFIED_ON, pParams).value;
    }

    /**
     * <pre>MS_EXCEL_NOT_FOUND
     * SQLite key: msexcelnotfound
     * [en] Microsoft Excel was not found!
     * [de] Microsoft Excel wurde nicht gefunden!</pre>
     * @return [en] Microsoft Excel was not found!, [de] Microsoft Excel wurde nicht gefunden!
     */
    public static String getMsExcelNotFound() {
        return get(MS_EXCEL_NOT_FOUND).value;
    }

    /**
     * <pre>MS_EXCEL_VERSION
     * SQLite key: msexcelversion
     * [en] The Microsoft Excel Version
     * [de] Die Microsoft Excel Version</pre>
     * @return [en] The Microsoft Excel Version, [de] Die Microsoft Excel Version
     */
    public static String getMsExcelVersion() {
        return get(MS_EXCEL_VERSION).value;
    }

    /**
     * <pre>MS_OFFICE_DISABLED
     * SQLite key: msofficedisabled
     * [en] Ms Office was deactivated, it is out of use now!
     * [de] Die Verwendung von Microsoft Office wurde deaktiviert!</pre>
     * @return [en] Ms Office was deactivated, it is out of use now!, [de] Die Verwendung von Microsoft Office wurde deaktiviert!
     */
    public static String getMsOfficeDisabled() {
        return get(MS_OFFICE_DISABLED).value;
    }

    /**
     * <pre>MS_OFFICE_NOT_FOUND
     * SQLite key: msofficenotfound
     * [en] Microsoft Office was not found!
     * [de] Es wurde keine Office-Installation gefunden</pre>
     * @return [en] Microsoft Office was not found!, [de] Es wurde keine Office-Installation gefunden
     */
    public static String getMsOfficeNotFound() {
        return get(MS_OFFICE_NOT_FOUND).value;
    }

    /**
     * <pre>MS_OFFICE_VERSION
     * SQLite key: msofficeversion
     * [en] The Microsoft Office Version
     * [de] Die Microsoft Office Version</pre>
     * @return [en] The Microsoft Office Version, [de] Die Microsoft Office Version
     */
    public static String getMsOfficeVersion() {
        return get(MS_OFFICE_VERSION).value;
    }

    /**
     * <pre>MS_OUTLOOK_NOT_FOUND
     * SQLite key: msoutlooknotfound
     * [en] Microsoft Outlook was nou found!
     * [de] Microsoft Outlook wurde nicht gefunden!</pre>
     * @return [en] Microsoft Outlook was nou found!, [de] Microsoft Outlook wurde nicht gefunden!
     */
    public static String getMsOutlookNotFound() {
        return get(MS_OUTLOOK_NOT_FOUND).value;
    }

    /**
     * <pre>MS_OUTLOOK_VERSION
     * SQLite key: msoutlookversion
     * [en] The Microsoft Outlook Version
     * [de] Die Microsoft Outlook Version</pre>
     * @return [en] The Microsoft Outlook Version, [de] Die Microsoft Outlook Version
     */
    public static String getMsOutlookVersion() {
        return get(MS_OUTLOOK_VERSION).value;
    }

    /**
     * <pre>MS_WORD_NOT_FOUND
     * SQLite key: mswordnotfound
     * [en] Microsoft Word was not found!
     * [de] Microsoft Word wurde nicht gefunden!</pre>
     * @return [en] Microsoft Word was not found!, [de] Microsoft Word wurde nicht gefunden!
     */
    public static String getMsWordNotFound() {
        return get(MS_WORD_NOT_FOUND).value;
    }

    /**
     * <pre>MS_WORD_VERSION
     * SQLite key: mswordversion
     * [en] The Microsoft Word Version
     * [de] Die Microsoft Word Version</pre>
     * @return [en] The Microsoft Word Version, [de] Die Microsoft Word Version
     */
    public static String getMsWordVersion() {
        return get(MS_WORD_VERSION).value;
    }

    /**
     * <pre>MSG_CACHE_ALREADY_CLEAR
     * SQLite key: msg_cache_already_clear
     * [en] Cache ist bereits geleert
     * [de] Cache ist bereits geleert</pre>
     * @return [en] Cache ist bereits geleert, [de] Cache ist bereits geleert
     */
    public static String getMsgCacheAlreadyClear() {
        return get(MSG_CACHE_ALREADY_CLEAR).value;
    }

    /**
     * <pre>MSG_CLEAR_CACHE
     * SQLite key: msg_clear_cache
     * [en] Cache wurde erfolgreich geleert!Entfernte Einträge:
     * [de] Cache wurde erfolgreich geleert!Entfernte Einträge:</pre>
     * @return [en] Cache wurde erfolgreich geleert!Entfernte Einträge:, [de] Cache wurde erfolgreich geleert!Entfernte Einträge:
     */
    public static String getMsgClearCache() {
        return get(MSG_CLEAR_CACHE).value;
    }

    /**
     * <pre>MSG_NO_RIGHT_BLANK
     * SQLite key: msg_no_right_blank
     * [en] You do not have right to {0} any {1}
     * [de] Sie haben keine Berechtigung, eine {0} zu {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] You do not have right to {0} any {1}, [de] Sie haben keine Berechtigung, eine {0} zu {1}
     */
    public static String getMsgNoRightBlank(final Object... pParams) {
        return get(MSG_NO_RIGHT_BLANK, pParams).value;
    }

    /**
     * <pre>MSG_NO_RIGHT_OTHER_BLANK
     * SQLite key: msg_no_right_other_blank
     * [en] You do not have right to {0} any {1} from another user
     * [de] Sie haben keine Berechtigung, eine {0} anderer Nutzer zu {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] You do not have right to {0} any {1} from another user, [de] Sie haben keine Berechtigung, eine {0} anderer Nutzer zu {1}
     */
    public static String getMsgNoRightOtherBlank(final Object... pParams) {
        return get(MSG_NO_RIGHT_OTHER_BLANK, pParams).value;
    }

    /**
     * <pre>NEGOTIABLE
     * SQLite key: negotiable
     * [en] Negotiable
     * [de] Verhandelbar</pre>
     * @return [en] Negotiable, [de] Verhandelbar
     */
    public static String getNegotiable() {
        return get(NEGOTIABLE).value;
    }

    /**
     * <pre>NEW_RULE
     * SQLite key: new_rule
     * [en] nnew rule
     * [de] neue Regel</pre>
     * @return [en] nnew rule, [de] neue Regel
     */
    public static String getNewRule() {
        return get(NEW_RULE).value;
    }

    /**
     * <pre>NEW_RULE_TABLE
     * SQLite key: new_rule_table
     * [en] new rule table
     * [de] neue Regeltabelle</pre>
     * @return [en] new rule table, [de] neue Regeltabelle
     */
    public static String getNewRuleTable() {
        return get(NEW_RULE_TABLE).value;
    }

    /**
     * <pre>NEW_RULE_TYPE
     * SQLite key: new_rule_type
     * [en] new rule type
     * [de] neuer Regeltyp</pre>
     * @return [en] new rule type, [de] neuer Regeltyp
     */
    public static String getNewRuleType() {
        return get(NEW_RULE_TYPE).value;
    }

    /**
     * <pre>NO_ADMISSION_CAUSE_FOUND
     * SQLite key: no_admission_cause_found
     * [en] Admission cause is not set
     * [de] Aufnahmeanlass ist nicht gesetzt</pre>
     * @return [en] Admission cause is not set, [de] Aufnahmeanlass ist nicht gesetzt
     */
    public static String getNoAdmissionCauseFound() {
        return get(NO_ADMISSION_CAUSE_FOUND).value;
    }

    /**
     * <pre>NO_ADMISSION_DATE_FOUND
     * SQLite key: no_admission_date_found
     * [en] Admission date is not set
     * [de] Aufnahmedatum des Falles ist nicht gesetzt</pre>
     * @return [en] Admission date is not set, [de] Aufnahmedatum des Falles ist nicht gesetzt
     */
    public static String getNoAdmissionDateFound() {
        return get(NO_ADMISSION_DATE_FOUND).value;
    }

    /**
     * <pre>NO_ADMISSION_MODE_FOUND
     * SQLite key: no_admission_mode_found
     * [en] Admission mode is not set
     * [de] Erbringungsart des DRG - Falles wurde ist nicht gesetzt</pre>
     * @return [en] Admission mode is not set, [de] Erbringungsart des DRG - Falles wurde ist nicht gesetzt
     */
    public static String getNoAdmissionModeFound() {
        return get(NO_ADMISSION_MODE_FOUND).value;
    }

    /**
     * <pre>NO_ADMISSION_REASON_34_FOUND
     * SQLite key: no_admission_reason34_found
     * [en] Admission reason 34 is not set
     * [de] Aufnahmegrund 34 ist nicht gesetzt</pre>
     * @return [en] Admission reason 34 is not set, [de] Aufnahmegrund 34 ist nicht gesetzt
     */
    public static String getNoAdmissionReason34Found() {
        return get(NO_ADMISSION_REASON_34_FOUND).value;
    }

    /**
     * <pre>NO_ADMISSION_REASON_FOUND
     * SQLite key: no_admission_reason_found
     * [en] Admission reason 12 is not set
     * [de] Aufnahmegrund 12 ist nicht gesetzt</pre>
     * @return [en] Admission reason 12 is not set, [de] Aufnahmegrund 12 ist nicht gesetzt
     */
    public static String getNoAdmissionReasonFound() {
        return get(NO_ADMISSION_REASON_FOUND).value;
    }

    /**
     * <pre>NO_CASE_DETAILS_FOUND
     * SQLite key: no_case_details_found
     * [en] Case details is not found
     * [de] Falleigenschaften des Falles sind nicht vorhanden</pre>
     * @return [en] Case details is not found, [de] Falleigenschaften des Falles sind nicht vorhanden
     */
    public static String getNoCaseDetailsFound() {
        return get(NO_CASE_DETAILS_FOUND).value;
    }

    /**
     * <pre>NO_CASE_RESOLVES
     * SQLite key: nocaseresolves
     * [en] No Case Resolves
     * [de] Keine Prüfregelanschläge</pre>
     * @return [en] No Case Resolves, [de] Keine Prüfregelanschläge
     */
    public static String getNoCaseResolves() {
        return get(NO_CASE_RESOLVES).value;
    }

    /**
     * <pre>NO_CATEGORY
     * SQLite key: no_category
     * [en] No category
     * [de] Keine Kategorie</pre>
     * @return [en] No category, [de] Keine Kategorie
     */
    public static String getNoCategory() {
        return get(NO_CATEGORY).value;
    }

    /**
     * <pre>NO_DEPARMENT_ADMMISION_DATE
     * SQLite key: no_deparment_admmision_date
     * [en] Admission date of the not admission department is not set
     * [de] Aufnahmedatum der nicht aufnehmenden Bewegung ist nicht gesetzt</pre>
     * @return [en] Admission date of the not admission department is not set, [de] Aufnahmedatum der nicht aufnehmenden Bewegung ist nicht gesetzt
     */
    public static String getNoDeparmentAdmmisionDate() {
        return get(NO_DEPARMENT_ADMMISION_DATE).value;
    }

    public static Translation getNoDeparmentAdmmisionDateObj() {
        return get(NO_DEPARMENT_ADMMISION_DATE);
    }

    /**
     * <pre>NO_DEPARTMENT_CODED
     * SQLite key: no_department_coded
     * [en] There are no departments in case coded
     * [de] Im Fall sind keine Bewegungen gesetzt</pre>
     * @return [en] There are no departments in case coded, [de] Im Fall sind keine Bewegungen gesetzt
     */
    public static String getNoDepartmentCoded() {
        return get(NO_DEPARTMENT_CODED).value;
    }

    /**
     * <pre>NO_DEPARTMENT_DISCHARGE_DATE
     * SQLite key: no_department_discharge_date
     * [en] Discharge date of the not discharge department is not set
     * [de] Entlassungsdatum der nicht entlassenden Bewegung ist nicht gesetzt</pre>
     * @return [en] Discharge date of the not discharge department is not set, [de] Entlassungsdatum der nicht entlassenden Bewegung ist nicht gesetzt
     */
    public static String getNoDepartmentDischargeDate() {
        return get(NO_DEPARTMENT_DISCHARGE_DATE).value;
    }

    public static Translation getNoDepartmentDischargeDateObj() {
        return get(NO_DEPARTMENT_DISCHARGE_DATE);
    }

    /**
     * <pre>NO_DISCHARGE_DATE_FOUND
     * SQLite key: no_discharge_date_found
     * [en] Discharge date is not set
     * [de] Entlassungsdatum des Falles ist nicht gesetzt</pre>
     * @return [en] Discharge date is not set, [de] Entlassungsdatum des Falles ist nicht gesetzt
     */
    public static String getNoDischargeDateFound() {
        return get(NO_DISCHARGE_DATE_FOUND).value;
    }

    /**
     * <pre>NO_DISCHARGE_REASON_3_FOUND
     * SQLite key: no_discharge_reason3_found
     * [en] Discharge reason 3 is not set
     * [de] Entlassungsgrund 3 des Falles ist nicht gesetzt</pre>
     * @return [en] Discharge reason 3 is not set, [de] Entlassungsgrund 3 des Falles ist nicht gesetzt
     */
    public static String getNoDischargeReason3Found() {
        return get(NO_DISCHARGE_REASON_3_FOUND).value;
    }

    /**
     * <pre>NO_DISCHARGE_REASON_FOUND
     * SQLite key: no_discharge_reason_found
     * [en] Discharge reason 12 is not set
     * [de] Entlassungsgrund 12 des Falles ist nicht gesetzt</pre>
     * @return [en] Discharge reason 12 is not set, [de] Entlassungsgrund 12 des Falles ist nicht gesetzt
     */
    public static String getNoDischargeReasonFound() {
        return get(NO_DISCHARGE_REASON_FOUND).value;
    }

    /**
     * <pre>NO_HOSPITAL_CASE
     * SQLite key: no_hospital_case
     * [en] Hospital case is null
     * [de] es wurde kein Fall an Grouper übergeben</pre>
     * @return [en] Hospital case is null, [de] es wurde kein Fall an Grouper übergeben
     */
    public static String getNoHospitalCase() {
        return get(NO_HOSPITAL_CASE).value;
    }

    /**
     * <pre>NO_RULE_TYPE_FOUND_4_RULE
     * SQLite key: no_rule_type_found_4_rule
     * [de] in der XML - Regel ist Regeltype definiert, der micht in DB gefunden ist und micht importiert wurde</pre>
     * @return [de] in der XML - Regel ist Regeltype definiert, der micht in DB gefunden ist und micht importiert wurde
     */
    public static String getNoRuleTypeFound4Rule() {
        return get(NO_RULE_TYPE_FOUND_4_RULE).value;
    }

    /**
     * <pre>NO_RULE_TYPE_FOUND_4_RULE_VALIDATION
     * SQLite key: no_rule_type_found_4_rule_validation
     * [en] Rules type is not fount in the import file. It will be created by import
     * [de] In der zu importierenden Datei ist der Regeltyp nicht vorhanden. Dieser wird beim Import angelegt</pre>
     * @return [en] Rules type is not fount in the import file. It will be created by import, [de] In der zu importierenden Datei ist der Regeltyp nicht vorhanden. Dieser wird beim Import angelegt
     */
    public static String getNoRuleTypeFound4RuleValidation() {
        return get(NO_RULE_TYPE_FOUND_4_RULE_VALIDATION).value;
    }

    /**
     * <pre>NO_RULES_4_IMPORT_FOUND
     * SQLite key: no_rules_4_import_found
     * [en] There are no rules in import file
     * [de] die Datei beinhaltet keine Regeln</pre>
     * @return [en] There are no rules in import file, [de] die Datei beinhaltet keine Regeln
     */
    public static String getNoRules4ImportFound() {
        return get(NO_RULES_4_IMPORT_FOUND).value;
    }

    /**
     * <pre>NO_SEARCH_RESULTS
     * SQLite key: nosearchresults
     * [en] No search results
     * [de] keine Suchergebnisse</pre>
     * @return [en] No search results, [de] keine Suchergebnisse
     */
    public static String getNoSearchResults() {
        return get(NO_SEARCH_RESULTS).value;
    }

    /**
     * <pre>NO_TABLE_FOUND
     * SQLite key: no_table_found
     * [en] rule table is not found and can not be imported from file
     * [de] Die in der Regellogik benutzte Tabelle ist nicht in der XML und nicht in DB gefunden</pre>
     * @return [en] rule table is not found and can not be imported from file, [de] Die in der Regellogik benutzte Tabelle ist nicht in der XML und nicht in DB gefunden
     */
    public static String getNoTableFound() {
        return get(NO_TABLE_FOUND).value;
    }

    /**
     * <pre>NO_TABLE_FOUND_VALIDATION
     * SQLite key: no_table_found_validation
     * [de] Die in der Regellogik benutzte Tabelle ist  der XML nicht vorhanden</pre>
     * @return [de] Die in der Regellogik benutzte Tabelle ist  der XML nicht vorhanden
     */
    public static String getNoTableFoundValidation() {
        return get(NO_TABLE_FOUND_VALIDATION).value;
    }

    /**
     * <pre>NO_TABLE_IN_XML_BUT_IN_DB_FOUND
     * SQLite key: no_table_in_xml_but_in_db_found
     * [en] rule table is not found in xml but in Pool
     * [de] Die in der Regellogik benutzte Tabelle ist nicht in der XML gefunden, aber in DB vorhanden</pre>
     * @return [en] rule table is not found in xml but in Pool, [de] Die in der Regellogik benutzte Tabelle ist nicht in der XML gefunden, aber in DB vorhanden
     */
    public static String getNoTableInXmlButInDbFound() {
        return get(NO_TABLE_IN_XML_BUT_IN_DB_FOUND).value;
    }

    /**
     * <pre>NOT_DEFINED_CASE_TYPE
     * SQLite key: not_defined_case_type
     * [en] Undefined type of the hospital case
     * [de] Typ des Falles ist unbekannt(DRG oder PEPP)</pre>
     * @return [en] Undefined type of the hospital case, [de] Typ des Falles ist unbekannt(DRG oder PEPP)
     */
    public static String getNotDefinedCaseType() {
        return get(NOT_DEFINED_CASE_TYPE).value;
    }

    /**
     * <pre>NUMBER
     * SQLite key: number
     * [en] Number {0}
     * [de] Nummer {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Number {0}, [de] Nummer {0}
     */
    public static String getNumber(final Object... pParams) {
        return get(NUMBER, pParams).value;
    }

    /**
     * <pre>NUMBER_FORMAT_DECIMAL
     * SQLite key: numberformat_decimal
     * [en] .
     * [de] ,</pre>
     * @return [en] ., [de] ,
     */
    public static String getNumberFormatDecimal() {
        return get(NUMBER_FORMAT_DECIMAL).value;
    }

    /**
     * <pre>OPEN_CASE
     * SQLite key: opencase
     * [en] Open case
     * [de] Fall öffnen</pre>
     * ATTENTION this value ('Open case') seems to be also defined under the key WORKING_LIST_CONTEXT_MENU_OPEN!
     * @return [en] Open case, [de] Fall öffnen
     */
    public static String getOpenCase() {
        return get(OPEN_CASE).value;
    }

    /**
     * <pre>OPEN_CASES
     * SQLite key: opencases
     * [en] Open cases
     * [de] Geöffnete Fälle</pre>
     * @return [en] Open cases, [de] Geöffnete Fälle
     */
    public static String getOpenCases() {
        return get(OPEN_CASES).value;
    }

    /**
     * <pre>OPEN_PROCESSES
     * SQLite key: openprocesses
     * [en] Open processes
     * [de] Geöffnete Vorgänge</pre>
     * @return [en] Open processes, [de] Geöffnete Vorgänge
     */
    public static String getOpenProcesses() {
        return get(OPEN_PROCESSES).value;
    }

    /**
     * <pre>OPS_PLACEHOLDER
     * SQLite key: ops_placeholder
     * [en] No procedures added
     * [de] Keine Prozeduren hinzugefügt</pre>
     * @return [en] No procedures added, [de] Keine Prozeduren hinzugefügt
     */
    public static String getOpsPlaceholder() {
        return get(OPS_PLACEHOLDER).value;
    }

    /**
     * <pre>OPSCODE
     * SQLite key: opscode
     * [en] Procedure
     * [de] Prozedur</pre>
     * @return [en] Procedure, [de] Prozedur
     */
    public static String getOPSCode() {
        return get(OPSCODE).value;
    }

    /**
     * <pre>OPSCODE_VALIDATION
     * SQLite key: opscode_validation
     * [en] Invalid OPS code. Please enter a valid entry!
     * [de] Ungültiger OPS Code. Bitte geben Sie einen gültigen Eintrag ein!</pre>
     * @return [en] Invalid OPS code. Please enter a valid entry!, [de] Ungültiger OPS Code. Bitte geben Sie einen gültigen Eintrag ein!
     */
    public static String getOPSCodeValidation() {
        return get(OPSCODE_VALIDATION).value;
    }

    /**
     * <pre>ORGAN_BODY
     * SQLite key: organ_body
     * [en] Body
     * [de] ganzer Körper</pre>
     * @return [en] Body, [de] ganzer Körper
     */
    public static String getOrganBody() {
        return get(ORGAN_BODY).value;
    }

    /**
     * <pre>ORGAN_BREATHING
     * SQLite key: organ_breathing
     * [en] Breathing
     * [de] Atmung</pre>
     * @return [en] Breathing, [de] Atmung
     */
    public static String getOrganBreathing() {
        return get(ORGAN_BREATHING).value;
    }

    /**
     * <pre>ORGAN_CARDIOVASCULA
     * SQLite key: organ_cardiovascula
     * [en] Cardiovascula
     * [de] Herz-Kreislauf</pre>
     * @return [en] Cardiovascula, [de] Herz-Kreislauf
     */
    public static String getOrganCardiovascula() {
        return get(ORGAN_CARDIOVASCULA).value;
    }

    /**
     * <pre>ORGAN_ENDOCRINE
     * SQLite key: organ_endocrine
     * [en] Endocrine
     * [de] Endokrin</pre>
     * @return [en] Endocrine, [de] Endokrin
     */
    public static String getOrganEndocrine() {
        return get(ORGAN_ENDOCRINE).value;
    }

    /**
     * <pre>ORGAN_ENT
     * SQLite key: organ_ent
     * [en] Ent
     * [de] HNO</pre>
     * @return [en] Ent, [de] HNO
     */
    public static String getOrganEnt() {
        return get(ORGAN_ENT).value;
    }

    /**
     * <pre>ORGAN_EYES
     * SQLite key: organ_eyes
     * [en] Eyes
     * [de] Augen</pre>
     * @return [en] Eyes, [de] Augen
     */
    public static String getOrganEyes() {
        return get(ORGAN_EYES).value;
    }

    /**
     * <pre>ORGAN_GASTROINTESTINAL
     * SQLite key: organ_gastrointestinal
     * [en] Gastrointestinal
     * [de] Gastrointestinal</pre>
     * @return [en] Gastrointestinal, [de] Gastrointestinal
     */
    public static String getOrganGastrointestinal() {
        return get(ORGAN_GASTROINTESTINAL).value;
    }

    /**
     * <pre>ORGAN_GYNECOLOGY
     * SQLite key: organ_gynecology
     * [en] Gynecology
     * [de] Gynäkologie</pre>
     * @return [en] Gynecology, [de] Gynäkologie
     */
    public static String getOrganGynecology() {
        return get(ORGAN_GYNECOLOGY).value;
    }

    /**
     * <pre>ORGAN_HEMATOLOGY
     * SQLite key: organ_hematology
     * [en] Hematology
     * [de] Hämatologie</pre>
     * @return [en] Hematology, [de] Hämatologie
     */
    public static String getOrganHematology() {
        return get(ORGAN_HEMATOLOGY).value;
    }

    /**
     * <pre>ORGAN_KIDNEY
     * SQLite key: organ_kidney
     * [en] Kidney
     * [de] Niere</pre>
     * @return [en] Kidney, [de] Niere
     */
    public static String getOrganKidney() {
        return get(ORGAN_KIDNEY).value;
    }

    /**
     * <pre>ORGAN_MUSCULOSKELETAL
     * SQLite key: organ_musculoskeletal
     * [en] Musculoskeletal
     * [de] Muskel-Skelett</pre>
     * @return [en] Musculoskeletal, [de] Muskel-Skelett
     */
    public static String getOrganMusculoskeletal() {
        return get(ORGAN_MUSCULOSKELETAL).value;
    }

    /**
     * <pre>ORGAN_NEUROLOGY
     * SQLite key: organ_neurology
     * [en] Neurology
     * [de] Neurologie</pre>
     * @return [en] Neurology, [de] Neurologie
     */
    public static String getOrganNeurology() {
        return get(ORGAN_NEUROLOGY).value;
    }

    /**
     * <pre>ORGAN_PSYCHOSOCIAL
     * SQLite key: organ_psychosocial
     * [en] Psychosocial
     * [de] Psychosozial</pre>
     * @return [en] Psychosocial, [de] Psychosozial
     */
    public static String getOrganPsychosocial() {
        return get(ORGAN_PSYCHOSOCIAL).value;
    }

    /**
     * <pre>ORGAN_SKIN
     * SQLite key: organ_skin
     * [en] Skin
     * [de] Haut</pre>
     * @return [en] Skin, [de] Haut
     */
    public static String getOrganSkin() {
        return get(ORGAN_SKIN).value;
    }

    /**
     * <pre>ORGAN_TEETH
     * SQLite key: organ_teeth
     * [en] Teeth
     * [de] Zähne</pre>
     * @return [en] Teeth, [de] Zähne
     */
    public static String getOrganTeeth() {
        return get(ORGAN_TEETH).value;
    }

    /**
     * <pre>ORGAN_URINARY_ORGANS
     * SQLite key: organ_urinaryorgans
     * [en] UrinaryOrgans
     * [de] Genital/Harnorgane</pre>
     * @return [en] UrinaryOrgans, [de] Genital/Harnorgane
     */
    public static String getOrganUrinaryOrgans() {
        return get(ORGAN_URINARY_ORGANS).value;
    }

    /**
     * <pre>ORIGIN_HOSPITAL
     * SQLite key: originhospital
     * [en] Origin Hospital Identifier
     * [de] IKZ einweis. KH (IKZ einweis. KH)</pre>
     * @return [en] Origin Hospital Identifier, [de] IKZ einweis. KH (IKZ einweis. KH)
     */
    public static String getOriginHospital() {
        return get(ORIGIN_HOSPITAL).value;
    }

    public static Translation getOriginHospitalObj() {
        return get(ORIGIN_HOSPITAL);
    }

    /**
     * <pre>PATIENT
     * SQLite key: patient
     * [en] Patient
     * [de] Patient</pre>
     * ATTENTION this value ('Patient') seems to be also defined under the key EVENT_NAME_PATIENT!
     * @return [en] Patient, [de] Patient
     */
    public static String getPatient() {
        return get(PATIENT).value;
    }

    /**
     * <pre>PATIENT_CASES
     * SQLite key: patientcases
     * [en] Patient cases
     * [de] Patientenfälle</pre>
     * @return [en] Patient cases, [de] Patientenfälle
     */
    public static String getPatientCases() {
        return get(PATIENT_CASES).value;
    }

    /**
     * <pre>PATIENT_DATA
     * SQLite key: patientdata
     * [en] Patient Data
     * [de] Patientendaten</pre>
     * @return [en] Patient Data, [de] Patientendaten
     */
    public static String getPatientData() {
        return get(PATIENT_DATA).value;
    }

    /**
     * <pre>PATIENT_DETAILS
     * SQLite key: patientdetails
     * [en] Patient Details
     * [de] Patient Einzelheiten</pre>
     * @return [en] Patient Details, [de] Patient Einzelheiten
     */
    public static String getPatientDetails() {
        return get(PATIENT_DETAILS).value;
    }

    /**
     * <pre>PATIENT_FIRST_NAME
     * SQLite key: patientfirstname
     * [en] First Name
     * [de] Vorname</pre>
     * ATTENTION this value ('First Name') seems to be also defined under the key FIRST_NAME!
     * @return [en] First Name, [de] Vorname
     */
    public static String getPatientFirstName() {
        return get(PATIENT_FIRST_NAME).value;
    }

    /**
     * <pre>PATIENT_FULL_NAME
     * SQLite key: patientfullname
     * [en] Family name, Forename
     * [de] Name, Vorname</pre>
     * @return [en] Family name, Forename, [de] Name, Vorname
     */
    public static String getPatientFullName() {
        return get(PATIENT_FULL_NAME).value;
    }

    /**
     * <pre>PATIENT_IGNORED
     * SQLite key: patient_ignored
     * [en] Patient numbers ({0})  in the first step are ignored because this case is assigned to other patient, PatientNumber ({1})
     * [de] Patienten-Daten (Patienten-Nummer {0}) im ersten Schritt, werden ignoriert, da dieser Fall einem anderen Patienten zugeordnet ist, Patienten-Nummer ({1})</pre>
     * @param pParams placeholder replacements
     * @return [en] Patient numbers ({0})  in the first step are ignored because this case is assigned to other patient, PatientNumber ({1}), [de] Patienten-Daten (Patienten-Nummer {0}) im ersten Schritt, werden ignoriert, da dieser Fall einem anderen Patienten zugeordnet ist, Patienten-Nummer ({1})
     */
    public static String getPatientIgnored(final Object... pParams) {
        return get(PATIENT_IGNORED, pParams).value;
    }

    /**
     * <pre>PATIENT_LAST_NAME
     * SQLite key: patientlastname
     * [en] Last Name
     * [de] Nachname</pre>
     * @return [en] Last Name, [de] Nachname
     */
    public static String getPatientLastName() {
        return get(PATIENT_LAST_NAME).value;
    }

    /**
     * <pre>PATIENT_NAME
     * SQLite key: patientname
     * [en] Family name and forename of Patient (Patient)
     * [de] Patientenname (Patient)</pre>
     * @return [en] Family name and forename of Patient (Patient), [de] Patientenname (Patient)
     */
    public static String getPatientName() {
        return get(PATIENT_NAME).value;
    }

    public static Translation getPatientNameObj() {
        return get(PATIENT_NAME);
    }

    /**
     * <pre>PATIENT_NUMBER
     * SQLite key: patientnumber
     * [en] Patient Number (Pat.No.)
     * [de] Patientennummer (Pat.-Nr.)</pre>
     * @return [en] Patient Number (Pat.No.), [de] Patientennummer (Pat.-Nr.)
     */
    public static String getPatientNumber() {
        return get(PATIENT_NUMBER).value;
    }

    public static Translation getPatientNumberObj() {
        return get(PATIENT_NUMBER);
    }

    /**
     * <pre>PATIENT_SEX_FEMALE
     * SQLite key: patientsexfemale
     * [en] Female
     * [de] weiblich</pre>
     * ATTENTION this value ('female') seems to be also defined under the key GENDER_FEMALE!
     * @return [en] Female, [de] weiblich
     */
    public static String getPatientSexFemale() {
        return get(PATIENT_SEX_FEMALE).value;
    }

    /**
     * <pre>PATIENT_SEX_MALE
     * SQLite key: patientsexmale
     * [en] Male
     * [de] männlich</pre>
     * ATTENTION this value ('male') seems to be also defined under the key GENDER_MALE!
     * @return [en] Male, [de] männlich
     */
    public static String getPatientSexMale() {
        return get(PATIENT_SEX_MALE).value;
    }

    /**
     * <pre>PATIENT_SEX_UNDEFINED
     * SQLite key: patientsexundefined
     * [de] unbestimmt</pre>
     * @return [de] unbestimmt
     */
    public static String getPatientSexUndefined() {
        return get(PATIENT_SEX_UNDEFINED).value;
    }

    /**
     * <pre>PATIENT_SEX_UNKNOWN
     * SQLite key: patientsexunknown
     * [en] Unknown
     * [de] unbekannt</pre>
     * ATTENTION this value ('unknown') seems to be also defined under the key GENDER_UNKNOWN!
     * @return [en] Unknown, [de] unbekannt
     */
    public static String getPatientSexUnknown() {
        return get(PATIENT_SEX_UNKNOWN).value;
    }

    /**
     * <pre>PATIENT_WEIGHT_MEASURE_GRAM
     * SQLite key: patientweightmeasuregram
     * [en] Gram
     * [de] Gramm</pre>
     * @return [en] Gram, [de] Gramm
     */
    public static String getPatientWeightMeasureGram() {
        return get(PATIENT_WEIGHT_MEASURE_GRAM).value;
    }

    /**
     * <pre>PAY_CLASS
     * SQLite key: payclass
     * [en] PayClass
     * [de] Vergütungsklasse</pre>
     * @return [en] PayClass, [de] Vergütungsklasse
     */
    public static String getPayClass() {
        return get(PAY_CLASS).value;
    }

    /**
     * <pre>PAY_GRADE
     * SQLite key: paygrade
     * [en] PayGrade
     * [de] Vergütungsstufe</pre>
     * @return [en] PayGrade, [de] Vergütungsstufe
     */
    public static String getPayGrade() {
        return get(PAY_GRADE).value;
    }

    /**
     * <pre>PCCL
     * SQLite key: pccl
     * [en] PCCL
     * [de] PCCL</pre>
     * ATTENTION this value ('PCCL') seems to be also defined under the key DIALOG_BATCH_GROUPING_PCCL! this value ('PCCL') seems to be also defined under the key RULES_TXT_PCCL_DIS!
     * @return [en] PCCL, [de] PCCL
     */
    public static String getPCCL() {
        return get(PCCL).value;
    }

    /**
     * <pre>PEPP
     * SQLite key: pepp
     * [en] PEPP (PEPP)
     * [de] PEPP (PEPP)</pre>
     * @return [en] PEPP (PEPP), [de] PEPP (PEPP)
     */
    public static String getPEPP() {
        return get(PEPP).value;
    }

    public static Translation getPEPPObj() {
        return get(PEPP);
    }

    /**
     * <pre>PEPP_CATALOG
     * SQLite key: pepp_catalog
     * [en] PEPP catalog
     * [de] PEPP Katalog</pre>
     * @return [en] PEPP catalog, [de] PEPP Katalog
     */
    public static String getPeppCatalog() {
        return get(PEPP_CATALOG).value;
    }

    /**
     * <pre>PEPP_CATALOG_LAYOUT
     * SQLite key: pepp_catalog_layout
     * [en] Costweight full {0} for {1} days, equals {2} per day
     * [de] Kostengewicht gesamt {0} für {1} Tage, entspr. {2} pro Tag</pre>
     * @param pParams placeholder replacements
     * @return [en] Costweight full {0} for {1} days, equals {2} per day, [de] Kostengewicht gesamt {0} für {1} Tage, entspr. {2} pro Tag
     */
    public static String getPeppCatalogLayout(final Object... pParams) {
        return get(PEPP_CATALOG_LAYOUT, pParams).value;
    }

    /**
     * <pre>PEPP_COLUMN
     * SQLite key: pepp_column
     * [de] PEPP (PEPP)</pre>
     * @return [de] PEPP (PEPP)
     */
    public static String getPeppColumn() {
        return get(PEPP_COLUMN).value;
    }

    public static Translation getPeppColumnObj() {
        return get(PEPP_COLUMN);
    }

    /**
     * <pre>PEPP_PAY_TYPE_COMPENSATION_CLASS
     * SQLite key: pepp_paytype_compensationclass
     * [en] Compensation Class
     * [de] Vergütungsklasse</pre>
     * @return [en] Compensation Class, [de] Vergütungsklasse
     */
    public static String getPeppPayTypeCompensationClass() {
        return get(PEPP_PAY_TYPE_COMPENSATION_CLASS).value;
    }

    /**
     * <pre>PEPP_PAY_TYPE_COMPENSATION_LEVEL
     * SQLite key: pepp_paytype_compensationlevel
     * [en] Compensation Level
     * [de] Vergütungsstufe</pre>
     * @return [en] Compensation Level, [de] Vergütungsstufe
     */
    public static String getPeppPayTypeCompensationLevel() {
        return get(PEPP_PAY_TYPE_COMPENSATION_LEVEL).value;
    }

    /**
     * <pre>PEPP_TEXT
     * SQLite key: pepp_text
     * [en] PEPP-Text
     * [de] PEPP-Text</pre>
     * @return [en] PEPP-Text, [de] PEPP-Text
     */
    public static String getPeppText() {
        return get(PEPP_TEXT).value;
    }

    /**
     * <pre>PIA
     * SQLite key: pia
     * [en] PIA
     * [de] PIA</pre>
     * ATTENTION this value ('PIA') seems to be also defined under the key CASE_TYPE_PIA!
     * @return [en] PIA, [de] PIA
     */
    public static String getPIA() {
        return get(PIA).value;
    }

    /**
     * <pre>PLACE_OF_REG_BEFORE_BILLING
     * SQLite key: placeofreg_beforebilling
     * [en] Before Billing
     * [de] Bei Rechnungsstellung</pre>
     * @return [en] Before Billing, [de] Bei Rechnungsstellung
     */
    public static String getPlaceOfRegBeforeBilling() {
        return get(PLACE_OF_REG_BEFORE_BILLING).value;
    }

    /**
     * <pre>PLACE_OF_REG_REQUEST
     * SQLite key: placeofreg_request
     * [en] Request
     * [de] Bei Anfrage</pre>
     * ATTENTION this value ('Request') seems to be also defined under the key EVENT_NAME_REQUEST!
     * @return [en] Request, [de] Bei Anfrage
     */
    public static String getPlaceOfRegRequest() {
        return get(PLACE_OF_REG_REQUEST).value;
    }

    /**
     * <pre>PLACE_OF_REG_REQUEST_EXTENSION
     * SQLite key: placeofreg_requestextension
     * [en] Request Extension
     * [de] Anfrageerweiterung</pre>
     * @return [en] Request Extension, [de] Anfrageerweiterung
     */
    public static String getPlaceOfRegRequestExtension() {
        return get(PLACE_OF_REG_REQUEST_EXTENSION).value;
    }

    /**
     * <pre>PLACE_OF_REG_REQUEST_FINALISATION
     * SQLite key: placeofreg_requestfinalisation
     * [en] Request Finalisation
     * [de] Vorgangsabschluss</pre>
     * @return [en] Request Finalisation, [de] Vorgangsabschluss
     */
    public static String getPlaceOfRegRequestFinalisation() {
        return get(PLACE_OF_REG_REQUEST_FINALISATION).value;
    }

    /**
     * <pre>PLEASE_WAIT
     * SQLite key: pleasewait
     * [en] Please wait...
     * [de] Bitte warten...</pre>
     * @return [en] Please wait..., [de] Bitte warten...
     */
    public static String getPleaseWait() {
        return get(PLEASE_WAIT).value;
    }

    /**
     * <pre>PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE
     * SQLite key: preliminar_proceedins_answer_deadline
     * [de] Frist bis zur Antwort des Vorverfahrens, der Prüfanfrage (Frist Antwort)</pre>
     * @return [de] Frist bis zur Antwort des Vorverfahrens, der Prüfanfrage (Frist Antwort)
     */
    public static String getPreliminarProceedinsAnswerDeadline() {
        return get(PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE).value;
    }

    public static Translation getPreliminarProceedinsAnswerDeadlineObj() {
        return get(PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE);
    }

    /**
     * <pre>PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_DAYS
     * SQLite key: preliminar_proceedins_answer_deadline_days
     * [de] Tage bis Antwort Vorverfahren, Antwort Vorverf. (Antwort)</pre>
     * @return [de] Tage bis Antwort Vorverfahren, Antwort Vorverf. (Antwort)
     */
    public static String getPreliminarProceedinsAnswerDeadlineDays() {
        return get(PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_DAYS).value;
    }

    public static Translation getPreliminarProceedinsAnswerDeadlineDaysObj() {
        return get(PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_DAYS);
    }

    /**
     * <pre>PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_FROM
     * SQLite key: preliminar_proceedins_answer_deadline_from
     * [de] Frist Antwort von</pre>
     * @return [de] Frist Antwort von
     */
    public static String getPreliminarProceedinsAnswerDeadlineFrom() {
        return get(PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_FROM).value;
    }

    /**
     * <pre>PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_TO
     * SQLite key: preliminar_proceedins_answer_deadline_to
     * [de] Frist Antwort bis</pre>
     * @return [de] Frist Antwort bis
     */
    public static String getPreliminarProceedinsAnswerDeadlineTo() {
        return get(PRELIMINAR_PROCEEDINS_ANSWER_DEADLINE_TO).value;
    }

    /**
     * <pre>PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE
     * SQLite key: preliminar_proceedins_closed_deadline
     * [de] Frist bis Abschluss der MD-Prüfung (Frist MD-Abschl.)</pre>
     * @return [de] Frist bis Abschluss der MD-Prüfung (Frist MD-Abschl.)
     */
    public static String getPreliminarProceedinsClosedDeadline() {
        return get(PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE).value;
    }

    public static Translation getPreliminarProceedinsClosedDeadlineObj() {
        return get(PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE);
    }

    /**
     * <pre>PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_DAYS
     * SQLite key: preliminar_proceedins_closed_deadline_days
     * [de] Tage bis Abschluss MD-Prüfung (Abschluss MD)</pre>
     * @return [de] Tage bis Abschluss MD-Prüfung (Abschluss MD)
     */
    public static String getPreliminarProceedinsClosedDeadlineDays() {
        return get(PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_DAYS).value;
    }

    public static Translation getPreliminarProceedinsClosedDeadlineDaysObj() {
        return get(PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_DAYS);
    }

    /**
     * <pre>PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_FROM
     * SQLite key: preliminar_proceedins_closed_deadline_from
     * [de] Frist MD-Abschl. von</pre>
     * @return [de] Frist MD-Abschl. von
     */
    public static String getPreliminarProceedinsClosedDeadlineFrom() {
        return get(PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_FROM).value;
    }

    /**
     * <pre>PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_TO
     * SQLite key: preliminar_proceedins_closed_deadline_to
     * [de] Frist MD-Abschl. bis</pre>
     * @return [de] Frist MD-Abschl. bis
     */
    public static String getPreliminarProceedinsClosedDeadlineTo() {
        return get(PRELIMINAR_PROCEEDINS_CLOSED_DEADLINE_TO).value;
    }

    /**
     * <pre>PRIORITY_HIGH
     * SQLite key: priority_high
     * [en] high Priority
     * [de] hohe Priorität (Prio)</pre>
     * ATTENTION this value ('high Priority') seems to be also defined under the key REMINDER_HIGH_PRIORITY!
     * @return [en] high Priority, [de] hohe Priorität (Prio)
     */
    public static String getPriorityHigh() {
        return get(PRIORITY_HIGH).value;
    }

    public static Translation getPriorityHighObj() {
        return get(PRIORITY_HIGH);
    }

    /**
     * <pre>PROCEED
     * SQLite key: proceed
     * [en] Do you want to proceed? (Proceed?)
     * [de] Wollen sie fortfahren? (Fortfahren?)</pre>
     * @return [en] Do you want to proceed? (Proceed?), [de] Wollen sie fortfahren? (Fortfahren?)
     */
    public static String getProceed() {
        return get(PROCEED).value;
    }

    public static Translation getProceedObj() {
        return get(PROCEED);
    }

    /**
     * <pre>PROCESS_BASERATE_PEPP
     * SQLite key: process_baserate_pepp
     * [en] Used baserates for IKZ {0}
     * [de] Verwendete Basiswert für IKZ {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Used baserates for IKZ {0}, [de] Verwendete Basiswert für IKZ {0}
     */
    public static String getProcessBaseratePepp(final Object... pParams) {
        return get(PROCESS_BASERATE_PEPP, pParams).value;
    }

    /**
     * <pre>PROCESS_BASERATE_PEPP_VALID_FROM
     * SQLite key: process_baserate_pepp_validfrom
     * [en] valid From
     * [de] Gültig von</pre>
     * @return [en] valid From, [de] Gültig von
     */
    public static String getProcessBaseratePeppValidFrom() {
        return get(PROCESS_BASERATE_PEPP_VALID_FROM).value;
    }

    /**
     * <pre>PROCESS_BASERATE_PEPP_VALIDTO
     * SQLite key: process_baserate_pepp_validto
     * [en] valid to
     * [de] Gültig bis</pre>
     * @return [en] valid to, [de] Gültig bis
     */
    public static String getProcessBaseratePeppValidto() {
        return get(PROCESS_BASERATE_PEPP_VALIDTO).value;
    }

    /**
     * <pre>PROCESS_BASERATE_PEPP_VALUE
     * SQLite key: process_baserate_pepp_value
     * [en] value
     * [de] Wert</pre>
     * ATTENTION this value ('Value') seems to be also defined under the key CASEFEE_VALUE!
     * @return [en] value, [de] Wert
     */
    public static String getProcessBaseratePeppValue() {
        return get(PROCESS_BASERATE_PEPP_VALUE).value;
    }

    /**
     * <pre>PROCESS_BASERATE_TOOLTIP
     * SQLite key: process_baserate_tooltip
     * [en] Baserates of {0} with admission date {1}.
     * [de] Baserates ermittelt von {0} mit dem Aufnahmedatum {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] Baserates of {0} with admission date {1}., [de] Baserates ermittelt von {0} mit dem Aufnahmedatum {1}
     */
    public static String getProcessBaserateTooltip(final Object... pParams) {
        return get(PROCESS_BASERATE_TOOLTIP, pParams).value;
    }

    /**
     * <pre>PROCESS_CLOSED_TOOLTIP
     * SQLite key: process_closed_tooltip
     * [en] See Details of this Process
     * [de] Siehe Details zu diesem Vorgang</pre>
     * ATTENTION this value ('See Details of this Process') seems to be also defined under the key PROCESS_SUBJECT_CHANGED_TOOLTIP! this value ('See Details of this Process') seems to be also defined under the key PROCESS_USER_CHANGED_TOOLTIP!
     * @return [en] See Details of this Process, [de] Siehe Details zu diesem Vorgang
     */
    public static String getProcessClosedTooltip() {
        return get(PROCESS_CLOSED_TOOLTIP).value;
    }

    /**
     * <pre>PROCESS_COMPLETION
     * SQLite key: process_completion
     * [en] Complete process
     * [de] Vorgang abschließen</pre>
     * @return [en] Complete process, [de] Vorgang abschließen
     */
    public static String getProcessCompletion() {
        return get(PROCESS_COMPLETION).value;
    }

    /**
     * <pre>PROCESS_COMPLETION_FINAL_VALUES
     * SQLite key: process_completion_final_values
     * [en] Values final
     * [de] Werte final</pre>
     * @return [en] Values final, [de] Werte final
     */
    public static String getProcessCompletionFinalValues() {
        return get(PROCESS_COMPLETION_FINAL_VALUES).value;
    }

    /**
     * <pre>PROCESS_COMPLETION_FINALISATION
     * SQLite key: process_completion_finalisation
     * [en] Date of finalisation
     * [de] Datum Abschluss</pre>
     * @return [en] Date of finalisation, [de] Datum Abschluss
     */
    public static String getProcessCompletionFinalisation() {
        return get(PROCESS_COMPLETION_FINALISATION).value;
    }

    /**
     * <pre>PROCESS_COMPLETION_INITAL_VALUES
     * SQLite key: process_completion_inital_values
     * [en] Values initial
     * [de] Werte initial</pre>
     * @return [en] Values initial, [de] Werte initial
     */
    public static String getProcessCompletionInitalValues() {
        return get(PROCESS_COMPLETION_INITAL_VALUES).value;
    }

    /**
     * <pre>PROCESS_CONFIRM
     * SQLite key: process_confirm
     * [en] Open process {0}?
     * [de] Vorgang {0} öffnen?</pre>
     * @param pParams placeholder replacements
     * @return [en] Open process {0}?, [de] Vorgang {0} öffnen?
     */
    public static String getProcessConfirm(final Object... pParams) {
        return get(PROCESS_CONFIRM, pParams).value;
    }

    /**
     * <pre>PROCESS_CREATE_BUTTON
     * SQLite key: process_create_button
     * [en] Create Process new
     * [de] Vorgang neu anlegen</pre>
     * @return [en] Create Process new, [de] Vorgang neu anlegen
     */
    public static String getProcessCreateButton() {
        return get(PROCESS_CREATE_BUTTON).value;
    }

    /**
     * <pre>PROCESS_CREATION_TITLE
     * SQLite key: process_creation_title
     * [en] Create a new Process
     * [de] Neuen Vorgang erstellen</pre>
     * @return [en] Create a new Process, [de] Neuen Vorgang erstellen
     */
    public static String getProcessCreationTitle() {
        return get(PROCESS_CREATION_TITLE).value;
    }

    /**
     * <pre>PROCESS_DATE
     * SQLite key: process_date
     * [en] Date
     * [de] Datum</pre>
     * ATTENTION this value ('Date') seems to be also defined under the key CASE_RESOLVE_DATE!
     * @return [en] Date, [de] Datum
     */
    public static String getProcessDate() {
        return get(PROCESS_DATE).value;
    }

    /**
     * <pre>PROCESS_DEADLINE_EXPIRED
     * SQLite key: process_deadline_expired
     * [de] Frist abgelaufen</pre>
     * @return [de] Frist abgelaufen
     */
    public static String getProcessDeadlineExpired() {
        return get(PROCESS_DEADLINE_EXPIRED).value;
    }

    /**
     * <pre>PROCESS_DEADLINE_OPEN
     * SQLite key: process_deadline_open
     * [de] Frist offen</pre>
     * @return [de] Frist offen
     */
    public static String getProcessDeadlineOpen() {
        return get(PROCESS_DEADLINE_OPEN).value;
    }

    /**
     * <pre>PROCESS_DOES_NOT_EXIST
     * SQLite key: processdoesnotexist
     * [en] Process does not exist
     * [de] Der Vorgang wurde nicht gefunden</pre>
     * @return [en] Process does not exist, [de] Der Vorgang wurde nicht gefunden
     */
    public static String getProcessDoesNotExist() {
        return get(PROCESS_DOES_NOT_EXIST).value;
    }

    /**
     * <pre>PROCESS_DOES_NOT_EXIST_WITH_REASON
     * SQLite key: processdoesnotexistwithreason
     * [en] Process with ID {0} does not exist. Maybe this process was already deleted by another user meantime.
     * [de] Der Vorgang mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.</pre>
     * @param pParams placeholder replacements
     * @return [en] Process with ID {0} does not exist. Maybe this process was already deleted by another user meantime., [de] Der Vorgang mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.
     */
    public static String getProcessDoesNotExistWithReason(final Object... pParams) {
        return get(PROCESS_DOES_NOT_EXIST_WITH_REASON, pParams).value;
    }

    /**
     * <pre>PROCESS_EDITING
     * SQLite key: processediting
     * [en] Process editing...
     * [de] Vorgangsbearbeitung...</pre>
     * @return [en] Process editing..., [de] Vorgangsbearbeitung...
     */
    public static String getProcessEditing() {
        return get(PROCESS_EDITING).value;
    }

    /**
     * <pre>PROCESS_ERROR_CORE_DATA
     * SQLite key: process_error_coredata
     * [en] One or more List(s) of core data could not be loaded for the process date {0} !No valid period of time found is set
     * [de] Eine oder mehrere Liste(n) mit Stammdaten konnte(n) für das Vorgangsdatum {0} nicht geladen werden.Keine gültige Zeitspanne konfiguert.</pre>
     * @param pParams placeholder replacements
     * @return [en] One or more List(s) of core data could not be loaded for the process date {0} !No valid period of time found is set, [de] Eine oder mehrere Liste(n) mit Stammdaten konnte(n) für das Vorgangsdatum {0} nicht geladen werden.Keine gültige Zeitspanne konfiguert.
     */
    public static String getProcessErrorCore_data(final Object... pParams) {
        return get(PROCESS_ERROR_CORE_DATA, pParams).value;
    }

    /**
     * <pre>PROCESS_ERROR_OPEN
     * SQLite key: process_error_open
     * [en] Process can not be opened!
     * [de] Vorgang konnte nicht geöffnet werden!</pre>
     * @return [en] Process can not be opened!, [de] Vorgang konnte nicht geöffnet werden!
     */
    public static String getProcessErrorOpen() {
        return get(PROCESS_ERROR_OPEN).value;
    }

    /**
     * <pre>PROCESS_FINAL
     * SQLite key: process_final
     * [en] Final
     * [de] Final</pre>
     * @return [en] Final, [de] Final
     */
    public static String getProcessFinal() {
        return get(PROCESS_FINAL).value;
    }

    /**
     * <pre>PROCESS_FINAL_AUDIT_REASONS
     * SQLite key: process_final_audit_reasons
     * [en] Audit Reasons by Case Finalisation
     * [de] Prüfgründe des Vorgangabschlusses (Prüfgr. des Vorgangabschl.)</pre>
     * @return [en] Audit Reasons by Case Finalisation, [de] Prüfgründe des Vorgangabschlusses (Prüfgr. des Vorgangabschl.)
     */
    public static String getProcessFinalAuditReasons() {
        return get(PROCESS_FINAL_AUDIT_REASONS).value;
    }

    public static Translation getProcessFinalAuditReasonsObj() {
        return get(PROCESS_FINAL_AUDIT_REASONS);
    }

    /**
     * <pre>PROCESS_FINALISATION
     * SQLite key: process_finalisation
     * [en] Process finalisation
     * [de] Vorgangsabschluss</pre>
     * ATTENTION this value ('Process Finalisation') seems to be also defined under the key EVENT_NAME_PROCESS_FINALISATION!
     * @return [en] Process finalisation, [de] Vorgangsabschluss
     */
    public static String getProcessFinalisation() {
        return get(PROCESS_FINALISATION).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_CLOSING_DATE
     * SQLite key: process_finalisation_closing_date
     * [en] closing date
     * [de] Abschlussdatum (Abschlussdatum)</pre>
     * @return [en] closing date, [de] Abschlussdatum (Abschlussdatum)
     */
    public static String getProcessFinalisationClosingDate() {
        return get(PROCESS_FINALISATION_CLOSING_DATE).value;
    }

    public static Translation getProcessFinalisationClosingDateObj() {
        return get(PROCESS_FINALISATION_CLOSING_DATE);
    }

    /**
     * <pre>PROCESS_FINALISATION_CLOSING_DATE_FROM
     * SQLite key: process_finalisation_closing_date_from
     * [en] closing date from
     * [de] Abschlussdatum von</pre>
     * @return [en] closing date from, [de] Abschlussdatum von
     */
    public static String getProcessFinalisationClosingDateFrom() {
        return get(PROCESS_FINALISATION_CLOSING_DATE_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_CLOSING_DATE_TO
     * SQLite key: process_finalisation_closing_date_to
     * [en] closing date to
     * [de] Abschlussdatum bis</pre>
     * @return [en] closing date to, [de] Abschlussdatum bis
     */
    public static String getProcessFinalisationClosingDateTo() {
        return get(PROCESS_FINALISATION_CLOSING_DATE_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_CARE_DIFF
     * SQLite key: process_finalisation_cw_care_diff
     * [en] Care CW diff (Care CW diff)
     * [de] Pflege CW Diff (Pfl. CW Diff)</pre>
     * @return [en] Care CW diff (Care CW diff), [de] Pflege CW Diff (Pfl. CW Diff)
     */
    public static String getProcessFinalisationCwCareDiff() {
        return get(PROCESS_FINALISATION_CW_CARE_DIFF).value;
    }

    public static Translation getProcessFinalisationCwCareDiffObj() {
        return get(PROCESS_FINALISATION_CW_CARE_DIFF);
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_CARE_DIFF_FROM
     * SQLite key: process_finalisation_cw_care_diff_from
     * [en] Care CW diff to
     * [de] Pfl. CW Diff von</pre>
     * ATTENTION this value ('Care CW diff to') seems to be also defined under the key PROCESS_FINALISATION_CW_CARE_DIFF_TO!
     * @return [en] Care CW diff to, [de] Pfl. CW Diff von
     */
    public static String getProcessFinalisationCwCareDiffFrom() {
        return get(PROCESS_FINALISATION_CW_CARE_DIFF_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_CARE_DIFF_TO
     * SQLite key: process_finalisation_cw_care_diff_to
     * [en] Care CW diff to
     * [de] Pfl. CW Diff bis</pre>
     * ATTENTION this value ('Care CW diff to') seems to be also defined under the key PROCESS_FINALISATION_CW_CARE_DIFF_FROM!
     * @return [en] Care CW diff to, [de] Pfl. CW Diff bis
     */
    public static String getProcessFinalisationCwCareDiffTo() {
        return get(PROCESS_FINALISATION_CW_CARE_DIFF_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_CARE_FINAL
     * SQLite key: process_finalisation_cw_care_final
     * [en] Care CW final (Care CW final)
     * [de] Pflege CW Final (Pfl. CW Final)</pre>
     * @return [en] Care CW final (Care CW final), [de] Pflege CW Final (Pfl. CW Final)
     */
    public static String getProcessFinalisationCwCareFinal() {
        return get(PROCESS_FINALISATION_CW_CARE_FINAL).value;
    }

    public static Translation getProcessFinalisationCwCareFinalObj() {
        return get(PROCESS_FINALISATION_CW_CARE_FINAL);
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_CARE_FINAL_FROM
     * SQLite key: process_finalisation_cw_care_final_from
     * [en] Care CW final to
     * [de] Pfl. CW Final von</pre>
     * @return [en] Care CW final to, [de] Pfl. CW Final von
     */
    public static String getProcessFinalisationCwCareFinalFrom() {
        return get(PROCESS_FINALISATION_CW_CARE_FINAL_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_CARE_FINAL_TO
     * SQLite key: process_finalisation_cw_care_final_to
     * [en] Care CW final from
     * [de] Pfl. CW Final bis</pre>
     * @return [en] Care CW final from, [de] Pfl. CW Final bis
     */
    public static String getProcessFinalisationCwCareFinalTo() {
        return get(PROCESS_FINALISATION_CW_CARE_FINAL_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_CARE_INITIAL
     * SQLite key: process_finalisation_cw_care_initial
     * [en] Care CW initial (initial)
     * [de] Pflege CW Initial (Pfl. CW Initial)</pre>
     * @return [en] Care CW initial (initial), [de] Pflege CW Initial (Pfl. CW Initial)
     */
    public static String getProcessFinalisationCwCareInitial() {
        return get(PROCESS_FINALISATION_CW_CARE_INITIAL).value;
    }

    public static Translation getProcessFinalisationCwCareInitialObj() {
        return get(PROCESS_FINALISATION_CW_CARE_INITIAL);
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_CARE_INITIAL_FROM
     * SQLite key: process_finalisation_cw_care_initial_from
     * [en] Care CW initial from
     * [de] Pfl. CW Initial von</pre>
     * @return [en] Care CW initial from, [de] Pfl. CW Initial von
     */
    public static String getProcessFinalisationCwCareInitialFrom() {
        return get(PROCESS_FINALISATION_CW_CARE_INITIAL_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_CARE_INITIAL_TO
     * SQLite key: process_finalisation_cw_care_initial_to
     * [en] Care CW initial to
     * [de] Pfl. CW Initial bis</pre>
     * @return [en] Care CW initial to, [de] Pfl. CW Initial bis
     */
    public static String getProcessFinalisationCwCareInitialTo() {
        return get(PROCESS_FINALISATION_CW_CARE_INITIAL_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_DIFF
     * SQLite key: process_finalisation_cw_diff
     * [en] CW diff (CW diff)
     * [de] CW Diff (CW Diff)</pre>
     * @return [en] CW diff (CW diff), [de] CW Diff (CW Diff)
     */
    public static String getProcessFinalisationCwDiff() {
        return get(PROCESS_FINALISATION_CW_DIFF).value;
    }

    public static Translation getProcessFinalisationCwDiffObj() {
        return get(PROCESS_FINALISATION_CW_DIFF);
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_DIFF_FROM
     * SQLite key: process_finalisation_cw_diff_from
     * [en] CW diff from
     * [de] CW Diff von</pre>
     * @return [en] CW diff from, [de] CW Diff von
     */
    public static String getProcessFinalisationCwDiffFrom() {
        return get(PROCESS_FINALISATION_CW_DIFF_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_DIFF_TO
     * SQLite key: process_finalisation_cw_diff_to
     * [en] CW diff to
     * [de] CW Diff bis</pre>
     * @return [en] CW diff to, [de] CW Diff bis
     */
    public static String getProcessFinalisationCwDiffTo() {
        return get(PROCESS_FINALISATION_CW_DIFF_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_FINAL
     * SQLite key: process_finalisation_cw_final
     * [en] CW final (CW final)
     * [de] CW Final (CW Final)</pre>
     * @return [en] CW final (CW final), [de] CW Final (CW Final)
     */
    public static String getProcessFinalisationCwFinal() {
        return get(PROCESS_FINALISATION_CW_FINAL).value;
    }

    public static Translation getProcessFinalisationCwFinalObj() {
        return get(PROCESS_FINALISATION_CW_FINAL);
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_FINAL_FROM
     * SQLite key: process_finalisation_cw_final_from
     * [en] CW final from
     * [de] CW Final von</pre>
     * @return [en] CW final from, [de] CW Final von
     */
    public static String getProcessFinalisationCwFinalFrom() {
        return get(PROCESS_FINALISATION_CW_FINAL_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_FINAL_TO
     * SQLite key: process_finalisation_cw_final_to
     * [en] CW final to
     * [de] CW Final bis</pre>
     * @return [en] CW final to, [de] CW Final bis
     */
    public static String getProcessFinalisationCwFinalTo() {
        return get(PROCESS_FINALISATION_CW_FINAL_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_INITIAL
     * SQLite key: process_finalisation_cw_initial
     * [en] CW initial (initial)
     * [de] CW Initial (CW Initial)</pre>
     * @return [en] CW initial (initial), [de] CW Initial (CW Initial)
     */
    public static String getProcessFinalisationCwInitial() {
        return get(PROCESS_FINALISATION_CW_INITIAL).value;
    }

    public static Translation getProcessFinalisationCwInitialObj() {
        return get(PROCESS_FINALISATION_CW_INITIAL);
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_INITIAL_FROM
     * SQLite key: process_finalisation_cw_initial_from
     * [en] CW initial from
     * [de] CW Initial von</pre>
     * @return [en] CW initial from, [de] CW Initial von
     */
    public static String getProcessFinalisationCwInitialFrom() {
        return get(PROCESS_FINALISATION_CW_INITIAL_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_CW_INITIAL_TO
     * SQLite key: process_finalisation_cw_initial_to
     * [en] CW initial to
     * [de] CW Initial bis</pre>
     * @return [en] CW initial to, [de] CW Initial bis
     */
    public static String getProcessFinalisationCwInitialTo() {
        return get(PROCESS_FINALISATION_CW_INITIAL_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_DRG_FINAL
     * SQLite key: process_finalisation_drg_final
     * [en] DRG final (DRG final)
     * [de] DRG Final (DRG Final)</pre>
     * @return [en] DRG final (DRG final), [de] DRG Final (DRG Final)
     */
    public static String getProcessFinalisationDrgFinal() {
        return get(PROCESS_FINALISATION_DRG_FINAL).value;
    }

    public static Translation getProcessFinalisationDrgFinalObj() {
        return get(PROCESS_FINALISATION_DRG_FINAL);
    }

    /**
     * <pre>PROCESS_FINALISATION_DRG_INITIAL
     * SQLite key: process_finalisation_drg_initial
     * [en] DRG initial (DRG initial)
     * [de] DRG Initial (DRG Initial)</pre>
     * @return [en] DRG initial (DRG initial), [de] DRG Initial (DRG Initial)
     */
    public static String getProcessFinalisationDrgInitial() {
        return get(PROCESS_FINALISATION_DRG_INITIAL).value;
    }

    public static Translation getProcessFinalisationDrgInitialObj() {
        return get(PROCESS_FINALISATION_DRG_INITIAL);
    }

    /**
     * <pre>PROCESS_FINALISATION_ERROR_NO_MAIN_REVIEW_CAUSE
     * SQLite key: process_finalisation_error_nomainreviewcause
     * [en] No main audit reason is set.
     * [de] Es wurde kein Hauptprüfgrund angegeben.</pre>
     * @return [en] No main audit reason is set., [de] Es wurde kein Hauptprüfgrund angegeben.
     */
    public static String getProcessFinalisationErrorNoMainReviewCause() {
        return get(PROCESS_FINALISATION_ERROR_NO_MAIN_REVIEW_CAUSE).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_LOS_DIFF
     * SQLite key: process_finalisation_los_diff
     * [en] Los diff (Los diff)
     * [de] VWD Diff (VWD Diff)</pre>
     * @return [en] Los diff (Los diff), [de] VWD Diff (VWD Diff)
     */
    public static String getProcessFinalisationLosDiff() {
        return get(PROCESS_FINALISATION_LOS_DIFF).value;
    }

    public static Translation getProcessFinalisationLosDiffObj() {
        return get(PROCESS_FINALISATION_LOS_DIFF);
    }

    /**
     * <pre>PROCESS_FINALISATION_LOS_DIFF_FROM
     * SQLite key: process_finalisation_los_diff_from
     * [en] Los diff from
     * [de] VWD Diff von</pre>
     * @return [en] Los diff from, [de] VWD Diff von
     */
    public static String getProcessFinalisationLosDiffFrom() {
        return get(PROCESS_FINALISATION_LOS_DIFF_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_LOS_DIFF_TO
     * SQLite key: process_finalisation_los_diff_to
     * [en] Los diff to
     * [de] VWD Diff bis</pre>
     * @return [en] Los diff to, [de] VWD Diff bis
     */
    public static String getProcessFinalisationLosDiffTo() {
        return get(PROCESS_FINALISATION_LOS_DIFF_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_LOS_FINAL
     * SQLite key: process_finalisation_los_final
     * [en] Los final (Los Final)
     * [de] VWD Final (VWD Final)</pre>
     * @return [en] Los final (Los Final), [de] VWD Final (VWD Final)
     */
    public static String getProcessFinalisationLosFinal() {
        return get(PROCESS_FINALISATION_LOS_FINAL).value;
    }

    public static Translation getProcessFinalisationLosFinalObj() {
        return get(PROCESS_FINALISATION_LOS_FINAL);
    }

    /**
     * <pre>PROCESS_FINALISATION_LOS_FINAL_FROM
     * SQLite key: process_finalisation_los_final_from
     * [en] Los final from
     * [de] VWD Final von</pre>
     * @return [en] Los final from, [de] VWD Final von
     */
    public static String getProcessFinalisationLosFinalFrom() {
        return get(PROCESS_FINALISATION_LOS_FINAL_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_LOS_FINAL_TO
     * SQLite key: process_finalisation_los_final_to
     * [en] Los final to
     * [de] VWD Final bis</pre>
     * @return [en] Los final to, [de] VWD Final bis
     */
    public static String getProcessFinalisationLosFinalTo() {
        return get(PROCESS_FINALISATION_LOS_FINAL_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_LOS_INITIAL
     * SQLite key: process_finalisation_los_initial
     * [en] Los initial (Los initial)
     * [de] VWD Initial (VWD Initial)</pre>
     * @return [en] Los initial (Los initial), [de] VWD Initial (VWD Initial)
     */
    public static String getProcessFinalisationLosInitial() {
        return get(PROCESS_FINALISATION_LOS_INITIAL).value;
    }

    public static Translation getProcessFinalisationLosInitialObj() {
        return get(PROCESS_FINALISATION_LOS_INITIAL);
    }

    /**
     * <pre>PROCESS_FINALISATION_LOS_INITIAL_FROM
     * SQLite key: process_finalisation_los_initial_from
     * [en] Los initial from
     * [de] VWD Initial von</pre>
     * @return [en] Los initial from, [de] VWD Initial von
     */
    public static String getProcessFinalisationLosInitialFrom() {
        return get(PROCESS_FINALISATION_LOS_INITIAL_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_LOS_INITIAL_TO
     * SQLite key: process_finalisation_los_initial_to
     * [en] Los initial to
     * [de] VWD Initial bis</pre>
     * @return [en] Los initial to, [de] VWD Initial bis
     */
    public static String getProcessFinalisationLosInitialTo() {
        return get(PROCESS_FINALISATION_LOS_INITIAL_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_MAIN_CASE_STORNO
     * SQLite key: process_finalisation_maincase_storno
     * [en] Process is closed without comparison because base case is canceled
     * [de] Vorgang wird ohne Vergleich geschlossen, da der Basisfall storniert ist.</pre>
     * @return [en] Process is closed without comparison because base case is canceled, [de] Vorgang wird ohne Vergleich geschlossen, da der Basisfall storniert ist.
     */
    public static String getProcessFinalisationMainCaseStorno() {
        return get(PROCESS_FINALISATION_MAIN_CASE_STORNO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_NO_RIGHT
     * SQLite key: process_finalisation_noright
     * [en] No authorization for process completion
     * [de] Keine Berechtingung zum Vorgangabschloss.</pre>
     * @return [en] No authorization for process completion, [de] Keine Berechtingung zum Vorgangabschloss.
     */
    public static String getProcessFinalisationNoRight() {
        return get(PROCESS_FINALISATION_NO_RIGHT).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_PENALTY_FEE
     * SQLite key: process_finalisation_penalty_fee
     * [de] Strafzahlung (Strafzahlung)</pre>
     * @return [de] Strafzahlung (Strafzahlung)
     */
    public static String getProcessFinalisationPenaltyFee() {
        return get(PROCESS_FINALISATION_PENALTY_FEE).value;
    }

    public static Translation getProcessFinalisationPenaltyFeeObj() {
        return get(PROCESS_FINALISATION_PENALTY_FEE);
    }

    /**
     * <pre>PROCESS_FINALISATION_PENALTY_FEE_FROM
     * SQLite key: process_finalisation_penalty_fee_from
     * [de] Strafzahlung von</pre>
     * @return [de] Strafzahlung von
     */
    public static String getProcessFinalisationPenaltyFeeFrom() {
        return get(PROCESS_FINALISATION_PENALTY_FEE_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_PENALTY_FEE_TO
     * SQLite key: process_finalisation_penalty_fee_to
     * [de] Strafzahlung bis</pre>
     * @return [de] Strafzahlung bis
     */
    public static String getProcessFinalisationPenaltyFeeTo() {
        return get(PROCESS_FINALISATION_PENALTY_FEE_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_PROCEED
     * SQLite key: process_finalisation_proceed
     * [en] Is the process still to be completed?
     * [de] Soll der Vorgang trotzdem abgeschlossen werden?</pre>
     * @return [en] Is the process still to be completed?, [de] Soll der Vorgang trotzdem abgeschlossen werden?
     */
    public static String getProcessFinalisationProceed() {
        return get(PROCESS_FINALISATION_PROCEED).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_READONLY_MESSAGE
     * SQLite key: process_finalisation_readonly_message
     * [en] Process completion opens in read-only mode
     * [de] Vorgangsabschluss wird im schreibgeschützten Modus geöffnet.</pre>
     * @return [en] Process completion opens in read-only mode, [de] Vorgangsabschluss wird im schreibgeschützten Modus geöffnet.
     */
    public static String getProcessFinalisationReadonlyMessage() {
        return get(PROCESS_FINALISATION_READONLY_MESSAGE).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_READONLY_REASON
     * SQLite key: process_finalisation_readonly_reason
     * [en] The reason for this: {0}
     * [de] Der Grund dafür: {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] The reason for this: {0}, [de] Der Grund dafür: {0}
     */
    public static String getProcessFinalisationReadonlyReason(final Object... pParams) {
        return get(PROCESS_FINALISATION_READONLY_REASON, pParams).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_RESULT
     * SQLite key: process_finalisation_result
     * [en] process result
     * [de] Vorgangsergebnis</pre>
     * @return [en] process result, [de] Vorgangsergebnis
     */
    public static String getProcessFinalisationResult() {
        return get(PROCESS_FINALISATION_RESULT).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_RESULT_DELTA
     * SQLite key: process_finalisation_result_delta
     * [en] Res. Delta (Result delta)
     * [de] Ergebnis Delta (Erg. Delta)</pre>
     * @return [en] Res. Delta (Result delta), [de] Ergebnis Delta (Erg. Delta)
     */
    public static String getProcessFinalisationResultDelta() {
        return get(PROCESS_FINALISATION_RESULT_DELTA).value;
    }

    public static Translation getProcessFinalisationResultDeltaObj() {
        return get(PROCESS_FINALISATION_RESULT_DELTA);
    }

    /**
     * <pre>PROCESS_FINALISATION_RESULT_DELTA_FROM
     * SQLite key: process_finalisation_result_delta_from
     * [en] Res. delta from
     * [de] Erg. Delta von</pre>
     * @return [en] Res. delta from, [de] Erg. Delta von
     */
    public static String getProcessFinalisationResultDeltaFrom() {
        return get(PROCESS_FINALISATION_RESULT_DELTA_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_RESULT_DELTA_TO
     * SQLite key: process_finalisation_result_delta_to
     * [en] Res. delta to
     * [de] Erg. Delta bis</pre>
     * @return [en] Res. delta to, [de] Erg. Delta bis
     */
    public static String getProcessFinalisationResultDeltaTo() {
        return get(PROCESS_FINALISATION_RESULT_DELTA_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_RESULT_DELTE
     * SQLite key: process_finalisation_result_delte
     * [en] Result Delta
     * [de] Result Delta</pre>
     * @return [en] Result Delta, [de] Result Delta
     */
    public static String getProcessFinalisationResultDelte() {
        return get(PROCESS_FINALISATION_RESULT_DELTE).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_RESULTS
     * SQLite key: process_finalisation_results
     * [en] Process results
     * [de] Vorgangsergebnisse</pre>
     * @return [en] Process results, [de] Vorgangsergebnisse
     */
    public static String getProcessFinalisationResults() {
        return get(PROCESS_FINALISATION_RESULTS).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_REVENUE_DIFF
     * SQLite key: process_finalisation_revenue_diff
     * [en] Revenue diff
     * [de] Erlös Diff</pre>
     * @return [en] Revenue diff, [de] Erlös Diff
     */
    public static String getProcessFinalisationRevenueDiff() {
        return get(PROCESS_FINALISATION_REVENUE_DIFF).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_REVENUE_DIFF_FROM
     * SQLite key: process_finalisation_revenue_diff_from
     * [en] Revenue Diff from
     * [de] Erlös Diff von</pre>
     * @return [en] Revenue Diff from, [de] Erlös Diff von
     */
    public static String getProcessFinalisationRevenueDiffFrom() {
        return get(PROCESS_FINALISATION_REVENUE_DIFF_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_REVENUE_DIFF_TO
     * SQLite key: process_finalisation_revenue_diff_to
     * [en] Revenue Diff to
     * [de] Erlös Diff bis</pre>
     * @return [en] Revenue Diff to, [de] Erlös Diff bis
     */
    public static String getProcessFinalisationRevenueDiffTo() {
        return get(PROCESS_FINALISATION_REVENUE_DIFF_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_REVENUE_FINAL
     * SQLite key: process_finalisation_revenue_final
     * [en] Revenue Final
     * [de] Erlös Final</pre>
     * @return [en] Revenue Final, [de] Erlös Final
     */
    public static String getProcessFinalisationRevenueFinal() {
        return get(PROCESS_FINALISATION_REVENUE_FINAL).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_REVENUE_FINAL_FROM
     * SQLite key: process_finalisation_revenue_final_from
     * [en] Revenue Final from
     * [de] Erlös Final von</pre>
     * @return [en] Revenue Final from, [de] Erlös Final von
     */
    public static String getProcessFinalisationRevenueFinalFrom() {
        return get(PROCESS_FINALISATION_REVENUE_FINAL_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_REVENUE_FINAL_TO
     * SQLite key: process_finalisation_revenue_final_to
     * [en] Revenue Final to
     * [de] Erlös Final bis</pre>
     * @return [en] Revenue Final to, [de] Erlös Final bis
     */
    public static String getProcessFinalisationRevenueFinalTo() {
        return get(PROCESS_FINALISATION_REVENUE_FINAL_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_REVENUE_INIT
     * SQLite key: process_finalisation_revenue_init
     * [en] Revenue Initial
     * [de] Erlös Initial</pre>
     * ATTENTION this value ('Revenue Initial') seems to be also defined under the key PROCESS_FINALISATION_REVENUE_INITIAL!
     * @return [en] Revenue Initial, [de] Erlös Initial
     */
    public static String getProcessFinalisationRevenueInit() {
        return get(PROCESS_FINALISATION_REVENUE_INIT).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_REVENUE_INIT_FROM
     * SQLite key: process_finalisation_revenue_init_from
     * [en] Revenue Initial from
     * [de] Erlös Initial von</pre>
     * @return [en] Revenue Initial from, [de] Erlös Initial von
     */
    public static String getProcessFinalisationRevenueInitFrom() {
        return get(PROCESS_FINALISATION_REVENUE_INIT_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_REVENUE_INIT_TO
     * SQLite key: process_finalisation_revenue_init_to
     * [en] Revenue Initial to
     * [de] Erlös Initial bis</pre>
     * @return [en] Revenue Initial to, [de] Erlös Initial bis
     */
    public static String getProcessFinalisationRevenueInitTo() {
        return get(PROCESS_FINALISATION_REVENUE_INIT_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_REVENUE_INITIAL
     * SQLite key: process_finalisation_revenue_initial
     * [en] Revenue Initial
     * [de] Erlös Initial</pre>
     * ATTENTION this value ('Revenue Initial') seems to be also defined under the key PROCESS_FINALISATION_REVENUE_INIT!
     * @return [en] Revenue Initial, [de] Erlös Initial
     */
    public static String getProcessFinalisationRevenueInitial() {
        return get(PROCESS_FINALISATION_REVENUE_INITIAL).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_RISK
     * SQLite key: process_finalisation_risk
     * [en] risk
     * [de] Risiko</pre>
     * ATTENTION this value ('Risk') seems to be also defined under the key ICD_TYPE_RISK!
     * @return [en] risk, [de] Risiko
     */
    public static String getProcessFinalisationRisk() {
        return get(PROCESS_FINALISATION_RISK).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_SAVED_MONEY
     * SQLite key: process_finalisation_saved_money
     * [en] Saved money (Saved money in €)
     * [de] Verlustvolumnen in € (Verlustvol.)</pre>
     * @return [en] Saved money (Saved money in €), [de] Verlustvolumnen in € (Verlustvol.)
     */
    public static String getProcessFinalisationSavedMoney() {
        return get(PROCESS_FINALISATION_SAVED_MONEY).value;
    }

    public static Translation getProcessFinalisationSavedMoneyObj() {
        return get(PROCESS_FINALISATION_SAVED_MONEY);
    }

    /**
     * <pre>PROCESS_FINALISATION_SAVED_MONEY_FROM
     * SQLite key: process_finalisation_saved_money_from
     * [en] Saved money from
     * [de] Verlustvol. von</pre>
     * @return [en] Saved money from, [de] Verlustvol. von
     */
    public static String getProcessFinalisationSavedMoneyFrom() {
        return get(PROCESS_FINALISATION_SAVED_MONEY_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_SAVED_MONEY_TO
     * SQLite key: process_finalisation_saved_money_to
     * [en] Saved money to
     * [de] Verlustvol. bis</pre>
     * @return [en] Saved money to, [de] Verlustvol. bis
     */
    public static String getProcessFinalisationSavedMoneyTo() {
        return get(PROCESS_FINALISATION_SAVED_MONEY_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_SUPPLFEE_DIFF
     * SQLite key: process_finalisation_supplfee_diff
     * [en] Supplfee diff (Supplfee)
     * [de] ZE Diff (ZE Diff)</pre>
     * @return [en] Supplfee diff (Supplfee), [de] ZE Diff (ZE Diff)
     */
    public static String getProcessFinalisationSupplfeeDiff() {
        return get(PROCESS_FINALISATION_SUPPLFEE_DIFF).value;
    }

    public static Translation getProcessFinalisationSupplfeeDiffObj() {
        return get(PROCESS_FINALISATION_SUPPLFEE_DIFF);
    }

    /**
     * <pre>PROCESS_FINALISATION_SUPPLFEE_DIFF_FROM
     * SQLite key: process_finalisation_supplfee_diff_from
     * [en] Supplfee diff from
     * [de] ZE Diff von</pre>
     * @return [en] Supplfee diff from, [de] ZE Diff von
     */
    public static String getProcessFinalisationSupplfeeDiffFrom() {
        return get(PROCESS_FINALISATION_SUPPLFEE_DIFF_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_SUPPLFEE_DIFF_TO
     * SQLite key: process_finalisation_supplfee_diff_to
     * [en] Supplfee diff to
     * [de] ZE Diff bis</pre>
     * @return [en] Supplfee diff to, [de] ZE Diff bis
     */
    public static String getProcessFinalisationSupplfeeDiffTo() {
        return get(PROCESS_FINALISATION_SUPPLFEE_DIFF_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_SUPPLFEE_FINAL
     * SQLite key: process_finalisation_supplfee_final
     * [en] Supplfee final (Supplfee final)
     * [de] ZE Final (ZE Final)</pre>
     * @return [en] Supplfee final (Supplfee final), [de] ZE Final (ZE Final)
     */
    public static String getProcessFinalisationSupplfeeFinal() {
        return get(PROCESS_FINALISATION_SUPPLFEE_FINAL).value;
    }

    public static Translation getProcessFinalisationSupplfeeFinalObj() {
        return get(PROCESS_FINALISATION_SUPPLFEE_FINAL);
    }

    /**
     * <pre>PROCESS_FINALISATION_SUPPLFEE_FINAL_FROM
     * SQLite key: process_finalisation_supplfee_final_from
     * [en] Supplfee final from
     * [de] ZE Final von</pre>
     * @return [en] Supplfee final from, [de] ZE Final von
     */
    public static String getProcessFinalisationSupplfeeFinalFrom() {
        return get(PROCESS_FINALISATION_SUPPLFEE_FINAL_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_SUPPLFEE_FINAL_TO
     * SQLite key: process_finalisation_supplfee_final_to
     * [en] Supplfee final to
     * [de] ZE Final bis</pre>
     * @return [en] Supplfee final to, [de] ZE Final bis
     */
    public static String getProcessFinalisationSupplfeeFinalTo() {
        return get(PROCESS_FINALISATION_SUPPLFEE_FINAL_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_SUPPLFEE_INITIAL
     * SQLite key: process_finalisation_supplfee_initial
     * [en] Supplfee initial (Supplfee initial)
     * [de] ZE Initial (ZE Initial)</pre>
     * @return [en] Supplfee initial (Supplfee initial), [de] ZE Initial (ZE Initial)
     */
    public static String getProcessFinalisationSupplfeeInitial() {
        return get(PROCESS_FINALISATION_SUPPLFEE_INITIAL).value;
    }

    public static Translation getProcessFinalisationSupplfeeInitialObj() {
        return get(PROCESS_FINALISATION_SUPPLFEE_INITIAL);
    }

    /**
     * <pre>PROCESS_FINALISATION_SUPPLFEE_INITIAL_FROM
     * SQLite key: process_finalisation_supplfee_initial_from
     * [en] Supplfee initial from
     * [de] ZE Initial von</pre>
     * @return [en] Supplfee initial from, [de] ZE Initial von
     */
    public static String getProcessFinalisationSupplfeeInitialFrom() {
        return get(PROCESS_FINALISATION_SUPPLFEE_INITIAL_FROM).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_SUPPLFEE_INITIAL_TO
     * SQLite key: process_finalisation_supplfee_initial_to
     * [en] Supplfee initial to
     * [de] ZE Initial bis</pre>
     * @return [en] Supplfee initial to, [de] ZE Initial bis
     */
    public static String getProcessFinalisationSupplfeeInitialTo() {
        return get(PROCESS_FINALISATION_SUPPLFEE_INITIAL_TO).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_VERSION_COMPARISON_NOTALLOWED
     * SQLite key: process_finalisation_version_comparison_notallowed
     * [de] Vergleich der Version(en) ist nicht möglich, da der Basisfall storniert ist.</pre>
     * @return [de] Vergleich der Version(en) ist nicht möglich, da der Basisfall storniert ist.
     */
    public static String getProcessFinalisationVersionComparisonNotallowed() {
        return get(PROCESS_FINALISATION_VERSION_COMPARISON_NOTALLOWED).value;
    }

    /**
     * <pre>PROCESS_FINALISATION_VERSION_SELECT
     * SQLite key: process_finalisation_version_select
     * [en] Version selection for process finalisation (Select Version)
     * [de] Versionen für Fallabschluss auswählen (Version auswählen)</pre>
     * @return [en] Version selection for process finalisation (Select Version), [de] Versionen für Fallabschluss auswählen (Version auswählen)
     */
    public static String getProcessFinalisationVersionSelect() {
        return get(PROCESS_FINALISATION_VERSION_SELECT).value;
    }

    public static Translation getProcessFinalisationVersionSelectObj() {
        return get(PROCESS_FINALISATION_VERSION_SELECT);
    }

    /**
     * <pre>PROCESS_INITIAL
     * SQLite key: process_initial
     * [en] Initial
     * [de] Initial</pre>
     * @return [en] Initial, [de] Initial
     */
    public static String getProcessInitial() {
        return get(PROCESS_INITIAL).value;
    }

    /**
     * <pre>PROCESS_INKA_KEY
     * SQLite key: process_inka_key
     * [de] INKA Sclüssel (INKA Schl.)</pre>
     * @return [de] INKA Sclüssel (INKA Schl.)
     */
    public static String getProcessInkaKey() {
        return get(PROCESS_INKA_KEY).value;
    }

    public static Translation getProcessInkaKeyObj() {
        return get(PROCESS_INKA_KEY);
    }

    /**
     * <pre>PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION
     * SQLite key: process_kain_date_benefit_law_decision
     * [de] KAIN Datum der Entscheidung (Entsch. Datum)</pre>
     * @return [de] KAIN Datum der Entscheidung (Entsch. Datum)
     */
    public static String getProcessKainDateBenefitLawDecision() {
        return get(PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION).value;
    }

    public static Translation getProcessKainDateBenefitLawDecisionObj() {
        return get(PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION);
    }

    /**
     * <pre>PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION_FROM
     * SQLite key: process_kain_date_benefit_law_decision_from
     * [de] Entsch. Datum von</pre>
     * @return [de] Entsch. Datum von
     */
    public static String getProcessKainDateBenefitLawDecisionFrom() {
        return get(PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION_FROM).value;
    }

    /**
     * <pre>PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION_TO
     * SQLite key: process_kain_date_benefit_law_decision_to
     * [de] Entsch. Datum bis</pre>
     * @return [de] Entsch. Datum bis
     */
    public static String getProcessKainDateBenefitLawDecisionTo() {
        return get(PROCESS_KAIN_DATE_BENEFIT_LAW_DECISION_TO).value;
    }

    /**
     * <pre>PROCESS_KAIN_KEY
     * SQLite key: process_kain_key
     * [de] KAIN Schlüssel (KAIN Schl.)</pre>
     * @return [de] KAIN Schlüssel (KAIN Schl.)
     */
    public static String getProcessKainKey() {
        return get(PROCESS_KAIN_KEY).value;
    }

    public static Translation getProcessKainKeyObj() {
        return get(PROCESS_KAIN_KEY);
    }

    /**
     * <pre>PROCESS_LIST_DATE_FORMAT
     * SQLite key: process_list_dateformat
     * [en] dd/MM/yyyy HH:mm:ss
     * [de] dd.MM.yyyy HH:mm:ss</pre>
     * @return [en] dd/MM/yyyy HH:mm:ss, [de] dd.MM.yyyy HH:mm:ss
     */
    public static String getProcessListDateFormat() {
        return get(PROCESS_LIST_DATE_FORMAT).value;
    }

    /**
     * <pre>PROCESS_MAIN_CASE_ERROR
     * SQLite key: process_maincase_error
     * [en] MainCase of the process is null. Please add main case to this process!!
     * [de] Hauptfall des Vorgangs ist nicht gesetzt. Bitte fügen Sie einen Hauptfall zu diesem Vorgang hinzu!</pre>
     * @return [en] MainCase of the process is null. Please add main case to this process!!, [de] Hauptfall des Vorgangs ist nicht gesetzt. Bitte fügen Sie einen Hauptfall zu diesem Vorgang hinzu!
     */
    public static String getProcessMainCaseError() {
        return get(PROCESS_MAIN_CASE_ERROR).value;
    }

    /**
     * <pre>PROCESS_MODIFICATION_USER
     * SQLite key: process_modificationuser
     * [en] last Issuer of process (change of)
     * [de] Letzter Bearbeiter des Vorganges (Änderung von)</pre>
     * @return [en] last Issuer of process (change of), [de] Letzter Bearbeiter des Vorganges (Änderung von)
     */
    public static String getProcessModificationUser() {
        return get(PROCESS_MODIFICATION_USER).value;
    }

    public static Translation getProcessModificationUserObj() {
        return get(PROCESS_MODIFICATION_USER);
    }

    /**
     * <pre>PROCESS_MODIFICATION_USER_LAST
     * SQLite key: process_modificationuser_last
     * [de] Letzter Bearbeiter des Vorganges (Änderung von)</pre>
     * @return [de] Letzter Bearbeiter des Vorganges (Änderung von)
     */
    public static String getProcessModificationUserLast() {
        return get(PROCESS_MODIFICATION_USER_LAST).value;
    }

    public static Translation getProcessModificationUserLastObj() {
        return get(PROCESS_MODIFICATION_USER_LAST);
    }

    /**
     * <pre>PROCESS_NUMBER
     * SQLite key: process_number
     * [en] Process No.
     * [de] Vorgangs-Nr.</pre>
     * ATTENTION this value ('Process No.') seems to be also defined under the key WORKFLOW_NUMBER!
     * @return [en] Process No., [de] Vorgangs-Nr.
     */
    public static String getProcessNumber() {
        return get(PROCESS_NUMBER).value;
    }

    /**
     * <pre>PROCESS_PREVIEW_ANSWER
     * SQLite key: processpreview_answer
     * [en] Preliminary Proceedings Answer Deadline
     * [de] Frist Vorverfahren Antwort</pre>
     * @return [en] Preliminary Proceedings Answer Deadline, [de] Frist Vorverfahren Antwort
     */
    public static String getProcessPreviewAnswer() {
        return get(PROCESS_PREVIEW_ANSWER).value;
    }

    /**
     * <pre>PROCESS_PREVIEW_AUDIT_COMPLETION
     * SQLite key: processpreview_auditcompletion
     * [en] MD Audit Completion Deadline
     * [de] Frist Abschluss der MD-Prüfung</pre>
     * @return [en] MD Audit Completion Deadline, [de] Frist Abschluss der MD-Prüfung
     */
    public static String getProcessPreviewAuditCompletion() {
        return get(PROCESS_PREVIEW_AUDIT_COMPLETION).value;
    }

    /**
     * <pre>PROCESS_PREVIEW_AUDIT_REASONS
     * SQLite key: processpreview_auditreasons
     * [en] Audit Resons
     * [de] Prüfgründe (Prüfgründe)</pre>
     * @return [en] Audit Resons, [de] Prüfgründe (Prüfgründe)
     */
    public static String getProcessPreviewAuditReasons() {
        return get(PROCESS_PREVIEW_AUDIT_REASONS).value;
    }

    public static Translation getProcessPreviewAuditReasonsObj() {
        return get(PROCESS_PREVIEW_AUDIT_REASONS);
    }

    /**
     * <pre>PROCESS_PREVIEW_BILL_CORR
     * SQLite key: processpreview_billcorr
     * [en] MD Bill Correction Deadline
     * [de] Frist MD-Rechnungskorrektur</pre>
     * @return [en] MD Bill Correction Deadline, [de] Frist MD-Rechnungskorrektur
     */
    public static String getProcessPreviewBillCorr() {
        return get(PROCESS_PREVIEW_BILL_CORR).value;
    }

    /**
     * <pre>PROCESS_PREVIEW_CASE_NO
     * SQLite key: processpreview_caseno
     * [en] Case No.
     * [de] Fallnummer</pre>
     * @return [en] Case No., [de] Fallnummer
     */
    public static String getProcessPreviewCaseNo() {
        return get(PROCESS_PREVIEW_CASE_NO).value;
    }

    /**
     * <pre>PROCESS_PREVIEW_CLOSED
     * SQLite key: processpreview_closed
     * [en] Preliminary Proceedings Closed Deadline
     * [de] Frist Vorverfahren-Abschluss</pre>
     * @return [en] Preliminary Proceedings Closed Deadline, [de] Frist Vorverfahren-Abschluss
     */
    public static String getProcessPreviewClosed() {
        return get(PROCESS_PREVIEW_CLOSED).value;
    }

    /**
     * <pre>PROCESS_PREVIEW_DATA_REC_CORRECTION
     * SQLite key: processpreview_datareccorrection
     * [en] Data Record Correction Deadline
     * [de] Frist Datensatzkorrektur</pre>
     * @return [en] Data Record Correction Deadline, [de] Frist Datensatzkorrektur
     */
    public static String getProcessPreviewDataRecCorrection() {
        return get(PROCESS_PREVIEW_DATA_REC_CORRECTION).value;
    }

    /**
     * <pre>PROCESS_PREVIEW_DEADLINES
     * SQLite key: processpreview_deadlines
     * [en] Deadlines
     * [de] Fristen</pre>
     * @return [en] Deadlines, [de] Fristen
     */
    public static String getProcessPreviewDeadlines() {
        return get(PROCESS_PREVIEW_DEADLINES).value;
    }

    /**
     * <pre>PROCESS_PREVIEW_DOC_DELIVER
     * SQLite key: processpreview_docdeliver
     * [en] MD Document Deliver Deadline
     * [de] Abgabefrist Unterlagen</pre>
     * @return [en] MD Document Deliver Deadline, [de] Abgabefrist Unterlagen
     */
    public static String getProcessPreviewDocDeliver() {
        return get(PROCESS_PREVIEW_DOC_DELIVER).value;
    }

    /**
     * <pre>PROCESS_PREVIEW_PROCESS_STATUS
     * SQLite key: processpreview_processstatus
     * [en] Status
     * [de] Status</pre>
     * ATTENTION this value ('Status') seems to be also defined under the key AUDIT_STATUS! this value ('Status') seems to be also defined under the key BILL_STATUS! this value ('Status') seems to be also defined under the key RULE_FILTER_DIALOG_RULE_ERROR_STATUS!
     * @return [en] Status, [de] Status
     */
    public static String getProcessPreviewProcessStatus() {
        return get(PROCESS_PREVIEW_PROCESS_STATUS).value;
    }

    /**
     * <pre>PROCESS_PREVIEW_PROCESS_TOPIC
     * SQLite key: processpreview_processtopic
     * [en] Process Topic
     * [de] Vorgangsart</pre>
     * ATTENTION this value ('Process Topic') seems to be also defined under the key PROCESS_TOPIC!
     * @return [en] Process Topic, [de] Vorgangsart
     */
    public static String getProcessPreviewProcessTopic() {
        return get(PROCESS_PREVIEW_PROCESS_TOPIC).value;
    }

    /**
     * <pre>PROCESS_PREVIEW_REQUEST_TYPE
     * SQLite key: processpreview_requesttype
     * [en] Request type
     * [de] Anfragetyp</pre>
     * @return [en] Request type, [de] Anfragetyp
     */
    public static String getProcessPreviewRequestType() {
        return get(PROCESS_PREVIEW_REQUEST_TYPE).value;
    }

    /**
     * <pre>PROCESS_REVIEW_COMPLETION_DEADLINE_DATE
     * SQLite key: process_review_completion_deadline_date
     * [de] Frist bis zu dem Abschluß des Erörterungsverfahrens (EV Abschlußfrist)</pre>
     * @return [de] Frist bis zu dem Abschluß des Erörterungsverfahrens (EV Abschlußfrist)
     */
    public static String getProcessReviewCompletionDeadlineDate() {
        return get(PROCESS_REVIEW_COMPLETION_DEADLINE_DATE).value;
    }

    public static Translation getProcessReviewCompletionDeadlineDateObj() {
        return get(PROCESS_REVIEW_COMPLETION_DEADLINE_DATE);
    }

    /**
     * <pre>PROCESS_REVIEW_COMPLETION_DEADLINE_DATE_FROM
     * SQLite key: process_review_completion_deadline_date_from
     * [de] EV Abschlußfrist von</pre>
     * @return [de] EV Abschlußfrist von
     */
    public static String getProcessReviewCompletionDeadlineDateFrom() {
        return get(PROCESS_REVIEW_COMPLETION_DEADLINE_DATE_FROM).value;
    }

    /**
     * <pre>PROCESS_REVIEW_COMPLETION_DEADLINE_DATE_TO
     * SQLite key: process_review_completion_deadline_date_to
     * [de] EV Abschlußfrist bis</pre>
     * @return [de] EV Abschlußfrist bis
     */
    public static String getProcessReviewCompletionDeadlineDateTo() {
        return get(PROCESS_REVIEW_COMPLETION_DEADLINE_DATE_TO).value;
    }

    /**
     * <pre>PROCESS_REVIEW_COMPLETION_DEADLINE_DAYS
     * SQLite key: process_review_completion_deadline_days
     * [de] Tage bis Abschluß EV (EV Abschluß)</pre>
     * @return [de] Tage bis Abschluß EV (EV Abschluß)
     */
    public static String getProcessReviewCompletionDeadlineDays() {
        return get(PROCESS_REVIEW_COMPLETION_DEADLINE_DAYS).value;
    }

    public static Translation getProcessReviewCompletionDeadlineDaysObj() {
        return get(PROCESS_REVIEW_COMPLETION_DEADLINE_DAYS);
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE
     * SQLite key: process_review_deadline_answer_insurance_date
     * [de] Frist für die Krankenasse eine Antwort zu EV zu geben (EV Antwortfrist KK)</pre>
     * @return [de] Frist für die Krankenasse eine Antwort zu EV zu geben (EV Antwortfrist KK)
     */
    public static String getProcessReviewDeadlineAnswerInsuranceDate() {
        return get(PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE).value;
    }

    public static Translation getProcessReviewDeadlineAnswerInsuranceDateObj() {
        return get(PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE);
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE_FROM
     * SQLite key: process_review_deadline_answer_insurance_date_from
     * [de] EV Antwortfrist KK von</pre>
     * @return [de] EV Antwortfrist KK von
     */
    public static String getProcessReviewDeadlineAnswerInsuranceDateFrom() {
        return get(PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE_FROM).value;
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE_TO
     * SQLite key: process_review_deadline_answer_insurance_date_to
     * [de] EV Antwortfrist KK bis</pre>
     * @return [de] EV Antwortfrist KK bis
     */
    public static String getProcessReviewDeadlineAnswerInsuranceDateTo() {
        return get(PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DATE_TO).value;
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DAYS
     * SQLite key: process_review_deadline_answer_insurance_days
     * [de] Tage für Antwort der KK (EV Antwort KK)</pre>
     * @return [de] Tage für Antwort der KK (EV Antwort KK)
     */
    public static String getProcessReviewDeadlineAnswerInsuranceDays() {
        return get(PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DAYS).value;
    }

    public static Translation getProcessReviewDeadlineAnswerInsuranceDaysObj() {
        return get(PROCESS_REVIEW_DEADLINE_ANSWER_INSURANCE_DAYS);
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_DATE
     * SQLite key: process_review_deadline_date
     * [de] Frist bis zu dem Start des Erörterungsverfahrens (EV Frist bis)</pre>
     * @return [de] Frist bis zu dem Start des Erörterungsverfahrens (EV Frist bis)
     */
    public static String getProcessReviewDeadlineDate() {
        return get(PROCESS_REVIEW_DEADLINE_DATE).value;
    }

    public static Translation getProcessReviewDeadlineDateObj() {
        return get(PROCESS_REVIEW_DEADLINE_DATE);
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_DATE_FROM
     * SQLite key: process_review_deadline_date_from
     * [de] EV Frist bis von</pre>
     * @return [de] EV Frist bis von
     */
    public static String getProcessReviewDeadlineDateFrom() {
        return get(PROCESS_REVIEW_DEADLINE_DATE_FROM).value;
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_DATE_TO
     * SQLite key: process_review_deadline_date_to
     * [de] EV Frist bis bis</pre>
     * @return [de] EV Frist bis bis
     */
    public static String getProcessReviewDeadlineDateTo() {
        return get(PROCESS_REVIEW_DEADLINE_DATE_TO).value;
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_DAYS
     * SQLite key: process_review_deadline_days
     * [de] Tage bis zu Ende des Fristes für Starten EV (EV Start)</pre>
     * @return [de] Tage bis zu Ende des Fristes für Starten EV (EV Start)
     */
    public static String getProcessReviewDeadlineDays() {
        return get(PROCESS_REVIEW_DEADLINE_DAYS).value;
    }

    public static Translation getProcessReviewDeadlineDaysObj() {
        return get(PROCESS_REVIEW_DEADLINE_DAYS);
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_EXTENDED_DATE
     * SQLite key: process_review_deadline_extended_date
     * [de] Verlängerte Frist für das Starten des Erörterungsverfahrens (EV Fristverl.)</pre>
     * @return [de] Verlängerte Frist für das Starten des Erörterungsverfahrens (EV Fristverl.)
     */
    public static String getProcessReviewDeadlineExtendedDate() {
        return get(PROCESS_REVIEW_DEADLINE_EXTENDED_DATE).value;
    }

    public static Translation getProcessReviewDeadlineExtendedDateObj() {
        return get(PROCESS_REVIEW_DEADLINE_EXTENDED_DATE);
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_EXTENDED_DATE_FROM
     * SQLite key: process_review_deadline_extended_date_from
     * [de] EV Fristverl. von</pre>
     * @return [de] EV Fristverl. von
     */
    public static String getProcessReviewDeadlineExtendedDateFrom() {
        return get(PROCESS_REVIEW_DEADLINE_EXTENDED_DATE_FROM).value;
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_EXTENDED_DATE_TO
     * SQLite key: process_review_deadline_extended_date_to
     * [de] EV Fristverl. bis</pre>
     * @return [de] EV Fristverl. bis
     */
    public static String getProcessReviewDeadlineExtendedDateTo() {
        return get(PROCESS_REVIEW_DEADLINE_EXTENDED_DATE_TO).value;
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_EXTENDED_DAYS
     * SQLite key: process_review_deadline_extended_days
     * [de] Tage bis zum Ende des verlängerten Fristes für Starten EV (EV Startverl.)</pre>
     * @return [de] Tage bis zum Ende des verlängerten Fristes für Starten EV (EV Startverl.)
     */
    public static String getProcessReviewDeadlineExtendedDays() {
        return get(PROCESS_REVIEW_DEADLINE_EXTENDED_DAYS).value;
    }

    public static Translation getProcessReviewDeadlineExtendedDaysObj() {
        return get(PROCESS_REVIEW_DEADLINE_EXTENDED_DAYS);
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_SEND_ON_DATE
     * SQLite key: process_review_deadline_send_on_date
     * [de] Nachsendefrist der angefordenten Dokumenten bei EV bis (EV Nachsendefrist)</pre>
     * @return [de] Nachsendefrist der angefordenten Dokumenten bei EV bis (EV Nachsendefrist)
     */
    public static String getProcessReviewDeadlineSendOnDate() {
        return get(PROCESS_REVIEW_DEADLINE_SEND_ON_DATE).value;
    }

    public static Translation getProcessReviewDeadlineSendOnDateObj() {
        return get(PROCESS_REVIEW_DEADLINE_SEND_ON_DATE);
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_SEND_ON_DATE_FROM
     * SQLite key: process_review_deadline_send_on_date_from
     * [de] EV Nachsendefrist von</pre>
     * @return [de] EV Nachsendefrist von
     */
    public static String getProcessReviewDeadlineSendOnDateFrom() {
        return get(PROCESS_REVIEW_DEADLINE_SEND_ON_DATE_FROM).value;
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_SEND_ON_DATE_TO
     * SQLite key: process_review_deadline_send_on_date_to
     * [de] EV Nachsendefrist bis</pre>
     * @return [de] EV Nachsendefrist bis
     */
    public static String getProcessReviewDeadlineSendOnDateTo() {
        return get(PROCESS_REVIEW_DEADLINE_SEND_ON_DATE_TO).value;
    }

    /**
     * <pre>PROCESS_REVIEW_DEADLINE_SEND_ON_DAYS
     * SQLite key: process_review_deadline_send_on_days
     * [de] Tage für Nachsenden der Unterlagen EV (EV Unterlagen)</pre>
     * @return [de] Tage für Nachsenden der Unterlagen EV (EV Unterlagen)
     */
    public static String getProcessReviewDeadlineSendOnDays() {
        return get(PROCESS_REVIEW_DEADLINE_SEND_ON_DAYS).value;
    }

    public static Translation getProcessReviewDeadlineSendOnDaysObj() {
        return get(PROCESS_REVIEW_DEADLINE_SEND_ON_DAYS);
    }

    /**
     * <pre>PROCESS_SELECT_TASK
     * SQLite key: process_select_task
     * [en] Select next task
     * [de] Nächste Aufgabe wählen</pre>
     * @return [en] Select next task, [de] Nächste Aufgabe wählen
     */
    public static String getProcessSelectTask() {
        return get(PROCESS_SELECT_TASK).value;
    }

    /**
     * <pre>PROCESS_START_DATE
     * SQLite key: processstartdate
     * [en] Process start date (Start date)
     * [de] Anlagedatum des Vorganges (Vorgangsdatum)</pre>
     * @return [en] Process start date (Start date), [de] Anlagedatum des Vorganges (Vorgangsdatum)
     */
    public static String getProcessStartDate() {
        return get(PROCESS_START_DATE).value;
    }

    public static Translation getProcessStartDateObj() {
        return get(PROCESS_START_DATE);
    }

    /**
     * <pre>PROCESS_START_DATE_FROM
     * SQLite key: processstartdate_from
     * [en] Start date from
     * [de] Anlagedatum von</pre>
     * @return [en] Start date from, [de] Anlagedatum von
     */
    public static String getProcessStartDateFrom() {
        return get(PROCESS_START_DATE_FROM).value;
    }

    /**
     * <pre>PROCESS_START_DATE_TO
     * SQLite key: processstartdate_to
     * [en] Start date to
     * [de] Anlagedatum bis</pre>
     * @return [en] Start date to, [de] Anlagedatum bis
     */
    public static String getProcessStartDateTo() {
        return get(PROCESS_START_DATE_TO).value;
    }

    /**
     * <pre>PROCESS_STATUS_CLOSE
     * SQLite key: process_status_close
     * [en] Close process
     * [de] Vorgang schließen</pre>
     * @return [en] Close process, [de] Vorgang schließen
     */
    public static String getProcessStatusClose() {
        return get(PROCESS_STATUS_CLOSE).value;
    }

    /**
     * <pre>PROCESS_STATUS_CLOSED
     * SQLite key: process_status_closed
     * [en] Process is closed
     * [de] Vorgang wurde geschlossen</pre>
     * @return [en] Process is closed, [de] Vorgang wurde geschlossen
     */
    public static String getProcessStatusClosed() {
        return get(PROCESS_STATUS_CLOSED).value;
    }

    /**
     * <pre>PROCESS_STATUS_OPEN
     * SQLite key: process_status_open
     * [en] Process is open
     * [de] Vorgang wird bearbeitet</pre>
     * @return [en] Process is open, [de] Vorgang wird bearbeitet
     */
    public static String getProcessStatusOpen() {
        return get(PROCESS_STATUS_OPEN).value;
    }

    /**
     * <pre>PROCESS_STATUS_REMINDER
     * SQLite key: process_status_reminder
     * [en] Status of Reminder (WV Status)
     * [de] Status der Wiedervorlage (WV Status)</pre>
     * @return [en] Status of Reminder (WV Status), [de] Status der Wiedervorlage (WV Status)
     */
    public static String getProcessStatusReminder() {
        return get(PROCESS_STATUS_REMINDER).value;
    }

    public static Translation getProcessStatusReminderObj() {
        return get(PROCESS_STATUS_REMINDER);
    }

    /**
     * <pre>PROCESS_STATUS_REMINDER_CLOSED
     * SQLite key: process_status_reminder_closed
     * [en] closed
     * [de] abgearbeitet</pre>
     * ATTENTION this value ('Closed') seems to be also defined under the key CASE_STATUS_CLOSED! this value ('closed') seems to be also defined under the key WORKFLOW_STATE_CLOSED!
     * @return [en] closed, [de] abgearbeitet
     */
    public static String getProcessStatusReminderClosed() {
        return get(PROCESS_STATUS_REMINDER_CLOSED).value;
    }

    /**
     * <pre>PROCESS_STATUS_REMINDER_OPEN
     * SQLite key: process_status_reminder_open
     * [en] open
     * [de] offen</pre>
     * ATTENTION this value ('Open') seems to be also defined under the key EVENT_OPERATION_OPEN! this value ('open') seems to be also defined under the key REMINDER_UNFINISHED_STATUS! this value ('open') seems to be also defined under the key WORKFLOW_STATE_OPEN!
     * @return [en] open, [de] offen
     */
    public static String getProcessStatusReminderOpen() {
        return get(PROCESS_STATUS_REMINDER_OPEN).value;
    }

    /**
     * <pre>PROCESS_STATUS_REOPEN
     * SQLite key: process_status_reopen
     * [en] Reopen process
     * [de] Vorgang neu öffnen</pre>
     * @return [en] Reopen process, [de] Vorgang neu öffnen
     */
    public static String getProcessStatusReopen() {
        return get(PROCESS_STATUS_REOPEN).value;
    }

    /**
     * <pre>PROCESS_STATUS_REOPENED
     * SQLite key: process_status_reopened
     * [en] Process is reopened
     * [de] Vorgang wurde wieder geöffnet</pre>
     * @return [en] Process is reopened, [de] Vorgang wurde wieder geöffnet
     */
    public static String getProcessStatusReopened() {
        return get(PROCESS_STATUS_REOPENED).value;
    }

    /**
     * <pre>PROCESS_SUBJECT_CHANGED_TOOLTIP
     * SQLite key: process_subjectchanged_tooltip
     * [en] See Details of this Process
     * [de] Siehe Details zu diesem Vorgang</pre>
     * ATTENTION this value ('See Details of this Process') seems to be also defined under the key PROCESS_CLOSED_TOOLTIP! this value ('See Details of this Process') seems to be also defined under the key PROCESS_USER_CHANGED_TOOLTIP!
     * @return [en] See Details of this Process, [de] Siehe Details zu diesem Vorgang
     */
    public static String getProcessSubjectChangedTooltip() {
        return get(PROCESS_SUBJECT_CHANGED_TOOLTIP).value;
    }

    /**
     * <pre>PROCESS_TOPIC
     * SQLite key: process_topic
     * [en] Process Topic
     * [de] Vorgangsart (Vorgangsart)</pre>
     * ATTENTION this value ('Process Topic') seems to be also defined under the key PROCESS_PREVIEW_PROCESS_TOPIC!
     * @return [en] Process Topic, [de] Vorgangsart (Vorgangsart)
     */
    public static String getProcessTopic() {
        return get(PROCESS_TOPIC).value;
    }

    public static Translation getProcessTopicObj() {
        return get(PROCESS_TOPIC);
    }

    /**
     * <pre>PROCESS_TOPICS
     * SQLite key: process_topics
     * [en] Process topics
     * [de] Vorgangsarten</pre>
     * @return [en] Process topics, [de] Vorgangsarten
     */
    public static String getProcessTopics() {
        return get(PROCESS_TOPICS).value;
    }

    /**
     * <pre>PROCESS_TYPE_HOSPITAL
     * SQLite key: processtype_hospital
     * [de] Krankenhaus</pre>
     * @return [de] Krankenhaus
     */
    public static String getProcessTypeHospital() {
        return get(PROCESS_TYPE_HOSPITAL).value;
    }

    /**
     * <pre>PROCESS_TYPE_INSURANCE
     * SQLite key: processtype_insurance
     * [de] Krankenkasse</pre>
     * ATTENTION this value ('Krankenkasse') seems to be also defined under the key RULES_TXT_CRIT_HEALTH_ENSURANCE_DIS!
     * @return [de] Krankenkasse
     */
    public static String getProcessTypeInsurance() {
        return get(PROCESS_TYPE_INSURANCE).value;
    }

    /**
     * <pre>PROCESS_USER
     * SQLite key: process_user
     * [en] User assigned the task for editing (Editor)
     * [de] Vorgangsbearbeiter (Bearbeiter)</pre>
     * @return [en] User assigned the task for editing (Editor), [de] Vorgangsbearbeiter (Bearbeiter)
     */
    public static String getProcessUser() {
        return get(PROCESS_USER).value;
    }

    public static Translation getProcessUserObj() {
        return get(PROCESS_USER);
    }

    /**
     * <pre>PROCESS_USER_CHANGED_TOOLTIP
     * SQLite key: process_userchanged_tooltip
     * [en] See Details of this Process
     * [de] Siehe Details zu diesem Vorgang</pre>
     * ATTENTION this value ('See Details of this Process') seems to be also defined under the key PROCESS_CLOSED_TOOLTIP! this value ('See Details of this Process') seems to be also defined under the key PROCESS_SUBJECT_CHANGED_TOOLTIP!
     * @return [en] See Details of this Process, [de] Siehe Details zu diesem Vorgang
     */
    public static String getProcessUserChangedTooltip() {
        return get(PROCESS_USER_CHANGED_TOOLTIP).value;
    }

    /**
     * <pre>PROCESSES
     * SQLite key: processes
     * [en] Processes
     * [de] Vorgänge</pre>
     * @return [en] Processes, [de] Vorgänge
     */
    public static String getProcesses() {
        return get(PROCESSES).value;
    }

    /**
     * <pre>PROCESSES_AVAILABLITY
     * SQLite key: processes_availablity
     * [en] List of available Processes
     * [de] Liste der verfügbaren Vorgänge</pre>
     * @return [en] List of available Processes, [de] Liste der verfügbaren Vorgänge
     */
    public static String getProcessesAvailablity() {
        return get(PROCESSES_AVAILABLITY).value;
    }

    /**
     * <pre>PROCESSES_AVAILABLITY_DIALOG
     * SQLite key: processes_availablity_dialog
     * [en] Available Processes
     * [de] Vorhandene Vorgänge</pre>
     * @return [en] Available Processes, [de] Vorhandene Vorgänge
     */
    public static String getProcessesAvailablityDialog() {
        return get(PROCESSES_AVAILABLITY_DIALOG).value;
    }

    /**
     * <pre>PROCESSLIST_CSV_EXPORT_DIAG
     * SQLite key: processlist_csv_export_diag
     * [en] Processlist is exporting as CSVdocumentation.menu.isActive=Is active:
     * [de] Vorgangliste wird als CSV exportiert</pre>
     * @return [en] Processlist is exporting as CSVdocumentation.menu.isActive=Is active:, [de] Vorgangliste wird als CSV exportiert
     */
    public static String getProcesslistCsvExportDiag() {
        return get(PROCESSLIST_CSV_EXPORT_DIAG).value;
    }

    /**
     * <pre>PROCESSLIST_EXCEL_EXPORT_DIAG
     * SQLite key: processlist_excel_export_diag
     * [en] Processlist is exporting as Excel
     * [de] Vorgangliste wird als Excel exportiert</pre>
     * @return [en] Processlist is exporting as Excel, [de] Vorgangliste wird als Excel exportiert
     */
    public static String getProcesslistExcelExportDiag() {
        return get(PROCESSLIST_EXCEL_EXPORT_DIAG).value;
    }

    /**
     * <pre>PROMPT_TEXTFIELD_TEXT
     * SQLite key: prompttextfieldtext
     * [en] Search events
     * [de] Suchtext eingeben</pre>
     * @return [en] Search events, [de] Suchtext eingeben
     */
    public static String getPromptTextfieldText() {
        return get(PROMPT_TEXTFIELD_TEXT).value;
    }

    /**
     * <pre>PSY
     * SQLite key: psy
     * [en] Psychosomatic
     * [de] Psychosomatik</pre>
     * ATTENTION this value ('Psychosomatic') seems to be also defined under the key CASE_TYPE_PSY!
     * @return [en] Psychosomatic, [de] Psychosomatik
     */
    public static String getPSY() {
        return get(PSY).value;
    }

    /**
     * <pre>QUARTER_1
     * SQLite key: quarter_1
     * [en] Q1
     * [de] Q1</pre>
     * @return [en] Q1, [de] Q1
     */
    public static String getQuarter1() {
        return get(QUARTER_1).value;
    }

    /**
     * <pre>QUARTER_2
     * SQLite key: quarter_2
     * [en] Q2
     * [de] Q2</pre>
     * @return [en] Q2, [de] Q2
     */
    public static String getQuarter2() {
        return get(QUARTER_2).value;
    }

    /**
     * <pre>QUARTER_3
     * SQLite key: quarter_3
     * [en] Q3
     * [de] Q3</pre>
     * @return [en] Q3, [de] Q3
     */
    public static String getQuarter3() {
        return get(QUARTER_3).value;
    }

    /**
     * <pre>QUARTER_4
     * SQLite key: quarter_4
     * [en] Q4
     * [de] Q4</pre>
     * @return [en] Q4, [de] Q4
     */
    public static String getQuarter4() {
        return get(QUARTER_4).value;
    }

    /**
     * <pre>QUOTA_LIST
     * SQLite key: quotalist
     * [en] Quota List
     * [de] Prüfquotenliste</pre>
     * @return [en] Quota List, [de] Prüfquotenliste
     */
    public static String getQuotaList() {
        return get(QUOTA_LIST).value;
    }

    /**
     * <pre>READMISSION
     * SQLite key: readmission
     * [en] Readmission
     * [de] Wiederaufnahme</pre>
     * @return [en] Readmission, [de] Wiederaufnahme
     */
    public static String getReadmission() {
        return get(READMISSION).value;
    }

    /**
     * <pre>READONLY_DOC_ITEM_AOP
     * SQLite key: readonly_doc_item_aop
     * [en] AOP
     * [de] AOP</pre>
     * @return [en] AOP, [de] AOP
     */
    public static String getReadonlyDocItemAop() {
        return get(READONLY_DOC_ITEM_AOP).value;
    }

    /**
     * <pre>READONLY_DOC_ITEM_AOP_FILE_NAME
     * SQLite key: readonly_doc_item_aop_file_name
     * [en] AOP-Katalog_
     * [de] AOP-Katalog_</pre>
     * @return [en] AOP-Katalog_, [de] AOP-Katalog_
     */
    public static String getReadonlyDocItemAopFileName() {
        return get(READONLY_DOC_ITEM_AOP_FILE_NAME).value;
    }

    /**
     * <pre>READONLY_DOC_ITEM_DKR_DRG
     * SQLite key: readonly_doc_item_dkr_drg
     * [en] Deutsche Kodierrichtlinien DRG
     * [de] Deutsche Kodierrichtlinien DRG</pre>
     * @return [en] Deutsche Kodierrichtlinien DRG, [de] Deutsche Kodierrichtlinien DRG
     */
    public static String getReadonlyDocItemDkrDrg() {
        return get(READONLY_DOC_ITEM_DKR_DRG).value;
    }

    /**
     * <pre>READONLY_DOC_ITEM_DKR_DRG_FILE_NAME
     * SQLite key: readonly_doc_item_dkr_drg_file_name
     * [en] Deutsche_Kodierrichtlinien_Version_
     * [de] Deutsche_Kodierrichtlinien_Version_</pre>
     * @return [en] Deutsche_Kodierrichtlinien_Version_, [de] Deutsche_Kodierrichtlinien_Version_
     */
    public static String getReadonlyDocItemDkrDrgFileName() {
        return get(READONLY_DOC_ITEM_DKR_DRG_FILE_NAME).value;
    }

    /**
     * <pre>READONLY_DOC_ITEM_DKR_PEPP
     * SQLite key: readonly_doc_item_dkr_pepp
     * [en] Deutsche Kodierrichtlinien PEPP
     * [de] Deutsche Kodierrichtlinien PEPP</pre>
     * @return [en] Deutsche Kodierrichtlinien PEPP, [de] Deutsche Kodierrichtlinien PEPP
     */
    public static String getReadonlyDocItemDkrPepp() {
        return get(READONLY_DOC_ITEM_DKR_PEPP).value;
    }

    /**
     * <pre>READONLY_DOC_ITEM_DKR_PEPP_FILE_NAME
     * SQLite key: readonly_doc_item_dkr_pepp_file_name
     * [en] DKR-Psych_Version_
     * [de] DKR-Psych_Version_</pre>
     * @return [en] DKR-Psych_Version_, [de] DKR-Psych_Version_
     */
    public static String getReadonlyDocItemDkrPeppFileName() {
        return get(READONLY_DOC_ITEM_DKR_PEPP_FILE_NAME).value;
    }

    /**
     * <pre>READONLY_DOC_ITEM_HELP
     * SQLite key: readonly_doc_item_help
     * [en] Handbuch
     * [de] Handbuch</pre>
     * @return [en] Handbuch, [de] Handbuch
     */
    public static String getReadonlyDocItemHelp() {
        return get(READONLY_DOC_ITEM_HELP).value;
    }

    /**
     * <pre>READONLY_DOC_ITEM_HELP_FILE_NAME
     * SQLite key: readonly_doc_item_help_file_name
     * [en] hilfefunktion_cpx
     * [de] hilfefunktion_cpx</pre>
     * @return [en] hilfefunktion_cpx, [de] hilfefunktion_cpx
     */
    public static String getReadonlyDocItemHelpFileName() {
        return get(READONLY_DOC_ITEM_HELP_FILE_NAME).value;
    }

    /**
     * <pre>READONLY_DOC_ITEM_MD_RECOMENDATION
     * SQLite key: readonly_doc_item_md_recomendation
     * [en] MD Empfehlungen
     * [de] MD Empfehlungen</pre>
     * @return [en] MD Empfehlungen, [de] MD Empfehlungen
     */
    public static String getReadonlyDocItemMdRecomendation() {
        return get(READONLY_DOC_ITEM_MD_RECOMENDATION).value;
    }

    /**
     * <pre>READONLY_DOC_ITEM_MD_RECOMENDATION_FILE_NAME
     * SQLite key: readonly_doc_item_md_recomendation_file_name
     * [en] MD_Kodierempfehlungen
     * [de] MD_Kodierempfehlungen</pre>
     * @return [en] MD_Kodierempfehlungen, [de] MD_Kodierempfehlungen
     */
    public static String getReadonlyDocItemMdRecomendationFileName() {
        return get(READONLY_DOC_ITEM_MD_RECOMENDATION_FILE_NAME).value;
    }

    /**
     * <pre>READONLY_DOC_ITEM_WARD_COMPECATING_THERAPY
     * SQLite key: readonly_doc_item_ward_compecating_therapy
     * [en] Stationsersetzende Behandlungsmethoden
     * [de] Stationsersetzende Behandlungsmethoden</pre>
     * @return [en] Stationsersetzende Behandlungsmethoden, [de] Stationsersetzende Behandlungsmethoden
     */
    public static String getReadonlyDocItemWardCompecatingTherapy() {
        return get(READONLY_DOC_ITEM_WARD_COMPECATING_THERAPY).value;
    }

    /**
     * <pre>READONLY_DOC_ITEM_WARD_COMPECATING_THERAPY_FILE_NAME
     * SQLite key: readonly_doc_item_ward_compecating_therapy_file_name
     * [en] Stationsersetzende_Behandlungsmethoden
     * [de] Stationsersetzende_Behandlungsmethoden</pre>
     * @return [en] Stationsersetzende_Behandlungsmethoden, [de] Stationsersetzende_Behandlungsmethoden
     */
    public static String getReadonlyDocItemWardCompecatingTherapyFileName() {
        return get(READONLY_DOC_ITEM_WARD_COMPECATING_THERAPY_FILE_NAME).value;
    }

    /**
     * <pre>REMINDER_ASSIGNED_TOOLTIP
     * SQLite key: reminder_assigned_tooltip
     * [en] See the details of a Reminder
     * [de] Siehe die Details einer Wiedervorlage</pre>
     * ATTENTION this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CHANGED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CREATED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_EXPIRED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_REMOVED_TOOLTIP!
     * @return [en] See the details of a Reminder, [de] Siehe die Details einer Wiedervorlage
     */
    public static String getReminderAssignedTooltip() {
        return get(REMINDER_ASSIGNED_TOOLTIP).value;
    }

    /**
     * <pre>REMINDER_CHANGED_TOOLTIP
     * SQLite key: reminder_changed_tooltip
     * [en] See the details of a Reminder
     * [de] Siehe die Details einer Wiedervorlage</pre>
     * ATTENTION this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_ASSIGNED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CREATED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_EXPIRED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_REMOVED_TOOLTIP!
     * @return [en] See the details of a Reminder, [de] Siehe die Details einer Wiedervorlage
     */
    public static String getReminderChangedTooltip() {
        return get(REMINDER_CHANGED_TOOLTIP).value;
    }

    /**
     * <pre>REMINDER_COMMENT
     * SQLite key: reminder_comment
     * [en] REM Comment
     * [de] WV Kommentar (WV Kommentar)</pre>
     * @return [en] REM Comment, [de] WV Kommentar (WV Kommentar)
     */
    public static String getReminderComment() {
        return get(REMINDER_COMMENT).value;
    }

    public static Translation getReminderCommentObj() {
        return get(REMINDER_COMMENT);
    }

    /**
     * <pre>REMINDER_CREATE
     * SQLite key: reminder_create
     * [en] create Reminder
     * [de] Wiedervorlage erstellen</pre>
     * @return [en] create Reminder, [de] Wiedervorlage erstellen
     */
    public static String getReminderCreate() {
        return get(REMINDER_CREATE).value;
    }

    /**
     * <pre>REMINDER_CREATED_TOOLTIP
     * SQLite key: reminder_created_tooltip
     * [en] See the details of a Reminder
     * [de] Siehe die Details einer Wiedervorlage</pre>
     * ATTENTION this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_ASSIGNED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CHANGED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_EXPIRED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_REMOVED_TOOLTIP!
     * @return [en] See the details of a Reminder, [de] Siehe die Details einer Wiedervorlage
     */
    public static String getReminderCreatedTooltip() {
        return get(REMINDER_CREATED_TOOLTIP).value;
    }

    /**
     * <pre>REMINDER_CREATION_DATE
     * SQLite key: reminder_creationdate
     * [en] REM created
     * [de] WV angelegt</pre>
     * @return [en] REM created, [de] WV angelegt
     */
    public static String getReminderCreationDate() {
        return get(REMINDER_CREATION_DATE).value;
    }

    /**
     * <pre>REMINDER_DUEDATE_IS_BLANK
     * SQLite key: reminder_duedate_isblank
     * [en] not set
     * [de] nicht gesetzt</pre>
     * ATTENTION this value ('not set') seems to be also defined under the key VERSION_RISK_TYPE_NOT_SET!
     * @return [en] not set, [de] nicht gesetzt
     */
    public static String getReminderDuedateIsBlank() {
        return get(REMINDER_DUEDATE_IS_BLANK).value;
    }

    /**
     * <pre>REMINDER_EXPIRED_TOOLTIP
     * SQLite key: reminder_expired_tooltip
     * [en] See the details of a Reminder
     * [de] Siehe die Details einer Wiedervorlage</pre>
     * ATTENTION this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_ASSIGNED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CHANGED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CREATED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_REMOVED_TOOLTIP!
     * @return [en] See the details of a Reminder, [de] Siehe die Details einer Wiedervorlage
     */
    public static String getReminderExpiredTooltip() {
        return get(REMINDER_EXPIRED_TOOLTIP).value;
    }

    /**
     * <pre>REMINDER_FINISHED
     * SQLite key: reminder_finished
     * [en] Reminder has been Finished (Finished reminders)
     * [de] abgearbeitet (Wiedervorlage abgearbeitet)</pre>
     * @return [en] Reminder has been Finished (Finished reminders), [de] abgearbeitet (Wiedervorlage abgearbeitet)
     */
    public static String getReminderFinished() {
        return get(REMINDER_FINISHED).value;
    }

    public static Translation getReminderFinishedObj() {
        return get(REMINDER_FINISHED);
    }

    /**
     * <pre>REMINDER_FINISHED_DATE
     * SQLite key: reminder_finisheddate
     * [en] Finished Date
     * [de] Abgearbeitet am</pre>
     * @return [en] Finished Date, [de] Abgearbeitet am
     */
    public static String getReminderFinishedDate() {
        return get(REMINDER_FINISHED_DATE).value;
    }

    /**
     * <pre>REMINDER_FINISHED_STATUS
     * SQLite key: reminder_finishedstatus
     * [en] finished
     * [de] abgearbeitet</pre>
     * @return [en] finished, [de] abgearbeitet
     */
    public static String getReminderFinishedStatus() {
        return get(REMINDER_FINISHED_STATUS).value;
    }

    /**
     * <pre>REMINDER_HIGH_PRIORITY
     * SQLite key: reminder_highpriority
     * [en] high Priority
     * [de] hohe Priorität</pre>
     * ATTENTION this value ('high Priority') seems to be also defined under the key PRIORITY_HIGH!
     * @return [en] high Priority, [de] hohe Priorität
     */
    public static String getReminderHighPriority() {
        return get(REMINDER_HIGH_PRIORITY).value;
    }

    /**
     * <pre>REMINDER_LATEST
     * SQLite key: reminder_latest
     * [en] latest open Reminder (latest Reminder)
     * [de] Fälligkeitsdatum der offenen Wiedervorlage (WV Fälligkeit)</pre>
     * @return [en] latest open Reminder (latest Reminder), [de] Fälligkeitsdatum der offenen Wiedervorlage (WV Fälligkeit)
     */
    public static String getReminderLatest() {
        return get(REMINDER_LATEST).value;
    }

    public static Translation getReminderLatestObj() {
        return get(REMINDER_LATEST);
    }

    /**
     * <pre>REMINDER_LATEST_FROM
     * SQLite key: reminder_latest_from
     * [en] Reminder from
     * [de] Fällig von</pre>
     * @return [en] Reminder from, [de] Fällig von
     */
    public static String getReminderLatestFrom() {
        return get(REMINDER_LATEST_FROM).value;
    }

    /**
     * <pre>REMINDER_LATEST_TO
     * SQLite key: reminder_latest_to
     * [en] Reminder to
     * [de] Fällig bis</pre>
     * @return [en] Reminder to, [de] Fällig bis
     */
    public static String getReminderLatestTo() {
        return get(REMINDER_LATEST_TO).value;
    }

    /**
     * <pre>REMINDER_MODE_SHOW_ALL
     * SQLite key: reminder_mode_show_all
     * [en] All reminders
     * [de] alle Wiedervorlagen</pre>
     * @return [en] All reminders, [de] alle Wiedervorlagen
     */
    public static String getReminderModeShowAll() {
        return get(REMINDER_MODE_SHOW_ALL).value;
    }

    /**
     * <pre>REMINDER_MODE_SHOW_CLOSED
     * SQLite key: reminder_mode_show_closed
     * [en] Closed reminders
     * [de] abgearbeitete Wiedervorlagen</pre>
     * @return [en] Closed reminders, [de] abgearbeitete Wiedervorlagen
     */
    public static String getReminderModeShowClosed() {
        return get(REMINDER_MODE_SHOW_CLOSED).value;
    }

    /**
     * <pre>REMINDER_MODE_SHOW_OPEN
     * SQLite key: reminder_mode_show_open
     * [en] Open reminders
     * [de] offene Wiedervorlagen</pre>
     * @return [en] Open reminders, [de] offene Wiedervorlagen
     */
    public static String getReminderModeShowOpen() {
        return get(REMINDER_MODE_SHOW_OPEN).value;
    }

    /**
     * <pre>REMINDER_RECEIVER
     * SQLite key: reminder_receiver
     * [en] REM Receiver
     * [de] WV Empfänger (WV Empfänger)</pre>
     * @return [en] REM Receiver, [de] WV Empfänger (WV Empfänger)
     */
    public static String getReminderReceiver() {
        return get(REMINDER_RECEIVER).value;
    }

    public static Translation getReminderReceiverObj() {
        return get(REMINDER_RECEIVER);
    }

    /**
     * <pre>REMINDER_REMOVED_TOOLTIP
     * SQLite key: reminder_removed_tooltip
     * [en] See the details of a Reminder
     * [de] Siehe die Details einer Wiedervorlage</pre>
     * ATTENTION this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_ASSIGNED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CHANGED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_CREATED_TOOLTIP! this value ('See the details of a Reminder') seems to be also defined under the key REMINDER_EXPIRED_TOOLTIP!
     * @return [en] See the details of a Reminder, [de] Siehe die Details einer Wiedervorlage
     */
    public static String getReminderRemovedTooltip() {
        return get(REMINDER_REMOVED_TOOLTIP).value;
    }

    /**
     * <pre>REMINDER_SENDER
     * SQLite key: reminder_sender
     * [en] REM Sender
     * [de] WV Sender</pre>
     * @return [en] REM Sender, [de] WV Sender
     */
    public static String getReminderSender() {
        return get(REMINDER_SENDER).value;
    }

    /**
     * <pre>REMINDER_SUBJECT
     * SQLite key: reminder_subject
     * [en] Reminder
     * [de] WV Art (WV Art)</pre>
     * ATTENTION this value ('Reminder') seems to be also defined under the key EVENT_NAME_REMINDER!
     * @return [en] Reminder, [de] WV Art (WV Art)
     */
    public static String getReminderSubject() {
        return get(REMINDER_SUBJECT).value;
    }

    public static Translation getReminderSubjectObj() {
        return get(REMINDER_SUBJECT);
    }

    /**
     * <pre>REMINDER_SUBJECT_WAITING_FOR_MDK_REPORT
     * SQLite key: remindersubject_waitingformdkreport
     * [en] Waiting for MD report
     * [de] Warten auf MD-Gutachten</pre>
     * @return [en] Waiting for MD report, [de] Warten auf MD-Gutachten
     */
    public static String getReminderSubjectWaitingForMdkReport() {
        return get(REMINDER_SUBJECT_WAITING_FOR_MDK_REPORT).value;
    }

    /**
     * <pre>REMINDER_SUBJECTS
     * SQLite key: reminder_subjects
     * [en] Reminders
     * [de] Wiedervorlagearten (WV Arten)</pre>
     * ATTENTION this value ('Reminders') seems to be also defined under the key REMINDERS!
     * @return [en] Reminders, [de] Wiedervorlagearten (WV Arten)
     */
    public static String getReminderSubjects() {
        return get(REMINDER_SUBJECTS).value;
    }

    public static Translation getReminderSubjectsObj() {
        return get(REMINDER_SUBJECTS);
    }

    /**
     * <pre>REMINDER_TYPE
     * SQLite key: reminder_type
     * [en] REM type
     * [de] Art der Wiedervorlage</pre>
     * @return [en] REM type, [de] Art der Wiedervorlage
     */
    public static String getReminderType() {
        return get(REMINDER_TYPE).value;
    }

    /**
     * <pre>REMINDER_UNFINISHED_STATUS
     * SQLite key: reminder_unfinishedstatus
     * [en] open
     * [de] offen</pre>
     * ATTENTION this value ('Open') seems to be also defined under the key EVENT_OPERATION_OPEN! this value ('open') seems to be also defined under the key PROCESS_STATUS_REMINDER_OPEN! this value ('open') seems to be also defined under the key WORKFLOW_STATE_OPEN!
     * @return [en] open, [de] offen
     */
    public static String getReminderUnfinishedStatus() {
        return get(REMINDER_UNFINISHED_STATUS).value;
    }

    /**
     * <pre>REMINDER_UPDATE_HEADER
     * SQLite key: reminder_updateheader
     * [en] Update Reminder
     * [de] Wiedervorlage aktualisieren</pre>
     * @return [en] Update Reminder, [de] Wiedervorlage aktualisieren
     */
    public static String getReminderUpdateHeader() {
        return get(REMINDER_UPDATE_HEADER).value;
    }

    /**
     * <pre>REMINDER_USER_IS_BLANK
     * SQLite key: reminder_user_isblank
     * [en] not assigned
     * [de] nicht zugewiesen</pre>
     * @return [en] not assigned, [de] nicht zugewiesen
     */
    public static String getReminderUserIsBlank() {
        return get(REMINDER_USER_IS_BLANK).value;
    }

    /**
     * <pre>REMINDER_VALIDATION_ERROR_NO_VALID_RECEIVER
     * SQLite key: reminder_validation_error_novalidreceiver
     * [en] WV Empfänger nicht vorhanden
     * [de] WV Empfänger nicht vorhanden</pre>
     * @return [en] WV Empfänger nicht vorhanden, [de] WV Empfänger nicht vorhanden
     */
    public static String getReminderValidationErrorNoValidReceiver() {
        return get(REMINDER_VALIDATION_ERROR_NO_VALID_RECEIVER).value;
    }

    /**
     * <pre>REMINDER_VALIDATION_WARNING_NO_RECEIVER
     * SQLite key: reminder_validation_warning_noreceiver
     * [en] Kein WV Empfänger eingetragen
     * [de] Kein WV Empfänger eingetragen</pre>
     * @return [en] Kein WV Empfänger eingetragen, [de] Kein WV Empfänger eingetragen
     */
    public static String getReminderValidationWarningNoReceiver() {
        return get(REMINDER_VALIDATION_WARNING_NO_RECEIVER).value;
    }

    /**
     * <pre>REMINDERS
     * SQLite key: reminders
     * [en] Reminders
     * [de] Wiedervorlagen</pre>
     * ATTENTION this value ('Reminders') seems to be also defined under the key REMINDER_SUBJECTS!
     * @return [en] Reminders, [de] Wiedervorlagen
     */
    public static String getReminders() {
        return get(REMINDERS).value;
    }

    /**
     * <pre>RENAME
     * SQLite key: rename
     * [en] Rename
     * [de] Umbenennen</pre>
     * @return [en] Rename, [de] Umbenennen
     */
    public static String getRename() {
        return get(RENAME).value;
    }

    /**
     * <pre>REPORT_CANCELLED
     * SQLite key: report_cancelled
     * [en] Report Generation is Cancelled
     * [de] Berichtsgenerierung wird abgebrochen</pre>
     * @return [en] Report Generation is Cancelled, [de] Berichtsgenerierung wird abgebrochen
     */
    public static String getReportCancelled() {
        return get(REPORT_CANCELLED).value;
    }

    /**
     * <pre>REPORT_DIALOG_CONTENT_TEXT
     * SQLite key: report_dialog_contenttext
     * [en] Report is Generating
     * [de] Report wird generiert</pre>
     * @return [en] Report is Generating, [de] Report wird generiert
     */
    public static String getReportDialogContentText() {
        return get(REPORT_DIALOG_CONTENT_TEXT).value;
    }

    /**
     * <pre>REPORT_DIALOG_HEADER_TEXT
     * SQLite key: report_dialog_headertext
     * [en] Note
     * [de] Hinweis</pre>
     * ATTENTION this value ('Note') seems to be also defined under the key WIEDERVORLAGE_COMMENT_DIALOG!
     * @return [en] Note, [de] Hinweis
     */
    public static String getReportDialogHeaderText() {
        return get(REPORT_DIALOG_HEADER_TEXT).value;
    }

    /**
     * <pre>REPORT_FAILED
     * SQLite key: report_failed
     * [en] Report Generation is Failed
     * [de] Berichtsgenerierung ist fehlgeschlagen</pre>
     * @return [en] Report Generation is Failed, [de] Berichtsgenerierung ist fehlgeschlagen
     */
    public static String getReportFailed() {
        return get(REPORT_FAILED).value;
    }

    /**
     * <pre>REPORT_FILE_CHOOSER_TILE
     * SQLite key: report_filechooser_tile
     * [en] Create PDF documentation
     * [de] PDF-Dokumentation erstellen</pre>
     * @return [en] Create PDF documentation, [de] PDF-Dokumentation erstellen
     */
    public static String getReportFileChooserTile() {
        return get(REPORT_FILE_CHOOSER_TILE).value;
    }

    /**
     * <pre>REPORT_GENERATE
     * SQLite key: report_generate
     * [en] Create report
     * [de] Report erstellen</pre>
     * @return [en] Create report, [de] Report erstellen
     */
    public static String getReportGenerate() {
        return get(REPORT_GENERATE).value;
    }

    /**
     * <pre>REPORT_OPEN
     * SQLite key: report_open
     * [en] Show report
     * [de] Report anzeigen</pre>
     * @return [en] Show report, [de] Report anzeigen
     */
    public static String getReportOpen() {
        return get(REPORT_OPEN).value;
    }

    /**
     * <pre>REPORT_SAVE_AND_OPEN
     * SQLite key: report_saveandopen
     * [en] Save report
     * [de] Report speichern</pre>
     * @return [en] Save report, [de] Report speichern
     */
    public static String getReportSaveAndOpen() {
        return get(REPORT_SAVE_AND_OPEN).value;
    }

    /**
     * <pre>REQUEST_ADDED_TOOLTIP
     * SQLite key: request_added_tooltip
     * [en] Update this Request
     * [de] Aktualisieren Sie diese Anfrage</pre>
     * @return [en] Update this Request, [de] Aktualisieren Sie diese Anfrage
     */
    public static String getRequestAddedTooltip() {
        return get(REQUEST_ADDED_TOOLTIP).value;
    }

    /**
     * <pre>REQUEST_CREATE
     * SQLite key: request_create
     * [en] create Request
     * [de] Anfrage erstellen</pre>
     * @return [en] create Request, [de] Anfrage erstellen
     */
    public static String getRequestCreate() {
        return get(REQUEST_CREATE).value;
    }

    /**
     * <pre>REQUEST_CREATION_DATE
     * SQLite key: request_creationdate
     * [en] Request Creation Date (Creation Date)
     * [de] Anlagedatum der Anfrage (Anlagedatum)</pre>
     * @return [en] Request Creation Date (Creation Date), [de] Anlagedatum der Anfrage (Anlagedatum)
     */
    public static String getRequestCreationDate() {
        return get(REQUEST_CREATION_DATE).value;
    }

    public static Translation getRequestCreationDateObj() {
        return get(REQUEST_CREATION_DATE);
    }

    /**
     * <pre>REQUEST_REPORT_DATE
     * SQLite key: requestreportdate
     * [en] Report date
     * [de] Gutachtendatum (Guta.-Datum)</pre>
     * @return [en] Report date, [de] Gutachtendatum (Guta.-Datum)
     */
    public static String getRequestReportDate() {
        return get(REQUEST_REPORT_DATE).value;
    }

    public static Translation getRequestReportDateObj() {
        return get(REQUEST_REPORT_DATE);
    }

    /**
     * <pre>REQUEST_REPORT_DATE_FROM
     * SQLite key: requestreportdatefrom
     * [en] Report date from
     * [de] Gutachtendatum von</pre>
     * @return [en] Report date from, [de] Gutachtendatum von
     */
    public static String getRequestReportDateFrom() {
        return get(REQUEST_REPORT_DATE_FROM).value;
    }

    /**
     * <pre>REQUEST_REPORT_DATE_TO
     * SQLite key: requestreportdateto
     * [en] Report date to
     * [de] Gutachtendatum bis</pre>
     * @return [en] Report date to, [de] Gutachtendatum bis
     */
    public static String getRequestReportDateTo() {
        return get(REQUEST_REPORT_DATE_TO).value;
    }

    /**
     * <pre>REQUEST_STATUS
     * SQLite key: request_status
     * [en] Request State
     * [de] Status der Anfrage (Anfr.-Status)</pre>
     * ATTENTION this value ('Request State') seems to be also defined under the key MDK_STATUS!
     * @return [en] Request State, [de] Status der Anfrage (Anfr.-Status)
     */
    public static String getRequestStatus() {
        return get(REQUEST_STATUS).value;
    }

    public static Translation getRequestStatusObj() {
        return get(REQUEST_STATUS);
    }

    /**
     * <pre>REQUEST_TYPE
     * SQLite key: requesttype
     * [de] Anfragetyp</pre>
     * @return [de] Anfragetyp
     */
    public static String getRequestType() {
        return get(REQUEST_TYPE).value;
    }

    /**
     * <pre>REQUEST_TYPE_EV
     * SQLite key: requesttype_ev
     * [de] Erörterungsverfahren</pre>
     * @return [de] Erörterungsverfahren
     */
    public static String getRequestTypeEV() {
        return get(REQUEST_TYPE_EV).value;
    }

    /**
     * <pre>REQUEST_TYPE_EXAMINATION
     * SQLite key: requesttype_examination
     * [en] Examination/Pre-trial Request
     * [de] Prüfanfrage/Vorverfahren</pre>
     * @return [en] Examination/Pre-trial Request, [de] Prüfanfrage/Vorverfahren
     */
    public static String getRequestTypeExamination() {
        return get(REQUEST_TYPE_EXAMINATION).value;
    }

    /**
     * <pre>REQUEST_TYPE_INSURANCE
     * SQLite key: requesttype_insurance
     * [en] Insurance
     * [de] Versicherung</pre>
     * ATTENTION this value ('Insurance') seems to be also defined under the key INSURANCE!
     * @return [en] Insurance, [de] Versicherung
     */
    public static String getRequestTypeInsurance() {
        return get(REQUEST_TYPE_INSURANCE).value;
    }

    /**
     * <pre>REQUEST_TYPE_INSURANCE_ASSOCIATION
     * SQLite key: requesttype_insuranceassociation
     * [en] Insurance Association
     * [de] Berufsgenossenschaft</pre>
     * ATTENTION this value ('Insurance Association') seems to be also defined under the key INSURANCE_ASSOCIATION!
     * @return [en] Insurance Association, [de] Berufsgenossenschaft
     */
    public static String getRequestTypeInsuranceAssociation() {
        return get(REQUEST_TYPE_INSURANCE_ASSOCIATION).value;
    }

    /**
     * <pre>REQUEST_TYPE_MDK
     * SQLite key: requesttype_mdk
     * [en] MD
     * [de] Medizinischer Dienst</pre>
     * ATTENTION this value ('MD') seems to be also defined under the key CASE_RESOLVE_MD! this value ('MD') seems to be also defined under the key DEPARTMENT_TYPE_MAIN_DEPARTMENT!
     * @return [en] MD, [de] Medizinischer Dienst
     */
    public static String getRequestTypeMdk() {
        return get(REQUEST_TYPE_MDK).value;
    }

    /**
     * <pre>REQUEST_TYPE_OTHER
     * SQLite key: requesttype_other
     * [en] Other
     * [de] Sonstiges</pre>
     * ATTENTION this value ('Other') seems to be also defined under the key CASE_TYPE_OTHER! this value ('other') seems to be also defined under the key DRG_PARTITION_OTHER! this value ('Other') seems to be also defined under the key RISK_AREA_OTHER!
     * @return [en] Other, [de] Sonstiges
     */
    public static String getRequestTypeOther() {
        return get(REQUEST_TYPE_OTHER).value;
    }

    /**
     * <pre>RESULT
     * SQLite key: result
     * [en] Ergebnis
     * [de] Ergebnis</pre>
     * ATTENTION this value ('Ergebnis') seems to be also defined under the key RULES_TXT_RESULT!
     * @return [en] Ergebnis, [de] Ergebnis
     */
    public static String getResult() {
        return get(RESULT).value;
    }

    /**
     * <pre>REVENUE
     * SQLite key: revenue
     * [en] Revenue
     * [de] Erlös</pre>
     * @return [en] Revenue, [de] Erlös
     */
    public static String getRevenue() {
        return get(REVENUE).value;
    }

    /**
     * <pre>REVENUE_MATH_DRG_CARE
     * SQLite key: revenue_math_drg_care
     * [en] care CW {0} x Care-Baserate {1}
     * [de] PflegeCW {0} x Pflege-Baserate {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] care CW {0} x Care-Baserate {1}, [de] PflegeCW {0} x Pflege-Baserate {1}
     */
    public static String getRevenueMathDrgCare(final Object... pParams) {
        return get(REVENUE_MATH_DRG_CARE, pParams).value;
    }

    /**
     * <pre>REVENUE_MATH_DRG_CARE_GRADE
     * SQLite key: revenue_math_drg_care_grade
     * [en] Care-Baserate {0} from {1} to {2}: {3} Days = {4}
     * [de] Pflege-Baserate {0}{1} von {2} bis {3}: {4} Tage</pre>
     * @param pParams placeholder replacements
     * @return [en] Care-Baserate {0} from {1} to {2}: {3} Days = {4}, [de] Pflege-Baserate {0}{1} von {2} bis {3}: {4} Tage
     */
    public static String getRevenueMathDrgCareGrade(final Object... pParams) {
        return get(REVENUE_MATH_DRG_CARE_GRADE, pParams).value;
    }

    /**
     * <pre>REVENUE_MATH_DRG_CARE_GRADE_LAYOUT
     * SQLite key: revenue_math_drg_care_grade_layout
     * [de] Pflege-Erlös: bei PflegeCW {0} (CW pro Tag {1} x {2} Tag(e))</pre>
     * @param pParams placeholder replacements
     * @return [de] Pflege-Erlös: bei PflegeCW {0} (CW pro Tag {1} x {2} Tag(e))
     */
    public static String getRevenueMathDrgCareGradeLayout(final Object... pParams) {
        return get(REVENUE_MATH_DRG_CARE_GRADE_LAYOUT, pParams).value;
    }

    /**
     * <pre>REVENUE_MATH_DRG_CARE_GRADE_LAYOUT_CARE_REVENUE
     * SQLite key: revenue_math_drg_care_grade_layoutcare-revenue
     * [en] for CareCW {0} (CW in day {1} x {2} days)
     * [de] for CareCW {0} (CW in day {1} x {2} days)</pre>
     * @param pParams placeholder replacements
     * @return [en] for CareCW {0} (CW in day {1} x {2} days), [de] for CareCW {0} (CW in day {1} x {2} days)
     */
    public static String getRevenueMathDrgCareGradeLayoutCare_Revenue(final Object... pParams) {
        return get(REVENUE_MATH_DRG_CARE_GRADE_LAYOUT_CARE_REVENUE, pParams).value;
    }

    /**
     * <pre>REVENUE_MATH_DRG_CARE_LAYOUT
     * SQLite key: revenue_math_drg_care_layout
     * [en] Care-Revenue: (Care-Baserate {0}{1} x CareCW {2}) x CareDay(s) {3}
     * [de] Pflege-Erlös: (Pflege-Baserate {0}{1} x PflegeCW {2}) x Pflegetage {3}</pre>
     * @param pParams placeholder replacements
     * @return [en] Care-Revenue: (Care-Baserate {0}{1} x CareCW {2}) x CareDay(s) {3}, [de] Pflege-Erlös: (Pflege-Baserate {0}{1} x PflegeCW {2}) x Pflegetage {3}
     */
    public static String getRevenueMathDrgCareLayout(final Object... pParams) {
        return get(REVENUE_MATH_DRG_CARE_LAYOUT, pParams).value;
    }

    /**
     * <pre>REVENUE_MATH_DRG_CASE
     * SQLite key: revenue_math_drg_case
     * [en] eff. CW {0} x Drg-Baserate {1}
     * [de] eff. CW {0} x DRG-Baserate {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] eff. CW {0} x Drg-Baserate {1}, [de] eff. CW {0} x DRG-Baserate {1}
     */
    public static String getRevenueMathDrgCase(final Object... pParams) {
        return get(REVENUE_MATH_DRG_CASE, pParams).value;
    }

    /**
     * <pre>REVENUE_MATH_DRG_CATALOG_LAYOUT
     * SQLite key: revenue_math_drg_catalog_layout
     * [en] Catalog-Revenue: DRG-Baserate {0}{1} x CatalogCW {2}
     * [de] Katalog-Erlös: DRG-Baserate {0}{1} x KatalogCW {2}</pre>
     * @param pParams placeholder replacements
     * @return [en] Catalog-Revenue: DRG-Baserate {0}{1} x CatalogCW {2}, [de] Katalog-Erlös: DRG-Baserate {0}{1} x KatalogCW {2}
     */
    public static String getRevenueMathDrgCatalogLayout(final Object... pParams) {
        return get(REVENUE_MATH_DRG_CATALOG_LAYOUT, pParams).value;
    }

    /**
     * <pre>REVENUE_MATH_DRG_CORR_DEDUCTION_LAYOUT
     * SQLite key: revenue_math_drg_corr_deduction_layout
     * [en] Deduction: (DRG-Baserate {0}{1} x corr.CW {2}) x corr.Day(s) {3}
     * [de] Abschlag: (DRG-Baserate {0}{1} x korr.CW {2}) x korr.Tag(e) {3}</pre>
     * @param pParams placeholder replacements
     * @return [en] Deduction: (DRG-Baserate {0}{1} x corr.CW {2}) x corr.Day(s) {3}, [de] Abschlag: (DRG-Baserate {0}{1} x korr.CW {2}) x korr.Tag(e) {3}
     */
    public static String getRevenueMathDrgCorrDeductionLayout(final Object... pParams) {
        return get(REVENUE_MATH_DRG_CORR_DEDUCTION_LAYOUT, pParams).value;
    }

    /**
     * <pre>REVENUE_MATH_DRG_CORR_SURCHARGE_LAYOUT
     * SQLite key: revenue_math_drg_corr_surcharge_layout
     * [en] Surcharge: (DRG-Baserate {0}{1} x corr.CW {2}) x corr.Day(s) {3}
     * [de] Zuschlag: (DRG-Baserate {0}{1} x korr.CW {2}) x korr.Tag(e) {3}</pre>
     * @param pParams placeholder replacements
     * @return [en] Surcharge: (DRG-Baserate {0}{1} x corr.CW {2}) x corr.Day(s) {3}, [de] Zuschlag: (DRG-Baserate {0}{1} x korr.CW {2}) x korr.Tag(e) {3}
     */
    public static String getRevenueMathDrgCorrSurchargeLayout(final Object... pParams) {
        return get(REVENUE_MATH_DRG_CORR_SURCHARGE_LAYOUT, pParams).value;
    }

    /**
     * <pre>REVENUE_MATH_DRG_DAY_FEE
     * SQLite key: revenue_math_drg_day_fee
     * [en] Day Fee {0}{1} x Day(s) {2}
     * [de] Entgelt-Erlös: Tagesentgelt {0}{1} x Tag(e) {2}</pre>
     * @param pParams placeholder replacements
     * @return [en] Day Fee {0}{1} x Day(s) {2}, [de] Entgelt-Erlös: Tagesentgelt {0}{1} x Tag(e) {2}
     */
    public static String getRevenueMathDrgDayFee(final Object... pParams) {
        return get(REVENUE_MATH_DRG_DAY_FEE, pParams).value;
    }

    /**
     * <pre>REVENUE_MATH_PEPP_CWDAY
     * SQLite key: revenue_math_pepp_cwday
     * [en] CW in day({0})
     * [de] CW pro Tag({0})</pre>
     * @param pParams placeholder replacements
     * @return [en] CW in day({0}), [de] CW pro Tag({0})
     */
    public static String getRevenueMathPeppCwday(final Object... pParams) {
        return get(REVENUE_MATH_PEPP_CWDAY, pParams).value;
    }

    /**
     * <pre>REVENUE_MATH_PEPP_GT_2015
     * SQLite key: revenue_math_pepp_gt2015
     * [en] Compensation-Grade:  {0} (revenue=  CW in day({1}) x Baserate from {3} to {4} ({4})X  ({5}) Days
     * [de] Vergütungsklasse:{0}, Erlös= CW pro Tag ({1}) x Baserate von {2} bis {3}({4}) X ({5}) Tage</pre>
     * @param pParams placeholder replacements
     * @return [en] Compensation-Grade:  {0} (revenue=  CW in day({1}) x Baserate from {3} to {4} ({4})X  ({5}) Days, [de] Vergütungsklasse:{0}, Erlös= CW pro Tag ({1}) x Baserate von {2} bis {3}({4}) X ({5}) Tage
     */
    public static String getRevenueMathPeppGt2015(final Object... pParams) {
        return get(REVENUE_MATH_PEPP_GT_2015, pParams).value;
    }

    /**
     * <pre>REVENUE_MATH_PEPP_LT_2015
     * SQLite key: revenue_math_pepp_lt2015
     * [en] Compensation-Level: {0} (revenue=  CW in day({1}) x Baserate from {2} to {3} ({4})X  ({5}) Days
     * [de] Vergütungsstufe:{0}, Erlös=CW pro Tag ({1}) x Baserate von {2} bis {3} ({4}) X ({5}) Tage</pre>
     * @param pParams placeholder replacements
     * @return [en] Compensation-Level: {0} (revenue=  CW in day({1}) x Baserate from {2} to {3} ({4})X  ({5}) Days, [de] Vergütungsstufe:{0}, Erlös=CW pro Tag ({1}) x Baserate von {2} bis {3} ({4}) X ({5}) Tage
     */
    public static String getRevenueMathPeppLt2015(final Object... pParams) {
        return get(REVENUE_MATH_PEPP_LT_2015, pParams).value;
    }

    /**
     * <pre>REVENUE_PEPP
     * SQLite key: revenue_pepp
     * [de] PEPP-Erlös</pre>
     * @return [de] PEPP-Erlös
     */
    public static String getRevenuePepp() {
        return get(REVENUE_PEPP).value;
    }

    /**
     * <pre>REVENUE_PEPP_DAILY_DAY
     * SQLite key: revenue_pepp_dailyday
     * [de] ET-Erlös</pre>
     * @return [de] ET-Erlös
     */
    public static String getRevenuePeppDailyDay() {
        return get(REVENUE_PEPP_DAILY_DAY).value;
    }

    /**
     * <pre>REVENUE_PEPP_SUPPLFEE
     * SQLite key: revenue_pepp_supplfee
     * [de] ZP-Erlös</pre>
     * @return [de] ZP-Erlös
     */
    public static String getRevenuePeppSupplfee() {
        return get(REVENUE_PEPP_SUPPLFEE).value;
    }

    /**
     * <pre>REVIEW_AFTER_MD
     * SQLite key: review_after_md
     * [de] Erörterungsverfahren nach MD-Prüfung</pre>
     * @return [de] Erörterungsverfahren nach MD-Prüfung
     */
    public static String getReviewAfterMd() {
        return get(REVIEW_AFTER_MD).value;
    }

    /**
     * <pre>REVIEW_ANSWERED_DATE
     * SQLite key: review_answered_date
     * [de] geantwortet am</pre>
     * @return [de] geantwortet am
     */
    public static String getReviewAnsweredDate() {
        return get(REVIEW_ANSWERED_DATE).value;
    }

    /**
     * <pre>REVIEW_AUDIT_REASONS
     * SQLite key: review_audit_reasons
     * [de] Prüfgründe</pre>
     * @return [de] Prüfgründe
     */
    public static String getReviewAuditReasons() {
        return get(REVIEW_AUDIT_REASONS).value;
    }

    /**
     * <pre>REVIEW_COMMENT
     * SQLite key: review_comment
     * [de] Kommentar</pre>
     * @return [de] Kommentar
     */
    public static String getReviewComment() {
        return get(REVIEW_COMMENT).value;
    }

    /**
     * <pre>REVIEW_COMPLETED_DATE
     * SQLite key: review_completed_date
     * [de] abgeschloßen am</pre>
     * @return [de] abgeschloßen am
     */
    public static String getReviewCompletedDate() {
        return get(REVIEW_COMPLETED_DATE).value;
    }

    /**
     * <pre>REVIEW_COMPLETION
     * SQLite key: review_completion
     * [de] Abschluß EV</pre>
     * @return [de] Abschluß EV
     */
    public static String getReviewCompletion() {
        return get(REVIEW_COMPLETION).value;
    }

    /**
     * <pre>REVIEW_COMPLETION_DEADLINE_DATE
     * SQLite key: review_completion_deadline_date
     * [de] Abschlußfrist bis</pre>
     * @return [de] Abschlußfrist bis
     */
    public static String getReviewCompletionDeadlineDate() {
        return get(REVIEW_COMPLETION_DEADLINE_DATE).value;
    }

    /**
     * <pre>REVIEW_DEADLINE_ANSWER_INSURANCE_DATE
     * SQLite key: review_deadline_answer_insurance_date
     * [de] Antwortfrist KK</pre>
     * @return [de] Antwortfrist KK
     */
    public static String getReviewDeadlineAnswerInsuranceDate() {
        return get(REVIEW_DEADLINE_ANSWER_INSURANCE_DATE).value;
    }

    /**
     * <pre>REVIEW_DEADLINE_DATE
     * SQLite key: review_deadline_date
     * [de] EV Frist bis</pre>
     * @return [de] EV Frist bis
     */
    public static String getReviewDeadlineDate() {
        return get(REVIEW_DEADLINE_DATE).value;
    }

    /**
     * <pre>REVIEW_DEADLINE_EXTENDED_DATE
     * SQLite key: review_deadline_extended_date
     * [de] EV Fristverlängerung</pre>
     * @return [de] EV Fristverlängerung
     */
    public static String getReviewDeadlineExtendedDate() {
        return get(REVIEW_DEADLINE_EXTENDED_DATE).value;
    }

    /**
     * <pre>REVIEW_DEADLINE_SEND_ON_DATE
     * SQLite key: review_deadline_send_on_date
     * [de] Nachsendefrist bis</pre>
     * @return [de] Nachsendefrist bis
     */
    public static String getReviewDeadlineSendOnDate() {
        return get(REVIEW_DEADLINE_SEND_ON_DATE).value;
    }

    /**
     * <pre>REVIEW_EXPERTISE_DATE
     * SQLite key: review_expertise_date
     * [de] Gutachtendatum</pre>
     * @return [de] Gutachtendatum
     */
    public static String getReviewExpertiseDate() {
        return get(REVIEW_EXPERTISE_DATE).value;
    }

    /**
     * <pre>REVIEW_EXPERTISE_IN_DATE
     * SQLite key: review_expertise_in_date
     * [de] Eingang Gutachten</pre>
     * @return [de] Eingang Gutachten
     */
    public static String getReviewExpertiseInDate() {
        return get(REVIEW_EXPERTISE_IN_DATE).value;
    }

    /**
     * <pre>REVIEW_INSURANCE_NAME
     * SQLite key: review_insurance_name
     * [de] Versicherungsname</pre>
     * @return [de] Versicherungsname
     */
    public static String getReviewInsuranceName() {
        return get(REVIEW_INSURANCE_NAME).value;
    }

    /**
     * <pre>REVIEW_INSURANCE_NUMBER
     * SQLite key: review_insurance_number
     * [de] IKZ der Versicherung</pre>
     * @return [de] IKZ der Versicherung
     */
    public static String getReviewInsuranceNumber() {
        return get(REVIEW_INSURANCE_NUMBER).value;
    }

    /**
     * <pre>REVIEW_INSURANCE_WORKER
     * SQLite key: review_insurance_worker
     * [de] Bearbeiter</pre>
     * ATTENTION this value ('Bearbeiter') seems to be also defined under the key REVIEW_MD_WORKER!
     * @return [de] Bearbeiter
     */
    public static String getReviewInsuranceWorker() {
        return get(REVIEW_INSURANCE_WORKER).value;
    }

    /**
     * <pre>REVIEW_MD_NAME
     * SQLite key: review_md_name
     * [de] MD-Name</pre>
     * @return [de] MD-Name
     */
    public static String getReviewMdName() {
        return get(REVIEW_MD_NAME).value;
    }

    /**
     * <pre>REVIEW_MD_WORKER
     * SQLite key: review_md_worker
     * [de] Bearbeiter</pre>
     * ATTENTION this value ('Bearbeiter') seems to be also defined under the key REVIEW_INSURANCE_WORKER!
     * @return [de] Bearbeiter
     */
    public static String getReviewMdWorker() {
        return get(REVIEW_MD_WORKER).value;
    }

    /**
     * <pre>REVIEW_REMINDER
     * SQLite key: review_reminder
     * [de] Wiedervorlage</pre>
     * @return [de] Wiedervorlage
     */
    public static String getReviewReminder() {
        return get(REVIEW_REMINDER).value;
    }

    /**
     * <pre>REVIEW_REQUEST_STATUS
     * SQLite key: review_request_status
     * [de] Status der Anfrage</pre>
     * @return [de] Status der Anfrage
     */
    public static String getReviewRequestStatus() {
        return get(REVIEW_REQUEST_STATUS).value;
    }

    /**
     * <pre>REVIEW_SEND_ON_DOCUMENTS
     * SQLite key: review_send_on_documents
     * [de] Nachsenden der Dokumenten EV</pre>
     * @return [de] Nachsenden der Dokumenten EV
     */
    public static String getReviewSendOnDocuments() {
        return get(REVIEW_SEND_ON_DOCUMENTS).value;
    }

    /**
     * <pre>REVIEW_SENT_DATE
     * SQLite key: review_sent_date
     * [de] gesendet am</pre>
     * @return [de] gesendet am
     */
    public static String getReviewSentDate() {
        return get(REVIEW_SENT_DATE).value;
    }

    /**
     * <pre>REVIEW_START_AUDIT_INSURANCE
     * SQLite key: review_start_audit_insurance
     * [de] Einleitung Prüfverfahren Kasse</pre>
     * @return [de] Einleitung Prüfverfahren Kasse
     */
    public static String getReviewStartAuditInsurance() {
        return get(REVIEW_START_AUDIT_INSURANCE).value;
    }

    /**
     * <pre>REVIEW_START_AUDIT_MD
     * SQLite key: review_start_audit_md
     * [de] Einleitung MD-Prüfung</pre>
     * @return [de] Einleitung MD-Prüfung
     */
    public static String getReviewStartAuditMd() {
        return get(REVIEW_START_AUDIT_MD).value;
    }

    /**
     * <pre>REVIEW_START_DATE
     * SQLite key: review_start_date
     * [de] eingeleitet</pre>
     * @return [de] eingeleitet
     */
    public static String getReviewStartDate() {
        return get(REVIEW_START_DATE).value;
    }

    /**
     * <pre>REVIEW_UPDATE_REQUEST_WINDOW
     * SQLite key: review_updaterequestwindow
     * [de] Anfrage aktualisieren (Erörterungsverfahren)</pre>
     * @return [de] Anfrage aktualisieren (Erörterungsverfahren)
     */
    public static String getReviewUpdateRequestWindow() {
        return get(REVIEW_UPDATE_REQUEST_WINDOW).value;
    }

    /**
     * <pre>RISK_AREA
     * SQLite key: riskarea
     * [en] Riskarea (R.A)
     * [de] Prüfbereich (Prüfbr.)</pre>
     * @return [en] Riskarea (R.A), [de] Prüfbereich (Prüfbr.)
     */
    public static String getRiskArea() {
        return get(RISK_AREA).value;
    }

    public static Translation getRiskAreaObj() {
        return get(RISK_AREA);
    }

    /**
     * <pre>RISK_AREA_CASE_MERGE
     * SQLite key: riskarea_casemerge
     * [en] Case merging
     * [de] Fallzusammenführung</pre>
     * ATTENTION this value ('Case merging') seems to be also defined under the key CASE_DETAILS_CANCEL_REASON_CASE_MERGE! this value ('Case merging') seems to be also defined under the key CASE_MERGING!
     * @return [en] Case merging, [de] Fallzusammenführung
     */
    public static String getRiskAreaCaseMerge() {
        return get(RISK_AREA_CASE_MERGE).value;
    }

    /**
     * <pre>RISK_AREA_DRG_PEPP
     * SQLite key: riskarea_drgpepp
     * [en] DRG/PEPP
     * [de] DRG/PEPP</pre>
     * @return [en] DRG/PEPP, [de] DRG/PEPP
     */
    public static String getRiskAreaDrgPepp() {
        return get(RISK_AREA_DRG_PEPP).value;
    }

    /**
     * <pre>RISK_AREA_MAIN_DIAGNOSES
     * SQLite key: riskarea_maindiagnoses
     * [en] Main diagnoses
     * [de] Hauptdiagnose</pre>
     * @return [en] Main diagnoses, [de] Hauptdiagnose
     */
    public static String getRiskAreaMainDiagnoses() {
        return get(RISK_AREA_MAIN_DIAGNOSES).value;
    }

    /**
     * <pre>RISK_AREA_OTHER
     * SQLite key: riskarea_other
     * [en] Other
     * [de] Sonstiges</pre>
     * ATTENTION this value ('Other') seems to be also defined under the key CASE_TYPE_OTHER! this value ('other') seems to be also defined under the key DRG_PARTITION_OTHER! this value ('Other') seems to be also defined under the key REQUEST_TYPE_OTHER!
     * @return [en] Other, [de] Sonstiges
     */
    public static String getRiskAreaOther() {
        return get(RISK_AREA_OTHER).value;
    }

    /**
     * <pre>RISK_AREA_OTHER_FEE_SURCHARGE
     * SQLite key: riskarea_otherfeesurcharge
     * [en] Other Fees and Surcharges
     * [de] Sonstige Entgelte und Zuschläge</pre>
     * @return [en] Other Fees and Surcharges, [de] Sonstige Entgelte und Zuschläge
     */
    public static String getRiskAreaOtherFeeSurcharge() {
        return get(RISK_AREA_OTHER_FEE_SURCHARGE).value;
    }

    /**
     * <pre>RISK_AREA_PRIMARY_MISALLOC
     * SQLite key: riskarea_primarymisalloc
     * [en] Primary misallocation
     * [de] Primäre Fehlbelegung</pre>
     * @return [en] Primary misallocation, [de] Primäre Fehlbelegung
     */
    public static String getRiskAreaPrimaryMisalloc() {
        return get(RISK_AREA_PRIMARY_MISALLOC).value;
    }

    /**
     * <pre>RISK_AREA_PROCEDURES
     * SQLite key: riskarea_procedures
     * [en] Procedures
     * [de] Prozeduren</pre>
     * ATTENTION this value ('Procedures') seems to be also defined under the key CATALOG_DIALOG_PROCEDURES!
     * @return [en] Procedures, [de] Prozeduren
     */
    public static String getRiskAreaProcedures() {
        return get(RISK_AREA_PROCEDURES).value;
    }

    /**
     * <pre>RISK_AREA_SECONDARY_DIAGNOSIS
     * SQLite key: riskarea_secondarydiagnosis
     * [en] Secondary diagnosis
     * [de] Nebendiagnosen</pre>
     * @return [en] Secondary diagnosis, [de] Nebendiagnosen
     */
    public static String getRiskAreaSecondaryDiagnosis() {
        return get(RISK_AREA_SECONDARY_DIAGNOSIS).value;
    }

    /**
     * <pre>RISK_AREA_SECONDARY_MISALLOC
     * SQLite key: riskarea_secondarymisalloc
     * [en] Secondary misallocation (Length of stay)
     * [de] Sekundäre Fehlbelegung (VWD)</pre>
     * @return [en] Secondary misallocation (Length of stay), [de] Sekundäre Fehlbelegung (VWD)
     */
    public static String getRiskAreaSecondaryMisalloc() {
        return get(RISK_AREA_SECONDARY_MISALLOC).value;
    }

    /**
     * <pre>RISK_EDITOR_RISK_AUDIT_VALUE
     * SQLite key: risk_editor_risk_audit_value
     * [en] Audit-Risk (A.-R.)
     * [de] Anfrage-Risiko (Anfr.-R.)</pre>
     * @return [en] Audit-Risk (A.-R.), [de] Anfrage-Risiko (Anfr.-R.)
     */
    public static String getRiskEditorRiskAuditValue() {
        return get(RISK_EDITOR_RISK_AUDIT_VALUE).value;
    }

    public static Translation getRiskEditorRiskAuditValueObj() {
        return get(RISK_EDITOR_RISK_AUDIT_VALUE);
    }

    /**
     * <pre>RISK_EDITOR_RISK_WASTE_DEFAULT_VALUE
     * SQLite key: risk_editor_risk_waste_default_value
     * [en] Deficit-Value (D.-V.)
     * [de] Verlustwert (Verl.-W.)</pre>
     * @return [en] Deficit-Value (D.-V.), [de] Verlustwert (Verl.-W.)
     */
    public static String getRiskEditorRiskWasteDefaultValue() {
        return get(RISK_EDITOR_RISK_WASTE_DEFAULT_VALUE).value;
    }

    public static Translation getRiskEditorRiskWasteDefaultValueObj() {
        return get(RISK_EDITOR_RISK_WASTE_DEFAULT_VALUE);
    }

    /**
     * <pre>RISK_EDITOR_RISK_WASTE_VALUE
     * SQLite key: risk_editor_risk_waste_value
     * [en] Deficit-Risk (D.-R.)
     * [de] Verlust-Risiko (Verl.-R.)</pre>
     * @return [en] Deficit-Risk (D.-R.), [de] Verlust-Risiko (Verl.-R.)
     */
    public static String getRiskEditorRiskWasteValue() {
        return get(RISK_EDITOR_RISK_WASTE_VALUE).value;
    }

    public static Translation getRiskEditorRiskWasteValueObj() {
        return get(RISK_EDITOR_RISK_WASTE_VALUE);
    }

    /**
     * <pre>RISK_PERCENT_TOTAL
     * SQLite key: risk_percent_total
     * [en] Risk in %
     * [de] Risiko in %</pre>
     * ATTENTION this value ('Risk in %') seems to be also defined under the key RISK_PERCENT_TOTAL_EQUAL!
     * @return [en] Risk in %, [de] Risiko in %
     */
    public static String getRiskPercentTotal() {
        return get(RISK_PERCENT_TOTAL).value;
    }

    /**
     * <pre>RISK_PERCENT_TOTAL_EQUAL
     * SQLite key: risk_percent_total_equal
     * [en] Risk in %
     * [de] Risiko in %</pre>
     * ATTENTION this value ('Risk in %') seems to be also defined under the key RISK_PERCENT_TOTAL!
     * @return [en] Risk in %, [de] Risiko in %
     */
    public static String getRiskPercentTotalEqual() {
        return get(RISK_PERCENT_TOTAL_EQUAL).value;
    }

    /**
     * <pre>RISK_PERCENT_TOTAL_FROM
     * SQLite key: risk_percent_total_from
     * [en] Risk in % from
     * [de] Risiko in % von</pre>
     * @return [en] Risk in % from, [de] Risiko in % von
     */
    public static String getRiskPercentTotalFrom() {
        return get(RISK_PERCENT_TOTAL_FROM).value;
    }

    /**
     * <pre>RISK_PERCENT_TOTAL_TO
     * SQLite key: risk_percent_total_to
     * [en] Risk in % to
     * [de] Risiko in % bis</pre>
     * @return [en] Risk in % to, [de] Risiko in % bis
     */
    public static String getRiskPercentTotalTo() {
        return get(RISK_PERCENT_TOTAL_TO).value;
    }

    /**
     * <pre>RISK_PLACE_OF_REG
     * SQLite key: risk_placeofreg
     * [en] Place of risk registration
     * [de] Ort der Risikoerfassung</pre>
     * @return [en] Place of risk registration, [de] Ort der Risikoerfassung
     */
    public static String getRiskPlaceOfReg() {
        return get(RISK_PLACE_OF_REG).value;
    }

    /**
     * <pre>RISK_VALUE_TOTAL
     * SQLite key: risk_value_total
     * [en] Risk in €
     * [de] Risiko in €</pre>
     * ATTENTION this value ('Risk in €') seems to be also defined under the key RISK_VALUE_TOTAL_EQUAL!
     * @return [en] Risk in €, [de] Risiko in €
     */
    public static String getRiskValueTotal() {
        return get(RISK_VALUE_TOTAL).value;
    }

    /**
     * <pre>RISK_VALUE_TOTAL_EQUAL
     * SQLite key: risk_value_total_equal
     * [en] Risk in €
     * [de] Risiko in €</pre>
     * ATTENTION this value ('Risk in €') seems to be also defined under the key RISK_VALUE_TOTAL!
     * @return [en] Risk in €, [de] Risiko in €
     */
    public static String getRiskValueTotalEqual() {
        return get(RISK_VALUE_TOTAL_EQUAL).value;
    }

    /**
     * <pre>RISK_VALUE_TOTAL_FROM
     * SQLite key: risk_value_total_from
     * [en] Risk in € from
     * [de] Risiko in € von</pre>
     * @return [en] Risk in € from, [de] Risiko in € von
     */
    public static String getRiskValueTotalFrom() {
        return get(RISK_VALUE_TOTAL_FROM).value;
    }

    /**
     * <pre>RISK_VALUE_TOTAL_TO
     * SQLite key: risk_value_total_to
     * [en] Risk in € to
     * [de] Risiko in € bis</pre>
     * @return [en] Risk in € to, [de] Risiko in € bis
     */
    public static String getRiskValueTotalTo() {
        return get(RISK_VALUE_TOTAL_TO).value;
    }

    /**
     * <pre>ROLES
     * SQLite key: roles
     * [en] Roles
     * [de] Rollen</pre>
     * @return [en] Roles, [de] Rollen
     */
    public static String getRoles() {
        return get(ROLES).value;
    }

    /**
     * <pre>ROW_NUM
     * SQLite key: rownum
     * [en] Row Number (Row)
     * [de] Zeilennummer (Zeile)</pre>
     * @return [en] Row Number (Row), [de] Zeilennummer (Zeile)
     */
    public static String getRowNum() {
        return get(ROW_NUM).value;
    }

    public static Translation getRowNumObj() {
        return get(ROW_NUM);
    }

    /**
     * <pre>ROW_NUM_FROM
     * SQLite key: rownum_from
     * [en] Row Number von
     * [de] Zeilennummer von</pre>
     * @return [en] Row Number von, [de] Zeilennummer von
     */
    public static String getRowNumFrom() {
        return get(ROW_NUM_FROM).value;
    }

    /**
     * <pre>ROW_NUM_TO
     * SQLite key: rownum_to
     * [en] Row Number bis
     * [de] Zeilennummer bis</pre>
     * @return [en] Row Number bis, [de] Zeilennummer bis
     */
    public static String getRowNumTo() {
        return get(ROW_NUM_TO).value;
    }

    /**
     * <pre>RULE_CALCULATION
     * SQLite key: rule_calculation
     * [en] Calculation
     * [de] Berechnung</pre>
     * @return [en] Calculation, [de] Berechnung
     */
    public static String getRuleCalculation() {
        return get(RULE_CALCULATION).value;
    }

    /**
     * <pre>RULE_CHECK_CODE_ERROR
     * SQLite key: rule_check_code_error
     * [en] Error on validation of code {0}
     * [de] Fehler beim Prüfung des Codes {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] Error on validation of code {0}, [de] Fehler beim Prüfung des Codes {0}
     */
    public static String getRuleCheckCodeError(final Object... pParams) {
        return get(RULE_CHECK_CODE_ERROR, pParams).value;
    }

    /**
     * <pre>RULE_CODES_4_YEAR_NOT_VALID
     * SQLite key: rule_codes_4_year_not_valid
     * [en] Values {0} for the year {1} are not valid
     * [de] Die Werte {0} für das Jahr {1} müssen angepasst werden</pre>
     * @param pParams placeholder replacements
     * @return [en] Values {0} for the year {1} are not valid, [de] Die Werte {0} für das Jahr {1} müssen angepasst werden
     */
    public static String getRuleCodes4YearNotValid(final Object... pParams) {
        return get(RULE_CODES_4_YEAR_NOT_VALID, pParams).value;
    }

    /**
     * <pre>RULE_COLUMN_CAPTION
     * SQLite key: rule_column_caption
     * [en] caption (caption)
     * [de] Bezeichnung (Bezeichnung)</pre>
     * @return [en] caption (caption), [de] Bezeichnung (Bezeichnung)
     */
    public static String getRuleColumnCaption() {
        return get(RULE_COLUMN_CAPTION).value;
    }

    public static Translation getRuleColumnCaptionObj() {
        return get(RULE_COLUMN_CAPTION);
    }

    /**
     * <pre>RULE_COLUMN_CATEGORY
     * SQLite key: rule_column_category
     * [en] category (category)
     * [de] Kategorie (Kategorie)</pre>
     * @return [en] category (category), [de] Kategorie (Kategorie)
     */
    public static String getRuleColumnCategory() {
        return get(RULE_COLUMN_CATEGORY).value;
    }

    public static Translation getRuleColumnCategoryObj() {
        return get(RULE_COLUMN_CATEGORY);
    }

    /**
     * <pre>RULE_COLUMN_IDENT
     * SQLite key: rule_column_ident
     * [en] ident number (ident number)
     * [de] Identnummer (Identnummer)</pre>
     * @return [en] ident number (ident number), [de] Identnummer (Identnummer)
     */
    public static String getRuleColumnIdent() {
        return get(RULE_COLUMN_IDENT).value;
    }

    public static Translation getRuleColumnIdentObj() {
        return get(RULE_COLUMN_IDENT);
    }

    /**
     * <pre>RULE_COLUMN_MESSAGE
     * SQLite key: rule_column_message
     * [en] rule error (!)
     * [de] Regelfehler (!)</pre>
     * @return [en] rule error (!), [de] Regelfehler (!)
     */
    public static String getRuleColumnMessage() {
        return get(RULE_COLUMN_MESSAGE).value;
    }

    public static Translation getRuleColumnMessageObj() {
        return get(RULE_COLUMN_MESSAGE);
    }

    /**
     * <pre>RULE_COLUMN_NUMBER
     * SQLite key: rule_column_number
     * [en] rule number (rule number)
     * [de] Regelnummer (Regelnummer)</pre>
     * @return [en] rule number (rule number), [de] Regelnummer (Regelnummer)
     */
    public static String getRuleColumnNumber() {
        return get(RULE_COLUMN_NUMBER).value;
    }

    public static Translation getRuleColumnNumberObj() {
        return get(RULE_COLUMN_NUMBER);
    }

    /**
     * <pre>RULE_COLUMN_RELEVACE
     * SQLite key: rule_column_relevace
     * [de] Relevanz (Relevanz)</pre>
     * @return [de] Relevanz (Relevanz)
     */
    public static String getRuleColumnRelevace() {
        return get(RULE_COLUMN_RELEVACE).value;
    }

    public static Translation getRuleColumnRelevaceObj() {
        return get(RULE_COLUMN_RELEVACE);
    }

    /**
     * <pre>RULE_COLUMN_RULE_NOT_SELECTED
     * SQLite key: rule_column_rule_not_selected
     * [de] Irrelevant (Irrelevant)</pre>
     * @return [de] Irrelevant (Irrelevant)
     */
    public static String getRuleColumnRuleNotSelected() {
        return get(RULE_COLUMN_RULE_NOT_SELECTED).value;
    }

    public static Translation getRuleColumnRuleNotSelectedObj() {
        return get(RULE_COLUMN_RULE_NOT_SELECTED);
    }

    /**
     * <pre>RULE_COLUMN_RULE_SELECTED
     * SQLite key: rule_column_rule_selected
     * [de] Relevant (Relevant)</pre>
     * @return [de] Relevant (Relevant)
     */
    public static String getRuleColumnRuleSelected() {
        return get(RULE_COLUMN_RULE_SELECTED).value;
    }

    public static Translation getRuleColumnRuleSelectedObj() {
        return get(RULE_COLUMN_RULE_SELECTED);
    }

    /**
     * <pre>RULE_COLUMN_STATUS
     * SQLite key: rule_column_status
     * [en] Error type (Error type)
     * [de] Fehlerart (Fehlerart)</pre>
     * @return [en] Error type (Error type), [de] Fehlerart (Fehlerart)
     */
    public static String getRuleColumnStatus() {
        return get(RULE_COLUMN_STATUS).value;
    }

    public static Translation getRuleColumnStatusObj() {
        return get(RULE_COLUMN_STATUS);
    }

    /**
     * <pre>RULE_COLUMN_SUGGESTION
     * SQLite key: rule_column_suggestion
     * [en] suggestion (suggestion)
     * [de] Vorschlag (Vorschlag)</pre>
     * @return [en] suggestion (suggestion), [de] Vorschlag (Vorschlag)
     */
    public static String getRuleColumnSuggestion() {
        return get(RULE_COLUMN_SUGGESTION).value;
    }

    public static Translation getRuleColumnSuggestionObj() {
        return get(RULE_COLUMN_SUGGESTION);
    }

    /**
     * <pre>RULE_COLUMN_TYPE
     * SQLite key: rule_column_type
     * [en] type (type)
     * [de] Typ (Typ)</pre>
     * @return [en] type (type), [de] Typ (Typ)
     */
    public static String getRuleColumnType() {
        return get(RULE_COLUMN_TYPE).value;
    }

    public static Translation getRuleColumnTypeObj() {
        return get(RULE_COLUMN_TYPE);
    }

    /**
     * <pre>RULE_DELTA_REVENUE
     * SQLite key: rule_delta_revenue
     * [en] Delta revenue
     * [de] Erlös Delta</pre>
     * @return [en] Delta revenue, [de] Erlös Delta
     */
    public static String getRuleDeltaRevenue() {
        return get(RULE_DELTA_REVENUE).value;
    }

    /**
     * <pre>RULE_ESTIMATED
     * SQLite key: rule_estimated
     * [en] Estimated
     * [de] Geschätztes</pre>
     * @return [en] Estimated, [de] Geschätztes
     */
    public static String getRuleEstimated() {
        return get(RULE_ESTIMATED).value;
    }

    /**
     * <pre>RULE_FILTER_BUTTON_TEXT
     * SQLite key: rule_filter_button_text
     * [de] Regelfilter</pre>
     * @return [de] Regelfilter
     */
    public static String getRuleFilterButtonText() {
        return get(RULE_FILTER_BUTTON_TEXT).value;
    }

    /**
     * <pre>RULE_FILTER_DIALOG_ALL_RULES_SELECTION
     * SQLite key: rule_filter_dialog_allrulesselection
     * [de] Alle selektieren</pre>
     * @return [de] Alle selektieren
     */
    public static String getRuleFilterDialogAllRulesSelection() {
        return get(RULE_FILTER_DIALOG_ALL_RULES_SELECTION).value;
    }

    /**
     * <pre>RULE_FILTER_DIALOG_ERROR_RULES
     * SQLite key: rule_filter_dialog_errorrules
     * [de] Fehler</pre>
     * @return [de] Fehler
     */
    public static String getRuleFilterDialogErrorRules() {
        return get(RULE_FILTER_DIALOG_ERROR_RULES).value;
    }

    /**
     * <pre>RULE_FILTER_DIALOG_INFORMATION_RULES
     * SQLite key: rule_filter_dialog_informationrules
     * [de] Information</pre>
     * ATTENTION this value ('Information') seems to be also defined under the key DAYS_UNBILLED_DIALOG_CONFIRM!
     * @return [de] Information
     */
    public static String getRuleFilterDialogInformationRules() {
        return get(RULE_FILTER_DIALOG_INFORMATION_RULES).value;
    }

    /**
     * <pre>RULE_FILTER_DIALOG_POOL
     * SQLite key: rule_filter_dialog_pool
     * [de] Regelpool</pre>
     * @return [de] Regelpool
     */
    public static String getRuleFilterDialogPool() {
        return get(RULE_FILTER_DIALOG_POOL).value;
    }

    /**
     * <pre>RULE_FILTER_DIALOG_POOL_YEAR
     * SQLite key: rule_filter_dialog_poolyear
     * [de] Jahr</pre>
     * @return [de] Jahr
     */
    public static String getRuleFilterDialogPoolYear() {
        return get(RULE_FILTER_DIALOG_POOL_YEAR).value;
    }

    /**
     * <pre>RULE_FILTER_DIALOG_RESET_BUTTON
     * SQLite key: rule_filter_dialog_resetbutton
     * [de] Zurücksetzen</pre>
     * @return [de] Zurücksetzen
     */
    public static String getRuleFilterDialogResetButton() {
        return get(RULE_FILTER_DIALOG_RESET_BUTTON).value;
    }

    /**
     * <pre>RULE_FILTER_DIALOG_RULE_CATEGORY
     * SQLite key: rule_filter_dialog_rulecategory
     * [de] Kategorie</pre>
     * ATTENTION this value ('Kategorie') seems to be also defined under the key CATALOG_AOP_CATEGORY!
     * @return [de] Kategorie
     */
    public static String getRuleFilterDialogRuleCategory() {
        return get(RULE_FILTER_DIALOG_RULE_CATEGORY).value;
    }

    /**
     * <pre>RULE_FILTER_DIALOG_RULE_DESCRIPTION
     * SQLite key: rule_filter_dialog_ruledescription
     * [de] Bezeichnung</pre>
     * @return [de] Bezeichnung
     */
    public static String getRuleFilterDialogRuleDescription() {
        return get(RULE_FILTER_DIALOG_RULE_DESCRIPTION).value;
    }

    /**
     * <pre>RULE_FILTER_DIALOG_RULE_ERROR_STATUS
     * SQLite key: rule_filter_dialog_ruleerrorstatus
     * [de] Status</pre>
     * ATTENTION this value ('Status') seems to be also defined under the key AUDIT_STATUS! this value ('Status') seems to be also defined under the key BILL_STATUS! this value ('Status') seems to be also defined under the key PROCESS_PREVIEW_PROCESS_STATUS!
     * @return [de] Status
     */
    public static String getRuleFilterDialogRuleErrorStatus() {
        return get(RULE_FILTER_DIALOG_RULE_ERROR_STATUS).value;
    }

    /**
     * <pre>RULE_FILTER_DIALOG_RULE_IDENT
     * SQLite key: rule_filter_dialog_ruleident
     * [de] Ident-Nummer</pre>
     * @return [de] Ident-Nummer
     */
    public static String getRuleFilterDialogRuleIdent() {
        return get(RULE_FILTER_DIALOG_RULE_IDENT).value;
    }

    /**
     * <pre>RULE_FILTER_DIALOG_RULE_NUMBER
     * SQLite key: rule_filter_dialog_rulenumber
     * [de] Nummer</pre>
     * @return [de] Nummer
     */
    public static String getRuleFilterDialogRuleNumber() {
        return get(RULE_FILTER_DIALOG_RULE_NUMBER).value;
    }

    /**
     * <pre>RULE_FILTER_DIALOG_RULE_SUGGESTION
     * SQLite key: rule_filter_dialog_rulesuggestion
     * [de] Vorschlag</pre>
     * ATTENTION this value ('Vorschlag') seems to be also defined under the key RULES_TXT_COMPLAINT_SUGGESTION!
     * @return [de] Vorschlag
     */
    public static String getRuleFilterDialogRuleSuggestion() {
        return get(RULE_FILTER_DIALOG_RULE_SUGGESTION).value;
    }

    /**
     * <pre>RULE_FILTER_DIALOG_RULE_TYPE
     * SQLite key: rule_filter_dialog_ruletype
     * [de] Typ</pre>
     * ATTENTION this value ('Typ') seems to be also defined under the key DIALOG_BATCH_GROUPING_RULES_TYP!
     * @return [de] Typ
     */
    public static String getRuleFilterDialogRuleType() {
        return get(RULE_FILTER_DIALOG_RULE_TYPE).value;
    }

    /**
     * <pre>RULE_FILTER_DIALOG_WARNING_RULES
     * SQLite key: rule_filter_dialog_warningrules
     * [de] Warnung</pre>
     * @return [de] Warnung
     */
    public static String getRuleFilterDialogWarningRules() {
        return get(RULE_FILTER_DIALOG_WARNING_RULES).value;
    }

    /**
     * <pre>RULE_HAS_ERRORS
     * SQLite key: rule_has_errors
     * [en] rule has a validation error
     * [de] Regel hat Validierungsfehler</pre>
     * @return [en] rule has a validation error, [de] Regel hat Validierungsfehler
     */
    public static String getRuleHasErrors() {
        return get(RULE_HAS_ERRORS).value;
    }

    /**
     * <pre>RULE_LIST
     * SQLite key: rulelist
     * [en] Rule List
     * [de] Regelliste</pre>
     * @return [en] Rule List, [de] Regelliste
     */
    public static String getRuleList() {
        return get(RULE_LIST).value;
    }

    /**
     * <pre>RULE_MESSAGE_CATALOG_TRANSFER_DIALOG_WARNING
     * SQLite key: rule_message_catalog_transfer_dialog_warning
     * [en] There are still errors regarding the catalog transfer from {0} to {1} present in this rule.If this rule is saved, these errors will not be shown again!Save anyway?
     * [de] In der Regel befinden sich noch potenzielle Fehler aus der Prüfung mit den Überleitungstabellen {0} zu {1}.Durch den Speicher-Vorgang akzeptieren Sie diese Fehler und im weiteren werden diese nicht mehr angezeigt!Trotzdem speichern?</pre>
     * @param pParams placeholder replacements
     * @return [en] There are still errors regarding the catalog transfer from {0} to {1} present in this rule.If this rule is saved, these errors will not be shown again!Save anyway?, [de] In der Regel befinden sich noch potenzielle Fehler aus der Prüfung mit den Überleitungstabellen {0} zu {1}.Durch den Speicher-Vorgang akzeptieren Sie diese Fehler und im weiteren werden diese nicht mehr angezeigt!Trotzdem speichern?
     */
    public static String getRuleMessageCatalogTransferDialogWarning(final Object... pParams) {
        return get(RULE_MESSAGE_CATALOG_TRANSFER_DIALOG_WARNING, pParams).value;
    }

    /**
     * <pre>RULE_NO_CONTENT_FOUND
     * SQLite key: rule_no_content_found
     * [en] Rule has no content
     * [de] Regel hat kein Rumpf</pre>
     * @return [en] Rule has no content, [de] Regel hat kein Rumpf
     */
    public static String getRuleNoContentFound() {
        return get(RULE_NO_CONTENT_FOUND).value;
    }

    /**
     * <pre>RULE_RESULT
     * SQLite key: rule_result
     * [en] Rules result
     * [de] Ergebnis der Regel</pre>
     * @return [en] Rules result, [de] Ergebnis der Regel
     */
    public static String getRuleResult() {
        return get(RULE_RESULT).value;
    }

    /**
     * <pre>RULE_SUGG_CONDITION_NOT_COMPLETE
     * SQLite key: rule_sugg_condition_not_complete
     * [en] Suggestion term is not complete, no value set in the WHEN - condition
     * [de] Der Wert ist in WENN-Bedingung nicht gesetzt, Vorschlagsterm ist nicht vollständig</pre>
     * @return [en] Suggestion term is not complete, no value set in the WHEN - condition, [de] Der Wert ist in WENN-Bedingung nicht gesetzt, Vorschlagsterm ist nicht vollständig
     */
    public static String getRuleSuggConditionNotComplete() {
        return get(RULE_SUGG_CONDITION_NOT_COMPLETE).value;
    }

    /**
     * <pre>RULE_SUGG_TERM_NOT_COMPLETE
     * SQLite key: rule_sugg_term_not_complete
     * [en] Suggestion term is not complete, no value set
     * [de] Vorschlasterm ist nicht vollständig</pre>
     * @return [en] Suggestion term is not complete, no value set, [de] Vorschlasterm ist nicht vollständig
     */
    public static String getRuleSuggTermNotComplete() {
        return get(RULE_SUGG_TERM_NOT_COMPLETE).value;
    }

    /**
     * <pre>RULE_TABLE_CODES_NOT_VALID
     * SQLite key: rule_table_codes_not_valid
     * [en] The rule table {0} contains invalide codes {1}
     * [de] Die Tabelle {0} enthält nicht valide Code(s) {1}</pre>
     * @param pParams placeholder replacements
     * @return [en] The rule table {0} contains invalide codes {1}, [de] Die Tabelle {0} enthält nicht valide Code(s) {1}
     */
    public static String getRuleTableCodesNotValid(final Object... pParams) {
        return get(RULE_TABLE_CODES_NOT_VALID, pParams).value;
    }

    /**
     * <pre>RULE_TABLE_COMMENT_TOOLTIP
     * SQLite key: rule_table_comment_tooltip
     * [en] "Comment to the table content"
     * [de] "Notiz zu Tabellennihalt"</pre>
     * @return [en] "Comment to the table content", [de] "Notiz zu Tabellennihalt"
     */
    public static String getRuleTableCommentTooltip() {
        return get(RULE_TABLE_COMMENT_TOOLTIP).value;
    }

    /**
     * <pre>RULE_TABLE_CONTENT
     * SQLite key: rule_table_content
     * [en] Table content
     * [de] Tabelleninhalt</pre>
     * @return [en] Table content, [de] Tabelleninhalt
     */
    public static String getRuleTableContent() {
        return get(RULE_TABLE_CONTENT).value;
    }

    /**
     * <pre>RULE_TABLE_HAS_ERRORS
     * SQLite key: rule_table_has_errors
     * [en] rule table has a validation error
     * [de] Regeltable hat Validierungsfehler</pre>
     * @return [en] rule table has a validation error, [de] Regeltable hat Validierungsfehler
     */
    public static String getRuleTableHasErrors() {
        return get(RULE_TABLE_HAS_ERRORS).value;
    }

    /**
     * <pre>RULE_TABLE_MESSAGE_CATALOG_TRANSFER_DIALOG_WARNING
     * SQLite key: rule_table_message_catalog_transfer_dialog_warning
     * [en] There are still errors regarding the catalog transfer from {0} to {1} present in this rule table.If this rule table is saved, these errors will not be shown again!Save anyway?
     * [de] In der Regeltabelle befinden sich noch potenzielle Fehler aus der Prüfung mit den Überleitungstabellen {0} zu {1}.Durch den Speicher-Vorgang akzeptieren Sie diese Fehler und im weiteren werden diese nicht mehr angezeigt!Trotzdem speichern?</pre>
     * @param pParams placeholder replacements
     * @return [en] There are still errors regarding the catalog transfer from {0} to {1} present in this rule table.If this rule table is saved, these errors will not be shown again!Save anyway?, [de] In der Regeltabelle befinden sich noch potenzielle Fehler aus der Prüfung mit den Überleitungstabellen {0} zu {1}.Durch den Speicher-Vorgang akzeptieren Sie diese Fehler und im weiteren werden diese nicht mehr angezeigt!Trotzdem speichern?
     */
    public static String getRuleTableMessageCatalogTransferDialogWarning(final Object... pParams) {
        return get(RULE_TABLE_MESSAGE_CATALOG_TRANSFER_DIALOG_WARNING, pParams).value;
    }

    /**
     * <pre>RULE_TABLE_NOTE
     * SQLite key: rule_table_note
     * [en] Table comment
     * [de] Tabellennotiz</pre>
     * @return [en] Table comment, [de] Tabellennotiz
     */
    public static String getRuleTableNote() {
        return get(RULE_TABLE_NOTE).value;
    }

    /**
     * <pre>RULE_TERM_NOT_COMPLETE
     * SQLite key: rule_term_not_complete
     * [en] Rule term is not complete
     * [de] Regelterm ist nicht vollständig</pre>
     * @return [en] Rule term is not complete, [de] Regelterm ist nicht vollständig
     */
    public static String getRuleTermNotComplete() {
        return get(RULE_TERM_NOT_COMPLETE).value;
    }

    /**
     * <pre>RULE_TYPE_FOUND_IN_DB
     * SQLite key: rule_type_found_in_db
     * [en] rule type foung in database
     * [de] Regeltyp gefunden in DB</pre>
     * @return [en] rule type foung in database, [de] Regeltyp gefunden in DB
     */
    public static String getRuleTypeFoundInDb() {
        return get(RULE_TYPE_FOUND_IN_DB).value;
    }

    /**
     * <pre>RULE_TYPE_IMPORTED
     * SQLite key: rule_type_imported
     * [en] rule type imported
     * [de] Regeltyp importiert</pre>
     * @return [en] rule type imported, [de] Regeltyp importiert
     */
    public static String getRuleTypeImported() {
        return get(RULE_TYPE_IMPORTED).value;
    }

    /**
     * <pre>RULE_TYPE_NOT_FOUND
     * SQLite key: rule_type_not_found
     * [en] rule type is not found
     * [de] Regeltyp is nicht gefunden</pre>
     * @return [en] rule type is not found, [de] Regeltyp is nicht gefunden
     */
    public static String getRuleTypeNotFound() {
        return get(RULE_TYPE_NOT_FOUND).value;
    }

    /**
     * <pre>RULE_TYPE_OTHER_DISPLAY_TEXT
     * SQLite key: rule_type_other_display_text
     * [de] Regeltyp is nicht gefunden</pre>
     * @return [de] Regeltyp is nicht gefunden
     */
    public static String getRuleTypeOtherDisplayText() {
        return get(RULE_TYPE_OTHER_DISPLAY_TEXT).value;
    }

    /**
     * <pre>RULE_VALIDATION_CHECK_CATALOG_TRANSFER_TABLE
     * SQLite key: rule_validation_check_catalog_transfer_table
     * [en] check with transfer tables
     * [de] gegen den Überleitungstabellen prüfen</pre>
     * @return [en] check with transfer tables, [de] gegen den Überleitungstabellen prüfen
     */
    public static String getRuleValidationCheckCatalogTransferTable() {
        return get(RULE_VALIDATION_CHECK_CATALOG_TRANSFER_TABLE).value;
    }

    /**
     * <pre>RULE_VALIDATION_CODE_ERROR
     * SQLite key: rule_validation_code_error
     * [en] eror in code
     * [de] Fehler in Code</pre>
     * @return [en] eror in code, [de] Fehler in Code
     */
    public static String getRuleValidationCodeError() {
        return get(RULE_VALIDATION_CODE_ERROR).value;
    }

    /**
     * <pre>RULE_VALIDATION_NO_VALUE
     * SQLite key: rule_validation_no_value
     * [en] no value found
     * [de] kein Wert gefunden</pre>
     * @return [en] no value found, [de] kein Wert gefunden
     */
    public static String getRuleValidationNoValue() {
        return get(RULE_VALIDATION_NO_VALUE).value;
    }

    /**
     * <pre>RULE_VALIDATION_RULE_NO_CONTENT
     * SQLite key: rule_validation_rule_no_content
     * [en] rule is empty
     * [de] die Regel hat keine Inhalt</pre>
     * @return [en] rule is empty, [de] die Regel hat keine Inhalt
     */
    public static String getRuleValidationRuleNoContent() {
        return get(RULE_VALIDATION_RULE_NO_CONTENT).value;
    }

    /**
     * <pre>RULE_VALIDATION_RULE_NOT_VALID
     * SQLite key: rule_validation_rule_not_valid
     * [en] rules syntax is erroneous
     * [de] Regelsyntax ist fehlerhaft</pre>
     * @return [en] rules syntax is erroneous, [de] Regelsyntax ist fehlerhaft
     */
    public static String getRuleValidationRuleNotValid() {
        return get(RULE_VALIDATION_RULE_NOT_VALID).value;
    }

    /**
     * <pre>RULE_VALIDATION_RULE_WITHOUT_TABLES
     * SQLite key: rule_validation_rule_without_tables
     * [en] tables for rule not found
     * [de] Regeltabellen für die Regel sind nicht vorhanden</pre>
     * @return [en] tables for rule not found, [de] Regeltabellen für die Regel sind nicht vorhanden
     */
    public static String getRuleValidationRuleWithoutTables() {
        return get(RULE_VALIDATION_RULE_WITHOUT_TABLES).value;
    }

    /**
     * <pre>RULE_VALIDATION_SUGG_CHECK_BOTH
     * SQLite key: rule_validation_sugg_check_both
     * [en] check suggestion and condition
     * [de] Regelvorschlag und Bedignung prüfen</pre>
     * @return [en] check suggestion and condition, [de] Regelvorschlag und Bedignung prüfen
     */
    public static String getRuleValidationSuggCheckBoth() {
        return get(RULE_VALIDATION_SUGG_CHECK_BOTH).value;
    }

    /**
     * <pre>RULE_VALIDATION_SUGG_NO_VALUE
     * SQLite key: rule_validation_sugg_no_value
     * [en] suggestion is not complete
     * [de] Regelvorschlag ist nicht vollständig</pre>
     * @return [en] suggestion is not complete, [de] Regelvorschlag ist nicht vollständig
     */
    public static String getRuleValidationSuggNoValue() {
        return get(RULE_VALIDATION_SUGG_NO_VALUE).value;
    }

    /**
     * <pre>RULE_VALIDATION_VALUE_NOT_IN_CATALOG
     * SQLite key: rule_validation_value_not_in_catalog
     * [en] Code value is not fount in catalog
     * [de] der Wert ist nicht im Katalog</pre>
     * @return [en] Code value is not fount in catalog, [de] der Wert ist nicht im Katalog
     */
    public static String getRuleValidationValueNotInCatalog() {
        return get(RULE_VALIDATION_VALUE_NOT_IN_CATALOG).value;
    }

    /**
     * <pre>RULE_VALIDATION_YEAR_NOT_VALID
     * SQLite key: rule_validation_year_not_valid
     * [en] rule year is not valid
     * [de] Das Jahr ist nicht gültig</pre>
     * @return [en] rule year is not valid, [de] Das Jahr ist nicht gültig
     */
    public static String getRuleValidationYearNotValid() {
        return get(RULE_VALIDATION_YEAR_NOT_VALID).value;
    }

    /**
     * <pre>RULE_WL
     * SQLite key: rule_wl
     * [en] Rule Editor Working List
     * [de] Rule Editor Working List</pre>
     * @return [en] Rule Editor Working List, [de] Rule Editor Working List
     */
    public static String getRuleWl() {
        return get(RULE_WL).value;
    }

    /**
     * <pre>RULES_01_BPFLV
     * SQLite key: rules_01_bpflv
     * [en] 01 - BPflV
     * [de] 01 - BPflV</pre>
     * @return [en] 01 - BPflV, [de] 01 - BPflV
     */
    public static String getRules01Bpflv() {
        return get(RULES_01_BPFLV).value;
    }

    /**
     * <pre>RULES_02_DRG_ANLAGE_1
     * SQLite key: rules_02_drg_anlage_1
     * [en] 02 - DRG Anlage 1
     * [de] 02 - DRG Anlage 1</pre>
     * @return [en] 02 - DRG Anlage 1, [de] 02 - DRG Anlage 1
     */
    public static String getRules02DrgAnlage1() {
        return get(RULES_02_DRG_ANLAGE_1).value;
    }

    /**
     * <pre>RULES_03_NUB
     * SQLite key: rules_03_nub
     * [en] 03 - NUB
     * [de] 03 - NUB</pre>
     * @return [en] 03 - NUB, [de] 03 - NUB
     */
    public static String getRules03Nub() {
        return get(RULES_03_NUB).value;
    }

    /**
     * <pre>RULES_04_SONSTIGE_ENTGELTE_ANLAGE
     * SQLite key: rules_04_sonstige_entgelte_anlage
     * [en] 04 - Sonstige Entgelte Anlage
     * [de] 04 - Sonstige Entgelte Anlage</pre>
     * @return [en] 04 - Sonstige Entgelte Anlage, [de] 04 - Sonstige Entgelte Anlage
     */
    public static String getRules04SonstigeEntgelteAnlage() {
        return get(RULES_04_SONSTIGE_ENTGELTE_ANLAGE).value;
    }

    /**
     * <pre>RULES_05_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN
     * SQLite key: rules_05_andere_sonstige_entgelte_besondere_einrichtungen
     * [en] 05 - andere Sonstige Entgelte / Besondere Einrichtungen
     * [de] 05 - andere Sonstige Entgelte / Besondere Einrichtungen</pre>
     * @return [en] 05 - andere Sonstige Entgelte / Besondere Einrichtungen, [de] 05 - andere Sonstige Entgelte / Besondere Einrichtungen
     */
    public static String getRules05AndereSonstigeEntgelteBesondereEinrichtungen() {
        return get(RULES_05_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN).value;
    }

    /**
     * <pre>RULES_06_VORSTATIONAER
     * SQLite key: rules_06_vorstationaer
     * [en] 06 - vorstationär
     * [de] 06 - vorstationär</pre>
     * @return [en] 06 - vorstationär, [de] 06 - vorstationär
     */
    public static String getRules06Vorstationaer() {
        return get(RULES_06_VORSTATIONAER).value;
    }

    /**
     * <pre>RULES_07_DAK_INTERNE_ENTGELTE
     * SQLite key: rules_07_dak_interne_entgelte
     * [en] 07 - DAK-interne Entgelte
     * [de] 07 - DAK-interne Entgelte</pre>
     * @return [en] 07 - DAK-interne Entgelte, [de] 07 - DAK-interne Entgelte
     */
    public static String getRules07DakInterneEntgelte() {
        return get(RULES_07_DAK_INTERNE_ENTGELTE).value;
    }

    /**
     * <pre>RULES_08_IV
     * SQLite key: rules_08_iv
     * [en] 08 - IV
     * [de] 08 - IV</pre>
     * @return [en] 08 - IV, [de] 08 - IV
     */
    public static String getRules08Iv() {
        return get(RULES_08_IV).value;
    }

    /**
     * <pre>RULES_09_MODELLVORHABEN
     * SQLite key: rules_09_modellvorhaben
     * [en] 09 - Modellvorhaben
     * [de] 09 - Modellvorhaben</pre>
     * @return [en] 09 - Modellvorhaben, [de] 09 - Modellvorhaben
     */
    public static String getRules09Modellvorhaben() {
        return get(RULES_09_MODELLVORHABEN).value;
    }

    /**
     * <pre>RULES_0_UNBEKANNT
     * SQLite key: rules_0_unbekannt
     * [en] 0 - unbekannt
     * [de] 0 - unbekannt</pre>
     * @return [en] 0 - unbekannt, [de] 0 - unbekannt
     */
    public static String getRules0Unbekannt() {
        return get(RULES_0_UNBEKANNT).value;
    }

    /**
     * <pre>RULES_10_DMP
     * SQLite key: rules_10_dmp
     * [en] 10 - DMP
     * [de] 10 - DMP</pre>
     * @return [en] 10 - DMP, [de] 10 - DMP
     */
    public static String getRules10Dmp() {
        return get(RULES_10_DMP).value;
    }

    /**
     * <pre>RULES_11_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004
     * SQLite key: rules_11_gesonderte_entgelte_aus_den_jahren_20032004
     * [en] 11 - gesonderte Entgelte aus den Jahren 2003/2004
     * [de] 11 - gesonderte Entgelte aus den Jahren 2003/2004</pre>
     * @return [en] 11 - gesonderte Entgelte aus den Jahren 2003/2004, [de] 11 - gesonderte Entgelte aus den Jahren 2003/2004
     */
    public static String getRules11GesonderteEntgelteAusDenJahren20032004() {
        return get(RULES_11_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004).value;
    }

    /**
     * <pre>RULES_12_BPFLV_OHNE_SCHLUSSRECHNUNG
     * SQLite key: rules_12_bpflv_ohne_schlussrechnung
     * [en] 12 - BPflV ohne Schlussrechnung
     * [de] 12 - BPflV ohne Schlussrechnung</pre>
     * @return [en] 12 - BPflV ohne Schlussrechnung, [de] 12 - BPflV ohne Schlussrechnung
     */
    public static String getRules12BpflvOhneSchlussrechnung() {
        return get(RULES_12_BPFLV_OHNE_SCHLUSSRECHNUNG).value;
    }

    /**
     * <pre>RULES_13_DRG_ANLAGE_1_OHNE_SCHLUSSRECHNUNG
     * SQLite key: rules_13_drg_anlage_1_ohne_schlussrechnung
     * [en] 13 - DRG Anlage 1 ohne Schlussrechnung
     * [de] 13 - DRG Anlage 1 ohne Schlussrechnung</pre>
     * @return [en] 13 - DRG Anlage 1 ohne Schlussrechnung, [de] 13 - DRG Anlage 1 ohne Schlussrechnung
     */
    public static String getRules13DrgAnlage1OhneSchlussrechnung() {
        return get(RULES_13_DRG_ANLAGE_1_OHNE_SCHLUSSRECHNUNG).value;
    }

    /**
     * <pre>RULES_14_NUB_OHNE_SCHLUSSRECHNUNG
     * SQLite key: rules_14_nub_ohne_schlussrechnung
     * [en] 14 - NUB ohne Schlussrechnung
     * [de] 14 - NUB ohne Schlussrechnung</pre>
     * @return [en] 14 - NUB ohne Schlussrechnung, [de] 14 - NUB ohne Schlussrechnung
     */
    public static String getRules14NubOhneSchlussrechnung() {
        return get(RULES_14_NUB_OHNE_SCHLUSSRECHNUNG).value;
    }

    /**
     * <pre>RULES_15_SONSTIGE_ENTGELTE_ANLAGE_OHNE_SCHLUSSRECHNUNG
     * SQLite key: rules_15_sonstige_entgelte_anlage_ohne_schlussrechnung
     * [en] 15 - Sonstige Entgelte Anlage ohne Schlussrechnung
     * [de] 15 - Sonstige Entgelte Anlage ohne Schlussrechnung</pre>
     * @return [en] 15 - Sonstige Entgelte Anlage ohne Schlussrechnung, [de] 15 - Sonstige Entgelte Anlage ohne Schlussrechnung
     */
    public static String getRules15SonstigeEntgelteAnlageOhneSchlussrechnung() {
        return get(RULES_15_SONSTIGE_ENTGELTE_ANLAGE_OHNE_SCHLUSSRECHNUNG).value;
    }

    /**
     * <pre>RULES_16_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN_OHNE_SCHLUSSRECHNUNG
     * SQLite key: rules_16_andere_sonstige_entgelte_besondere_einrichtungen_ohne_schlussrechnung
     * [en] 16 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung
     * [de] 16 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung</pre>
     * @return [en] 16 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung, [de] 16 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung
     */
    public static String getRules16AndereSonstigeEntgelteBesondereEinrichtungenOhneSchlussrechnung() {
        return get(RULES_16_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN_OHNE_SCHLUSSRECHNUNG).value;
    }

    /**
     * <pre>RULES_17_VORSTATIONAER_OHNE_SCHLUSSRECHNUNG
     * SQLite key: rules_17_vorstationaer_ohne_schlussrechnung
     * [en] 17 - vorstationär ohne Schlussrechnung
     * [de] 17 - vorstationär ohne Schlussrechnung</pre>
     * @return [en] 17 - vorstationär ohne Schlussrechnung, [de] 17 - vorstationär ohne Schlussrechnung
     */
    public static String getRules17VorstationaerOhneSchlussrechnung() {
        return get(RULES_17_VORSTATIONAER_OHNE_SCHLUSSRECHNUNG).value;
    }

    /**
     * <pre>RULES_18_DAK_INTERNE_ENTGELTE_OHNE_SCHLUSSRECHNUNG
     * SQLite key: rules_18_dak_interne_entgelte_ohne_schlussrechnung
     * [en] 18 - DAK-interne Entgelte ohne Schlussrechnung
     * [de] 18 - DAK-interne Entgelte ohne Schlussrechnung</pre>
     * @return [en] 18 - DAK-interne Entgelte ohne Schlussrechnung, [de] 18 - DAK-interne Entgelte ohne Schlussrechnung
     */
    public static String getRules18DakInterneEntgelteOhneSchlussrechnung() {
        return get(RULES_18_DAK_INTERNE_ENTGELTE_OHNE_SCHLUSSRECHNUNG).value;
    }

    /**
     * <pre>RULES_19_IV_OHNE_SCHLUSSRECHNUNG
     * SQLite key: rules_19_iv_ohne_schlussrechnung
     * [en] 19 - IV ohne Schlussrechnung
     * [de] 19 - IV ohne Schlussrechnung</pre>
     * @return [en] 19 - IV ohne Schlussrechnung, [de] 19 - IV ohne Schlussrechnung
     */
    public static String getRules19IvOhneSchlussrechnung() {
        return get(RULES_19_IV_OHNE_SCHLUSSRECHNUNG).value;
    }

    /**
     * <pre>RULES_1_MAENNLICH
     * SQLite key: rules_1_maennlich
     * [en] 1 - männlich
     * [de] 1 - männlich</pre>
     * @return [en] 1 - männlich, [de] 1 - männlich
     */
    public static String getRules1Maennlich() {
        return get(RULES_1_MAENNLICH).value;
    }

    /**
     * <pre>RULES_1_PFLEGESTUFE_1
     * SQLite key: rules_1_pflegestufe_1
     * [en] 1 - Pflegestufe 1
     * [de] 1 - Pflegestufe 1</pre>
     * @return [en] 1 - Pflegestufe 1, [de] 1 - Pflegestufe 1
     */
    public static String getRules1Pflegestufe1() {
        return get(RULES_1_PFLEGESTUFE_1).value;
    }

    /**
     * <pre>RULES_20_MODELLVORHABEN_OHNE_SCHLUSSRECHNUNG
     * SQLite key: rules_20_modellvorhaben_ohne_schlussrechnung
     * [en] 20 - Modellvorhaben ohne Schlussrechnung
     * [de] 20 - Modellvorhaben ohne Schlussrechnung</pre>
     * @return [en] 20 - Modellvorhaben ohne Schlussrechnung, [de] 20 - Modellvorhaben ohne Schlussrechnung
     */
    public static String getRules20ModellvorhabenOhneSchlussrechnung() {
        return get(RULES_20_MODELLVORHABEN_OHNE_SCHLUSSRECHNUNG).value;
    }

    /**
     * <pre>RULES_21_DMP_OHNE_SCHLUSSRECHNUNG
     * SQLite key: rules_21_dmp_ohne_schlussrechnung
     * [en] 21 - DMP ohne Schlussrechnung
     * [de] 21 - DMP ohne Schlussrechnung</pre>
     * @return [en] 21 - DMP ohne Schlussrechnung, [de] 21 - DMP ohne Schlussrechnung
     */
    public static String getRules21DmpOhneSchlussrechnung() {
        return get(RULES_21_DMP_OHNE_SCHLUSSRECHNUNG).value;
    }

    /**
     * <pre>RULES_22_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004_OHNE_SCHLUSSRECHNUNG
     * SQLite key: rules_22_gesonderte_entgelte_aus_den_jahren_20032004_ohne_schlussrechnung
     * [en] 22 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung
     * [de] 22 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung</pre>
     * @return [en] 22 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung, [de] 22 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung
     */
    public static String getRules22GesonderteEntgelteAusDenJahren20032004OhneSchlussrechnung() {
        return get(RULES_22_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004_OHNE_SCHLUSSRECHNUNG).value;
    }

    /**
     * <pre>RULES_23_BPFLV_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
     * SQLite key: rules_23_bpflv_ohne_schlussrechnung_und_ohne_entlassungsanzeige
     * [en] 23 - BPflV ohne Schlussrechnung und ohne Entlassungsanzeige
     * [de] 23 - BPflV ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] 23 - BPflV ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 23 - BPflV ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getRules23BpflvOhneSchlussrechnungUndOhneEntlassungsanzeige() {
        return get(RULES_23_BPFLV_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE).value;
    }

    /**
     * <pre>RULES_23_PFLEGEHILFSMITTEL
     * SQLite key: rules_23_pflegehilfsmittel
     * [en] 23 - Pflegehilfsmittel
     * [de] 23 - Pflegehilfsmittel</pre>
     * @return [en] 23 - Pflegehilfsmittel, [de] 23 - Pflegehilfsmittel
     */
    public static String getRules23Pflegehilfsmittel() {
        return get(RULES_23_PFLEGEHILFSMITTEL).value;
    }

    /**
     * <pre>RULES_24_DRG_ANLAGE_1_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
     * SQLite key: rules_24_drg_anlage_1_ohne_schlussrechnung_und_ohne_entlassungsanzeige
     * [en] 24 - DRG Anlage 1 ohne Schlussrechnung und ohne Entlassungsanzeige
     * [de] 24 - DRG Anlage 1 ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] 24 - DRG Anlage 1 ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 24 - DRG Anlage 1 ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getRules24DrgAnlage1OhneSchlussrechnungUndOhneEntlassungsanzeige() {
        return get(RULES_24_DRG_ANLAGE_1_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE).value;
    }

    /**
     * <pre>RULES_24_PFLEGEHILFSMITTEL_MIT_LEIHWEISER_UEBERLASSUNG
     * SQLite key: rules_24_pflegehilfsmittel_mit_leihweiser_ueberlassung
     * [en] 24 - Pflegehilfsmittel mit leihweiser Überlassung
     * [de] 24 - Pflegehilfsmittel mit leihweiser Überlassung</pre>
     * @return [en] 24 - Pflegehilfsmittel mit leihweiser Überlassung, [de] 24 - Pflegehilfsmittel mit leihweiser Überlassung
     */
    public static String getRules24PflegehilfsmittelMitLeihweiserUeberlassung() {
        return get(RULES_24_PFLEGEHILFSMITTEL_MIT_LEIHWEISER_UEBERLASSUNG).value;
    }

    /**
     * <pre>RULES_24_ZUM_VERBRAUCH_BESTIMMTE_PFLEGEHILFSMITTEL
     * SQLite key: rules_24_zum_verbrauch_bestimmte_pflegehilfsmittel
     * [en] 24 - zum Verbrauch bestimmte Pflegehilfsmittel
     * [de] 24 - zum Verbrauch bestimmte Pflegehilfsmittel</pre>
     * @return [en] 24 - zum Verbrauch bestimmte Pflegehilfsmittel, [de] 24 - zum Verbrauch bestimmte Pflegehilfsmittel
     */
    public static String getRules24ZumVerbrauchBestimmtePflegehilfsmittel() {
        return get(RULES_24_ZUM_VERBRAUCH_BESTIMMTE_PFLEGEHILFSMITTEL).value;
    }

    /**
     * <pre>RULES_25_NUB_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
     * SQLite key: rules_25_nub_ohne_schlussrechnung_und_ohne_entlassungsanzeige
     * [en] 25 - NUB ohne Schlussrechnung und ohne Entlassungsanzeige
     * [de] 25 - NUB ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] 25 - NUB ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 25 - NUB ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getRules25NubOhneSchlussrechnungUndOhneEntlassungsanzeige() {
        return get(RULES_25_NUB_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE).value;
    }

    /**
     * <pre>RULES_26_SONSTIGE_ENTGELTE_ANLAGE_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
     * SQLite key: rules_26_sonstige_entgelte_anlage_ohne_schlussrechnung_und_ohne_entlassungsanzeige
     * [en] 26 - Sonstige Entgelte Anlage ohne Schlussrechnung und ohne Entlassungsanzeige
     * [de] 26 - Sonstige Entgelte Anlage ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] 26 - Sonstige Entgelte Anlage ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 26 - Sonstige Entgelte Anlage ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getRules26SonstigeEntgelteAnlageOhneSchlussrechnungUndOhneEntlassungsanzeige() {
        return get(RULES_26_SONSTIGE_ENTGELTE_ANLAGE_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE).value;
    }

    /**
     * <pre>RULES_27_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
     * SQLite key: rules_27_andere_sonstige_entgelte_besondere_einrichtungen_ohne_schlussrechnung_und_ohne_entlassungsanzeige
     * [en] 27 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige
     * [de] 27 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] 27 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 27 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getRules27AndereSonstigeEntgelteBesondereEinrichtungenOhneSchlussrechnungUndOhneEntlassungsanzeige() {
        return get(RULES_27_ANDERE_SONSTIGE_ENTGELTE_BESONDERE_EINRICHTUNGEN_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE).value;
    }

    /**
     * <pre>RULES_28_VORSTATIONAER_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
     * SQLite key: rules_28_vorstationaer_ohne_schlussrechnung_und_ohne_entlassungsanzeige
     * [en] 28 - vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige
     * [de] 28 - vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] 28 - vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 28 - vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getRules28VorstationaerOhneSchlussrechnungUndOhneEntlassungsanzeige() {
        return get(RULES_28_VORSTATIONAER_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE).value;
    }

    /**
     * <pre>RULES_29_DAK_INTERNE_ENTGELTE_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
     * SQLite key: rules_29_dak_interne_entgelte_ohne_schlussrechnung_und_ohne_entlassungsanzeige
     * [en] 29 - DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige
     * [de] 29 - DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] 29 - DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 29 - DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getRules29DakInterneEntgelteOhneSchlussrechnungUndOhneEntlassungsanzeige() {
        return get(RULES_29_DAK_INTERNE_ENTGELTE_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE).value;
    }

    /**
     * <pre>RULES_2_PFLEGESTUFE_2
     * SQLite key: rules_2_pflegestufe_2
     * [en] 2 - Pflegestufe 2
     * [de] 2 - Pflegestufe 2</pre>
     * @return [en] 2 - Pflegestufe 2, [de] 2 - Pflegestufe 2
     */
    public static String getRules2Pflegestufe2() {
        return get(RULES_2_PFLEGESTUFE_2).value;
    }

    /**
     * <pre>RULES_2_WEIBLICH
     * SQLite key: rules_2_weiblich
     * [en] 2 - weiblich
     * [de] 2 - weiblich</pre>
     * @return [en] 2 - weiblich, [de] 2 - weiblich
     */
    public static String getRules2Weiblich() {
        return get(RULES_2_WEIBLICH).value;
    }

    /**
     * <pre>RULES_30_IV_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
     * SQLite key: rules_30_iv_ohne_schlussrechnung_und_ohne_entlassungsanzeige
     * [en] 30 - IV ohne Schlussrechnung und ohne Entlassungsanzeige
     * [de] 30 - IV ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] 30 - IV ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 30 - IV ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getRules30IvOhneSchlussrechnungUndOhneEntlassungsanzeige() {
        return get(RULES_30_IV_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE).value;
    }

    /**
     * <pre>RULES_31_MODELLVORHABEN_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
     * SQLite key: rules_31_modellvorhaben_ohne_schlussrechnung_und_ohne_entlassungsanzeige
     * [en] 31 - Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige
     * [de] 31 - Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] 31 - Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 31 - Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getRules31ModellvorhabenOhneSchlussrechnungUndOhneEntlassungsanzeige() {
        return get(RULES_31_MODELLVORHABEN_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE).value;
    }

    /**
     * <pre>RULES_32_DMP_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
     * SQLite key: rules_32_dmp_ohne_schlussrechnung_und_ohne_entlassungsanzeige
     * [en] 32 - DMP ohne Schlussrechnung und ohne Entlassungsanzeige
     * [de] 32 - DMP ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] 32 - DMP ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 32 - DMP ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getRules32DmpOhneSchlussrechnungUndOhneEntlassungsanzeige() {
        return get(RULES_32_DMP_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE).value;
    }

    /**
     * <pre>RULES_33_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE
     * SQLite key: rules_33_gesonderte_entgelte_aus_den_jahren_20032004_ohne_schlussrechnung_und_ohne_entlassungsanzeige
     * [en] 33 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung und ohne Entlassungsanzeige
     * [de] 33 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung und ohne Entlassungsanzeige</pre>
     * @return [en] 33 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 33 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung und ohne Entlassungsanzeige
     */
    public static String getRules33GesonderteEntgelteAusDenJahren20032004OhneSchlussrechnungUndOhneEntlassungsanzeige() {
        return get(RULES_33_GESONDERTE_ENTGELTE_AUS_DEN_JAHREN_20032004_OHNE_SCHLUSSRECHNUNG_UND_OHNE_ENTLASSUNGSANZEIGE).value;
    }

    /**
     * <pre>RULES_3_PFLEGESTUFE_3
     * SQLite key: rules_3_pflegestufe_3
     * [en] 3 - Pflegestufe 3
     * [de] 3 - Pflegestufe 3</pre>
     * @return [en] 3 - Pflegestufe 3, [de] 3 - Pflegestufe 3
     */
    public static String getRules3Pflegestufe3() {
        return get(RULES_3_PFLEGESTUFE_3).value;
    }

    /**
     * <pre>RULES_3_UNBESTIMMT
     * SQLite key: rules_3_unbestimmt
     * [en] 3 - unbestimmt
     * [de] 3 - unbestimmt</pre>
     * @return [en] 3 - unbestimmt, [de] 3 - unbestimmt
     */
    public static String getRules3Unbestimmt() {
        return get(RULES_3_UNBESTIMMT).value;
    }

    /**
     * <pre>RULES_4_DIVERSE
     * SQLite key: rules_4_diverse
     * [en] 4 - diverse
     * [de] 4 - divers</pre>
     * @return [en] 4 - diverse, [de] 4 - divers
     */
    public static String getRules4Diverse() {
        return get(RULES_4_DIVERSE).value;
    }

    /**
     * <pre>RULES_4_HAERTEFALL_PFLEGESTUFE_3
     * SQLite key: rules_4_haertefall_pflegestufe_3
     * [en] 4 - Härtefall (Pflegestufe 3+)
     * [de] 4 - Härtefall (Pflegestufe 3+)</pre>
     * @return [en] 4 - Härtefall (Pflegestufe 3+), [de] 4 - Härtefall (Pflegestufe 3+)
     */
    public static String getRules4HaertefallPflegestufe3() {
        return get(RULES_4_HAERTEFALL_PFLEGESTUFE_3).value;
    }

    /**
     * <pre>RULES_70_PFLEGESACHLEISTUNG
     * SQLite key: rules_70_pflegesachleistung
     * [en] 70 - Pflegesachleistung
     * [de] 70 - Pflegesachleistung</pre>
     * @return [en] 70 - Pflegesachleistung, [de] 70 - Pflegesachleistung
     */
    public static String getRules70Pflegesachleistung() {
        return get(RULES_70_PFLEGESACHLEISTUNG).value;
    }

    /**
     * <pre>RULES_71_PFLEGEGELD
     * SQLite key: rules_71_pflegegeld
     * [en] 71 - Pflegegeld
     * [de] 71 - Pflegegeld</pre>
     * @return [en] 71 - Pflegegeld, [de] 71 - Pflegegeld
     */
    public static String getRules71Pflegegeld() {
        return get(RULES_71_PFLEGEGELD).value;
    }

    /**
     * <pre>RULES_72_HAEUSLICHER_BERATUNGSEINSATZ
     * SQLite key: rules_72_haeuslicher_beratungseinsatz
     * [en] 72 - häuslicher Beratungseinsatz
     * [de] 72 - häuslicher Beratungseinsatz</pre>
     * @return [en] 72 - häuslicher Beratungseinsatz, [de] 72 - häuslicher Beratungseinsatz
     */
    public static String getRules72HaeuslicherBeratungseinsatz() {
        return get(RULES_72_HAEUSLICHER_BERATUNGSEINSATZ).value;
    }

    /**
     * <pre>RULES_73_PFLEGE_BEI_VERHINDERUNG_DER_PFLEGEPERSON
     * SQLite key: rules_73_pflege_bei_verhinderung_der_pflegeperson
     * [en] 73 - Pflege bei Verhinderung der Pflegeperson
     * [de] 73 - Pflege bei Verhinderung der Pflegeperson</pre>
     * @return [en] 73 - Pflege bei Verhinderung der Pflegeperson, [de] 73 - Pflege bei Verhinderung der Pflegeperson
     */
    public static String getRules73PflegeBeiVerhinderungDerPflegeperson() {
        return get(RULES_73_PFLEGE_BEI_VERHINDERUNG_DER_PFLEGEPERSON).value;
    }

    /**
     * <pre>RULES_74_MASSNAHMEN_IM_WOHNUMFELD
     * SQLite key: rules_74_massnahmen_im_wohnumfeld
     * [en] 74 - Maßnahmen im Wohnumfeld
     * [de] 74 - Maßnahmen im Wohnumfeld</pre>
     * @return [en] 74 - Maßnahmen im Wohnumfeld, [de] 74 - Maßnahmen im Wohnumfeld
     */
    public static String getRules74MassnahmenImWohnumfeld() {
        return get(RULES_74_MASSNAHMEN_IM_WOHNUMFELD).value;
    }

    /**
     * <pre>RULES_75_TEILSTATIONAERE_PFLEGE_TAGES_NACHTPFLEGE
     * SQLite key: rules_75_teilstationaere_pflege_tages_nachtpflege
     * [en] 75 - Teilstationäre Pflege (Tages-/ Nachtpflege)
     * [de] 75 - Teilstationäre Pflege (Tages-/ Nachtpflege)</pre>
     * @return [en] 75 - Teilstationäre Pflege (Tages-/ Nachtpflege), [de] 75 - Teilstationäre Pflege (Tages-/ Nachtpflege)
     */
    public static String getRules75TeilstationaerePflegeTagesNachtpflege() {
        return get(RULES_75_TEILSTATIONAERE_PFLEGE_TAGES_NACHTPFLEGE).value;
    }

    /**
     * <pre>RULES_76_KURZZEITPFLEGE
     * SQLite key: rules_76_kurzzeitpflege
     * [en] 76 - Kurzzeitpflege
     * [de] 76 - Kurzzeitpflege</pre>
     * @return [en] 76 - Kurzzeitpflege, [de] 76 - Kurzzeitpflege
     */
    public static String getRules76Kurzzeitpflege() {
        return get(RULES_76_KURZZEITPFLEGE).value;
    }

    /**
     * <pre>RULES_77_VOLLSTATIONRE_PFLEGE
     * SQLite key: rules_77_vollstationre_pflege
     * [en] 77 - Vollstationre Pflege
     * [de] 77 - Vollstationre Pflege</pre>
     * @return [en] 77 - Vollstationre Pflege, [de] 77 - Vollstationre Pflege
     */
    public static String getRules77VollstationrePflege() {
        return get(RULES_77_VOLLSTATIONRE_PFLEGE).value;
    }

    /**
     * <pre>RULES_78_VOLLSTATIONRE_PFLEGE_MIT_ZUSCHUSS
     * SQLite key: rules_78_vollstationre_pflege_mit_zuschuss
     * [en] 78 - Vollstationre Pflege mit Zuschuß
     * [de] 78 - Vollstationre Pflege mit Zuschuß</pre>
     * @return [en] 78 - Vollstationre Pflege mit Zuschuß, [de] 78 - Vollstationre Pflege mit Zuschuß
     */
    public static String getRules78VollstationrePflegeMitZuschuss() {
        return get(RULES_78_VOLLSTATIONRE_PFLEGE_MIT_ZUSCHUSS).value;
    }

    /**
     * <pre>RULES_79_VOLLSTATIONRE_PFLEGE_IN_BEHINDERTENEINRICHTUNG
     * SQLite key: rules_79_vollstationre_pflege_in_behinderteneinrichtung
     * [en] 79 - Vollstationre Pflege in Behinderteneinrichtung
     * [de] 79 - Vollstationre Pflege in Behinderteneinrichtung</pre>
     * @return [en] 79 - Vollstationre Pflege in Behinderteneinrichtung, [de] 79 - Vollstationre Pflege in Behinderteneinrichtung
     */
    public static String getRules79VollstationrePflegeInBehinderteneinrichtung() {
        return get(RULES_79_VOLLSTATIONRE_PFLEGE_IN_BEHINDERTENEINRICHTUNG).value;
    }

    /**
     * <pre>RULES_7A_BEREUNGSLEISTUNG_BIS_30_06_2008
     * SQLite key: rules_7a_bereungsleistung_bis_30_06_2008
     * [en] 7A - Bereungsleistung bis 30.06.2008
     * [de] 7A - Bereungsleistung bis 30.06.2008</pre>
     * @return [en] 7A - Bereungsleistung bis 30.06.2008, [de] 7A - Bereungsleistung bis 30.06.2008
     */
    public static String getRules7aBereungsleistungBis30062008() {
        return get(RULES_7A_BEREUNGSLEISTUNG_BIS_30_06_2008).value;
    }

    /**
     * <pre>RULES_7B_STUNDENWEISE_ERSATZPFLEGE
     * SQLite key: rules_7b_stundenweise_ersatzpflege
     * [en] 7B - stundenweise Ersatzpflege
     * [de] 7B - stundenweise Ersatzpflege</pre>
     * @return [en] 7B - stundenweise Ersatzpflege, [de] 7B - stundenweise Ersatzpflege
     */
    public static String getRules7bStundenweiseErsatzpflege() {
        return get(RULES_7B_STUNDENWEISE_ERSATZPFLEGE).value;
    }

    /**
     * <pre>RULES_7C_BEREUNGSLEISTUNG_MAXIMALBETRAG
     * SQLite key: rules_7c_bereungsleistung_maximalbetrag
     * [en] 7C - Bereungsleistung Maximalbetrag
     * [de] 7C - Bereungsleistung Maximalbetrag</pre>
     * @return [en] 7C - Bereungsleistung Maximalbetrag, [de] 7C - Bereungsleistung Maximalbetrag
     */
    public static String getRules7cBereungsleistungMaximalbetrag() {
        return get(RULES_7C_BEREUNGSLEISTUNG_MAXIMALBETRAG).value;
    }

    /**
     * <pre>RULES_7D_BEREUNGSLEISTUNG_GRUNDBETRAG
     * SQLite key: rules_7d_bereungsleistung_grundbetrag
     * [en] 7D - Bereungsleistung Grundbetrag
     * [de] 7D - Bereungsleistung Grundbetrag</pre>
     * @return [en] 7D - Bereungsleistung Grundbetrag, [de] 7D - Bereungsleistung Grundbetrag
     */
    public static String getRules7dBereungsleistungGrundbetrag() {
        return get(RULES_7D_BEREUNGSLEISTUNG_GRUNDBETRAG).value;
    }

    /**
     * <pre>RULES_7E_BONUSZAHLUNG_AN_VOLLSTATIONAERE_PFLEGEEINRICHTUNGEN_BEI_RUECKSTUFUNG
     * SQLite key: rules_7e_bonuszahlung_an_vollstationaere_pflegeeinrichtungen_bei_rueckstufung
     * [en] 7E - Bonuszahlung an vollstationäre Pflegeeinrichtungen bei Rückstufung
     * [de] 7E - Bonuszahlung an vollstationäre Pflegeeinrichtungen bei Rückstufung</pre>
     * @return [en] 7E - Bonuszahlung an vollstationäre Pflegeeinrichtungen bei Rückstufung, [de] 7E - Bonuszahlung an vollstationäre Pflegeeinrichtungen bei Rückstufung
     */
    public static String getRules7eBonuszahlungAnVollstationaerePflegeeinrichtungenBeiRueckstufung() {
        return get(RULES_7E_BONUSZAHLUNG_AN_VOLLSTATIONAERE_PFLEGEEINRICHTUNGEN_BEI_RUECKSTUFUNG).value;
    }

    /**
     * <pre>RULES_7F_KURZZEITPFLEGE_FUER_KINDER_IN_NICHTVERTRAGSEINRICHTUNGEN
     * SQLite key: rules_7f_kurzzeitpflege_fuer_kinder_in_nichtvertragseinrichtungen
     * [en] 7F - Kurzzeitpflege für Kinder in Nichtvertragseinrichtungen
     * [de] 7F - Kurzzeitpflege für Kinder in Nichtvertragseinrichtungen</pre>
     * @return [en] 7F - Kurzzeitpflege für Kinder in Nichtvertragseinrichtungen, [de] 7F - Kurzzeitpflege für Kinder in Nichtvertragseinrichtungen
     */
    public static String getRules7fKurzzeitpflegeFuerKinderInNichtvertragseinrichtungen() {
        return get(RULES_7F_KURZZEITPFLEGE_FUER_KINDER_IN_NICHTVERTRAGSEINRICHTUNGEN).value;
    }

    /**
     * <pre>RULES_7G_ERSTBERATUNG
     * SQLite key: rules_7g_erstberatung
     * [en] 7G - Erstberatung
     * [de] 7G - Erstberatung</pre>
     * @return [en] 7G - Erstberatung, [de] 7G - Erstberatung
     */
    public static String getRules7gErstberatung() {
        return get(RULES_7G_ERSTBERATUNG).value;
    }

    /**
     * <pre>RULES_7H_FOLGEBERATUNG
     * SQLite key: rules_7h_folgeberatung
     * [en] 7H - Folgeberatung
     * [de] 7H - Folgeberatung</pre>
     * @return [en] 7H - Folgeberatung, [de] 7H - Folgeberatung
     */
    public static String getRules7hFolgeberatung() {
        return get(RULES_7H_FOLGEBERATUNG).value;
    }

    /**
     * <pre>RULES_7P_BEWILLIGUNG_PFLEGEGELD
     * SQLite key: rules_7p_bewilligung_pflegegeld
     * [en] 7P - Bewilligung Pflegegeld
     * [de] 7P - Bewilligung Pflegegeld</pre>
     * @return [en] 7P - Bewilligung Pflegegeld, [de] 7P - Bewilligung Pflegegeld
     */
    public static String getRules7pBewilligungPflegegeld() {
        return get(RULES_7P_BEWILLIGUNG_PFLEGEGELD).value;
    }

    /**
     * <pre>RULES_7S_BEWILLIGUNG_PFLEGESACHLEISTUNG
     * SQLite key: rules_7s_bewilligung_pflegesachleistung
     * [en] 7S - Bewilligung Pflegesachleistung
     * [de] 7S - Bewilligung Pflegesachleistung</pre>
     * @return [en] 7S - Bewilligung Pflegesachleistung, [de] 7S - Bewilligung Pflegesachleistung
     */
    public static String getRules7sBewilligungPflegesachleistung() {
        return get(RULES_7S_BEWILLIGUNG_PFLEGESACHLEISTUNG).value;
    }

    /**
     * <pre>RULES_9_UNBEKANNT
     * SQLite key: rules_9_unbekannt
     * [en] 9 - unbekannt
     * [de] 9 - unbekannt</pre>
     * @return [en] 9 - unbekannt, [de] 9 - unbekannt
     */
    public static String getRules9Unbekannt() {
        return get(RULES_9_UNBEKANNT).value;
    }

    /**
     * <pre>RULES_ALTERINJAHREN
     * SQLite key: rules_alterinjahren
     * [en] AlterInJahren
     * [de] AlterInJahren</pre>
     * @return [en] AlterInJahren, [de] AlterInJahren
     */
    public static String getRulesAlterinjahren() {
        return get(RULES_ALTERINJAHREN).value;
    }

    /**
     * <pre>RULES_ALTERINTAGEN
     * SQLite key: rules_alterintagen
     * [en] AlterInTagen
     * [de] AlterInTagen</pre>
     * @return [en] AlterInTagen, [de] AlterInTagen
     */
    public static String getRulesAlterintagen() {
        return get(RULES_ALTERINTAGEN).value;
    }

    /**
     * <pre>RULES_ANZAHLABTEILUNGEN
     * SQLite key: rules_anzahlabteilungen
     * [en] AnzahlAbteilungen
     * [de] AnzahlAbteilungen</pre>
     * @return [en] AnzahlAbteilungen, [de] AnzahlAbteilungen
     */
    public static String getRulesAnzahlabteilungen() {
        return get(RULES_ANZAHLABTEILUNGEN).value;
    }

    /**
     * <pre>RULES_ANZAHLNEBENDIAGNOSEN
     * SQLite key: rules_anzahlnebendiagnosen
     * [en] AnzahlNebendiagnosen
     * [de] AnzahlNebendiagnosen</pre>
     * @return [en] AnzahlNebendiagnosen, [de] AnzahlNebendiagnosen
     */
    public static String getRulesAnzahlnebendiagnosen() {
        return get(RULES_ANZAHLNEBENDIAGNOSEN).value;
    }

    /**
     * <pre>RULES_ANZAHLPROZEDUREN
     * SQLite key: rules_anzahlprozeduren
     * [en] AnzahlProzeduren
     * [de] AnzahlProzeduren</pre>
     * @return [en] AnzahlProzeduren, [de] AnzahlProzeduren
     */
    public static String getRulesAnzahlprozeduren() {
        return get(RULES_ANZAHLPROZEDUREN).value;
    }

    /**
     * <pre>RULES_ATCCODE
     * SQLite key: rules_atccode
     * [en] ATCCode
     * [de] ATCCode</pre>
     * @return [en] ATCCode, [de] ATCCode
     */
    public static String getRulesAtccode() {
        return get(RULES_ATCCODE).value;
    }

    /**
     * <pre>RULES_AUFENTHALTKLEINER_24H
     * SQLite key: rules_aufenthaltkleiner24h
     * [en] AufenthaltKleiner24h
     * [de] AufenthaltKleiner24h</pre>
     * @return [en] AufenthaltKleiner24h, [de] AufenthaltKleiner24h
     */
    public static String getRulesAufenthaltkleiner24h() {
        return get(RULES_AUFENTHALTKLEINER_24H).value;
    }

    /**
     * <pre>RULES_AUFNAHMEDIAGNOSETYPE
     * SQLite key: rules_aufnahmediagnosetype
     * [en] AufnahmediagnoseType
     * [de] AufnahmediagnoseType</pre>
     * @return [en] AufnahmediagnoseType, [de] AufnahmediagnoseType
     */
    public static String getRulesAufnahmediagnosetype() {
        return get(RULES_AUFNAHMEDIAGNOSETYPE).value;
    }

    /**
     * <pre>RULES_AUFNEHMENDEFACHABTEILUNG
     * SQLite key: rules_aufnehmendefachabteilung
     * [en] AufnehmendeFachabteilung
     * [de] AufnehmendeFachabteilung</pre>
     * @return [en] AufnehmendeFachabteilung, [de] AufnehmendeFachabteilung
     */
    public static String getRulesAufnehmendefachabteilung() {
        return get(RULES_AUFNEHMENDEFACHABTEILUNG).value;
    }

    /**
     * <pre>RULES_BEHANDELNDEFACHABTEILUNG
     * SQLite key: rules_behandelndefachabteilung
     * [en] BehandelndeFachabteilung
     * [de] BehandelndeFachabteilung</pre>
     * @return [en] BehandelndeFachabteilung, [de] BehandelndeFachabteilung
     */
    public static String getRulesBehandelndefachabteilung() {
        return get(RULES_BEHANDELNDEFACHABTEILUNG).value;
    }

    /**
     * <pre>RULES_CASE_CASE_DAYS
     * SQLite key: rules_case_case_days
     * [en] Pflegetage
     * [de] Pflegetage</pre>
     * ATTENTION this value ('Pflegetage') seems to be also defined under the key RULES_PFLEGETAGE!
     * @return [en] Pflegetage, [de] Pflegetage
     */
    public static String getRulesCaseCaseDays() {
        return get(RULES_CASE_CASE_DAYS).value;
    }

    /**
     * <pre>RULES_CASE_DATES
     * SQLite key: rules_case_dates
     * [en] Falldaten
     * [de] Falldaten</pre>
     * @return [en] Falldaten, [de] Falldaten
     */
    public static String getRulesCaseDates() {
        return get(RULES_CASE_DATES).value;
    }

    /**
     * <pre>RULES_CASE_DISCHARGE_DATE
     * SQLite key: rules_case_discharge_date
     * [en] Entlassungsdatum
     * [de] Entlassungsdatum</pre>
     * @return [en] Entlassungsdatum, [de] Entlassungsdatum
     */
    public static String getRulesCaseDischargeDate() {
        return get(RULES_CASE_DISCHARGE_DATE).value;
    }

    /**
     * <pre>RULES_CASE_SPEC
     * SQLite key: rules_case_spec
     * [en] Abteilung
     * [de] Abteilung</pre>
     * @return [en] Abteilung, [de] Abteilung
     */
    public static String getRulesCaseSpec() {
        return get(RULES_CASE_SPEC).value;
    }

    /**
     * <pre>RULES_CHECKRESULT_TYP_OPS
     * SQLite key: rules_checkresult_typ_ops
     * [en] OPS
     * [de] OPS</pre>
     * ATTENTION this value ('OPS') seems to be also defined under the key CASE_RESOLVE_OPS!
     * @return [en] OPS, [de] OPS
     */
    public static String getRulesCheckresultTypOps() {
        return get(RULES_CHECKRESULT_TYP_OPS).value;
    }

    /**
     * <pre>RULES_COL_ADRG
     * SQLite key: rules_col_adrg
     * [en] ADRG
     * [de] ADRG</pre>
     * @return [en] ADRG, [de] ADRG
     */
    public static String getRulesColAdrg() {
        return get(RULES_COL_ADRG).value;
    }

    /**
     * <pre>RULES_COL_CASENR
     * SQLite key: rules_col_casenr
     * [en] Fallnummer
     * [de] Fallnummer</pre>
     * @return [en] Fallnummer, [de] Fallnummer
     */
    public static String getRulesColCasenr() {
        return get(RULES_COL_CASENR).value;
    }

    /**
     * <pre>RULES_COL_OPDATUM
     * SQLite key: rules_col_opdatum
     * [en] Datum
     * [de] Datum</pre>
     * @return [en] Datum, [de] Datum
     */
    public static String getRulesColOpdatum() {
        return get(RULES_COL_OPDATUM).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_ADG_CODES
     * SQLite key: rules_crit_acg_adg_codes
     * [en] acg_ADG_Code
     * [de] acg_ADG_Code</pre>
     * @return [en] acg_ADG_Code, [de] acg_ADG_Code
     */
    public static String getRulesCritAcgAdgCodes() {
        return get(RULES_CRIT_ACG_ADG_CODES).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_ADG_CODES_DIS
     * SQLite key: rules_crit_acg_adg_codes_dis
     * [en] ACG: ADG-Code
     * [de] ACG: ADG-Code</pre>
     * @return [en] ACG: ADG-Code, [de] ACG: ADG-Code
     */
    public static String getRulesCritAcgAdgCodesDis() {
        return get(RULES_CRIT_ACG_ADG_CODES_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_ADG_CODES_TOOLTIP
     * SQLite key: rules_crit_acg_adg_codes_tooltip
     * [en] 32 nicht exkluxive Gruppen. Eine ADG ist eine Morbiditätsgruppe, die Schwere und Dauer des Zustandes des Patienten beschreibt. Aggregierte diagnostischen Gruppen. Die Bausteine des ACG-Systems. Jeder ADG-Code ist eine Gruppierung von Diagnose-Codes, die ähnlich im Hinblick auf die Schwere und Wahrscheinlichkeit der Persistenz der Gesundheitszustand im Laufe der Zeit sind.
     * [de] 32 nicht exkluxive Gruppen. Eine ADG ist eine Morbiditätsgruppe, die Schwere und Dauer des Zustandes des Patienten beschreibt. Aggregierte diagnostischen Gruppen. Die Bausteine des ACG-Systems. Jeder ADG-Code ist eine Gruppierung von Diagnose-Codes, die ähnlich im Hinblick auf die Schwere und Wahrscheinlichkeit der Persistenz der Gesundheitszustand im Laufe der Zeit sind.</pre>
     * @return [en] 32 nicht exkluxive Gruppen. Eine ADG ist eine Morbiditätsgruppe, die Schwere und Dauer des Zustandes des Patienten beschreibt. Aggregierte diagnostischen Gruppen. Die Bausteine des ACG-Systems. Jeder ADG-Code ist eine Gruppierung von Diagnose-Codes, die ähnlich im Hinblick auf die Schwere und Wahrscheinlichkeit der Persistenz der Gesundheitszustand im Laufe der Zeit sind., [de] 32 nicht exkluxive Gruppen. Eine ADG ist eine Morbiditätsgruppe, die Schwere und Dauer des Zustandes des Patienten beschreibt. Aggregierte diagnostischen Gruppen. Die Bausteine des ACG-Systems. Jeder ADG-Code ist eine Gruppierung von Diagnose-Codes, die ähnlich im Hinblick auf die Schwere und Wahrscheinlichkeit der Persistenz der Gesundheitszustand im Laufe der Zeit sind.
     */
    public static String getRulesCritAcgAdgCodesTooltip() {
        return get(RULES_CRIT_ACG_ADG_CODES_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_ADG_CODES_TOOLTIP_1
     * SQLite key: rules_crit_acg_adg_codes_tooltip_1
     * [en] Format: Alphanumerisch (Beispiel 29)
     * [de] Format: Alphanumerisch (Beispiel 29)</pre>
     * @return [en] Format: Alphanumerisch (Beispiel 29), [de] Format: Alphanumerisch (Beispiel 29)
     */
    public static String getRulesCritAcgAdgCodesTooltip1() {
        return get(RULES_CRIT_ACG_ADG_CODES_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_ADG_VECTOR
     * SQLite key: rules_crit_acg_adg_vector
     * [en] acg_ADG_Vektor
     * [de] acg_ADG_Vektor</pre>
     * @return [en] acg_ADG_Vektor, [de] acg_ADG_Vektor
     */
    public static String getRulesCritAcgAdgVector() {
        return get(RULES_CRIT_ACG_ADG_VECTOR).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_ADG_VECTOR_DIS
     * SQLite key: rules_crit_acg_adg_vector_dis
     * [en] ACG: ADG-Vektor
     * [de] ACG: ADG-Vektor</pre>
     * @return [en] ACG: ADG-Vektor, [de] ACG: ADG-Vektor
     */
    public static String getRulesCritAcgAdgVectorDis() {
        return get(RULES_CRIT_ACG_ADG_VECTOR_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_ADG_VECTOR_TOOLTIP
     * SQLite key: rules_crit_acg_adg_vector_tooltip
     * [en] Ein Vektor von Nullen und Einsen, um anzuzeigen, welchem ADG-Code dieser Patienten zuzuornden ist. Eine "1" in der fünften Position zeigt, dass der Patient ADG 5 zugewiesen wurde. Hinweis: ADG15 und ASG19 sind nicht mehr in Gebrauch und somit sollte immer Null sein.
     * [de] Ein Vektor von Nullen und Einsen, um anzuzeigen, welchem ADG-Code dieser Patienten zuzuornden ist. Eine "1" in der fünften Position zeigt, dass der Patient ADG 5 zugewiesen wurde. Hinweis: ADG15 und ASG19 sind nicht mehr in Gebrauch und somit sollte immer Null sein.</pre>
     * @return [en] Ein Vektor von Nullen und Einsen, um anzuzeigen, welchem ADG-Code dieser Patienten zuzuornden ist. Eine "1" in der fünften Position zeigt, dass der Patient ADG 5 zugewiesen wurde. Hinweis: ADG15 und ASG19 sind nicht mehr in Gebrauch und somit sollte immer Null sein., [de] Ein Vektor von Nullen und Einsen, um anzuzeigen, welchem ADG-Code dieser Patienten zuzuornden ist. Eine "1" in der fünften Position zeigt, dass der Patient ADG 5 zugewiesen wurde. Hinweis: ADG15 und ASG19 sind nicht mehr in Gebrauch und somit sollte immer Null sein.
     */
    public static String getRulesCritAcgAdgVectorTooltip() {
        return get(RULES_CRIT_ACG_ADG_VECTOR_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_ADG_VECTOR_TOOLTIP_1
     * SQLite key: rules_crit_acg_adg_vector_tooltip_1
     * [en] Format: Alphanumerisch (Beispiel ADG0000000000100000000000001000000000)
     * [de] Format: Alphanumerisch (Beispiel ADG0000000000100000000000001000000000)</pre>
     * @return [en] Format: Alphanumerisch (Beispiel ADG0000000000100000000000001000000000), [de] Format: Alphanumerisch (Beispiel ADG0000000000100000000000001000000000)
     */
    public static String getRulesCritAcgAdgVectorTooltip1() {
        return get(RULES_CRIT_ACG_ADG_VECTOR_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE
     * SQLite key: rules_crit_acg_age
     * [en] acg_alter
     * [de] acg_alter</pre>
     * @return [en] acg_alter, [de] acg_alter
     */
    public static String getRulesCritAcgAge() {
        return get(RULES_CRIT_ACG_AGE).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_BAND
     * SQLite key: rules_crit_acg_age_band
     * [en] acg_altersgruppe
     * [de] acg_altersgruppe</pre>
     * @return [en] acg_altersgruppe, [de] acg_altersgruppe
     */
    public static String getRulesCritAcgAgeBand() {
        return get(RULES_CRIT_ACG_AGE_BAND).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_BAND_DIS
     * SQLite key: rules_crit_acg_age_band_dis
     * [en] ACG: Altersgruppe
     * [de] ACG: Altersgruppe</pre>
     * @return [en] ACG: Altersgruppe, [de] ACG: Altersgruppe
     */
    public static String getRulesCritAcgAgeBandDis() {
        return get(RULES_CRIT_ACG_AGE_BAND_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_10
     * SQLite key: rules_crit_acg_age_band_tooltip_10
     * [en] 70-74
     * [de] 70-74</pre>
     * ATTENTION this value ('70-74') seems to be also defined under the key ACG_AGE_BAND_70_74!
     * @return [en] 70-74, [de] 70-74
     */
    public static String getRulesCritAcgAgeBandTooltip10() {
        return get(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_10).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_11
     * SQLite key: rules_crit_acg_age_band_tooltip_11
     * [en] 75-79
     * [de] 75-79</pre>
     * ATTENTION this value ('75-79') seems to be also defined under the key ACG_AGE_BAND_75_79!
     * @return [en] 75-79, [de] 75-79
     */
    public static String getRulesCritAcgAgeBandTooltip11() {
        return get(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_11).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_12
     * SQLite key: rules_crit_acg_age_band_tooltip_12
     * [en] 80-84
     * [de] 80-84</pre>
     * ATTENTION this value ('80-84') seems to be also defined under the key ACG_AGE_BAND_80_84!
     * @return [en] 80-84, [de] 80-84
     */
    public static String getRulesCritAcgAgeBandTooltip12() {
        return get(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_12).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_13
     * SQLite key: rules_crit_acg_age_band_tooltip_13
     * [en] 85+
     * [de] 85+</pre>
     * ATTENTION this value ('85+') seems to be also defined under the key ACG_AGE_BAND_85_P!
     * @return [en] 85+, [de] 85+
     */
    public static String getRulesCritAcgAgeBandTooltip13() {
        return get(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_13).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_2
     * SQLite key: rules_crit_acg_age_band_tooltip_2
     * [en] &amp;lt;0
     * [de] &amp;lt;0</pre>
     * @return [en] {@literal &}lt;0, [de] {@literal &}lt;0
     */
    public static String getRulesCritAcgAgeBandTooltip2() {
        return get(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_3
     * SQLite key: rules_crit_acg_age_band_tooltip_3
     * [en] 00-04
     * [de] 00-04</pre>
     * ATTENTION this value ('00-04') seems to be also defined under the key ACG_AGE_BAND_00_04!
     * @return [en] 00-04, [de] 00-04
     */
    public static String getRulesCritAcgAgeBandTooltip3() {
        return get(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_4
     * SQLite key: rules_crit_acg_age_band_tooltip_4
     * [en] 05-11
     * [de] 05-11</pre>
     * ATTENTION this value ('05-11') seems to be also defined under the key ACG_AGE_BAND_05_11!
     * @return [en] 05-11, [de] 05-11
     */
    public static String getRulesCritAcgAgeBandTooltip4() {
        return get(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_5
     * SQLite key: rules_crit_acg_age_band_tooltip_5
     * [en] 12-17
     * [de] 12-17</pre>
     * ATTENTION this value ('12-17') seems to be also defined under the key ACG_AGE_BAND_12_17!
     * @return [en] 12-17, [de] 12-17
     */
    public static String getRulesCritAcgAgeBandTooltip5() {
        return get(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_6
     * SQLite key: rules_crit_acg_age_band_tooltip_6
     * [en] 18-34
     * [de] 18-34</pre>
     * ATTENTION this value ('18-34') seems to be also defined under the key ACG_AGE_BAND_18_34!
     * @return [en] 18-34, [de] 18-34
     */
    public static String getRulesCritAcgAgeBandTooltip6() {
        return get(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_7
     * SQLite key: rules_crit_acg_age_band_tooltip_7
     * [en] 35-44
     * [de] 35-44</pre>
     * ATTENTION this value ('35-44') seems to be also defined under the key ACG_AGE_BAND_35_44!
     * @return [en] 35-44, [de] 35-44
     */
    public static String getRulesCritAcgAgeBandTooltip7() {
        return get(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_7).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_8
     * SQLite key: rules_crit_acg_age_band_tooltip_8
     * [en] 45-54
     * [de] 45-54</pre>
     * ATTENTION this value ('45-54') seems to be also defined under the key ACG_AGE_BAND_45_54!
     * @return [en] 45-54, [de] 45-54
     */
    public static String getRulesCritAcgAgeBandTooltip8() {
        return get(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_8).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_BAND_TOOLTIP_9
     * SQLite key: rules_crit_acg_age_band_tooltip_9
     * [en] 55-69
     * [de] 55-69</pre>
     * @return [en] 55-69, [de] 55-69
     */
    public static String getRulesCritAcgAgeBandTooltip9() {
        return get(RULES_CRIT_ACG_AGE_BAND_TOOLTIP_9).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_DIS
     * SQLite key: rules_crit_acg_age_dis
     * [en] ACG: Alter
     * [de] ACG: Alter</pre>
     * @return [en] ACG: Alter, [de] ACG: Alter
     */
    public static String getRulesCritAcgAgeDis() {
        return get(RULES_CRIT_ACG_AGE_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_TOOLTIP
     * SQLite key: rules_crit_acg_age_tooltip
     * [en] Alter aus den ACG Daten
     * [de] Alter aus den ACG Daten</pre>
     * @return [en] Alter aus den ACG Daten, [de] Alter aus den ACG Daten
     */
    public static String getRulesCritAcgAgeTooltip() {
        return get(RULES_CRIT_ACG_AGE_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_AGE_TOOLTIP_1
     * SQLite key: rules_crit_acg_age_tooltip_1
     * [en] Format: ganze Zahl (Beispiel 25)
     * [de] Format: ganze Zahl (Beispiel 25)</pre>
     * @return [en] Format: ganze Zahl (Beispiel 25), [de] Format: ganze Zahl (Beispiel 25)
     */
    public static String getRulesCritAcgAgeTooltip1() {
        return get(RULES_CRIT_ACG_AGE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_ARTHRITIS_CONDITION
     * SQLite key: rules_crit_acg_arthritis_condition
     * [en] acg_Arthritis_vorhanden
     * [de] acg_Arthritis_vorhanden</pre>
     * @return [en] acg_Arthritis_vorhanden, [de] acg_Arthritis_vorhanden
     */
    public static String getRulesCritAcgArthritisCondition() {
        return get(RULES_CRIT_ACG_ARTHRITIS_CONDITION).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_ARTHRITIS_CONDITION_DIS
     * SQLite key: rules_crit_acg_arthritis_condition_dis
     * [en] ACG: Arthritis vorhanden
     * [de] ACG: Arthritis vorhanden</pre>
     * @return [en] ACG: Arthritis vorhanden, [de] ACG: Arthritis vorhanden
     */
    public static String getRulesCritAcgArthritisConditionDis() {
        return get(RULES_CRIT_ACG_ARTHRITIS_CONDITION_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_ASTHMA_CONDITION
     * SQLite key: rules_crit_acg_asthma_condition
     * [en] acg_Asthma_vorhanden
     * [de] acg_Asthma_vorhanden</pre>
     * @return [en] acg_Asthma_vorhanden, [de] acg_Asthma_vorhanden
     */
    public static String getRulesCritAcgAsthmaCondition() {
        return get(RULES_CRIT_ACG_ASTHMA_CONDITION).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_ASTHMA_CONDITION_DIS
     * SQLite key: rules_crit_acg_asthma_condition_dis
     * [en] ACG: Asthma vorhanden
     * [de] ACG: Asthma vorhanden</pre>
     * @return [en] ACG: Asthma vorhanden, [de] ACG: Asthma vorhanden
     */
    public static String getRulesCritAcgAsthmaConditionDis() {
        return get(RULES_CRIT_ACG_ASTHMA_CONDITION_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT
     * SQLite key: rules_crit_acg_chronic_condition_count
     * [en] acg_Anzahl_chronischer_Erkrankungen
     * [de] acg_Anzahl_chronischer_Erkrankungen</pre>
     * @return [en] acg_Anzahl_chronischer_Erkrankungen, [de] acg_Anzahl_chronischer_Erkrankungen
     */
    public static String getRulesCritAcgChronicConditionCount() {
        return get(RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT_DIS
     * SQLite key: rules_crit_acg_chronic_condition_count_dis
     * [en] ACG: Anzahl chronischer Erkrankungen
     * [de] ACG: Anzahl chronischer Erkrankungen</pre>
     * @return [en] ACG: Anzahl chronischer Erkrankungen, [de] ACG: Anzahl chronischer Erkrankungen
     */
    public static String getRulesCritAcgChronicConditionCountDis() {
        return get(RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT_TOOLTIP
     * SQLite key: rules_crit_acg_chronic_condition_count_tooltip
     * [en] Anzahl chronischer Erkrankungen (Basis EDC-Gruppe): Ein Zählimpuls von ADGs die Triggerdiagnoses enthalten, die einen chronischen Zustand mit bedeutenden erwarteten Dauer- und Resoruceanforderungen anzeigen.
     * [de] Anzahl chronischer Erkrankungen (Basis EDC-Gruppe): Ein Zählimpuls von ADGs die Triggerdiagnoses enthalten, die einen chronischen Zustand mit bedeutenden erwarteten Dauer- und Resoruceanforderungen anzeigen.</pre>
     * @return [en] Anzahl chronischer Erkrankungen (Basis EDC-Gruppe): Ein Zählimpuls von ADGs die Triggerdiagnoses enthalten, die einen chronischen Zustand mit bedeutenden erwarteten Dauer- und Resoruceanforderungen anzeigen., [de] Anzahl chronischer Erkrankungen (Basis EDC-Gruppe): Ein Zählimpuls von ADGs die Triggerdiagnoses enthalten, die einen chronischen Zustand mit bedeutenden erwarteten Dauer- und Resoruceanforderungen anzeigen.
     */
    public static String getRulesCritAcgChronicConditionCountTooltip() {
        return get(RULES_CRIT_ACG_CHRONIC_CONDITION_COUNT_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_CODE
     * SQLite key: rules_crit_acg_code
     * [en] acg_Code
     * [de] acg_Code</pre>
     * @return [en] acg_Code, [de] acg_Code
     */
    public static String getRulesCritAcgCode() {
        return get(RULES_CRIT_ACG_CODE).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_CODE_DIS
     * SQLite key: rules_crit_acg_code_dis
     * [en] ACG: ACG-Code
     * [de] ACG: ACG-Code</pre>
     * @return [en] ACG: ACG-Code, [de] ACG: ACG-Code
     */
    public static String getRulesCritAcgCodeDis() {
        return get(RULES_CRIT_ACG_CODE_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_CODE_TOOLTIP
     * SQLite key: rules_crit_acg_code_tooltip
     * [en] Ermittelter ACG-Code für diesen Patienten. Der ACG-Code wird für jeden einzelnen Patienten zugewiesen. ACGs weisen Personen eindeutige, gegenseitig exklusive Morbiditätskategorien zu, basierend auf einem Erkrankungsmodell und auf dem erwarteten Ressourcenbedarf.
     * [de] Ermittelter ACG-Code für diesen Patienten. Der ACG-Code wird für jeden einzelnen Patienten zugewiesen. ACGs weisen Personen eindeutige, gegenseitig exklusive Morbiditätskategorien zu, basierend auf einem Erkrankungsmodell und auf dem erwarteten Ressourcenbedarf.</pre>
     * @return [en] Ermittelter ACG-Code für diesen Patienten. Der ACG-Code wird für jeden einzelnen Patienten zugewiesen. ACGs weisen Personen eindeutige, gegenseitig exklusive Morbiditätskategorien zu, basierend auf einem Erkrankungsmodell und auf dem erwarteten Ressourcenbedarf., [de] Ermittelter ACG-Code für diesen Patienten. Der ACG-Code wird für jeden einzelnen Patienten zugewiesen. ACGs weisen Personen eindeutige, gegenseitig exklusive Morbiditätskategorien zu, basierend auf einem Erkrankungsmodell und auf dem erwarteten Ressourcenbedarf.
     */
    public static String getRulesCritAcgCodeTooltip() {
        return get(RULES_CRIT_ACG_CODE_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_CODE_TOOLTIP_1
     * SQLite key: rules_crit_acg_code_tooltip_1
     * [en] Format: Alphanumerisch Beispiel(4100)
     * [de] Format: Alphanumerisch Beispiel(4100)</pre>
     * @return [en] Format: Alphanumerisch Beispiel(4100), [de] Format: Alphanumerisch Beispiel(4100)
     */
    public static String getRulesCritAcgCodeTooltip1() {
        return get(RULES_CRIT_ACG_CODE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_CONDITION_TOOLTIP_2
     * SQLite key: rules_crit_acg_condition_tooltip_2
     * [en] NP - Zustand nicht vorhanden
     * [de] NP - Zustand nicht vorhanden</pre>
     * @return [en] NP - Zustand nicht vorhanden, [de] NP - Zustand nicht vorhanden
     */
    public static String getRulesCritAcgConditionTooltip2() {
        return get(RULES_CRIT_ACG_CONDITION_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_CONDITION_TOOLTIP_3
     * SQLite key: rules_crit_acg_condition_tooltip_3
     * [en] BTH - Erkrankung identifiziert durch ICD-und ATC-Codes
     * [de] BTH - Erkrankung identifiziert durch ICD-und ATC-Codes</pre>
     * @return [en] BTH - Erkrankung identifiziert durch ICD-und ATC-Codes, [de] BTH - Erkrankung identifiziert durch ICD-und ATC-Codes
     */
    public static String getRulesCritAcgConditionTooltip3() {
        return get(RULES_CRIT_ACG_CONDITION_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_CONDITION_TOOLTIP_5
     * SQLite key: rules_crit_acg_condition_tooltip_5
     * [en] RX - Erkrankung identifiziert durch ATC-Codes
     * [de] RX - Erkrankung identifiziert durch ATC-Codes</pre>
     * @return [en] RX - Erkrankung identifiziert durch ATC-Codes, [de] RX - Erkrankung identifiziert durch ATC-Codes
     */
    public static String getRulesCritAcgConditionTooltip5() {
        return get(RULES_CRIT_ACG_CONDITION_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_10
     * SQLite key: rules_crit_acg_cost_band_tooltip_10
     * [en] 9 - 98-99 Perzentile
     * [de] 9 - 98-99 Perzentile</pre>
     * @return [en] 9 - 98-99 Perzentile, [de] 9 - 98-99 Perzentile
     */
    public static String getRulesCritAcgCostBandTooltip10() {
        return get(RULES_CRIT_ACG_COST_BAND_TOOLTIP_10).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_2
     * SQLite key: rules_crit_acg_cost_band_tooltip_2
     * [en] 1 - 1-1 Perzentile
     * [de] 1 - 1-1 Perzentile</pre>
     * @return [en] 1 - 1-1 Perzentile, [de] 1 - 1-1 Perzentile
     */
    public static String getRulesCritAcgCostBandTooltip2() {
        return get(RULES_CRIT_ACG_COST_BAND_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_3
     * SQLite key: rules_crit_acg_cost_band_tooltip_3
     * [en] 2 - 11-25 Perzentile
     * [de] 2 - 11-25 Perzentile</pre>
     * @return [en] 2 - 11-25 Perzentile, [de] 2 - 11-25 Perzentile
     */
    public static String getRulesCritAcgCostBandTooltip3() {
        return get(RULES_CRIT_ACG_COST_BAND_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_4
     * SQLite key: rules_crit_acg_cost_band_tooltip_4
     * [en] 3 - 26-50 Perzentile
     * [de] 3 - 26-50 Perzentile</pre>
     * @return [en] 3 - 26-50 Perzentile, [de] 3 - 26-50 Perzentile
     */
    public static String getRulesCritAcgCostBandTooltip4() {
        return get(RULES_CRIT_ACG_COST_BAND_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_5
     * SQLite key: rules_crit_acg_cost_band_tooltip_5
     * [en] 4 - 51-75 Perzentile
     * [de] 4 - 51-75 Perzentile</pre>
     * @return [en] 4 - 51-75 Perzentile, [de] 4 - 51-75 Perzentile
     */
    public static String getRulesCritAcgCostBandTooltip5() {
        return get(RULES_CRIT_ACG_COST_BAND_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_6
     * SQLite key: rules_crit_acg_cost_band_tooltip_6
     * [en] 5 - 76-90 Perzentile
     * [de] 5 - 76-90 Perzentile</pre>
     * @return [en] 5 - 76-90 Perzentile, [de] 5 - 76-90 Perzentile
     */
    public static String getRulesCritAcgCostBandTooltip6() {
        return get(RULES_CRIT_ACG_COST_BAND_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_7
     * SQLite key: rules_crit_acg_cost_band_tooltip_7
     * [en] 6 - 91-93 Perzentile
     * [de] 6 - 91-93 Perzentile</pre>
     * @return [en] 6 - 91-93 Perzentile, [de] 6 - 91-93 Perzentile
     */
    public static String getRulesCritAcgCostBandTooltip7() {
        return get(RULES_CRIT_ACG_COST_BAND_TOOLTIP_7).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_8
     * SQLite key: rules_crit_acg_cost_band_tooltip_8
     * [en] 7 - 94-95 Perzentile
     * [de] 7 - 94-95 Perzentile</pre>
     * @return [en] 7 - 94-95 Perzentile, [de] 7 - 94-95 Perzentile
     */
    public static String getRulesCritAcgCostBandTooltip8() {
        return get(RULES_CRIT_ACG_COST_BAND_TOOLTIP_8).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_COST_BAND_TOOLTIP_9
     * SQLite key: rules_crit_acg_cost_band_tooltip_9
     * [en] 8 - 96-97 Perzentile
     * [de] 8 - 96-97 Perzentile</pre>
     * @return [en] 8 - 96-97 Perzentile, [de] 8 - 96-97 Perzentile
     */
    public static String getRulesCritAcgCostBandTooltip9() {
        return get(RULES_CRIT_ACG_COST_BAND_TOOLTIP_9).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_COST_TOOLTIP_1
     * SQLite key: rules_crit_acg_cost_tooltip_1
     * [en] Format: Fließkommazahl Beispiel(125000,00)
     * [de] Format: Fließkommazahl Beispiel(125000,00)</pre>
     * @return [en] Format: Fließkommazahl Beispiel(125000,00), [de] Format: Fließkommazahl Beispiel(125000,00)
     */
    public static String getRulesCritAcgCostTooltip1() {
        return get(RULES_CRIT_ACG_COST_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_CRI_TOOLTIP_1
     * SQLite key: rules_crit_acg_cri_tooltip_1
     * [en] Format: Fließkommazahl (Beispiel 0,639023466)
     * [de] Format: Fließkommazahl (Beispiel 0,639023466)</pre>
     * @return [en] Format: Fließkommazahl (Beispiel 0,639023466), [de] Format: Fließkommazahl (Beispiel 0,639023466)
     */
    public static String getRulesCritAcgCriTooltip1() {
        return get(RULES_CRIT_ACG_CRI_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_DEPRESSION
     * SQLite key: rules_crit_acg_depression
     * [en] acg_Depression_vorhanden
     * [de] acg_Depression_vorhanden</pre>
     * @return [en] acg_Depression_vorhanden, [de] acg_Depression_vorhanden
     */
    public static String getRulesCritAcgDepression() {
        return get(RULES_CRIT_ACG_DEPRESSION).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_DEPRESSION_DIS
     * SQLite key: rules_crit_acg_depression_dis
     * [en] ACG: Depression vorhanden
     * [de] ACG: Depression vorhanden</pre>
     * @return [en] ACG: Depression vorhanden, [de] ACG: Depression vorhanden
     */
    public static String getRulesCritAcgDepressionDis() {
        return get(RULES_CRIT_ACG_DEPRESSION_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_DIABETES
     * SQLite key: rules_crit_acg_diabetes
     * [en] acg_Diabetes_vorhanden
     * [de] acg_Diabetes_vorhanden</pre>
     * @return [en] acg_Diabetes_vorhanden, [de] acg_Diabetes_vorhanden
     */
    public static String getRulesCritAcgDiabetes() {
        return get(RULES_CRIT_ACG_DIABETES).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_DIABETES_DIS
     * SQLite key: rules_crit_acg_diabetes_dis
     * [en] ACG: Diabetes vorhanden
     * [de] ACG: Diabetes vorhanden</pre>
     * @return [en] ACG: Diabetes vorhanden, [de] ACG: Diabetes vorhanden
     */
    public static String getRulesCritAcgDiabetesDis() {
        return get(RULES_CRIT_ACG_DIABETES_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_EDC
     * SQLite key: rules_crit_acg_edc
     * [en] acg_EDC_Code
     * [de] acg_EDC_Code</pre>
     * @return [en] acg_EDC_Code, [de] acg_EDC_Code
     */
    public static String getRulesCritAcgEdc() {
        return get(RULES_CRIT_ACG_EDC).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_EDC_DIS
     * SQLite key: rules_crit_acg_edc_dis
     * [en] ACG: EDC-Code
     * [de] ACG: EDC-Code</pre>
     * @return [en] ACG: EDC-Code, [de] ACG: EDC-Code
     */
    public static String getRulesCritAcgEdcDis() {
        return get(RULES_CRIT_ACG_EDC_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_EDC_TOOLTIP
     * SQLite key: rules_crit_acg_edc_tooltip
     * [en] Zugeordnete EDC-Code (Expanded Diagnosis Cluster): EDC gruppieren verschiedene Krankheiten und Zustände ausschließlich auf der Basis von ICD-10-Codes und stellen einen klinischen Zusammenhang zum Case-Mix her. Alle ermittelten EDC-Codes für diesen Patienten. Die EDC Taxonomie identifiziert Patienten mit bestimmten Krankheiten oder Symptomen
     * [de] Zugeordnete EDC-Code (Expanded Diagnosis Cluster): EDC gruppieren verschiedene Krankheiten und Zustände ausschließlich auf der Basis von ICD-10-Codes und stellen einen klinischen Zusammenhang zum Case-Mix her. Alle ermittelten EDC-Codes für diesen Patienten. Die EDC Taxonomie identifiziert Patienten mit bestimmten Krankheiten oder Symptomen</pre>
     * @return [en] Zugeordnete EDC-Code (Expanded Diagnosis Cluster): EDC gruppieren verschiedene Krankheiten und Zustände ausschließlich auf der Basis von ICD-10-Codes und stellen einen klinischen Zusammenhang zum Case-Mix her. Alle ermittelten EDC-Codes für diesen Patienten. Die EDC Taxonomie identifiziert Patienten mit bestimmten Krankheiten oder Symptomen, [de] Zugeordnete EDC-Code (Expanded Diagnosis Cluster): EDC gruppieren verschiedene Krankheiten und Zustände ausschließlich auf der Basis von ICD-10-Codes und stellen einen klinischen Zusammenhang zum Case-Mix her. Alle ermittelten EDC-Codes für diesen Patienten. Die EDC Taxonomie identifiziert Patienten mit bestimmten Krankheiten oder Symptomen
     */
    public static String getRulesCritAcgEdcTooltip() {
        return get(RULES_CRIT_ACG_EDC_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_EDC_TOOLTIP_1
     * SQLite key: rules_crit_acg_edc_tooltip_1
     * [en] Format: Alphanumerisch (Beispiel MUS06)
     * [de] Format: Alphanumerisch (Beispiel MUS06)</pre>
     * @return [en] Format: Alphanumerisch (Beispiel MUS06), [de] Format: Alphanumerisch (Beispiel MUS06)
     */
    public static String getRulesCritAcgEdcTooltip1() {
        return get(RULES_CRIT_ACG_EDC_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_FRAILTY_FLAG
     * SQLite key: rules_crit_acg_frailty_flag
     * [en] acg_Gebrechlichkeits-Indikator
     * [de] acg_Gebrechlichkeits-Indikator</pre>
     * @return [en] acg_Gebrechlichkeits-Indikator, [de] acg_Gebrechlichkeits-Indikator
     */
    public static String getRulesCritAcgFrailtyFlag() {
        return get(RULES_CRIT_ACG_FRAILTY_FLAG).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_FRAILTY_FLAG_DIS
     * SQLite key: rules_crit_acg_frailty_flag_dis
     * [en] ACG: Gebrechlichkeits-Indikator
     * [de] ACG: Gebrechlichkeits-Indikator</pre>
     * @return [en] ACG: Gebrechlichkeits-Indikator, [de] ACG: Gebrechlichkeits-Indikator
     */
    public static String getRulesCritAcgFrailtyFlagDis() {
        return get(RULES_CRIT_ACG_FRAILTY_FLAG_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_FRAILTY_FLAG_TOOLTIP
     * SQLite key: rules_crit_acg_frailty_flag_tooltip
     * [en] Kennzeichen für jedes der 11 Cluster, die für diagnostische diskreten Bedingungen im Einklang mit Gebrechlichkeit stehen (z.B . Mangelernährung, Demenz, Inkontinenz, Schwierigkeiten beim Gehen)
     * [de] Kennzeichen für jedes der 11 Cluster, die für diagnostische diskreten Bedingungen im Einklang mit Gebrechlichkeit stehen (z.B . Mangelernährung, Demenz, Inkontinenz, Schwierigkeiten beim Gehen)</pre>
     * @return [en] Kennzeichen für jedes der 11 Cluster, die für diagnostische diskreten Bedingungen im Einklang mit Gebrechlichkeit stehen (z.B . Mangelernährung, Demenz, Inkontinenz, Schwierigkeiten beim Gehen), [de] Kennzeichen für jedes der 11 Cluster, die für diagnostische diskreten Bedingungen im Einklang mit Gebrechlichkeit stehen (z.B . Mangelernährung, Demenz, Inkontinenz, Schwierigkeiten beim Gehen)
     */
    public static String getRulesCritAcgFrailtyFlagTooltip() {
        return get(RULES_CRIT_ACG_FRAILTY_FLAG_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_FRAILTY_FLAG_TOOLTIP_1
     * SQLite key: rules_crit_acg_frailty_flag_tooltip_1
     * [en] Format: Alphanumerisch (Beispiel N)
     * [de] Format: Alphanumerisch (Beispiel N)</pre>
     * @return [en] Format: Alphanumerisch (Beispiel N), [de] Format: Alphanumerisch (Beispiel N)
     */
    public static String getRulesCritAcgFrailtyFlagTooltip1() {
        return get(RULES_CRIT_ACG_FRAILTY_FLAG_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_HEART_FC_CONDITION
     * SQLite key: rules_crit_acg_heart_fc_condition
     * [en] acg_Herzinsuffizienz_vorhanden
     * [de] acg_Herzinsuffizienz_vorhanden</pre>
     * @return [en] acg_Herzinsuffizienz_vorhanden, [de] acg_Herzinsuffizienz_vorhanden
     */
    public static String getRulesCritAcgHeartFcCondition() {
        return get(RULES_CRIT_ACG_HEART_FC_CONDITION).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_HEART_FC_CONDITION_DIS
     * SQLite key: rules_crit_acg_heart_fc_condition_dis
     * [en] ACG: Herzinsuffizienz vorhanden
     * [de] ACG: Herzinsuffizienz vorhanden</pre>
     * @return [en] ACG: Herzinsuffizienz vorhanden, [de] ACG: Herzinsuffizienz vorhanden
     */
    public static String getRulesCritAcgHeartFcConditionDis() {
        return get(RULES_CRIT_ACG_HEART_FC_CONDITION_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_HOS_DOMINANT_COUNT
     * SQLite key: rules_crit_acg_hos_dominant_count
     * [en] acg_ADGAnzahlTop
     * [de] acg_ADGAnzahlTop</pre>
     * @return [en] acg_ADGAnzahlTop, [de] acg_ADGAnzahlTop
     */
    public static String getRulesCritAcgHosDominantCount() {
        return get(RULES_CRIT_ACG_HOS_DOMINANT_COUNT).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_HOS_DOMINANT_COUNT_DIS
     * SQLite key: rules_crit_acg_hos_dominant_count_dis
     * [en] ACG: Anzahl ADGs mit hoher KRH-Wahrscheinlichkeit
     * [de] ACG: Anzahl ADGs mit hoher KRH-Wahrscheinlichkeit</pre>
     * @return [en] ACG: Anzahl ADGs mit hoher KRH-Wahrscheinlichkeit, [de] ACG: Anzahl ADGs mit hoher KRH-Wahrscheinlichkeit
     */
    public static String getRulesCritAcgHosDominantCountDis() {
        return get(RULES_CRIT_ACG_HOS_DOMINANT_COUNT_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_HOS_DOMINANT_COUNT_TOOLTIP
     * SQLite key: rules_crit_acg_hos_dominant_count_tooltip
     * [en] Anzahl ADGs mit hoher (&amp;gt;50%) Wahrscheinlichkeit einer künftigen Krankenhausaufnahme.
     * [de] Anzahl ADGs mit hoher (&amp;gt;50%) Wahrscheinlichkeit einer künftigen Krankenhausaufnahme.</pre>
     * @return [en] Anzahl ADGs mit hoher ({@literal &}gt;50%) Wahrscheinlichkeit einer künftigen Krankenhausaufnahme., [de] Anzahl ADGs mit hoher ({@literal &}gt;50%) Wahrscheinlichkeit einer künftigen Krankenhausaufnahme.
     */
    public static String getRulesCritAcgHosDominantCountTooltip() {
        return get(RULES_CRIT_ACG_HOS_DOMINANT_COUNT_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_HYPERLIPIDEMIA
     * SQLite key: rules_crit_acg_hyperlipidemia
     * [en] acg_Fettstoffwechselstörungen_vorhanden
     * [de] acg_Fettstoffwechselstörungen_vorhanden</pre>
     * @return [en] acg_Fettstoffwechselstörungen_vorhanden, [de] acg_Fettstoffwechselstörungen_vorhanden
     */
    public static String getRulesCritAcgHyperlipidemia() {
        return get(RULES_CRIT_ACG_HYPERLIPIDEMIA).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_HYPERLIPIDEMIA_DIS
     * SQLite key: rules_crit_acg_hyperlipidemia_dis
     * [en] ACG: Fettstoffwechselstörungen vorhanden
     * [de] ACG: Fettstoffwechselstörungen vorhanden</pre>
     * @return [en] ACG: Fettstoffwechselstörungen vorhanden, [de] ACG: Fettstoffwechselstörungen vorhanden
     */
    public static String getRulesCritAcgHyperlipidemiaDis() {
        return get(RULES_CRIT_ACG_HYPERLIPIDEMIA_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_HYPERTENSION
     * SQLite key: rules_crit_acg_hypertension
     * [en] acg_Bluthochdruck_vorhanden
     * [de] acg_Bluthochdruck_vorhanden</pre>
     * @return [en] acg_Bluthochdruck_vorhanden, [de] acg_Bluthochdruck_vorhanden
     */
    public static String getRulesCritAcgHypertension() {
        return get(RULES_CRIT_ACG_HYPERTENSION).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_HYPERTENSION_DIS
     * SQLite key: rules_crit_acg_hypertension_dis
     * [en] ACG: Bluthochdruck vorhanden
     * [de] ACG: Bluthochdruck vorhanden</pre>
     * @return [en] ACG: Bluthochdruck vorhanden, [de] ACG: Bluthochdruck vorhanden
     */
    public static String getRulesCritAcgHypertensionDis() {
        return get(RULES_CRIT_ACG_HYPERTENSION_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_ISCHEMIC_HEART_DC
     * SQLite key: rules_crit_acg_ischemic_heart_dc
     * [en] acg_koronare_Herzkrankheit_vorhanden
     * [de] acg_koronare_Herzkrankheit_vorhanden</pre>
     * @return [en] acg_koronare_Herzkrankheit_vorhanden, [de] acg_koronare_Herzkrankheit_vorhanden
     */
    public static String getRulesCritAcgIschemicHeartDc() {
        return get(RULES_CRIT_ACG_ISCHEMIC_HEART_DC).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_ISCHEMIC_HEART_DC_DIS
     * SQLite key: rules_crit_acg_ischemic_heart_dc_dis
     * [en] ACG: Koronare Herzkrankheit vorhanden
     * [de] ACG: Koronare Herzkrankheit vorhanden</pre>
     * @return [en] ACG: Koronare Herzkrankheit vorhanden, [de] ACG: Koronare Herzkrankheit vorhanden
     */
    public static String getRulesCritAcgIschemicHeartDcDis() {
        return get(RULES_CRIT_ACG_ISCHEMIC_HEART_DC_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_LOW_BACK_PAIN
     * SQLite key: rules_crit_acg_low_back_pain
     * [en] acg_Rückenbeschwerden_vorhanden
     * [de] acg_Rückenbeschwerden_vorhanden</pre>
     * @return [en] acg_Rückenbeschwerden_vorhanden, [de] acg_Rückenbeschwerden_vorhanden
     */
    public static String getRulesCritAcgLowBackPain() {
        return get(RULES_CRIT_ACG_LOW_BACK_PAIN).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_LOW_BACK_PAIN_DIS
     * SQLite key: rules_crit_acg_low_back_pain_dis
     * [en] ACG: Rückenbeschwerden vorhanden
     * [de] ACG: Rückenbeschwerden vorhanden</pre>
     * @return [en] ACG: Rückenbeschwerden vorhanden, [de] ACG: Rückenbeschwerden vorhanden
     */
    public static String getRulesCritAcgLowBackPainDis() {
        return get(RULES_CRIT_ACG_LOW_BACK_PAIN_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_MAJOR_ADG_COUNT
     * SQLite key: rules_crit_acg_major_adg_count
     * [en] acg_HauptADGsAnzahl
     * [de] acg_HauptADGsAnzahl</pre>
     * @return [en] acg_HauptADGsAnzahl, [de] acg_HauptADGsAnzahl
     */
    public static String getRulesCritAcgMajorAdgCount() {
        return get(RULES_CRIT_ACG_MAJOR_ADG_COUNT).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_MAJOR_ADG_COUNT_DIS
     * SQLite key: rules_crit_acg_major_adg_count_dis
     * [en] ACG: Anzahl Haupt ADGs
     * [de] ACG: Anzahl Haupt ADGs</pre>
     * @return [en] ACG: Anzahl Haupt ADGs, [de] ACG: Anzahl Haupt ADGs
     */
    public static String getRulesCritAcgMajorAdgCountDis() {
        return get(RULES_CRIT_ACG_MAJOR_ADG_COUNT_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_MAJOR_ADG_COUNT_TOOLTIP
     * SQLite key: rules_crit_acg_major_adg_count_tooltip
     * [en] Anzahl der Haupt-ADGs,  welche diesem Patienten zugeordnet sind. Ein Haupt-ADG ist ein ADG  mit erheblichen Auswirkungen auf den gleichzeitigen oder zukünftigen Ressourcenverbrauch. Es gibt separate Haupt-ADGs für Kinder und Erwachsene
     * [de] Anzahl der Haupt-ADGs,  welche diesem Patienten zugeordnet sind. Ein Haupt-ADG ist ein ADG  mit erheblichen Auswirkungen auf den gleichzeitigen oder zukünftigen Ressourcenverbrauch. Es gibt separate Haupt-ADGs für Kinder und Erwachsene</pre>
     * @return [en] Anzahl der Haupt-ADGs,  welche diesem Patienten zugeordnet sind. Ein Haupt-ADG ist ein ADG  mit erheblichen Auswirkungen auf den gleichzeitigen oder zukünftigen Ressourcenverbrauch. Es gibt separate Haupt-ADGs für Kinder und Erwachsene, [de] Anzahl der Haupt-ADGs,  welche diesem Patienten zugeordnet sind. Ein Haupt-ADG ist ein ADG  mit erheblichen Auswirkungen auf den gleichzeitigen oder zukünftigen Ressourcenverbrauch. Es gibt separate Haupt-ADGs für Kinder und Erwachsene
     */
    public static String getRulesCritAcgMajorAdgCountTooltip() {
        return get(RULES_CRIT_ACG_MAJOR_ADG_COUNT_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_MAJOR_RXMG
     * SQLite key: rules_crit_acg_major_rxmg
     * [en] acg_HRxMG_Codes
     * [de] acg_HRxMG_Codes</pre>
     * @return [en] acg_HRxMG_Codes, [de] acg_HRxMG_Codes
     */
    public static String getRulesCritAcgMajorRxmg() {
        return get(RULES_CRIT_ACG_MAJOR_RXMG).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_MAJOR_RXMG_DIS_1
     * SQLite key: rules_crit_acg_major_rxmg_dis_1
     * [en] ACG: MEDCs auf Basis der Medikamente
     * [de] ACG: MEDCs auf Basis der Medikamente</pre>
     * @return [en] ACG: MEDCs auf Basis der Medikamente, [de] ACG: MEDCs auf Basis der Medikamente
     */
    public static String getRulesCritAcgMajorRxmgDis1() {
        return get(RULES_CRIT_ACG_MAJOR_RXMG_DIS_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_MAJOR_RXMG_TOOLTIP
     * SQLite key: rules_crit_acg_major_rxmg_tooltip
     * [en] Hauptgruppen Morbiditäts Codes, Medikamten-Basis: Basis-Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten.
     * [de] Hauptgruppen Morbiditäts Codes, Medikamten-Basis: Basis-Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten.</pre>
     * @return [en] Hauptgruppen Morbiditäts Codes, Medikamten-Basis: Basis-Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten., [de] Hauptgruppen Morbiditäts Codes, Medikamten-Basis: Basis-Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten.
     */
    public static String getRulesCritAcgMajorRxmgTooltip() {
        return get(RULES_CRIT_ACG_MAJOR_RXMG_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_MAJOR_RXMG_TOOLTIP_1
     * SQLite key: rules_crit_acg_major_rxmg_tooltip_1
     * [en] Format: Alphanumerisch (Beispiel 12)
     * [de] Format: Alphanumerisch (Beispiel 12)</pre>
     * @return [en] Format: Alphanumerisch (Beispiel 12), [de] Format: Alphanumerisch (Beispiel 12)
     */
    public static String getRulesCritAcgMajorRxmgTooltip1() {
        return get(RULES_CRIT_ACG_MAJOR_RXMG_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_MEDC
     * SQLite key: rules_crit_acg_medc
     * [en] acg_MEDC_Code
     * [de] acg_MEDC_Code</pre>
     * @return [en] acg_MEDC_Code, [de] acg_MEDC_Code
     */
    public static String getRulesCritAcgMedc() {
        return get(RULES_CRIT_ACG_MEDC).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_MEDC_DIS
     * SQLite key: rules_crit_acg_medc_dis
     * [en] ACG: MEDC-Code
     * [de] ACG: MEDC-Code</pre>
     * @return [en] ACG: MEDC-Code, [de] ACG: MEDC-Code
     */
    public static String getRulesCritAcgMedcDis() {
        return get(RULES_CRIT_ACG_MEDC_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_MEDC_TOOLTIP
     * SQLite key: rules_crit_acg_medc_tooltip
     * [en] Haupt-Diagnosen-Cluster erweitert. Alle der MEDC-Codes für diesen Patienten. Die EDC Taxonomie gliedert sich in breite klinische Kategorien, genannt MEDCs.
     * [de] Haupt-Diagnosen-Cluster erweitert. Alle der MEDC-Codes für diesen Patienten. Die EDC Taxonomie gliedert sich in breite klinische Kategorien, genannt MEDCs.</pre>
     * @return [en] Haupt-Diagnosen-Cluster erweitert. Alle der MEDC-Codes für diesen Patienten. Die EDC Taxonomie gliedert sich in breite klinische Kategorien, genannt MEDCs., [de] Haupt-Diagnosen-Cluster erweitert. Alle der MEDC-Codes für diesen Patienten. Die EDC Taxonomie gliedert sich in breite klinische Kategorien, genannt MEDCs.
     */
    public static String getRulesCritAcgMedcTooltip() {
        return get(RULES_CRIT_ACG_MEDC_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_MEDC_TOOLTIP_1
     * SQLite key: rules_crit_acg_medc_tooltip_1
     * [en] Format: Alphanumerisch (Beispiel MUS)
     * [de] Format: Alphanumerisch (Beispiel MUS)</pre>
     * @return [en] Format: Alphanumerisch (Beispiel MUS), [de] Format: Alphanumerisch (Beispiel MUS)
     */
    public static String getRulesCritAcgMedcTooltip1() {
        return get(RULES_CRIT_ACG_MEDC_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_OB_PUL_DISEASE_CONDITION
     * SQLite key: rules_crit_acg_ob_pul_disease_condition
     * [en] acg_chronische_obstruktive_Lungenerkrankung_vorhanden
     * [de] acg_chronische_obstruktive_Lungenerkrankung_vorhanden</pre>
     * @return [en] acg_chronische_obstruktive_Lungenerkrankung_vorhanden, [de] acg_chronische_obstruktive_Lungenerkrankung_vorhanden
     */
    public static String getRulesCritAcgObPulDiseaseCondition() {
        return get(RULES_CRIT_ACG_OB_PUL_DISEASE_CONDITION).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_OB_PUL_DISEASE_CONDITION_DIS
     * SQLite key: rules_crit_acg_ob_pul_disease_condition_dis
     * [en] ACG: chronische obstruktive Lungenerkrankung vorhanden
     * [de] ACG: chronische obstruktive Lungenerkrankung vorhanden</pre>
     * @return [en] ACG: chronische obstruktive Lungenerkrankung vorhanden, [de] ACG: chronische obstruktive Lungenerkrankung vorhanden
     */
    public static String getRulesCritAcgObPulDiseaseConditionDis() {
        return get(RULES_CRIT_ACG_OB_PUL_DISEASE_CONDITION_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PHARMA_COST
     * SQLite key: rules_crit_acg_pharma_cost
     * [en] acg_Medi_Kosten
     * [de] acg_Medi_Kosten</pre>
     * @return [en] acg_Medi_Kosten, [de] acg_Medi_Kosten
     */
    public static String getRulesCritAcgPharmaCost() {
        return get(RULES_CRIT_ACG_PHARMA_COST).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PHARMA_COST_BAND
     * SQLite key: rules_crit_acg_pharma_cost_band
     * [en] acg_Medi_KostGruppe
     * [de] acg_Medi_KostGruppe</pre>
     * @return [en] acg_Medi_KostGruppe, [de] acg_Medi_KostGruppe
     */
    public static String getRulesCritAcgPharmaCostBand() {
        return get(RULES_CRIT_ACG_PHARMA_COST_BAND).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PHARMA_COST_BAND_DIS
     * SQLite key: rules_crit_acg_pharma_cost_band_dis
     * [en] ACG: Med Kosten Gruppe
     * [de] ACG: Med Kosten Gruppe</pre>
     * @return [en] ACG: Med Kosten Gruppe, [de] ACG: Med Kosten Gruppe
     */
    public static String getRulesCritAcgPharmaCostBandDis() {
        return get(RULES_CRIT_ACG_PHARMA_COST_BAND_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PHARMA_COST_BAND_TOOLTIP_1_1
     * SQLite key: rules_crit_acg_pharma_cost_band_tooltip_1_1
     * [en] 0 - 0 Medikamentenkosten
     * [de] 0 - 0 Medikamentenkosten</pre>
     * @return [en] 0 - 0 Medikamentenkosten, [de] 0 - 0 Medikamentenkosten
     */
    public static String getRulesCritAcgPharmaCostBandTooltip11() {
        return get(RULES_CRIT_ACG_PHARMA_COST_BAND_TOOLTIP_1_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PHARMA_COST_DIS
     * SQLite key: rules_crit_acg_pharma_cost_dis
     * [en] ACG: Kosten für Medikamente
     * [de] ACG: Kosten für Medikamente</pre>
     * @return [en] ACG: Kosten für Medikamente, [de] ACG: Kosten für Medikamente
     */
    public static String getRulesCritAcgPharmaCostDis() {
        return get(RULES_CRIT_ACG_PHARMA_COST_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PHARMA_COST_TOOLTIP
     * SQLite key: rules_crit_acg_pharma_cost_tooltip
     * [en] Gesamte Medikamentenkosten während des Zeitraums
     * [de] Gesamte Medikamentenkosten während des Zeitraums</pre>
     * @return [en] Gesamte Medikamentenkosten während des Zeitraums, [de] Gesamte Medikamentenkosten während des Zeitraums
     */
    public static String getRulesCritAcgPharmaCostTooltip() {
        return get(RULES_CRIT_ACG_PHARMA_COST_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PREGNANT
     * SQLite key: rules_crit_acg_pregnant
     * [en] acg_schwangerschaft
     * [de] acg_schwangerschaft</pre>
     * @return [en] acg_schwangerschaft, [de] acg_schwangerschaft
     */
    public static String getRulesCritAcgPregnant() {
        return get(RULES_CRIT_ACG_PREGNANT).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PREGNANT_DIS
     * SQLite key: rules_crit_acg_pregnant_dis
     * [en] ACG: Schwangerschaft
     * [de] ACG: Schwangerschaft</pre>
     * @return [en] ACG: Schwangerschaft, [de] ACG: Schwangerschaft
     */
    public static String getRulesCritAcgPregnantDis() {
        return get(RULES_CRIT_ACG_PREGNANT_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PREGNANT_TOOLTIP_3
     * SQLite key: rules_crit_acg_pregnant_tooltip_3
     * [en] 1 - Patientin war schwanger während Beobachtungszeitraum
     * [de] 1 - Patientin war schwanger während Beobachtungszeitraum</pre>
     * @return [en] 1 - Patientin war schwanger während Beobachtungszeitraum, [de] 1 - Patientin war schwanger während Beobachtungszeitraum
     */
    public static String getRulesCritAcgPregnantTooltip3() {
        return get(RULES_CRIT_ACG_PREGNANT_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PREGNANTTOOLTIP_2
     * SQLite key: rules_crit_acg_pregnanttooltip_2
     * [en] 0 - Patientin war nicht schwanger während Beobachtungszeitraum
     * [de] 0 - Patientin war nicht schwanger während Beobachtungszeitraum</pre>
     * @return [en] 0 - Patientin war nicht schwanger während Beobachtungszeitraum, [de] 0 - Patientin war nicht schwanger während Beobachtungszeitraum
     */
    public static String getRulesCritAcgPregnanttooltip2() {
        return get(RULES_CRIT_ACG_PREGNANTTOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PROBABILITY_HIGH_PC
     * SQLite key: rules_crit_acg_probability_high_pc
     * [en] acg_MediTop
     * [de] acg_MediTop</pre>
     * @return [en] acg_MediTop, [de] acg_MediTop
     */
    public static String getRulesCritAcgProbabilityHighPc() {
        return get(RULES_CRIT_ACG_PROBABILITY_HIGH_PC).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PROBABILITY_HIGH_PC_DIS
     * SQLite key: rules_crit_acg_probability_high_pc_dis
     * [en] ACG: Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten
     * [de] ACG: Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten</pre>
     * @return [en] ACG: Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten, [de] ACG: Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten
     */
    public static String getRulesCritAcgProbabilityHighPcDis() {
        return get(RULES_CRIT_ACG_PROBABILITY_HIGH_PC_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PROBABILITY_HIGH_PC_TOOLTIP
     * SQLite key: rules_crit_acg_probability_high_pc_tooltip
     * [en] Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Apothekenkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Arzneimittelkosten  verursacht, im Jahr, welches der Beorbachtungsperiode folgt
     * [de] Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Apothekenkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Arzneimittelkosten  verursacht, im Jahr, welches der Beorbachtungsperiode folgt</pre>
     * @return [en] Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Apothekenkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Arzneimittelkosten  verursacht, im Jahr, welches der Beorbachtungsperiode folgt, [de] Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Apothekenkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Arzneimittelkosten  verursacht, im Jahr, welches der Beorbachtungsperiode folgt
     */
    public static String getRulesCritAcgProbabilityHighPcTooltip() {
        return get(RULES_CRIT_ACG_PROBABILITY_HIGH_PC_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PROBABILITY_HIGH_PC_TOOLTIP_1
     * SQLite key: rules_crit_acg_probability_high_pc_tooltip_1
     * [en] Format: Fließkommazahl (Beispiel 0,01)
     * [de] Format: Fließkommazahl (Beispiel 0,01)</pre>
     * @return [en] Format: Fließkommazahl (Beispiel 0,01), [de] Format: Fließkommazahl (Beispiel 0,01)
     */
    public static String getRulesCritAcgProbabilityHighPcTooltip1() {
        return get(RULES_CRIT_ACG_PROBABILITY_HIGH_PC_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PROBABILITY_HIGH_TC
     * SQLite key: rules_crit_acg_probability_high_tc
     * [en] acg_GesamtTop5
     * [de] acg_GesamtTop5</pre>
     * @return [en] acg_GesamtTop5, [de] acg_GesamtTop5
     */
    public static String getRulesCritAcgProbabilityHighTc() {
        return get(RULES_CRIT_ACG_PROBABILITY_HIGH_TC).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PROBABILITY_HIGH_TC_DIS
     * SQLite key: rules_crit_acg_probability_high_tc_dis
     * [en] ACG: Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten
     * [de] ACG: Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten</pre>
     * @return [en] ACG: Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten, [de] ACG: Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten
     */
    public static String getRulesCritAcgProbabilityHighTcDis() {
        return get(RULES_CRIT_ACG_PROBABILITY_HIGH_TC_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_PROBABILITY_HIGH_TC_TOOLTIP
     * SQLite key: rules_crit_acg_probability_high_tc_tooltip
     * [en] Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Gesamtkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Gesamtkosten (einschließlich Apothekenkosten) verursacht, im Jahr, welches der Beobachtungsperiode folgt
     * [de] Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Gesamtkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Gesamtkosten (einschließlich Apothekenkosten) verursacht, im Jahr, welches der Beobachtungsperiode folgt</pre>
     * @return [en] Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Gesamtkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Gesamtkosten (einschließlich Apothekenkosten) verursacht, im Jahr, welches der Beobachtungsperiode folgt, [de] Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Gesamtkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Gesamtkosten (einschließlich Apothekenkosten) verursacht, im Jahr, welches der Beobachtungsperiode folgt
     */
    public static String getRulesCritAcgProbabilityHighTcTooltip() {
        return get(RULES_CRIT_ACG_PROBABILITY_HIGH_TC_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RENAL_FC
     * SQLite key: rules_crit_acg_renal_fc
     * [en] acg_Niereninsuffizienz_vorhanden
     * [de] acg_Niereninsuffizienz_vorhanden</pre>
     * @return [en] acg_Niereninsuffizienz_vorhanden, [de] acg_Niereninsuffizienz_vorhanden
     */
    public static String getRulesCritAcgRenalFc() {
        return get(RULES_CRIT_ACG_RENAL_FC).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RENAL_FC_DIS
     * SQLite key: rules_crit_acg_renal_fc_dis
     * [en] ACG: Niereninsuffizienz vorhanden
     * [de] ACG: Niereninsuffizienz vorhanden</pre>
     * @return [en] ACG: Niereninsuffizienz vorhanden, [de] ACG: Niereninsuffizienz vorhanden
     */
    public static String getRulesCritAcgRenalFcDis() {
        return get(RULES_CRIT_ACG_RENAL_FC_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RESCALED_PHARMA_CRI
     * SQLite key: rules_crit_acg_rescaled_pharma_cri
     * [en] acg_MediKostenIndexGewichtet
     * [de] acg_MediKostenIndexGewichtet</pre>
     * @return [en] acg_MediKostenIndexGewichtet, [de] acg_MediKostenIndexGewichtet
     */
    public static String getRulesCritAcgRescaledPharmaCri() {
        return get(RULES_CRIT_ACG_RESCALED_PHARMA_CRI).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RESCALED_PHARMA_CRI_DIS
     * SQLite key: rules_crit_acg_rescaled_pharma_cri_dis
     * [en] ACG: Index Medikamentenkosten, gewichtet
     * [de] ACG: Index Medikamentenkosten, gewichtet</pre>
     * @return [en] ACG: Index Medikamentenkosten, gewichtet, [de] ACG: Index Medikamentenkosten, gewichtet
     */
    public static String getRulesCritAcgRescaledPharmaCriDis() {
        return get(RULES_CRIT_ACG_RESCALED_PHARMA_CRI_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RESCALED_PHARMA_CRI_TOOLTIP
     * SQLite key: rules_crit_acg_rescaled_pharma_cri_tooltip
     * [en] Kostenindex für zukünftige Medikamentenkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1,0
     * [de] Kostenindex für zukünftige Medikamentenkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1,0</pre>
     * @return [en] Kostenindex für zukünftige Medikamentenkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1,0, [de] Kostenindex für zukünftige Medikamentenkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1,0
     */
    public static String getRulesCritAcgRescaledPharmaCriTooltip() {
        return get(RULES_CRIT_ACG_RESCALED_PHARMA_CRI_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RESCALED_TOTAL_CRI
     * SQLite key: rules_crit_acg_rescaled_total_cri
     * [en] acg_GesamtkostenIndexGewichtet
     * [de] acg_GesamtkostenIndexGewichtet</pre>
     * @return [en] acg_GesamtkostenIndexGewichtet, [de] acg_GesamtkostenIndexGewichtet
     */
    public static String getRulesCritAcgRescaledTotalCri() {
        return get(RULES_CRIT_ACG_RESCALED_TOTAL_CRI).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RESCALED_TOTAL_CRI_DIS
     * SQLite key: rules_crit_acg_rescaled_total_cri_dis
     * [en] ACG: Index aller Kosten, gewichtet
     * [de] ACG: Index aller Kosten, gewichtet</pre>
     * @return [en] ACG: Index aller Kosten, gewichtet, [de] ACG: Index aller Kosten, gewichtet
     */
    public static String getRulesCritAcgRescaledTotalCriDis() {
        return get(RULES_CRIT_ACG_RESCALED_TOTAL_CRI_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RESCALED_TOTAL_CRI_TOOLTIP
     * SQLite key: rules_crit_acg_rescaled_total_cri_tooltip
     * [en] Kostenindex für zukünftige Gesamkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1, Untergruppeanalysen stellen Vergleiche zu den lokalen Normen zur Verfügung
     * [de] Kostenindex für zukünftige Gesamkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1, Untergruppeanalysen stellen Vergleiche zu den lokalen Normen zur Verfügung</pre>
     * @return [en] Kostenindex für zukünftige Gesamkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1, Untergruppeanalysen stellen Vergleiche zu den lokalen Normen zur Verfügung, [de] Kostenindex für zukünftige Gesamkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1, Untergruppeanalysen stellen Vergleiche zu den lokalen Normen zur Verfügung
     */
    public static String getRulesCritAcgRescaledTotalCriTooltip() {
        return get(RULES_CRIT_ACG_RESCALED_TOTAL_CRI_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RUB
     * SQLite key: rules_crit_acg_rub
     * [en] acg_RUB
     * [de] acg_RUB</pre>
     * @return [en] acg_RUB, [de] acg_RUB
     */
    public static String getRulesCritAcgRub() {
        return get(RULES_CRIT_ACG_RUB).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RUB_DIS
     * SQLite key: rules_crit_acg_rub_dis
     * [en] ACG: RUB
     * [de] ACG: RUB</pre>
     * @return [en] ACG: RUB, [de] ACG: RUB
     */
    public static String getRulesCritAcgRubDis() {
        return get(RULES_CRIT_ACG_RUB_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RUB_TOOLTIP_1
     * SQLite key: rules_crit_acg_rub_tooltip_1
     * [en] 0 - Keine oder nur ungültige Dx
     * [de] 0 - Keine oder nur ungültige Dx</pre>
     * @return [en] 0 - Keine oder nur ungültige Dx, [de] 0 - Keine oder nur ungültige Dx
     */
    public static String getRulesCritAcgRubTooltip1() {
        return get(RULES_CRIT_ACG_RUB_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RUB_TOOLTIP_2
     * SQLite key: rules_crit_acg_rub_tooltip_2
     * [en] 1 - Gesund, kein Verbrauch
     * [de] 1 - Gesund, kein Verbrauch</pre>
     * @return [en] 1 - Gesund, kein Verbrauch, [de] 1 - Gesund, kein Verbrauch
     */
    public static String getRulesCritAcgRubTooltip2() {
        return get(RULES_CRIT_ACG_RUB_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RUB_TOOLTIP_3
     * SQLite key: rules_crit_acg_rub_tooltip_3
     * [en] 2 - Geringer Verbrauch
     * [de] 2 - Geringer Verbrauch</pre>
     * @return [en] 2 - Geringer Verbrauch, [de] 2 - Geringer Verbrauch
     */
    public static String getRulesCritAcgRubTooltip3() {
        return get(RULES_CRIT_ACG_RUB_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RUB_TOOLTIP_4
     * SQLite key: rules_crit_acg_rub_tooltip_4
     * [en] 3 - Mittlerer Verbrauch
     * [de] 3 - Mittlerer Verbrauch</pre>
     * @return [en] 3 - Mittlerer Verbrauch, [de] 3 - Mittlerer Verbrauch
     */
    public static String getRulesCritAcgRubTooltip4() {
        return get(RULES_CRIT_ACG_RUB_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RUB_TOOLTIP_5
     * SQLite key: rules_crit_acg_rub_tooltip_5
     * [en] 4 - Erhöhter Verbrauch
     * [de] 4 - Erhöhter Verbrauch</pre>
     * @return [en] 4 - Erhöhter Verbrauch, [de] 4 - Erhöhter Verbrauch
     */
    public static String getRulesCritAcgRubTooltip5() {
        return get(RULES_CRIT_ACG_RUB_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RUB_TOOLTIP_6
     * SQLite key: rules_crit_acg_rub_tooltip_6
     * [en] 5 - Sehr hoher Verbrauch
     * [de] 5 - Sehr hoher Verbrauch</pre>
     * @return [en] 5 - Sehr hoher Verbrauch, [de] 5 - Sehr hoher Verbrauch
     */
    public static String getRulesCritAcgRubTooltip6() {
        return get(RULES_CRIT_ACG_RUB_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RXMG
     * SQLite key: rules_crit_acg_rxmg
     * [en] acg_RxMG_Code
     * [de] acg_RxMG_Code</pre>
     * @return [en] acg_RxMG_Code, [de] acg_RxMG_Code
     */
    public static String getRulesCritAcgRxmg() {
        return get(RULES_CRIT_ACG_RXMG).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RXMG_DIS_1
     * SQLite key: rules_crit_acg_rxmg_dis_1
     * [en] ACG: EDCs auf Basis der Medikamente
     * [de] ACG: EDCs auf Basis der Medikamente</pre>
     * @return [en] ACG: EDCs auf Basis der Medikamente, [de] ACG: EDCs auf Basis der Medikamente
     */
    public static String getRulesCritAcgRxmgDis1() {
        return get(RULES_CRIT_ACG_RXMG_DIS_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_RXMG_TOOLTIP
     * SQLite key: rules_crit_acg_rxmg_tooltip
     * [en] Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten
     * [de] Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten</pre>
     * @return [en] Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten, [de] Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten
     */
    public static String getRulesCritAcgRxmgTooltip() {
        return get(RULES_CRIT_ACG_RXMG_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_SEX
     * SQLite key: rules_crit_acg_sex
     * [en] acg_geschlecht
     * [de] acg_geschlecht</pre>
     * @return [en] acg_geschlecht, [de] acg_geschlecht
     */
    public static String getRulesCritAcgSex() {
        return get(RULES_CRIT_ACG_SEX).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_SEX_DIS
     * SQLite key: rules_crit_acg_sex_dis
     * [en] ACG: Geschlecht
     * [de] ACG: Geschlecht</pre>
     * @return [en] ACG: Geschlecht, [de] ACG: Geschlecht
     */
    public static String getRulesCritAcgSexDis() {
        return get(RULES_CRIT_ACG_SEX_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_SEX_TOOLTIP_1
     * SQLite key: rules_crit_acg_sex_tooltip_1
     * [en] Format: ganze Zahl (Beispiel 1)
     * [de] Format: ganze Zahl (Beispiel 1)</pre>
     * @return [en] Format: ganze Zahl (Beispiel 1), [de] Format: ganze Zahl (Beispiel 1)
     */
    public static String getRulesCritAcgSexTooltip1() {
        return get(RULES_CRIT_ACG_SEX_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_TOTAL_COST
     * SQLite key: rules_crit_acg_total_cost
     * [en] acg_Gesamtkosten
     * [de] acg_Gesamtkosten</pre>
     * @return [en] acg_Gesamtkosten, [de] acg_Gesamtkosten
     */
    public static String getRulesCritAcgTotalCost() {
        return get(RULES_CRIT_ACG_TOTAL_COST).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_TOTAL_COST_BAND
     * SQLite key: rules_crit_acg_total_cost_band
     * [en] acg_Gesamt_KostGruppe
     * [de] acg_Gesamt_KostGruppe</pre>
     * @return [en] acg_Gesamt_KostGruppe, [de] acg_Gesamt_KostGruppe
     */
    public static String getRulesCritAcgTotalCostBand() {
        return get(RULES_CRIT_ACG_TOTAL_COST_BAND).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_TOTAL_COST_BAND_DIS
     * SQLite key: rules_crit_acg_total_cost_band_dis
     * [en] ACG: Gesamt Kosten Gruppe
     * [de] ACG: Gesamt Kosten Gruppe</pre>
     * @return [en] ACG: Gesamt Kosten Gruppe, [de] ACG: Gesamt Kosten Gruppe
     */
    public static String getRulesCritAcgTotalCostBandDis() {
        return get(RULES_CRIT_ACG_TOTAL_COST_BAND_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_TOTAL_COST_BAND_TOOLTIP_1_1
     * SQLite key: rules_crit_acg_total_cost_band_tooltip_1_1
     * [en] 0 - 0 Gesamtkosten
     * [de] 0 - 0 Gesamtkosten</pre>
     * @return [en] 0 - 0 Gesamtkosten, [de] 0 - 0 Gesamtkosten
     */
    public static String getRulesCritAcgTotalCostBandTooltip11() {
        return get(RULES_CRIT_ACG_TOTAL_COST_BAND_TOOLTIP_1_1).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_TOTAL_COST_DIS
     * SQLite key: rules_crit_acg_total_cost_dis
     * [en] ACG: Gesamtkosten
     * [de] ACG: Gesamtkosten</pre>
     * @return [en] ACG: Gesamtkosten, [de] ACG: Gesamtkosten
     */
    public static String getRulesCritAcgTotalCostDis() {
        return get(RULES_CRIT_ACG_TOTAL_COST_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_TOTAL_COST_TOOLTIP
     * SQLite key: rules_crit_acg_total_cost_tooltip
     * [en] Gesamtkosten incl. Medikamentenkosten
     * [de] Gesamtkosten incl. Medikamentenkosten</pre>
     * @return [en] Gesamtkosten incl. Medikamentenkosten, [de] Gesamtkosten incl. Medikamentenkosten
     */
    public static String getRulesCritAcgTotalCostTooltip() {
        return get(RULES_CRIT_ACG_TOTAL_COST_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_UNSCALED_PHARMA_CRI
     * SQLite key: rules_crit_acg_unscaled_pharma_cri
     * [en] acg_MediKostenIndexUngewichtet
     * [de] acg_MediKostenIndexUngewichtet</pre>
     * @return [en] acg_MediKostenIndexUngewichtet, [de] acg_MediKostenIndexUngewichtet
     */
    public static String getRulesCritAcgUnscaledPharmaCri() {
        return get(RULES_CRIT_ACG_UNSCALED_PHARMA_CRI).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_UNSCALED_PHARMA_CRI_DIS
     * SQLite key: rules_crit_acg_unscaled_pharma_cri_dis
     * [en] ACG: Index Medikamentenkosten, ungewichtet
     * [de] ACG: Index Medikamentenkosten, ungewichtet</pre>
     * @return [en] ACG: Index Medikamentenkosten, ungewichtet, [de] ACG: Index Medikamentenkosten, ungewichtet
     */
    public static String getRulesCritAcgUnscaledPharmaCriDis() {
        return get(RULES_CRIT_ACG_UNSCALED_PHARMA_CRI_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_UNSCALED_PHARMA_CRI_TOOLTIP
     * SQLite key: rules_crit_acg_unscaled_pharma_cri_tooltip
     * [en] Kostenindex für zukünftige Medikamentenkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG vorbestimmtes Modell PRI für ApothekeN-Kosten. Die geschätzten Arzneimittelkosten für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0), wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalysen stellen Vergleiche zu den nationalen Normen zur Verfügung).
     * [de] Kostenindex für zukünftige Medikamentenkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG vorbestimmtes Modell PRI für ApothekeN-Kosten. Die geschätzten Arzneimittelkosten für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0), wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalysen stellen Vergleiche zu den nationalen Normen zur Verfügung).</pre>
     * @return [en] Kostenindex für zukünftige Medikamentenkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG vorbestimmtes Modell PRI für ApothekeN-Kosten. Die geschätzten Arzneimittelkosten für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0), wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalysen stellen Vergleiche zu den nationalen Normen zur Verfügung)., [de] Kostenindex für zukünftige Medikamentenkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG vorbestimmtes Modell PRI für ApothekeN-Kosten. Die geschätzten Arzneimittelkosten für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0), wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalysen stellen Vergleiche zu den nationalen Normen zur Verfügung).
     */
    public static String getRulesCritAcgUnscaledPharmaCriTooltip() {
        return get(RULES_CRIT_ACG_UNSCALED_PHARMA_CRI_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_UNSCALED_TOTAL_CRI
     * SQLite key: rules_crit_acg_unscaled_total_cri
     * [en] acg_GesamtkostenIndexUngewichtet
     * [de] acg_GesamtkostenIndexUngewichtet</pre>
     * @return [en] acg_GesamtkostenIndexUngewichtet, [de] acg_GesamtkostenIndexUngewichtet
     */
    public static String getRulesCritAcgUnscaledTotalCri() {
        return get(RULES_CRIT_ACG_UNSCALED_TOTAL_CRI).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_UNSCALED_TOTAL_CRI_DIS
     * SQLite key: rules_crit_acg_unscaled_total_cri_dis
     * [en] ACG: Index aller Kosten, ungewichtet
     * [de] ACG: Index aller Kosten, ungewichtet</pre>
     * @return [en] ACG: Index aller Kosten, ungewichtet, [de] ACG: Index aller Kosten, ungewichtet
     */
    public static String getRulesCritAcgUnscaledTotalCriDis() {
        return get(RULES_CRIT_ACG_UNSCALED_TOTAL_CRI_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_ACG_UNSCALED_TOTAL_CRI_TOOLTIP
     * SQLite key: rules_crit_acg_unscaled_total_cri_tooltip
     * [en] Kostenindex für zukünftige Gesamkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG P.M. Index (PRI) für ACG P.M. für Voraussage Gesamtkosten. Die geschätzten Gesamtkosten (einschließlich Apothekenkosten) für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0) wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalyse stellen Vergleiche zu den nationalen Normen zur Verfügung.
     * [de] Kostenindex für zukünftige Gesamkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG P.M. Index (PRI) für ACG P.M. für Voraussage Gesamtkosten. Die geschätzten Gesamtkosten (einschließlich Apothekenkosten) für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0) wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalyse stellen Vergleiche zu den nationalen Normen zur Verfügung.</pre>
     * @return [en] Kostenindex für zukünftige Gesamkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG P.M. Index (PRI) für ACG P.M. für Voraussage Gesamtkosten. Die geschätzten Gesamtkosten (einschließlich Apothekenkosten) für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0) wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalyse stellen Vergleiche zu den nationalen Normen zur Verfügung., [de] Kostenindex für zukünftige Gesamkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG P.M. Index (PRI) für ACG P.M. für Voraussage Gesamtkosten. Die geschätzten Gesamtkosten (einschließlich Apothekenkosten) für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0) wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalyse stellen Vergleiche zu den nationalen Normen zur Verfügung.
     */
    public static String getRulesCritAcgUnscaledTotalCriTooltip() {
        return get(RULES_CRIT_ACG_UNSCALED_TOTAL_CRI_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_10
     * SQLite key: rules_crit_adm1_type_tooltip_10
     * [en] 08 - Stationäre Aufnahme zur Organentnahme
     * [de] 08 - Stationäre Aufnahme zur Organentnahme</pre>
     * @return [en] 08 - Stationäre Aufnahme zur Organentnahme, [de] 08 - Stationäre Aufnahme zur Organentnahme
     */
    public static String getRulesCritAdm1TypeTooltip10() {
        return get(RULES_CRIT_ADM_1_TYPE_TOOLTIP_10).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_11
     * SQLite key: rules_crit_adm1_type_tooltip_11
     * [en] 10 - Stationsäquivalente Behandlung
     * [de] 10 - Stationsäquivalente Behandlung</pre>
     * @return [en] 10 - Stationsäquivalente Behandlung, [de] 10 - Stationsäquivalente Behandlung
     */
    public static String getRulesCritAdm1TypeTooltip11() {
        return get(RULES_CRIT_ADM_1_TYPE_TOOLTIP_11).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_12
     * SQLite key: rules_crit_adm1_type_tooltip_12
     * [de] 11 - Übergangspflege</pre>
     * @return [de] 11 - Übergangspflege
     */
    public static String getRulesCritAdm1TypeTooltip12() {
        return get(RULES_CRIT_ADM_1_TYPE_TOOLTIP_12).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_3
     * SQLite key: rules_crit_adm1_type_tooltip_3
     * [en] 01 - Krankenhausbehandlung, vollstationär
     * [de] 01 - Krankenhausbehandlung, vollstationär</pre>
     * @return [en] 01 - Krankenhausbehandlung, vollstationär, [de] 01 - Krankenhausbehandlung, vollstationär
     */
    public static String getRulesCritAdm1TypeTooltip3() {
        return get(RULES_CRIT_ADM_1_TYPE_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_4
     * SQLite key: rules_crit_adm1_type_tooltip_4
     * [en] 02 - Krankenhausbehandlung, vollstationär mit voraus. vorstat. Behandlung
     * [de] 02 - Krankenhausbehandlung, vollstationär mit voraus. vorstat. Behandlung</pre>
     * @return [en] 02 - Krankenhausbehandlung, vollstationär mit voraus. vorstat. Behandlung, [de] 02 - Krankenhausbehandlung, vollstationär mit voraus. vorstat. Behandlung
     */
    public static String getRulesCritAdm1TypeTooltip4() {
        return get(RULES_CRIT_ADM_1_TYPE_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_5
     * SQLite key: rules_crit_adm1_type_tooltip_5
     * [en] 03 - Krankenhausbehandlung teilstationär
     * [de] 03 - Krankenhausbehandlung teilstationär</pre>
     * @return [en] 03 - Krankenhausbehandlung teilstationär, [de] 03 - Krankenhausbehandlung teilstationär
     */
    public static String getRulesCritAdm1TypeTooltip5() {
        return get(RULES_CRIT_ADM_1_TYPE_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_6
     * SQLite key: rules_crit_adm1_type_tooltip_6
     * [en] 04 - Krankenhausbehandlung ohne anschl. stationäre Behandlung
     * [de] 04 - Krankenhausbehandlung ohne anschl. stationäre Behandlung</pre>
     * @return [en] 04 - Krankenhausbehandlung ohne anschl. stationäre Behandlung, [de] 04 - Krankenhausbehandlung ohne anschl. stationäre Behandlung
     */
    public static String getRulesCritAdm1TypeTooltip6() {
        return get(RULES_CRIT_ADM_1_TYPE_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_7
     * SQLite key: rules_crit_adm1_type_tooltip_7
     * [en] 05 - stationäre Entbindung
     * [de] 05 - stationäre Entbindung</pre>
     * @return [en] 05 - stationäre Entbindung, [de] 05 - stationäre Entbindung
     */
    public static String getRulesCritAdm1TypeTooltip7() {
        return get(RULES_CRIT_ADM_1_TYPE_TOOLTIP_7).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_8
     * SQLite key: rules_crit_adm1_type_tooltip_8
     * [en] 06 - Geburt
     * [de] 06 - Geburt</pre>
     * @return [en] 06 - Geburt, [de] 06 - Geburt
     */
    public static String getRulesCritAdm1TypeTooltip8() {
        return get(RULES_CRIT_ADM_1_TYPE_TOOLTIP_8).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_1_TYPE_TOOLTIP_9
     * SQLite key: rules_crit_adm1_type_tooltip_9
     * [en] 07 - Wiederaufnahme wg. Komplikation (Fallpauschale)
     * [de] 07 - Wiederaufnahme wg. Komplikation (Fallpauschale)</pre>
     * @return [en] 07 - Wiederaufnahme wg. Komplikation (Fallpauschale), [de] 07 - Wiederaufnahme wg. Komplikation (Fallpauschale)
     */
    public static String getRulesCritAdm1TypeTooltip9() {
        return get(RULES_CRIT_ADM_1_TYPE_TOOLTIP_9).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_10
     * SQLite key: rules_crit_adm2_type_tooltip_10
     * [en] 22 - Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
     * [de] 22 - Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)</pre>
     * @return [en] 22 - Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V), [de] 22 - Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
     */
    public static String getRulesCritAdm2TypeTooltip10() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_10).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_11
     * SQLite key: rules_crit_adm2_type_tooltip_11
     * [en] 23 - Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
     * [de] 23 - Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)</pre>
     * @return [en] 23 - Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X), [de] 23 - Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
     */
    public static String getRulesCritAdm2TypeTooltip11() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_11).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_12
     * SQLite key: rules_crit_adm2_type_tooltip_12
     * [en] 24 - Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt
     * [de] 24 - Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt</pre>
     * @return [en] 24 - Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt, [de] 24 - Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt
     */
    public static String getRulesCritAdm2TypeTooltip12() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_12).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_13
     * SQLite key: rules_crit_adm2_type_tooltip_13
     * [en] 26 - Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden
     * [de] 26 - Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden</pre>
     * @return [en] 26 - Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden, [de] 26 - Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden
     */
    public static String getRulesCritAdm2TypeTooltip13() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_13).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_14
     * SQLite key: rules_crit_adm2_type_tooltip_14
     * [en] 27 - Kostenträgerwechsel - Notfall
     * [de] 27 - Kostenträgerwechsel - Notfall</pre>
     * @return [en] 27 - Kostenträgerwechsel - Notfall, [de] 27 - Kostenträgerwechsel - Notfall
     */
    public static String getRulesCritAdm2TypeTooltip14() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_14).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_15
     * SQLite key: rules_crit_adm2_type_tooltip_15
     * [en] 41 - Integrierte Versorgung - Normalfall
     * [de] 41 - Integrierte Versorgung - Normalfall</pre>
     * @return [en] 41 - Integrierte Versorgung - Normalfall, [de] 41 - Integrierte Versorgung - Normalfall
     */
    public static String getRulesCritAdm2TypeTooltip15() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_15).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_16
     * SQLite key: rules_crit_adm2_type_tooltip_16
     * [en] 42 - Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
     * [de] 42 - Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)</pre>
     * @return [en] 42 - Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V), [de] 42 - Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
     */
    public static String getRulesCritAdm2TypeTooltip16() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_16).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_17
     * SQLite key: rules_crit_adm2_type_tooltip_17
     * [en] 43 - Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
     * [de] 43 - Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)</pre>
     * @return [en] 43 - Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X), [de] 43 - Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
     */
    public static String getRulesCritAdm2TypeTooltip17() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_17).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_18
     * SQLite key: rules_crit_adm2_type_tooltip_18
     * [en] 44 - Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt
     * [de] 44 - Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt</pre>
     * @return [en] 44 - Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt, [de] 44 - Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt
     */
    public static String getRulesCritAdm2TypeTooltip18() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_18).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_19
     * SQLite key: rules_crit_adm2_type_tooltip_19
     * [en] 46 - Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden
     * [de] 46 - Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden</pre>
     * @return [en] 46 - Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden, [de] 46 - Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden
     */
    public static String getRulesCritAdm2TypeTooltip19() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_19).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_20
     * SQLite key: rules_crit_adm2_type_tooltip_20
     * [en] 47 - Integrierte Versorgung - Notfall
     * [de] 47 - Integrierte Versorgung - Notfall</pre>
     * @return [en] 47 - Integrierte Versorgung - Notfall, [de] 47 - Integrierte Versorgung - Notfall
     */
    public static String getRulesCritAdm2TypeTooltip20() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_20).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_3
     * SQLite key: rules_crit_adm2_type_tooltip_3
     * [en] 01 - Normalfall
     * [de] 01 - Normalfall</pre>
     * @return [en] 01 - Normalfall, [de] 01 - Normalfall
     */
    public static String getRulesCritAdm2TypeTooltip3() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_4
     * SQLite key: rules_crit_adm2_type_tooltip_4
     * [en] 02 - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
     * [de] 02 - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)</pre>
     * @return [en] 02 - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V), [de] 02 - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
     */
    public static String getRulesCritAdm2TypeTooltip4() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_5
     * SQLite key: rules_crit_adm2_type_tooltip_5
     * [en] 03 - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
     * [de] 03 - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)</pre>
     * @return [en] 03 - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X), [de] 03 - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
     */
    public static String getRulesCritAdm2TypeTooltip5() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_6
     * SQLite key: rules_crit_adm2_type_tooltip_6
     * [en] 04 - Hinweis auf Einwirkung von äußerer Gewalt
     * [de] 04 - Hinweis auf Einwirkung von äußerer Gewalt</pre>
     * @return [en] 04 - Hinweis auf Einwirkung von äußerer Gewalt, [de] 04 - Hinweis auf Einwirkung von äußerer Gewalt
     */
    public static String getRulesCritAdm2TypeTooltip6() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_7
     * SQLite key: rules_crit_adm2_type_tooltip_7
     * [en] 06 - Kriegsbeschädigten-Leiden / BVG-Leiden
     * [de] 06 - Kriegsbeschädigten-Leiden / BVG-Leiden</pre>
     * @return [en] 06 - Kriegsbeschädigten-Leiden / BVG-Leiden, [de] 06 - Kriegsbeschädigten-Leiden / BVG-Leiden
     */
    public static String getRulesCritAdm2TypeTooltip7() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_7).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_8
     * SQLite key: rules_crit_adm2_type_tooltip_8
     * [en] 07 - Notfall
     * [de] 07 - Notfall</pre>
     * @return [en] 07 - Notfall, [de] 07 - Notfall
     */
    public static String getRulesCritAdm2TypeTooltip8() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_8).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_2_TYPE_TOOLTIP_9
     * SQLite key: rules_crit_adm2_type_tooltip_9
     * [en] 21 - Kostenträgerwechsel - Normalfall
     * [de] 21 - Kostenträgerwechsel - Normalfall</pre>
     * @return [en] 21 - Kostenträgerwechsel - Normalfall, [de] 21 - Kostenträgerwechsel - Normalfall
     */
    public static String getRulesCritAdm2TypeTooltip9() {
        return get(RULES_CRIT_ADM_2_TYPE_TOOLTIP_9).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_10
     * SQLite key: rules_crit_adm_cause_tooltip_10
     * [en] B - Begleitperson
     * [de] B - Begleitperson</pre>
     * @return [en] B - Begleitperson, [de] B - Begleitperson
     */
    public static String getRulesCritAdmCauseTooltip10() {
        return get(RULES_CRIT_ADM_CAUSE_TOOLTIP_10).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_11
     * SQLite key: rules_crit_adm_cause_tooltip_11
     * [en] A - Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden)
     * [de] A - Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden)</pre>
     * @return [en] A - Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden), [de] A - Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden)
     */
    public static String getRulesCritAdmCauseTooltip11() {
        return get(RULES_CRIT_ADM_CAUSE_TOOLTIP_11).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_3
     * SQLite key: rules_crit_adm_cause_tooltip_3
     * [en] E - Einweisung durch Arzt
     * [de] E - Einweisung durch Arzt</pre>
     * @return [en] E - Einweisung durch Arzt, [de] E - Einweisung durch Arzt
     */
    public static String getRulesCritAdmCauseTooltip3() {
        return get(RULES_CRIT_ADM_CAUSE_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_4
     * SQLite key: rules_crit_adm_cause_tooltip_4
     * [en] Z - Einweisung durch Zahnarzt
     * [de] Z - Einweisung durch Zahnarzt</pre>
     * @return [en] Z - Einweisung durch Zahnarzt, [de] Z - Einweisung durch Zahnarzt
     */
    public static String getRulesCritAdmCauseTooltip4() {
        return get(RULES_CRIT_ADM_CAUSE_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_5
     * SQLite key: rules_crit_adm_cause_tooltip_5
     * [en] N - Notfall
     * [de] N - Notfall</pre>
     * @return [en] N - Notfall, [de] N - Notfall
     */
    public static String getRulesCritAdmCauseTooltip5() {
        return get(RULES_CRIT_ADM_CAUSE_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_6
     * SQLite key: rules_crit_adm_cause_tooltip_6
     * [en] R - Aufnahme nach vorausgehender Behandlung in einer Rehaeinrichtung
     * [de] R - Aufnahme nach vorausgehender Behandlung in einer Rehaeinrichtung</pre>
     * @return [en] R - Aufnahme nach vorausgehender Behandlung in einer Rehaeinrichtung, [de] R - Aufnahme nach vorausgehender Behandlung in einer Rehaeinrichtung
     */
    public static String getRulesCritAdmCauseTooltip6() {
        return get(RULES_CRIT_ADM_CAUSE_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_8
     * SQLite key: rules_crit_adm_cause_tooltip_8
     * [en] K - Verlegung (Aufnahme) aus einem anderen Krankenhaus i.R.e. Kooperation
     * [de] K - Verlegung (Aufnahme) aus einem anderen Krankenhaus i.R.e. Kooperation</pre>
     * @return [en] K - Verlegung (Aufnahme) aus einem anderen Krankenhaus i.R.e. Kooperation, [de] K - Verlegung (Aufnahme) aus einem anderen Krankenhaus i.R.e. Kooperation
     */
    public static String getRulesCritAdmCauseTooltip8() {
        return get(RULES_CRIT_ADM_CAUSE_TOOLTIP_8).value;
    }

    /**
     * <pre>RULES_CRIT_ADM_CAUSE_TOOLTIP_9
     * SQLite key: rules_crit_adm_cause_tooltip_9
     * [en] G - Geburt
     * [de] G - Geburt</pre>
     * @return [en] G - Geburt, [de] G - Geburt
     */
    public static String getRulesCritAdmCauseTooltip9() {
        return get(RULES_CRIT_ADM_CAUSE_TOOLTIP_9).value;
    }

    /**
     * <pre>RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_3
     * SQLite key: rules_crit_admission_week_day_tooltip_3
     * [en] Mo(1) - Montag
     * [de] Mo(1) - Montag</pre>
     * @return [en] Mo(1) - Montag, [de] Mo(1) - Montag
     */
    public static String getRulesCritAdmissionWeekDayTooltip3() {
        return get(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_4
     * SQLite key: rules_crit_admission_week_day_tooltip_4
     * [en] Di(2) - Dinstag
     * [de] Di(2) - Dinstag</pre>
     * @return [en] Di(2) - Dinstag, [de] Di(2) - Dinstag
     */
    public static String getRulesCritAdmissionWeekDayTooltip4() {
        return get(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_5
     * SQLite key: rules_crit_admission_week_day_tooltip_5
     * [en] Mi(3) - Mittwoch
     * [de] Mi(3) - Mittwoch</pre>
     * @return [en] Mi(3) - Mittwoch, [de] Mi(3) - Mittwoch
     */
    public static String getRulesCritAdmissionWeekDayTooltip5() {
        return get(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_6
     * SQLite key: rules_crit_admission_week_day_tooltip_6
     * [en] Do(4) - Donnerstag
     * [de] Do(4) - Donnerstag</pre>
     * @return [en] Do(4) - Donnerstag, [de] Do(4) - Donnerstag
     */
    public static String getRulesCritAdmissionWeekDayTooltip6() {
        return get(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_7
     * SQLite key: rules_crit_admission_week_day_tooltip_7
     * [en] Fr(5) - Freitag
     * [de] Fr(5) - Freitag</pre>
     * @return [en] Fr(5) - Freitag, [de] Fr(5) - Freitag
     */
    public static String getRulesCritAdmissionWeekDayTooltip7() {
        return get(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_7).value;
    }

    /**
     * <pre>RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_8
     * SQLite key: rules_crit_admission_week_day_tooltip_8
     * [en] Sa(6) - Samstag
     * [de] Sa(6) - Samstag</pre>
     * @return [en] Sa(6) - Samstag, [de] Sa(6) - Samstag
     */
    public static String getRulesCritAdmissionWeekDayTooltip8() {
        return get(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_8).value;
    }

    /**
     * <pre>RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_9
     * SQLite key: rules_crit_admission_week_day_tooltip_9
     * [en] So(0) - Sonntag
     * [de] So(0) - Sonntag</pre>
     * @return [en] So(0) - Sonntag, [de] So(0) - Sonntag
     */
    public static String getRulesCritAdmissionWeekDayTooltip9() {
        return get(RULES_CRIT_ADMISSION_WEEK_DAY_TOOLTIP_9).value;
    }

    /**
     * <pre>RULES_CRIT_AMBU_CARE_CARE_LEVEL
     * SQLite key: rules_crit_ambu_care_care_level
     * [en] ambu_Pflegestufe
     * [de] ambu_Pflegestufe</pre>
     * @return [en] ambu_Pflegestufe, [de] ambu_Pflegestufe
     */
    public static String getRulesCritAmbuCareCareLevel() {
        return get(RULES_CRIT_AMBU_CARE_CARE_LEVEL).value;
    }

    /**
     * <pre>RULES_CRIT_AMBU_CARE_CARE_LEVEL_DIS
     * SQLite key: rules_crit_ambu_care_care_level_dis
     * [en] Pflegedaten: Pflegestufe
     * [de] Pflegedaten: Pflegestufe</pre>
     * @return [en] Pflegedaten: Pflegestufe, [de] Pflegedaten: Pflegestufe
     */
    public static String getRulesCritAmbuCareCareLevelDis() {
        return get(RULES_CRIT_AMBU_CARE_CARE_LEVEL_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_AMBU_CARE_PROVIDED_FROM
     * SQLite key: rules_crit_ambu_care_provided_from
     * [en] ambu_Pflegeleistung_von
     * [de] ambu_Pflegeleistung_von</pre>
     * @return [en] ambu_Pflegeleistung_von, [de] ambu_Pflegeleistung_von
     */
    public static String getRulesCritAmbuCareProvidedFrom() {
        return get(RULES_CRIT_AMBU_CARE_PROVIDED_FROM).value;
    }

    /**
     * <pre>RULES_CRIT_AMBU_CARE_PROVIDED_FROM_DIS
     * SQLite key: rules_crit_ambu_care_provided_from_dis
     * [en] Pflegedaten: Pflegeleistung von
     * [de] Pflegedaten: Pflegeleistung von</pre>
     * @return [en] Pflegedaten: Pflegeleistung von, [de] Pflegedaten: Pflegeleistung von
     */
    public static String getRulesCritAmbuCareProvidedFromDis() {
        return get(RULES_CRIT_AMBU_CARE_PROVIDED_FROM_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_AMBU_CARE_PROVIDED_FROM_TOOLTIP
     * SQLite key: rules_crit_ambu_care_provided_from_tooltip
     * [en] Der erste Tag der aufgebrachten Leistung
     * [de] Der erste Tag der aufgebrachten Leistung</pre>
     * @return [en] Der erste Tag der aufgebrachten Leistung, [de] Der erste Tag der aufgebrachten Leistung
     */
    public static String getRulesCritAmbuCareProvidedFromTooltip() {
        return get(RULES_CRIT_AMBU_CARE_PROVIDED_FROM_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_AMBU_CARE_PROVIDED_TO
     * SQLite key: rules_crit_ambu_care_provided_to
     * [en] ambu_Pflegeleistung_bis
     * [de] ambu_Pflegeleistung_bis</pre>
     * @return [en] ambu_Pflegeleistung_bis, [de] ambu_Pflegeleistung_bis
     */
    public static String getRulesCritAmbuCareProvidedTo() {
        return get(RULES_CRIT_AMBU_CARE_PROVIDED_TO).value;
    }

    /**
     * <pre>RULES_CRIT_AMBU_CARE_PROVIDED_TO_DIS
     * SQLite key: rules_crit_ambu_care_provided_to_dis
     * [en] Pflegedaten: Pflegeleistung bis
     * [de] Pflegedaten: Pflegeleistung bis</pre>
     * @return [en] Pflegedaten: Pflegeleistung bis, [de] Pflegedaten: Pflegeleistung bis
     */
    public static String getRulesCritAmbuCareProvidedToDis() {
        return get(RULES_CRIT_AMBU_CARE_PROVIDED_TO_DIS).value;
    }

    /**
     * <pre>RULES_CRIT_AMBU_CARE_PROVIDED_TO_TOOLTIP
     * SQLite key: rules_crit_ambu_care_provided_to_tooltip
     * [en] Der letzte Tag der aufgebrachten Leistung
     * [de] Der letzte Tag der aufgebrachten Leistung</pre>
     * @return [en] Der letzte Tag der aufgebrachten Leistung, [de] Der letzte Tag der aufgebrachten Leistung
     */
    public static String getRulesCritAmbuCareProvidedToTooltip() {
        return get(RULES_CRIT_AMBU_CARE_PROVIDED_TO_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_3
     * SQLite key: rules_crit_aux_diag_type_tooltip_3
     * [en] 0 - nicht gesetzt
     * [de] 0 - nicht gesetzt</pre>
     * @return [en] 0 - nicht gesetzt, [de] 0 - nicht gesetzt
     */
    public static String getRulesCritAuxDiagTypeTooltip3() {
        return get(RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_4
     * SQLite key: rules_crit_aux_diag_type_tooltip_4
     * [en] 1 - Kreuzdiagnose
     * [de] 1 - Kreuzdiagnose</pre>
     * @return [en] 1 - Kreuzdiagnose, [de] 1 - Kreuzdiagnose
     */
    public static String getRulesCritAuxDiagTypeTooltip4() {
        return get(RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_5
     * SQLite key: rules_crit_aux_diag_type_tooltip_5
     * [en] 2 - Sterndiagnose
     * [de] 2 - Sterndiagnose</pre>
     * @return [en] 2 - Sterndiagnose, [de] 2 - Sterndiagnose
     */
    public static String getRulesCritAuxDiagTypeTooltip5() {
        return get(RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_6
     * SQLite key: rules_crit_aux_diag_type_tooltip_6
     * [en] 3 - Zusatzdiagnose
     * [de] 3 - Zusatzdiagnose</pre>
     * @return [en] 3 - Zusatzdiagnose, [de] 3 - Zusatzdiagnose
     */
    public static String getRulesCritAuxDiagTypeTooltip6() {
        return get(RULES_CRIT_AUX_DIAG_TYPE_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_CARE_STATE_TOOLTIP_10
     * SQLite key: rules_crit_care_state_tooltip_10
     * [en] Pflegegrad 4
     * [de] Pflegegrad 4</pre>
     * @return [en] Pflegegrad 4, [de] Pflegegrad 4
     */
    public static String getRulesCritCareStateTooltip10() {
        return get(RULES_CRIT_CARE_STATE_TOOLTIP_10).value;
    }

    /**
     * <pre>RULES_CRIT_CARE_STATE_TOOLTIP_11
     * SQLite key: rules_crit_care_state_tooltip_11
     * [en] Pflegegrad 5
     * [de] Pflegegrad 5</pre>
     * @return [en] Pflegegrad 5, [de] Pflegegrad 5
     */
    public static String getRulesCritCareStateTooltip11() {
        return get(RULES_CRIT_CARE_STATE_TOOLTIP_11).value;
    }

    /**
     * <pre>RULES_CRIT_CARE_STATE_TOOLTIP_7
     * SQLite key: rules_crit_care_state_tooltip_7
     * [en] Pflegegrad 1
     * [de] Pflegegrad 1</pre>
     * @return [en] Pflegegrad 1, [de] Pflegegrad 1
     */
    public static String getRulesCritCareStateTooltip7() {
        return get(RULES_CRIT_CARE_STATE_TOOLTIP_7).value;
    }

    /**
     * <pre>RULES_CRIT_CARE_STATE_TOOLTIP_8
     * SQLite key: rules_crit_care_state_tooltip_8
     * [en] Pflegegrad 2
     * [de] Pflegegrad 2</pre>
     * @return [en] Pflegegrad 2, [de] Pflegegrad 2
     */
    public static String getRulesCritCareStateTooltip8() {
        return get(RULES_CRIT_CARE_STATE_TOOLTIP_8).value;
    }

    /**
     * <pre>RULES_CRIT_CARE_STATE_TOOLTIP_9
     * SQLite key: rules_crit_care_state_tooltip_9
     * [en] Pflegegrad 3
     * [de] Pflegegrad 3</pre>
     * @return [en] Pflegegrad 3, [de] Pflegegrad 3
     */
    public static String getRulesCritCareStateTooltip9() {
        return get(RULES_CRIT_CARE_STATE_TOOLTIP_9).value;
    }

    /**
     * <pre>RULES_CRIT_CLINIC_CASE_COSTS_TOOLTIP
     * SQLite key: rules_crit_clinic_case_costs_tooltip
     * [en] Gesamtkosten enes Falls
     * [de] Gesamtkosten enes Falls</pre>
     * @return [en] Gesamtkosten enes Falls, [de] Gesamtkosten enes Falls
     */
    public static String getRulesCritClinicCaseCostsTooltip() {
        return get(RULES_CRIT_CLINIC_CASE_COSTS_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_3_TOOLTIP_3
     * SQLite key: rules_crit_dis_type3_tooltip_3
     * [en] 1 - arbeitsfähig
     * [de] 1 - arbeitsfähig</pre>
     * @return [en] 1 - arbeitsfähig, [de] 1 - arbeitsfähig
     */
    public static String getRulesCritDisType3Tooltip3() {
        return get(RULES_CRIT_DIS_TYPE_3_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_3_TOOLTIP_4
     * SQLite key: rules_crit_dis_type3_tooltip_4
     * [en] 2 - nicht arbeitsfähig
     * [de] 2 - nicht arbeitsfähig</pre>
     * @return [en] 2 - nicht arbeitsfähig, [de] 2 - nicht arbeitsfähig
     */
    public static String getRulesCritDisType3Tooltip4() {
        return get(RULES_CRIT_DIS_TYPE_3_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_3_TOOLTIP_5
     * SQLite key: rules_crit_dis_type3_tooltip_5
     * [en] 9 - keine Angabe
     * [de] 9 - keine Angabe</pre>
     * @return [en] 9 - keine Angabe, [de] 9 - keine Angabe
     */
    public static String getRulesCritDisType3Tooltip5() {
        return get(RULES_CRIT_DIS_TYPE_3_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_3_TOOLTIP_6
     * SQLite key: rules_crit_dis_type3_tooltip_6
     * [en] 3 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung
     * [de] 3 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung</pre>
     * @return [en] 3 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung, [de] 3 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung
     */
    public static String getRulesCritDisType3Tooltip6() {
        return get(RULES_CRIT_DIS_TYPE_3_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_3_TOOLTIP_7
     * SQLite key: rules_crit_dis_type3_tooltip_7
     * [en] 4 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung
     * [de] 4 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung</pre>
     * @return [en] 4 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung, [de] 4 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung
     */
    public static String getRulesCritDisType3Tooltip7() {
        return get(RULES_CRIT_DIS_TYPE_3_TOOLTIP_7).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_3_TOOLTIP_8
     * SQLite key: rules_crit_dis_type3_tooltip_8
     * [en] 5 - arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung
     * [de] 5 - arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung</pre>
     * @return [en] 5 - arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung, [de] 5 - arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung
     */
    public static String getRulesCritDisType3Tooltip8() {
        return get(RULES_CRIT_DIS_TYPE_3_TOOLTIP_8).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_3_TOOLTIP_9
     * SQLite key: rules_crit_dis_type3_tooltip_9
     * [en] 6 - arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV
     * [de] 6 - arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV</pre>
     * @return [en] 6 - arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV, [de] 6 - arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV
     */
    public static String getRulesCritDisType3Tooltip9() {
        return get(RULES_CRIT_DIS_TYPE_3_TOOLTIP_9).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_10
     * SQLite key: rules_crit_dis_type_tooltip_10
     * [en] 08 - Verlegung in ein anderes Krankenhaus i.R.e. Kooperation
     * [de] 08 - Verlegung in ein anderes Krankenhaus i.R.e. Kooperation</pre>
     * @return [en] 08 - Verlegung in ein anderes Krankenhaus i.R.e. Kooperation, [de] 08 - Verlegung in ein anderes Krankenhaus i.R.e. Kooperation
     */
    public static String getRulesCritDisTypeTooltip10() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_10).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_11
     * SQLite key: rules_crit_dis_type_tooltip_11
     * [en] 09 - Entlassung in eine Rehabilitationseinrichtung
     * [de] 09 - Entlassung in eine Rehabilitationseinrichtung</pre>
     * @return [en] 09 - Entlassung in eine Rehabilitationseinrichtung, [de] 09 - Entlassung in eine Rehabilitationseinrichtung
     */
    public static String getRulesCritDisTypeTooltip11() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_11).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_12
     * SQLite key: rules_crit_dis_type_tooltip_12
     * [en] 10 - Entlassung in eine Pflegeeinrichtung
     * [de] 10 - Entlassung in eine Pflegeeinrichtung</pre>
     * @return [en] 10 - Entlassung in eine Pflegeeinrichtung, [de] 10 - Entlassung in eine Pflegeeinrichtung
     */
    public static String getRulesCritDisTypeTooltip12() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_12).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_13
     * SQLite key: rules_crit_dis_type_tooltip_13
     * [en] 11 - Entlassung in ein Hospiz
     * [de] 11 - Entlassung in ein Hospiz</pre>
     * @return [en] 11 - Entlassung in ein Hospiz, [de] 11 - Entlassung in ein Hospiz
     */
    public static String getRulesCritDisTypeTooltip13() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_13).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_14
     * SQLite key: rules_crit_dis_type_tooltip_14
     * [en] 12 - Interne Verlegung
     * [de] 12 - Interne Verlegung</pre>
     * @return [en] 12 - Interne Verlegung, [de] 12 - Interne Verlegung
     */
    public static String getRulesCritDisTypeTooltip14() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_14).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_15
     * SQLite key: rules_crit_dis_type_tooltip_15
     * [en] 13 - Externe Verlegung zur psychiatrischen Behandlung
     * [de] 13 - Externe Verlegung zur psychiatrischen Behandlung</pre>
     * @return [en] 13 - Externe Verlegung zur psychiatrischen Behandlung, [de] 13 - Externe Verlegung zur psychiatrischen Behandlung
     */
    public static String getRulesCritDisTypeTooltip15() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_15).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_16
     * SQLite key: rules_crit_dis_type_tooltip_16
     * [en] 14 - Behandlung aus sonstigen Gründen beendet, nachstationäre Beh.
     * [de] 14 - Behandlung aus sonstigen Gründen beendet, nachstationäre Beh.</pre>
     * @return [en] 14 - Behandlung aus sonstigen Gründen beendet, nachstationäre Beh., [de] 14 - Behandlung aus sonstigen Gründen beendet, nachstationäre Beh.
     */
    public static String getRulesCritDisTypeTooltip16() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_16).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_17
     * SQLite key: rules_crit_dis_type_tooltip_17
     * [en] 15 - Behandlung gegen ärztlichen Rat beendet, nachstationäre Beh.
     * [de] 15 - Behandlung gegen ärztlichen Rat beendet, nachstationäre Beh.</pre>
     * @return [en] 15 - Behandlung gegen ärztlichen Rat beendet, nachstationäre Beh., [de] 15 - Behandlung gegen ärztlichen Rat beendet, nachstationäre Beh.
     */
    public static String getRulesCritDisTypeTooltip17() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_17).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_18
     * SQLite key: rules_crit_dis_type_tooltip_18
     * [en] 17 - interne Verlegung mit Wechsel zwischen den Geltungsbereichen
     * [de] 17 - interne Verlegung mit Wechsel zwischen den Geltungsbereichen</pre>
     * @return [en] 17 - interne Verlegung mit Wechsel zwischen den Geltungsbereichen, [de] 17 - interne Verlegung mit Wechsel zwischen den Geltungsbereichen
     */
    public static String getRulesCritDisTypeTooltip18() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_18).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_19
     * SQLite key: rules_crit_dis_type_tooltip_19
     * [en] 18 - Rückverlegung
     * [de] 18 - Rückverlegung</pre>
     * @return [en] 18 - Rückverlegung, [de] 18 - Rückverlegung
     */
    public static String getRulesCritDisTypeTooltip19() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_19).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_20
     * SQLite key: rules_crit_dis_type_tooltip_20
     * [en] 19 - Entlassung vor Wiederaufnahme mit Neueinstufung
     * [de] 19 - Entlassung vor Wiederaufnahme mit Neueinstufung</pre>
     * @return [en] 19 - Entlassung vor Wiederaufnahme mit Neueinstufung, [de] 19 - Entlassung vor Wiederaufnahme mit Neueinstufung
     */
    public static String getRulesCritDisTypeTooltip20() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_20).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_21
     * SQLite key: rules_crit_dis_type_tooltip_21
     * [en] 20 - Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation
     * [de] 20 - Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation</pre>
     * @return [en] 20 - Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation, [de] 20 - Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation
     */
    public static String getRulesCritDisTypeTooltip21() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_21).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_22
     * SQLite key: rules_crit_dis_type_tooltip_22
     * [en] 21 - Entlassung mit nachfolgender Wiederaufnahme
     * [de] 21 - Entlassung mit nachfolgender Wiederaufnahme</pre>
     * @return [en] 21 - Entlassung mit nachfolgender Wiederaufnahme, [de] 21 - Entlassung mit nachfolgender Wiederaufnahme
     */
    public static String getRulesCritDisTypeTooltip22() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_22).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_23
     * SQLite key: rules_crit_dis_type_tooltip_23
     * [en] 22 - Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung
     * [de] 22 - Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung</pre>
     * @return [en] 22 - Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung, [de] 22 - Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung
     */
    public static String getRulesCritDisTypeTooltip23() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_23).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_26
     * SQLite key: rules_crit_dis_type_tooltip_26
     * [en] 23 - Beginn eines externen Aufenthalts mit Abwesenheit ücber Mitternacht (BPflV-Bereich - für verlegende Fachabteilung)
     * [de] 23 - Beginn eines externen Aufenthalts mit Abwesenheit ücber Mitternacht (BPflV-Bereich - für verlegende Fachabteilung)</pre>
     * @return [en] 23 - Beginn eines externen Aufenthalts mit Abwesenheit ücber Mitternacht (BPflV-Bereich - für verlegende Fachabteilung), [de] 23 - Beginn eines externen Aufenthalts mit Abwesenheit ücber Mitternacht (BPflV-Bereich - für verlegende Fachabteilung)
     */
    public static String getRulesCritDisTypeTooltip26() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_26).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_27
     * SQLite key: rules_crit_dis_type_tooltip_27
     * [en] 24 - Beendigung eines externen Aufenthalts mit Abwesenheit über Mitternacht (BPflVBereich - für Pseudo-Fachabteilung 0003)
     * [de] 24 - Beendigung eines externen Aufenthalts mit Abwesenheit über Mitternacht (BPflVBereich - für Pseudo-Fachabteilung 0003)</pre>
     * @return [en] 24 - Beendigung eines externen Aufenthalts mit Abwesenheit über Mitternacht (BPflVBereich - für Pseudo-Fachabteilung 0003), [de] 24 - Beendigung eines externen Aufenthalts mit Abwesenheit über Mitternacht (BPflVBereich - für Pseudo-Fachabteilung 0003)
     */
    public static String getRulesCritDisTypeTooltip27() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_27).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_28
     * SQLite key: rules_crit_dis_type_tooltip_28
     * [en] 25 - Entlassung zum Jahresende bei Aufnahme im Vorjahr
     * [de] 25 - Entlassung zum Jahresende bei Aufnahme im Vorjahr</pre>
     * @return [en] 25 - Entlassung zum Jahresende bei Aufnahme im Vorjahr, [de] 25 - Entlassung zum Jahresende bei Aufnahme im Vorjahr
     */
    public static String getRulesCritDisTypeTooltip28() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_28).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_29
     * SQLite key: rules_crit_dis_type_tooltip_29
     * [en] 26 - Beginn  eines  Zeitraumes  ohne  direkten Patientenkontakt  (stationsäquivalente Behandlung) (für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)
     * [de] 26 - Beginn  eines  Zeitraumes  ohne  direkten Patientenkontakt  (stationsäquivalente Behandlung) (für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)</pre>
     * @return [en] 26 - Beginn  eines  Zeitraumes  ohne  direkten Patientenkontakt  (stationsäquivalente Behandlung) (für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018), [de] 26 - Beginn  eines  Zeitraumes  ohne  direkten Patientenkontakt  (stationsäquivalente Behandlung) (für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)
     */
    public static String getRulesCritDisTypeTooltip29() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_29).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_3
     * SQLite key: rules_crit_dis_type_tooltip_3
     * [en] 01 - Behandlung regulär beendet
     * [de] 01 - Behandlung regulär beendet</pre>
     * @return [en] 01 - Behandlung regulär beendet, [de] 01 - Behandlung regulär beendet
     */
    public static String getRulesCritDisTypeTooltip3() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_30
     * SQLite key: rules_crit_dis_type_tooltip_30
     * [en] 27 - Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung für Pseudofachabteilung 0004(für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)
     * [de] 27 - Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung für Pseudofachabteilung 0004(für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)</pre>
     * @return [en] 27 - Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung für Pseudofachabteilung 0004(für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018), [de] 27 - Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung für Pseudofachabteilung 0004(für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)
     */
    public static String getRulesCritDisTypeTooltip30() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_30).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_31
     * SQLite key: rules_crit_dis_type_tooltip_31
     * [en] 28 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit
     * [de] 28 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit</pre>
     * @return [en] 28 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit, [de] 28 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit
     */
    public static String getRulesCritDisTypeTooltip31() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_31).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_32
     * SQLite key: rules_crit_dis_type_tooltip_32
     * [en] 29 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit
     * [de] 29 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit</pre>
     * @return [en] 29 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit, [de] 29 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit
     */
    public static String getRulesCritDisTypeTooltip32() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_32).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_33
     * SQLite key: rules_crit_dis_type_tooltip_33
     * [en] 30 - Behandlung regulär beendet, Überleitung in die Übergangspflege
     * [de] 30 - Behandlung regulär beendet, Überleitung in die Übergangspflege</pre>
     * @return [en] 30 - Behandlung regulär beendet, Überleitung in die Übergangspflege, [de] 30 - Behandlung regulär beendet, Überleitung in die Übergangspflege
     */
    public static String getRulesCritDisTypeTooltip33() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_33).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_4
     * SQLite key: rules_crit_dis_type_tooltip_4
     * [en] 02 - Behandlung regulär beendet, nachstationäre Behandlung vorgesehen
     * [de] 02 - Behandlung regulär beendet, nachstationäre Behandlung vorgesehen</pre>
     * @return [en] 02 - Behandlung regulär beendet, nachstationäre Behandlung vorgesehen, [de] 02 - Behandlung regulär beendet, nachstationäre Behandlung vorgesehen
     */
    public static String getRulesCritDisTypeTooltip4() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_5
     * SQLite key: rules_crit_dis_type_tooltip_5
     * [en] 03 - Behandlung aus sonstigen Gründen beendet
     * [de] 03 - Behandlung aus sonstigen Gründen beendet</pre>
     * @return [en] 03 - Behandlung aus sonstigen Gründen beendet, [de] 03 - Behandlung aus sonstigen Gründen beendet
     */
    public static String getRulesCritDisTypeTooltip5() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_6
     * SQLite key: rules_crit_dis_type_tooltip_6
     * [en] 04 - Behandlung gegen ärztlichen Rat beendet
     * [de] 04 - Behandlung gegen ärztlichen Rat beendet</pre>
     * @return [en] 04 - Behandlung gegen ärztlichen Rat beendet, [de] 04 - Behandlung gegen ärztlichen Rat beendet
     */
    public static String getRulesCritDisTypeTooltip6() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_7
     * SQLite key: rules_crit_dis_type_tooltip_7
     * [en] 05 - Zuständigkeitswechsel des Kostenträger
     * [de] 05 - Zuständigkeitswechsel des Kostenträger</pre>
     * @return [en] 05 - Zuständigkeitswechsel des Kostenträger, [de] 05 - Zuständigkeitswechsel des Kostenträger
     */
    public static String getRulesCritDisTypeTooltip7() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_7).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_8
     * SQLite key: rules_crit_dis_type_tooltip_8
     * [en] 06 - Verlegung in ein anderes Krankenhaus
     * [de] 06 - Verlegung in ein anderes Krankenhaus</pre>
     * @return [en] 06 - Verlegung in ein anderes Krankenhaus, [de] 06 - Verlegung in ein anderes Krankenhaus
     */
    public static String getRulesCritDisTypeTooltip8() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_8).value;
    }

    /**
     * <pre>RULES_CRIT_DIS_TYPE_TOOLTIP_9
     * SQLite key: rules_crit_dis_type_tooltip_9
     * [en] 07 - Tod
     * [de] 07 - Tod</pre>
     * @return [en] 07 - Tod, [de] 07 - Tod
     */
    public static String getRulesCritDisTypeTooltip9() {
        return get(RULES_CRIT_DIS_TYPE_TOOLTIP_9).value;
    }

    /**
     * <pre>RULES_CRIT_DRGPARTITION_TOOLTIP_3
     * SQLite key: rules_crit_drgpartition_tooltip_3
     * [en] O - operative Behandlung
     * [de] O - operative Behandlung</pre>
     * @return [en] O - operative Behandlung, [de] O - operative Behandlung
     */
    public static String getRulesCritDrgpartitionTooltip3() {
        return get(RULES_CRIT_DRGPARTITION_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_DRGPARTITION_TOOLTIP_4
     * SQLite key: rules_crit_drgpartition_tooltip_4
     * [en] A - eine nichtoperative, jedoch invasive Behandlung
     * [de] A - eine nichtoperative, jedoch invasive Behandlung</pre>
     * @return [en] A - eine nichtoperative, jedoch invasive Behandlung, [de] A - eine nichtoperative, jedoch invasive Behandlung
     */
    public static String getRulesCritDrgpartitionTooltip4() {
        return get(RULES_CRIT_DRGPARTITION_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_DRGPARTITION_TOOLTIP_5
     * SQLite key: rules_crit_drgpartition_tooltip_5
     * [en] M - eine rein medizinische Behandlung ohne Eingriffe.
     * [de] M - eine rein medizinische Behandlung ohne Eingriffe.</pre>
     * @return [en] M - eine rein medizinische Behandlung ohne Eingriffe., [de] M - eine rein medizinische Behandlung ohne Eingriffe.
     */
    public static String getRulesCritDrgpartitionTooltip5() {
        return get(RULES_CRIT_DRGPARTITION_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_INSURANCE_STATUS_TOOLTIP_2
     * SQLite key: rules_crit_insurance_status_tooltip_2
     * [en] 0 - kein
     * [de] 0 - kein</pre>
     * @return [en] 0 - kein, [de] 0 - kein
     */
    public static String getRulesCritInsuranceStatusTooltip2() {
        return get(RULES_CRIT_INSURANCE_STATUS_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_INSURANCE_STATUS_TOOLTIP_3
     * SQLite key: rules_crit_insurance_status_tooltip_3
     * [en] 1 - selbst versichert
     * [de] 1 - selbst versichert</pre>
     * @return [en] 1 - selbst versichert, [de] 1 - selbst versichert
     */
    public static String getRulesCritInsuranceStatusTooltip3() {
        return get(RULES_CRIT_INSURANCE_STATUS_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_INSURANCE_STATUS_TOOLTIP_4
     * SQLite key: rules_crit_insurance_status_tooltip_4
     * [en] 3 - familienversichert
     * [de] 3 - familienversichert</pre>
     * @return [en] 3 - familienversichert, [de] 3 - familienversichert
     */
    public static String getRulesCritInsuranceStatusTooltip4() {
        return get(RULES_CRIT_INSURANCE_STATUS_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_INSURANCE_STATUS_TOOLTIP_5
     * SQLite key: rules_crit_insurance_status_tooltip_5
     * [en] 5 - Rentner &amp; Angehörige
     * [de] 5 - Rentner &amp; Angehörige</pre>
     * @return [en] 5 - Rentner {@literal &} Angehörige, [de] 5 - Rentner {@literal &} Angehörige
     */
    public static String getRulesCritInsuranceStatusTooltip5() {
        return get(RULES_CRIT_INSURANCE_STATUS_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_LOSLESS_24H_TOOLTIP_3
     * SQLite key: rules_crit_losless24h_tooltip_3
     * [en] 0 - Verweildauer &amp;gt;= 24
     * [de] 0 - Verweildauer &amp;gt;= 24</pre>
     * @return [en] 0 - Verweildauer {@literal &}gt;= 24, [de] 0 - Verweildauer {@literal &}gt;= 24
     */
    public static String getRulesCritLosless24hTooltip3() {
        return get(RULES_CRIT_LOSLESS_24H_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_LOSLESS_24H_TOOLTIP_4
     * SQLite key: rules_crit_losless24h_tooltip_4
     * [en] 1 - Verweildauer &amp;lt; 24
     * [de] 1 - Verweildauer &amp;lt; 24</pre>
     * @return [en] 1 - Verweildauer {@literal &}lt; 24, [de] 1 - Verweildauer {@literal &}lt; 24
     */
    public static String getRulesCritLosless24hTooltip4() {
        return get(RULES_CRIT_LOSLESS_24H_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_10
     * SQLite key: rules_crit_mdc_tooltip_10
     * [en] 08 - Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe
     * [de] 08 - Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe</pre>
     * @return [en] 08 - Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe, [de] 08 - Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe
     */
    public static String getRulesCritMdcTooltip10() {
        return get(RULES_CRIT_MDC_TOOLTIP_10).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_11
     * SQLite key: rules_crit_mdc_tooltip_11
     * [en] 09 - Krankheiten und Störungen an Haut, Unterhaut und Mamma
     * [de] 09 - Krankheiten und Störungen an Haut, Unterhaut und Mamma</pre>
     * @return [en] 09 - Krankheiten und Störungen an Haut, Unterhaut und Mamma, [de] 09 - Krankheiten und Störungen an Haut, Unterhaut und Mamma
     */
    public static String getRulesCritMdcTooltip11() {
        return get(RULES_CRIT_MDC_TOOLTIP_11).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_12
     * SQLite key: rules_crit_mdc_tooltip_12
     * [en] 10 - Endokrine, Ernährungs- und Stoffwechselkrankheiten
     * [de] 10 - Endokrine, Ernährungs- und Stoffwechselkrankheiten</pre>
     * @return [en] 10 - Endokrine, Ernährungs- und Stoffwechselkrankheiten, [de] 10 - Endokrine, Ernährungs- und Stoffwechselkrankheiten
     */
    public static String getRulesCritMdcTooltip12() {
        return get(RULES_CRIT_MDC_TOOLTIP_12).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_13
     * SQLite key: rules_crit_mdc_tooltip_13
     * [en] 11 - Krankheiten und Störungen der Harnorgane
     * [de] 11 - Krankheiten und Störungen der Harnorgane</pre>
     * @return [en] 11 - Krankheiten und Störungen der Harnorgane, [de] 11 - Krankheiten und Störungen der Harnorgane
     */
    public static String getRulesCritMdcTooltip13() {
        return get(RULES_CRIT_MDC_TOOLTIP_13).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_14
     * SQLite key: rules_crit_mdc_tooltip_14
     * [en] 12 - Krankheiten und Störungen der männlichen Geschlechtsorgane
     * [de] 12 - Krankheiten und Störungen der männlichen Geschlechtsorgane</pre>
     * @return [en] 12 - Krankheiten und Störungen der männlichen Geschlechtsorgane, [de] 12 - Krankheiten und Störungen der männlichen Geschlechtsorgane
     */
    public static String getRulesCritMdcTooltip14() {
        return get(RULES_CRIT_MDC_TOOLTIP_14).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_15
     * SQLite key: rules_crit_mdc_tooltip_15
     * [en] 13 - Krankheiten und Störungen der weiblichen Geschlechtsorgane
     * [de] 13 - Krankheiten und Störungen der weiblichen Geschlechtsorgane</pre>
     * @return [en] 13 - Krankheiten und Störungen der weiblichen Geschlechtsorgane, [de] 13 - Krankheiten und Störungen der weiblichen Geschlechtsorgane
     */
    public static String getRulesCritMdcTooltip15() {
        return get(RULES_CRIT_MDC_TOOLTIP_15).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_16
     * SQLite key: rules_crit_mdc_tooltip_16
     * [en] 14 - Schwangerschaft, Geburt und Wochenbett
     * [de] 14 - Schwangerschaft, Geburt und Wochenbett</pre>
     * @return [en] 14 - Schwangerschaft, Geburt und Wochenbett, [de] 14 - Schwangerschaft, Geburt und Wochenbett
     */
    public static String getRulesCritMdcTooltip16() {
        return get(RULES_CRIT_MDC_TOOLTIP_16).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_17
     * SQLite key: rules_crit_mdc_tooltip_17
     * [en] 15 - Neugeborene
     * [de] 15 - Neugeborene</pre>
     * @return [en] 15 - Neugeborene, [de] 15 - Neugeborene
     */
    public static String getRulesCritMdcTooltip17() {
        return get(RULES_CRIT_MDC_TOOLTIP_17).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_18
     * SQLite key: rules_crit_mdc_tooltip_18
     * [en] 16 - Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems
     * [de] 16 - Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems</pre>
     * @return [en] 16 - Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems, [de] 16 - Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems
     */
    public static String getRulesCritMdcTooltip18() {
        return get(RULES_CRIT_MDC_TOOLTIP_18).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_19
     * SQLite key: rules_crit_mdc_tooltip_19
     * [en] 17 - Hämatologische und solide Neubildungen
     * [de] 17 - Hämatologische und solide Neubildungen</pre>
     * @return [en] 17 - Hämatologische und solide Neubildungen, [de] 17 - Hämatologische und solide Neubildungen
     */
    public static String getRulesCritMdcTooltip19() {
        return get(RULES_CRIT_MDC_TOOLTIP_19).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_2
     * SQLite key: rules_crit_mdc_tooltip_2
     * [en] 00 - unbekannt
     * [de] 00 - unbekannt</pre>
     * @return [en] 00 - unbekannt, [de] 00 - unbekannt
     */
    public static String getRulesCritMdcTooltip2() {
        return get(RULES_CRIT_MDC_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_20
     * SQLite key: rules_crit_mdc_tooltip_20
     * [en] 18A - HIV
     * [de] 18A - HIV</pre>
     * @return [en] 18A - HIV, [de] 18A - HIV
     */
    public static String getRulesCritMdcTooltip20() {
        return get(RULES_CRIT_MDC_TOOLTIP_20).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_21
     * SQLite key: rules_crit_mdc_tooltip_21
     * [en] 18B - Infektiöse und parasitäre Erkrankungen
     * [de] 18B - Infektiöse und parasitäre Erkrankungen</pre>
     * @return [en] 18B - Infektiöse und parasitäre Erkrankungen, [de] 18B - Infektiöse und parasitäre Erkrankungen
     */
    public static String getRulesCritMdcTooltip21() {
        return get(RULES_CRIT_MDC_TOOLTIP_21).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_22
     * SQLite key: rules_crit_mdc_tooltip_22
     * [en] 19 - Psychische Krankheiten
     * [de] 19 - Psychische Krankheiten</pre>
     * @return [en] 19 - Psychische Krankheiten, [de] 19 - Psychische Krankheiten
     */
    public static String getRulesCritMdcTooltip22() {
        return get(RULES_CRIT_MDC_TOOLTIP_22).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_23
     * SQLite key: rules_crit_mdc_tooltip_23
     * [en] 20 - Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen
     * [de] 20 - Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen</pre>
     * @return [en] 20 - Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen, [de] 20 - Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen
     */
    public static String getRulesCritMdcTooltip23() {
        return get(RULES_CRIT_MDC_TOOLTIP_23).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_24
     * SQLite key: rules_crit_mdc_tooltip_24
     * [en] 21A - Polytrauma
     * [de] 21A - Polytrauma</pre>
     * @return [en] 21A - Polytrauma, [de] 21A - Polytrauma
     */
    public static String getRulesCritMdcTooltip24() {
        return get(RULES_CRIT_MDC_TOOLTIP_24).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_25
     * SQLite key: rules_crit_mdc_tooltip_25
     * [en] 21B - Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten
     * [de] 21B - Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten</pre>
     * @return [en] 21B - Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten, [de] 21B - Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten
     */
    public static String getRulesCritMdcTooltip25() {
        return get(RULES_CRIT_MDC_TOOLTIP_25).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_26
     * SQLite key: rules_crit_mdc_tooltip_26
     * [en] 22 - Verbrennungen
     * [de] 22 - Verbrennungen</pre>
     * @return [en] 22 - Verbrennungen, [de] 22 - Verbrennungen
     */
    public static String getRulesCritMdcTooltip26() {
        return get(RULES_CRIT_MDC_TOOLTIP_26).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_27
     * SQLite key: rules_crit_mdc_tooltip_27
     * [en] 23 - Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens
     * [de] 23 - Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens</pre>
     * @return [en] 23 - Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens, [de] 23 - Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens
     */
    public static String getRulesCritMdcTooltip27() {
        return get(RULES_CRIT_MDC_TOOLTIP_27).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_28
     * SQLite key: rules_crit_mdc_tooltip_28
     * [en] PRE - PRÄ - MDC
     * [de] 24 - Sonstige DRGs</pre>
     * ATTENTION this value ('PRE - PRÄ - MDC') seems to be also defined under the key RULES_CRIT_MDC_TOOLTIP_30!
     * @return [en] PRE - PRÄ - MDC, [de] 24 - Sonstige DRGs
     */
    public static String getRulesCritMdcTooltip28() {
        return get(RULES_CRIT_MDC_TOOLTIP_28).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_29
     * SQLite key: rules_crit_mdc_tooltip_29
     * [de] 25 - Teilstationäre pädiatrische Diagnostik und Behandlung</pre>
     * @return [de] 25 - Teilstationäre pädiatrische Diagnostik und Behandlung
     */
    public static String getRulesCritMdcTooltip29() {
        return get(RULES_CRIT_MDC_TOOLTIP_29).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_3
     * SQLite key: rules_crit_mdc_tooltip_3
     * [en] 01 - Krankheiten und Störungen des Nervensystems
     * [de] 01 - Krankheiten und Störungen des Nervensystems</pre>
     * @return [en] 01 - Krankheiten und Störungen des Nervensystems, [de] 01 - Krankheiten und Störungen des Nervensystems
     */
    public static String getRulesCritMdcTooltip3() {
        return get(RULES_CRIT_MDC_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_30
     * SQLite key: rules_crit_mdc_tooltip_30
     * [de] PRE - PRÄ - MDC</pre>
     * ATTENTION this value ('PRE - PRÄ - MDC') seems to be also defined under the key RULES_CRIT_MDC_TOOLTIP_28!
     * @return [de] PRE - PRÄ - MDC
     */
    public static String getRulesCritMdcTooltip30() {
        return get(RULES_CRIT_MDC_TOOLTIP_30).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_4
     * SQLite key: rules_crit_mdc_tooltip_4
     * [en] 02 - Krankheiten und Störungen des Auges
     * [de] 02 - Krankheiten und Störungen des Auges</pre>
     * @return [en] 02 - Krankheiten und Störungen des Auges, [de] 02 - Krankheiten und Störungen des Auges
     */
    public static String getRulesCritMdcTooltip4() {
        return get(RULES_CRIT_MDC_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_5
     * SQLite key: rules_crit_mdc_tooltip_5
     * [en] 03 - Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO)
     * [de] 03 - Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO)</pre>
     * @return [en] 03 - Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO), [de] 03 - Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO)
     */
    public static String getRulesCritMdcTooltip5() {
        return get(RULES_CRIT_MDC_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_6
     * SQLite key: rules_crit_mdc_tooltip_6
     * [en] 04 - Krankheiten und Störungen der Atmungsorgane
     * [de] 04 - Krankheiten und Störungen der Atmungsorgane</pre>
     * @return [en] 04 - Krankheiten und Störungen der Atmungsorgane, [de] 04 - Krankheiten und Störungen der Atmungsorgane
     */
    public static String getRulesCritMdcTooltip6() {
        return get(RULES_CRIT_MDC_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_7
     * SQLite key: rules_crit_mdc_tooltip_7
     * [en] 05 - Krankheiten und Störungen des Kreislaufsystems
     * [de] 05 - Krankheiten und Störungen des Kreislaufsystems</pre>
     * @return [en] 05 - Krankheiten und Störungen des Kreislaufsystems, [de] 05 - Krankheiten und Störungen des Kreislaufsystems
     */
    public static String getRulesCritMdcTooltip7() {
        return get(RULES_CRIT_MDC_TOOLTIP_7).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_8
     * SQLite key: rules_crit_mdc_tooltip_8
     * [en] 06 - Krankheiten und Störungen der Verdauungsorgane
     * [de] 06 - Krankheiten und Störungen der Verdauungsorgane</pre>
     * @return [en] 06 - Krankheiten und Störungen der Verdauungsorgane, [de] 06 - Krankheiten und Störungen der Verdauungsorgane
     */
    public static String getRulesCritMdcTooltip8() {
        return get(RULES_CRIT_MDC_TOOLTIP_8).value;
    }

    /**
     * <pre>RULES_CRIT_MDC_TOOLTIP_9
     * SQLite key: rules_crit_mdc_tooltip_9
     * [en] 07 - Krankheiten und Störungen an hepatobiliärem System und Pankreas
     * [de] 07 - Krankheiten und Störungen an hepatobiliärem System und Pankreas</pre>
     * @return [en] 07 - Krankheiten und Störungen an hepatobiliärem System und Pankreas, [de] 07 - Krankheiten und Störungen an hepatobiliärem System und Pankreas
     */
    public static String getRulesCritMdcTooltip9() {
        return get(RULES_CRIT_MDC_TOOLTIP_9).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_10
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_10
     * [en] E.
     * [de] E.</pre>
     * @return [en] E., [de] E.
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip10() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_10).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_11
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_11
     * [en] µmol
     * [de] µmol</pre>
     * @return [en] µmol, [de] µmol
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip11() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_11).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_12
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_12
     * [en] FIP.-E.
     * [de] FIP.-E.</pre>
     * @return [en] FIP.-E., [de] FIP.-E.
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip12() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_12).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_13
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_13
     * [en] Mio.I.E.
     * [de] Mio.I.E.</pre>
     * @return [en] Mio.I.E., [de] Mio.I.E.
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip13() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_13).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_14
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_14
     * [en] BE
     * [de] BE</pre>
     * @return [en] BE, [de] BE
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip14() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_14).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_15
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_15
     * [en] Vol.-%
     * [de] Vol.-%</pre>
     * @return [en] Vol.-%, [de] Vol.-%
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip15() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_15).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_16
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_16
     * [en] Gew.-%
     * [de] Gew.-%</pre>
     * @return [en] Gew.-%, [de] Gew.-%
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip16() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_16).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_17
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_17
     * [en] %V/V, mmol
     * [de] %V/V, mmol</pre>
     * @return [en] %V/V, mmol, [de] %V/V, mmol
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip17() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_17).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_18
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_18
     * [en] Mio E.
     * [de] Mio E.</pre>
     * @return [en] Mio E., [de] Mio E.
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip18() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_18).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_19
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_19
     * [en] ng
     * [de] ng</pre>
     * @return [en] ng, [de] ng
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip19() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_19).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_20
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_20
     * [en] MSE
     * [de] MSE</pre>
     * @return [en] MSE, [de] MSE
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip20() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_20).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_21
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_21
     * [en] mg (MW)
     * [de] mg (MW)</pre>
     * @return [en] mg (MW), [de] mg (MW)
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip21() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_21).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_22
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_22
     * [en] g (MW)
     * [de] g (MW)</pre>
     * @return [en] g (MW), [de] g (MW)
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip22() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_22).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_23
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_23
     * [en] Sprühstoß
     * [de] Sprühstoß</pre>
     * @return [en] Sprühstoß, [de] Sprühstoß
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip23() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_23).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_24
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_24
     * [en] Aerosolstoß
     * [de] Aerosolstoß</pre>
     * @return [en] Aerosolstoß, [de] Aerosolstoß
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip24() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_24).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_25
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_25
     * [en] cm¢2
     * [de] cm¢2</pre>
     * @return [en] cm¢2, [de] cm¢2
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip25() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_25).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_26
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_26
     * [en] µl
     * [de] µl</pre>
     * @return [en] µl, [de] µl
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip26() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_26).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_27
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_27
     * [en] Ph.Eur.-E.
     * [de] Ph.Eur.-E.</pre>
     * @return [en] Ph.Eur.-E., [de] Ph.Eur.-E.
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip27() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_27).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_28
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_28
     * [en] nl
     * [de] nl</pre>
     * @return [en] nl, [de] nl
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip28() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_28).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_29
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_29
     * [en] pg
     * [de] pg</pre>
     * @return [en] pg, [de] pg
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip29() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_29).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_3
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_3
     * [en] mg
     * [de] mg</pre>
     * @return [en] mg, [de] mg
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip3() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_31
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_31
     * [en] Keime
     * [de] Keime</pre>
     * @return [en] Keime, [de] Keime
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip31() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_31).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_32
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_32
     * [en] Mio.-Keime
     * [de] Mio.-Keime</pre>
     * @return [en] Mio.-Keime, [de] Mio.-Keime
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip32() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_32).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_33
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_33
     * [en] mPa*s
     * [de] mPa*s</pre>
     * @return [en] mPa*s, [de] mPa*s
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip33() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_33).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_4
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_4
     * [en] ml
     * [de] ml</pre>
     * @return [en] ml, [de] ml
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip4() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_5
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_5
     * [en] g
     * [de] g</pre>
     * ATTENTION this value ('G') seems to be also defined under the key CASE_RESOLVE_USED_FOR_GROUPING!
     * @return [en] g, [de] g
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip5() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_6
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_6
     * [en] l
     * [de] l</pre>
     * @return [en] l, [de] l
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip6() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_7
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_7
     * [en] µg
     * [de] µg</pre>
     * @return [en] µg, [de] µg
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip7() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_7).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_8
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_8
     * [en] I.E.
     * [de] I.E.</pre>
     * @return [en] I.E., [de] I.E.
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip8() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_8).value;
    }

    /**
     * <pre>RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_9
     * SQLite key: rules_crit_medicament_perscript_dosage_unit_tooltip_9
     * [en] %
     * [de] %</pre>
     * @return [en] %, [de] %
     */
    public static String getRulesCritMedicamentPerscriptDosageUnitTooltip9() {
        return get(RULES_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_TOOLTIP_9).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AGE_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_age_tooltip_1
     * [en] Alter aus der Satzart 100 im Berichtsjahr
     * [de] Alter aus der Satzart 100 im Berichtsjahr</pre>
     * @return [en] Alter aus der Satzart 100 im Berichtsjahr, [de] Alter aus der Satzart 100 im Berichtsjahr
     */
    public static String getRulesCritMrsaAgeTooltip1() {
        return get(RULES_CRIT_MRSA_AGE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AGE_TOOLTIP_2
     * SQLite key: rules_crit_mrsa_age_tooltip_2
     * [en] Format: ganze Zahl, bis zu 3stellig
     * [de] Format: ganze Zahl, bis zu 3stellig</pre>
     * @return [en] Format: ganze Zahl, bis zu 3stellig, [de] Format: ganze Zahl, bis zu 3stellig
     */
    public static String getRulesCritMrsaAgeTooltip2() {
        return get(RULES_CRIT_MRSA_AGE_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AGG_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_agg_tooltip_1
     * [en] Vom BVA festgelegte Alters- und Geschlechtsgruppen
     * [de] Vom BVA festgelegte Alters- und Geschlechtsgruppen</pre>
     * @return [en] Vom BVA festgelegte Alters- und Geschlechtsgruppen, [de] Vom BVA festgelegte Alters- und Geschlechtsgruppen
     */
    public static String getRulesCritMrsaAggTooltip1() {
        return get(RULES_CRIT_MRSA_AGG_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AGG_TOOLTIP_2
     * SQLite key: rules_crit_mrsa_agg_tooltip_2
     * [en] Format: 1-bis 2-stellig, ganze Zahl (Beispiel 23)
     * [de] Format: 1-bis 2-stellig, ganze Zahl (Beispiel 23)</pre>
     * @return [en] Format: 1-bis 2-stellig, ganze Zahl (Beispiel 23), [de] Format: 1-bis 2-stellig, ganze Zahl (Beispiel 23)
     */
    public static String getRulesCritMrsaAggTooltip2() {
        return get(RULES_CRIT_MRSA_AGG_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_2
     * SQLite key: rules_crit_mrsa_ambulant_diag_qualification_tooltip_2
     * [en] A - ausgeschlossene Doagnose
     * [de] A - ausgeschlossene Doagnose</pre>
     * @return [en] A - ausgeschlossene Doagnose, [de] A - ausgeschlossene Doagnose
     */
    public static String getRulesCritMrsaAmbulantDiagQualificationTooltip2() {
        return get(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_3
     * SQLite key: rules_crit_mrsa_ambulant_diag_qualification_tooltip_3
     * [en] G - gesicherte Diagnose
     * [de] G - gesicherte Diagnose</pre>
     * @return [en] G - gesicherte Diagnose, [de] G - gesicherte Diagnose
     */
    public static String getRulesCritMrsaAmbulantDiagQualificationTooltip3() {
        return get(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_4
     * SQLite key: rules_crit_mrsa_ambulant_diag_qualification_tooltip_4
     * [en] V - Verdachtsdiagnose
     * [de] V - Verdachtsdiagnose</pre>
     * @return [en] V - Verdachtsdiagnose, [de] V - Verdachtsdiagnose
     */
    public static String getRulesCritMrsaAmbulantDiagQualificationTooltip4() {
        return get(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_5
     * SQLite key: rules_crit_mrsa_ambulant_diag_qualification_tooltip_5
     * [en] Z - Zustand nach der betreffenden Diagnose
     * [de] Z - Zustand nach der betreffenden Diagnose</pre>
     * @return [en] Z - Zustand nach der betreffenden Diagnose, [de] Z - Zustand nach der betreffenden Diagnose
     */
    public static String getRulesCritMrsaAmbulantDiagQualificationTooltip5() {
        return get(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_6
     * SQLite key: rules_crit_mrsa_ambulant_diag_qualification_tooltip_6
     * [en] 0 - sonstige
     * [de] 0 - sonstige</pre>
     * @return [en] 0 - sonstige, [de] 0 - sonstige
     */
    public static String getRulesCritMrsaAmbulantDiagQualificationTooltip6() {
        return get(RULES_CRIT_MRSA_AMBULANT_DIAG_QUALIFICATION_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_2
     * SQLite key: rules_crit_mrsa_ambulant_diag_quater_tooltip2
     * [en] 1 - 1. Quartal
     * [de] 1 - 1. Quartal</pre>
     * @return [en] 1 - 1. Quartal, [de] 1 - 1. Quartal
     */
    public static String getRulesCritMrsaAmbulantDiagQuaterTooltip_2() {
        return get(RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_3
     * SQLite key: rules_crit_mrsa_ambulant_diag_quater_tooltip3
     * [en] 2 - 2. Quartal
     * [de] 2 - 2. Quartal</pre>
     * @return [en] 2 - 2. Quartal, [de] 2 - 2. Quartal
     */
    public static String getRulesCritMrsaAmbulantDiagQuaterTooltip_3() {
        return get(RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_4
     * SQLite key: rules_crit_mrsa_ambulant_diag_quater_tooltip4
     * [en] 3 - 3. Quartal
     * [de] 3 - 3. Quartal</pre>
     * @return [en] 3 - 3. Quartal, [de] 3 - 3. Quartal
     */
    public static String getRulesCritMrsaAmbulantDiagQuaterTooltip_4() {
        return get(RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_5
     * SQLite key: rules_crit_mrsa_ambulant_diag_quater_tooltip5
     * [en] 4 - 4. Quartal
     * [de] 4 - 4. Quartal</pre>
     * @return [en] 4 - 4. Quartal, [de] 4 - 4. Quartal
     */
    public static String getRulesCritMrsaAmbulantDiagQuaterTooltip_5() {
        return get(RULES_CRIT_MRSA_AMBULANT_DIAG_QUATER_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AMBULANT_DISEASE_NUMBER_TOOLTIP
     * SQLite key: rules_crit_mrsa_ambulant_disease_number_tooltip
     * [en] Krankheitsgruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden
     * [de] Krankheitsgruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden</pre>
     * @return [en] Krankheitsgruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden, [de] Krankheitsgruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden
     */
    public static String getRulesCritMrsaAmbulantDiseaseNumberTooltip() {
        return get(RULES_CRIT_MRSA_AMBULANT_DISEASE_NUMBER_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AMBULANT_DXG_TOOLTIP
     * SQLite key: rules_crit_mrsa_ambulant_dxg_tooltip
     * [en] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden
     * [de] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden</pre>
     * @return [en] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden, [de] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden
     */
    public static String getRulesCritMrsaAmbulantDxgTooltip() {
        return get(RULES_CRIT_MRSA_AMBULANT_DXG_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_AMBULANT_HMG_REL_DXG_TOOLTIP
     * SQLite key: rules_crit_mrsa_ambulant_hmg_rel_dxg_tooltip
     * [en] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden, die auch zu einer HMG führt
     * [de] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden, die auch zu einer HMG führt</pre>
     * @return [en] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden, die auch zu einer HMG führt, [de] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden, die auch zu einer HMG führt
     */
    public static String getRulesCritMrsaAmbulantHmgRelDxgTooltip() {
        return get(RULES_CRIT_MRSA_AMBULANT_HMG_REL_DXG_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_BLOOD_PURIFICATION_EXPENDURE_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_blood_purification_expendure_tooltip_1
     * [en] Summe aller Ausgaben für Sachkosten bei extrakorporaler Blutreinigung zu einem Versicherten (SA 700)
     * [de] Summe aller Ausgaben für Sachkosten bei extrakorporaler Blutreinigung zu einem Versicherten (SA 700)</pre>
     * @return [en] Summe aller Ausgaben für Sachkosten bei extrakorporaler Blutreinigung zu einem Versicherten (SA 700), [de] Summe aller Ausgaben für Sachkosten bei extrakorporaler Blutreinigung zu einem Versicherten (SA 700)
     */
    public static String getRulesCritMrsaBloodPurificationExpendureTooltip1() {
        return get(RULES_CRIT_MRSA_BLOOD_PURIFICATION_EXPENDURE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_DANTIST_EXPENDURE_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_dantist_expendure_tooltip_1
     * [en] Summe aller Ausgaben für Zahnärzte zu einem Versicherten (SA 700)
     * [de] Summe aller Ausgaben für Zahnärzte zu einem Versicherten (SA 700)</pre>
     * @return [en] Summe aller Ausgaben für Zahnärzte zu einem Versicherten (SA 700), [de] Summe aller Ausgaben für Zahnärzte zu einem Versicherten (SA 700)
     */
    public static String getRulesCritMrsaDantistExpendureTooltip1() {
        return get(RULES_CRIT_MRSA_DANTIST_EXPENDURE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_DDD_TOOLTIP
     * SQLite key: rules_crit_mrsa_ddd_tooltip
     * [en] Daily Defined Dosis zu einem Medikament anhand PZN bzw. ATC
     * [de] Daily Defined Dosis zu einem Medikament anhand PZN bzw. ATC</pre>
     * @return [en] Daily Defined Dosis zu einem Medikament anhand PZN bzw. ATC, [de] Daily Defined Dosis zu einem Medikament anhand PZN bzw. ATC
     */
    public static String getRulesCritMrsaDddTooltip() {
        return get(RULES_CRIT_MRSA_DDD_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_DEAD_TOOLTIP_3
     * SQLite key: rules_crit_mrsa_dead_tooltip_3
     * [en] 1 - verstorben
     * [de] 1 - verstorben</pre>
     * @return [en] 1 - verstorben, [de] 1 - verstorben
     */
    public static String getRulesCritMrsaDeadTooltip3() {
        return get(RULES_CRIT_MRSA_DEAD_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_DEAD_TOOLTIP_4
     * SQLite key: rules_crit_mrsa_dead_tooltip_4
     * [en] 0 - sonst
     * [de] 0 - sonst</pre>
     * @return [en] 0 - sonst, [de] 0 - sonst
     */
    public static String getRulesCritMrsaDeadTooltip4() {
        return get(RULES_CRIT_MRSA_DEAD_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_DIAG_AMBULANT_HMG_REL_TOOLTIP_1_3
     * SQLite key: rules_crit_mrsa_diag_ambulant_hmg_rel_tooltip_1_3
     * [en] 1 - vorhanden
     * [de] 1 - vorhanden</pre>
     * @return [en] 1 - vorhanden, [de] 1 - vorhanden
     */
    public static String getRulesCritMrsaDiagAmbulantHmgRelTooltip13() {
        return get(RULES_CRIT_MRSA_DIAG_AMBULANT_HMG_REL_TOOLTIP_1_3).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_DIAG_AMBULANT_HMG_REL_TOOLTIP_1_4
     * SQLite key: rules_crit_mrsa_diag_ambulant_hmg_rel_tooltip_1_4
     * [en] 0 - nicht vorhanden
     * [de] 0 - nicht vorhanden</pre>
     * @return [en] 0 - nicht vorhanden, [de] 0 - nicht vorhanden
     */
    public static String getRulesCritMrsaDiagAmbulantHmgRelTooltip14() {
        return get(RULES_CRIT_MRSA_DIAG_AMBULANT_HMG_REL_TOOLTIP_1_4).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_DIAG_AMBULANT_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_diag_ambulant_tooltip_1
     * [en] Diagnosen, die von einem niedergelassenen Arzt kodiert worden sind aus der Satzart 600. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
     * [de] Diagnosen, die von einem niedergelassenen Arzt kodiert worden sind aus der Satzart 600. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code</pre>
     * @return [en] Diagnosen, die von einem niedergelassenen Arzt kodiert worden sind aus der Satzart 600. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code, [de] Diagnosen, die von einem niedergelassenen Arzt kodiert worden sind aus der Satzart 600. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
     */
    public static String getRulesCritMrsaDiagAmbulantTooltip1() {
        return get(RULES_CRIT_MRSA_DIAG_AMBULANT_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_DIAG_HOSP_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_diag_hosp_tooltip_1
     * [en] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
     * [de] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code</pre>
     * @return [en] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code, [de] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
     */
    public static String getRulesCritMrsaDiagHospTooltip1() {
        return get(RULES_CRIT_MRSA_DIAG_HOSP_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_DMP_DAYS_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_dmp_days_tooltip_1
     * [en] DMP-Tage aus Satzart 10
     * [de] DMP-Tage aus Satzart 10</pre>
     * @return [en] DMP-Tage aus Satzart 10, [de] DMP-Tage aus Satzart 10
     */
    public static String getRulesCritMrsaDmpDaysTooltip1() {
        return get(RULES_CRIT_MRSA_DMP_DAYS_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_DMP_DAYS_TOOLTIP_2
     * SQLite key: rules_crit_mrsa_dmp_days_tooltip_2
     * [en] Anzahl der DMP-Versichertentage des Versicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV
     * [de] Anzahl der DMP-Versichertentage des Versicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV</pre>
     * @return [en] Anzahl der DMP-Versichertentage des Versicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV, [de] Anzahl der DMP-Versichertentage des Versicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV
     */
    public static String getRulesCritMrsaDmpDaysTooltip2() {
        return get(RULES_CRIT_MRSA_DMP_DAYS_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_DOC_EXPENDURE_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_doc_expendure_tooltip_1
     * [en] Summe aller Ausgaben für Ärzte zu einem Versicherten (SA 700)
     * [de] Summe aller Ausgaben für Ärzte zu einem Versicherten (SA 700)</pre>
     * @return [en] Summe aller Ausgaben für Ärzte zu einem Versicherten (SA 700), [de] Summe aller Ausgaben für Ärzte zu einem Versicherten (SA 700)
     */
    public static String getRulesCritMrsaDocExpendureTooltip1() {
        return get(RULES_CRIT_MRSA_DOC_EXPENDURE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_DRUGSTORE_EXPENDURE_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_drugstore_expendure_tooltip_1
     * [en] Summe aller Ausgaben für Apotheken zu einem Versicherten (SA 700)
     * [de] Summe aller Ausgaben für Apotheken zu einem Versicherten (SA 700)</pre>
     * @return [en] Summe aller Ausgaben für Apotheken zu einem Versicherten (SA 700), [de] Summe aller Ausgaben für Apotheken zu einem Versicherten (SA 700)
     */
    public static String getRulesCritMrsaDrugstoreExpendureTooltip1() {
        return get(RULES_CRIT_MRSA_DRUGSTORE_EXPENDURE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_DXG_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_dxg_tooltip_1
     * [en] Grundlage der Klassifikation ist die Gruppierung von ICD-Diagnosen zu klinisch homogenen diagnostischen Gruppen - den DxGruppen (DxG).
     * [de] Grundlage der Klassifikation ist die Gruppierung von ICD-Diagnosen zu klinisch homogenen diagnostischen Gruppen - den DxGruppen (DxG).</pre>
     * @return [en] Grundlage der Klassifikation ist die Gruppierung von ICD-Diagnosen zu klinisch homogenen diagnostischen Gruppen - den DxGruppen (DxG)., [de] Grundlage der Klassifikation ist die Gruppierung von ICD-Diagnosen zu klinisch homogenen diagnostischen Gruppen - den DxGruppen (DxG).
     */
    public static String getRulesCritMrsaDxgTooltip1() {
        return get(RULES_CRIT_MRSA_DXG_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_DXG_TOOLTIP_2
     * SQLite key: rules_crit_mrsa_dxg_tooltip_2
     * [en] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 464)
     * [de] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 464)</pre>
     * @return [en] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 464), [de] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 464)
     */
    public static String getRulesCritMrsaDxgTooltip2() {
        return get(RULES_CRIT_MRSA_DXG_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_EMG_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_emg_tooltip_1
     * [en] Vom BVA festgelegte Erwerbsminderungsgruppen
     * [de] Vom BVA festgelegte Erwerbsminderungsgruppen</pre>
     * @return [en] Vom BVA festgelegte Erwerbsminderungsgruppen, [de] Vom BVA festgelegte Erwerbsminderungsgruppen
     */
    public static String getRulesCritMrsaEmgTooltip1() {
        return get(RULES_CRIT_MRSA_EMG_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_EMG_TOOLTIP_2
     * SQLite key: rules_crit_mrsa_emg_tooltip_2
     * [en] Format: 1-stellig, ganze Zahl (Beispiel: 3)
     * [de] Format: 1-stellig, ganze Zahl (Beispiel: 3)</pre>
     * @return [en] Format: 1-stellig, ganze Zahl (Beispiel: 3), [de] Format: 1-stellig, ganze Zahl (Beispiel: 3)
     */
    public static String getRulesCritMrsaEmgTooltip2() {
        return get(RULES_CRIT_MRSA_EMG_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_FORMAT_MONEY_TOOLTIP
     * SQLite key: rules_crit_mrsa_format_money_tooltip
     * [en] Format: bis zu 7stellige Zahl mit 2 Nachkommastellen (Beispiel: 5895,25)
     * [de] Format: bis zu 7stellige Zahl mit 2 Nachkommastellen (Beispiel: 5895,25)</pre>
     * @return [en] Format: bis zu 7stellige Zahl mit 2 Nachkommastellen (Beispiel: 5895,25), [de] Format: bis zu 7stellige Zahl mit 2 Nachkommastellen (Beispiel: 5895,25)
     */
    public static String getRulesCritMrsaFormatMoneyTooltip() {
        return get(RULES_CRIT_MRSA_FORMAT_MONEY_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_FULL_EXPENDURE_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_full_expendure_tooltip_1
     * [en] Summe aller Ausgaben zu einem Versicherten (SA 700)
     * [de] Summe aller Ausgaben zu einem Versicherten (SA 700)</pre>
     * @return [en] Summe aller Ausgaben zu einem Versicherten (SA 700), [de] Summe aller Ausgaben zu einem Versicherten (SA 700)
     */
    public static String getRulesCritMrsaFullExpendureTooltip1() {
        return get(RULES_CRIT_MRSA_FULL_EXPENDURE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_FULL_REVENUE_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_full_revenue_tooltip_1
     * [en] Summe aller Erlöse aus den HMGs, AGGs, EMGs
     * [de] Summe aller Erlöse aus den HMGs, AGGs, EMGs</pre>
     * @return [en] Summe aller Erlöse aus den HMGs, AGGs, EMGs, [de] Summe aller Erlöse aus den HMGs, AGGs, EMGs
     */
    public static String getRulesCritMrsaFullRevenueTooltip1() {
        return get(RULES_CRIT_MRSA_FULL_REVENUE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_HMG_NUMBER_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_hmg_number_tooltip_1
     * [en] Anzahl aller ermittelten HMGs unter Berücksichtigung der Hierarchisierung
     * [de] Anzahl aller ermittelten HMGs unter Berücksichtigung der Hierarchisierung</pre>
     * @return [en] Anzahl aller ermittelten HMGs unter Berücksichtigung der Hierarchisierung, [de] Anzahl aller ermittelten HMGs unter Berücksichtigung der Hierarchisierung
     */
    public static String getRulesCritMrsaHmgNumberTooltip1() {
        return get(RULES_CRIT_MRSA_HMG_NUMBER_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_HMG_NUMBER_TOOLTIP_2
     * SQLite key: rules_crit_mrsa_hmg_number_tooltip_2
     * [en] Format: ganze Zahl, bis zu 3stellig (Beispiel: 25)
     * [de] Format: ganze Zahl, bis zu 3stellig (Beispiel: 25)</pre>
     * @return [en] Format: ganze Zahl, bis zu 3stellig (Beispiel: 25), [de] Format: ganze Zahl, bis zu 3stellig (Beispiel: 25)
     */
    public static String getRulesCritMrsaHmgNumberTooltip2() {
        return get(RULES_CRIT_MRSA_HMG_NUMBER_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_HMG_TOOLTIP_2
     * SQLite key: rules_crit_mrsa_hmg_tooltip_2
     * [en] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 72)
     * [de] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 72)</pre>
     * @return [en] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 72), [de] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 72)
     */
    public static String getRulesCritMrsaHmgTooltip2() {
        return get(RULES_CRIT_MRSA_HMG_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_HOSP_DISEASE_NUMBER_TOOLTIP
     * SQLite key: rules_crit_mrsa_hosp_disease_number_tooltip
     * [en] Krankheitsgruppe,  die anhand einer ICD von einem Krankenhaus kodiert worden ist
     * [de] Krankheitsgruppe,  die anhand einer ICD von einem Krankenhaus kodiert worden ist</pre>
     * @return [en] Krankheitsgruppe,  die anhand einer ICD von einem Krankenhaus kodiert worden ist, [de] Krankheitsgruppe,  die anhand einer ICD von einem Krankenhaus kodiert worden ist
     */
    public static String getRulesCritMrsaHospDiseaseNumberTooltip() {
        return get(RULES_CRIT_MRSA_HOSP_DISEASE_NUMBER_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_HOSP_DXG_TOOLTIP
     * SQLite key: rules_crit_mrsa_hosp_dxg_tooltip
     * [en] Diagnosegruppe, die anhand einer ICD von einem Krankenhaus kodiert worden sind
     * [de] Diagnosegruppe, die anhand einer ICD von einem Krankenhaus kodiert worden sind</pre>
     * @return [en] Diagnosegruppe, die anhand einer ICD von einem Krankenhaus kodiert worden sind, [de] Diagnosegruppe, die anhand einer ICD von einem Krankenhaus kodiert worden sind
     */
    public static String getRulesCritMrsaHospDxgTooltip() {
        return get(RULES_CRIT_MRSA_HOSP_DXG_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_HOSP_EXPENDURE_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_hosp_expendure_tooltip_1
     * [en] Summe aller Ausgaben für KH zu einem Versicherten (SA 700)
     * [de] Summe aller Ausgaben für KH zu einem Versicherten (SA 700)</pre>
     * @return [en] Summe aller Ausgaben für KH zu einem Versicherten (SA 700), [de] Summe aller Ausgaben für KH zu einem Versicherten (SA 700)
     */
    public static String getRulesCritMrsaHospExpendureTooltip1() {
        return get(RULES_CRIT_MRSA_HOSP_EXPENDURE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_HOSP_HMG_REL_DXG_TOOLTIP
     * SQLite key: rules_crit_mrsa_hosp_hmg_rel_dxg_tooltip
     * [en] Diagnosengruppe, die durch eine ICD von einem Krankenhaus kodiert worden ist, die auch zu einer HMG führt
     * [de] Diagnosengruppe, die durch eine ICD von einem Krankenhaus kodiert worden ist, die auch zu einer HMG führt</pre>
     * @return [en] Diagnosengruppe, die durch eine ICD von einem Krankenhaus kodiert worden ist, die auch zu einer HMG führt, [de] Diagnosengruppe, die durch eine ICD von einem Krankenhaus kodiert worden ist, die auch zu einer HMG führt
     */
    public static String getRulesCritMrsaHospHmgRelDxgTooltip() {
        return get(RULES_CRIT_MRSA_HOSP_HMG_REL_DXG_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_INSURANCE_DAYS_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_insurance_days_tooltip_1
     * [en] Versichertentage aus Satzart 100
     * [de] Versichertentage aus Satzart 100</pre>
     * @return [en] Versichertentage aus Satzart 100, [de] Versichertentage aus Satzart 100
     */
    public static String getRulesCritMrsaInsuranceDaysTooltip1() {
        return get(RULES_CRIT_MRSA_INSURANCE_DAYS_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_INSURANCE_DAYS_TOOLTIP_2
     * SQLite key: rules_crit_mrsa_insurance_days_tooltip_2
     * [en] Versichertentage des Ver-sicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV
     * [de] Versichertentage des Ver-sicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV</pre>
     * @return [en] Versichertentage des Ver-sicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV, [de] Versichertentage des Ver-sicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV
     */
    public static String getRulesCritMrsaInsuranceDaysTooltip2() {
        return get(RULES_CRIT_MRSA_INSURANCE_DAYS_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_MEDGROUP_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_medgroup_tooltip_1
     * [en] 80 RSA relevante Krankheiten, die Von Bundesversicherungsamt definiert wurden. 3799 ICD-10 Codes wurden den Krankheiten zugeordnet (24_Anhang_4 der BVA Festlegungen)
     * [de] 80 RSA relevante Krankheiten, die Von Bundesversicherungsamt definiert wurden. 3799 ICD-10 Codes wurden den Krankheiten zugeordnet (24_Anhang_4 der BVA Festlegungen)</pre>
     * @return [en] 80 RSA relevante Krankheiten, die Von Bundesversicherungsamt definiert wurden. 3799 ICD-10 Codes wurden den Krankheiten zugeordnet (24_Anhang_4 der BVA Festlegungen), [de] 80 RSA relevante Krankheiten, die Von Bundesversicherungsamt definiert wurden. 3799 ICD-10 Codes wurden den Krankheiten zugeordnet (24_Anhang_4 der BVA Festlegungen)
     */
    public static String getRulesCritMrsaMedgroupTooltip1() {
        return get(RULES_CRIT_MRSA_MEDGROUP_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_MEDGROUP_TOOLTIP_2
     * SQLite key: rules_crit_mrsa_medgroup_tooltip_2
     * [en] Format: 1 bis 2stellig, ganze Zahl (Beispiel: 18)
     * [de] Format: 1 bis 2stellig, ganze Zahl (Beispiel: 18)</pre>
     * @return [en] Format: 1 bis 2stellig, ganze Zahl (Beispiel: 18), [de] Format: 1 bis 2stellig, ganze Zahl (Beispiel: 18)
     */
    public static String getRulesCritMrsaMedgroupTooltip2() {
        return get(RULES_CRIT_MRSA_MEDGROUP_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_OTHER_SERVICES_EXPENDURE_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_other_services_expendure_tooltip_1
     * [en] Summe aller Ausgaben für Heil- und Hilfsmittel zu einem Versicherten (SA 700)
     * [de] Summe aller Ausgaben für Heil- und Hilfsmittel zu einem Versicherten (SA 700)</pre>
     * @return [en] Summe aller Ausgaben für Heil- und Hilfsmittel zu einem Versicherten (SA 700), [de] Summe aller Ausgaben für Heil- und Hilfsmittel zu einem Versicherten (SA 700)
     */
    public static String getRulesCritMrsaOtherServicesExpendureTooltip1() {
        return get(RULES_CRIT_MRSA_OTHER_SERVICES_EXPENDURE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_PUCKNUMBER_TOOLTIP
     * SQLite key: rules_crit_mrsa_pucknumber_tooltip
     * [en] Anzahl der Packungen zu einem Medikament
     * [de] Anzahl der Packungen zu einem Medikament</pre>
     * @return [en] Anzahl der Packungen zu einem Medikament, [de] Anzahl der Packungen zu einem Medikament
     */
    public static String getRulesCritMrsaPucknumberTooltip() {
        return get(RULES_CRIT_MRSA_PUCKNUMBER_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_PZNCODE_TOOLTIP_2
     * SQLite key: rules_crit_mrsa_pzncode_tooltip_2
     * [en] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können.
     * [de] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können.</pre>
     * @return [en] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können., [de] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können.
     */
    public static String getRulesCritMrsaPzncodeTooltip2() {
        return get(RULES_CRIT_MRSA_PZNCODE_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2
     * SQLite key: rules_crit_mrsa_pzndosage_tooltip_2
     * [en] Format: Fließkommazahl (Beispiel: 2.5)
     * [de] Format: Fließkommazahl (Beispiel: 2.5)</pre>
     * ATTENTION this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_31_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_32_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_33_GESAMTPZNDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_43_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_44_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_45_GESAMTPZNDOSIERUNG!
     * @return [en] Format: Fließkommazahl (Beispiel: 2.5), [de] Format: Fließkommazahl (Beispiel: 2.5)
     */
    public static String getRulesCritMrsaPzndosageTooltip2() {
        return get(RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_REDUCTION_EARNING_CAPACITY_TOOLTIP
     * SQLite key: rules_crit_mrsa_reduction_earning_capacity_tooltip
     * [en] Anzahl der EMR-Versichertentage im Berichtsjahr
     * [de] Anzahl der EMR-Versichertentage im Berichtsjahr</pre>
     * @return [en] Anzahl der EMR-Versichertentage im Berichtsjahr, [de] Anzahl der EMR-Versichertentage im Berichtsjahr
     */
    public static String getRulesCritMrsaReductionEarningCapacityTooltip() {
        return get(RULES_CRIT_MRSA_REDUCTION_EARNING_CAPACITY_TOOLTIP).value;
    }

    /**
     * <pre>RULES_CRIT_MRSA_SUPEREROGATION_DMP_EXPENDURE_TOOLTIP_1
     * SQLite key: rules_crit_mrsa_supererogation_dmp_expendure_tooltip_1
     * [en] Summe aller Ausgaben für Mehrleistungen DMP zu einem Versicherten (SA 700)
     * [de] Summe aller Ausgaben für Mehrleistungen DMP zu einem Versicherten (SA 700)</pre>
     * @return [en] Summe aller Ausgaben für Mehrleistungen DMP zu einem Versicherten (SA 700), [de] Summe aller Ausgaben für Mehrleistungen DMP zu einem Versicherten (SA 700)
     */
    public static String getRulesCritMrsaSupererogationDmpExpendureTooltip1() {
        return get(RULES_CRIT_MRSA_SUPEREROGATION_DMP_EXPENDURE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_PCCL_TOOLTIP_10
     * SQLite key: rules_crit_pccl_tooltip_10
     * [en] 6 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016
     * [de] 6 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016</pre>
     * @return [en] 6 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016, [de] 6 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016
     */
    public static String getRulesCritPcclTooltip10() {
        return get(RULES_CRIT_PCCL_TOOLTIP_10).value;
    }

    /**
     * <pre>RULES_CRIT_PCCL_TOOLTIP_2
     * SQLite key: rules_crit_pccl_tooltip_2
     * [en] 0 - keine Komplikationen und Komorbiditäten (CC)
     * [de] 0 - keine Komplikationen und Komorbiditäten (CC)</pre>
     * @return [en] 0 - keine Komplikationen und Komorbiditäten (CC), [de] 0 - keine Komplikationen und Komorbiditäten (CC)
     */
    public static String getRulesCritPcclTooltip2() {
        return get(RULES_CRIT_PCCL_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_PCCL_TOOLTIP_3
     * SQLite key: rules_crit_pccl_tooltip_3
     * [en] 1 - leichte Komplikationen und Komorbiditäten (CC)
     * [de] 1 - leichte Komplikationen und Komorbiditäten (CC)</pre>
     * @return [en] 1 - leichte Komplikationen und Komorbiditäten (CC), [de] 1 - leichte Komplikationen und Komorbiditäten (CC)
     */
    public static String getRulesCritPcclTooltip3() {
        return get(RULES_CRIT_PCCL_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_PCCL_TOOLTIP_4
     * SQLite key: rules_crit_pccl_tooltip_4
     * [en] 2 - mäßig schwere Komplikationen und Komorbiditäten (CC)
     * [de] 2 - mäßig schwere Komplikationen und Komorbiditäten (CC)</pre>
     * @return [en] 2 - mäßig schwere Komplikationen und Komorbiditäten (CC), [de] 2 - mäßig schwere Komplikationen und Komorbiditäten (CC)
     */
    public static String getRulesCritPcclTooltip4() {
        return get(RULES_CRIT_PCCL_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_PCCL_TOOLTIP_5
     * SQLite key: rules_crit_pccl_tooltip_5
     * [en] 3 - schwere Komplikationen und Komorbiditäten (CC)
     * [de] 3 - schwere Komplikationen und Komorbiditäten (CC)</pre>
     * @return [en] 3 - schwere Komplikationen und Komorbiditäten (CC), [de] 3 - schwere Komplikationen und Komorbiditäten (CC)
     */
    public static String getRulesCritPcclTooltip5() {
        return get(RULES_CRIT_PCCL_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_PCCL_TOOLTIP_6
     * SQLite key: rules_crit_pccl_tooltip_6
     * [en] 4 - äußerst schwere Komplikationen und Komorbiditäten (CC)
     * [de] 4 - äußerst schwere Komplikationen und Komorbiditäten (CC)</pre>
     * @return [en] 4 - äußerst schwere Komplikationen und Komorbiditäten (CC), [de] 4 - äußerst schwere Komplikationen und Komorbiditäten (CC)
     */
    public static String getRulesCritPcclTooltip6() {
        return get(RULES_CRIT_PCCL_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_PCCL_TOOLTIP_9
     * SQLite key: rules_crit_pccl_tooltip_9
     * [en] 5 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016
     * [de] 5 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016</pre>
     * @return [en] 5 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016, [de] 5 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016
     */
    public static String getRulesCritPcclTooltip9() {
        return get(RULES_CRIT_PCCL_TOOLTIP_9).value;
    }

    /**
     * <pre>RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_3
     * SQLite key: rules_crit_princ_diag_loc_tooltip_3
     * [en] R(1) - Rechts
     * [de] R(1) - Rechts</pre>
     * @return [en] R(1) - Rechts, [de] R(1) - Rechts
     */
    public static String getRulesCritPrincDiagLocTooltip3() {
        return get(RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_4
     * SQLite key: rules_crit_princ_diag_loc_tooltip_4
     * [en] L(2) - Links
     * [de] L(2) - Links</pre>
     * @return [en] L(2) - Links, [de] L(2) - Links
     */
    public static String getRulesCritPrincDiagLocTooltip4() {
        return get(RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_5
     * SQLite key: rules_crit_princ_diag_loc_tooltip_5
     * [en] B(3) - Beidseitig
     * [de] B(3) - Beidseitig</pre>
     * @return [en] B(3) - Beidseitig, [de] B(3) - Beidseitig
     */
    public static String getRulesCritPrincDiagLocTooltip5() {
        return get(RULES_CRIT_PRINC_DIAG_LOC_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_PSYCHO_STATE_TOOLTIP_2
     * SQLite key: rules_crit_psycho_state_tooltip_2
     * [en] 1 - freiwillig
     * [de] 1 - freiwillig</pre>
     * @return [en] 1 - freiwillig, [de] 1 - freiwillig
     */
    public static String getRulesCritPsychoStateTooltip2() {
        return get(RULES_CRIT_PSYCHO_STATE_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_PSYCHO_STATE_TOOLTIP_3
     * SQLite key: rules_crit_psycho_state_tooltip_3
     * [en] 2 - unfreiwillig
     * [de] 2 - unfreiwillig</pre>
     * @return [en] 2 - unfreiwillig, [de] 2 - unfreiwillig
     */
    public static String getRulesCritPsychoStateTooltip3() {
        return get(RULES_CRIT_PSYCHO_STATE_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_RECHNUNG_ART_TOOLTIP_3
     * SQLite key: rules_crit_rechnung_art_tooltip_3
     * [en] 11 - Zwischenrechnung
     * [de] 11 - Zwischenrechnung</pre>
     * @return [en] 11 - Zwischenrechnung, [de] 11 - Zwischenrechnung
     */
    public static String getRulesCritRechnungArtTooltip3() {
        return get(RULES_CRIT_RECHNUNG_ART_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_RECHNUNG_ART_TOOLTIP_4
     * SQLite key: rules_crit_rechnung_art_tooltip_4
     * [en] 12 - Schlußrechnung
     * [de] 12 - Schlußrechnung</pre>
     * @return [en] 12 - Schlußrechnung, [de] 12 - Schlußrechnung
     */
    public static String getRulesCritRechnungArtTooltip4() {
        return get(RULES_CRIT_RECHNUNG_ART_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_RECHNUNG_ART_TOOLTIP_5
     * SQLite key: rules_crit_rechnung_art_tooltip_5
     * [en] 13 - Nachtragsrechnung
     * [de] 13 - Nachtragsrechnung</pre>
     * @return [en] 13 - Nachtragsrechnung, [de] 13 - Nachtragsrechnung
     */
    public static String getRulesCritRechnungArtTooltip5() {
        return get(RULES_CRIT_RECHNUNG_ART_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_SK_TOOLTIP_1
     * SQLite key: rules_crit_sk_tooltip_1
     * [en] 'PRE' - Prä-Strukturkategorie (PEPP P001Z-PF02Z)
     * [de] 'PRE' - Prä-Strukturkategorie (PEPP P001Z-PF02Z)</pre>
     * @return [en] 'PRE' - Prä-Strukturkategorie (PEPP P001Z-PF02Z), [de] 'PRE' - Prä-Strukturkategorie (PEPP P001Z-PF02Z)
     */
    public static String getRulesCritSkTooltip1() {
        return get(RULES_CRIT_SK_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_CRIT_SK_TOOLTIP_2
     * SQLite key: rules_crit_sk_tooltip_2
     * [en] 'TKJ' - Kinder- und Jugendpsychiatrie, teilstationär (PEPP TK04Z-TK99Z)
     * [de] 'TKJ' - Kinder- und Jugendpsychiatrie, teilstationär (PEPP TK04Z-TK99Z)</pre>
     * @return [en] 'TKJ' - Kinder- und Jugendpsychiatrie, teilstationär (PEPP TK04Z-TK99Z), [de] 'TKJ' - Kinder- und Jugendpsychiatrie, teilstationär (PEPP TK04Z-TK99Z)
     */
    public static String getRulesCritSkTooltip2() {
        return get(RULES_CRIT_SK_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_CRIT_SK_TOOLTIP_3
     * SQLite key: rules_crit_sk_tooltip_3
     * [en] 'TPO' - Psychosomatik, teilstationär (PEPP TP20Z-TP99Z)
     * [de] 'TPO' - Psychosomatik, teilstationär (PEPP TP20Z-TP99Z)</pre>
     * @return [en] 'TPO' - Psychosomatik, teilstationär (PEPP TP20Z-TP99Z), [de] 'TPO' - Psychosomatik, teilstationär (PEPP TP20Z-TP99Z)
     */
    public static String getRulesCritSkTooltip3() {
        return get(RULES_CRIT_SK_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_CRIT_SK_TOOLTIP_4
     * SQLite key: rules_crit_sk_tooltip_4
     * [en] 'TPY' - Psychiatrie, teilstationär (PEPP TA02Z-TA99Z)
     * [de] 'TPY' - Psychiatrie, teilstationär (PEPP TA02Z-TA99Z)</pre>
     * @return [en] 'TPY' - Psychiatrie, teilstationär (PEPP TA02Z-TA99Z), [de] 'TPY' - Psychiatrie, teilstationär (PEPP TA02Z-TA99Z)
     */
    public static String getRulesCritSkTooltip4() {
        return get(RULES_CRIT_SK_TOOLTIP_4).value;
    }

    /**
     * <pre>RULES_CRIT_SK_TOOLTIP_5
     * SQLite key: rules_crit_sk_tooltip_5
     * [en] 'PKJ' - Kinder- und Jugendpsychiatrie, vollstationär (PEPP PK01Z-PK99Z)
     * [de] 'PKJ' - Kinder- und Jugendpsychiatrie, vollstationär (PEPP PK01Z-PK99Z)</pre>
     * @return [en] 'PKJ' - Kinder- und Jugendpsychiatrie, vollstationär (PEPP PK01Z-PK99Z), [de] 'PKJ' - Kinder- und Jugendpsychiatrie, vollstationär (PEPP PK01Z-PK99Z)
     */
    public static String getRulesCritSkTooltip5() {
        return get(RULES_CRIT_SK_TOOLTIP_5).value;
    }

    /**
     * <pre>RULES_CRIT_SK_TOOLTIP_6
     * SQLite key: rules_crit_sk_tooltip_6
     * [en] 'PSO' - Psychosomatik, vollstationär (PEPP PP00Z-PP99Z)
     * [de] 'PSO' - Psychosomatik, vollstationär (PEPP PP00Z-PP99Z)</pre>
     * @return [en] 'PSO' - Psychosomatik, vollstationär (PEPP PP00Z-PP99Z), [de] 'PSO' - Psychosomatik, vollstationär (PEPP PP00Z-PP99Z)
     */
    public static String getRulesCritSkTooltip6() {
        return get(RULES_CRIT_SK_TOOLTIP_6).value;
    }

    /**
     * <pre>RULES_CRIT_SK_TOOLTIP_7
     * SQLite key: rules_crit_sk_tooltip_7
     * [en] 'PSY' - Psychiatrie, vollstationär (PEPP PA01A-PA99Z)
     * [de] 'PSY' - Psychiatrie, vollstationär (PEPP PA01A-PA99Z)</pre>
     * @return [en] 'PSY' - Psychiatrie, vollstationär (PEPP PA01A-PA99Z), [de] 'PSY' - Psychiatrie, vollstationär (PEPP PA01A-PA99Z)
     */
    public static String getRulesCritSkTooltip7() {
        return get(RULES_CRIT_SK_TOOLTIP_7).value;
    }

    /**
     * <pre>RULES_DIAGNOSELOKALISATION
     * SQLite key: rules_diagnoselokalisation
     * [en] DiagnoseLokalisation
     * [de] DiagnoseLokalisation</pre>
     * @return [en] DiagnoseLokalisation, [de] DiagnoseLokalisation
     */
    public static String getRulesDiagnoselokalisation() {
        return get(RULES_DIAGNOSELOKALISATION).value;
    }

    /**
     * <pre>RULES_DIAGNOSETYPE
     * SQLite key: rules_diagnosetype
     * [en] DiagnoseType
     * [de] DiagnoseType</pre>
     * @return [en] DiagnoseType, [de] DiagnoseType
     */
    public static String getRulesDiagnosetype() {
        return get(RULES_DIAGNOSETYPE).value;
    }

    /**
     * <pre>RULES_DOSIERUNGSEINHEIT
     * SQLite key: rules_dosierungseinheit
     * [en] Dosierungseinheit
     * [de] Dosierungseinheit</pre>
     * @return [en] Dosierungseinheit, [de] Dosierungseinheit
     */
    public static String getRulesDosierungseinheit() {
        return get(RULES_DOSIERUNGSEINHEIT).value;
    }

    /**
     * <pre>RULES_DRG
     * SQLite key: rules_drg
     * [en] DRG
     * [de] DRG</pre>
     * ATTENTION this value ('DRG') seems to be also defined under the key CASE_RESOLVE_DRG! this value ('DRG') seems to be also defined under the key CASE_TYPE_DRG! this value ('DRG') seems to be also defined under the key DRG! this value ('DRG') seems to be also defined under the key DRG_SHORTCUT! this value ('DRG') seems to be also defined under the key FEE_GROUP_DRG! this value ('DRG') seems to be also defined under the key ICD_TYPE_DRG!
     * @return [en] DRG, [de] DRG
     */
    public static String getRulesDrg() {
        return get(RULES_DRG).value;
    }

    /**
     * <pre>RULES_DRG_MDC
     * SQLite key: rules_drg_mdc
     * [en] MDC
     * [de] MDC</pre>
     * ATTENTION this value ('MDC') seems to be also defined under the key MDC!
     * @return [en] MDC, [de] MDC
     */
    public static String getRulesDrgMdc() {
        return get(RULES_DRG_MDC).value;
    }

    /**
     * <pre>RULES_DSA_PRIM_SEC_LIST_MODEL_DIAGNOSE
     * SQLite key: rules_dsaprimseclistmodel_diagnose
     * [en] Diagnose
     * [de] Diagnose</pre>
     * @return [en] Diagnose, [de] Diagnose
     */
    public static String getRulesDsaPrimSecListModelDiagnose() {
        return get(RULES_DSA_PRIM_SEC_LIST_MODEL_DIAGNOSE).value;
    }

    /**
     * <pre>RULES_EINWEISENDERARZT
     * SQLite key: rules_einweisenderarzt
     * [en] EinweisenderArzt
     * [de] EinweisenderArzt</pre>
     * @return [en] EinweisenderArzt, [de] EinweisenderArzt
     */
    public static String getRulesEinweisenderarzt() {
        return get(RULES_EINWEISENDERARZT).value;
    }

    /**
     * <pre>RULES_EINWEISENDESKRANKENHAUS
     * SQLite key: rules_einweisendeskrankenhaus
     * [en] EinweisendesKrankenhaus
     * [de] EinweisendesKrankenhaus</pre>
     * @return [en] EinweisendesKrankenhaus, [de] EinweisendesKrankenhaus
     */
    public static String getRulesEinweisendeskrankenhaus() {
        return get(RULES_EINWEISENDESKRANKENHAUS).value;
    }

    /**
     * <pre>RULES_ENTGELTABRECHNUNGBIS
     * SQLite key: rules_entgeltabrechnungbis
     * [en] EntgeltabrechnungBis
     * [de] EntgeltabrechnungBis</pre>
     * @return [en] EntgeltabrechnungBis, [de] EntgeltabrechnungBis
     */
    public static String getRulesEntgeltabrechnungbis() {
        return get(RULES_ENTGELTABRECHNUNGBIS).value;
    }

    /**
     * <pre>RULES_ENTGELTABRECHNUNGVON
     * SQLite key: rules_entgeltabrechnungvon
     * [en] EntgeltabrechnungVon
     * [de] EntgeltabrechnungVon</pre>
     * @return [en] EntgeltabrechnungVon, [de] EntgeltabrechnungVon
     */
    public static String getRulesEntgeltabrechnungvon() {
        return get(RULES_ENTGELTABRECHNUNGVON).value;
    }

    /**
     * <pre>RULES_ENTGELTANZAHLJEENTGELT
     * SQLite key: rules_entgeltanzahljeentgelt
     * [en] EntgeltanzahlJeEntgelt
     * [de] EntgeltanzahlJeEntgelt</pre>
     * @return [en] EntgeltanzahlJeEntgelt, [de] EntgeltanzahlJeEntgelt
     */
    public static String getRulesEntgeltanzahljeentgelt() {
        return get(RULES_ENTGELTANZAHLJEENTGELT).value;
    }

    /**
     * <pre>RULES_ENTGELTSUMME
     * SQLite key: rules_entgeltsumme
     * [en] EntgeltSumme
     * [de] EntgeltSumme</pre>
     * @return [en] EntgeltSumme, [de] EntgeltSumme
     */
    public static String getRulesEntgeltsumme() {
        return get(RULES_ENTGELTSUMME).value;
    }

    /**
     * <pre>RULES_ENTGELTSUMMEJEENTGELT
     * SQLite key: rules_entgeltsummejeentgelt
     * [en] EntgeltsummeJeEntgelt
     * [de] EntgeltsummeJeEntgelt</pre>
     * @return [en] EntgeltsummeJeEntgelt, [de] EntgeltsummeJeEntgelt
     */
    public static String getRulesEntgeltsummejeentgelt() {
        return get(RULES_ENTGELTSUMMEJEENTGELT).value;
    }

    /**
     * <pre>RULES_ENTLASSENDEFACHABTEILUNG
     * SQLite key: rules_entlassendefachabteilung
     * [en] EntlassendeFachabteilung
     * [de] EntlassendeFachabteilung</pre>
     * @return [en] EntlassendeFachabteilung, [de] EntlassendeFachabteilung
     */
    public static String getRulesEntlassendefachabteilung() {
        return get(RULES_ENTLASSENDEFACHABTEILUNG).value;
    }

    /**
     * <pre>RULES_GENDER_MASCULINE
     * SQLite key: rules_gender_masculine
     * [en] m
     * [de] m</pre>
     * @return [en] m, [de] m
     */
    public static String getRulesGenderMasculine() {
        return get(RULES_GENDER_MASCULINE).value;
    }

    /**
     * <pre>RULES_GESAMTATCDOSIERUNG
     * SQLite key: rules_gesamtatcdosierung
     * [en] GesamtATCDosierung
     * [de] GesamtATCDosierung</pre>
     * @return [en] GesamtATCDosierung, [de] GesamtATCDosierung
     */
    public static String getRulesGesamtatcdosierung() {
        return get(RULES_GESAMTATCDOSIERUNG).value;
    }

    /**
     * <pre>RULES_GESAMTATCPREIS
     * SQLite key: rules_gesamtatcpreis
     * [en] GesamtATCPreis
     * [de] GesamtATCPreis</pre>
     * @return [en] GesamtATCPreis, [de] GesamtATCPreis
     */
    public static String getRulesGesamtatcpreis() {
        return get(RULES_GESAMTATCPREIS).value;
    }

    /**
     * <pre>RULES_GESAMTMPREIS
     * SQLite key: rules_gesamtmpreis
     * [en] GesamtMPreis
     * [de] GesamtMPreis</pre>
     * @return [en] GesamtMPreis, [de] GesamtMPreis
     */
    public static String getRulesGesamtmpreis() {
        return get(RULES_GESAMTMPREIS).value;
    }

    /**
     * <pre>RULES_GESAMTPZNDOSIERUNG
     * SQLite key: rules_gesamtpzndosierung
     * [en] GesamtPZNDosierung
     * [de] GesamtPZNDosierung</pre>
     * @return [en] GesamtPZNDosierung, [de] GesamtPZNDosierung
     */
    public static String getRulesGesamtpzndosierung() {
        return get(RULES_GESAMTPZNDOSIERUNG).value;
    }

    /**
     * <pre>RULES_GESAMTPZNPREIS
     * SQLite key: rules_gesamtpznpreis
     * [en] GesamtPZNPreis
     * [de] GesamtPZNPreis</pre>
     * @return [en] GesamtPZNPreis, [de] GesamtPZNPreis
     */
    public static String getRulesGesamtpznpreis() {
        return get(RULES_GESAMTPZNPREIS).value;
    }

    /**
     * <pre>RULES_GK_RSA_AGG
     * SQLite key: rules_gk_rsa_agg
     * [en] GK_RSA_AGG
     * [de] GK_RSA_AGG</pre>
     * @return [en] GK_RSA_AGG, [de] GK_RSA_AGG
     */
    public static String getRulesGkRsaAgg() {
        return get(RULES_GK_RSA_AGG).value;
    }

    /**
     * <pre>RULES_GK_RSA_ALTER
     * SQLite key: rules_gk_rsa_alter
     * [en] GK_RSA_Alter
     * [de] GK_RSA_Alter</pre>
     * @return [en] GK_RSA_Alter, [de] GK_RSA_Alter
     */
    public static String getRulesGkRsaAlter() {
        return get(RULES_GK_RSA_ALTER).value;
    }

    /**
     * <pre>RULES_GK_RSA_AMBULANTEDXG
     * SQLite key: rules_gk_rsa_ambulantedxg
     * [en] GK_RSA_AmbulanteDxG
     * [de] GK_RSA_AmbulanteDxG</pre>
     * @return [en] GK_RSA_AmbulanteDxG, [de] GK_RSA_AmbulanteDxG
     */
    public static String getRulesGkRsaAmbulantedxg() {
        return get(RULES_GK_RSA_AMBULANTEDXG).value;
    }

    /**
     * <pre>RULES_GK_RSA_AMBULANTEHMGRELEVANTEDXG
     * SQLite key: rules_gk_rsa_ambulantehmgrelevantedxg
     * [en] GK_RSA_AmbulanteHMGRelevanteDxG
     * [de] GK_RSA_AmbulanteHMGRelevanteDxG</pre>
     * @return [en] GK_RSA_AmbulanteHMGRelevanteDxG, [de] GK_RSA_AmbulanteHMGRelevanteDxG
     */
    public static String getRulesGkRsaAmbulantehmgrelevantedxg() {
        return get(RULES_GK_RSA_AMBULANTEHMGRELEVANTEDXG).value;
    }

    /**
     * <pre>RULES_GK_RSA_AMBULANTEKRANKHEITSNUMMER
     * SQLite key: rules_gk_rsa_ambulantekrankheitsnummer
     * [en] GK_RSA_AmbulanteKrankheitsnummer
     * [de] GK_RSA_AmbulanteKrankheitsnummer</pre>
     * @return [en] GK_RSA_AmbulanteKrankheitsnummer, [de] GK_RSA_AmbulanteKrankheitsnummer
     */
    public static String getRulesGkRsaAmbulantekrankheitsnummer() {
        return get(RULES_GK_RSA_AMBULANTEKRANKHEITSNUMMER).value;
    }

    /**
     * <pre>RULES_GK_RSA_APOTHEKENAUSGABEN
     * SQLite key: rules_gk_rsa_apothekenausgaben
     * [en] GK_RSA_ApothekenAusgaben
     * [de] GK_RSA_ApothekenAusgaben</pre>
     * @return [en] GK_RSA_ApothekenAusgaben, [de] GK_RSA_ApothekenAusgaben
     */
    public static String getRulesGkRsaApothekenausgaben() {
        return get(RULES_GK_RSA_APOTHEKENAUSGABEN).value;
    }

    /**
     * <pre>RULES_GK_RSA_ARZTAUSGABEN
     * SQLite key: rules_gk_rsa_arztausgaben
     * [en] GK_RSA_ArztAusgaben
     * [de] GK_RSA_ArztAusgaben</pre>
     * @return [en] GK_RSA_ArztAusgaben, [de] GK_RSA_ArztAusgaben
     */
    public static String getRulesGkRsaArztausgaben() {
        return get(RULES_GK_RSA_ARZTAUSGABEN).value;
    }

    /**
     * <pre>RULES_GK_RSA_ATCCODE
     * SQLite key: rules_gk_rsa_atccode
     * [en] GK_RSA_ATCCode
     * [de] GK_RSA_ATCCode</pre>
     * @return [en] GK_RSA_ATCCode, [de] GK_RSA_ATCCode
     */
    public static String getRulesGkRsaAtccode() {
        return get(RULES_GK_RSA_ATCCODE).value;
    }

    /**
     * <pre>RULES_GK_RSA_AUSGABENGESAMT
     * SQLite key: rules_gk_rsa_ausgabengesamt
     * [en] GK_RSA_AusgabenGesamt
     * [de] GK_RSA_AusgabenGesamt</pre>
     * @return [en] GK_RSA_AusgabenGesamt, [de] GK_RSA_AusgabenGesamt
     */
    public static String getRulesGkRsaAusgabengesamt() {
        return get(RULES_GK_RSA_AUSGABENGESAMT).value;
    }

    /**
     * <pre>RULES_GK_RSA_DDD
     * SQLite key: rules_gk_rsa_ddd
     * [en] GK_RSA_DDD
     * [de] GK_RSA_DDD</pre>
     * @return [en] GK_RSA_DDD, [de] GK_RSA_DDD
     */
    public static String getRulesGkRsaDdd() {
        return get(RULES_GK_RSA_DDD).value;
    }

    /**
     * <pre>RULES_GK_RSA_DIAGNOSEAMBULANT
     * SQLite key: rules_gk_rsa_diagnoseambulant
     * [en] GK_RSA_DiagnoseAmbulant
     * [de] GK_RSA_DiagnoseAmbulant</pre>
     * @return [en] GK_RSA_DiagnoseAmbulant, [de] GK_RSA_DiagnoseAmbulant
     */
    public static String getRulesGkRsaDiagnoseambulant() {
        return get(RULES_GK_RSA_DIAGNOSEAMBULANT).value;
    }

    /**
     * <pre>RULES_GK_RSA_DIAGNOSEAMBULANTHMGRELEVANT
     * SQLite key: rules_gk_rsa_diagnoseambulanthmgrelevant
     * [en] GK_RSA_DiagnoseAmbulantHMGRelevant
     * [de] GK_RSA_DiagnoseAmbulantHMGRelevant</pre>
     * @return [en] GK_RSA_DiagnoseAmbulantHMGRelevant, [de] GK_RSA_DiagnoseAmbulantHMGRelevant
     */
    public static String getRulesGkRsaDiagnoseambulanthmgrelevant() {
        return get(RULES_GK_RSA_DIAGNOSEAMBULANTHMGRELEVANT).value;
    }

    /**
     * <pre>RULES_GK_RSA_DIAGNOSESTATIONAER
     * SQLite key: rules_gk_rsa_diagnosestationaer
     * [en] GK_RSA_DiagnoseStationaer
     * [de] GK_RSA_DiagnoseStationaer</pre>
     * @return [en] GK_RSA_DiagnoseStationaer, [de] GK_RSA_DiagnoseStationaer
     */
    public static String getRulesGkRsaDiagnosestationaer() {
        return get(RULES_GK_RSA_DIAGNOSESTATIONAER).value;
    }

    /**
     * <pre>RULES_GK_RSA_DIAGNOSESTATIONAERHMGRELEVANT
     * SQLite key: rules_gk_rsa_diagnosestationaerhmgrelevant
     * [en] GK_RSA_DiagnoseStationaerHMGRelevant
     * [de] GK_RSA_DiagnoseStationaerHMGRelevant</pre>
     * @return [en] GK_RSA_DiagnoseStationaerHMGRelevant, [de] GK_RSA_DiagnoseStationaerHMGRelevant
     */
    public static String getRulesGkRsaDiagnosestationaerhmgrelevant() {
        return get(RULES_GK_RSA_DIAGNOSESTATIONAERHMGRELEVANT).value;
    }

    /**
     * <pre>RULES_GK_RSA_DMPTAGE
     * SQLite key: rules_gk_rsa_dmptage
     * [en] GK_RSA_DMPTage
     * [de] GK_RSA_DMPTage</pre>
     * @return [en] GK_RSA_DMPTage, [de] GK_RSA_DMPTage
     */
    public static String getRulesGkRsaDmptage() {
        return get(RULES_GK_RSA_DMPTAGE).value;
    }

    /**
     * <pre>RULES_GK_RSA_DXG
     * SQLite key: rules_gk_rsa_dxg
     * [en] GK_RSA_DxG
     * [de] GK_RSA_DxG</pre>
     * @return [en] GK_RSA_DxG, [de] GK_RSA_DxG
     */
    public static String getRulesGkRsaDxg() {
        return get(RULES_GK_RSA_DXG).value;
    }

    /**
     * <pre>RULES_GK_RSA_ELRLOESGESAMT
     * SQLite key: rules_gk_rsa_elrloesgesamt
     * [en] GK_RSA_ElrloesGesamt
     * [de] GK_RSA_ElrloesGesamt</pre>
     * @return [en] GK_RSA_ElrloesGesamt, [de] GK_RSA_ElrloesGesamt
     */
    public static String getRulesGkRsaElrloesgesamt() {
        return get(RULES_GK_RSA_ELRLOESGESAMT).value;
    }

    /**
     * <pre>RULES_GK_RSA_EMG
     * SQLite key: rules_gk_rsa_emg
     * [en] GK_RSA_EMG
     * [de] GK_RSA_EMG</pre>
     * @return [en] GK_RSA_EMG, [de] GK_RSA_EMG
     */
    public static String getRulesGkRsaEmg() {
        return get(RULES_GK_RSA_EMG).value;
    }

    /**
     * <pre>RULES_GK_RSA_ERWERBSMINDERUNGSTAGE
     * SQLite key: rules_gk_rsa_erwerbsminderungstage
     * [en] GK_RSA_Erwerbsminderungstage
     * [de] GK_RSA_Erwerbsminderungstage</pre>
     * @return [en] GK_RSA_Erwerbsminderungstage, [de] GK_RSA_Erwerbsminderungstage
     */
    public static String getRulesGkRsaErwerbsminderungstage() {
        return get(RULES_GK_RSA_ERWERBSMINDERUNGSTAGE).value;
    }

    /**
     * <pre>RULES_GK_RSA_EXTBLUTREINIGUNGAUSGABEN
     * SQLite key: rules_gk_rsa_extblutreinigungausgaben
     * [en] GK_RSA_ExtBlutreinigungAusgaben
     * [de] GK_RSA_ExtBlutreinigungAusgaben</pre>
     * @return [en] GK_RSA_ExtBlutreinigungAusgaben, [de] GK_RSA_ExtBlutreinigungAusgaben
     */
    public static String getRulesGkRsaExtblutreinigungausgaben() {
        return get(RULES_GK_RSA_EXTBLUTREINIGUNGAUSGABEN).value;
    }

    /**
     * <pre>RULES_GK_RSA_GESCHLECHT
     * SQLite key: rules_gk_rsa_geschlecht
     * [en] GK_RSA_Geschlecht
     * [de] GK_RSA_Geschlecht</pre>
     * @return [en] GK_RSA_Geschlecht, [de] GK_RSA_Geschlecht
     */
    public static String getRulesGkRsaGeschlecht() {
        return get(RULES_GK_RSA_GESCHLECHT).value;
    }

    /**
     * <pre>RULES_GK_RSA_HAUPTDIAGNOSESTATIONAER
     * SQLite key: rules_gk_rsa_hauptdiagnosestationaer
     * [en] GK_RSA_HauptdiagnoseStationaer
     * [de] GK_RSA_HauptdiagnoseStationaer</pre>
     * @return [en] GK_RSA_HauptdiagnoseStationaer, [de] GK_RSA_HauptdiagnoseStationaer
     */
    public static String getRulesGkRsaHauptdiagnosestationaer() {
        return get(RULES_GK_RSA_HAUPTDIAGNOSESTATIONAER).value;
    }

    /**
     * <pre>RULES_GK_RSA_HMG
     * SQLite key: rules_gk_rsa_hmg
     * [en] GK_RSA_HMG
     * [de] GK_RSA_HMG</pre>
     * @return [en] GK_RSA_HMG, [de] GK_RSA_HMG
     */
    public static String getRulesGkRsaHmg() {
        return get(RULES_GK_RSA_HMG).value;
    }

    /**
     * <pre>RULES_GK_RSA_HMGANZAHL
     * SQLite key: rules_gk_rsa_hmganzahl
     * [en] GK_RSA_HMGAnzahl
     * [de] GK_RSA_HMGAnzahl</pre>
     * @return [en] GK_RSA_HMGAnzahl, [de] GK_RSA_HMGAnzahl
     */
    public static String getRulesGkRsaHmganzahl() {
        return get(RULES_GK_RSA_HMGANZAHL).value;
    }

    /**
     * <pre>RULES_GK_RSA_KHAUSGABEN
     * SQLite key: rules_gk_rsa_khausgaben
     * [en] GK_RSA_KHAusgaben
     * [de] GK_RSA_KHAusgaben</pre>
     * @return [en] GK_RSA_KHAusgaben, [de] GK_RSA_KHAusgaben
     */
    public static String getRulesGkRsaKhausgaben() {
        return get(RULES_GK_RSA_KHAUSGABEN).value;
    }

    /**
     * <pre>RULES_GK_RSA_KRANKHEITSGRUPPE
     * SQLite key: rules_gk_rsa_krankheitsgruppe
     * [en] GK_RSA_Krankheitsgruppe
     * [de] GK_RSA_Krankheitsgruppe</pre>
     * @return [en] GK_RSA_Krankheitsgruppe, [de] GK_RSA_Krankheitsgruppe
     */
    public static String getRulesGkRsaKrankheitsgruppe() {
        return get(RULES_GK_RSA_KRANKHEITSGRUPPE).value;
    }

    /**
     * <pre>RULES_GK_RSA_MEHRLEISTUNGDMP
     * SQLite key: rules_gk_rsa_mehrleistungdmp
     * [en] GK_RSA_MehrleistungDMP
     * [de] GK_RSA_MehrleistungDMP</pre>
     * @return [en] GK_RSA_MehrleistungDMP, [de] GK_RSA_MehrleistungDMP
     */
    public static String getRulesGkRsaMehrleistungdmp() {
        return get(RULES_GK_RSA_MEHRLEISTUNGDMP).value;
    }

    /**
     * <pre>RULES_GK_RSA_NEBENDIAGNOSESTATIONAER
     * SQLite key: rules_gk_rsa_nebendiagnosestationaer
     * [en] GK_RSA_NebendiagnoseStationaer
     * [de] GK_RSA_NebendiagnoseStationaer</pre>
     * @return [en] GK_RSA_NebendiagnoseStationaer, [de] GK_RSA_NebendiagnoseStationaer
     */
    public static String getRulesGkRsaNebendiagnosestationaer() {
        return get(RULES_GK_RSA_NEBENDIAGNOSESTATIONAER).value;
    }

    /**
     * <pre>RULES_GK_RSA_PACKUNGANZAHL
     * SQLite key: rules_gk_rsa_packunganzahl
     * [en] GK_RSA_PackungAnzahl
     * [de] GK_RSA_PackungAnzahl</pre>
     * @return [en] GK_RSA_PackungAnzahl, [de] GK_RSA_PackungAnzahl
     */
    public static String getRulesGkRsaPackunganzahl() {
        return get(RULES_GK_RSA_PACKUNGANZAHL).value;
    }

    /**
     * <pre>RULES_GK_RSA_PZNCODE
     * SQLite key: rules_gk_rsa_pzncode
     * [en] GK_RSA_PZNCode
     * [de] GK_RSA_PZNCode</pre>
     * @return [en] GK_RSA_PZNCode, [de] GK_RSA_PZNCode
     */
    public static String getRulesGkRsaPzncode() {
        return get(RULES_GK_RSA_PZNCODE).value;
    }

    /**
     * <pre>RULES_GK_RSA_PZNGESAMTDOSIS
     * SQLite key: rules_gk_rsa_pzngesamtdosis
     * [en] GK_RSA_PZNGesamtdosis
     * [de] GK_RSA_PZNGesamtdosis</pre>
     * @return [en] GK_RSA_PZNGesamtdosis, [de] GK_RSA_PZNGesamtdosis
     */
    public static String getRulesGkRsaPzngesamtdosis() {
        return get(RULES_GK_RSA_PZNGESAMTDOSIS).value;
    }

    /**
     * <pre>RULES_GK_RSA_QUALIFIZIERUNGDIAGNOSENAMBULANT
     * SQLite key: rules_gk_rsa_qualifizierungdiagnosenambulant
     * [en] GK_RSA_QualifizierungDiagnosenAmbulant
     * [de] GK_RSA_QualifizierungDiagnosenAmbulant</pre>
     * @return [en] GK_RSA_QualifizierungDiagnosenAmbulant, [de] GK_RSA_QualifizierungDiagnosenAmbulant
     */
    public static String getRulesGkRsaQualifizierungdiagnosenambulant() {
        return get(RULES_GK_RSA_QUALIFIZIERUNGDIAGNOSENAMBULANT).value;
    }

    /**
     * <pre>RULES_GK_RSA_QUARTALDIAGNOSENAMBULANT
     * SQLite key: rules_gk_rsa_quartaldiagnosenambulant
     * [en] GK_RSA_QuartalDiagnosenAmbulant
     * [de] GK_RSA_QuartalDiagnosenAmbulant</pre>
     * @return [en] GK_RSA_QuartalDiagnosenAmbulant, [de] GK_RSA_QuartalDiagnosenAmbulant
     */
    public static String getRulesGkRsaQuartaldiagnosenambulant() {
        return get(RULES_GK_RSA_QUARTALDIAGNOSENAMBULANT).value;
    }

    /**
     * <pre>RULES_GK_RSA_SOLEASUGABEN
     * SQLite key: rules_gk_rsa_soleasugaben
     * [en] GK_RSA_SoLeAsugaben
     * [de] GK_RSA_SoLeAsugaben</pre>
     * @return [en] GK_RSA_SoLeAsugaben, [de] GK_RSA_SoLeAsugaben
     */
    public static String getRulesGkRsaSoleasugaben() {
        return get(RULES_GK_RSA_SOLEASUGABEN).value;
    }

    /**
     * <pre>RULES_GK_RSA_STATIONAEREDXG
     * SQLite key: rules_gk_rsa_stationaeredxg
     * [en] GK_RSA_StationaereDxG
     * [de] GK_RSA_StationaereDxG</pre>
     * @return [en] GK_RSA_StationaereDxG, [de] GK_RSA_StationaereDxG
     */
    public static String getRulesGkRsaStationaeredxg() {
        return get(RULES_GK_RSA_STATIONAEREDXG).value;
    }

    /**
     * <pre>RULES_GK_RSA_STATIONAEREHMGRELEVANTEDXG
     * SQLite key: rules_gk_rsa_stationaerehmgrelevantedxg
     * [en] GK_RSA_StationaereHMGRelevanteDxG
     * [de] GK_RSA_StationaereHMGRelevanteDxG</pre>
     * @return [en] GK_RSA_StationaereHMGRelevanteDxG, [de] GK_RSA_StationaereHMGRelevanteDxG
     */
    public static String getRulesGkRsaStationaerehmgrelevantedxg() {
        return get(RULES_GK_RSA_STATIONAEREHMGRELEVANTEDXG).value;
    }

    /**
     * <pre>RULES_GK_RSA_STATIONAEREKRANKHEITSNUMMER
     * SQLite key: rules_gk_rsa_stationaerekrankheitsnummer
     * [en] GK_RSA_StationaereKrankheitsnummer
     * [de] GK_RSA_StationaereKrankheitsnummer</pre>
     * @return [en] GK_RSA_StationaereKrankheitsnummer, [de] GK_RSA_StationaereKrankheitsnummer
     */
    public static String getRulesGkRsaStationaerekrankheitsnummer() {
        return get(RULES_GK_RSA_STATIONAEREKRANKHEITSNUMMER).value;
    }

    /**
     * <pre>RULES_GK_RSA_VERSICHERTENTAGE
     * SQLite key: rules_gk_rsa_versichertentage
     * [en] GK_RSA_Versichertentage
     * [de] GK_RSA_Versichertentage</pre>
     * @return [en] GK_RSA_Versichertentage, [de] GK_RSA_Versichertentage
     */
    public static String getRulesGkRsaVersichertentage() {
        return get(RULES_GK_RSA_VERSICHERTENTAGE).value;
    }

    /**
     * <pre>RULES_GK_RSA_VERSTORBEN
     * SQLite key: rules_gk_rsa_verstorben
     * [en] GK_RSA_Verstorben
     * [de] GK_RSA_Verstorben</pre>
     * @return [en] GK_RSA_Verstorben, [de] GK_RSA_Verstorben
     */
    public static String getRulesGkRsaVerstorben() {
        return get(RULES_GK_RSA_VERSTORBEN).value;
    }

    /**
     * <pre>RULES_GK_RSA_ZAHNARZTAUSGABEN
     * SQLite key: rules_gk_rsa_zahnarztausgaben
     * [en] GK_RSA_ZahnarztAusgaben
     * [de] GK_RSA_ZahnarztAusgaben</pre>
     * @return [en] GK_RSA_ZahnarztAusgaben, [de] GK_RSA_ZahnarztAusgaben
     */
    public static String getRulesGkRsaZahnarztausgaben() {
        return get(RULES_GK_RSA_ZAHNARZTAUSGABEN).value;
    }

    /**
     * <pre>RULES_GKCOSTS_NODE_COSTS
     * SQLite key: rules_gkcostsnode_costs
     * [en] Kosten
     * [de] Kosten</pre>
     * @return [en] Kosten, [de] Kosten
     */
    public static String getRulesGKCostsNodeCosts() {
        return get(RULES_GKCOSTS_NODE_COSTS).value;
    }

    /**
     * <pre>RULES_GKMEDICINE_NODE_MEDICINE
     * SQLite key: rules_gkmedicinenode_medicine
     * [en] Medikamente
     * [de] Medikamente</pre>
     * @return [en] Medikamente, [de] Medikamente
     */
    public static String getRulesGKMedicineNodeMedicine() {
        return get(RULES_GKMEDICINE_NODE_MEDICINE).value;
    }

    /**
     * <pre>RULES_GKSO_LE_NODE_OTHER_SERVICES
     * SQLite key: rules_gksolenode_otherservices
     * [en] Heil- und Hilfsmittel
     * [de] Heil- und Hilfsmittel</pre>
     * @return [en] Heil- und Hilfsmittel, [de] Heil- und Hilfsmittel
     */
    public static String getRulesGKSoLeNodeOtherServices() {
        return get(RULES_GKSO_LE_NODE_OTHER_SERVICES).value;
    }

    /**
     * <pre>RULES_GLEICHENPROZEDURENANZAHL
     * SQLite key: rules_gleichenprozedurenanzahl
     * [en] GleichenProzedurenAnzahl
     * [de] GleichenProzedurenAnzahl</pre>
     * @return [en] GleichenProzedurenAnzahl, [de] GleichenProzedurenAnzahl
     */
    public static String getRulesGleichenprozedurenanzahl() {
        return get(RULES_GLEICHENPROZEDURENANZAHL).value;
    }

    /**
     * <pre>RULES_GROUP_ACG_DISEASE_GROUPS_DIS
     * SQLite key: rules_group_acg_disease_groups_dis
     * [en] Krankheitsgruppen
     * [de] Krankheitsgruppen</pre>
     * @return [en] Krankheitsgruppen, [de] Krankheitsgruppen
     */
    public static String getRulesGroupAcgDiseaseGroupsDis() {
        return get(RULES_GROUP_ACG_DISEASE_GROUPS_DIS).value;
    }

    /**
     * <pre>RULES_GROUP_CODING_DATA_HOSP_DATA_DIS
     * SQLite key: rules_group_coding_data_hosp_data_dis
     * [en] Kodierung
     * [de] Kodierung</pre>
     * @return [en] Kodierung, [de] Kodierung
     */
    public static String getRulesGroupCodingDataHospDataDis() {
        return get(RULES_GROUP_CODING_DATA_HOSP_DATA_DIS).value;
    }

    /**
     * <pre>RULES_GROUP_DIAG_GROUPS_MRSA_TOOLTIP
     * SQLite key: rules_group_diag_groups_mrsa_tooltip
     * [en] Diagnosengruppen
     * [de] Diagnosengruppen</pre>
     * @return [en] Diagnosengruppen, [de] Diagnosengruppen
     */
    public static String getRulesGroupDiagGroupsMrsaTooltip() {
        return get(RULES_GROUP_DIAG_GROUPS_MRSA_TOOLTIP).value;
    }

    /**
     * <pre>RULES_GROUP_DRGS_DATA_HOSP_DATA_DIS
     * SQLite key: rules_group_drgs_data_hosp_data_dis
     * [en] DRG-Ergebnis
     * [de] DRG-Ergebnis</pre>
     * @return [en] DRG-Ergebnis, [de] DRG-Ergebnis
     */
    public static String getRulesGroupDrgsDataHospDataDis() {
        return get(RULES_GROUP_DRGS_DATA_HOSP_DATA_DIS).value;
    }

    /**
     * <pre>RULES_GROUP_DRGS_DATA_HOSP_DATA_TOOLTIP
     * SQLite key: rules_group_drgs_data_hosp_data_tooltip
     * [en] DRG-Ergebnisse
     * [de] DRG-Ergebnisse</pre>
     * @return [en] DRG-Ergebnisse, [de] DRG-Ergebnisse
     */
    public static String getRulesGroupDrgsDataHospDataTooltip() {
        return get(RULES_GROUP_DRGS_DATA_HOSP_DATA_TOOLTIP).value;
    }

    /**
     * <pre>RULES_GROUP_EXPENDURE_MRSA_DIS
     * SQLite key: rules_group_expendure_mrsa_dis
     * [en] Ausgaben
     * [de] Ausgaben</pre>
     * @return [en] Ausgaben, [de] Ausgaben
     */
    public static String getRulesGroupExpendureMrsaDis() {
        return get(RULES_GROUP_EXPENDURE_MRSA_DIS).value;
    }

    /**
     * <pre>RULES_GROUP_FEES_DATA_HOSP_DATA_TOOLTIP
     * SQLite key: rules_group_fees_data_hosp_data_tooltip
     * [en] Entgelte
     * [de] Entgelte</pre>
     * @return [en] Entgelte, [de] Entgelte
     */
    public static String getRulesGroupFeesDataHospDataTooltip() {
        return get(RULES_GROUP_FEES_DATA_HOSP_DATA_TOOLTIP).value;
    }

    /**
     * <pre>RULES_GROUP_FEES_TOOLTIP_10
     * SQLite key: rules_group_fees_tooltip_10
     * [en] Entgeltliste: Entgeltabrechnung bis
     * [de] Entgeltliste: Entgeltabrechnung bis</pre>
     * @return [en] Entgeltliste: Entgeltabrechnung bis, [de] Entgeltliste: Entgeltabrechnung bis
     */
    public static String getRulesGroupFeesTooltip10() {
        return get(RULES_GROUP_FEES_TOOLTIP_10).value;
    }

    /**
     * <pre>RULES_GROUP_FEES_TOOLTIP_11
     * SQLite key: rules_group_fees_tooltip_11
     * [en] Entgeltliste: Entgeltanzahl je Entgelt
     * [de] Entgeltliste: Entgeltanzahl je Entgelt</pre>
     * @return [en] Entgeltliste: Entgeltanzahl je Entgelt, [de] Entgeltliste: Entgeltanzahl je Entgelt
     */
    public static String getRulesGroupFeesTooltip11() {
        return get(RULES_GROUP_FEES_TOOLTIP_11).value;
    }

    /**
     * <pre>RULES_GROUP_FEES_TOOLTIP_13
     * SQLite key: rules_group_fees_tooltip_13
     * [en] Grouperrelevant: Diagnose
     * [de] Grouperrelevant: Diagnose</pre>
     * @return [en] Grouperrelevant: Diagnose, [de] Grouperrelevant: Diagnose
     */
    public static String getRulesGroupFeesTooltip13() {
        return get(RULES_GROUP_FEES_TOOLTIP_13).value;
    }

    /**
     * <pre>RULES_GROUP_FEES_TOOLTIP_14
     * SQLite key: rules_group_fees_tooltip_14
     * [en] Grouperrelevant: Prozedur
     * [de] Grouperrelevant: Prozedur</pre>
     * @return [en] Grouperrelevant: Prozedur, [de] Grouperrelevant: Prozedur
     */
    public static String getRulesGroupFeesTooltip14() {
        return get(RULES_GROUP_FEES_TOOLTIP_14).value;
    }

    /**
     * <pre>RULES_GROUP_FEES_TOOLTIP_22
     * SQLite key: rules_group_fees_tooltip_22
     * [en] Summe der Entgelte
     * [de] Summe der Entgelte</pre>
     * @return [en] Summe der Entgelte, [de] Summe der Entgelte
     */
    public static String getRulesGroupFeesTooltip22() {
        return get(RULES_GROUP_FEES_TOOLTIP_22).value;
    }

    /**
     * <pre>RULES_GROUP_FEES_TOOLTIP_23
     * SQLite key: rules_group_fees_tooltip_23
     * [en] Zuschlags_CW
     * [de] Zuschlags_CW</pre>
     * @return [en] Zuschlags_CW, [de] Zuschlags_CW
     */
    public static String getRulesGroupFeesTooltip23() {
        return get(RULES_GROUP_FEES_TOOLTIP_23).value;
    }

    /**
     * <pre>RULES_GROUP_FEES_TOOLTIP_3
     * SQLite key: rules_group_fees_tooltip_3
     * [en] Abschlags_CW
     * [de] Abschlags_CW</pre>
     * @return [en] Abschlags_CW, [de] Abschlags_CW
     */
    public static String getRulesGroupFeesTooltip3() {
        return get(RULES_GROUP_FEES_TOOLTIP_3).value;
    }

    /**
     * <pre>RULES_GROUP_FEES_TOOLTIP_7
     * SQLite key: rules_group_fees_tooltip_7
     * [en] Entgeltliste: Entgeltart
     * [de] Entgeltliste: Entgeltart</pre>
     * @return [en] Entgeltliste: Entgeltart, [de] Entgeltliste: Entgeltart
     */
    public static String getRulesGroupFeesTooltip7() {
        return get(RULES_GROUP_FEES_TOOLTIP_7).value;
    }

    /**
     * <pre>RULES_GROUP_FEES_TOOLTIP_8
     * SQLite key: rules_group_fees_tooltip_8
     * [en] Entgeltliste: Entgelteinzelbetrag
     * [de] Entgeltliste: Entgelteinzelbetrag</pre>
     * @return [en] Entgeltliste: Entgelteinzelbetrag, [de] Entgeltliste: Entgelteinzelbetrag
     */
    public static String getRulesGroupFeesTooltip8() {
        return get(RULES_GROUP_FEES_TOOLTIP_8).value;
    }

    /**
     * <pre>RULES_GROUP_FEES_TOOLTIP_9
     * SQLite key: rules_group_fees_tooltip_9
     * [en] Entgeltliste: Entgeltabrechnung von
     * [de] Entgeltliste: Entgeltabrechnung von</pre>
     * @return [en] Entgeltliste: Entgeltabrechnung von, [de] Entgeltliste: Entgeltabrechnung von
     */
    public static String getRulesGroupFeesTooltip9() {
        return get(RULES_GROUP_FEES_TOOLTIP_9).value;
    }

    /**
     * <pre>RULES_GROUP_INSURANT_MRSA_DIS
     * SQLite key: rules_group_insurant_mrsa_dis
     * [en] Versichertendaten
     * [de] Versichertendaten</pre>
     * @return [en] Versichertendaten, [de] Versichertendaten
     */
    public static String getRulesGroupInsurantMrsaDis() {
        return get(RULES_GROUP_INSURANT_MRSA_DIS).value;
    }

    /**
     * <pre>RULES_GROUP_OTHERS_TOOLTIP_2
     * SQLite key: rules_group_others_tooltip_2
     * [en] Zeitangabe 'Jetzt'
     * [de] Zeitangabe 'Jetzt'</pre>
     * @return [en] Zeitangabe 'Jetzt', [de] Zeitangabe 'Jetzt'
     */
    public static String getRulesGroupOthersTooltip2() {
        return get(RULES_GROUP_OTHERS_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_GROUP_PEPPS_DATA_HOSP_DATA_TOOLTIP
     * SQLite key: rules_group_pepps_data_hosp_data_tooltip
     * [en] PEPP-Ergebnisse
     * [de] PEPP-Ergebnisse</pre>
     * @return [en] PEPP-Ergebnisse, [de] PEPP-Ergebnisse
     */
    public static String getRulesGroupPeppsDataHospDataTooltip() {
        return get(RULES_GROUP_PEPPS_DATA_HOSP_DATA_TOOLTIP).value;
    }

    /**
     * <pre>RULES_GROUP_REVENUE_MRSA_DIS
     * SQLite key: rules_group_revenue_mrsa_dis
     * [en] Erlöse
     * [de] Erlöse</pre>
     * @return [en] Erlöse, [de] Erlöse
     */
    public static String getRulesGroupRevenueMrsaDis() {
        return get(RULES_GROUP_REVENUE_MRSA_DIS).value;
    }

    /**
     * <pre>RULES_GROUPERRELEVANTEDIAGNOSE
     * SQLite key: rules_grouperrelevantediagnose
     * [en] GrouperrelevanteDiagnose
     * [de] GrouperrelevanteDiagnose</pre>
     * @return [en] GrouperrelevanteDiagnose, [de] GrouperrelevanteDiagnose
     */
    public static String getRulesGrouperrelevantediagnose() {
        return get(RULES_GROUPERRELEVANTEDIAGNOSE).value;
    }

    /**
     * <pre>RULES_GROUPERRELEVANTEPROZEDUR
     * SQLite key: rules_grouperrelevanteprozedur
     * [en] GrouperrelevanteProzedur
     * [de] GrouperrelevanteProzedur</pre>
     * @return [en] GrouperrelevanteProzedur, [de] GrouperrelevanteProzedur
     */
    public static String getRulesGrouperrelevanteprozedur() {
        return get(RULES_GROUPERRELEVANTEPROZEDUR).value;
    }

    /**
     * <pre>RULES_HAUPTDIAGNOSELOKALISATION
     * SQLite key: rules_hauptdiagnoselokalisation
     * [en] HauptdiagnoseLokalisation
     * [de] HauptdiagnoseLokalisation</pre>
     * @return [en] HauptdiagnoseLokalisation, [de] HauptdiagnoseLokalisation
     */
    public static String getRulesHauptdiagnoselokalisation() {
        return get(RULES_HAUPTDIAGNOSELOKALISATION).value;
    }

    /**
     * <pre>RULES_HM_GESAMTMENGE
     * SQLite key: rules_hm_gesamtmenge
     * [en] hm_gesamtmenge
     * [de] hm_gesamtmenge</pre>
     * @return [en] hm_gesamtmenge, [de] hm_gesamtmenge
     */
    public static String getRulesHmGesamtmenge() {
        return get(RULES_HM_GESAMTMENGE).value;
    }

    /**
     * <pre>RULES_HM_GESAMTPREIS
     * SQLite key: rules_hm_gesamtpreis
     * [en] hm_gesamtpreis
     * [de] hm_gesamtpreis</pre>
     * @return [en] hm_gesamtpreis, [de] hm_gesamtpreis
     */
    public static String getRulesHmGesamtpreis() {
        return get(RULES_HM_GESAMTPREIS).value;
    }

    /**
     * <pre>RULES_HM_GESAMTPREIS_ALLE
     * SQLite key: rules_hm_gesamtpreis_alle
     * [en] hm_gesamtPreis_alle
     * [de] hm_gesamtPreis_alle</pre>
     * @return [en] hm_gesamtPreis_alle, [de] hm_gesamtPreis_alle
     */
    public static String getRulesHmGesamtpreisAlle() {
        return get(RULES_HM_GESAMTPREIS_ALLE).value;
    }

    /**
     * <pre>RULES_HM_MENGE
     * SQLite key: rules_hm_menge
     * [en] hm_menge
     * [de] hm_menge</pre>
     * @return [en] hm_menge, [de] hm_menge
     */
    public static String getRulesHmMenge() {
        return get(RULES_HM_MENGE).value;
    }

    /**
     * <pre>RULES_HM_POSITIONSNUMMER
     * SQLite key: rules_hm_positionsnummer
     * [en] hm_positionsnummer
     * [de] hm_positionsnummer</pre>
     * @return [en] hm_positionsnummer, [de] hm_positionsnummer
     */
    public static String getRulesHmPositionsnummer() {
        return get(RULES_HM_POSITIONSNUMMER).value;
    }

    /**
     * <pre>RULES_HM_PREIS
     * SQLite key: rules_hm_preis
     * [en] hm_preis
     * [de] hm_preis</pre>
     * @return [en] hm_preis, [de] hm_preis
     */
    public static String getRulesHmPreis() {
        return get(RULES_HM_PREIS).value;
    }

    /**
     * <pre>RULES_HM_VERORDNUNGSDATUM
     * SQLite key: rules_hm_verordnungsdatum
     * [en] hm_verordnungsdatum
     * [de] hm_verordnungsdatum</pre>
     * @return [en] hm_verordnungsdatum, [de] hm_verordnungsdatum
     */
    public static String getRulesHmVerordnungsdatum() {
        return get(RULES_HM_VERORDNUNGSDATUM).value;
    }

    /**
     * <pre>RULES_ICD_BEDINGUNG_GEKENNZEICHNET_DURCH_DIAGNOSE_CODE_AUSPRAEGUNG_CHRONISCHE_ERKRANKUNG
     * SQLite key: rules_icd_bedingung_gekennzeichnet_durch_diagnose_code_auspraegung_chronische_erkrankung
     * [en] rueckenbeschwerde=ICD - Bedingung gekennzeichnet durch Diagnose Code Ausprägung chronische Erkrankung:Rückenbeschwerden
     * [de] rueckenbeschwerde=ICD - Bedingung gekennzeichnet durch Diagnose Code Ausprägung chronische Erkrankung:Rückenbeschwerden</pre>
     * @return [en] rueckenbeschwerde=ICD - Bedingung gekennzeichnet durch Diagnose Code Ausprägung chronische Erkrankung:Rückenbeschwerden, [de] rueckenbeschwerde=ICD - Bedingung gekennzeichnet durch Diagnose Code Ausprägung chronische Erkrankung:Rückenbeschwerden
     */
    public static String getRulesIcdBedingungGekennzeichnetDurchDiagnoseCodeAuspraegungChronischeErkrankung() {
        return get(RULES_ICD_BEDINGUNG_GEKENNZEICHNET_DURCH_DIAGNOSE_CODE_AUSPRAEGUNG_CHRONISCHE_ERKRANKUNG).value;
    }

    /**
     * <pre>RULES_JETZT
     * SQLite key: rules_jetzt
     * [en] Jetzt
     * [de] Jetzt</pre>
     * ATTENTION this value ('jetzt') seems to be also defined under the key RULES_TXT_CRIT_NOW_TIME_DIS!
     * @return [en] Jetzt, [de] Jetzt
     */
    public static String getRulesJetzt() {
        return get(RULES_JETZT).value;
    }

    /**
     * <pre>RULES_KLINIK_ADRG
     * SQLite key: rules_klinik_adrg
     * [en] Klinik_ADRG
     * [de] Klinik_ADRG</pre>
     * @return [en] Klinik_ADRG, [de] Klinik_ADRG
     */
    public static String getRulesKlinikAdrg() {
        return get(RULES_KLINIK_ADRG).value;
    }

    /**
     * <pre>RULES_KLINIK_AUFNAHMEDATUM
     * SQLite key: rules_klinik_aufnahmedatum
     * [en] Klinik_Aufnahmedatum
     * [de] Klinik_Aufnahmedatum</pre>
     * @return [en] Klinik_Aufnahmedatum, [de] Klinik_Aufnahmedatum
     */
    public static String getRulesKlinikAufnahmedatum() {
        return get(RULES_KLINIK_AUFNAHMEDATUM).value;
    }

    /**
     * <pre>RULES_KLINIK_AUFNAHMEGRUND
     * SQLite key: rules_klinik_aufnahmegrund
     * [en] Klinik_Aufnahmegrund
     * [de] Klinik_Aufnahmegrund</pre>
     * @return [en] Klinik_Aufnahmegrund, [de] Klinik_Aufnahmegrund
     */
    public static String getRulesKlinikAufnahmegrund() {
        return get(RULES_KLINIK_AUFNAHMEGRUND).value;
    }

    /**
     * <pre>RULES_KLINIK_AUFNAHMEUHRZEIT
     * SQLite key: rules_klinik_aufnahmeuhrzeit
     * [en] Klinik_Aufnahmeuhrzeit
     * [de] Klinik_Aufnahmeuhrzeit</pre>
     * @return [en] Klinik_Aufnahmeuhrzeit, [de] Klinik_Aufnahmeuhrzeit
     */
    public static String getRulesKlinikAufnahmeuhrzeit() {
        return get(RULES_KLINIK_AUFNAHMEUHRZEIT).value;
    }

    /**
     * <pre>RULES_KLINIK_BEATMUNGSSTUNDEN
     * SQLite key: rules_klinik_beatmungsstunden
     * [en] Klinik_Beatmungsstunden
     * [de] Klinik_Beatmungsstunden</pre>
     * @return [en] Klinik_Beatmungsstunden, [de] Klinik_Beatmungsstunden
     */
    public static String getRulesKlinikBeatmungsstunden() {
        return get(RULES_KLINIK_BEATMUNGSSTUNDEN).value;
    }

    /**
     * <pre>RULES_KLINIK_DRG
     * SQLite key: rules_klinik_drg
     * [en] Klinik_DRG
     * [de] Klinik_DRG</pre>
     * @return [en] Klinik_DRG, [de] Klinik_DRG
     */
    public static String getRulesKlinikDrg() {
        return get(RULES_KLINIK_DRG).value;
    }

    /**
     * <pre>RULES_KLINIK_ENTGELTANZAHL
     * SQLite key: rules_klinik_entgeltanzahl
     * [en] Klinik_Entgeltanzahl
     * [de] Klinik_Entgeltanzahl</pre>
     * @return [en] Klinik_Entgeltanzahl, [de] Klinik_Entgeltanzahl
     */
    public static String getRulesKlinikEntgeltanzahl() {
        return get(RULES_KLINIK_ENTGELTANZAHL).value;
    }

    /**
     * <pre>RULES_KLINIK_ENTGELTART
     * SQLite key: rules_klinik_entgeltart
     * [en] Klinik_Entgeltart
     * [de] Klinik_Entgeltart</pre>
     * @return [en] Klinik_Entgeltart, [de] Klinik_Entgeltart
     */
    public static String getRulesKlinikEntgeltart() {
        return get(RULES_KLINIK_ENTGELTART).value;
    }

    /**
     * <pre>RULES_KLINIK_ENTGELTBEREICH
     * SQLite key: rules_klinik_entgeltbereich
     * [en] Klinik_Entgeltbereich
     * [de] Klinik_Entgeltbereich</pre>
     * @return [en] Klinik_Entgeltbereich, [de] Klinik_Entgeltbereich
     */
    public static String getRulesKlinikEntgeltbereich() {
        return get(RULES_KLINIK_ENTGELTBEREICH).value;
    }

    /**
     * <pre>RULES_KLINIK_ENTGELTBETRAG
     * SQLite key: rules_klinik_entgeltbetrag
     * [en] Klinik_Entgeltbetrag
     * [de] Klinik_Entgeltbetrag</pre>
     * @return [en] Klinik_Entgeltbetrag, [de] Klinik_Entgeltbetrag
     */
    public static String getRulesKlinikEntgeltbetrag() {
        return get(RULES_KLINIK_ENTGELTBETRAG).value;
    }

    /**
     * <pre>RULES_KLINIK_ENTLASSUNGSDATUM
     * SQLite key: rules_klinik_entlassungsdatum
     * [en] Klinik_Entlassungsdatum
     * [de] Klinik_Entlassungsdatum</pre>
     * @return [en] Klinik_Entlassungsdatum, [de] Klinik_Entlassungsdatum
     */
    public static String getRulesKlinikEntlassungsdatum() {
        return get(RULES_KLINIK_ENTLASSUNGSDATUM).value;
    }

    /**
     * <pre>RULES_KLINIK_ENTLASSUNGSGRUND
     * SQLite key: rules_klinik_entlassungsgrund
     * [en] Klinik_Entlassungsgrund
     * [de] Klinik_Entlassungsgrund</pre>
     * @return [en] Klinik_Entlassungsgrund, [de] Klinik_Entlassungsgrund
     */
    public static String getRulesKlinikEntlassungsgrund() {
        return get(RULES_KLINIK_ENTLASSUNGSGRUND).value;
    }

    /**
     * <pre>RULES_KLINIK_ENTLASSUNGSUHRZEIT
     * SQLite key: rules_klinik_entlassungsuhrzeit
     * [en] Klinik_Entlassungsuhrzeit
     * [de] Klinik_Entlassungsuhrzeit</pre>
     * @return [en] Klinik_Entlassungsuhrzeit, [de] Klinik_Entlassungsuhrzeit
     */
    public static String getRulesKlinikEntlassungsuhrzeit() {
        return get(RULES_KLINIK_ENTLASSUNGSUHRZEIT).value;
    }

    /**
     * <pre>RULES_KLINIK_FALLANZAHL
     * SQLite key: rules_klinik_fallanzahl
     * [en] Klinik_Fallanzahl
     * [de] Klinik_Fallanzahl</pre>
     * @return [en] Klinik_Fallanzahl, [de] Klinik_Fallanzahl
     */
    public static String getRulesKlinikFallanzahl() {
        return get(RULES_KLINIK_FALLANZAHL).value;
    }

    /**
     * <pre>RULES_KLINIK_FALLKOSTEN
     * SQLite key: rules_klinik_fallkosten
     * [en] Klinik_Fallkosten
     * [de] Klinik_Fallkosten</pre>
     * @return [en] Klinik_Fallkosten, [de] Klinik_Fallkosten
     */
    public static String getRulesKlinikFallkosten() {
        return get(RULES_KLINIK_FALLKOSTEN).value;
    }

    /**
     * <pre>RULES_KLINIK_HAUPTDIAGNOSE
     * SQLite key: rules_klinik_hauptdiagnose
     * [en] Klinik_Hauptdiagnose
     * [de] Klinik_Hauptdiagnose</pre>
     * @return [en] Klinik_Hauptdiagnose, [de] Klinik_Hauptdiagnose
     */
    public static String getRulesKlinikHauptdiagnose() {
        return get(RULES_KLINIK_HAUPTDIAGNOSE).value;
    }

    /**
     * <pre>RULES_KLINIK_IKZ
     * SQLite key: rules_klinik_ikz
     * [en] Klinik_IKZ
     * [de] Klinik_IKZ</pre>
     * @return [en] Klinik_IKZ, [de] Klinik_IKZ
     */
    public static String getRulesKlinikIkz() {
        return get(RULES_KLINIK_IKZ).value;
    }

    /**
     * <pre>RULES_KLINIK_NEBENDIAGNOSE
     * SQLite key: rules_klinik_nebendiagnose
     * [en] Klinik_Nebendiagnose
     * [de] Klinik_Nebendiagnose</pre>
     * @return [en] Klinik_Nebendiagnose, [de] Klinik_Nebendiagnose
     */
    public static String getRulesKlinikNebendiagnose() {
        return get(RULES_KLINIK_NEBENDIAGNOSE).value;
    }

    /**
     * <pre>RULES_KLINIK_OGVD
     * SQLite key: rules_klinik_ogvd
     * [en] Klinik_oGVD
     * [de] Klinik_oGVD</pre>
     * @return [en] Klinik_oGVD, [de] Klinik_oGVD
     */
    public static String getRulesKlinikOgvd() {
        return get(RULES_KLINIK_OGVD).value;
    }

    /**
     * <pre>RULES_KLINIK_PARTITION
     * SQLite key: rules_klinik_partition
     * [en] Klinik_Partition
     * [de] Klinik_Partition</pre>
     * @return [en] Klinik_Partition, [de] Klinik_Partition
     */
    public static String getRulesKlinikPartition() {
        return get(RULES_KLINIK_PARTITION).value;
    }

    /**
     * <pre>RULES_KLINIK_PEPP
     * SQLite key: rules_klinik_pepp
     * [en] Klinik_PEPP
     * [de] Klinik_PEPP</pre>
     * @return [en] Klinik_PEPP, [de] Klinik_PEPP
     */
    public static String getRulesKlinikPepp() {
        return get(RULES_KLINIK_PEPP).value;
    }

    /**
     * <pre>RULES_KLINIK_PROZEDUR
     * SQLite key: rules_klinik_prozedur
     * [en] Klinik_Prozedur
     * [de] Klinik_Prozedur</pre>
     * @return [en] Klinik_Prozedur, [de] Klinik_Prozedur
     */
    public static String getRulesKlinikProzedur() {
        return get(RULES_KLINIK_PROZEDUR).value;
    }

    /**
     * <pre>RULES_KLINIK_SK
     * SQLite key: rules_klinik_sk
     * [en] Klinik_SK
     * [de] Klinik_SK</pre>
     * @return [en] Klinik_SK, [de] Klinik_SK
     */
    public static String getRulesKlinikSk() {
        return get(RULES_KLINIK_SK).value;
    }

    /**
     * <pre>RULES_KLINIK_UGVD
     * SQLite key: rules_klinik_ugvd
     * [en] Klinik_uGVD
     * [de] Klinik_uGVD</pre>
     * @return [en] Klinik_uGVD, [de] Klinik_uGVD
     */
    public static String getRulesKlinikUgvd() {
        return get(RULES_KLINIK_UGVD).value;
    }

    /**
     * <pre>RULES_KLINIK_VERWEILDAUER
     * SQLite key: rules_klinik_verweildauer
     * [en] Klinik_Verweildauer
     * [de] Klinik_Verweildauer</pre>
     * @return [en] Klinik_Verweildauer, [de] Klinik_Verweildauer
     */
    public static String getRulesKlinikVerweildauer() {
        return get(RULES_KLINIK_VERWEILDAUER).value;
    }

    /**
     * <pre>RULES_KLINIK_VWD_STUNDEN
     * SQLite key: rules_klinik_vwd_stunden
     * [en] Klinik_Vwd_Stunden
     * [de] Klinik_Vwd_Stunden</pre>
     * @return [en] Klinik_Vwd_Stunden, [de] Klinik_Vwd_Stunden
     */
    public static String getRulesKlinikVwdStunden() {
        return get(RULES_KLINIK_VWD_STUNDEN).value;
    }

    /**
     * <pre>RULES_KOSTENGEWICHT_EFFEKTIV
     * SQLite key: rules_kostengewicht_effektiv
     * [en] Kostengewicht_effektiv
     * [de] Kostengewicht_effektiv</pre>
     * @return [en] Kostengewicht_effektiv, [de] Kostengewicht_effektiv
     */
    public static String getRulesKostengewichtEffektiv() {
        return get(RULES_KOSTENGEWICHT_EFFEKTIV).value;
    }

    /**
     * <pre>RULES_KOSTENGEWICHT_KATALOG
     * SQLite key: rules_kostengewicht_katalog
     * [en] Kostengewicht_Katalog
     * [de] Kostengewicht_Katalog</pre>
     * @return [en] Kostengewicht_Katalog, [de] Kostengewicht_Katalog
     */
    public static String getRulesKostengewichtKatalog() {
        return get(RULES_KOSTENGEWICHT_KATALOG).value;
    }

    /**
     * <pre>RULES_LABORBESCHREIBUNG
     * SQLite key: rules_laborbeschreibung
     * [en] Laborbeschreibung
     * [de] Laborbeschreibung</pre>
     * @return [en] Laborbeschreibung, [de] Laborbeschreibung
     */
    public static String getRulesLaborbeschreibung() {
        return get(RULES_LABORBESCHREIBUNG).value;
    }

    /**
     * <pre>RULES_LABOREINHEIT
     * SQLite key: rules_laboreinheit
     * [en] Laboreinheit
     * [de] Laboreinheit</pre>
     * @return [en] Laboreinheit, [de] Laboreinheit
     */
    public static String getRulesLaboreinheit() {
        return get(RULES_LABOREINHEIT).value;
    }

    /**
     * <pre>RULES_MENU_MASTER_DATES
     * SQLite key: rules_menu_master_dates
     * [en] Stammdaten
     * [de] Stammdaten</pre>
     * @return [en] Stammdaten, [de] Stammdaten
     */
    public static String getRulesMenuMasterDates() {
        return get(RULES_MENU_MASTER_DATES).value;
    }

    /**
     * <pre>RULES_MITTLERE_VERWEILDAUER
     * SQLite key: rules_mittlere_verweildauer
     * [en] mittlere_Verweildauer
     * [de] mittlere_Verweildauer</pre>
     * @return [en] mittlere_Verweildauer, [de] mittlere_Verweildauer
     */
    public static String getRulesMittlereVerweildauer() {
        return get(RULES_MITTLERE_VERWEILDAUER).value;
    }

    /**
     * <pre>RULES_MPREIS
     * SQLite key: rules_mpreis
     * [en] MPreis
     * [de] MPreis</pre>
     * @return [en] MPreis, [de] MPreis
     */
    public static String getRulesMpreis() {
        return get(RULES_MPREIS).value;
    }

    /**
     * <pre>RULES_MVERORDNUNGSDATUM
     * SQLite key: rules_mverordnungsdatum
     * [en] MVerordnungsdatum
     * [de] MVerordnungsdatum</pre>
     * @return [en] MVerordnungsdatum, [de] MVerordnungsdatum
     */
    public static String getRulesMverordnungsdatum() {
        return get(RULES_MVERORDNUNGSDATUM).value;
    }

    /**
     * <pre>RULES_NEBENDIAGNOSELOKALISATION
     * SQLite key: rules_nebendiagnoselokalisation
     * [en] NebendiagnoseLokalisation
     * [de] NebendiagnoseLokalisation</pre>
     * @return [en] NebendiagnoseLokalisation, [de] NebendiagnoseLokalisation
     */
    public static String getRulesNebendiagnoselokalisation() {
        return get(RULES_NEBENDIAGNOSELOKALISATION).value;
    }

    /**
     * <pre>RULES_NEBENDIAGNOSETYPE
     * SQLite key: rules_nebendiagnosetype
     * [en] NebendiagnoseType
     * [de] NebendiagnoseType</pre>
     * @return [en] NebendiagnoseType, [de] NebendiagnoseType
     */
    public static String getRulesNebendiagnosetype() {
        return get(RULES_NEBENDIAGNOSETYPE).value;
    }

    /**
     * <pre>RULES_OBERE_GRENZVERWEILDAUER
     * SQLite key: rules_obere_grenzverweildauer
     * [en] obere_Grenzverweildauer
     * [de] obere_Grenzverweildauer</pre>
     * @return [en] obere_Grenzverweildauer, [de] obere_Grenzverweildauer
     */
    public static String getRulesObereGrenzverweildauer() {
        return get(RULES_OBERE_GRENZVERWEILDAUER).value;
    }

    /**
     * <pre>RULES_PEPP_GROUPERSTATE
     * SQLite key: rules_pepp_grouperstate
     * [en] PEPP
     * [de] PEPP</pre>
     * ATTENTION this value ('PEPP') seems to be also defined under the key CASE_TYPE_PEPP!
     * @return [en] PEPP, [de] PEPP
     */
    public static String getRulesPeppGrouperstate() {
        return get(RULES_PEPP_GROUPERSTATE).value;
    }

    /**
     * <pre>RULES_PFLEGECWTAG
     * SQLite key: rules_pflegecwtag
     * [en] PflegeCWTag
     * [de] PflegeCWTag</pre>
     * @return [en] PflegeCWTag, [de] PflegeCWTag
     */
    public static String getRulesPflegecwtag() {
        return get(RULES_PFLEGECWTAG).value;
    }

    /**
     * <pre>RULES_PFLEGETAGE
     * SQLite key: rules_pflegetage
     * [en] Pflegetage
     * [de] Pflegetage</pre>
     * ATTENTION this value ('Pflegetage') seems to be also defined under the key RULES_CASE_CASE_DAYS!
     * @return [en] Pflegetage, [de] Pflegetage
     */
    public static String getRulesPflegetage() {
        return get(RULES_PFLEGETAGE).value;
    }

    /**
     * <pre>RULES_PFLEGETAGEDRG
     * SQLite key: rules_pflegetagedrg
     * [en] PflegetageDRG
     * [de] PflegetageDRG</pre>
     * @return [en] PflegetageDRG, [de] PflegetageDRG
     */
    public static String getRulesPflegetagedrg() {
        return get(RULES_PFLEGETAGEDRG).value;
    }

    /**
     * <pre>RULES_PRUEFDATUM_1_AUFNAHMEDATUM
     * SQLite key: rules_pruefdatum1_aufnahmedatum
     * [en] Prüfdatum1 (Aufnahmedatum)
     * [de] Prüfdatum1 (Aufnahmedatum)</pre>
     * @return [en] Prüfdatum1 (Aufnahmedatum), [de] Prüfdatum1 (Aufnahmedatum)
     */
    public static String getRulesPruefdatum1Aufnahmedatum() {
        return get(RULES_PRUEFDATUM_1_AUFNAHMEDATUM).value;
    }

    /**
     * <pre>RULES_PRUEFDATUM_2_ENTLASSUNGSDATUM
     * SQLite key: rules_pruefdatum2_entlassungsdatum
     * [en] Prüfdatum2 (Entlassungsdatum)
     * [de] Prüfdatum2 (Entlassungsdatum)</pre>
     * @return [en] Prüfdatum2 (Entlassungsdatum), [de] Prüfdatum2 (Entlassungsdatum)
     */
    public static String getRulesPruefdatum2Entlassungsdatum() {
        return get(RULES_PRUEFDATUM_2_ENTLASSUNGSDATUM).value;
    }

    /**
     * <pre>RULES_PZNCODE
     * SQLite key: rules_pzncode
     * [en] PZNCode
     * [de] PZNCode</pre>
     * @return [en] PZNCode, [de] PZNCode
     */
    public static String getRulesPzncode() {
        return get(RULES_PZNCODE).value;
    }

    /**
     * <pre>RULES_SEKDIAGNOSE
     * SQLite key: rules_sekdiagnose
     * [en] SekDiagnose
     * [de] SekDiagnose</pre>
     * @return [en] SekDiagnose, [de] SekDiagnose
     */
    public static String getRulesSekdiagnose() {
        return get(RULES_SEKDIAGNOSE).value;
    }

    /**
     * <pre>RULES_SEKDIAGNOSELOKALISATION
     * SQLite key: rules_sekdiagnoselokalisation
     * [en] SekDiagnoseLokalisation
     * [de] SekDiagnoseLokalisation</pre>
     * @return [en] SekDiagnoseLokalisation, [de] SekDiagnoseLokalisation
     */
    public static String getRulesSekdiagnoselokalisation() {
        return get(RULES_SEKDIAGNOSELOKALISATION).value;
    }

    /**
     * <pre>RULES_SEKDIAGNOSEPRIM
     * SQLite key: rules_sekdiagnoseprim
     * [en] SekDiagnosePrim
     * [de] SekDiagnosePrim</pre>
     * @return [en] SekDiagnosePrim, [de] SekDiagnosePrim
     */
    public static String getRulesSekdiagnoseprim() {
        return get(RULES_SEKDIAGNOSEPRIM).value;
    }

    /**
     * <pre>RULES_SEKDIAGNOSETYPE
     * SQLite key: rules_sekdiagnosetype
     * [en] SekDiagnoseType
     * [de] SekDiagnoseType</pre>
     * @return [en] SekDiagnoseType, [de] SekDiagnoseType
     */
    public static String getRulesSekdiagnosetype() {
        return get(RULES_SEKDIAGNOSETYPE).value;
    }

    /**
     * <pre>RULES_SUPERGROUP_ACG_TOOLTIP
     * SQLite key: rules_supergroup_acg_tooltip
     * [en] ACG
     * [de] ACG</pre>
     * @return [en] ACG, [de] ACG
     */
    public static String getRulesSupergroupAcgTooltip() {
        return get(RULES_SUPERGROUP_ACG_TOOLTIP).value;
    }

    /**
     * <pre>RULES_SUPERGROUP_AMBU_DATA_TOOLTIP
     * SQLite key: rules_supergroup_ambu_data_tooltip
     * [en] ambulante Daten
     * [de] ambulante Daten</pre>
     * @return [en] ambulante Daten, [de] ambulante Daten
     */
    public static String getRulesSupergroupAmbuDataTooltip() {
        return get(RULES_SUPERGROUP_AMBU_DATA_TOOLTIP).value;
    }

    /**
     * <pre>RULES_SUPERGROUP_DATA_CASE_TOOLTIP
     * SQLite key: rules_supergroup_data_case_tooltip
     * [en] Krankenhausdaten
     * [de] Krankenhausdaten</pre>
     * @return [en] Krankenhausdaten, [de] Krankenhausdaten
     */
    public static String getRulesSupergroupDataCaseTooltip() {
        return get(RULES_SUPERGROUP_DATA_CASE_TOOLTIP).value;
    }

    /**
     * <pre>RULES_SUPERGROUP_GK_RSA_DIS
     * SQLite key: rules_supergroup_gk_rsa_dis
     * [en] GK RSA Prüfung
     * [de] GK RSA Prüfung</pre>
     * @return [en] GK RSA Prüfung, [de] GK RSA Prüfung
     */
    public static String getRulesSupergroupGkRsaDis() {
        return get(RULES_SUPERGROUP_GK_RSA_DIS).value;
    }

    /**
     * <pre>RULES_SUPERGROUP_HOSP_CASE_TOOLTIP
     * SQLite key: rules_supergroup_hosp_case_tooltip
     * [en] Krankenhaus-Einzellfall
     * [de] Krankenhaus-Einzellfall</pre>
     * @return [en] Krankenhaus-Einzellfall, [de] Krankenhaus-Einzellfall
     */
    public static String getRulesSupergroupHospCaseTooltip() {
        return get(RULES_SUPERGROUP_HOSP_CASE_TOOLTIP).value;
    }

    /**
     * <pre>RULES_SUPERGROUP_MRSA_DIS
     * SQLite key: rules_supergroup_mrsa_dis
     * [en] Morbi RSA
     * [de] Morbi RSA</pre>
     * @return [en] Morbi RSA, [de] Morbi RSA
     */
    public static String getRulesSupergroupMrsaDis() {
        return get(RULES_SUPERGROUP_MRSA_DIS).value;
    }

    /**
     * <pre>RULES_TAGDERENTBINDUNG_1
     * SQLite key: rules_tagderentbindung1
     * [en] TagDerEntbindung1
     * [de] TagDerEntbindung1</pre>
     * @return [en] TagDerEntbindung1, [de] TagDerEntbindung1
     */
    public static String getRulesTagderentbindung1() {
        return get(RULES_TAGDERENTBINDUNG_1).value;
    }

    /**
     * <pre>RULES_TAGDERENTBINDUNG_2
     * SQLite key: rules_tagderentbindung2
     * [en] TagDerEntbindung2
     * [de] TagDerEntbindung2</pre>
     * @return [en] TagDerEntbindung2, [de] TagDerEntbindung2
     */
    public static String getRulesTagderentbindung2() {
        return get(RULES_TAGDERENTBINDUNG_2).value;
    }

    /**
     * <pre>RULES_TAGEOHNEBERECHNUNG
     * SQLite key: rules_tageohneberechnung
     * [en] TageOhneBerechnung
     * [de] TageOhneBerechnung</pre>
     * @return [en] TageOhneBerechnung, [de] TageOhneBerechnung
     */
    public static String getRulesTageohneberechnung() {
        return get(RULES_TAGEOHNEBERECHNUNG).value;
    }

    /**
     * <pre>RULES_TAGEOHNEBERECHNUNGPROENTGELT
     * SQLite key: rules_tageohneberechnungproentgelt
     * [en] TageOhneBerechnungProEntgelt
     * [de] TageOhneBerechnungProEntgelt</pre>
     * @return [en] TageOhneBerechnungProEntgelt, [de] TageOhneBerechnungProEntgelt
     */
    public static String getRulesTageohneberechnungproentgelt() {
        return get(RULES_TAGEOHNEBERECHNUNGPROENTGELT).value;
    }

    /**
     * <pre>RULES_TEMP_100_RECHNUNGSDATUM
     * SQLite key: rules_temp_100_rechnungsdatum
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp100Rechnungsdatum() {
        return get(RULES_TEMP_100_RECHNUNGSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_101_ENTGELTSUMME
     * SQLite key: rules_temp_101_entgeltsumme
     * [en] Format: Währung (Beispiel: 2200.55)
     * [de] Format: Währung (Beispiel: 2200.55)</pre>
     * @return [en] Format: Währung (Beispiel: 2200.55), [de] Format: Währung (Beispiel: 2200.55)
     */
    public static String getRulesTemp101Entgeltsumme() {
        return get(RULES_TEMP_101_ENTGELTSUMME).value;
    }

    /**
     * <pre>RULES_TEMP_102_TAGEOHNEBERECHNUNGPROENTGELT
     * SQLite key: rules_temp_102_tageohneberechnungproentgelt
     * [en] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen. Erfasst am DRG - Entgeltschlüssel für den §301 Datensatz.
     * [de] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen. Erfasst am DRG - Entgeltschlüssel für den §301 Datensatz.</pre>
     * @return [en] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen. Erfasst am DRG - Entgeltschlüssel für den §301 Datensatz., [de] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen. Erfasst am DRG - Entgeltschlüssel für den §301 Datensatz.
     */
    public static String getRulesTemp102Tageohneberechnungproentgelt() {
        return get(RULES_TEMP_102_TAGEOHNEBERECHNUNGPROENTGELT).value;
    }

    /**
     * <pre>RULES_TEMP_103_TAGEOHNEBERECHNUNGPROENTGELT
     * SQLite key: rules_temp_103_tageohneberechnungproentgelt
     * [en] Format: Ganzzahlig (Beispiel 3)
     * [de] Format: Ganzzahlig (Beispiel 3)</pre>
     * @return [en] Format: Ganzzahlig (Beispiel 3), [de] Format: Ganzzahlig (Beispiel 3)
     */
    public static String getRulesTemp103Tageohneberechnungproentgelt() {
        return get(RULES_TEMP_103_TAGEOHNEBERECHNUNGPROENTGELT).value;
    }

    /**
     * <pre>RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER
     * SQLite key: rules_temp_104_untere_grenzverweildauer
     * [en] Format: Ganzzahlig (Beispiel 2)
     * [de] Format: Ganzzahlig (Beispiel 2)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
     * @return [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     */
    public static String getRulesTemp104UntereGrenzverweildauer() {
        return get(RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER).value;
    }

    /**
     * <pre>RULES_TEMP_105_ZUSCHLAGSTAGE
     * SQLite key: rules_temp_105_zuschlagstage
     * [en] Format: Ganzzahlig (Beispiel 5)
     * [de] Format: Ganzzahlig (Beispiel 5)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_128_INTENSIVVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_281_VERSICHERTER_ALTER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_55_ALTERINTAGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_60_ANZAHLABTEILUNGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_96_MITTLERE_VERWEILDAUER!
     * @return [en] Format: Ganzzahlig (Beispiel 5), [de] Format: Ganzzahlig (Beispiel 5)
     */
    public static String getRulesTemp105Zuschlagstage() {
        return get(RULES_TEMP_105_ZUSCHLAGSTAGE).value;
    }

    /**
     * <pre>RULES_TEMP_106_AUFNAHMEDATUM
     * SQLite key: rules_temp_106_aufnahmedatum
     * [en] Die Uhrzeit der Aufnahme wird nicht berücksichtigt
     * [de] Die Uhrzeit der Aufnahme wird nicht berücksichtigt</pre>
     * ATTENTION this value ('Die Uhrzeit der Aufnahme wird nicht berücksichtigt') seems to be also defined under the key RULES_TEMP_170_KLINIK_AUFNAHMEDATUM!
     * @return [en] Die Uhrzeit der Aufnahme wird nicht berücksichtigt, [de] Die Uhrzeit der Aufnahme wird nicht berücksichtigt
     */
    public static String getRulesTemp106Aufnahmedatum() {
        return get(RULES_TEMP_106_AUFNAHMEDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_107_AUFNAHMEDATUM
     * SQLite key: rules_temp_107_aufnahmedatum
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp107Aufnahmedatum() {
        return get(RULES_TEMP_107_AUFNAHMEDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_108_AUFNAHMEDATUM_MIT_UHRZEIT
     * SQLite key: rules_temp_108_aufnahmedatum_mit_uhrzeit
     * [en] Die Uhrzeit der Aufnahme wird mitberücksichtigt
     * [de] Die Uhrzeit der Aufnahme wird mitberücksichtigt</pre>
     * ATTENTION this value ('Die Uhrzeit der Aufnahme wird mitberücksichtigt') seems to be also defined under the key RULES_TEMP_173_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT!
     * @return [en] Die Uhrzeit der Aufnahme wird mitberücksichtigt, [de] Die Uhrzeit der Aufnahme wird mitberücksichtigt
     */
    public static String getRulesTemp108AufnahmedatumMitUhrzeit() {
        return get(RULES_TEMP_108_AUFNAHMEDATUM_MIT_UHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_109_AUFNAHMEDATUM_MIT_UHRZEIT
     * SQLite key: rules_temp_109_aufnahmedatum_mit_uhrzeit
     * [en] Format: YYYYMMDD HH:mm
     * [de] Format: YYYYMMDD HH:mm</pre>
     * ATTENTION this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_120_ENTLASSUNGSDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_174_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_183_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT!
     * @return [en] Format: YYYYMMDD HH:mm, [de] Format: YYYYMMDD HH:mm
     */
    public static String getRulesTemp109AufnahmedatumMitUhrzeit() {
        return get(RULES_TEMP_109_AUFNAHMEDATUM_MIT_UHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_10_HE_MENGE
     * SQLite key: rules_temp_10_he_menge
     * [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.
     * [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.</pre>
     * ATTENTION this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_23_HM_MENGE! this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_25_HM_MENGE!
     * @return [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat., [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.
     */
    public static String getRulesTemp10HeMenge() {
        return get(RULES_TEMP_10_HE_MENGE).value;
    }

    /**
     * <pre>RULES_TEMP_110_AUFNAHMEJAHR
     * SQLite key: rules_temp_110_aufnahmejahr
     * [en] Format: YYYY
     * [de] Format: YYYY</pre>
     * ATTENTION this value ('Format: YYYY') seems to be also defined under the key RULES_TEMP_121_ENTLASSUNGSJAHR!
     * @return [en] Format: YYYY, [de] Format: YYYY
     */
    public static String getRulesTemp110Aufnahmejahr() {
        return get(RULES_TEMP_110_AUFNAHMEJAHR).value;
    }

    /**
     * <pre>RULES_TEMP_111_AUFNAHMEMONAT
     * SQLite key: rules_temp_111_aufnahmemonat
     * [en] Format: MM
     * [de] Format: MM</pre>
     * ATTENTION this value ('Format: MM') seems to be also defined under the key RULES_TEMP_122_ENTLASSUNGSMONAT!
     * @return [en] Format: MM, [de] Format: MM
     */
    public static String getRulesTemp111Aufnahmemonat() {
        return get(RULES_TEMP_111_AUFNAHMEMONAT).value;
    }

    /**
     * <pre>RULES_TEMP_112_AUFNAHMETAG
     * SQLite key: rules_temp_112_aufnahmetag
     * [en] Format: DD
     * [de] Format: DD</pre>
     * ATTENTION this value ('Format: DD') seems to be also defined under the key RULES_TEMP_123_ENTLASSUNGSTAG!
     * @return [en] Format: DD, [de] Format: DD
     */
    public static String getRulesTemp112Aufnahmetag() {
        return get(RULES_TEMP_112_AUFNAHMETAG).value;
    }

    /**
     * <pre>RULES_TEMP_113_AUFNAHMEUHRZEIT
     * SQLite key: rules_temp_113_aufnahmeuhrzeit
     * [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     * [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten</pre>
     * ATTENTION this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_124_ENTLASSUNGSUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_176_KLINIK_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_185_KLINIK_ENTLASSUNGSUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_70_VERLEGUNGSUHRZEIT!
     * @return [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten, [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     */
    public static String getRulesTemp113Aufnahmeuhrzeit() {
        return get(RULES_TEMP_113_AUFNAHMEUHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_114_BEATMUNGSDAUER
     * SQLite key: rules_temp_114_beatmungsdauer
     * [en] Format: Ganzzahlig (Beispiel 30)
     * [de] Format: Ganzzahlig (Beispiel 30)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 30)') seems to be also defined under the key RULES_TEMP_177_KLINIK_BEATMUNGSSTUNDEN!
     * @return [en] Format: Ganzzahlig (Beispiel 30), [de] Format: Ganzzahlig (Beispiel 30)
     */
    public static String getRulesTemp114Beatmungsdauer() {
        return get(RULES_TEMP_114_BEATMUNGSDAUER).value;
    }

    /**
     * <pre>RULES_TEMP_115_EINWEISENDERARZT
     * SQLite key: rules_temp_115_einweisenderarzt
     * [en] Format: 9-stellig numerisch (Beispiel: 123456789)
     * [de] Format: 9-stellig numerisch (Beispiel: 123456789)</pre>
     * ATTENTION this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_116_EINWEISENDESKRANKENHAUS! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_127_INSTITUTIONSKENNZEICHEN! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_129_KRANKENKASSE! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_190_KLINIK_IKZ!
     * @return [en] Format: 9-stellig numerisch (Beispiel: 123456789), [de] Format: 9-stellig numerisch (Beispiel: 123456789)
     */
    public static String getRulesTemp115Einweisenderarzt() {
        return get(RULES_TEMP_115_EINWEISENDERARZT).value;
    }

    /**
     * <pre>RULES_TEMP_116_EINWEISENDESKRANKENHAUS
     * SQLite key: rules_temp_116_einweisendeskrankenhaus
     * [en] Format: 9-stellig numerisch (Beispiel: 123456789)
     * [de] Format: 9-stellig numerisch (Beispiel: 123456789)</pre>
     * ATTENTION this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_115_EINWEISENDERARZT! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_127_INSTITUTIONSKENNZEICHEN! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_129_KRANKENKASSE! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_190_KLINIK_IKZ!
     * @return [en] Format: 9-stellig numerisch (Beispiel: 123456789), [de] Format: 9-stellig numerisch (Beispiel: 123456789)
     */
    public static String getRulesTemp116Einweisendeskrankenhaus() {
        return get(RULES_TEMP_116_EINWEISENDESKRANKENHAUS).value;
    }

    /**
     * <pre>RULES_TEMP_117_ENTLASSUNGSDATUM
     * SQLite key: rules_temp_117_entlassungsdatum
     * [en] Die Uhrzeit der Entlassung wird nicht berücksichtigt
     * [de] Die Uhrzeit der Entlassung wird nicht berücksichtigt</pre>
     * ATTENTION this value ('Die Uhrzeit der Entlassung wird nicht berücksichtigt') seems to be also defined under the key RULES_TEMP_179_KLINIK_ENTLASSUNGSDATUM!
     * @return [en] Die Uhrzeit der Entlassung wird nicht berücksichtigt, [de] Die Uhrzeit der Entlassung wird nicht berücksichtigt
     */
    public static String getRulesTemp117Entlassungsdatum() {
        return get(RULES_TEMP_117_ENTLASSUNGSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_118_ENTLASSUNGSDATUM
     * SQLite key: rules_temp_118_entlassungsdatum
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp118Entlassungsdatum() {
        return get(RULES_TEMP_118_ENTLASSUNGSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_119_ENTLASSUNGSDATUM_MIT_UHRZEIT
     * SQLite key: rules_temp_119_entlassungsdatum_mit_uhrzeit
     * [en] Die Uhrzeit der Entlassung wird mitberücksichtigt
     * [de] Die Uhrzeit der Entlassung wird mitberücksichtigt</pre>
     * ATTENTION this value ('Die Uhrzeit der Entlassung wird mitberücksichtigt') seems to be also defined under the key RULES_TEMP_182_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT!
     * @return [en] Die Uhrzeit der Entlassung wird mitberücksichtigt, [de] Die Uhrzeit der Entlassung wird mitberücksichtigt
     */
    public static String getRulesTemp119EntlassungsdatumMitUhrzeit() {
        return get(RULES_TEMP_119_ENTLASSUNGSDATUM_MIT_UHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_11_HE_MENGE
     * SQLite key: rules_temp_11_he_menge
     * [en] Format: numerisch (Beispiel: 5)
     * [de] Format: numerisch (Beispiel: 5)</pre>
     * ATTENTION this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_17_HM_GESAMTMENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_24_HM_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_26_HM_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_4_HE_GESAMTMENGE!
     * @return [en] Format: numerisch (Beispiel: 5), [de] Format: numerisch (Beispiel: 5)
     */
    public static String getRulesTemp11HeMenge() {
        return get(RULES_TEMP_11_HE_MENGE).value;
    }

    /**
     * <pre>RULES_TEMP_120_ENTLASSUNGSDATUM_MIT_UHRZEIT
     * SQLite key: rules_temp_120_entlassungsdatum_mit_uhrzeit
     * [en] Format: YYYYMMDD HH:mm
     * [de] Format: YYYYMMDD HH:mm</pre>
     * ATTENTION this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_109_AUFNAHMEDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_174_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_183_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT!
     * @return [en] Format: YYYYMMDD HH:mm, [de] Format: YYYYMMDD HH:mm
     */
    public static String getRulesTemp120EntlassungsdatumMitUhrzeit() {
        return get(RULES_TEMP_120_ENTLASSUNGSDATUM_MIT_UHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_121_ENTLASSUNGSJAHR
     * SQLite key: rules_temp_121_entlassungsjahr
     * [en] Format: YYYY
     * [de] Format: YYYY</pre>
     * ATTENTION this value ('Format: YYYY') seems to be also defined under the key RULES_TEMP_110_AUFNAHMEJAHR!
     * @return [en] Format: YYYY, [de] Format: YYYY
     */
    public static String getRulesTemp121Entlassungsjahr() {
        return get(RULES_TEMP_121_ENTLASSUNGSJAHR).value;
    }

    /**
     * <pre>RULES_TEMP_122_ENTLASSUNGSMONAT
     * SQLite key: rules_temp_122_entlassungsmonat
     * [en] Format: MM
     * [de] Format: MM</pre>
     * ATTENTION this value ('Format: MM') seems to be also defined under the key RULES_TEMP_111_AUFNAHMEMONAT!
     * @return [en] Format: MM, [de] Format: MM
     */
    public static String getRulesTemp122Entlassungsmonat() {
        return get(RULES_TEMP_122_ENTLASSUNGSMONAT).value;
    }

    /**
     * <pre>RULES_TEMP_123_ENTLASSUNGSTAG
     * SQLite key: rules_temp_123_entlassungstag
     * [en] Format: DD
     * [de] Format: DD</pre>
     * ATTENTION this value ('Format: DD') seems to be also defined under the key RULES_TEMP_112_AUFNAHMETAG!
     * @return [en] Format: DD, [de] Format: DD
     */
    public static String getRulesTemp123Entlassungstag() {
        return get(RULES_TEMP_123_ENTLASSUNGSTAG).value;
    }

    /**
     * <pre>RULES_TEMP_124_ENTLASSUNGSUHRZEIT
     * SQLite key: rules_temp_124_entlassungsuhrzeit
     * [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     * [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten</pre>
     * ATTENTION this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_113_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_176_KLINIK_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_185_KLINIK_ENTLASSUNGSUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_70_VERLEGUNGSUHRZEIT!
     * @return [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten, [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     */
    public static String getRulesTemp124Entlassungsuhrzeit() {
        return get(RULES_TEMP_124_ENTLASSUNGSUHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_125_FALLNUMMER
     * SQLite key: rules_temp_125_fallnummer
     * [en] Fallnummer dient mit dem IK des Krankenhauses zur eindeutigen Bestimmung des Behandlungsfalls. Mit der Vergabe des KH-internen Kennzeichens muß die eindeutige Identifikation des Behandlungsfalls sichergestellt sein. Es ist in der Regel die fortlaufend vergebene Aufnahmenummer.
     * [de] Fallnummer dient mit dem IKZ des Krankenhauses zur eindeutigen Bestimmung des Behandlungsfalls. Mit der Vergabe des KH-internen Kennzeichens muß die eindeutige Identifikation des Behandlungsfalls sichergestellt sein. Es ist in der Regel die fortlaufend vergebene Aufnahmenummer.</pre>
     * @return [en] Fallnummer dient mit dem IK des Krankenhauses zur eindeutigen Bestimmung des Behandlungsfalls. Mit der Vergabe des KH-internen Kennzeichens muß die eindeutige Identifikation des Behandlungsfalls sichergestellt sein. Es ist in der Regel die fortlaufend vergebene Aufnahmenummer., [de] Fallnummer dient mit dem IKZ des Krankenhauses zur eindeutigen Bestimmung des Behandlungsfalls. Mit der Vergabe des KH-internen Kennzeichens muß die eindeutige Identifikation des Behandlungsfalls sichergestellt sein. Es ist in der Regel die fortlaufend vergebene Aufnahmenummer.
     */
    public static String getRulesTemp125Fallnummer() {
        return get(RULES_TEMP_125_FALLNUMMER).value;
    }

    /**
     * <pre>RULES_TEMP_126_INSTITUTIONSKENNZEICHEN
     * SQLite key: rules_temp_126_institutionskennzeichen
     * [en] Alle Einrichtungen, die Leistungen nach dem Sozialgesetzbuch (SGB) erbringen, erhalten auf Antrag ein IK. Systematik einer IK: die ersten 2 Ziffern kennzeichnen die Art der Einrichtung, die Ziffern 3 und 4 kennzeichnen das Bundesland der Einrichtung, die Ziffer 5 bis 8 werden fortlaufend vergeben, die Ziffer 9 dient als Prüfziffer.
     * [de] Alle Einrichtungen, die Leistungen nach dem Sozialgesetzbuch (SGB) erbringen, erhalten auf Antrag ein IK. Systematik einer IK: die ersten 2 Ziffern kennzeichnen die Art der Einrichtung, die Ziffern 3 und 4 kennzeichnen das Bundesland der Einrichtung, die Ziffer 5 bis 8 werden fortlaufend vergeben, die Ziffer 9 dient als Prüfziffer.</pre>
     * @return [en] Alle Einrichtungen, die Leistungen nach dem Sozialgesetzbuch (SGB) erbringen, erhalten auf Antrag ein IK. Systematik einer IK: die ersten 2 Ziffern kennzeichnen die Art der Einrichtung, die Ziffern 3 und 4 kennzeichnen das Bundesland der Einrichtung, die Ziffer 5 bis 8 werden fortlaufend vergeben, die Ziffer 9 dient als Prüfziffer., [de] Alle Einrichtungen, die Leistungen nach dem Sozialgesetzbuch (SGB) erbringen, erhalten auf Antrag ein IK. Systematik einer IK: die ersten 2 Ziffern kennzeichnen die Art der Einrichtung, die Ziffern 3 und 4 kennzeichnen das Bundesland der Einrichtung, die Ziffer 5 bis 8 werden fortlaufend vergeben, die Ziffer 9 dient als Prüfziffer.
     */
    public static String getRulesTemp126Institutionskennzeichen() {
        return get(RULES_TEMP_126_INSTITUTIONSKENNZEICHEN).value;
    }

    /**
     * <pre>RULES_TEMP_127_INSTITUTIONSKENNZEICHEN
     * SQLite key: rules_temp_127_institutionskennzeichen
     * [en] Format: 9-stellig numerisch (Beispiel: 123456789)
     * [de] Format: 9-stellig numerisch (Beispiel: 123456789)</pre>
     * ATTENTION this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_115_EINWEISENDERARZT! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_116_EINWEISENDESKRANKENHAUS! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_129_KRANKENKASSE! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_190_KLINIK_IKZ!
     * @return [en] Format: 9-stellig numerisch (Beispiel: 123456789), [de] Format: 9-stellig numerisch (Beispiel: 123456789)
     */
    public static String getRulesTemp127Institutionskennzeichen() {
        return get(RULES_TEMP_127_INSTITUTIONSKENNZEICHEN).value;
    }

    /**
     * <pre>RULES_TEMP_128_INTENSIVVERWEILDAUER
     * SQLite key: rules_temp_128_intensivverweildauer
     * [en] Format: Ganzzahlig (Beispiel 5)
     * [de] Format: Ganzzahlig (Beispiel 5)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_105_ZUSCHLAGSTAGE! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_281_VERSICHERTER_ALTER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_55_ALTERINTAGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_60_ANZAHLABTEILUNGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_96_MITTLERE_VERWEILDAUER!
     * @return [en] Format: Ganzzahlig (Beispiel 5), [de] Format: Ganzzahlig (Beispiel 5)
     */
    public static String getRulesTemp128Intensivverweildauer() {
        return get(RULES_TEMP_128_INTENSIVVERWEILDAUER).value;
    }

    /**
     * <pre>RULES_TEMP_129_KRANKENKASSE
     * SQLite key: rules_temp_129_krankenkasse
     * [en] Format: 9-stellig numerisch (Beispiel: 123456789)
     * [de] Format: 9-stellig numerisch (Beispiel: 123456789)</pre>
     * ATTENTION this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_115_EINWEISENDERARZT! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_116_EINWEISENDESKRANKENHAUS! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_127_INSTITUTIONSKENNZEICHEN! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_190_KLINIK_IKZ!
     * @return [en] Format: 9-stellig numerisch (Beispiel: 123456789), [de] Format: 9-stellig numerisch (Beispiel: 123456789)
     */
    public static String getRulesTemp129Krankenkasse() {
        return get(RULES_TEMP_129_KRANKENKASSE).value;
    }

    /**
     * <pre>RULES_TEMP_12_HE_VERORDNUNGSDATUM
     * SQLite key: rules_temp_12_he_verordnungsdatum
     * [en] Datum, an dem das Hilfsmittel verordnet wurde.
     * [de] Datum, an dem das Hilfsmittel verordnet wurde.</pre>
     * ATTENTION this value ('Datum, an dem das Hilfsmittel verordnet wurde.') seems to be also defined under the key RULES_TEMP_27_HM_VERORDNUNGSDATUM!
     * @return [en] Datum, an dem das Hilfsmittel verordnet wurde., [de] Datum, an dem das Hilfsmittel verordnet wurde.
     */
    public static String getRulesTemp12HeVerordnungsdatum() {
        return get(RULES_TEMP_12_HE_VERORDNUNGSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_130_TAGDERENTBINDUNG_1
     * SQLite key: rules_temp_130_tagderentbindung1
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp130Tagderentbindung1() {
        return get(RULES_TEMP_130_TAGDERENTBINDUNG_1).value;
    }

    /**
     * <pre>RULES_TEMP_131_TAGDERENTBINDUNG_2
     * SQLite key: rules_temp_131_tagderentbindung2
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp131Tagderentbindung2() {
        return get(RULES_TEMP_131_TAGDERENTBINDUNG_2).value;
    }

    /**
     * <pre>RULES_TEMP_132_TAGEOHNEBERECHNUNG
     * SQLite key: rules_temp_132_tageohneberechnung
     * [en] Format: Format: Ganzzahlig (Beispiel 3)
     * [de] Format: Format: Ganzzahlig (Beispiel 3)</pre>
     * @return [en] Format: Format: Ganzzahlig (Beispiel 3), [de] Format: Format: Ganzzahlig (Beispiel 3)
     */
    public static String getRulesTemp132Tageohneberechnung() {
        return get(RULES_TEMP_132_TAGEOHNEBERECHNUNG).value;
    }

    /**
     * <pre>RULES_TEMP_133_URLAUB
     * SQLite key: rules_temp_133_urlaub
     * [en] Eine Beurlaubung liegt vor, wenn ein Patient mit Zustimmung des behandelnden Krankenhausarztes die Krankenhausbehandlung zeitlich befristet unterbricht, die stationäre Behandlung jedoch noch nicht abgeschlossen ist. Wird ein Patient beurlaubt, sind die vollständigen Urlaubstage, d. h. nicht der Tag des Urlaubsantritts bzw. - Endes, in der Rechnung auszuweisen. Vollständige Urlaubstage fließen nicht in die Berechnung der Verweildauer ein. Die Abrechnung erfolgt über die Entgeltgruppe 43.
     * [de] Eine Beurlaubung liegt vor, wenn ein Patient mit Zustimmung des behandelnden Krankenhausarztes die Krankenhausbehandlung zeitlich befristet unterbricht, die stationäre Behandlung jedoch noch nicht abgeschlossen ist. Wird ein Patient beurlaubt, sind die vollständigen Urlaubstage, d. h. nicht der Tag des Urlaubsantritts bzw. - Endes, in der Rechnung auszuweisen. Vollständige Urlaubstage fließen nicht in die Berechnung der Verweildauer ein. Die Abrechnung erfolgt über die Entgeltgruppe 43.</pre>
     * @return [en] Eine Beurlaubung liegt vor, wenn ein Patient mit Zustimmung des behandelnden Krankenhausarztes die Krankenhausbehandlung zeitlich befristet unterbricht, die stationäre Behandlung jedoch noch nicht abgeschlossen ist. Wird ein Patient beurlaubt, sind die vollständigen Urlaubstage, d. h. nicht der Tag des Urlaubsantritts bzw. - Endes, in der Rechnung auszuweisen. Vollständige Urlaubstage fließen nicht in die Berechnung der Verweildauer ein. Die Abrechnung erfolgt über die Entgeltgruppe 43., [de] Eine Beurlaubung liegt vor, wenn ein Patient mit Zustimmung des behandelnden Krankenhausarztes die Krankenhausbehandlung zeitlich befristet unterbricht, die stationäre Behandlung jedoch noch nicht abgeschlossen ist. Wird ein Patient beurlaubt, sind die vollständigen Urlaubstage, d. h. nicht der Tag des Urlaubsantritts bzw. - Endes, in der Rechnung auszuweisen. Vollständige Urlaubstage fließen nicht in die Berechnung der Verweildauer ein. Die Abrechnung erfolgt über die Entgeltgruppe 43.
     */
    public static String getRulesTemp133Urlaub() {
        return get(RULES_TEMP_133_URLAUB).value;
    }

    /**
     * <pre>RULES_TEMP_134_URLAUB
     * SQLite key: rules_temp_134_urlaub
     * [en] Format: Ganzzahlig (Beispiel 2)
     * [de] Format: Ganzzahlig (Beispiel 2)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
     * @return [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     */
    public static String getRulesTemp134Urlaub() {
        return get(RULES_TEMP_134_URLAUB).value;
    }

    /**
     * <pre>RULES_TEMP_135_VERWEILDAUER
     * SQLite key: rules_temp_135_verweildauer
     * [en] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     * [de] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.</pre>
     * ATTENTION this value ('Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_191_KLINIK_VERWEILDAUER! this value ('Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_193_KLINIK_VWD_STUNDEN!
     * @return [en] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus., [de] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     */
    public static String getRulesTemp135Verweildauer() {
        return get(RULES_TEMP_135_VERWEILDAUER).value;
    }

    /**
     * <pre>RULES_TEMP_136_VERWEILDAUER
     * SQLite key: rules_temp_136_verweildauer
     * [en] Format: Ganzzahlig (Beispiel 2)
     * [de] Format: Ganzzahlig (Beispiel 2)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
     * @return [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     */
    public static String getRulesTemp136Verweildauer() {
        return get(RULES_TEMP_136_VERWEILDAUER).value;
    }

    /**
     * <pre>RULES_TEMP_137_VERWEILDAUERINSTUNDEN
     * SQLite key: rules_temp_137_verweildauerinstunden
     * [en] Format: Ganzzahlig (Beispiel 50)
     * [de] Format: Ganzzahlig (Beispiel 50)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 50)') seems to be also defined under the key RULES_TEMP_54_ALTERINJAHREN! this value ('Format: Ganzzahlig (Beispiel 50)') seems to be also defined under the key RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_2!
     * @return [en] Format: Ganzzahlig (Beispiel 50), [de] Format: Ganzzahlig (Beispiel 50)
     */
    public static String getRulesTemp137Verweildauerinstunden() {
        return get(RULES_TEMP_137_VERWEILDAUERINSTUNDEN).value;
    }

    /**
     * <pre>RULES_TEMP_138_GLEICHENPROZEDURENANZAHL
     * SQLite key: rules_temp_138_gleichenprozedurenanzahl
     * [en] Format: Ganzzahlig (Beispiel 4)
     * [de] Format: Ganzzahlig (Beispiel 4)</pre>
     * @return [en] Format: Ganzzahlig (Beispiel 4), [de] Format: Ganzzahlig (Beispiel 4)
     */
    public static String getRulesTemp138Gleichenprozedurenanzahl() {
        return get(RULES_TEMP_138_GLEICHENPROZEDURENANZAHL).value;
    }

    /**
     * <pre>RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN
     * SQLite key: rules_temp_139_anzahlnebendiagnosen
     * [en] Format: Ganzzahlig (Beispiel 2)
     * [de] Format: Ganzzahlig (Beispiel 2)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
     * @return [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     */
    public static String getRulesTemp139Anzahlnebendiagnosen() {
        return get(RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN).value;
    }

    /**
     * <pre>RULES_TEMP_13_HE_VERORDNUNGSDATUM
     * SQLite key: rules_temp_13_he_verordnungsdatum
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp13HeVerordnungsdatum() {
        return get(RULES_TEMP_13_HE_VERORDNUNGSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_140_ANZAHLPROZEDUREN
     * SQLite key: rules_temp_140_anzahlprozeduren
     * [en] Format: Ganzzahlig (Beispiel 2)
     * [de] Format: Ganzzahlig (Beispiel 2)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
     * @return [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     */
    public static String getRulesTemp140Anzahlprozeduren() {
        return get(RULES_TEMP_140_ANZAHLPROZEDUREN).value;
    }

    /**
     * <pre>RULES_TEMP_141_AUFNAHMEDIAGNOSE
     * SQLite key: rules_temp_141_aufnahmediagnose
     * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
     * ATTENTION this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
     * @return [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     */
    public static String getRulesTemp141Aufnahmediagnose() {
        return get(RULES_TEMP_141_AUFNAHMEDIAGNOSE).value;
    }

    /**
     * <pre>RULES_TEMP_142_DIAGNOSE
     * SQLite key: rules_temp_142_diagnose
     * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
     * ATTENTION this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
     * @return [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     */
    public static String getRulesTemp142Diagnose() {
        return get(RULES_TEMP_142_DIAGNOSE).value;
    }

    /**
     * <pre>RULES_TEMP_143_HAUPTDIAGNOSE
     * SQLite key: rules_temp_143_hauptdiagnose
     * [en] Die Diagnose, welche nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     * [de] Die Diagnose, welche nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.</pre>
     * @return [en] Die Diagnose, welche nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code., [de] Die Diagnose, welche nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     */
    public static String getRulesTemp143Hauptdiagnose() {
        return get(RULES_TEMP_143_HAUPTDIAGNOSE).value;
    }

    /**
     * <pre>RULES_TEMP_144_HAUPTDIAGNOSE
     * SQLite key: rules_temp_144_hauptdiagnose
     * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
     * ATTENTION this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
     * @return [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     */
    public static String getRulesTemp144Hauptdiagnose() {
        return get(RULES_TEMP_144_HAUPTDIAGNOSE).value;
    }

    /**
     * <pre>RULES_TEMP_145_NEBENDIAGNOSE
     * SQLite key: rules_temp_145_nebendiagnose
     * [en] Eine Krankheit oder Beschwerde, die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     * [de] Eine Krankheit oder Beschwerde, die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.</pre>
     * @return [en] Eine Krankheit oder Beschwerde, die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code., [de] Eine Krankheit oder Beschwerde, die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     */
    public static String getRulesTemp145Nebendiagnose() {
        return get(RULES_TEMP_145_NEBENDIAGNOSE).value;
    }

    /**
     * <pre>RULES_TEMP_146_NEBENDIAGNOSE
     * SQLite key: rules_temp_146_nebendiagnose
     * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
     * ATTENTION this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
     * @return [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     */
    public static String getRulesTemp146Nebendiagnose() {
        return get(RULES_TEMP_146_NEBENDIAGNOSE).value;
    }

    /**
     * <pre>RULES_TEMP_147_OPSDATUM
     * SQLite key: rules_temp_147_opsdatum
     * [en] Format: YYYYMMDD; nur in Verbindung mit einem Prozedurenkode sinnvoll
     * [de] Format: YYYYMMDD; nur in Verbindung mit einem Prozedurenkode sinnvoll</pre>
     * @return [en] Format: YYYYMMDD; nur in Verbindung mit einem Prozedurenkode sinnvoll, [de] Format: YYYYMMDD; nur in Verbindung mit einem Prozedurenkode sinnvoll
     */
    public static String getRulesTemp147Opsdatum() {
        return get(RULES_TEMP_147_OPSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_148_PROZEDUR
     * SQLite key: rules_temp_148_prozedur
     * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)
     * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)</pre>
     * ATTENTION this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)') seems to be also defined under the key RULES_TEMP_157_KLINIK_PROZEDUR! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)') seems to be also defined under the key RULES_TEMP_90_GROUPERRELEVANTEPROZEDUR!
     * @return [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)
     */
    public static String getRulesTemp148Prozedur() {
        return get(RULES_TEMP_148_PROZEDUR).value;
    }

    /**
     * <pre>RULES_TEMP_149_SEKDIAGNOSE
     * SQLite key: rules_temp_149_sekdiagnose
     * [en] z.B. N08.3* Glomeruläre Krankheiten bei Diabetes mellitus oder U81! Bakterien mit Multiresistenz gegen Antibiotika
     * [de] z.B. N08.3* Glomeruläre Krankheiten bei Diabetes mellitus oder U81! Bakterien mit Multiresistenz gegen Antibiotika</pre>
     * @return [en] z.B. N08.3* Glomeruläre Krankheiten bei Diabetes mellitus oder U81! Bakterien mit Multiresistenz gegen Antibiotika, [de] z.B. N08.3* Glomeruläre Krankheiten bei Diabetes mellitus oder U81! Bakterien mit Multiresistenz gegen Antibiotika
     */
    public static String getRulesTemp149Sekdiagnose() {
        return get(RULES_TEMP_149_SEKDIAGNOSE).value;
    }

    /**
     * <pre>RULES_TEMP_14_HM_PREIS
     * SQLite key: rules_temp_14_hm_preis
     * [en] Die Kosten des Hilfsmittels.
     * [de] Die Kosten des Hilfsmittels.</pre>
     * ATTENTION this value ('Die Kosten des Hilfsmittels.') seems to be also defined under the key RULES_TEMP_1_HE_PREIS!
     * @return [en] Die Kosten des Hilfsmittels., [de] Die Kosten des Hilfsmittels.
     */
    public static String getRulesTemp14HmPreis() {
        return get(RULES_TEMP_14_HM_PREIS).value;
    }

    /**
     * <pre>RULES_TEMP_150_SEKDIAGNOSE
     * SQLite key: rules_temp_150_sekdiagnose
     * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
     * ATTENTION this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
     * @return [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     */
    public static String getRulesTemp150Sekdiagnose() {
        return get(RULES_TEMP_150_SEKDIAGNOSE).value;
    }

    /**
     * <pre>RULES_TEMP_151_SEKDIAGNOSEPRIM
     * SQLite key: rules_temp_151_sekdiagnoseprim
     * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
     * ATTENTION this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
     * @return [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     */
    public static String getRulesTemp151Sekdiagnoseprim() {
        return get(RULES_TEMP_151_SEKDIAGNOSEPRIM).value;
    }

    /**
     * <pre>RULES_TEMP_152_KLINIK_HAUPTDIAGNOSE
     * SQLite key: rules_temp_152_klinik_hauptdiagnose
     * [en] Klinische Daten: Siehe Hauptdiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     * [de] Klinische Daten: Siehe Hauptdiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.</pre>
     * @return [en] Klinische Daten: Siehe Hauptdiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code., [de] Klinische Daten: Siehe Hauptdiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     */
    public static String getRulesTemp152KlinikHauptdiagnose() {
        return get(RULES_TEMP_152_KLINIK_HAUPTDIAGNOSE).value;
    }

    /**
     * <pre>RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE
     * SQLite key: rules_temp_153_klinik_hauptdiagnose
     * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
     * ATTENTION this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
     * @return [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     */
    public static String getRulesTemp153KlinikHauptdiagnose() {
        return get(RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE).value;
    }

    /**
     * <pre>RULES_TEMP_154_KLINIK_NEBENDIAGNOSE
     * SQLite key: rules_temp_154_klinik_nebendiagnose
     * [en] Klinische Daten: Siehe Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     * [de] Klinische Daten: Siehe Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.</pre>
     * @return [en] Klinische Daten: Siehe Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code., [de] Klinische Daten: Siehe Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     */
    public static String getRulesTemp154KlinikNebendiagnose() {
        return get(RULES_TEMP_154_KLINIK_NEBENDIAGNOSE).value;
    }

    /**
     * <pre>RULES_TEMP_155_KLINIK_NEBENDIAGNOSE
     * SQLite key: rules_temp_155_klinik_nebendiagnose
     * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
     * ATTENTION this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
     * @return [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     */
    public static String getRulesTemp155KlinikNebendiagnose() {
        return get(RULES_TEMP_155_KLINIK_NEBENDIAGNOSE).value;
    }

    /**
     * <pre>RULES_TEMP_156_KLINIK_PROZEDUR
     * SQLite key: rules_temp_156_klinik_prozedur
     * [en] Klinische Daten: Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.
     * [de] Klinische Daten: Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.</pre>
     * @return [en] Klinische Daten: Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code., [de] Klinische Daten: Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.
     */
    public static String getRulesTemp156KlinikProzedur() {
        return get(RULES_TEMP_156_KLINIK_PROZEDUR).value;
    }

    /**
     * <pre>RULES_TEMP_157_KLINIK_PROZEDUR
     * SQLite key: rules_temp_157_klinik_prozedur
     * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)
     * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)</pre>
     * ATTENTION this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)') seems to be also defined under the key RULES_TEMP_148_PROZEDUR! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)') seems to be also defined under the key RULES_TEMP_90_GROUPERRELEVANTEPROZEDUR!
     * @return [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)
     */
    public static String getRulesTemp157KlinikProzedur() {
        return get(RULES_TEMP_157_KLINIK_PROZEDUR).value;
    }

    /**
     * <pre>RULES_TEMP_158_KLINIK_ADRG
     * SQLite key: rules_temp_158_klinik_adrg
     * [en] Klinische Daten: Basis - DRG: DRG ohne letzte Stelle (für Schweregrad).
     * [de] Klinische Daten: Basis - DRG: DRG ohne letzte Stelle (für Schweregrad).</pre>
     * @return [en] Klinische Daten: Basis - DRG: DRG ohne letzte Stelle (für Schweregrad)., [de] Klinische Daten: Basis - DRG: DRG ohne letzte Stelle (für Schweregrad).
     */
    public static String getRulesTemp158KlinikAdrg() {
        return get(RULES_TEMP_158_KLINIK_ADRG).value;
    }

    /**
     * <pre>RULES_TEMP_159_KLINIK_ADRG
     * SQLite key: rules_temp_159_klinik_adrg
     * [en] Format: Alphanumerisch (Beispiele: A11 oder B75)
     * [de] Format: Alphanumerisch (Beispiele: A11 oder B75)</pre>
     * ATTENTION this value ('Format: Alphanumerisch (Beispiele: A11 oder B75)') seems to be also defined under the key RULES_TEMP_75_ADRG!
     * @return [en] Format: Alphanumerisch (Beispiele: A11 oder B75), [de] Format: Alphanumerisch (Beispiele: A11 oder B75)
     */
    public static String getRulesTemp159KlinikAdrg() {
        return get(RULES_TEMP_159_KLINIK_ADRG).value;
    }

    /**
     * <pre>RULES_TEMP_15_HM_PREIS
     * SQLite key: rules_temp_15_hm_preis
     * [en] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)
     * [de] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)</pre>
     * ATTENTION this value ('Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_2_HE_PREIS!
     * @return [en] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75), [de] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)
     */
    public static String getRulesTemp15HmPreis() {
        return get(RULES_TEMP_15_HM_PREIS).value;
    }

    /**
     * <pre>RULES_TEMP_160_KLINIK_DRG
     * SQLite key: rules_temp_160_klinik_drg
     * [en] Format: Alphanumerisch (Beispiele: A11B oder B75A)
     * [de] Format: Alphanumerisch (Beispiele: A11B oder B75A)</pre>
     * ATTENTION this value ('Format: Alphanumerisch (Beispiele: A11B oder B75A)') seems to be also defined under the key RULES_TEMP_81_DRG!
     * @return [en] Format: Alphanumerisch (Beispiele: A11B oder B75A), [de] Format: Alphanumerisch (Beispiele: A11B oder B75A)
     */
    public static String getRulesTemp160KlinikDrg() {
        return get(RULES_TEMP_160_KLINIK_DRG).value;
    }

    /**
     * <pre>RULES_TEMP_161_KLINIK_OGVD
     * SQLite key: rules_temp_161_klinik_ogvd
     * [en] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.
     * [de] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.</pre>
     * ATTENTION this value ('Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.') seems to be also defined under the key RULES_TEMP_97_OBERE_GRENZVERWEILDAUER!
     * @return [en] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig., [de] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.
     */
    public static String getRulesTemp161KlinikOgvd() {
        return get(RULES_TEMP_161_KLINIK_OGVD).value;
    }

    /**
     * <pre>RULES_TEMP_162_KLINIK_OGVD
     * SQLite key: rules_temp_162_klinik_ogvd
     * [en] Format: Ganzzahlig (Beispiel 15)
     * [de] Format: Ganzzahlig (Beispiel 15)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 15)') seems to be also defined under the key RULES_TEMP_98_OBERE_GRENZVERWEILDAUER!
     * @return [en] Format: Ganzzahlig (Beispiel 15), [de] Format: Ganzzahlig (Beispiel 15)
     */
    public static String getRulesTemp162KlinikOgvd() {
        return get(RULES_TEMP_162_KLINIK_OGVD).value;
    }

    /**
     * <pre>RULES_TEMP_163_KLINIK_UGVD
     * SQLite key: rules_temp_163_klinik_ugvd
     * [en] Format: Ganzzahlig (Beispiel 2)
     * [de] Format: Ganzzahlig (Beispiel 2)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
     * @return [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     */
    public static String getRulesTemp163KlinikUgvd() {
        return get(RULES_TEMP_163_KLINIK_UGVD).value;
    }

    /**
     * <pre>RULES_TEMP_164_KLINIK_PEPP
     * SQLite key: rules_temp_164_klinik_pepp
     * [en] Klinische Daten:Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik
     * [de] Klinische Daten:Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik</pre>
     * @return [en] Klinische Daten:Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik, [de] Klinische Daten:Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik
     */
    public static String getRulesTemp164KlinikPepp() {
        return get(RULES_TEMP_164_KLINIK_PEPP).value;
    }

    /**
     * <pre>RULES_TEMP_165_KLINIK_PEPP
     * SQLite key: rules_temp_165_klinik_pepp
     * [en] Format: Aplhanumerisch (Beispiele P003B, TK04Z)
     * [de] Format: Aplhanumerisch (Beispiele P003B, TK04Z)</pre>
     * ATTENTION this value ('Format: Aplhanumerisch (Beispiele P003B, TK04Z)') seems to be also defined under the key RULES_TEMP_99_PEPP!
     * @return [en] Format: Aplhanumerisch (Beispiele P003B, TK04Z), [de] Format: Aplhanumerisch (Beispiele P003B, TK04Z)
     */
    public static String getRulesTemp165KlinikPepp() {
        return get(RULES_TEMP_165_KLINIK_PEPP).value;
    }

    /**
     * <pre>RULES_TEMP_166_KLINIK_ENTGELTANZAHL
     * SQLite key: rules_temp_166_klinik_entgeltanzahl
     * [en] Format: Ganzzahlig (Beispiel 2)
     * [de] Format: Ganzzahlig (Beispiel 2)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
     * @return [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     */
    public static String getRulesTemp166KlinikEntgeltanzahl() {
        return get(RULES_TEMP_166_KLINIK_ENTGELTANZAHL).value;
    }

    /**
     * <pre>RULES_TEMP_167_KLINIK_ENTGELTART
     * SQLite key: rules_temp_167_klinik_entgeltart
     * [en] Format: alphanumerisch 8-stellig (Beispiel: 48000001)
     * [de] Format: alphanumerisch 8-stellig (Beispiel: 48000001)</pre>
     * ATTENTION this value ('Format: alphanumerisch 8-stellig (Beispiel: 48000001)') seems to be also defined under the key RULES_TEMP_82_ENTGELT!
     * @return [en] Format: alphanumerisch 8-stellig (Beispiel: 48000001), [de] Format: alphanumerisch 8-stellig (Beispiel: 48000001)
     */
    public static String getRulesTemp167KlinikEntgeltart() {
        return get(RULES_TEMP_167_KLINIK_ENTGELTART).value;
    }

    /**
     * <pre>RULES_TEMP_168_FALL_NUMERIC_10
     * SQLite key: rules_temp_168_fall_numeric10
     * [de] Fall.Numeric10</pre>
     * ATTENTION this value ('Fall.Numeric10') seems to be also defined under the key RULES_TEMP_52_FALL_NUMERIC_10!
     * @return [de] Fall.Numeric10
     */
    public static String getRulesTemp168FallNumeric10() {
        return get(RULES_TEMP_168_FALL_NUMERIC_10).value;
    }

    /**
     * <pre>RULES_TEMP_168_KLINIK_ENTGELTBETRAG
     * SQLite key: rules_temp_168_klinik_entgeltbetrag
     * [en] Format: Währung (Beispiel: 57.52)
     * [de] Format: Währung (Beispiel: 57.52)</pre>
     * ATTENTION this value ('Format: Währung (Beispiel: 57.52)') seems to be also defined under the key RULES_TEMP_86_ENTGELTEINZELBETRAG!
     * @return [en] Format: Währung (Beispiel: 57.52), [de] Format: Währung (Beispiel: 57.52)
     */
    public static String getRulesTemp168KlinikEntgeltbetrag() {
        return get(RULES_TEMP_168_KLINIK_ENTGELTBETRAG).value;
    }

    /**
     * <pre>RULES_TEMP_169_FALL_NUMERIC_6
     * SQLite key: rules_temp_169_fall_numeric6
     * [de] Fall.Numeric6</pre>
     * ATTENTION this value ('Fall.Numeric6') seems to be also defined under the key RULES_TEMP_53_FALL_NUMERIC_6!
     * @return [de] Fall.Numeric6
     */
    public static String getRulesTemp169FallNumeric6() {
        return get(RULES_TEMP_169_FALL_NUMERIC_6).value;
    }

    /**
     * <pre>RULES_TEMP_169_KLINIK_AUFNAHMEDATUM
     * SQLite key: rules_temp_169_klinik_aufnahmedatum
     * [en] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     * [de] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.</pre>
     * ATTENTION this value ('Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.') seems to be also defined under the key RULES_TEMP_172_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT!
     * @return [en] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird., [de] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     */
    public static String getRulesTemp169KlinikAufnahmedatum() {
        return get(RULES_TEMP_169_KLINIK_AUFNAHMEDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_16_HM_GESAMTMENGE
     * SQLite key: rules_temp_16_hm_gesamtmenge
     * [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.
     * [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.</pre>
     * ATTENTION this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.') seems to be also defined under the key RULES_TEMP_3_HE_GESAMTMENGE!
     * @return [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist., [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.
     */
    public static String getRulesTemp16HmGesamtmenge() {
        return get(RULES_TEMP_16_HM_GESAMTMENGE).value;
    }

    /**
     * <pre>RULES_TEMP_170_FALL_NUMERIC_7
     * SQLite key: rules_temp_170_fall_numeric7
     * [de] Fall.Numeric7</pre>
     * ATTENTION this value ('Fall.Numeric7') seems to be also defined under the key RULES_TEMP_54_FALL_NUMERIC_7!
     * @return [de] Fall.Numeric7
     */
    public static String getRulesTemp170FallNumeric7() {
        return get(RULES_TEMP_170_FALL_NUMERIC_7).value;
    }

    /**
     * <pre>RULES_TEMP_170_KLINIK_AUFNAHMEDATUM
     * SQLite key: rules_temp_170_klinik_aufnahmedatum
     * [en] Die Uhrzeit der Aufnahme wird nicht berücksichtigt
     * [de] Die Uhrzeit der Aufnahme wird nicht berücksichtigt</pre>
     * ATTENTION this value ('Die Uhrzeit der Aufnahme wird nicht berücksichtigt') seems to be also defined under the key RULES_TEMP_106_AUFNAHMEDATUM!
     * @return [en] Die Uhrzeit der Aufnahme wird nicht berücksichtigt, [de] Die Uhrzeit der Aufnahme wird nicht berücksichtigt
     */
    public static String getRulesTemp170KlinikAufnahmedatum() {
        return get(RULES_TEMP_170_KLINIK_AUFNAHMEDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_171_FALL_NUMERIC_8
     * SQLite key: rules_temp_171_fall_numeric8
     * [de] Fall.Numeric8</pre>
     * ATTENTION this value ('Fall.Numeric8') seems to be also defined under the key RULES_TEMP_55_FALL_NUMERIC_8!
     * @return [de] Fall.Numeric8
     */
    public static String getRulesTemp171FallNumeric8() {
        return get(RULES_TEMP_171_FALL_NUMERIC_8).value;
    }

    /**
     * <pre>RULES_TEMP_171_KLINIK_AUFNAHMEDATUM
     * SQLite key: rules_temp_171_klinik_aufnahmedatum
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp171KlinikAufnahmedatum() {
        return get(RULES_TEMP_171_KLINIK_AUFNAHMEDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_172_FALL_NUMERIC_9
     * SQLite key: rules_temp_172_fall_numeric9
     * [de] Fall.Numeric9</pre>
     * ATTENTION this value ('Fall.Numeric9') seems to be also defined under the key RULES_TEMP_56_FALL_NUMERIC_9!
     * @return [de] Fall.Numeric9
     */
    public static String getRulesTemp172FallNumeric9() {
        return get(RULES_TEMP_172_FALL_NUMERIC_9).value;
    }

    /**
     * <pre>RULES_TEMP_172_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT
     * SQLite key: rules_temp_172_klinik_aufnahmedatum_mit_uhrzeit
     * [en] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     * [de] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.</pre>
     * ATTENTION this value ('Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.') seems to be also defined under the key RULES_TEMP_169_KLINIK_AUFNAHMEDATUM!
     * @return [en] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird., [de] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     */
    public static String getRulesTemp172KlinikAufnahmedatumMitUhrzeit() {
        return get(RULES_TEMP_172_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_173_FALL_STRING_10
     * SQLite key: rules_temp_173_fall_string10
     * [de] Fall.String10</pre>
     * ATTENTION this value ('Fall.String10') seems to be also defined under the key RULES_TEMP_57_FALL_STRING_10!
     * @return [de] Fall.String10
     */
    public static String getRulesTemp173FallString10() {
        return get(RULES_TEMP_173_FALL_STRING_10).value;
    }

    /**
     * <pre>RULES_TEMP_173_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT
     * SQLite key: rules_temp_173_klinik_aufnahmedatum_mit_uhrzeit
     * [en] Die Uhrzeit der Aufnahme wird mitberücksichtigt
     * [de] Die Uhrzeit der Aufnahme wird mitberücksichtigt</pre>
     * ATTENTION this value ('Die Uhrzeit der Aufnahme wird mitberücksichtigt') seems to be also defined under the key RULES_TEMP_108_AUFNAHMEDATUM_MIT_UHRZEIT!
     * @return [en] Die Uhrzeit der Aufnahme wird mitberücksichtigt, [de] Die Uhrzeit der Aufnahme wird mitberücksichtigt
     */
    public static String getRulesTemp173KlinikAufnahmedatumMitUhrzeit() {
        return get(RULES_TEMP_173_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_174_FALL_STRING_6
     * SQLite key: rules_temp_174_fall_string6
     * [de] Fall.String6</pre>
     * ATTENTION this value ('Fall.String6') seems to be also defined under the key RULES_TEMP_58_FALL_STRING_6!
     * @return [de] Fall.String6
     */
    public static String getRulesTemp174FallString6() {
        return get(RULES_TEMP_174_FALL_STRING_6).value;
    }

    /**
     * <pre>RULES_TEMP_174_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT
     * SQLite key: rules_temp_174_klinik_aufnahmedatum_mit_uhrzeit
     * [en] Format: YYYYMMDD HH:mm
     * [de] Format: YYYYMMDD HH:mm</pre>
     * ATTENTION this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_109_AUFNAHMEDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_120_ENTLASSUNGSDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_183_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT!
     * @return [en] Format: YYYYMMDD HH:mm, [de] Format: YYYYMMDD HH:mm
     */
    public static String getRulesTemp174KlinikAufnahmedatumMitUhrzeit() {
        return get(RULES_TEMP_174_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_175_FALL_STRING_7
     * SQLite key: rules_temp_175_fall_string7
     * [de] Fall.String7</pre>
     * ATTENTION this value ('Fall.String7') seems to be also defined under the key RULES_TEMP_59_FALL_STRING_7!
     * @return [de] Fall.String7
     */
    public static String getRulesTemp175FallString7() {
        return get(RULES_TEMP_175_FALL_STRING_7).value;
    }

    /**
     * <pre>RULES_TEMP_175_KLINIK_AUFNAHMEUHRZEIT
     * SQLite key: rules_temp_175_klinik_aufnahmeuhrzeit
     * [en] Klinische Daten: Aufnahmeuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     * [de] Klinische Daten: Aufnahmeuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.</pre>
     * @return [en] Klinische Daten: Aufnahmeuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird., [de] Klinische Daten: Aufnahmeuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     */
    public static String getRulesTemp175KlinikAufnahmeuhrzeit() {
        return get(RULES_TEMP_175_KLINIK_AUFNAHMEUHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_176_FALL_STRING_8
     * SQLite key: rules_temp_176_fall_string8
     * [de] Fall.String8</pre>
     * ATTENTION this value ('Fall.String8') seems to be also defined under the key RULES_TEMP_60_FALL_STRING_8!
     * @return [de] Fall.String8
     */
    public static String getRulesTemp176FallString8() {
        return get(RULES_TEMP_176_FALL_STRING_8).value;
    }

    /**
     * <pre>RULES_TEMP_176_KLINIK_AUFNAHMEUHRZEIT
     * SQLite key: rules_temp_176_klinik_aufnahmeuhrzeit
     * [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     * [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten</pre>
     * ATTENTION this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_113_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_124_ENTLASSUNGSUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_185_KLINIK_ENTLASSUNGSUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_70_VERLEGUNGSUHRZEIT!
     * @return [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten, [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     */
    public static String getRulesTemp176KlinikAufnahmeuhrzeit() {
        return get(RULES_TEMP_176_KLINIK_AUFNAHMEUHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_177_FALL_STRING_9
     * SQLite key: rules_temp_177_fall_string9
     * [de] Fall.String9</pre>
     * ATTENTION this value ('Fall.String9') seems to be also defined under the key RULES_TEMP_61_FALL_STRING_9!
     * @return [de] Fall.String9
     */
    public static String getRulesTemp177FallString9() {
        return get(RULES_TEMP_177_FALL_STRING_9).value;
    }

    /**
     * <pre>RULES_TEMP_177_KLINIK_BEATMUNGSSTUNDEN
     * SQLite key: rules_temp_177_klinik_beatmungsstunden
     * [en] Format: Ganzzahlig (Beispiel 30)
     * [de] Format: Ganzzahlig (Beispiel 30)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 30)') seems to be also defined under the key RULES_TEMP_114_BEATMUNGSDAUER!
     * @return [en] Format: Ganzzahlig (Beispiel 30), [de] Format: Ganzzahlig (Beispiel 30)
     */
    public static String getRulesTemp177KlinikBeatmungsstunden() {
        return get(RULES_TEMP_177_KLINIK_BEATMUNGSSTUNDEN).value;
    }

    /**
     * <pre>RULES_TEMP_178_KLINIK_ENTLASSUNGSDATUM
     * SQLite key: rules_temp_178_klinik_entlassungsdatum
     * [en] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     * [de] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.</pre>
     * ATTENTION this value ('Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.') seems to be also defined under the key RULES_TEMP_181_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT!
     * @return [en] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird., [de] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     */
    public static String getRulesTemp178KlinikEntlassungsdatum() {
        return get(RULES_TEMP_178_KLINIK_ENTLASSUNGSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_179_KLINIK_ENTLASSUNGSDATUM
     * SQLite key: rules_temp_179_klinik_entlassungsdatum
     * [en] Die Uhrzeit der Entlassung wird nicht berücksichtigt
     * [de] Die Uhrzeit der Entlassung wird nicht berücksichtigt</pre>
     * ATTENTION this value ('Die Uhrzeit der Entlassung wird nicht berücksichtigt') seems to be also defined under the key RULES_TEMP_117_ENTLASSUNGSDATUM!
     * @return [en] Die Uhrzeit der Entlassung wird nicht berücksichtigt, [de] Die Uhrzeit der Entlassung wird nicht berücksichtigt
     */
    public static String getRulesTemp179KlinikEntlassungsdatum() {
        return get(RULES_TEMP_179_KLINIK_ENTLASSUNGSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_17_HM_GESAMTMENGE
     * SQLite key: rules_temp_17_hm_gesamtmenge
     * [en] Format: numerisch (Beispiel: 5)
     * [de] Format: numerisch (Beispiel: 5)</pre>
     * ATTENTION this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_11_HE_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_24_HM_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_26_HM_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_4_HE_GESAMTMENGE!
     * @return [en] Format: numerisch (Beispiel: 5), [de] Format: numerisch (Beispiel: 5)
     */
    public static String getRulesTemp17HmGesamtmenge() {
        return get(RULES_TEMP_17_HM_GESAMTMENGE).value;
    }

    /**
     * <pre>RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM
     * SQLite key: rules_temp_180_klinik_entlassungsdatum
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp180KlinikEntlassungsdatum() {
        return get(RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_181_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT
     * SQLite key: rules_temp_181_klinik_entlassungsdatum_mit_uhrzeit
     * [en] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     * [de] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.</pre>
     * ATTENTION this value ('Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.') seems to be also defined under the key RULES_TEMP_178_KLINIK_ENTLASSUNGSDATUM!
     * @return [en] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird., [de] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     */
    public static String getRulesTemp181KlinikEntlassungsdatumMitUhrzeit() {
        return get(RULES_TEMP_181_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_182_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT
     * SQLite key: rules_temp_182_klinik_entlassungsdatum_mit_uhrzeit
     * [en] Die Uhrzeit der Entlassung wird mitberücksichtigt
     * [de] Die Uhrzeit der Entlassung wird mitberücksichtigt</pre>
     * ATTENTION this value ('Die Uhrzeit der Entlassung wird mitberücksichtigt') seems to be also defined under the key RULES_TEMP_119_ENTLASSUNGSDATUM_MIT_UHRZEIT!
     * @return [en] Die Uhrzeit der Entlassung wird mitberücksichtigt, [de] Die Uhrzeit der Entlassung wird mitberücksichtigt
     */
    public static String getRulesTemp182KlinikEntlassungsdatumMitUhrzeit() {
        return get(RULES_TEMP_182_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_183_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT
     * SQLite key: rules_temp_183_klinik_entlassungsdatum_mit_uhrzeit
     * [en] Format: YYYYMMDD HH:mm
     * [de] Format: YYYYMMDD HH:mm</pre>
     * ATTENTION this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_109_AUFNAHMEDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_120_ENTLASSUNGSDATUM_MIT_UHRZEIT! this value ('Format: YYYYMMDD HH:mm') seems to be also defined under the key RULES_TEMP_174_KLINIK_AUFNAHMEDATUM_MIT_UHRZEIT!
     * @return [en] Format: YYYYMMDD HH:mm, [de] Format: YYYYMMDD HH:mm
     */
    public static String getRulesTemp183KlinikEntlassungsdatumMitUhrzeit() {
        return get(RULES_TEMP_183_KLINIK_ENTLASSUNGSDATUM_MIT_UHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_184_KLINIK_ENTLASSUNGSUHRZEIT
     * SQLite key: rules_temp_184_klinik_entlassungsuhrzeit
     * [en] Klinische Daten: Entlassungsuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     * [de] Klinische Daten: Entlassungsuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.</pre>
     * @return [en] Klinische Daten: Entlassungsuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird., [de] Klinische Daten: Entlassungsuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     */
    public static String getRulesTemp184KlinikEntlassungsuhrzeit() {
        return get(RULES_TEMP_184_KLINIK_ENTLASSUNGSUHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_185_KLINIK_ENTLASSUNGSUHRZEIT
     * SQLite key: rules_temp_185_klinik_entlassungsuhrzeit
     * [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     * [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten</pre>
     * ATTENTION this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_113_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_124_ENTLASSUNGSUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_176_KLINIK_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_70_VERLEGUNGSUHRZEIT!
     * @return [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten, [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     */
    public static String getRulesTemp185KlinikEntlassungsuhrzeit() {
        return get(RULES_TEMP_185_KLINIK_ENTLASSUNGSUHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_186_KLINIK_FALLANZAHL
     * SQLite key: rules_temp_186_klinik_fallanzahl
     * [en] Klinische Daten: Die Summe der Fälle eines Patienten.
     * [de] Klinische Daten: Die Summe der Fälle eines Patienten.</pre>
     * @return [en] Klinische Daten: Die Summe der Fälle eines Patienten., [de] Klinische Daten: Die Summe der Fälle eines Patienten.
     */
    public static String getRulesTemp186KlinikFallanzahl() {
        return get(RULES_TEMP_186_KLINIK_FALLANZAHL).value;
    }

    /**
     * <pre>RULES_TEMP_187_KLINIK_FALLANZAHL
     * SQLite key: rules_temp_187_klinik_fallanzahl
     * [en] Format: Ganzzahlig (Beispiel 2)
     * [de] Format: Ganzzahlig (Beispiel 2)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
     * @return [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     */
    public static String getRulesTemp187KlinikFallanzahl() {
        return get(RULES_TEMP_187_KLINIK_FALLANZAHL).value;
    }

    /**
     * <pre>RULES_TEMP_188_KLINIK_FALLKOSTEN
     * SQLite key: rules_temp_188_klinik_fallkosten
     * [en] Klinische Daten: Gesamtkosten enes Falls
     * [de] Klinische Daten: Gesamtkosten enes Falls</pre>
     * @return [en] Klinische Daten: Gesamtkosten enes Falls, [de] Klinische Daten: Gesamtkosten enes Falls
     */
    public static String getRulesTemp188KlinikFallkosten() {
        return get(RULES_TEMP_188_KLINIK_FALLKOSTEN).value;
    }

    /**
     * <pre>RULES_TEMP_189_KLINIK_IKZ
     * SQLite key: rules_temp_189_klinik_ikz
     * [en] Klinische Daten: Institutionskennzeichen. Siehe Institutionskennzeichen IK.
     * [de] Klinische Daten: Institutionskennzeichen. Siehe Institutionskennzeichen IK.</pre>
     * @return [en] Klinische Daten: Institutionskennzeichen. Siehe Institutionskennzeichen IK., [de] Klinische Daten: Institutionskennzeichen. Siehe Institutionskennzeichen IK.
     */
    public static String getRulesTemp189KlinikIkz() {
        return get(RULES_TEMP_189_KLINIK_IKZ).value;
    }

    /**
     * <pre>RULES_TEMP_18_HM_GESAMTPREIS_ALLE
     * SQLite key: rules_temp_18_hm_gesamtpreis_alle
     * [en] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.
     * [de] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.</pre>
     * ATTENTION this value ('Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_5_HE_GESAMTPREIS_ALLE!
     * @return [en] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat., [de] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.
     */
    public static String getRulesTemp18HmGesamtpreisAlle() {
        return get(RULES_TEMP_18_HM_GESAMTPREIS_ALLE).value;
    }

    /**
     * <pre>RULES_TEMP_190_KLINIK_IKZ
     * SQLite key: rules_temp_190_klinik_ikz
     * [en] Format: 9-stellig numerisch (Beispiel: 123456789)
     * [de] Format: 9-stellig numerisch (Beispiel: 123456789)</pre>
     * ATTENTION this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_115_EINWEISENDERARZT! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_116_EINWEISENDESKRANKENHAUS! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_127_INSTITUTIONSKENNZEICHEN! this value ('Format: 9-stellig numerisch (Beispiel: 123456789)') seems to be also defined under the key RULES_TEMP_129_KRANKENKASSE!
     * @return [en] Format: 9-stellig numerisch (Beispiel: 123456789), [de] Format: 9-stellig numerisch (Beispiel: 123456789)
     */
    public static String getRulesTemp190KlinikIkz() {
        return get(RULES_TEMP_190_KLINIK_IKZ).value;
    }

    /**
     * <pre>RULES_TEMP_191_KLINIK_VERWEILDAUER
     * SQLite key: rules_temp_191_klinik_verweildauer
     * [en] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     * [de] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.</pre>
     * ATTENTION this value ('Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_135_VERWEILDAUER! this value ('Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_193_KLINIK_VWD_STUNDEN!
     * @return [en] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus., [de] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     */
    public static String getRulesTemp191KlinikVerweildauer() {
        return get(RULES_TEMP_191_KLINIK_VERWEILDAUER).value;
    }

    /**
     * <pre>RULES_TEMP_192_KLINIK_VERWEILDAUER
     * SQLite key: rules_temp_192_klinik_verweildauer
     * [en] Format: Ganzzahlig (Beispiel 2)
     * [de] Format: Ganzzahlig (Beispiel 2)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
     * @return [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     */
    public static String getRulesTemp192KlinikVerweildauer() {
        return get(RULES_TEMP_192_KLINIK_VERWEILDAUER).value;
    }

    /**
     * <pre>RULES_TEMP_193_KLINIK_VWD_STUNDEN
     * SQLite key: rules_temp_193_klinik_vwd_stunden
     * [en] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     * [de] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.</pre>
     * ATTENTION this value ('Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_135_VERWEILDAUER! this value ('Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_191_KLINIK_VERWEILDAUER!
     * @return [en] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus., [de] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     */
    public static String getRulesTemp193KlinikVwdStunden() {
        return get(RULES_TEMP_193_KLINIK_VWD_STUNDEN).value;
    }

    /**
     * <pre>RULES_TEMP_194_KLINIK_VWD_STUNDEN
     * SQLite key: rules_temp_194_klinik_vwd_stunden
     * [en] Format: Ganzzahlig (Beispiel 2)
     * [de] Format: Ganzzahlig (Beispiel 2)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
     * @return [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     */
    public static String getRulesTemp194KlinikVwdStunden() {
        return get(RULES_TEMP_194_KLINIK_VWD_STUNDEN).value;
    }

    /**
     * <pre>RULES_TEMP_195_ARZNEIMITTEL
     * SQLite key: rules_temp_195_arzneimittel
     * [en] GK RSA:Anzahl der Packungen
     * [de] GK RSA:Anzahl der Packungen</pre>
     * ATTENTION this value ('GK RSA:Anzahl der Packungen') seems to be also defined under the key RULES_TEMP_200_GK_RSA_PACKUNGANZAHL!
     * @return [en] GK RSA:Anzahl der Packungen, [de] GK RSA:Anzahl der Packungen
     */
    public static String getRulesTemp195Arzneimittel() {
        return get(RULES_TEMP_195_ARZNEIMITTEL).value;
    }

    /**
     * <pre>RULES_TEMP_196_ARZNEIMITTEL
     * SQLite key: rules_temp_196_arzneimittel
     * [en] GK RSA:ATC-Code
     * [de] GK RSA:ATC-Code</pre>
     * ATTENTION this value ('GK RSA:ATC-Code') seems to be also defined under the key RULES_TEMP_201_GK_RSA_ATCCODE!
     * @return [en] GK RSA:ATC-Code, [de] GK RSA:ATC-Code
     */
    public static String getRulesTemp196Arzneimittel() {
        return get(RULES_TEMP_196_ARZNEIMITTEL).value;
    }

    /**
     * <pre>RULES_TEMP_197_ARZNEIMITTEL
     * SQLite key: rules_temp_197_arzneimittel
     * [en] GK RSA:DDD
     * [de] GK RSA:DDD</pre>
     * ATTENTION this value ('GK RSA:DDD') seems to be also defined under the key RULES_TEMP_203_GK_RSA_DDD!
     * @return [en] GK RSA:DDD, [de] GK RSA:DDD
     */
    public static String getRulesTemp197Arzneimittel() {
        return get(RULES_TEMP_197_ARZNEIMITTEL).value;
    }

    /**
     * <pre>RULES_TEMP_198_ARZNEIMITTEL
     * SQLite key: rules_temp_198_arzneimittel
     * [en] GK RSA:PZN-Code
     * [de] GK RSA:PZN-Code</pre>
     * ATTENTION this value ('GK RSA:PZN-Code') seems to be also defined under the key RULES_TEMP_204_GK_RSA_PZNCODE!
     * @return [en] GK RSA:PZN-Code, [de] GK RSA:PZN-Code
     */
    public static String getRulesTemp198Arzneimittel() {
        return get(RULES_TEMP_198_ARZNEIMITTEL).value;
    }

    /**
     * <pre>RULES_TEMP_199_ARZNEIMITTEL
     * SQLite key: rules_temp_199_arzneimittel
     * [en] GK RSA:PZN-Gesamtdosis
     * [de] GK RSA:PZN-Gesamtdosis</pre>
     * ATTENTION this value ('GK RSA:PZN-Gesamtdosis') seems to be also defined under the key RULES_TEMP_206_GK_RSA_PZNGESAMTDOSIS!
     * @return [en] GK RSA:PZN-Gesamtdosis, [de] GK RSA:PZN-Gesamtdosis
     */
    public static String getRulesTemp199Arzneimittel() {
        return get(RULES_TEMP_199_ARZNEIMITTEL).value;
    }

    /**
     * <pre>RULES_TEMP_19_HM_GESAMTPREIS_ALLE
     * SQLite key: rules_temp_19_hm_gesamtpreis_alle
     * [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
     * [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)</pre>
     * ATTENTION this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_21_HM_GESAMTPREIS! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_6_HE_GESAMTPREIS_ALLE! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_8_HE_GESAMTPREIS!
     * @return [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
     */
    public static String getRulesTemp19HmGesamtpreisAlle() {
        return get(RULES_TEMP_19_HM_GESAMTPREIS_ALLE).value;
    }

    /**
     * <pre>RULES_TEMP_1_HE_PREIS
     * SQLite key: rules_temp_1_he_preis
     * [en] Die Kosten des Hilfsmittels.
     * [de] Die Kosten des Hilfsmittels.</pre>
     * ATTENTION this value ('Die Kosten des Hilfsmittels.') seems to be also defined under the key RULES_TEMP_14_HM_PREIS!
     * @return [en] Die Kosten des Hilfsmittels., [de] Die Kosten des Hilfsmittels.
     */
    public static String getRulesTemp1HePreis() {
        return get(RULES_TEMP_1_HE_PREIS).value;
    }

    /**
     * <pre>RULES_TEMP_200_GK_RSA_PACKUNGANZAHL
     * SQLite key: rules_temp_200_gk_rsa_packunganzahl
     * [en] GK RSA:Anzahl der Packungen
     * [de] GK RSA:Anzahl der Packungen</pre>
     * ATTENTION this value ('GK RSA:Anzahl der Packungen') seems to be also defined under the key RULES_TEMP_195_ARZNEIMITTEL!
     * @return [en] GK RSA:Anzahl der Packungen, [de] GK RSA:Anzahl der Packungen
     */
    public static String getRulesTemp200GkRsaPackunganzahl() {
        return get(RULES_TEMP_200_GK_RSA_PACKUNGANZAHL).value;
    }

    /**
     * <pre>RULES_TEMP_201_GK_RSA_ATCCODE
     * SQLite key: rules_temp_201_gk_rsa_atccode
     * [en] GK RSA:ATC-Code
     * [de] GK RSA:ATC-Code</pre>
     * ATTENTION this value ('GK RSA:ATC-Code') seems to be also defined under the key RULES_TEMP_196_ARZNEIMITTEL!
     * @return [en] GK RSA:ATC-Code, [de] GK RSA:ATC-Code
     */
    public static String getRulesTemp201GkRsaAtccode() {
        return get(RULES_TEMP_201_GK_RSA_ATCCODE).value;
    }

    /**
     * <pre>RULES_TEMP_202_GK_RSA_ATCCODE
     * SQLite key: rules_temp_202_gk_rsa_atccode
     * [en] Wird mit der Satzart 400 übermittelt. Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Angegeben werden die von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATCs. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04
     * [de] Wird mit der Satzart 400 übermittelt. Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Angegeben werden die von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATCs. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04</pre>
     * @return [en] Wird mit der Satzart 400 übermittelt. Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Angegeben werden die von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATCs. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04, [de] Wird mit der Satzart 400 übermittelt. Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Angegeben werden die von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATCs. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04
     */
    public static String getRulesTemp202GkRsaAtccode() {
        return get(RULES_TEMP_202_GK_RSA_ATCCODE).value;
    }

    /**
     * <pre>RULES_TEMP_203_GK_RSA_DDD
     * SQLite key: rules_temp_203_gk_rsa_ddd
     * [en] GK RSA:DDD
     * [de] GK RSA:DDD</pre>
     * ATTENTION this value ('GK RSA:DDD') seems to be also defined under the key RULES_TEMP_197_ARZNEIMITTEL!
     * @return [en] GK RSA:DDD, [de] GK RSA:DDD
     */
    public static String getRulesTemp203GkRsaDdd() {
        return get(RULES_TEMP_203_GK_RSA_DDD).value;
    }

    /**
     * <pre>RULES_TEMP_204_GK_RSA_PZNCODE
     * SQLite key: rules_temp_204_gk_rsa_pzncode
     * [en] GK RSA:PZN-Code
     * [de] GK RSA:PZN-Code</pre>
     * ATTENTION this value ('GK RSA:PZN-Code') seems to be also defined under the key RULES_TEMP_198_ARZNEIMITTEL!
     * @return [en] GK RSA:PZN-Code, [de] GK RSA:PZN-Code
     */
    public static String getRulesTemp204GkRsaPzncode() {
        return get(RULES_TEMP_204_GK_RSA_PZNCODE).value;
    }

    /**
     * <pre>RULES_TEMP_205_GK_RSA_PZNCODE
     * SQLite key: rules_temp_205_gk_rsa_pzncode
     * [en] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918.
     * [de] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918.</pre>
     * @return [en] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918., [de] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918.
     */
    public static String getRulesTemp205GkRsaPzncode() {
        return get(RULES_TEMP_205_GK_RSA_PZNCODE).value;
    }

    /**
     * <pre>RULES_TEMP_206_GK_RSA_PZNGESAMTDOSIS
     * SQLite key: rules_temp_206_gk_rsa_pzngesamtdosis
     * [en] GK RSA:PZN-Gesamtdosis
     * [de] GK RSA:PZN-Gesamtdosis</pre>
     * ATTENTION this value ('GK RSA:PZN-Gesamtdosis') seems to be also defined under the key RULES_TEMP_199_ARZNEIMITTEL!
     * @return [en] GK RSA:PZN-Gesamtdosis, [de] GK RSA:PZN-Gesamtdosis
     */
    public static String getRulesTemp206GkRsaPzngesamtdosis() {
        return get(RULES_TEMP_206_GK_RSA_PZNGESAMTDOSIS).value;
    }

    /**
     * <pre>RULES_TEMP_207_GK_RSA_PZNGESAMTDOSIS
     * SQLite key: rules_temp_207_gk_rsa_pzngesamtdosis
     * [en] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können. Ist mit Hilfe der Tabelle des WiDO zu ermitteln. Die Summe aller Mengen der Medikamente, bei denen ein PZN ? Code eingetragen ist.
     * [de] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können. Ist mit Hilfe der Tabelle des WiDO zu ermitteln. Die Summe aller Mengen der Medikamente, bei denen ein PZN ? Code eingetragen ist.</pre>
     * @return [en] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können. Ist mit Hilfe der Tabelle des WiDO zu ermitteln. Die Summe aller Mengen der Medikamente, bei denen ein PZN ? Code eingetragen ist., [de] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können. Ist mit Hilfe der Tabelle des WiDO zu ermitteln. Die Summe aller Mengen der Medikamente, bei denen ein PZN ? Code eingetragen ist.
     */
    public static String getRulesTemp207GkRsaPzngesamtdosis() {
        return get(RULES_TEMP_207_GK_RSA_PZNGESAMTDOSIS).value;
    }

    /**
     * <pre>RULES_TEMP_208_AUSGABEN
     * SQLite key: rules_temp_208_ausgaben
     * [en] GK RSA:Ausgaben für Apotheken
     * [de] GK RSA:Ausgaben für Apotheken</pre>
     * ATTENTION this value ('GK RSA:Ausgaben für Apotheken') seems to be also defined under the key RULES_TEMP_216_GK_RSA_APOTHEKENAUSGABEN!
     * @return [en] GK RSA:Ausgaben für Apotheken, [de] GK RSA:Ausgaben für Apotheken
     */
    public static String getRulesTemp208Ausgaben() {
        return get(RULES_TEMP_208_AUSGABEN).value;
    }

    /**
     * <pre>RULES_TEMP_209_AUSGABEN
     * SQLite key: rules_temp_209_ausgaben
     * [en] GK RSA:Ausgaben für Heil- und Hilfsmittel
     * [de] GK RSA:Ausgaben für Heil- und Hilfsmittel</pre>
     * ATTENTION this value ('GK RSA:Ausgaben für Heil- und Hilfsmittel') seems to be also defined under the key RULES_TEMP_217_GK_RSA_SOLEASUGABEN!
     * @return [en] GK RSA:Ausgaben für Heil- und Hilfsmittel, [de] GK RSA:Ausgaben für Heil- und Hilfsmittel
     */
    public static String getRulesTemp209Ausgaben() {
        return get(RULES_TEMP_209_AUSGABEN).value;
    }

    /**
     * <pre>RULES_TEMP_20_HM_GESAMTPREIS
     * SQLite key: rules_temp_20_hm_gesamtpreis
     * [en] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.
     * [de] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.</pre>
     * ATTENTION this value ('Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.') seems to be also defined under the key RULES_TEMP_7_HE_GESAMTPREIS!
     * @return [en] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist., [de] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.
     */
    public static String getRulesTemp20HmGesamtpreis() {
        return get(RULES_TEMP_20_HM_GESAMTPREIS).value;
    }

    /**
     * <pre>RULES_TEMP_210_AUSGABEN
     * SQLite key: rules_temp_210_ausgaben
     * [en] GK RSA:Ausgaben für KH
     * [de] GK RSA:Ausgaben für KH</pre>
     * ATTENTION this value ('GK RSA:Ausgaben für KH') seems to be also defined under the key RULES_TEMP_218_GK_RSA_KHAUSGABEN!
     * @return [en] GK RSA:Ausgaben für KH, [de] GK RSA:Ausgaben für KH
     */
    public static String getRulesTemp210Ausgaben() {
        return get(RULES_TEMP_210_AUSGABEN).value;
    }

    /**
     * <pre>RULES_TEMP_211_AUSGABEN
     * SQLite key: rules_temp_211_ausgaben
     * [en] GK RSA:Ausgaben für Zahnärzte
     * [de] GK RSA:Ausgaben für Zahnärzte</pre>
     * ATTENTION this value ('GK RSA:Ausgaben für Zahnärzte') seems to be also defined under the key RULES_TEMP_219_GK_RSA_ZAHNARZTAUSGABEN!
     * @return [en] GK RSA:Ausgaben für Zahnärzte, [de] GK RSA:Ausgaben für Zahnärzte
     */
    public static String getRulesTemp211Ausgaben() {
        return get(RULES_TEMP_211_AUSGABEN).value;
    }

    /**
     * <pre>RULES_TEMP_212_AUSGABEN
     * SQLite key: rules_temp_212_ausgaben
     * [en] GK RSA:Ausgaben für Ärzte
     * [de] GK RSA:Ausgaben für Ärzte</pre>
     * ATTENTION this value ('GK RSA:Ausgaben für Ärzte') seems to be also defined under the key RULES_TEMP_220_GK_RSA_ARZTAUSGABEN!
     * @return [en] GK RSA:Ausgaben für Ärzte, [de] GK RSA:Ausgaben für Ärzte
     */
    public static String getRulesTemp212Ausgaben() {
        return get(RULES_TEMP_212_AUSGABEN).value;
    }

    /**
     * <pre>RULES_TEMP_213_AUSGABEN
     * SQLite key: rules_temp_213_ausgaben
     * [en] GK RSA:Ausgaben gesamt
     * [de] GK RSA:Ausgaben gesamt</pre>
     * ATTENTION this value ('GK RSA:Ausgaben gesamt') seems to be also defined under the key RULES_TEMP_221_GK_RSA_AUSGABENGESAMT!
     * @return [en] GK RSA:Ausgaben gesamt, [de] GK RSA:Ausgaben gesamt
     */
    public static String getRulesTemp213Ausgaben() {
        return get(RULES_TEMP_213_AUSGABEN).value;
    }

    /**
     * <pre>RULES_TEMP_214_AUSGABEN
     * SQLite key: rules_temp_214_ausgaben
     * [en] GK RSA:Mehrleistungen DMP
     * [de] GK RSA:Mehrleistungen DMP</pre>
     * ATTENTION this value ('GK RSA:Mehrleistungen DMP') seems to be also defined under the key RULES_TEMP_222_GK_RSA_MEHRLEISTUNGDMP!
     * @return [en] GK RSA:Mehrleistungen DMP, [de] GK RSA:Mehrleistungen DMP
     */
    public static String getRulesTemp214Ausgaben() {
        return get(RULES_TEMP_214_AUSGABEN).value;
    }

    /**
     * <pre>RULES_TEMP_215_AUSGABEN
     * SQLite key: rules_temp_215_ausgaben
     * [en] GK RSA:Sachkosten bei extrakorporaler Blutreinigung
     * [de] GK RSA:Sachkosten bei extrakorporaler Blutreinigung</pre>
     * ATTENTION this value ('GK RSA:Sachkosten bei extrakorporaler Blutreinigung') seems to be also defined under the key RULES_TEMP_223_GK_RSA_EXTBLUTREINIGUNGAUSGABEN!
     * @return [en] GK RSA:Sachkosten bei extrakorporaler Blutreinigung, [de] GK RSA:Sachkosten bei extrakorporaler Blutreinigung
     */
    public static String getRulesTemp215Ausgaben() {
        return get(RULES_TEMP_215_AUSGABEN).value;
    }

    /**
     * <pre>RULES_TEMP_216_GK_RSA_APOTHEKENAUSGABEN
     * SQLite key: rules_temp_216_gk_rsa_apothekenausgaben
     * [en] GK RSA:Ausgaben für Apotheken
     * [de] GK RSA:Ausgaben für Apotheken</pre>
     * ATTENTION this value ('GK RSA:Ausgaben für Apotheken') seems to be also defined under the key RULES_TEMP_208_AUSGABEN!
     * @return [en] GK RSA:Ausgaben für Apotheken, [de] GK RSA:Ausgaben für Apotheken
     */
    public static String getRulesTemp216GkRsaApothekenausgaben() {
        return get(RULES_TEMP_216_GK_RSA_APOTHEKENAUSGABEN).value;
    }

    /**
     * <pre>RULES_TEMP_217_GK_RSA_SOLEASUGABEN
     * SQLite key: rules_temp_217_gk_rsa_soleasugaben
     * [en] GK RSA:Ausgaben für Heil- und Hilfsmittel
     * [de] GK RSA:Ausgaben für Heil- und Hilfsmittel</pre>
     * ATTENTION this value ('GK RSA:Ausgaben für Heil- und Hilfsmittel') seems to be also defined under the key RULES_TEMP_209_AUSGABEN!
     * @return [en] GK RSA:Ausgaben für Heil- und Hilfsmittel, [de] GK RSA:Ausgaben für Heil- und Hilfsmittel
     */
    public static String getRulesTemp217GkRsaSoleasugaben() {
        return get(RULES_TEMP_217_GK_RSA_SOLEASUGABEN).value;
    }

    /**
     * <pre>RULES_TEMP_218_GK_RSA_KHAUSGABEN
     * SQLite key: rules_temp_218_gk_rsa_khausgaben
     * [en] GK RSA:Ausgaben für KH
     * [de] GK RSA:Ausgaben für KH</pre>
     * ATTENTION this value ('GK RSA:Ausgaben für KH') seems to be also defined under the key RULES_TEMP_210_AUSGABEN!
     * @return [en] GK RSA:Ausgaben für KH, [de] GK RSA:Ausgaben für KH
     */
    public static String getRulesTemp218GkRsaKhausgaben() {
        return get(RULES_TEMP_218_GK_RSA_KHAUSGABEN).value;
    }

    /**
     * <pre>RULES_TEMP_219_GK_RSA_ZAHNARZTAUSGABEN
     * SQLite key: rules_temp_219_gk_rsa_zahnarztausgaben
     * [en] GK RSA:Ausgaben für Zahnärzte
     * [de] GK RSA:Ausgaben für Zahnärzte</pre>
     * ATTENTION this value ('GK RSA:Ausgaben für Zahnärzte') seems to be also defined under the key RULES_TEMP_211_AUSGABEN!
     * @return [en] GK RSA:Ausgaben für Zahnärzte, [de] GK RSA:Ausgaben für Zahnärzte
     */
    public static String getRulesTemp219GkRsaZahnarztausgaben() {
        return get(RULES_TEMP_219_GK_RSA_ZAHNARZTAUSGABEN).value;
    }

    /**
     * <pre>RULES_TEMP_21_HM_GESAMTPREIS
     * SQLite key: rules_temp_21_hm_gesamtpreis
     * [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
     * [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)</pre>
     * ATTENTION this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_19_HM_GESAMTPREIS_ALLE! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_6_HE_GESAMTPREIS_ALLE! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_8_HE_GESAMTPREIS!
     * @return [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
     */
    public static String getRulesTemp21HmGesamtpreis() {
        return get(RULES_TEMP_21_HM_GESAMTPREIS).value;
    }

    /**
     * <pre>RULES_TEMP_220_GK_RSA_ARZTAUSGABEN
     * SQLite key: rules_temp_220_gk_rsa_arztausgaben
     * [en] GK RSA:Ausgaben für Ärzte
     * [de] GK RSA:Ausgaben für Ärzte</pre>
     * ATTENTION this value ('GK RSA:Ausgaben für Ärzte') seems to be also defined under the key RULES_TEMP_212_AUSGABEN!
     * @return [en] GK RSA:Ausgaben für Ärzte, [de] GK RSA:Ausgaben für Ärzte
     */
    public static String getRulesTemp220GkRsaArztausgaben() {
        return get(RULES_TEMP_220_GK_RSA_ARZTAUSGABEN).value;
    }

    /**
     * <pre>RULES_TEMP_221_GK_RSA_AUSGABENGESAMT
     * SQLite key: rules_temp_221_gk_rsa_ausgabengesamt
     * [en] GK RSA:Ausgaben gesamt
     * [de] GK RSA:Ausgaben gesamt</pre>
     * ATTENTION this value ('GK RSA:Ausgaben gesamt') seems to be also defined under the key RULES_TEMP_213_AUSGABEN!
     * @return [en] GK RSA:Ausgaben gesamt, [de] GK RSA:Ausgaben gesamt
     */
    public static String getRulesTemp221GkRsaAusgabengesamt() {
        return get(RULES_TEMP_221_GK_RSA_AUSGABENGESAMT).value;
    }

    /**
     * <pre>RULES_TEMP_222_GK_RSA_MEHRLEISTUNGDMP
     * SQLite key: rules_temp_222_gk_rsa_mehrleistungdmp
     * [en] GK RSA:Mehrleistungen DMP
     * [de] GK RSA:Mehrleistungen DMP</pre>
     * ATTENTION this value ('GK RSA:Mehrleistungen DMP') seems to be also defined under the key RULES_TEMP_214_AUSGABEN!
     * @return [en] GK RSA:Mehrleistungen DMP, [de] GK RSA:Mehrleistungen DMP
     */
    public static String getRulesTemp222GkRsaMehrleistungdmp() {
        return get(RULES_TEMP_222_GK_RSA_MEHRLEISTUNGDMP).value;
    }

    /**
     * <pre>RULES_TEMP_223_GK_RSA_EXTBLUTREINIGUNGAUSGABEN
     * SQLite key: rules_temp_223_gk_rsa_extblutreinigungausgaben
     * [en] GK RSA:Sachkosten bei extrakorporaler Blutreinigung
     * [de] GK RSA:Sachkosten bei extrakorporaler Blutreinigung</pre>
     * ATTENTION this value ('GK RSA:Sachkosten bei extrakorporaler Blutreinigung') seems to be also defined under the key RULES_TEMP_215_AUSGABEN!
     * @return [en] GK RSA:Sachkosten bei extrakorporaler Blutreinigung, [de] GK RSA:Sachkosten bei extrakorporaler Blutreinigung
     */
    public static String getRulesTemp223GkRsaExtblutreinigungausgaben() {
        return get(RULES_TEMP_223_GK_RSA_EXTBLUTREINIGUNGAUSGABEN).value;
    }

    /**
     * <pre>RULES_TEMP_224_VERSICHERTENDATEN
     * SQLite key: rules_temp_224_versichertendaten
     * [en] GK RSA:Alter
     * [de] GK RSA:Alter</pre>
     * ATTENTION this value ('GK RSA:Alter') seems to be also defined under the key RULES_TEMP_230_GK_RSA_ALTER!
     * @return [en] GK RSA:Alter, [de] GK RSA:Alter
     */
    public static String getRulesTemp224Versichertendaten() {
        return get(RULES_TEMP_224_VERSICHERTENDATEN).value;
    }

    /**
     * <pre>RULES_TEMP_225_VERSICHERTENDATEN
     * SQLite key: rules_temp_225_versichertendaten
     * [en] GK RSA:DMP-Tage
     * [de] GK RSA:DMP-Tage</pre>
     * ATTENTION this value ('GK RSA:DMP-Tage') seems to be also defined under the key RULES_TEMP_231_GK_RSA_DMPTAGE!
     * @return [en] GK RSA:DMP-Tage, [de] GK RSA:DMP-Tage
     */
    public static String getRulesTemp225Versichertendaten() {
        return get(RULES_TEMP_225_VERSICHERTENDATEN).value;
    }

    /**
     * <pre>RULES_TEMP_226_VERSICHERTENDATEN
     * SQLite key: rules_temp_226_versichertendaten
     * [en] GK RSA:Erwerbsminderungstage
     * [de] GK RSA:Erwerbsminderungstage</pre>
     * ATTENTION this value ('GK RSA:Erwerbsminderungstage') seems to be also defined under the key RULES_TEMP_232_GK_RSA_ERWERBSMINDERUNGSTAGE!
     * @return [en] GK RSA:Erwerbsminderungstage, [de] GK RSA:Erwerbsminderungstage
     */
    public static String getRulesTemp226Versichertendaten() {
        return get(RULES_TEMP_226_VERSICHERTENDATEN).value;
    }

    /**
     * <pre>RULES_TEMP_227_VERSICHERTENDATEN
     * SQLite key: rules_temp_227_versichertendaten
     * [en] GK RSA:Geschlecht
     * [de] GK RSA:Geschlecht</pre>
     * ATTENTION this value ('GK RSA:Geschlecht') seems to be also defined under the key RULES_TEMP_233_GK_RSA_GESCHLECHT!
     * @return [en] GK RSA:Geschlecht, [de] GK RSA:Geschlecht
     */
    public static String getRulesTemp227Versichertendaten() {
        return get(RULES_TEMP_227_VERSICHERTENDATEN).value;
    }

    /**
     * <pre>RULES_TEMP_228_VERSICHERTENDATEN
     * SQLite key: rules_temp_228_versichertendaten
     * [en] GK RSA:Versichertentage
     * [de] GK RSA:Versichertentage</pre>
     * ATTENTION this value ('GK RSA:Versichertentage') seems to be also defined under the key RULES_TEMP_234_GK_RSA_VERSICHERTENTAGE!
     * @return [en] GK RSA:Versichertentage, [de] GK RSA:Versichertentage
     */
    public static String getRulesTemp228Versichertendaten() {
        return get(RULES_TEMP_228_VERSICHERTENDATEN).value;
    }

    /**
     * <pre>RULES_TEMP_229_VERSICHERTENDATEN
     * SQLite key: rules_temp_229_versichertendaten
     * [en] GK RSA:Verstorben
     * [de] GK RSA:Verstorben</pre>
     * ATTENTION this value ('GK RSA:Verstorben') seems to be also defined under the key RULES_TEMP_235_GK_RSA_VERSTORBEN!
     * @return [en] GK RSA:Verstorben, [de] GK RSA:Verstorben
     */
    public static String getRulesTemp229Versichertendaten() {
        return get(RULES_TEMP_229_VERSICHERTENDATEN).value;
    }

    /**
     * <pre>RULES_TEMP_22_HM_POSITIONSNUMMER
     * SQLite key: rules_temp_22_hm_positionsnummer
     * [en] Pharmazentralnummer für Hilfsmittel
     * [de] Pharmazentralnummer für Hilfsmittel</pre>
     * ATTENTION this value ('Pharmazentralnummer für Hilfsmittel') seems to be also defined under the key RULES_TEMP_9_HE_POSITIONSNUMMER!
     * @return [en] Pharmazentralnummer für Hilfsmittel, [de] Pharmazentralnummer für Hilfsmittel
     */
    public static String getRulesTemp22HmPositionsnummer() {
        return get(RULES_TEMP_22_HM_POSITIONSNUMMER).value;
    }

    /**
     * <pre>RULES_TEMP_230_GK_RSA_ALTER
     * SQLite key: rules_temp_230_gk_rsa_alter
     * [en] GK RSA:Alter
     * [de] GK RSA:Alter</pre>
     * ATTENTION this value ('GK RSA:Alter') seems to be also defined under the key RULES_TEMP_224_VERSICHERTENDATEN!
     * @return [en] GK RSA:Alter, [de] GK RSA:Alter
     */
    public static String getRulesTemp230GkRsaAlter() {
        return get(RULES_TEMP_230_GK_RSA_ALTER).value;
    }

    /**
     * <pre>RULES_TEMP_231_GK_RSA_DMPTAGE
     * SQLite key: rules_temp_231_gk_rsa_dmptage
     * [en] GK RSA:DMP-Tage
     * [de] GK RSA:DMP-Tage</pre>
     * ATTENTION this value ('GK RSA:DMP-Tage') seems to be also defined under the key RULES_TEMP_225_VERSICHERTENDATEN!
     * @return [en] GK RSA:DMP-Tage, [de] GK RSA:DMP-Tage
     */
    public static String getRulesTemp231GkRsaDmptage() {
        return get(RULES_TEMP_231_GK_RSA_DMPTAGE).value;
    }

    /**
     * <pre>RULES_TEMP_232_GK_RSA_ERWERBSMINDERUNGSTAGE
     * SQLite key: rules_temp_232_gk_rsa_erwerbsminderungstage
     * [en] GK RSA:Erwerbsminderungstage
     * [de] GK RSA:Erwerbsminderungstage</pre>
     * ATTENTION this value ('GK RSA:Erwerbsminderungstage') seems to be also defined under the key RULES_TEMP_226_VERSICHERTENDATEN!
     * @return [en] GK RSA:Erwerbsminderungstage, [de] GK RSA:Erwerbsminderungstage
     */
    public static String getRulesTemp232GkRsaErwerbsminderungstage() {
        return get(RULES_TEMP_232_GK_RSA_ERWERBSMINDERUNGSTAGE).value;
    }

    /**
     * <pre>RULES_TEMP_233_GK_RSA_GESCHLECHT
     * SQLite key: rules_temp_233_gk_rsa_geschlecht
     * [en] GK RSA:Geschlecht
     * [de] GK RSA:Geschlecht</pre>
     * ATTENTION this value ('GK RSA:Geschlecht') seems to be also defined under the key RULES_TEMP_227_VERSICHERTENDATEN!
     * @return [en] GK RSA:Geschlecht, [de] GK RSA:Geschlecht
     */
    public static String getRulesTemp233GkRsaGeschlecht() {
        return get(RULES_TEMP_233_GK_RSA_GESCHLECHT).value;
    }

    /**
     * <pre>RULES_TEMP_234_GK_RSA_VERSICHERTENTAGE
     * SQLite key: rules_temp_234_gk_rsa_versichertentage
     * [en] GK RSA:Versichertentage
     * [de] GK RSA:Versichertentage</pre>
     * ATTENTION this value ('GK RSA:Versichertentage') seems to be also defined under the key RULES_TEMP_228_VERSICHERTENDATEN!
     * @return [en] GK RSA:Versichertentage, [de] GK RSA:Versichertentage
     */
    public static String getRulesTemp234GkRsaVersichertentage() {
        return get(RULES_TEMP_234_GK_RSA_VERSICHERTENTAGE).value;
    }

    /**
     * <pre>RULES_TEMP_235_GK_RSA_VERSTORBEN
     * SQLite key: rules_temp_235_gk_rsa_verstorben
     * [en] GK RSA:Verstorben
     * [de] GK RSA:Verstorben</pre>
     * ATTENTION this value ('GK RSA:Verstorben') seems to be also defined under the key RULES_TEMP_229_VERSICHERTENDATEN!
     * @return [en] GK RSA:Verstorben, [de] GK RSA:Verstorben
     */
    public static String getRulesTemp235GkRsaVerstorben() {
        return get(RULES_TEMP_235_GK_RSA_VERSTORBEN).value;
    }

    /**
     * <pre>RULES_TEMP_236_ERLOESE
     * SQLite key: rules_temp_236_erloese
     * [en] GK RSA:AGG
     * [de] GK RSA:AGG</pre>
     * ATTENTION this value ('GK RSA:AGG') seems to be also defined under the key RULES_TEMP_241_GK_RSA_AGG!
     * @return [en] GK RSA:AGG, [de] GK RSA:AGG
     */
    public static String getRulesTemp236Erloese() {
        return get(RULES_TEMP_236_ERLOESE).value;
    }

    /**
     * <pre>RULES_TEMP_237_ERLOESE
     * SQLite key: rules_temp_237_erloese
     * [en] GK RSA:Anzahl der HMGs
     * [de] GK RSA:Anzahl der HMGs</pre>
     * ATTENTION this value ('GK RSA:Anzahl der HMGs') seems to be also defined under the key RULES_TEMP_242_GK_RSA_HMGANZAHL!
     * @return [en] GK RSA:Anzahl der HMGs, [de] GK RSA:Anzahl der HMGs
     */
    public static String getRulesTemp237Erloese() {
        return get(RULES_TEMP_237_ERLOESE).value;
    }

    /**
     * <pre>RULES_TEMP_238_ERLOESE
     * SQLite key: rules_temp_238_erloese
     * [en] GK RSA:EMG
     * [de] GK RSA:EMG</pre>
     * ATTENTION this value ('GK RSA:EMG') seems to be also defined under the key RULES_TEMP_243_GK_RSA_EMG!
     * @return [en] GK RSA:EMG, [de] GK RSA:EMG
     */
    public static String getRulesTemp238Erloese() {
        return get(RULES_TEMP_238_ERLOESE).value;
    }

    /**
     * <pre>RULES_TEMP_239_ERLOESE
     * SQLite key: rules_temp_239_erloese
     * [en] GK RSA:Gesamterlöse aus dem RSA
     * [de] GK RSA:Gesamterlöse aus dem RSA</pre>
     * ATTENTION this value ('GK RSA:Gesamterlöse aus dem RSA') seems to be also defined under the key RULES_TEMP_244_GK_RSA_ELRLOESGESAMT!
     * @return [en] GK RSA:Gesamterlöse aus dem RSA, [de] GK RSA:Gesamterlöse aus dem RSA
     */
    public static String getRulesTemp239Erloese() {
        return get(RULES_TEMP_239_ERLOESE).value;
    }

    /**
     * <pre>RULES_TEMP_23_HM_MENGE
     * SQLite key: rules_temp_23_hm_menge
     * [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.
     * [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.</pre>
     * ATTENTION this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_10_HE_MENGE! this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_25_HM_MENGE!
     * @return [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat., [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.
     */
    public static String getRulesTemp23HmMenge() {
        return get(RULES_TEMP_23_HM_MENGE).value;
    }

    /**
     * <pre>RULES_TEMP_240_ERLOESE
     * SQLite key: rules_temp_240_erloese
     * [en] GK RSA:HMG
     * [de] GK RSA:HMG</pre>
     * ATTENTION this value ('GK RSA:HMG') seems to be also defined under the key RULES_TEMP_245_GK_RSA_HMG!
     * @return [en] GK RSA:HMG, [de] GK RSA:HMG
     */
    public static String getRulesTemp240Erloese() {
        return get(RULES_TEMP_240_ERLOESE).value;
    }

    /**
     * <pre>RULES_TEMP_241_GK_RSA_AGG
     * SQLite key: rules_temp_241_gk_rsa_agg
     * [en] GK RSA:AGG
     * [de] GK RSA:AGG</pre>
     * ATTENTION this value ('GK RSA:AGG') seems to be also defined under the key RULES_TEMP_236_ERLOESE!
     * @return [en] GK RSA:AGG, [de] GK RSA:AGG
     */
    public static String getRulesTemp241GkRsaAgg() {
        return get(RULES_TEMP_241_GK_RSA_AGG).value;
    }

    /**
     * <pre>RULES_TEMP_242_GK_RSA_HMGANZAHL
     * SQLite key: rules_temp_242_gk_rsa_hmganzahl
     * [en] GK RSA:Anzahl der HMGs
     * [de] GK RSA:Anzahl der HMGs</pre>
     * ATTENTION this value ('GK RSA:Anzahl der HMGs') seems to be also defined under the key RULES_TEMP_237_ERLOESE!
     * @return [en] GK RSA:Anzahl der HMGs, [de] GK RSA:Anzahl der HMGs
     */
    public static String getRulesTemp242GkRsaHmganzahl() {
        return get(RULES_TEMP_242_GK_RSA_HMGANZAHL).value;
    }

    /**
     * <pre>RULES_TEMP_243_GK_RSA_EMG
     * SQLite key: rules_temp_243_gk_rsa_emg
     * [en] GK RSA:EMG
     * [de] GK RSA:EMG</pre>
     * ATTENTION this value ('GK RSA:EMG') seems to be also defined under the key RULES_TEMP_238_ERLOESE!
     * @return [en] GK RSA:EMG, [de] GK RSA:EMG
     */
    public static String getRulesTemp243GkRsaEmg() {
        return get(RULES_TEMP_243_GK_RSA_EMG).value;
    }

    /**
     * <pre>RULES_TEMP_244_GK_RSA_ELRLOESGESAMT
     * SQLite key: rules_temp_244_gk_rsa_elrloesgesamt
     * [en] GK RSA:Gesamterlöse aus dem RSA
     * [de] GK RSA:Gesamterlöse aus dem RSA</pre>
     * ATTENTION this value ('GK RSA:Gesamterlöse aus dem RSA') seems to be also defined under the key RULES_TEMP_239_ERLOESE!
     * @return [en] GK RSA:Gesamterlöse aus dem RSA, [de] GK RSA:Gesamterlöse aus dem RSA
     */
    public static String getRulesTemp244GkRsaElrloesgesamt() {
        return get(RULES_TEMP_244_GK_RSA_ELRLOESGESAMT).value;
    }

    /**
     * <pre>RULES_TEMP_245_GK_RSA_HMG
     * SQLite key: rules_temp_245_gk_rsa_hmg
     * [en] GK RSA:HMG
     * [de] GK RSA:HMG</pre>
     * ATTENTION this value ('GK RSA:HMG') seems to be also defined under the key RULES_TEMP_240_ERLOESE!
     * @return [en] GK RSA:HMG, [de] GK RSA:HMG
     */
    public static String getRulesTemp245GkRsaHmg() {
        return get(RULES_TEMP_245_GK_RSA_HMG).value;
    }

    /**
     * <pre>RULES_TEMP_246_GK_RSA_HMG
     * SQLite key: rules_temp_246_gk_rsa_hmg
     * [en] Das Klassifikationssystem unterscheidet 106 zuschlagsfähige hierarchisierte Morbiditätsgruppen (HMG), die jeweils aus mindestens einer DxGruppe (DxG) zusammengesetzt sind, die ihrerseits mindestens einen ICD-Code umfassen. Alle HMG, die ihnen zugeordneten DxG und ICD-Codes sowie die für die Zuordnung definierten Altersgrenzen, das jeweils zulässige Geschlecht sowie die Zusatzkennzeichen des Deutschen Instituts für Medizinische Dokumentation und Information (DIMDI) nach §§ 295 und 301 SGB V werden in Anlage 1 dokumentiert.
     * [de] Das Klassifikationssystem unterscheidet 106 zuschlagsfähige hierarchisierte Morbiditätsgruppen (HMG), die jeweils aus mindestens einer DxGruppe (DxG) zusammengesetzt sind, die ihrerseits mindestens einen ICD-Code umfassen. Alle HMG, die ihnen zugeordneten DxG und ICD-Codes sowie die für die Zuordnung definierten Altersgrenzen, das jeweils zulässige Geschlecht sowie die Zusatzkennzeichen des Deutschen Instituts für Medizinische Dokumentation und Information (DIMDI) nach §§ 295 und 301 SGB V werden in Anlage 1 dokumentiert.</pre>
     * @return [en] Das Klassifikationssystem unterscheidet 106 zuschlagsfähige hierarchisierte Morbiditätsgruppen (HMG), die jeweils aus mindestens einer DxGruppe (DxG) zusammengesetzt sind, die ihrerseits mindestens einen ICD-Code umfassen. Alle HMG, die ihnen zugeordneten DxG und ICD-Codes sowie die für die Zuordnung definierten Altersgrenzen, das jeweils zulässige Geschlecht sowie die Zusatzkennzeichen des Deutschen Instituts für Medizinische Dokumentation und Information (DIMDI) nach §§ 295 und 301 SGB V werden in Anlage 1 dokumentiert., [de] Das Klassifikationssystem unterscheidet 106 zuschlagsfähige hierarchisierte Morbiditätsgruppen (HMG), die jeweils aus mindestens einer DxGruppe (DxG) zusammengesetzt sind, die ihrerseits mindestens einen ICD-Code umfassen. Alle HMG, die ihnen zugeordneten DxG und ICD-Codes sowie die für die Zuordnung definierten Altersgrenzen, das jeweils zulässige Geschlecht sowie die Zusatzkennzeichen des Deutschen Instituts für Medizinische Dokumentation und Information (DIMDI) nach §§ 295 und 301 SGB V werden in Anlage 1 dokumentiert.
     */
    public static String getRulesTemp246GkRsaHmg() {
        return get(RULES_TEMP_246_GK_RSA_HMG).value;
    }

    /**
     * <pre>RULES_TEMP_247_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_247_diagnosengruppen
     * [en] GK RSA:ambulante Diagnosen
     * [de] GK RSA:ambulante Diagnosen</pre>
     * ATTENTION this value ('GK RSA:ambulante Diagnosen') seems to be also defined under the key RULES_TEMP_263_GK_RSA_DIAGNOSEAMBULANT!
     * @return [en] GK RSA:ambulante Diagnosen, [de] GK RSA:ambulante Diagnosen
     */
    public static String getRulesTemp247Diagnosengruppen() {
        return get(RULES_TEMP_247_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_248_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_248_diagnosengruppen
     * [en] GK RSA:Ambulante Diagnosen Leistungsquartal
     * [de] GK RSA:Ambulante Diagnosen Leistungsquartal</pre>
     * ATTENTION this value ('GK RSA:Ambulante Diagnosen Leistungsquartal') seems to be also defined under the key RULES_TEMP_264_GK_RSA_QUARTALDIAGNOSENAMBULANT!
     * @return [en] GK RSA:Ambulante Diagnosen Leistungsquartal, [de] GK RSA:Ambulante Diagnosen Leistungsquartal
     */
    public static String getRulesTemp248Diagnosengruppen() {
        return get(RULES_TEMP_248_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_249_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_249_diagnosengruppen
     * [en] GK RSA:Ambulante Diagnosen Qualifizierung
     * [de] GK RSA:Ambulante Diagnosen Qualifizierung</pre>
     * ATTENTION this value ('GK RSA:Ambulante Diagnosen Qualifizierung') seems to be also defined under the key RULES_TEMP_265_GK_RSA_QUALIFIZIERUNGDIAGNOSENAMBULANT!
     * @return [en] GK RSA:Ambulante Diagnosen Qualifizierung, [de] GK RSA:Ambulante Diagnosen Qualifizierung
     */
    public static String getRulesTemp249Diagnosengruppen() {
        return get(RULES_TEMP_249_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_24_HM_MENGE
     * SQLite key: rules_temp_24_hm_menge
     * [en] Format: numerisch (Beispiel: 5)
     * [de] Format: numerisch (Beispiel: 5)</pre>
     * ATTENTION this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_11_HE_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_17_HM_GESAMTMENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_26_HM_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_4_HE_GESAMTMENGE!
     * @return [en] Format: numerisch (Beispiel: 5), [de] Format: numerisch (Beispiel: 5)
     */
    public static String getRulesTemp24HmMenge() {
        return get(RULES_TEMP_24_HM_MENGE).value;
    }

    /**
     * <pre>RULES_TEMP_250_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_250_diagnosengruppen
     * [en] GK RSA:Ambulante DxG
     * [de] GK RSA:Ambulante DxG</pre>
     * ATTENTION this value ('GK RSA:Ambulante DxG') seems to be also defined under the key RULES_TEMP_266_GK_RSA_AMBULANTEDXG!
     * @return [en] GK RSA:Ambulante DxG, [de] GK RSA:Ambulante DxG
     */
    public static String getRulesTemp250Diagnosengruppen() {
        return get(RULES_TEMP_250_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_251_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_251_diagnosengruppen
     * [en] GK RSA:ambulante HMG relevante Diagnosen
     * [de] GK RSA:ambulante HMG relevante Diagnosen</pre>
     * ATTENTION this value ('GK RSA:ambulante HMG relevante Diagnosen') seems to be also defined under the key RULES_TEMP_267_GK_RSA_DIAGNOSEAMBULANTHMGRELEVANT!
     * @return [en] GK RSA:ambulante HMG relevante Diagnosen, [de] GK RSA:ambulante HMG relevante Diagnosen
     */
    public static String getRulesTemp251Diagnosengruppen() {
        return get(RULES_TEMP_251_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_252_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_252_diagnosengruppen
     * [en] GK RSA:Ambulante HMG relevante DxG
     * [de] GK RSA:Ambulante HMG relevante DxG</pre>
     * ATTENTION this value ('GK RSA:Ambulante HMG relevante DxG') seems to be also defined under the key RULES_TEMP_268_GK_RSA_AMBULANTEHMGRELEVANTEDXG!
     * @return [en] GK RSA:Ambulante HMG relevante DxG, [de] GK RSA:Ambulante HMG relevante DxG
     */
    public static String getRulesTemp252Diagnosengruppen() {
        return get(RULES_TEMP_252_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_253_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_253_diagnosengruppen
     * [en] GK RSA:Ambulante Krankheitsnummer
     * [de] GK RSA:Ambulante Krankheitsnummer</pre>
     * ATTENTION this value ('GK RSA:Ambulante Krankheitsnummer') seems to be also defined under the key RULES_TEMP_269_GK_RSA_AMBULANTEKRANKHEITSNUMMER!
     * @return [en] GK RSA:Ambulante Krankheitsnummer, [de] GK RSA:Ambulante Krankheitsnummer
     */
    public static String getRulesTemp253Diagnosengruppen() {
        return get(RULES_TEMP_253_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_254_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_254_diagnosengruppen
     * [en] GK RSA:DxG
     * [de] GK RSA:DxG</pre>
     * ATTENTION this value ('GK RSA:DxG') seems to be also defined under the key RULES_TEMP_270_GK_RSA_DXG!
     * @return [en] GK RSA:DxG, [de] GK RSA:DxG
     */
    public static String getRulesTemp254Diagnosengruppen() {
        return get(RULES_TEMP_254_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_255_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_255_diagnosengruppen
     * [en] GK RSA:Krankheitsgruppe
     * [de] GK RSA:Krankheitsgruppe</pre>
     * ATTENTION this value ('GK RSA:Krankheitsgruppe') seems to be also defined under the key RULES_TEMP_271_GK_RSA_KRANKHEITSGRUPPE!
     * @return [en] GK RSA:Krankheitsgruppe, [de] GK RSA:Krankheitsgruppe
     */
    public static String getRulesTemp255Diagnosengruppen() {
        return get(RULES_TEMP_255_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_256_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_256_diagnosengruppen
     * [en] GK RSA:Stationäre DxG
     * [de] GK RSA:Stationäre DxG</pre>
     * ATTENTION this value ('GK RSA:Stationäre DxG') seems to be also defined under the key RULES_TEMP_273_GK_RSA_STATIONAEREDXG!
     * @return [en] GK RSA:Stationäre DxG, [de] GK RSA:Stationäre DxG
     */
    public static String getRulesTemp256Diagnosengruppen() {
        return get(RULES_TEMP_256_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_257_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_257_diagnosengruppen
     * [en] GK RSA:stationäre Diagnosen
     * [de] GK RSA:stationäre Diagnosen</pre>
     * ATTENTION this value ('GK RSA:stationäre Diagnosen') seems to be also defined under the key RULES_TEMP_272_GK_RSA_DIAGNOSESTATIONAER!
     * @return [en] GK RSA:stationäre Diagnosen, [de] GK RSA:stationäre Diagnosen
     */
    public static String getRulesTemp257Diagnosengruppen() {
        return get(RULES_TEMP_257_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_258_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_258_diagnosengruppen
     * [en] GK RSA:Stationäre HMG relevante DxG
     * [de] GK RSA:Stationäre HMG relevante DxG</pre>
     * ATTENTION this value ('GK RSA:Stationäre HMG relevante DxG') seems to be also defined under the key RULES_TEMP_277_GK_RSA_STATIONAEREHMGRELEVANTEDXG!
     * @return [en] GK RSA:Stationäre HMG relevante DxG, [de] GK RSA:Stationäre HMG relevante DxG
     */
    public static String getRulesTemp258Diagnosengruppen() {
        return get(RULES_TEMP_258_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_259_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_259_diagnosengruppen
     * [en] GK RSA:Stationäre Krankheitsnummer
     * [de] GK RSA:Stationäre Krankheitsnummer</pre>
     * ATTENTION this value ('GK RSA:Stationäre Krankheitsnummer') seems to be also defined under the key RULES_TEMP_278_GK_RSA_STATIONAEREKRANKHEITSNUMMER!
     * @return [en] GK RSA:Stationäre Krankheitsnummer, [de] GK RSA:Stationäre Krankheitsnummer
     */
    public static String getRulesTemp259Diagnosengruppen() {
        return get(RULES_TEMP_259_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_25_HM_MENGE
     * SQLite key: rules_temp_25_hm_menge
     * [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.
     * [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.</pre>
     * ATTENTION this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_10_HE_MENGE! this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_23_HM_MENGE!
     * @return [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat., [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.
     */
    public static String getRulesTemp25HmMenge() {
        return get(RULES_TEMP_25_HM_MENGE).value;
    }

    /**
     * <pre>RULES_TEMP_260_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_260_diagnosengruppen
     * [en] GK RSA:stationäre Hauptdiagnosen
     * [de] GK RSA:stationäre Hauptdiagnosen</pre>
     * ATTENTION this value ('GK RSA:stationäre Hauptdiagnosen') seems to be also defined under the key RULES_TEMP_274_GK_RSA_HAUPTDIAGNOSESTATIONAER!
     * @return [en] GK RSA:stationäre Hauptdiagnosen, [de] GK RSA:stationäre Hauptdiagnosen
     */
    public static String getRulesTemp260Diagnosengruppen() {
        return get(RULES_TEMP_260_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_261_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_261_diagnosengruppen
     * [en] GK RSA:stationäre HMG relevante Diagnosen
     * [de] GK RSA:stationäre HMG relevante Diagnosen</pre>
     * ATTENTION this value ('GK RSA:stationäre HMG relevante Diagnosen') seems to be also defined under the key RULES_TEMP_276_GK_RSA_DIAGNOSESTATIONAERHMGRELEVANT!
     * @return [en] GK RSA:stationäre HMG relevante Diagnosen, [de] GK RSA:stationäre HMG relevante Diagnosen
     */
    public static String getRulesTemp261Diagnosengruppen() {
        return get(RULES_TEMP_261_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_262_DIAGNOSENGRUPPEN
     * SQLite key: rules_temp_262_diagnosengruppen
     * [en] GK RSA:stationäre Nebendiagnose
     * [de] GK RSA:stationäre Nebendiagnose</pre>
     * ATTENTION this value ('GK RSA:stationäre Nebendiagnose') seems to be also defined under the key RULES_TEMP_279_GK_RSA_NEBENDIAGNOSESTATIONAER!
     * @return [en] GK RSA:stationäre Nebendiagnose, [de] GK RSA:stationäre Nebendiagnose
     */
    public static String getRulesTemp262Diagnosengruppen() {
        return get(RULES_TEMP_262_DIAGNOSENGRUPPEN).value;
    }

    /**
     * <pre>RULES_TEMP_263_GK_RSA_DIAGNOSEAMBULANT
     * SQLite key: rules_temp_263_gk_rsa_diagnoseambulant
     * [en] GK RSA:ambulante Diagnosen
     * [de] GK RSA:ambulante Diagnosen</pre>
     * ATTENTION this value ('GK RSA:ambulante Diagnosen') seems to be also defined under the key RULES_TEMP_247_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:ambulante Diagnosen, [de] GK RSA:ambulante Diagnosen
     */
    public static String getRulesTemp263GkRsaDiagnoseambulant() {
        return get(RULES_TEMP_263_GK_RSA_DIAGNOSEAMBULANT).value;
    }

    /**
     * <pre>RULES_TEMP_264_GK_RSA_QUARTALDIAGNOSENAMBULANT
     * SQLite key: rules_temp_264_gk_rsa_quartaldiagnosenambulant
     * [en] GK RSA:Ambulante Diagnosen Leistungsquartal
     * [de] GK RSA:Ambulante Diagnosen Leistungsquartal</pre>
     * ATTENTION this value ('GK RSA:Ambulante Diagnosen Leistungsquartal') seems to be also defined under the key RULES_TEMP_248_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:Ambulante Diagnosen Leistungsquartal, [de] GK RSA:Ambulante Diagnosen Leistungsquartal
     */
    public static String getRulesTemp264GkRsaQuartaldiagnosenambulant() {
        return get(RULES_TEMP_264_GK_RSA_QUARTALDIAGNOSENAMBULANT).value;
    }

    /**
     * <pre>RULES_TEMP_265_GK_RSA_QUALIFIZIERUNGDIAGNOSENAMBULANT
     * SQLite key: rules_temp_265_gk_rsa_qualifizierungdiagnosenambulant
     * [en] GK RSA:Ambulante Diagnosen Qualifizierung
     * [de] GK RSA:Ambulante Diagnosen Qualifizierung</pre>
     * ATTENTION this value ('GK RSA:Ambulante Diagnosen Qualifizierung') seems to be also defined under the key RULES_TEMP_249_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:Ambulante Diagnosen Qualifizierung, [de] GK RSA:Ambulante Diagnosen Qualifizierung
     */
    public static String getRulesTemp265GkRsaQualifizierungdiagnosenambulant() {
        return get(RULES_TEMP_265_GK_RSA_QUALIFIZIERUNGDIAGNOSENAMBULANT).value;
    }

    /**
     * <pre>RULES_TEMP_266_GK_RSA_AMBULANTEDXG
     * SQLite key: rules_temp_266_gk_rsa_ambulantedxg
     * [en] GK RSA:Ambulante DxG
     * [de] GK RSA:Ambulante DxG</pre>
     * ATTENTION this value ('GK RSA:Ambulante DxG') seems to be also defined under the key RULES_TEMP_250_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:Ambulante DxG, [de] GK RSA:Ambulante DxG
     */
    public static String getRulesTemp266GkRsaAmbulantedxg() {
        return get(RULES_TEMP_266_GK_RSA_AMBULANTEDXG).value;
    }

    /**
     * <pre>RULES_TEMP_267_GK_RSA_DIAGNOSEAMBULANTHMGRELEVANT
     * SQLite key: rules_temp_267_gk_rsa_diagnoseambulanthmgrelevant
     * [en] GK RSA:ambulante HMG relevante Diagnosen
     * [de] GK RSA:ambulante HMG relevante Diagnosen</pre>
     * ATTENTION this value ('GK RSA:ambulante HMG relevante Diagnosen') seems to be also defined under the key RULES_TEMP_251_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:ambulante HMG relevante Diagnosen, [de] GK RSA:ambulante HMG relevante Diagnosen
     */
    public static String getRulesTemp267GkRsaDiagnoseambulanthmgrelevant() {
        return get(RULES_TEMP_267_GK_RSA_DIAGNOSEAMBULANTHMGRELEVANT).value;
    }

    /**
     * <pre>RULES_TEMP_268_GK_RSA_AMBULANTEHMGRELEVANTEDXG
     * SQLite key: rules_temp_268_gk_rsa_ambulantehmgrelevantedxg
     * [en] GK RSA:Ambulante HMG relevante DxG
     * [de] GK RSA:Ambulante HMG relevante DxG</pre>
     * ATTENTION this value ('GK RSA:Ambulante HMG relevante DxG') seems to be also defined under the key RULES_TEMP_252_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:Ambulante HMG relevante DxG, [de] GK RSA:Ambulante HMG relevante DxG
     */
    public static String getRulesTemp268GkRsaAmbulantehmgrelevantedxg() {
        return get(RULES_TEMP_268_GK_RSA_AMBULANTEHMGRELEVANTEDXG).value;
    }

    /**
     * <pre>RULES_TEMP_269_GK_RSA_AMBULANTEKRANKHEITSNUMMER
     * SQLite key: rules_temp_269_gk_rsa_ambulantekrankheitsnummer
     * [en] GK RSA:Ambulante Krankheitsnummer
     * [de] GK RSA:Ambulante Krankheitsnummer</pre>
     * ATTENTION this value ('GK RSA:Ambulante Krankheitsnummer') seems to be also defined under the key RULES_TEMP_253_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:Ambulante Krankheitsnummer, [de] GK RSA:Ambulante Krankheitsnummer
     */
    public static String getRulesTemp269GkRsaAmbulantekrankheitsnummer() {
        return get(RULES_TEMP_269_GK_RSA_AMBULANTEKRANKHEITSNUMMER).value;
    }

    /**
     * <pre>RULES_TEMP_26_HM_MENGE
     * SQLite key: rules_temp_26_hm_menge
     * [en] Format: numerisch (Beispiel: 5)
     * [de] Format: numerisch (Beispiel: 5)</pre>
     * ATTENTION this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_11_HE_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_17_HM_GESAMTMENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_24_HM_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_4_HE_GESAMTMENGE!
     * @return [en] Format: numerisch (Beispiel: 5), [de] Format: numerisch (Beispiel: 5)
     */
    public static String getRulesTemp26HmMenge() {
        return get(RULES_TEMP_26_HM_MENGE).value;
    }

    /**
     * <pre>RULES_TEMP_270_GK_RSA_DXG
     * SQLite key: rules_temp_270_gk_rsa_dxg
     * [en] GK RSA:DxG
     * [de] GK RSA:DxG</pre>
     * ATTENTION this value ('GK RSA:DxG') seems to be also defined under the key RULES_TEMP_254_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:DxG, [de] GK RSA:DxG
     */
    public static String getRulesTemp270GkRsaDxg() {
        return get(RULES_TEMP_270_GK_RSA_DXG).value;
    }

    /**
     * <pre>RULES_TEMP_271_GK_RSA_KRANKHEITSGRUPPE
     * SQLite key: rules_temp_271_gk_rsa_krankheitsgruppe
     * [en] GK RSA:Krankheitsgruppe
     * [de] GK RSA:Krankheitsgruppe</pre>
     * ATTENTION this value ('GK RSA:Krankheitsgruppe') seems to be also defined under the key RULES_TEMP_255_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:Krankheitsgruppe, [de] GK RSA:Krankheitsgruppe
     */
    public static String getRulesTemp271GkRsaKrankheitsgruppe() {
        return get(RULES_TEMP_271_GK_RSA_KRANKHEITSGRUPPE).value;
    }

    /**
     * <pre>RULES_TEMP_272_GK_RSA_DIAGNOSESTATIONAER
     * SQLite key: rules_temp_272_gk_rsa_diagnosestationaer
     * [en] GK RSA:stationäre Diagnosen
     * [de] GK RSA:stationäre Diagnosen</pre>
     * ATTENTION this value ('GK RSA:stationäre Diagnosen') seems to be also defined under the key RULES_TEMP_257_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:stationäre Diagnosen, [de] GK RSA:stationäre Diagnosen
     */
    public static String getRulesTemp272GkRsaDiagnosestationaer() {
        return get(RULES_TEMP_272_GK_RSA_DIAGNOSESTATIONAER).value;
    }

    /**
     * <pre>RULES_TEMP_273_GK_RSA_STATIONAEREDXG
     * SQLite key: rules_temp_273_gk_rsa_stationaeredxg
     * [en] GK RSA:Stationäre DxG
     * [de] GK RSA:Stationäre DxG</pre>
     * ATTENTION this value ('GK RSA:Stationäre DxG') seems to be also defined under the key RULES_TEMP_256_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:Stationäre DxG, [de] GK RSA:Stationäre DxG
     */
    public static String getRulesTemp273GkRsaStationaeredxg() {
        return get(RULES_TEMP_273_GK_RSA_STATIONAEREDXG).value;
    }

    /**
     * <pre>RULES_TEMP_274_GK_RSA_HAUPTDIAGNOSESTATIONAER
     * SQLite key: rules_temp_274_gk_rsa_hauptdiagnosestationaer
     * [en] GK RSA:stationäre Hauptdiagnosen
     * [de] GK RSA:stationäre Hauptdiagnosen</pre>
     * ATTENTION this value ('GK RSA:stationäre Hauptdiagnosen') seems to be also defined under the key RULES_TEMP_260_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:stationäre Hauptdiagnosen, [de] GK RSA:stationäre Hauptdiagnosen
     */
    public static String getRulesTemp274GkRsaHauptdiagnosestationaer() {
        return get(RULES_TEMP_274_GK_RSA_HAUPTDIAGNOSESTATIONAER).value;
    }

    /**
     * <pre>RULES_TEMP_275_GK_RSA_HAUPTDIAGNOSESTATIONAER
     * SQLite key: rules_temp_275_gk_rsa_hauptdiagnosestationaer
     * [en] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     * [de] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.</pre>
     * @return [en] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code., [de] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     */
    public static String getRulesTemp275GkRsaHauptdiagnosestationaer() {
        return get(RULES_TEMP_275_GK_RSA_HAUPTDIAGNOSESTATIONAER).value;
    }

    /**
     * <pre>RULES_TEMP_276_GK_RSA_DIAGNOSESTATIONAERHMGRELEVANT
     * SQLite key: rules_temp_276_gk_rsa_diagnosestationaerhmgrelevant
     * [en] GK RSA:stationäre HMG relevante Diagnosen
     * [de] GK RSA:stationäre HMG relevante Diagnosen</pre>
     * ATTENTION this value ('GK RSA:stationäre HMG relevante Diagnosen') seems to be also defined under the key RULES_TEMP_261_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:stationäre HMG relevante Diagnosen, [de] GK RSA:stationäre HMG relevante Diagnosen
     */
    public static String getRulesTemp276GkRsaDiagnosestationaerhmgrelevant() {
        return get(RULES_TEMP_276_GK_RSA_DIAGNOSESTATIONAERHMGRELEVANT).value;
    }

    /**
     * <pre>RULES_TEMP_277_GK_RSA_STATIONAEREHMGRELEVANTEDXG
     * SQLite key: rules_temp_277_gk_rsa_stationaerehmgrelevantedxg
     * [en] GK RSA:Stationäre HMG relevante DxG
     * [de] GK RSA:Stationäre HMG relevante DxG</pre>
     * ATTENTION this value ('GK RSA:Stationäre HMG relevante DxG') seems to be also defined under the key RULES_TEMP_258_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:Stationäre HMG relevante DxG, [de] GK RSA:Stationäre HMG relevante DxG
     */
    public static String getRulesTemp277GkRsaStationaerehmgrelevantedxg() {
        return get(RULES_TEMP_277_GK_RSA_STATIONAEREHMGRELEVANTEDXG).value;
    }

    /**
     * <pre>RULES_TEMP_278_GK_RSA_STATIONAEREKRANKHEITSNUMMER
     * SQLite key: rules_temp_278_gk_rsa_stationaerekrankheitsnummer
     * [en] GK RSA:Stationäre Krankheitsnummer
     * [de] GK RSA:Stationäre Krankheitsnummer</pre>
     * ATTENTION this value ('GK RSA:Stationäre Krankheitsnummer') seems to be also defined under the key RULES_TEMP_259_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:Stationäre Krankheitsnummer, [de] GK RSA:Stationäre Krankheitsnummer
     */
    public static String getRulesTemp278GkRsaStationaerekrankheitsnummer() {
        return get(RULES_TEMP_278_GK_RSA_STATIONAEREKRANKHEITSNUMMER).value;
    }

    /**
     * <pre>RULES_TEMP_279_GK_RSA_NEBENDIAGNOSESTATIONAER
     * SQLite key: rules_temp_279_gk_rsa_nebendiagnosestationaer
     * [en] GK RSA:stationäre Nebendiagnose
     * [de] GK RSA:stationäre Nebendiagnose</pre>
     * ATTENTION this value ('GK RSA:stationäre Nebendiagnose') seems to be also defined under the key RULES_TEMP_262_DIAGNOSENGRUPPEN!
     * @return [en] GK RSA:stationäre Nebendiagnose, [de] GK RSA:stationäre Nebendiagnose
     */
    public static String getRulesTemp279GkRsaNebendiagnosestationaer() {
        return get(RULES_TEMP_279_GK_RSA_NEBENDIAGNOSESTATIONAER).value;
    }

    /**
     * <pre>RULES_TEMP_27_HM_VERORDNUNGSDATUM
     * SQLite key: rules_temp_27_hm_verordnungsdatum
     * [en] Datum, an dem das Hilfsmittel verordnet wurde.
     * [de] Datum, an dem das Hilfsmittel verordnet wurde.</pre>
     * ATTENTION this value ('Datum, an dem das Hilfsmittel verordnet wurde.') seems to be also defined under the key RULES_TEMP_12_HE_VERORDNUNGSDATUM!
     * @return [en] Datum, an dem das Hilfsmittel verordnet wurde., [de] Datum, an dem das Hilfsmittel verordnet wurde.
     */
    public static String getRulesTemp27HmVerordnungsdatum() {
        return get(RULES_TEMP_27_HM_VERORDNUNGSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_280_GK_RSA_NEBENDIAGNOSESTATIONAER
     * SQLite key: rules_temp_280_gk_rsa_nebendiagnosestationaer
     * [en] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
     * [de] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code</pre>
     * @return [en] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code, [de] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
     */
    public static String getRulesTemp280GkRsaNebendiagnosestationaer() {
        return get(RULES_TEMP_280_GK_RSA_NEBENDIAGNOSESTATIONAER).value;
    }

    /**
     * <pre>RULES_TEMP_281_VERSICHERTER_ALTER
     * SQLite key: rules_temp_281_versicherter_alter
     * [en] Format: Ganzzahlig (Beispiel 5)
     * [de] Format: Ganzzahlig (Beispiel 5)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_105_ZUSCHLAGSTAGE! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_128_INTENSIVVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_55_ALTERINTAGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_60_ANZAHLABTEILUNGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_96_MITTLERE_VERWEILDAUER!
     * @return [en] Format: Ganzzahlig (Beispiel 5), [de] Format: Ganzzahlig (Beispiel 5)
     */
    public static String getRulesTemp281VersicherterAlter() {
        return get(RULES_TEMP_281_VERSICHERTER_ALTER).value;
    }

    /**
     * <pre>RULES_TEMP_282_VERSICHERTER_POSTLEITZAHL
     * SQLite key: rules_temp_282_versicherter_postleitzahl
     * [en] Format: Ganzzahlig (Beispiel 10245) 5-stellig
     * [de] Format: Ganzzahlig (Beispiel 10245) 5-stellig</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 10245) 5-stellig') seems to be also defined under the key RULES_TEMP_58_POSTLEITZAHL!
     * @return [en] Format: Ganzzahlig (Beispiel 10245) 5-stellig, [de] Format: Ganzzahlig (Beispiel 10245) 5-stellig
     */
    public static String getRulesTemp282VersicherterPostleitzahl() {
        return get(RULES_TEMP_282_VERSICHERTER_POSTLEITZAHL).value;
    }

    /**
     * <pre>RULES_TEMP_28_HM_VERORDNUNGSDATUM
     * SQLite key: rules_temp_28_hm_verordnungsdatum
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp28HmVerordnungsdatum() {
        return get(RULES_TEMP_28_HM_VERORDNUNGSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_29_ATCCODE
     * SQLite key: rules_temp_29_atccode
     * [en] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04
     * [de] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04</pre>
     * ATTENTION this value ('Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04') seems to be also defined under the key RULES_TEMP_41_ATCCODE!
     * @return [en] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04, [de] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04
     */
    public static String getRulesTemp29Atccode() {
        return get(RULES_TEMP_29_ATCCODE).value;
    }

    /**
     * <pre>RULES_TEMP_2_HE_PREIS
     * SQLite key: rules_temp_2_he_preis
     * [en] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)
     * [de] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)</pre>
     * ATTENTION this value ('Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_15_HM_PREIS!
     * @return [en] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75), [de] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)
     */
    public static String getRulesTemp2HePreis() {
        return get(RULES_TEMP_2_HE_PREIS).value;
    }

    /**
     * <pre>RULES_TEMP_30_ATCCODE
     * SQLite key: rules_temp_30_atccode
     * [en] Format: alphanumerisch (Beispiel: B01AX04)
     * [de] Format: alphanumerisch (Beispiel: B01AX04)</pre>
     * ATTENTION this value ('Format: alphanumerisch (Beispiel: B01AX04)') seems to be also defined under the key RULES_TEMP_42_ATCCODE! this value ('Format: alphanumerisch (Beispiel: B01AX04)') seems to be also defined under the key RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_TOOLTIP_2!
     * @return [en] Format: alphanumerisch (Beispiel: B01AX04), [de] Format: alphanumerisch (Beispiel: B01AX04)
     */
    public static String getRulesTemp30Atccode() {
        return get(RULES_TEMP_30_ATCCODE).value;
    }

    /**
     * <pre>RULES_TEMP_31_DOSIERUNG
     * SQLite key: rules_temp_31_dosierung
     * [en] Format: Fließkommazahl (Beispiel: 2.5)
     * [de] Format: Fließkommazahl (Beispiel: 2.5)</pre>
     * ATTENTION this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_32_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_33_GESAMTPZNDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_43_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_44_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_45_GESAMTPZNDOSIERUNG!
     * @return [en] Format: Fließkommazahl (Beispiel: 2.5), [de] Format: Fließkommazahl (Beispiel: 2.5)
     */
    public static String getRulesTemp31Dosierung() {
        return get(RULES_TEMP_31_DOSIERUNG).value;
    }

    /**
     * <pre>RULES_TEMP_32_GESAMTATCDOSIERUNG
     * SQLite key: rules_temp_32_gesamtatcdosierung
     * [en] Format: Fließkommazahl (Beispiel: 2.5)
     * [de] Format: Fließkommazahl (Beispiel: 2.5)</pre>
     * ATTENTION this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_31_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_33_GESAMTPZNDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_43_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_44_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_45_GESAMTPZNDOSIERUNG!
     * @return [en] Format: Fließkommazahl (Beispiel: 2.5), [de] Format: Fließkommazahl (Beispiel: 2.5)
     */
    public static String getRulesTemp32Gesamtatcdosierung() {
        return get(RULES_TEMP_32_GESAMTATCDOSIERUNG).value;
    }

    /**
     * <pre>RULES_TEMP_33_GESAMTPZNDOSIERUNG
     * SQLite key: rules_temp_33_gesamtpzndosierung
     * [en] Format: Fließkommazahl (Beispiel: 2.5)
     * [de] Format: Fließkommazahl (Beispiel: 2.5)</pre>
     * ATTENTION this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_31_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_32_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_43_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_44_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_45_GESAMTPZNDOSIERUNG!
     * @return [en] Format: Fließkommazahl (Beispiel: 2.5), [de] Format: Fließkommazahl (Beispiel: 2.5)
     */
    public static String getRulesTemp33Gesamtpzndosierung() {
        return get(RULES_TEMP_33_GESAMTPZNDOSIERUNG).value;
    }

    /**
     * <pre>RULES_TEMP_34_GESAMTMPREIS
     * SQLite key: rules_temp_34_gesamtmpreis
     * [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     * [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)</pre>
     * ATTENTION this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_35_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_36_GESAMTPZNPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_46_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_47_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_48_GESAMTPZNPREIS!
     * @return [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     */
    public static String getRulesTemp34Gesamtmpreis() {
        return get(RULES_TEMP_34_GESAMTMPREIS).value;
    }

    /**
     * <pre>RULES_TEMP_35_GESAMTATCPREIS
     * SQLite key: rules_temp_35_gesamtatcpreis
     * [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     * [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)</pre>
     * ATTENTION this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_34_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_36_GESAMTPZNPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_46_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_47_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_48_GESAMTPZNPREIS!
     * @return [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     */
    public static String getRulesTemp35Gesamtatcpreis() {
        return get(RULES_TEMP_35_GESAMTATCPREIS).value;
    }

    /**
     * <pre>RULES_TEMP_36_GESAMTPZNPREIS
     * SQLite key: rules_temp_36_gesamtpznpreis
     * [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     * [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)</pre>
     * ATTENTION this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_34_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_35_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_46_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_47_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_48_GESAMTPZNPREIS!
     * @return [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     */
    public static String getRulesTemp36Gesamtpznpreis() {
        return get(RULES_TEMP_36_GESAMTPZNPREIS).value;
    }

    /**
     * <pre>RULES_TEMP_37_MPREIS
     * SQLite key: rules_temp_37_mpreis
     * [en] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)
     * [de] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)</pre>
     * ATTENTION this value ('Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_49_MPREIS!
     * @return [en] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)
     */
    public static String getRulesTemp37Mpreis() {
        return get(RULES_TEMP_37_MPREIS).value;
    }

    /**
     * <pre>RULES_TEMP_38_PZNCODE
     * SQLite key: rules_temp_38_pzncode
     * [en] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918
     * [de] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918</pre>
     * ATTENTION this value ('Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918') seems to be also defined under the key RULES_TEMP_50_PZNCODE!
     * @return [en] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918, [de] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918
     */
    public static String getRulesTemp38Pzncode() {
        return get(RULES_TEMP_38_PZNCODE).value;
    }

    /**
     * <pre>RULES_TEMP_39_PZNCODE
     * SQLite key: rules_temp_39_pzncode
     * [en] Format: numerisch (Beispiel: 4114918)
     * [de] Format: numerisch (Beispiel: 4114918)</pre>
     * ATTENTION this value ('Format: numerisch (Beispiel: 4114918)') seems to be also defined under the key RULES_TEMP_51_PZNCODE!
     * @return [en] Format: numerisch (Beispiel: 4114918), [de] Format: numerisch (Beispiel: 4114918)
     */
    public static String getRulesTemp39Pzncode() {
        return get(RULES_TEMP_39_PZNCODE).value;
    }

    /**
     * <pre>RULES_TEMP_3_HE_GESAMTMENGE
     * SQLite key: rules_temp_3_he_gesamtmenge
     * [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.
     * [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.</pre>
     * ATTENTION this value ('Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.') seems to be also defined under the key RULES_TEMP_16_HM_GESAMTMENGE!
     * @return [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist., [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.
     */
    public static String getRulesTemp3HeGesamtmenge() {
        return get(RULES_TEMP_3_HE_GESAMTMENGE).value;
    }

    /**
     * <pre>RULES_TEMP_40_MVERORDNUNGSDATUM
     * SQLite key: rules_temp_40_mverordnungsdatum
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp40Mverordnungsdatum() {
        return get(RULES_TEMP_40_MVERORDNUNGSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_41_ATCCODE
     * SQLite key: rules_temp_41_atccode
     * [en] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04
     * [de] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04</pre>
     * ATTENTION this value ('Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04') seems to be also defined under the key RULES_TEMP_29_ATCCODE!
     * @return [en] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04, [de] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04
     */
    public static String getRulesTemp41Atccode() {
        return get(RULES_TEMP_41_ATCCODE).value;
    }

    /**
     * <pre>RULES_TEMP_42_ATCCODE
     * SQLite key: rules_temp_42_atccode
     * [en] Format: alphanumerisch (Beispiel: B01AX04)
     * [de] Format: alphanumerisch (Beispiel: B01AX04)</pre>
     * ATTENTION this value ('Format: alphanumerisch (Beispiel: B01AX04)') seems to be also defined under the key RULES_TEMP_30_ATCCODE! this value ('Format: alphanumerisch (Beispiel: B01AX04)') seems to be also defined under the key RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_TOOLTIP_2!
     * @return [en] Format: alphanumerisch (Beispiel: B01AX04), [de] Format: alphanumerisch (Beispiel: B01AX04)
     */
    public static String getRulesTemp42Atccode() {
        return get(RULES_TEMP_42_ATCCODE).value;
    }

    /**
     * <pre>RULES_TEMP_43_DOSIERUNG
     * SQLite key: rules_temp_43_dosierung
     * [en] Format: Fließkommazahl (Beispiel: 2.5)
     * [de] Format: Fließkommazahl (Beispiel: 2.5)</pre>
     * ATTENTION this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_31_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_32_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_33_GESAMTPZNDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_44_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_45_GESAMTPZNDOSIERUNG!
     * @return [en] Format: Fließkommazahl (Beispiel: 2.5), [de] Format: Fließkommazahl (Beispiel: 2.5)
     */
    public static String getRulesTemp43Dosierung() {
        return get(RULES_TEMP_43_DOSIERUNG).value;
    }

    /**
     * <pre>RULES_TEMP_44_GESAMTATCDOSIERUNG
     * SQLite key: rules_temp_44_gesamtatcdosierung
     * [en] Format: Fließkommazahl (Beispiel: 2.5)
     * [de] Format: Fließkommazahl (Beispiel: 2.5)</pre>
     * ATTENTION this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_31_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_32_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_33_GESAMTPZNDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_43_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_45_GESAMTPZNDOSIERUNG!
     * @return [en] Format: Fließkommazahl (Beispiel: 2.5), [de] Format: Fließkommazahl (Beispiel: 2.5)
     */
    public static String getRulesTemp44Gesamtatcdosierung() {
        return get(RULES_TEMP_44_GESAMTATCDOSIERUNG).value;
    }

    /**
     * <pre>RULES_TEMP_45_GESAMTPZNDOSIERUNG
     * SQLite key: rules_temp_45_gesamtpzndosierung
     * [en] Format: Fließkommazahl (Beispiel: 2.5)
     * [de] Format: Fließkommazahl (Beispiel: 2.5)</pre>
     * ATTENTION this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_CRIT_MRSA_PZNDOSAGE_TOOLTIP_2! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_31_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_32_GESAMTATCDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_33_GESAMTPZNDOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_43_DOSIERUNG! this value ('Format: Fließkommazahl (Beispiel: 2.5)') seems to be also defined under the key RULES_TEMP_44_GESAMTATCDOSIERUNG!
     * @return [en] Format: Fließkommazahl (Beispiel: 2.5), [de] Format: Fließkommazahl (Beispiel: 2.5)
     */
    public static String getRulesTemp45Gesamtpzndosierung() {
        return get(RULES_TEMP_45_GESAMTPZNDOSIERUNG).value;
    }

    /**
     * <pre>RULES_TEMP_46_GESAMTMPREIS
     * SQLite key: rules_temp_46_gesamtmpreis
     * [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     * [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)</pre>
     * ATTENTION this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_34_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_35_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_36_GESAMTPZNPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_47_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_48_GESAMTPZNPREIS!
     * @return [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     */
    public static String getRulesTemp46Gesamtmpreis() {
        return get(RULES_TEMP_46_GESAMTMPREIS).value;
    }

    /**
     * <pre>RULES_TEMP_47_GESAMTATCPREIS
     * SQLite key: rules_temp_47_gesamtatcpreis
     * [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     * [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)</pre>
     * ATTENTION this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_34_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_35_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_36_GESAMTPZNPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_46_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_48_GESAMTPZNPREIS!
     * @return [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     */
    public static String getRulesTemp47Gesamtatcpreis() {
        return get(RULES_TEMP_47_GESAMTATCPREIS).value;
    }

    /**
     * <pre>RULES_TEMP_48_GESAMTPZNPREIS
     * SQLite key: rules_temp_48_gesamtpznpreis
     * [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     * [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)</pre>
     * ATTENTION this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_34_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_35_GESAMTATCPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_36_GESAMTPZNPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_46_GESAMTMPREIS! this value ('Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_47_GESAMTATCPREIS!
     * @return [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     */
    public static String getRulesTemp48Gesamtpznpreis() {
        return get(RULES_TEMP_48_GESAMTPZNPREIS).value;
    }

    /**
     * <pre>RULES_TEMP_49_MPREIS
     * SQLite key: rules_temp_49_mpreis
     * [en] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)
     * [de] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)</pre>
     * ATTENTION this value ('Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_37_MPREIS!
     * @return [en] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)
     */
    public static String getRulesTemp49Mpreis() {
        return get(RULES_TEMP_49_MPREIS).value;
    }

    /**
     * <pre>RULES_TEMP_4_HE_GESAMTMENGE
     * SQLite key: rules_temp_4_he_gesamtmenge
     * [en] Format: numerisch (Beispiel: 5)
     * [de] Format: numerisch (Beispiel: 5)</pre>
     * ATTENTION this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_11_HE_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_17_HM_GESAMTMENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_24_HM_MENGE! this value ('Format: numerisch (Beispiel: 5)') seems to be also defined under the key RULES_TEMP_26_HM_MENGE!
     * @return [en] Format: numerisch (Beispiel: 5), [de] Format: numerisch (Beispiel: 5)
     */
    public static String getRulesTemp4HeGesamtmenge() {
        return get(RULES_TEMP_4_HE_GESAMTMENGE).value;
    }

    /**
     * <pre>RULES_TEMP_50_PZNCODE
     * SQLite key: rules_temp_50_pzncode
     * [en] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918
     * [de] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918</pre>
     * ATTENTION this value ('Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918') seems to be also defined under the key RULES_TEMP_38_PZNCODE!
     * @return [en] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918, [de] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918
     */
    public static String getRulesTemp50Pzncode() {
        return get(RULES_TEMP_50_PZNCODE).value;
    }

    /**
     * <pre>RULES_TEMP_51_PZNCODE
     * SQLite key: rules_temp_51_pzncode
     * [en] Format: numerisch (Beispiel: 4114918)
     * [de] Format: numerisch (Beispiel: 4114918)</pre>
     * ATTENTION this value ('Format: numerisch (Beispiel: 4114918)') seems to be also defined under the key RULES_TEMP_39_PZNCODE!
     * @return [en] Format: numerisch (Beispiel: 4114918), [de] Format: numerisch (Beispiel: 4114918)
     */
    public static String getRulesTemp51Pzncode() {
        return get(RULES_TEMP_51_PZNCODE).value;
    }

    /**
     * <pre>RULES_TEMP_52_FALL_NUMERIC_10
     * SQLite key: rules_temp_52_fall_numeric10
     * [en] Fall.Numeric10
     * [de] Fall.Numeric10</pre>
     * ATTENTION this value ('Fall.Numeric10') seems to be also defined under the key RULES_TEMP_168_FALL_NUMERIC_10!
     * @return [en] Fall.Numeric10, [de] Fall.Numeric10
     */
    public static String getRulesTemp52FallNumeric10() {
        return get(RULES_TEMP_52_FALL_NUMERIC_10).value;
    }

    /**
     * <pre>RULES_TEMP_52_MVERORDNUNGSDATUM
     * SQLite key: rules_temp_52_mverordnungsdatum
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp52Mverordnungsdatum() {
        return get(RULES_TEMP_52_MVERORDNUNGSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_53_FALL_NUMERIC_6
     * SQLite key: rules_temp_53_fall_numeric6
     * [en] Fall.Numeric6
     * [de] Fall.Numeric6</pre>
     * ATTENTION this value ('Fall.Numeric6') seems to be also defined under the key RULES_TEMP_169_FALL_NUMERIC_6!
     * @return [en] Fall.Numeric6, [de] Fall.Numeric6
     */
    public static String getRulesTemp53FallNumeric6() {
        return get(RULES_TEMP_53_FALL_NUMERIC_6).value;
    }

    /**
     * <pre>RULES_TEMP_53_JETZT
     * SQLite key: rules_temp_53_jetzt
     * [en] Format: hh:mm:ss
     * [de] Format: hh:mm:ss</pre>
     * @return [en] Format: hh:mm:ss, [de] Format: hh:mm:ss
     */
    public static String getRulesTemp53Jetzt() {
        return get(RULES_TEMP_53_JETZT).value;
    }

    /**
     * <pre>RULES_TEMP_54_ALTERINJAHREN
     * SQLite key: rules_temp_54_alterinjahren
     * [en] Format: Ganzzahlig (Beispiel 50)
     * [de] Format: Ganzzahlig (Beispiel 50)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 50)') seems to be also defined under the key RULES_TEMP_137_VERWEILDAUERINSTUNDEN! this value ('Format: Ganzzahlig (Beispiel 50)') seems to be also defined under the key RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_2!
     * @return [en] Format: Ganzzahlig (Beispiel 50), [de] Format: Ganzzahlig (Beispiel 50)
     */
    public static String getRulesTemp54Alterinjahren() {
        return get(RULES_TEMP_54_ALTERINJAHREN).value;
    }

    /**
     * <pre>RULES_TEMP_54_FALL_NUMERIC_7
     * SQLite key: rules_temp_54_fall_numeric7
     * [en] Fall.Numeric7
     * [de] Fall.Numeric7</pre>
     * ATTENTION this value ('Fall.Numeric7') seems to be also defined under the key RULES_TEMP_170_FALL_NUMERIC_7!
     * @return [en] Fall.Numeric7, [de] Fall.Numeric7
     */
    public static String getRulesTemp54FallNumeric7() {
        return get(RULES_TEMP_54_FALL_NUMERIC_7).value;
    }

    /**
     * <pre>RULES_TEMP_55_ALTERINTAGEN
     * SQLite key: rules_temp_55_alterintagen
     * [en] Format: Ganzzahlig (Beispiel 5)
     * [de] Format: Ganzzahlig (Beispiel 5)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_105_ZUSCHLAGSTAGE! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_128_INTENSIVVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_281_VERSICHERTER_ALTER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_60_ANZAHLABTEILUNGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_96_MITTLERE_VERWEILDAUER!
     * @return [en] Format: Ganzzahlig (Beispiel 5), [de] Format: Ganzzahlig (Beispiel 5)
     */
    public static String getRulesTemp55Alterintagen() {
        return get(RULES_TEMP_55_ALTERINTAGEN).value;
    }

    /**
     * <pre>RULES_TEMP_55_FALL_NUMERIC_8
     * SQLite key: rules_temp_55_fall_numeric8
     * [en] Fall.Numeric8
     * [de] Fall.Numeric8</pre>
     * ATTENTION this value ('Fall.Numeric8') seems to be also defined under the key RULES_TEMP_171_FALL_NUMERIC_8!
     * @return [en] Fall.Numeric8, [de] Fall.Numeric8
     */
    public static String getRulesTemp55FallNumeric8() {
        return get(RULES_TEMP_55_FALL_NUMERIC_8).value;
    }

    /**
     * <pre>RULES_TEMP_56_FALL_NUMERIC_9
     * SQLite key: rules_temp_56_fall_numeric9
     * [en] Fall.Numeric9
     * [de] Fall.Numeric9</pre>
     * ATTENTION this value ('Fall.Numeric9') seems to be also defined under the key RULES_TEMP_172_FALL_NUMERIC_9!
     * @return [en] Fall.Numeric9, [de] Fall.Numeric9
     */
    public static String getRulesTemp56FallNumeric9() {
        return get(RULES_TEMP_56_FALL_NUMERIC_9).value;
    }

    /**
     * <pre>RULES_TEMP_56_GEBURTSDATUM
     * SQLite key: rules_temp_56_geburtsdatum
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp56Geburtsdatum() {
        return get(RULES_TEMP_56_GEBURTSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_57_FALL_STRING_10
     * SQLite key: rules_temp_57_fall_string10
     * [en] Fall.String10
     * [de] Fall.String10</pre>
     * ATTENTION this value ('Fall.String10') seems to be also defined under the key RULES_TEMP_173_FALL_STRING_10!
     * @return [en] Fall.String10, [de] Fall.String10
     */
    public static String getRulesTemp57FallString10() {
        return get(RULES_TEMP_57_FALL_STRING_10).value;
    }

    /**
     * <pre>RULES_TEMP_57_GEWICHT
     * SQLite key: rules_temp_57_gewicht
     * [en] Format: Ganzzahlig (Beispiel 2500)
     * [de] Format: Ganzzahlig (Beispiel 2500)</pre>
     * @return [en] Format: Ganzzahlig (Beispiel 2500), [de] Format: Ganzzahlig (Beispiel 2500)
     */
    public static String getRulesTemp57Gewicht() {
        return get(RULES_TEMP_57_GEWICHT).value;
    }

    /**
     * <pre>RULES_TEMP_58_FALL_STRING_6
     * SQLite key: rules_temp_58_fall_string6
     * [en] Fall.String6
     * [de] Fall.String6</pre>
     * ATTENTION this value ('Fall.String6') seems to be also defined under the key RULES_TEMP_174_FALL_STRING_6!
     * @return [en] Fall.String6, [de] Fall.String6
     */
    public static String getRulesTemp58FallString6() {
        return get(RULES_TEMP_58_FALL_STRING_6).value;
    }

    /**
     * <pre>RULES_TEMP_58_POSTLEITZAHL
     * SQLite key: rules_temp_58_postleitzahl
     * [en] Format: Ganzzahlig (Beispiel 10245) 5-stellig
     * [de] Format: Ganzzahlig (Beispiel 10245) 5-stellig</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 10245) 5-stellig') seems to be also defined under the key RULES_TEMP_282_VERSICHERTER_POSTLEITZAHL!
     * @return [en] Format: Ganzzahlig (Beispiel 10245) 5-stellig, [de] Format: Ganzzahlig (Beispiel 10245) 5-stellig
     */
    public static String getRulesTemp58Postleitzahl() {
        return get(RULES_TEMP_58_POSTLEITZAHL).value;
    }

    /**
     * <pre>RULES_TEMP_59_FALL_STRING_7
     * SQLite key: rules_temp_59_fall_string7
     * [en] Fall.String7
     * [de] Fall.String7</pre>
     * ATTENTION this value ('Fall.String7') seems to be also defined under the key RULES_TEMP_175_FALL_STRING_7!
     * @return [en] Fall.String7, [de] Fall.String7
     */
    public static String getRulesTemp59FallString7() {
        return get(RULES_TEMP_59_FALL_STRING_7).value;
    }

    /**
     * <pre>RULES_TEMP_59_WOHNORT
     * SQLite key: rules_temp_59_wohnort
     * [en] Format: bis zu 255 Zeichen alphanumerisch (Beispiel: Berlin)
     * [de] Format: bis zu 255 Zeichen alphanumerisch (Beispiel: Berlin)</pre>
     * @return [en] Format: bis zu 255 Zeichen alphanumerisch (Beispiel: Berlin), [de] Format: bis zu 255 Zeichen alphanumerisch (Beispiel: Berlin)
     */
    public static String getRulesTemp59Wohnort() {
        return get(RULES_TEMP_59_WOHNORT).value;
    }

    /**
     * <pre>RULES_TEMP_5_HE_GESAMTPREIS_ALLE
     * SQLite key: rules_temp_5_he_gesamtpreis_alle
     * [en] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.
     * [de] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.</pre>
     * ATTENTION this value ('Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.') seems to be also defined under the key RULES_TEMP_18_HM_GESAMTPREIS_ALLE!
     * @return [en] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat., [de] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.
     */
    public static String getRulesTemp5HeGesamtpreisAlle() {
        return get(RULES_TEMP_5_HE_GESAMTPREIS_ALLE).value;
    }

    /**
     * <pre>RULES_TEMP_60_ANZAHLABTEILUNGEN
     * SQLite key: rules_temp_60_anzahlabteilungen
     * [en] Format: Ganzzahlig (Beispiel 5)
     * [de] Format: Ganzzahlig (Beispiel 5)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_105_ZUSCHLAGSTAGE! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_128_INTENSIVVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_281_VERSICHERTER_ALTER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_55_ALTERINTAGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_96_MITTLERE_VERWEILDAUER!
     * @return [en] Format: Ganzzahlig (Beispiel 5), [de] Format: Ganzzahlig (Beispiel 5)
     */
    public static String getRulesTemp60Anzahlabteilungen() {
        return get(RULES_TEMP_60_ANZAHLABTEILUNGEN).value;
    }

    /**
     * <pre>RULES_TEMP_60_FALL_STRING_8
     * SQLite key: rules_temp_60_fall_string8
     * [en] Fall.String8
     * [de] Fall.String8</pre>
     * ATTENTION this value ('Fall.String8') seems to be also defined under the key RULES_TEMP_176_FALL_STRING_8!
     * @return [en] Fall.String8, [de] Fall.String8
     */
    public static String getRulesTemp60FallString8() {
        return get(RULES_TEMP_60_FALL_STRING_8).value;
    }

    /**
     * <pre>RULES_TEMP_61_AUFNEHMENDEFACHABTEILUNG
     * SQLite key: rules_temp_61_aufnehmendefachabteilung
     * [en] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
     * [de] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.</pre>
     * ATTENTION this value ('z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.') seems to be also defined under the key RULES_TEMP_63_BEHANDELNDEFACHABTEILUNG! this value ('z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.') seems to be also defined under the key RULES_TEMP_65_ENTLASSENDEFACHABTEILUNG!
     * @return [en] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl., [de] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
     */
    public static String getRulesTemp61Aufnehmendefachabteilung() {
        return get(RULES_TEMP_61_AUFNEHMENDEFACHABTEILUNG).value;
    }

    /**
     * <pre>RULES_TEMP_61_FALL_STRING_9
     * SQLite key: rules_temp_61_fall_string9
     * [en] Fall.String9
     * [de] Fall.String9</pre>
     * ATTENTION this value ('Fall.String9') seems to be also defined under the key RULES_TEMP_177_FALL_STRING_9!
     * @return [en] Fall.String9, [de] Fall.String9
     */
    public static String getRulesTemp61FallString9() {
        return get(RULES_TEMP_61_FALL_STRING_9).value;
    }

    /**
     * <pre>RULES_TEMP_62_AUFNEHMENDEFACHABTEILUNG
     * SQLite key: rules_temp_62_aufnehmendefachabteilung
     * [en] Format: Ganzzahlig (Beispiel 1500)
     * [de] Format: Ganzzahlig (Beispiel 1500)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_64_BEHANDELNDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_66_ENTLASSENDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_67_ABTEILUNG!
     * @return [en] Format: Ganzzahlig (Beispiel 1500), [de] Format: Ganzzahlig (Beispiel 1500)
     */
    public static String getRulesTemp62Aufnehmendefachabteilung() {
        return get(RULES_TEMP_62_AUFNEHMENDEFACHABTEILUNG).value;
    }

    /**
     * <pre>RULES_TEMP_62_DRGERLOES
     * SQLite key: rules_temp_62_drgerloes
     * [en] Erloes(DRG)
     * [de] Erloes(DRG)</pre>
     * @return [en] Erloes(DRG), [de] Erloes(DRG)
     */
    public static String getRulesTemp62Drgerloes() {
        return get(RULES_TEMP_62_DRGERLOES).value;
    }

    /**
     * <pre>RULES_TEMP_63_BEHANDELNDEFACHABTEILUNG
     * SQLite key: rules_temp_63_behandelndefachabteilung
     * [en] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
     * [de] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.</pre>
     * ATTENTION this value ('z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.') seems to be also defined under the key RULES_TEMP_61_AUFNEHMENDEFACHABTEILUNG! this value ('z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.') seems to be also defined under the key RULES_TEMP_65_ENTLASSENDEFACHABTEILUNG!
     * @return [en] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl., [de] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
     */
    public static String getRulesTemp63Behandelndefachabteilung() {
        return get(RULES_TEMP_63_BEHANDELNDEFACHABTEILUNG).value;
    }

    /**
     * <pre>RULES_TEMP_63_DRGERLOES
     * SQLite key: rules_temp_63_drgerloes
     * [en] Erlös des DRG - Falles ohne Berücksichtigung der Zusatzentgelten und Pflegeaufwendungen(ab 2020)
     * [de] Erlös des DRG - Falles ohne Berücksichtigung der Zusatzentgelten und Pflegeaufwendungen(ab 2020)</pre>
     * @return [en] Erlös des DRG - Falles ohne Berücksichtigung der Zusatzentgelten und Pflegeaufwendungen(ab 2020), [de] Erlös des DRG - Falles ohne Berücksichtigung der Zusatzentgelten und Pflegeaufwendungen(ab 2020)
     */
    public static String getRulesTemp63Drgerloes() {
        return get(RULES_TEMP_63_DRGERLOES).value;
    }

    /**
     * <pre>RULES_TEMP_64_BEHANDELNDEFACHABTEILUNG
     * SQLite key: rules_temp_64_behandelndefachabteilung
     * [en] Format: Ganzzahlig (Beispiel 1500)
     * [de] Format: Ganzzahlig (Beispiel 1500)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_62_AUFNEHMENDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_66_ENTLASSENDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_67_ABTEILUNG!
     * @return [en] Format: Ganzzahlig (Beispiel 1500), [de] Format: Ganzzahlig (Beispiel 1500)
     */
    public static String getRulesTemp64Behandelndefachabteilung() {
        return get(RULES_TEMP_64_BEHANDELNDEFACHABTEILUNG).value;
    }

    /**
     * <pre>RULES_TEMP_64_FALLERLOES
     * SQLite key: rules_temp_64_fallerloes
     * [en] Gesamterloes(DRG)
     * [de] Gesamterloes(DRG)</pre>
     * @return [en] Gesamterloes(DRG), [de] Gesamterloes(DRG)
     */
    public static String getRulesTemp64Fallerloes() {
        return get(RULES_TEMP_64_FALLERLOES).value;
    }

    /**
     * <pre>RULES_TEMP_65_ENTLASSENDEFACHABTEILUNG
     * SQLite key: rules_temp_65_entlassendefachabteilung
     * [en] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
     * [de] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.</pre>
     * ATTENTION this value ('z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.') seems to be also defined under the key RULES_TEMP_61_AUFNEHMENDEFACHABTEILUNG! this value ('z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.') seems to be also defined under the key RULES_TEMP_63_BEHANDELNDEFACHABTEILUNG!
     * @return [en] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl., [de] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
     */
    public static String getRulesTemp65Entlassendefachabteilung() {
        return get(RULES_TEMP_65_ENTLASSENDEFACHABTEILUNG).value;
    }

    /**
     * <pre>RULES_TEMP_65_FALLERLOES
     * SQLite key: rules_temp_65_fallerloes
     * [en] Gesamterlös des DRG - Falles mit Pflegeaufwendungen(ab 2020) ohne Berücksichtigung der Zusatzentgelten
     * [de] Gesamterlös des DRG - Falles mit Pflegeaufwendungen(ab 2020) ohne Berücksichtigung der Zusatzentgelten</pre>
     * @return [en] Gesamterlös des DRG - Falles mit Pflegeaufwendungen(ab 2020) ohne Berücksichtigung der Zusatzentgelten, [de] Gesamterlös des DRG - Falles mit Pflegeaufwendungen(ab 2020) ohne Berücksichtigung der Zusatzentgelten
     */
    public static String getRulesTemp65Fallerloes() {
        return get(RULES_TEMP_65_FALLERLOES).value;
    }

    /**
     * <pre>RULES_TEMP_66_ENTLASSENDEFACHABTEILUNG
     * SQLite key: rules_temp_66_entlassendefachabteilung
     * [en] Format: Ganzzahlig (Beispiel 1500)
     * [de] Format: Ganzzahlig (Beispiel 1500)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_62_AUFNEHMENDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_64_BEHANDELNDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_67_ABTEILUNG!
     * @return [en] Format: Ganzzahlig (Beispiel 1500), [de] Format: Ganzzahlig (Beispiel 1500)
     */
    public static String getRulesTemp66Entlassendefachabteilung() {
        return get(RULES_TEMP_66_ENTLASSENDEFACHABTEILUNG).value;
    }

    /**
     * <pre>RULES_TEMP_67_ABTEILUNG
     * SQLite key: rules_temp_67_abteilung
     * [en] Format: Ganzzahlig (Beispiel 1500)
     * [de] Format: Ganzzahlig (Beispiel 1500)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_62_AUFNEHMENDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_64_BEHANDELNDEFACHABTEILUNG! this value ('Format: Ganzzahlig (Beispiel 1500)') seems to be also defined under the key RULES_TEMP_66_ENTLASSENDEFACHABTEILUNG!
     * @return [en] Format: Ganzzahlig (Beispiel 1500), [de] Format: Ganzzahlig (Beispiel 1500)
     */
    public static String getRulesTemp67Abteilung() {
        return get(RULES_TEMP_67_ABTEILUNG).value;
    }

    /**
     * <pre>RULES_TEMP_68_STATION
     * SQLite key: rules_temp_68_station
     * [en] Format: alphanumerisch (Beispiel: 7B)
     * [de] Format: alphanumerisch (Beispiel: 7B)</pre>
     * @return [en] Format: alphanumerisch (Beispiel: 7B), [de] Format: alphanumerisch (Beispiel: 7B)
     */
    public static String getRulesTemp68Station() {
        return get(RULES_TEMP_68_STATION).value;
    }

    /**
     * <pre>RULES_TEMP_69_VERLEGUNGSDATUM
     * SQLite key: rules_temp_69_verlegungsdatum
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp69Verlegungsdatum() {
        return get(RULES_TEMP_69_VERLEGUNGSDATUM).value;
    }

    /**
     * <pre>RULES_TEMP_6_HE_GESAMTPREIS_ALLE
     * SQLite key: rules_temp_6_he_gesamtpreis_alle
     * [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
     * [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)</pre>
     * ATTENTION this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_19_HM_GESAMTPREIS_ALLE! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_21_HM_GESAMTPREIS! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_8_HE_GESAMTPREIS!
     * @return [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
     */
    public static String getRulesTemp6HeGesamtpreisAlle() {
        return get(RULES_TEMP_6_HE_GESAMTPREIS_ALLE).value;
    }

    /**
     * <pre>RULES_TEMP_70_VERLEGUNGSUHRZEIT
     * SQLite key: rules_temp_70_verlegungsuhrzeit
     * [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     * [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten</pre>
     * ATTENTION this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_113_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_124_ENTLASSUNGSUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_176_KLINIK_AUFNAHMEUHRZEIT! this value ('Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten') seems to be also defined under the key RULES_TEMP_185_KLINIK_ENTLASSUNGSUHRZEIT!
     * @return [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten, [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     */
    public static String getRulesTemp70Verlegungsuhrzeit() {
        return get(RULES_TEMP_70_VERLEGUNGSUHRZEIT).value;
    }

    /**
     * <pre>RULES_TEMP_71_ENTGELTE
     * SQLite key: rules_temp_71_entgelte
     * [en] Rechnung: Rechnungsart
     * [de] Rechnung: Rechnungsart</pre>
     * @return [en] Rechnung: Rechnungsart, [de] Rechnung: Rechnungsart
     */
    public static String getRulesTemp71Entgelte() {
        return get(RULES_TEMP_71_ENTGELTE).value;
    }

    /**
     * <pre>RULES_TEMP_72_ENTGELTE
     * SQLite key: rules_temp_72_entgelte
     * [en] Rechnung: Rechnungsdatum
     * [de] Rechnung: Rechnungsdatum</pre>
     * @return [en] Rechnung: Rechnungsdatum, [de] Rechnung: Rechnungsdatum
     */
    public static String getRulesTemp72Entgelte() {
        return get(RULES_TEMP_72_ENTGELTE).value;
    }

    /**
     * <pre>RULES_TEMP_73_ENTGELTE
     * SQLite key: rules_temp_73_entgelte
     * [en] Rechnung: Rechnungsnummer
     * [de] Rechnung: Rechnungsnummer</pre>
     * @return [en] Rechnung: Rechnungsnummer, [de] Rechnung: Rechnungsnummer
     */
    public static String getRulesTemp73Entgelte() {
        return get(RULES_TEMP_73_ENTGELTE).value;
    }

    /**
     * <pre>RULES_TEMP_74_ABSCHLAGSTAGE
     * SQLite key: rules_temp_74_abschlagstage
     * [en] Format: Ganzzahlig (Beispiel: 5)
     * [de] Format: Ganzzahlig (Beispiel: 5)</pre>
     * @return [en] Format: Ganzzahlig (Beispiel: 5), [de] Format: Ganzzahlig (Beispiel: 5)
     */
    public static String getRulesTemp74Abschlagstage() {
        return get(RULES_TEMP_74_ABSCHLAGSTAGE).value;
    }

    /**
     * <pre>RULES_TEMP_75_ADRG
     * SQLite key: rules_temp_75_adrg
     * [en] Format: Alphanumerisch (Beispiele: A11 oder B75)
     * [de] Format: Alphanumerisch (Beispiele: A11 oder B75)</pre>
     * ATTENTION this value ('Format: Alphanumerisch (Beispiele: A11 oder B75)') seems to be also defined under the key RULES_TEMP_159_KLINIK_ADRG!
     * @return [en] Format: Alphanumerisch (Beispiele: A11 oder B75), [de] Format: Alphanumerisch (Beispiele: A11 oder B75)
     */
    public static String getRulesTemp75Adrg() {
        return get(RULES_TEMP_75_ADRG).value;
    }

    /**
     * <pre>RULES_TEMP_76_PFLEGETAGE
     * SQLite key: rules_temp_76_pflegetage
     * [en] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     * [de] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.</pre>
     * ATTENTION this value ('Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_83_PFLEGETAGE!
     * @return [en] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus., [de] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     */
    public static String getRulesTemp76Pflegetage() {
        return get(RULES_TEMP_76_PFLEGETAGE).value;
    }

    /**
     * <pre>RULES_TEMP_77_PFLEGETAGE
     * SQLite key: rules_temp_77_pflegetage
     * [en] Format: Ganzzahlig (Beispiel 2)
     * [de] Format: Ganzzahlig (Beispiel 2)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
     * @return [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     */
    public static String getRulesTemp77Pflegetage() {
        return get(RULES_TEMP_77_PFLEGETAGE).value;
    }

    /**
     * <pre>RULES_TEMP_78_BASISFALLWERT
     * SQLite key: rules_temp_78_basisfallwert
     * [en] Format: Währung (Beispiel 2100,40)
     * [de] Format: Währung (Beispiel 2100,40)</pre>
     * @return [en] Format: Währung (Beispiel 2100,40), [de] Format: Währung (Beispiel 2100,40)
     */
    public static String getRulesTemp78Basisfallwert() {
        return get(RULES_TEMP_78_BASISFALLWERT).value;
    }

    /**
     * <pre>RULES_TEMP_78_PFLEGECWTAG
     * SQLite key: rules_temp_78_pflegecwtag
     * [en] Pflege CW/Tag
     * [de] Pflege CW/Tag</pre>
     * @return [en] Pflege CW/Tag, [de] Pflege CW/Tag
     */
    public static String getRulesTemp78Pflegecwtag() {
        return get(RULES_TEMP_78_PFLEGECWTAG).value;
    }

    /**
     * <pre>RULES_TEMP_79_ABSCHLAGS_CW
     * SQLite key: rules_temp_79_abschlags_cw
     * [en] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)
     * [de] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)</pre>
     * ATTENTION this value ('Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)') seems to be also defined under the key RULES_TEMP_80_ZUSCHLAGS_CW! this value ('Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)') seems to be also defined under the key RULES_TEMP_94_KOSTENGEWICHT_KATALOG!
     * @return [en] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53), [de] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)
     */
    public static String getRulesTemp79AbschlagsCw() {
        return get(RULES_TEMP_79_ABSCHLAGS_CW).value;
    }

    /**
     * <pre>RULES_TEMP_79_PFLEGECWTAG
     * SQLite key: rules_temp_79_pflegecwtag
     * [en] Pflegeerlös Bewertungsrelation/Tag
     * [de] Pflegeerlös Bewertungsrelation/Tag</pre>
     * @return [en] Pflegeerlös Bewertungsrelation/Tag, [de] Pflegeerlös Bewertungsrelation/Tag
     */
    public static String getRulesTemp79Pflegecwtag() {
        return get(RULES_TEMP_79_PFLEGECWTAG).value;
    }

    /**
     * <pre>RULES_TEMP_7_HE_GESAMTPREIS
     * SQLite key: rules_temp_7_he_gesamtpreis
     * [en] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.
     * [de] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.</pre>
     * ATTENTION this value ('Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.') seems to be also defined under the key RULES_TEMP_20_HM_GESAMTPREIS!
     * @return [en] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist., [de] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.
     */
    public static String getRulesTemp7HeGesamtpreis() {
        return get(RULES_TEMP_7_HE_GESAMTPREIS).value;
    }

    /**
     * <pre>RULES_TEMP_80_DRGPFLEGEERLOES
     * SQLite key: rules_temp_80_drgpflegeerloes
     * [en] PflegeErloes(DRG)
     * [de] PflegeErloes(DRG)</pre>
     * @return [en] PflegeErloes(DRG), [de] PflegeErloes(DRG)
     */
    public static String getRulesTemp80Drgpflegeerloes() {
        return get(RULES_TEMP_80_DRGPFLEGEERLOES).value;
    }

    /**
     * <pre>RULES_TEMP_80_ZUSCHLAGS_CW
     * SQLite key: rules_temp_80_zuschlags_cw
     * [en] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)
     * [de] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)</pre>
     * ATTENTION this value ('Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)') seems to be also defined under the key RULES_TEMP_79_ABSCHLAGS_CW! this value ('Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)') seems to be also defined under the key RULES_TEMP_94_KOSTENGEWICHT_KATALOG!
     * @return [en] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53), [de] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)
     */
    public static String getRulesTemp80ZuschlagsCw() {
        return get(RULES_TEMP_80_ZUSCHLAGS_CW).value;
    }

    /**
     * <pre>RULES_TEMP_81_DRG
     * SQLite key: rules_temp_81_drg
     * [en] Format: Alphanumerisch (Beispiele: A11B oder B75A)
     * [de] Format: Alphanumerisch (Beispiele: A11B oder B75A)</pre>
     * ATTENTION this value ('Format: Alphanumerisch (Beispiele: A11B oder B75A)') seems to be also defined under the key RULES_TEMP_160_KLINIK_DRG!
     * @return [en] Format: Alphanumerisch (Beispiele: A11B oder B75A), [de] Format: Alphanumerisch (Beispiele: A11B oder B75A)
     */
    public static String getRulesTemp81Drg() {
        return get(RULES_TEMP_81_DRG).value;
    }

    /**
     * <pre>RULES_TEMP_81_DRGPFLEGEERLOES
     * SQLite key: rules_temp_81_drgpflegeerloes
     * [en] Pflegeerlös eines DRG - Falles ab 2020
     * [de] Pflegeerlös eines DRG - Falles ab 2020</pre>
     * @return [en] Pflegeerlös eines DRG - Falles ab 2020, [de] Pflegeerlös eines DRG - Falles ab 2020
     */
    public static String getRulesTemp81Drgpflegeerloes() {
        return get(RULES_TEMP_81_DRGPFLEGEERLOES).value;
    }

    /**
     * <pre>RULES_TEMP_82_ENTGELT
     * SQLite key: rules_temp_82_entgelt
     * [en] Format: alphanumerisch 8-stellig (Beispiel: 48000001)
     * [de] Format: alphanumerisch 8-stellig (Beispiel: 48000001)</pre>
     * ATTENTION this value ('Format: alphanumerisch 8-stellig (Beispiel: 48000001)') seems to be also defined under the key RULES_TEMP_167_KLINIK_ENTGELTART!
     * @return [en] Format: alphanumerisch 8-stellig (Beispiel: 48000001), [de] Format: alphanumerisch 8-stellig (Beispiel: 48000001)
     */
    public static String getRulesTemp82Entgelt() {
        return get(RULES_TEMP_82_ENTGELT).value;
    }

    /**
     * <pre>RULES_TEMP_82_PFLEGETAGE
     * SQLite key: rules_temp_82_pflegetage
     * [en] Pflegetage (PEPP)
     * [de] Pflegetage (PEPP)</pre>
     * @return [en] Pflegetage (PEPP), [de] Pflegetage (PEPP)
     */
    public static String getRulesTemp82Pflegetage() {
        return get(RULES_TEMP_82_PFLEGETAGE).value;
    }

    /**
     * <pre>RULES_TEMP_83_ENTGELTABRECHNUNGBIS
     * SQLite key: rules_temp_83_entgeltabrechnungbis
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp83Entgeltabrechnungbis() {
        return get(RULES_TEMP_83_ENTGELTABRECHNUNGBIS).value;
    }

    /**
     * <pre>RULES_TEMP_83_PFLEGETAGE
     * SQLite key: rules_temp_83_pflegetage
     * [en] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     * [de] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.</pre>
     * ATTENTION this value ('Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.') seems to be also defined under the key RULES_TEMP_76_PFLEGETAGE!
     * @return [en] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus., [de] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     */
    public static String getRulesTemp83Pflegetage() {
        return get(RULES_TEMP_83_PFLEGETAGE).value;
    }

    /**
     * <pre>RULES_TEMP_84_ENTGELTABRECHNUNGVON
     * SQLite key: rules_temp_84_entgeltabrechnungvon
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTemp84Entgeltabrechnungvon() {
        return get(RULES_TEMP_84_ENTGELTABRECHNUNGVON).value;
    }

    /**
     * <pre>RULES_TEMP_84_PFLEGETAGE
     * SQLite key: rules_temp_84_pflegetage
     * [en] Format: Ganzzahlig (Beispiel 2)
     * [de] Format: Ganzzahlig (Beispiel 2)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_85_ENTGELTANZAHLJEENTGELT!
     * @return [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     */
    public static String getRulesTemp84Pflegetage() {
        return get(RULES_TEMP_84_PFLEGETAGE).value;
    }

    /**
     * <pre>RULES_TEMP_85_ENTGELTANZAHLJEENTGELT
     * SQLite key: rules_temp_85_entgeltanzahljeentgelt
     * [en] Format: Ganzzahlig (Beispiel 2)
     * [de] Format: Ganzzahlig (Beispiel 2)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_104_UNTERE_GRENZVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_134_URLAUB! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_136_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_139_ANZAHLNEBENDIAGNOSEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_140_ANZAHLPROZEDUREN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_163_KLINIK_UGVD! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_166_KLINIK_ENTGELTANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_187_KLINIK_FALLANZAHL! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_192_KLINIK_VERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_194_KLINIK_VWD_STUNDEN! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_77_PFLEGETAGE! this value ('Format: Ganzzahlig (Beispiel 2)') seems to be also defined under the key RULES_TEMP_84_PFLEGETAGE!
     * @return [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     */
    public static String getRulesTemp85Entgeltanzahljeentgelt() {
        return get(RULES_TEMP_85_ENTGELTANZAHLJEENTGELT).value;
    }

    /**
     * <pre>RULES_TEMP_85_PFLEGETAGEDRG
     * SQLite key: rules_temp_85_pflegetagedrg
     * [en] Pflegetage(DRG)
     * [de] Pflegetage(DRG)</pre>
     * @return [en] Pflegetage(DRG), [de] Pflegetage(DRG)
     */
    public static String getRulesTemp85Pflegetagedrg() {
        return get(RULES_TEMP_85_PFLEGETAGEDRG).value;
    }

    /**
     * <pre>RULES_TEMP_86_ENTGELTEINZELBETRAG
     * SQLite key: rules_temp_86_entgelteinzelbetrag
     * [en] Format: Währung (Beispiel: 57.52)
     * [de] Format: Währung (Beispiel: 57.52)</pre>
     * ATTENTION this value ('Format: Währung (Beispiel: 57.52)') seems to be also defined under the key RULES_TEMP_168_KLINIK_ENTGELTBETRAG!
     * @return [en] Format: Währung (Beispiel: 57.52), [de] Format: Währung (Beispiel: 57.52)
     */
    public static String getRulesTemp86Entgelteinzelbetrag() {
        return get(RULES_TEMP_86_ENTGELTEINZELBETRAG).value;
    }

    /**
     * <pre>RULES_TEMP_86_PFLEGETAGEDRG
     * SQLite key: rules_temp_86_pflegetagedrg
     * [en] Pflegetage(DRG) ab 2020
     * [de] Pflegetage(DRG) ab 2020</pre>
     * @return [en] Pflegetage(DRG) ab 2020, [de] Pflegetage(DRG) ab 2020
     */
    public static String getRulesTemp86Pflegetagedrg() {
        return get(RULES_TEMP_86_PFLEGETAGEDRG).value;
    }

    /**
     * <pre>RULES_TEMP_87_ENTGELTSUMMEJEENTGELT
     * SQLite key: rules_temp_87_entgeltsummejeentgelt
     * [en] Format: Währung (Beispiel: 635.60)
     * [de] Format: Währung (Beispiel: 635.60)</pre>
     * @return [en] Format: Währung (Beispiel: 635.60), [de] Format: Währung (Beispiel: 635.60)
     */
    public static String getRulesTemp87Entgeltsummejeentgelt() {
        return get(RULES_TEMP_87_ENTGELTSUMMEJEENTGELT).value;
    }

    /**
     * <pre>RULES_TEMP_88_GROUPERRELEVANTEDIAGNOSE
     * SQLite key: rules_temp_88_grouperrelevantediagnose
     * [en] Diagnose, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Diagnose, Hauptdiagnose, Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     * [de] Diagnose, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Diagnose, Hauptdiagnose, Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.</pre>
     * @return [en] Diagnose, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Diagnose, Hauptdiagnose, Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code., [de] Diagnose, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Diagnose, Hauptdiagnose, Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     */
    public static String getRulesTemp88Grouperrelevantediagnose() {
        return get(RULES_TEMP_88_GROUPERRELEVANTEDIAGNOSE).value;
    }

    /**
     * <pre>RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE
     * SQLite key: rules_temp_89_grouperrelevantediagnose
     * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
     * ATTENTION this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2!
     * @return [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     */
    public static String getRulesTemp89Grouperrelevantediagnose() {
        return get(RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE).value;
    }

    /**
     * <pre>RULES_TEMP_8_HE_GESAMTPREIS
     * SQLite key: rules_temp_8_he_gesamtpreis
     * [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
     * [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)</pre>
     * ATTENTION this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_19_HM_GESAMTPREIS_ALLE! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_21_HM_GESAMTPREIS! this value ('Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)') seems to be also defined under the key RULES_TEMP_6_HE_GESAMTPREIS_ALLE!
     * @return [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
     */
    public static String getRulesTemp8HeGesamtpreis() {
        return get(RULES_TEMP_8_HE_GESAMTPREIS).value;
    }

    /**
     * <pre>RULES_TEMP_90_GROUPERRELEVANTEPROZEDUR
     * SQLite key: rules_temp_90_grouperrelevanteprozedur
     * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)
     * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)</pre>
     * ATTENTION this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)') seems to be also defined under the key RULES_TEMP_148_PROZEDUR! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)') seems to be also defined under the key RULES_TEMP_157_KLINIK_PROZEDUR!
     * @return [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)
     */
    public static String getRulesTemp90Grouperrelevanteprozedur() {
        return get(RULES_TEMP_90_GROUPERRELEVANTEPROZEDUR).value;
    }

    /**
     * <pre>RULES_TEMP_91_KOSTENGEWICHT_EFFEKTIV
     * SQLite key: rules_temp_91_kostengewicht_effektiv
     * [en] Kostengewicht für DRG - Fälle (DRG + Erbringungsart) + Zuschlags_CW oder - Abschlags_CW .
     * [de] Kostengewicht für DRG - Fälle (DRG + Erbringungsart) + Zuschlags_CW oder - Abschlags_CW .</pre>
     * @return [en] Kostengewicht für DRG - Fälle (DRG + Erbringungsart) + Zuschlags_CW oder - Abschlags_CW ., [de] Kostengewicht für DRG - Fälle (DRG + Erbringungsart) + Zuschlags_CW oder - Abschlags_CW .
     */
    public static String getRulesTemp91KostengewichtEffektiv() {
        return get(RULES_TEMP_91_KOSTENGEWICHT_EFFEKTIV).value;
    }

    /**
     * <pre>RULES_TEMP_92_KOSTENGEWICHT_EFFEKTIV
     * SQLite key: rules_temp_92_kostengewicht_effektiv
     * [en] Kostengewicht für PEPP - Fälle: Die Gesamt-Bewertungsrelation, die sich aus der Verweildauer und den einzelnen Vergütungsstufen ergeben.
     * [de] Kostengewicht für PEPP - Fälle: Die Gesamt-Bewertungsrelation, die sich aus der Verweildauer und den einzelnen Vergütungsstufen ergeben.</pre>
     * @return [en] Kostengewicht für PEPP - Fälle: Die Gesamt-Bewertungsrelation, die sich aus der Verweildauer und den einzelnen Vergütungsstufen ergeben., [de] Kostengewicht für PEPP - Fälle: Die Gesamt-Bewertungsrelation, die sich aus der Verweildauer und den einzelnen Vergütungsstufen ergeben.
     */
    public static String getRulesTemp92KostengewichtEffektiv() {
        return get(RULES_TEMP_92_KOSTENGEWICHT_EFFEKTIV).value;
    }

    /**
     * <pre>RULES_TEMP_93_KOSTENGEWICHT_EFFEKTIV
     * SQLite key: rules_temp_93_kostengewicht_effektiv
     * [en] Format: Fließkommazahl (Beispiele: 0.202 oder 2.531)
     * [de] Format: Fließkommazahl (Beispiele: 0.202 oder 2.531)</pre>
     * @return [en] Format: Fließkommazahl (Beispiele: 0.202 oder 2.531), [de] Format: Fließkommazahl (Beispiele: 0.202 oder 2.531)
     */
    public static String getRulesTemp93KostengewichtEffektiv() {
        return get(RULES_TEMP_93_KOSTENGEWICHT_EFFEKTIV).value;
    }

    /**
     * <pre>RULES_TEMP_94_KOSTENGEWICHT_KATALOG
     * SQLite key: rules_temp_94_kostengewicht_katalog
     * [en] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)
     * [de] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)</pre>
     * ATTENTION this value ('Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)') seems to be also defined under the key RULES_TEMP_79_ABSCHLAGS_CW! this value ('Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)') seems to be also defined under the key RULES_TEMP_80_ZUSCHLAGS_CW!
     * @return [en] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53), [de] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)
     */
    public static String getRulesTemp94KostengewichtKatalog() {
        return get(RULES_TEMP_94_KOSTENGEWICHT_KATALOG).value;
    }

    /**
     * <pre>RULES_TEMP_95_MITTLERE_VERWEILDAUER
     * SQLite key: rules_temp_95_mittlere_verweildauer
     * [en] Sie gibt die Liegezeit an, bei der bei Unterschreitung und gleichzeitiger Verlegung aus einem anderen Krankenhaus und/oder in ein anderes Krankenhaus pro Tag ein Abschlag vom Relativgewicht ermittelt werden muss (Ausnahmen laut Fallpauschalenkatalog beachten). Mit dieser Regelung soll berücksichtigt werden, dass bei einer gemeinsamen Behandlung eines Patienten durch zwei oder mehrere Krankenhäuser die einzelnen Erlöse (DRG) gemindert werden müssen.
     * [de] Sie gibt die Liegezeit an, bei der bei Unterschreitung und gleichzeitiger Verlegung aus einem anderen Krankenhaus und/oder in ein anderes Krankenhaus pro Tag ein Abschlag vom Relativgewicht ermittelt werden muss (Ausnahmen laut Fallpauschalenkatalog beachten). Mit dieser Regelung soll berücksichtigt werden, dass bei einer gemeinsamen Behandlung eines Patienten durch zwei oder mehrere Krankenhäuser die einzelnen Erlöse (DRG) gemindert werden müssen.</pre>
     * @return [en] Sie gibt die Liegezeit an, bei der bei Unterschreitung und gleichzeitiger Verlegung aus einem anderen Krankenhaus und/oder in ein anderes Krankenhaus pro Tag ein Abschlag vom Relativgewicht ermittelt werden muss (Ausnahmen laut Fallpauschalenkatalog beachten). Mit dieser Regelung soll berücksichtigt werden, dass bei einer gemeinsamen Behandlung eines Patienten durch zwei oder mehrere Krankenhäuser die einzelnen Erlöse (DRG) gemindert werden müssen., [de] Sie gibt die Liegezeit an, bei der bei Unterschreitung und gleichzeitiger Verlegung aus einem anderen Krankenhaus und/oder in ein anderes Krankenhaus pro Tag ein Abschlag vom Relativgewicht ermittelt werden muss (Ausnahmen laut Fallpauschalenkatalog beachten). Mit dieser Regelung soll berücksichtigt werden, dass bei einer gemeinsamen Behandlung eines Patienten durch zwei oder mehrere Krankenhäuser die einzelnen Erlöse (DRG) gemindert werden müssen.
     */
    public static String getRulesTemp95MittlereVerweildauer() {
        return get(RULES_TEMP_95_MITTLERE_VERWEILDAUER).value;
    }

    /**
     * <pre>RULES_TEMP_96_MITTLERE_VERWEILDAUER
     * SQLite key: rules_temp_96_mittlere_verweildauer
     * [en] Format: Ganzzahlig (Beispiel 5)
     * [de] Format: Ganzzahlig (Beispiel 5)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_105_ZUSCHLAGSTAGE! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_128_INTENSIVVERWEILDAUER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_281_VERSICHERTER_ALTER! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_55_ALTERINTAGEN! this value ('Format: Ganzzahlig (Beispiel 5)') seems to be also defined under the key RULES_TEMP_60_ANZAHLABTEILUNGEN!
     * @return [en] Format: Ganzzahlig (Beispiel 5), [de] Format: Ganzzahlig (Beispiel 5)
     */
    public static String getRulesTemp96MittlereVerweildauer() {
        return get(RULES_TEMP_96_MITTLERE_VERWEILDAUER).value;
    }

    /**
     * <pre>RULES_TEMP_97_OBERE_GRENZVERWEILDAUER
     * SQLite key: rules_temp_97_obere_grenzverweildauer
     * [en] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.
     * [de] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.</pre>
     * ATTENTION this value ('Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.') seems to be also defined under the key RULES_TEMP_161_KLINIK_OGVD!
     * @return [en] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig., [de] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.
     */
    public static String getRulesTemp97ObereGrenzverweildauer() {
        return get(RULES_TEMP_97_OBERE_GRENZVERWEILDAUER).value;
    }

    /**
     * <pre>RULES_TEMP_98_OBERE_GRENZVERWEILDAUER
     * SQLite key: rules_temp_98_obere_grenzverweildauer
     * [en] Format: Ganzzahlig (Beispiel 15)
     * [de] Format: Ganzzahlig (Beispiel 15)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 15)') seems to be also defined under the key RULES_TEMP_162_KLINIK_OGVD!
     * @return [en] Format: Ganzzahlig (Beispiel 15), [de] Format: Ganzzahlig (Beispiel 15)
     */
    public static String getRulesTemp98ObereGrenzverweildauer() {
        return get(RULES_TEMP_98_OBERE_GRENZVERWEILDAUER).value;
    }

    /**
     * <pre>RULES_TEMP_99_PEPP
     * SQLite key: rules_temp_99_pepp
     * [en] Format: Aplhanumerisch (Beispiele P003B, TK04Z)
     * [de] Format: Aplhanumerisch (Beispiele P003B, TK04Z)</pre>
     * ATTENTION this value ('Format: Aplhanumerisch (Beispiele P003B, TK04Z)') seems to be also defined under the key RULES_TEMP_165_KLINIK_PEPP!
     * @return [en] Format: Aplhanumerisch (Beispiele P003B, TK04Z), [de] Format: Aplhanumerisch (Beispiele P003B, TK04Z)
     */
    public static String getRulesTemp99Pepp() {
        return get(RULES_TEMP_99_PEPP).value;
    }

    /**
     * <pre>RULES_TEMP_9_HE_POSITIONSNUMMER
     * SQLite key: rules_temp_9_he_positionsnummer
     * [en] Pharmazentralnummer für Hilfsmittel
     * [de] Pharmazentralnummer für Hilfsmittel</pre>
     * ATTENTION this value ('Pharmazentralnummer für Hilfsmittel') seems to be also defined under the key RULES_TEMP_22_HM_POSITIONSNUMMER!
     * @return [en] Pharmazentralnummer für Hilfsmittel, [de] Pharmazentralnummer für Hilfsmittel
     */
    public static String getRulesTemp9HePositionsnummer() {
        return get(RULES_TEMP_9_HE_POSITIONSNUMMER).value;
    }

    /**
     * <pre>RULES_TXT_ADM_WEEKDAY
     * SQLite key: rules_txt_adm_weekday
     * [en] Aufnahmewochentag
     * [de] Aufnahmewochentag</pre>
     * @return [en] Aufnahmewochentag, [de] Aufnahmewochentag
     */
    public static String getRulesTxtAdmWeekday() {
        return get(RULES_TXT_ADM_WEEKDAY).value;
    }

    /**
     * <pre>RULES_TXT_ADMISSION_TYPE_4_LONG
     * SQLite key: rules_txt_admission_type_4_long
     * [en] V - Verlegung
     * [de] V - Verlegung</pre>
     * @return [en] V - Verlegung, [de] V - Verlegung
     */
    public static String getRulesTxtAdmissionType4Long() {
        return get(RULES_TXT_ADMISSION_TYPE_4_LONG).value;
    }

    /**
     * <pre>RULES_TXT_AGE_IN_YEARS
     * SQLite key: rules_txt_age_in_years
     * [en] Alter in Jahren
     * [de] Alter in Jahren</pre>
     * @return [en] Alter in Jahren, [de] Alter in Jahren
     */
    public static String getRulesTxtAgeInYears() {
        return get(RULES_TXT_AGE_IN_YEARS).value;
    }

    /**
     * <pre>RULES_TXT_CASE_CRITERIA
     * SQLite key: rules_txt_case_criteria
     * [en] Fallkriterien
     * [de] Fallkriterien</pre>
     * @return [en] Fallkriterien, [de] Fallkriterien
     */
    public static String getRulesTxtCaseCriteria() {
        return get(RULES_TXT_CASE_CRITERIA).value;
    }

    /**
     * <pre>RULES_TXT_COMPLAINT_SUGGESTION
     * SQLite key: rules_txt_complaint_suggestion
     * [en] Vorschlag
     * [de] Vorschlag</pre>
     * ATTENTION this value ('Vorschlag') seems to be also defined under the key RULE_FILTER_DIALOG_RULE_SUGGESTION!
     * @return [en] Vorschlag, [de] Vorschlag
     */
    public static String getRulesTxtComplaintSuggestion() {
        return get(RULES_TXT_COMPLAINT_SUGGESTION).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ACCOUCHEMENT_DATE_1_DIS
     * SQLite key: rules_txt_crit_accouchement_date_1_dis
     * [en] Tag der Entbindung1
     * [de] Tag der Entbindung1</pre>
     * @return [en] Tag der Entbindung1, [de] Tag der Entbindung1
     */
    public static String getRulesTxtCritAccouchementDate1Dis() {
        return get(RULES_TXT_CRIT_ACCOUCHEMENT_DATE_1_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ACCOUCHEMENT_DATE_1_TOOLTIP_1
     * SQLite key: rules_txt_crit_accouchement_date_1_tooltip_1
     * [en] Tag der Geburt des Kindes (des ersten Kindes bei Mehrlingen).
     * [de] Tag der Geburt des Kindes (des ersten Kindes bei Mehrlingen).</pre>
     * @return [en] Tag der Geburt des Kindes (des ersten Kindes bei Mehrlingen)., [de] Tag der Geburt des Kindes (des ersten Kindes bei Mehrlingen).
     */
    public static String getRulesTxtCritAccouchementDate1Tooltip1() {
        return get(RULES_TXT_CRIT_ACCOUCHEMENT_DATE_1_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ACCOUCHEMENT_DATE_2_DIS
     * SQLite key: rules_txt_crit_accouchement_date_2_dis
     * [en] Tag der Entbindung2
     * [de] Tag der Entbindung2</pre>
     * @return [en] Tag der Entbindung2, [de] Tag der Entbindung2
     */
    public static String getRulesTxtCritAccouchementDate2Dis() {
        return get(RULES_TXT_CRIT_ACCOUCHEMENT_DATE_2_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ACCOUCHEMENT_DATE_2_TOOLTIP_1
     * SQLite key: rules_txt_crit_accouchement_date_2_tooltip_1
     * [en] Tag der Geburt des letzten Kindes bei Mehrlingsgeburten.
     * [de] Tag der Geburt des letzten Kindes bei Mehrlingsgeburten.</pre>
     * @return [en] Tag der Geburt des letzten Kindes bei Mehrlingsgeburten., [de] Tag der Geburt des letzten Kindes bei Mehrlingsgeburten.
     */
    public static String getRulesTxtCritAccouchementDate2Tooltip1() {
        return get(RULES_TXT_CRIT_ACCOUCHEMENT_DATE_2_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADM_2_TYPE_DIS
     * SQLite key: rules_txt_crit_adm2_type_dis
     * [en] Aufnahmegrund2
     * [de] Aufnahmegrund2</pre>
     * @return [en] Aufnahmegrund2, [de] Aufnahmegrund2
     */
    public static String getRulesTxtCritAdm2TypeDis() {
        return get(RULES_TXT_CRIT_ADM_2_TYPE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADM_CAUSE_DIS
     * SQLite key: rules_txt_crit_adm_cause_dis
     * [en] Aufnahmeanlass
     * [de] Aufnahmeanlass</pre>
     * @return [en] Aufnahmeanlass, [de] Aufnahmeanlass
     */
    public static String getRulesTxtCritAdmCauseDis() {
        return get(RULES_TXT_CRIT_ADM_CAUSE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADM_DATE_FULL
     * SQLite key: rules_txt_crit_adm_date_full
     * [en] Aufnahmedatum_mit_Uhrzeit
     * [de] Aufnahmedatum_mit_Uhrzeit</pre>
     * @return [en] Aufnahmedatum_mit_Uhrzeit, [de] Aufnahmedatum_mit_Uhrzeit
     */
    public static String getRulesTxtCritAdmDateFull() {
        return get(RULES_TXT_CRIT_ADM_DATE_FULL).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADM_DATE_FULL_DIS
     * SQLite key: rules_txt_crit_adm_date_full_dis
     * [en] Aufnahmedatum mit Uhrzeit
     * [de] Aufnahmedatum mit Uhrzeit</pre>
     * @return [en] Aufnahmedatum mit Uhrzeit, [de] Aufnahmedatum mit Uhrzeit
     */
    public static String getRulesTxtCritAdmDateFullDis() {
        return get(RULES_TXT_CRIT_ADM_DATE_FULL_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADM_TYPE_DIS
     * SQLite key: rules_txt_crit_adm_type_dis
     * [en] Aufnahmegrund1
     * [de] Aufnahmegrund1</pre>
     * @return [en] Aufnahmegrund1, [de] Aufnahmegrund1
     */
    public static String getRulesTxtCritAdmTypeDis() {
        return get(RULES_TXT_CRIT_ADM_TYPE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_DATE_TOOLTIP_1
     * SQLite key: rules_txt_crit_admission_date_tooltip_1
     * [en] Aufnahmedatum ist der erste Behandlungstag  im Krankenhaus.
     * [de] Aufnahmedatum ist der erste Behandlungstag  im Krankenhaus.</pre>
     * @return [en] Aufnahmedatum ist der erste Behandlungstag  im Krankenhaus., [de] Aufnahmedatum ist der erste Behandlungstag  im Krankenhaus.
     */
    public static String getRulesTxtCritAdmissionDateTooltip1() {
        return get(RULES_TXT_CRIT_ADMISSION_DATE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_DAY_DIS
     * SQLite key: rules_txt_crit_admission_day_dis
     * [en] Aufnahmetag
     * [de] Aufnahmetag</pre>
     * @return [en] Aufnahmetag, [de] Aufnahmetag
     */
    public static String getRulesTxtCritAdmissionDayDis() {
        return get(RULES_TXT_CRIT_ADMISSION_DAY_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_DAY_TIME_DIS
     * SQLite key: rules_txt_crit_admission_day_time_dis
     * [en] Aufnahmeuhrzeit
     * [de] Aufnahmeuhrzeit</pre>
     * @return [en] Aufnahmeuhrzeit, [de] Aufnahmeuhrzeit
     */
    public static String getRulesTxtCritAdmissionDayTimeDis() {
        return get(RULES_TXT_CRIT_ADMISSION_DAY_TIME_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_DAY_TIME_TOOLTIP_1
     * SQLite key: rules_txt_crit_admission_day_time_tooltip_1
     * [en] Uhrzeit, zu der der Patient am ersten Behandlungstag aufgenommen worden ist.
     * [de] Uhrzeit, zu der der Patient am ersten Behandlungstag aufgenommen worden ist.</pre>
     * @return [en] Uhrzeit, zu der der Patient am ersten Behandlungstag aufgenommen worden ist., [de] Uhrzeit, zu der der Patient am ersten Behandlungstag aufgenommen worden ist.
     */
    public static String getRulesTxtCritAdmissionDayTimeTooltip1() {
        return get(RULES_TXT_CRIT_ADMISSION_DAY_TIME_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_DAY_TOOLTIP_1
     * SQLite key: rules_txt_crit_admission_day_tooltip_1
     * [en] Tag der stationären Aufnahme.
     * [de] Tag der stationären Aufnahme.</pre>
     * @return [en] Tag der stationären Aufnahme., [de] Tag der stationären Aufnahme.
     */
    public static String getRulesTxtCritAdmissionDayTooltip1() {
        return get(RULES_TXT_CRIT_ADMISSION_DAY_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_DIAG_DIS
     * SQLite key: rules_txt_crit_admission_diag_dis
     * [en] Aufnahmediagnose
     * [de] Aufnahmediagnose</pre>
     * @return [en] Aufnahmediagnose, [de] Aufnahmediagnose
     */
    public static String getRulesTxtCritAdmissionDiagDis() {
        return get(RULES_TXT_CRIT_ADMISSION_DIAG_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_DIAG_TOOLTIP_1
     * SQLite key: rules_txt_crit_admission_diag_tooltip_1
     * [en] Die Diagnose, aufgrund derer ein Patient in ein Krankenhaus aufgenommen worden ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
     * [de] Die Diagnose, aufgrund derer ein Patient in ein Krankenhaus aufgenommen worden ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code</pre>
     * @return [en] Die Diagnose, aufgrund derer ein Patient in ein Krankenhaus aufgenommen worden ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code, [de] Die Diagnose, aufgrund derer ein Patient in ein Krankenhaus aufgenommen worden ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
     */
    public static String getRulesTxtCritAdmissionDiagTooltip1() {
        return get(RULES_TXT_CRIT_ADMISSION_DIAG_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_DIAG_TYPE_DIS
     * SQLite key: rules_txt_crit_admission_diag_type_dis
     * [en] Aufnahmediagnose: Typ
     * [de] Aufnahmediagnose: Typ</pre>
     * @return [en] Aufnahmediagnose: Typ, [de] Aufnahmediagnose: Typ
     */
    public static String getRulesTxtCritAdmissionDiagTypeDis() {
        return get(RULES_TXT_CRIT_ADMISSION_DIAG_TYPE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_DOC_DIS
     * SQLite key: rules_txt_crit_admission_doc_dis
     * [en] Einweisender Arzt
     * [de] Einweisender Arzt</pre>
     * @return [en] Einweisender Arzt, [de] Einweisender Arzt
     */
    public static String getRulesTxtCritAdmissionDocDis() {
        return get(RULES_TXT_CRIT_ADMISSION_DOC_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_DOC_TOOLTIP_1
     * SQLite key: rules_txt_crit_admission_doc_tooltip_1
     * [en] Kennzeichnung des einweisenden Arztes. Siehe Institutionskennzeichen IK.
     * [de] Kennzeichnung des einweisenden Arztes. Siehe Institutionskennzeichen IK.</pre>
     * @return [en] Kennzeichnung des einweisenden Arztes. Siehe Institutionskennzeichen IK., [de] Kennzeichnung des einweisenden Arztes. Siehe Institutionskennzeichen IK.
     */
    public static String getRulesTxtCritAdmissionDocTooltip1() {
        return get(RULES_TXT_CRIT_ADMISSION_DOC_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_HOSPITAL_DIS
     * SQLite key: rules_txt_crit_admission_hospital_dis
     * [en] Einweisendes Krankenhaus
     * [de] Einweisendes Krankenhaus</pre>
     * @return [en] Einweisendes Krankenhaus, [de] Einweisendes Krankenhaus
     */
    public static String getRulesTxtCritAdmissionHospitalDis() {
        return get(RULES_TXT_CRIT_ADMISSION_HOSPITAL_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_HOSPITAL_TOOLTIP_1
     * SQLite key: rules_txt_crit_admission_hospital_tooltip_1
     * [en] Kennzeichnung des einweisenden Krankenhauses. Siehe Institutionskennzeichen IK.
     * [de] Kennzeichnung des einweisenden Krankenhauses. Siehe Institutionskennzeichen IK.</pre>
     * @return [en] Kennzeichnung des einweisenden Krankenhauses. Siehe Institutionskennzeichen IK., [de] Kennzeichnung des einweisenden Krankenhauses. Siehe Institutionskennzeichen IK.
     */
    public static String getRulesTxtCritAdmissionHospitalTooltip1() {
        return get(RULES_TXT_CRIT_ADMISSION_HOSPITAL_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_JEAR_DIS
     * SQLite key: rules_txt_crit_admission_jear_dis
     * [en] Aufnahmejahr
     * [de] Aufnahmejahr</pre>
     * @return [en] Aufnahmejahr, [de] Aufnahmejahr
     */
    public static String getRulesTxtCritAdmissionJearDis() {
        return get(RULES_TXT_CRIT_ADMISSION_JEAR_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_JEAR_TOOLTIP_1
     * SQLite key: rules_txt_crit_admission_jear_tooltip_1
     * [en] Jahr, in das der erste Behandlungstag fällt.
     * [de] Jahr, in das der erste Behandlungstag fällt.</pre>
     * @return [en] Jahr, in das der erste Behandlungstag fällt., [de] Jahr, in das der erste Behandlungstag fällt.
     */
    public static String getRulesTxtCritAdmissionJearTooltip1() {
        return get(RULES_TXT_CRIT_ADMISSION_JEAR_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_MONTH_DIS
     * SQLite key: rules_txt_crit_admission_month_dis
     * [en] Aufnahmemonat
     * [de] Aufnahmemonat</pre>
     * @return [en] Aufnahmemonat, [de] Aufnahmemonat
     */
    public static String getRulesTxtCritAdmissionMonthDis() {
        return get(RULES_TXT_CRIT_ADMISSION_MONTH_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADMISSION_MONTH_TOOLTIP_1
     * SQLite key: rules_txt_crit_admission_month_tooltip_1
     * [en] Monat, in den der erste Behandlungstag fällt.
     * [de] Monat, in den der erste Behandlungstag fällt.</pre>
     * @return [en] Monat, in den der erste Behandlungstag fällt., [de] Monat, in den der erste Behandlungstag fällt.
     */
    public static String getRulesTxtCritAdmissionMonthTooltip1() {
        return get(RULES_TXT_CRIT_ADMISSION_MONTH_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ADRG_TOOLTIP_1
     * SQLite key: rules_txt_crit_adrg_tooltip_1
     * [en] Basis - DRG: (Adjacent Diagnosis Related Group) DRG ohne letzte Stelle (für Schweregrad).
     * [de] Basis - DRG: (Adjacent Diagnosis Related Group) DRG ohne letzte Stelle (für Schweregrad).</pre>
     * @return [en] Basis - DRG: (Adjacent Diagnosis Related Group) DRG ohne letzte Stelle (für Schweregrad)., [de] Basis - DRG: (Adjacent Diagnosis Related Group) DRG ohne letzte Stelle (für Schweregrad).
     */
    public static String getRulesTxtCritAdrgTooltip1() {
        return get(RULES_TXT_CRIT_ADRG_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_AGE_DAYS_DIS
     * SQLite key: rules_txt_crit_age_days_dis
     * [en] Alter in Tagen
     * [de] Alter in Tagen</pre>
     * @return [en] Alter in Tagen, [de] Alter in Tagen
     */
    public static String getRulesTxtCritAgeDaysDis() {
        return get(RULES_TXT_CRIT_AGE_DAYS_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_AGE_DAYS_TOOLTIP_1
     * SQLite key: rules_txt_crit_age_days_tooltip_1
     * [en] Das Alter in Tagen (nur für Alter &amp;lt; 1 Jahr)
     * [de] Das Alter in Tagen (nur für Alter &amp;lt; 1 Jahr)</pre>
     * @return [en] Das Alter in Tagen (nur für Alter {@literal &}lt; 1 Jahr), [de] Das Alter in Tagen (nur für Alter {@literal &}lt; 1 Jahr)
     */
    public static String getRulesTxtCritAgeDaysTooltip1() {
        return get(RULES_TXT_CRIT_AGE_DAYS_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_1
     * SQLite key: rules_txt_crit_age_years_tooltip_1
     * [en] Das tatsächliche Alter des Patienten.
     * [de] Das tatsächliche Alter des Patienten.</pre>
     * @return [en] Das tatsächliche Alter des Patienten., [de] Das tatsächliche Alter des Patienten.
     */
    public static String getRulesTxtCritAgeYearsTooltip1() {
        return get(RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_2
     * SQLite key: rules_txt_crit_age_years_tooltip_2
     * [en] Format: Ganzzahlig (Beispiel 50)
     * [de] Format: Ganzzahlig (Beispiel 50)</pre>
     * ATTENTION this value ('Format: Ganzzahlig (Beispiel 50)') seems to be also defined under the key RULES_TEMP_137_VERWEILDAUERINSTUNDEN! this value ('Format: Ganzzahlig (Beispiel 50)') seems to be also defined under the key RULES_TEMP_54_ALTERINJAHREN!
     * @return [en] Format: Ganzzahlig (Beispiel 50), [de] Format: Ganzzahlig (Beispiel 50)
     */
    public static String getRulesTxtCritAgeYearsTooltip2() {
        return get(RULES_TXT_CRIT_AGE_YEARS_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_AUX_DIAG_LOC_DIS
     * SQLite key: rules_txt_crit_aux_diag_loc_dis
     * [en] Nebendiagnose: Lokalisation
     * [de] Nebendiagnose: Lokalisation</pre>
     * @return [en] Nebendiagnose: Lokalisation, [de] Nebendiagnose: Lokalisation
     */
    public static String getRulesTxtCritAuxDiagLocDis() {
        return get(RULES_TXT_CRIT_AUX_DIAG_LOC_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_AUX_DIAG_TYPE_DIS
     * SQLite key: rules_txt_crit_aux_diag_type_dis
     * [en] Nebendiagnose: Typ
     * [de] Nebendiagnose: Typ</pre>
     * @return [en] Nebendiagnose: Typ, [de] Nebendiagnose: Typ
     */
    public static String getRulesTxtCritAuxDiagTypeDis() {
        return get(RULES_TXT_CRIT_AUX_DIAG_TYPE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_BASE_VALUE_DIS
     * SQLite key: rules_txt_crit_base_value_dis
     * [en] Basisfallwert
     * [de] Basisfallwert</pre>
     * @return [en] Basisfallwert, [de] Basisfallwert
     */
    public static String getRulesTxtCritBaseValueDis() {
        return get(RULES_TXT_CRIT_BASE_VALUE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_BASE_VALUE_TOOLTIP_1
     * SQLite key: rules_txt_crit_base_value_tooltip_1
     * [en] (auch: Baserate) der Betrag, der bei der Berechnung der DRG - Entgelte für die Krankenhausbehandlung zugrunde gelegt wird.
     * [de] (auch: Baserate) der Betrag, der bei der Berechnung der DRG - Entgelte für die Krankenhausbehandlung zugrunde gelegt wird.</pre>
     * @return [en] (auch: Baserate) der Betrag, der bei der Berechnung der DRG - Entgelte für die Krankenhausbehandlung zugrunde gelegt wird., [de] (auch: Baserate) der Betrag, der bei der Berechnung der DRG - Entgelte für die Krankenhausbehandlung zugrunde gelegt wird.
     */
    public static String getRulesTxtCritBaseValueTooltip1() {
        return get(RULES_TXT_CRIT_BASE_VALUE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_BIRTHDAY_DIS
     * SQLite key: rules_txt_crit_birthday_dis
     * [en] Geburtsdatum
     * [de] Geburtsdatum</pre>
     * @return [en] Geburtsdatum, [de] Geburtsdatum
     */
    public static String getRulesTxtCritBirthdayDis() {
        return get(RULES_TXT_CRIT_BIRTHDAY_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_BIRTHDAY_TOOLTIP_1
     * SQLite key: rules_txt_crit_birthday_tooltip_1
     * [en] Das Geburtsdatum des Patienten.
     * [de] Das Geburtsdatum des Patienten.</pre>
     * @return [en] Das Geburtsdatum des Patienten., [de] Das Geburtsdatum des Patienten.
     */
    public static String getRulesTxtCritBirthdayTooltip1() {
        return get(RULES_TXT_CRIT_BIRTHDAY_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_BONUS_CW_DIS
     * SQLite key: rules_txt_crit_bonus_cw_dis
     * [en] CW Zuschlag
     * [de] CW Zuschlag</pre>
     * @return [en] CW Zuschlag, [de] CW Zuschlag
     */
    public static String getRulesTxtCritBonusCwDis() {
        return get(RULES_TXT_CRIT_BONUS_CW_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_BONUS_CW_TOOLTIP_1
     * SQLite key: rules_txt_crit_bonus_cw_tooltip_1
     * [en] Ein Überschreiten der Oberen Grenzverweildauer bewirkt einen Zuschlag, bei dem die einer DRG zugeordneten CW-Wert-Zuschläge multipliziert mit den Tagen der Überschreitung dem CW-Basiswert hinzugezählt werden.
     * [de] Ein Überschreiten der Oberen Grenzverweildauer bewirkt einen Zuschlag, bei dem die einer DRG zugeordneten CW-Wert-Zuschläge multipliziert mit den Tagen der Überschreitung dem CW-Basiswert hinzugezählt werden.</pre>
     * @return [en] Ein Überschreiten der Oberen Grenzverweildauer bewirkt einen Zuschlag, bei dem die einer DRG zugeordneten CW-Wert-Zuschläge multipliziert mit den Tagen der Überschreitung dem CW-Basiswert hinzugezählt werden., [de] Ein Überschreiten der Oberen Grenzverweildauer bewirkt einen Zuschlag, bei dem die einer DRG zugeordneten CW-Wert-Zuschläge multipliziert mit den Tagen der Überschreitung dem CW-Basiswert hinzugezählt werden.
     */
    public static String getRulesTxtCritBonusCwTooltip1() {
        return get(RULES_TXT_CRIT_BONUS_CW_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_BONUS_DAYS_DIS
     * SQLite key: rules_txt_crit_bonus_days_dis
     * [en] Zuschlagstage
     * [de] Zuschlagstage</pre>
     * @return [en] Zuschlagstage, [de] Zuschlagstage
     */
    public static String getRulesTxtCritBonusDaysDis() {
        return get(RULES_TXT_CRIT_BONUS_DAYS_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_BONUS_DAYS_TOOLTIP_1
     * SQLite key: rules_txt_crit_bonus_days_tooltip_1
     * [en] Ist-Verweildauer - Obere Grenzverweildauer + 1. Im Fallpauschalenkatalog ist immer der erste Zuschlagstag angegeben (Spalte 9).
     * [de] Ist-Verweildauer - Obere Grenzverweildauer + 1. Im Fallpauschalenkatalog ist immer der erste Zuschlagstag angegeben (Spalte 9).</pre>
     * @return [en] Ist-Verweildauer - Obere Grenzverweildauer + 1. Im Fallpauschalenkatalog ist immer der erste Zuschlagstag angegeben (Spalte 9)., [de] Ist-Verweildauer - Obere Grenzverweildauer + 1. Im Fallpauschalenkatalog ist immer der erste Zuschlagstag angegeben (Spalte 9).
     */
    public static String getRulesTxtCritBonusDaysTooltip1() {
        return get(RULES_TXT_CRIT_BONUS_DAYS_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_BOTTOM_LENGTH_OF_STAY_DIS
     * SQLite key: rules_txt_crit_bottom_length_of_stay_dis
     * [en] untere Grenzverweildauer
     * [de] untere Grenzverweildauer</pre>
     * @return [en] untere Grenzverweildauer, [de] untere Grenzverweildauer
     */
    public static String getRulesTxtCritBottomLengthOfStayDis() {
        return get(RULES_TXT_CRIT_BOTTOM_LENGTH_OF_STAY_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_BOTTOM_LENGTH_OF_STAY_TOOLTIP_1
     * SQLite key: rules_txt_crit_bottom_length_of_stay_tooltip_1
     * [en] Laut DRG - Katalog festgelegte untere Grenzverweildauer für die ermittelte DRG. Bei Unterschreitung der unteren Grenzverweildauer wird (wiederum nach DRG - Katalog) ein Abschlag je Tag vom DRG - Entgelt abgezogen.
     * [de] Laut DRG - Katalog festgelegte untere Grenzverweildauer für die ermittelte DRG. Bei Unterschreitung der unteren Grenzverweildauer wird (wiederum nach DRG - Katalog) ein Abschlag je Tag vom DRG - Entgelt abgezogen.</pre>
     * @return [en] Laut DRG - Katalog festgelegte untere Grenzverweildauer für die ermittelte DRG. Bei Unterschreitung der unteren Grenzverweildauer wird (wiederum nach DRG - Katalog) ein Abschlag je Tag vom DRG - Entgelt abgezogen., [de] Laut DRG - Katalog festgelegte untere Grenzverweildauer für die ermittelte DRG. Bei Unterschreitung der unteren Grenzverweildauer wird (wiederum nach DRG - Katalog) ein Abschlag je Tag vom DRG - Entgelt abgezogen.
     */
    public static String getRulesTxtCritBottomLengthOfStayTooltip1() {
        return get(RULES_TXT_CRIT_BOTTOM_LENGTH_OF_STAY_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_BREATHING_DIS
     * SQLite key: rules_txt_crit_breathing_dis
     * [en] Beatmungsdauer
     * [de] Beatmungsdauer</pre>
     * @return [en] Beatmungsdauer, [de] Beatmungsdauer
     */
    public static String getRulesTxtCritBreathingDis() {
        return get(RULES_TXT_CRIT_BREATHING_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_BREATHING_TOOLTIP_1
     * SQLite key: rules_txt_crit_breathing_tooltip_1
     * [en] Summe der Stunden, in denen der Patient künstlich beatmet worden ist.
     * [de] Summe der Stunden, in denen der Patient künstlich beatmet worden ist.</pre>
     * @return [en] Summe der Stunden, in denen der Patient künstlich beatmet worden ist., [de] Summe der Stunden, in denen der Patient künstlich beatmet worden ist.
     */
    public static String getRulesTxtCritBreathingTooltip1() {
        return get(RULES_TXT_CRIT_BREATHING_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CARE_DAYS_DIS
     * SQLite key: rules_txt_crit_care_days_dis
     * [en] Anzahl der Pflegetagen
     * [de] Anzahl der Pflegetagen</pre>
     * @return [en] Anzahl der Pflegetagen, [de] Anzahl der Pflegetagen
     */
    public static String getRulesTxtCritCareDaysDis() {
        return get(RULES_TXT_CRIT_CARE_DAYS_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CARE_STATE_DIS
     * SQLite key: rules_txt_crit_care_state_dis
     * [en] Pflegestatus
     * [de] Pflegestatus</pre>
     * @return [en] Pflegestatus, [de] Pflegestatus
     */
    public static String getRulesTxtCritCareStateDis() {
        return get(RULES_TXT_CRIT_CARE_STATE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2
     * SQLite key: rules_txt_crit_case_auxdiagnosis_tooltip_2
     * [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     * [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)</pre>
     * ATTENTION this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_141_AUFNAHMEDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_142_DIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_144_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_146_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_150_SEKDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_151_SEKDIAGNOSEPRIM! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_153_KLINIK_HAUPTDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_155_KLINIK_NEBENDIAGNOSE! this value ('Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)') seems to be also defined under the key RULES_TEMP_89_GROUPERRELEVANTEDIAGNOSE!
     * @return [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     */
    public static String getRulesTxtCritCaseAuxdiagnosisTooltip2() {
        return get(RULES_TXT_CRIT_CASE_AUXDIAGNOSIS_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CASE_COST
     * SQLite key: rules_txt_crit_case_cost
     * [en] Fallkosten
     * [de] Fallkosten</pre>
     * @return [en] Fallkosten, [de] Fallkosten
     */
    public static String getRulesTxtCritCaseCost() {
        return get(RULES_TXT_CRIT_CASE_COST).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CASE_NUMERIC_1_DIS
     * SQLite key: rules_txt_crit_case_numeric1_dis
     * [en] Fall.Numeric01
     * [de] Fall.Numeric01</pre>
     * @return [en] Fall.Numeric01, [de] Fall.Numeric01
     */
    public static String getRulesTxtCritCaseNumeric1Dis() {
        return get(RULES_TXT_CRIT_CASE_NUMERIC_1_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CASE_NUMERIC_2_DIS
     * SQLite key: rules_txt_crit_case_numeric2_dis
     * [en] Fall.Numeric02
     * [de] Fall.Numeric02</pre>
     * @return [en] Fall.Numeric02, [de] Fall.Numeric02
     */
    public static String getRulesTxtCritCaseNumeric2Dis() {
        return get(RULES_TXT_CRIT_CASE_NUMERIC_2_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CASE_NUMERIC_3_DIS
     * SQLite key: rules_txt_crit_case_numeric3_dis
     * [en] Fall.Numeric03
     * [de] Fall.Numeric03</pre>
     * @return [en] Fall.Numeric03, [de] Fall.Numeric03
     */
    public static String getRulesTxtCritCaseNumeric3Dis() {
        return get(RULES_TXT_CRIT_CASE_NUMERIC_3_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CASE_NUMERIC_4_DIS
     * SQLite key: rules_txt_crit_case_numeric4_dis
     * [en] Fall.Numeric04
     * [de] Fall.Numeric04</pre>
     * @return [en] Fall.Numeric04, [de] Fall.Numeric04
     */
    public static String getRulesTxtCritCaseNumeric4Dis() {
        return get(RULES_TXT_CRIT_CASE_NUMERIC_4_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CASE_NUMERIC_5_DIS
     * SQLite key: rules_txt_crit_case_numeric5_dis
     * [en] Fall.Numeric05
     * [de] Fall.Numeric05</pre>
     * @return [en] Fall.Numeric05, [de] Fall.Numeric05
     */
    public static String getRulesTxtCritCaseNumeric5Dis() {
        return get(RULES_TXT_CRIT_CASE_NUMERIC_5_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CASE_NUMERIC_5_TOOLTIP
     * SQLite key: rules_txt_crit_case_numeric5_tooltip
     * [en] Optional herstellbares numerisches Kriterium
     * [de] Optional herstellbares numerisches Kriterium</pre>
     * @return [en] Optional herstellbares numerisches Kriterium, [de] Optional herstellbares numerisches Kriterium
     */
    public static String getRulesTxtCritCaseNumeric5Tooltip() {
        return get(RULES_TXT_CRIT_CASE_NUMERIC_5_TOOLTIP).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CASE_STR_1_DIS
     * SQLite key: rules_txt_crit_case_str1_dis
     * [en] Fall.String01
     * [de] Fall.String01</pre>
     * @return [en] Fall.String01, [de] Fall.String01
     */
    public static String getRulesTxtCritCaseStr1Dis() {
        return get(RULES_TXT_CRIT_CASE_STR_1_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CASE_STR_2_DIS
     * SQLite key: rules_txt_crit_case_str2_dis
     * [en] Fall.String02
     * [de] Fall.String02</pre>
     * @return [en] Fall.String02, [de] Fall.String02
     */
    public static String getRulesTxtCritCaseStr2Dis() {
        return get(RULES_TXT_CRIT_CASE_STR_2_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CASE_STR_3_DIS
     * SQLite key: rules_txt_crit_case_str3_dis
     * [en] Fall.String03
     * [de] Fall.String03</pre>
     * @return [en] Fall.String03, [de] Fall.String03
     */
    public static String getRulesTxtCritCaseStr3Dis() {
        return get(RULES_TXT_CRIT_CASE_STR_3_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CASE_STR_4_DIS
     * SQLite key: rules_txt_crit_case_str4_dis
     * [en] Fall.String04
     * [de] Fall.String04</pre>
     * @return [en] Fall.String04, [de] Fall.String04
     */
    public static String getRulesTxtCritCaseStr4Dis() {
        return get(RULES_TXT_CRIT_CASE_STR_4_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CASE_STR_4_TOOLTIP
     * SQLite key: rules_txt_crit_case_str4_tooltip
     * [en] Optional herstellbares alphanumerisches Kriterium
     * [de] Optional herstellbares alphanumerisches Kriterium</pre>
     * @return [en] Optional herstellbares alphanumerisches Kriterium, [de] Optional herstellbares alphanumerisches Kriterium
     */
    public static String getRulesTxtCritCaseStr4Tooltip() {
        return get(RULES_TXT_CRIT_CASE_STR_4_TOOLTIP).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CASE_STR_5_DIS
     * SQLite key: rules_txt_crit_case_str5_dis
     * [en] Fall.String05
     * [de] Fall.String05</pre>
     * @return [en] Fall.String05, [de] Fall.String05
     */
    public static String getRulesTxtCritCaseStr5Dis() {
        return get(RULES_TXT_CRIT_CASE_STR_5_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CITY_DIS
     * SQLite key: rules_txt_crit_city_dis
     * [en] Wohnort
     * [de] Wohnort</pre>
     * @return [en] Wohnort, [de] Wohnort
     */
    public static String getRulesTxtCritCityDis() {
        return get(RULES_TXT_CRIT_CITY_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CITY_TOOLTIP_1
     * SQLite key: rules_txt_crit_city_tooltip_1
     * [en] Name des Wohnortes des Patienten.
     * [de] Name des Wohnortes des Patienten.</pre>
     * @return [en] Name des Wohnortes des Patienten., [de] Name des Wohnortes des Patienten.
     */
    public static String getRulesTxtCritCityTooltip1() {
        return get(RULES_TXT_CRIT_CITY_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_ADM_DATE_DIS
     * SQLite key: rules_txt_crit_clinic_adm_date_dis
     * [en] Klinik: Aufnahmedatum
     * [de] Klinik: Aufnahmedatum</pre>
     * @return [en] Klinik: Aufnahmedatum, [de] Klinik: Aufnahmedatum
     */
    public static String getRulesTxtCritClinicAdmDateDis() {
        return get(RULES_TXT_CRIT_CLINIC_ADM_DATE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_ADM_DATE_FULL
     * SQLite key: rules_txt_crit_clinic_adm_date_full
     * [en] Klinik_Aufnahmedatum_mit_Uhrzeit
     * [de] Klinik_Aufnahmedatum_mit_Uhrzeit</pre>
     * @return [en] Klinik_Aufnahmedatum_mit_Uhrzeit, [de] Klinik_Aufnahmedatum_mit_Uhrzeit
     */
    public static String getRulesTxtCritClinicAdmDateFull() {
        return get(RULES_TXT_CRIT_CLINIC_ADM_DATE_FULL).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_ADM_DATE_FULL_DIS
     * SQLite key: rules_txt_crit_clinic_adm_date_full_dis
     * [en] Klinik: Aufnahmedatum mit Uhrzeit
     * [de] Klinik: Aufnahmedatum mit Uhrzeit</pre>
     * @return [en] Klinik: Aufnahmedatum mit Uhrzeit, [de] Klinik: Aufnahmedatum mit Uhrzeit
     */
    public static String getRulesTxtCritClinicAdmDateFullDis() {
        return get(RULES_TXT_CRIT_CLINIC_ADM_DATE_FULL_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_ADM_REASON_DIS
     * SQLite key: rules_txt_crit_clinic_adm_reason_dis
     * [en] Klinik: Aufnahmegrund
     * [de] Klinik: Aufnahmegrund</pre>
     * @return [en] Klinik: Aufnahmegrund, [de] Klinik: Aufnahmegrund
     */
    public static String getRulesTxtCritClinicAdmReasonDis() {
        return get(RULES_TXT_CRIT_CLINIC_ADM_REASON_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_ADM_TIME_DIS
     * SQLite key: rules_txt_crit_clinic_adm_time_dis
     * [en] Klinik: Aufnahmeuhrzeit
     * [de] Klinik: Aufnahmeuhrzeit</pre>
     * @return [en] Klinik: Aufnahmeuhrzeit, [de] Klinik: Aufnahmeuhrzeit
     */
    public static String getRulesTxtCritClinicAdmTimeDis() {
        return get(RULES_TXT_CRIT_CLINIC_ADM_TIME_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_ADRG_DIS
     * SQLite key: rules_txt_crit_clinic_adrg_dis
     * [en] Klinik: ADRG
     * [de] Klinik: ADRG</pre>
     * @return [en] Klinik: ADRG, [de] Klinik: ADRG
     */
    public static String getRulesTxtCritClinicAdrgDis() {
        return get(RULES_TXT_CRIT_CLINIC_ADRG_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_AUX_DIAG_DIS
     * SQLite key: rules_txt_crit_clinic_aux_diag_dis
     * [en] Klinik: Nebendiagnose
     * [de] Klinik: Nebendiagnose</pre>
     * @return [en] Klinik: Nebendiagnose, [de] Klinik: Nebendiagnose
     */
    public static String getRulesTxtCritClinicAuxDiagDis() {
        return get(RULES_TXT_CRIT_CLINIC_AUX_DIAG_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_BREATHING_DIS
     * SQLite key: rules_txt_crit_clinic_breathing_dis
     * [en] Klinik: Beatmungsstunden
     * [de] Klinik: Beatmungsstunden</pre>
     * @return [en] Klinik: Beatmungsstunden, [de] Klinik: Beatmungsstunden
     */
    public static String getRulesTxtCritClinicBreathingDis() {
        return get(RULES_TXT_CRIT_CLINIC_BREATHING_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_CASE_COST
     * SQLite key: rules_txt_crit_clinic_case_cost
     * [en] Klinik: Fallkosten
     * [de] Klinik: Fallkosten</pre>
     * @return [en] Klinik: Fallkosten, [de] Klinik: Fallkosten
     */
    public static String getRulesTxtCritClinicCaseCost() {
        return get(RULES_TXT_CRIT_CLINIC_CASE_COST).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_CASE_DRG_TOOLTIP_1
     * SQLite key: rules_txt_crit_clinic_case_drg_tooltip_1
     * [en] Klinische Daten: Fallpauschale.
     * [de] Klinische Daten: Fallpauschale.</pre>
     * @return [en] Klinische Daten: Fallpauschale., [de] Klinische Daten: Fallpauschale.
     */
    public static String getRulesTxtCritClinicCaseDrgTooltip1() {
        return get(RULES_TXT_CRIT_CLINIC_CASE_DRG_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_CASE_NUMBER_DIS
     * SQLite key: rules_txt_crit_clinic_case_number_dis
     * [en] Klinik: Fallanzahl
     * [de] Klinik: Fallanzahl</pre>
     * @return [en] Klinik: Fallanzahl, [de] Klinik: Fallanzahl
     */
    public static String getRulesTxtCritClinicCaseNumberDis() {
        return get(RULES_TXT_CRIT_CLINIC_CASE_NUMBER_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_DIS_DATE_FULL
     * SQLite key: rules_txt_crit_clinic_dis_date_full
     * [en] Klinik_Entlassungsdatum_mit_Uhrzeit
     * [de] Klinik_Entlassungsdatum_mit_Uhrzeit</pre>
     * @return [en] Klinik_Entlassungsdatum_mit_Uhrzeit, [de] Klinik_Entlassungsdatum_mit_Uhrzeit
     */
    public static String getRulesTxtCritClinicDisDateFull() {
        return get(RULES_TXT_CRIT_CLINIC_DIS_DATE_FULL).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_DIS_DATE_FULL_DIS
     * SQLite key: rules_txt_crit_clinic_dis_date_full_dis
     * [en] Klinik: Entlassungsdatum mit Uhrzeit
     * [de] Klinik: Entlassungsdatum mit Uhrzeit</pre>
     * @return [en] Klinik: Entlassungsdatum mit Uhrzeit, [de] Klinik: Entlassungsdatum mit Uhrzeit
     */
    public static String getRulesTxtCritClinicDisDateFullDis() {
        return get(RULES_TXT_CRIT_CLINIC_DIS_DATE_FULL_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_DIS_REASON_DIS
     * SQLite key: rules_txt_crit_clinic_dis_reason_dis
     * [en] Klinik: Entlassungsgrund
     * [de] Klinik: Entlassungsgrund</pre>
     * @return [en] Klinik: Entlassungsgrund, [de] Klinik: Entlassungsgrund
     */
    public static String getRulesTxtCritClinicDisReasonDis() {
        return get(RULES_TXT_CRIT_CLINIC_DIS_REASON_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_DISCH_DATE_DIS
     * SQLite key: rules_txt_crit_clinic_disch_date_dis
     * [en] Klinik: Entlassungsdatum
     * [de] Klinik: Entlassungsdatum</pre>
     * @return [en] Klinik: Entlassungsdatum, [de] Klinik: Entlassungsdatum
     */
    public static String getRulesTxtCritClinicDischDateDis() {
        return get(RULES_TXT_CRIT_CLINIC_DISCH_DATE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_DISCH_TIME_DIS
     * SQLite key: rules_txt_crit_clinic_disch_time_dis
     * [en] Klinik: Entlassungsuhrzeit
     * [de] Klinik: Entlassungsuhrzeit</pre>
     * @return [en] Klinik: Entlassungsuhrzeit, [de] Klinik: Entlassungsuhrzeit
     */
    public static String getRulesTxtCritClinicDischTimeDis() {
        return get(RULES_TXT_CRIT_CLINIC_DISCH_TIME_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_DRG_DIS
     * SQLite key: rules_txt_crit_clinic_drg_dis
     * [en] Klinik: DRG
     * [de] Klinik: DRG</pre>
     * @return [en] Klinik: DRG, [de] Klinik: DRG
     */
    public static String getRulesTxtCritClinicDrgDis() {
        return get(RULES_TXT_CRIT_CLINIC_DRG_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_DRG_PARTITION_DIS
     * SQLite key: rules_txt_crit_clinic_drg_partition_dis
     * [en] Klinik: DRG Partition
     * [de] Klinik: DRG Partition</pre>
     * @return [en] Klinik: DRG Partition, [de] Klinik: DRG Partition
     */
    public static String getRulesTxtCritClinicDrgPartitionDis() {
        return get(RULES_TXT_CRIT_CLINIC_DRG_PARTITION_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_FEE_COUNT_DIS
     * SQLite key: rules_txt_crit_clinic_fee_count_dis
     * [en] Klinik: Anzahl Entgelte
     * [de] Klinik: Anzahl Entgelte</pre>
     * @return [en] Klinik: Anzahl Entgelte, [de] Klinik: Anzahl Entgelte
     */
    public static String getRulesTxtCritClinicFeeCountDis() {
        return get(RULES_TXT_CRIT_CLINIC_FEE_COUNT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_FEE_TYPE_DIS
     * SQLite key: rules_txt_crit_clinic_fee_type_dis
     * [en] Klinik: Entgeltart
     * [de] Klinik: Entgeltart</pre>
     * @return [en] Klinik: Entgeltart, [de] Klinik: Entgeltart
     */
    public static String getRulesTxtCritClinicFeeTypeDis() {
        return get(RULES_TXT_CRIT_CLINIC_FEE_TYPE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_FEE_VALUE_DIS
     * SQLite key: rules_txt_crit_clinic_fee_value_dis
     * [en] Klinik: Entgeltbetrag
     * [de] Klinik: Entgeltbetrag</pre>
     * @return [en] Klinik: Entgeltbetrag, [de] Klinik: Entgeltbetrag
     */
    public static String getRulesTxtCritClinicFeeValueDis() {
        return get(RULES_TXT_CRIT_CLINIC_FEE_VALUE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_FEEGROUP
     * SQLite key: rules_txt_crit_clinic_feegroup
     * [en] Klinik: Entgeltbereich
     * [de] Klinik: Entgeltbereich</pre>
     * @return [en] Klinik: Entgeltbereich, [de] Klinik: Entgeltbereich
     */
    public static String getRulesTxtCritClinicFeegroup() {
        return get(RULES_TXT_CRIT_CLINIC_FEEGROUP).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_IKZ_DIS
     * SQLite key: rules_txt_crit_clinic_ikz_dis
     * [en] Klinik: IKZ
     * [de] Klinik: IKZ</pre>
     * @return [en] Klinik: IKZ, [de] Klinik: IKZ
     */
    public static String getRulesTxtCritClinicIkzDis() {
        return get(RULES_TXT_CRIT_CLINIC_IKZ_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_MAIN_DIAG_DIS
     * SQLite key: rules_txt_crit_clinic_main_diag_dis
     * [en] Klinik: Hauptdiagnose
     * [de] Klinik: Hauptdiagnose</pre>
     * @return [en] Klinik: Hauptdiagnose, [de] Klinik: Hauptdiagnose
     */
    public static String getRulesTxtCritClinicMainDiagDis() {
        return get(RULES_TXT_CRIT_CLINIC_MAIN_DIAG_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_OGVD
     * SQLite key: rules_txt_crit_clinic_ogvd
     * [en] Klinik: OGVD
     * [de] Klinik: OGVD</pre>
     * @return [en] Klinik: OGVD, [de] Klinik: OGVD
     */
    public static String getRulesTxtCritClinicOgvd() {
        return get(RULES_TXT_CRIT_CLINIC_OGVD).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_PEPP_DIS
     * SQLite key: rules_txt_crit_clinic_pepp_dis
     * [en] Klinik: PEPP
     * [de] Klinik: PEPP</pre>
     * @return [en] Klinik: PEPP, [de] Klinik: PEPP
     */
    public static String getRulesTxtCritClinicPeppDis() {
        return get(RULES_TXT_CRIT_CLINIC_PEPP_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_PROCEDURE_DIS
     * SQLite key: rules_txt_crit_clinic_procedure_dis
     * [en] Klinik: Prozedur
     * [de] Klinik: Prozedur</pre>
     * @return [en] Klinik: Prozedur, [de] Klinik: Prozedur
     */
    public static String getRulesTxtCritClinicProcedureDis() {
        return get(RULES_TXT_CRIT_CLINIC_PROCEDURE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_SK_DIS
     * SQLite key: rules_txt_crit_clinic_sk_dis
     * [en] Klinik: SK
     * [de] Klinik: SK</pre>
     * @return [en] Klinik: SK, [de] Klinik: SK
     */
    public static String getRulesTxtCritClinicSkDis() {
        return get(RULES_TXT_CRIT_CLINIC_SK_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_UGVD
     * SQLite key: rules_txt_crit_clinic_ugvd
     * [en] Klinik: uGVD
     * [de] Klinik: uGVD</pre>
     * @return [en] Klinik: uGVD, [de] Klinik: uGVD
     */
    public static String getRulesTxtCritClinicUgvd() {
        return get(RULES_TXT_CRIT_CLINIC_UGVD).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_VWD_DIS
     * SQLite key: rules_txt_crit_clinic_vwd_dis
     * [en] Klinik: Verweildauer
     * [de] Klinik: Verweildauer</pre>
     * @return [en] Klinik: Verweildauer, [de] Klinik: Verweildauer
     */
    public static String getRulesTxtCritClinicVwdDis() {
        return get(RULES_TXT_CRIT_CLINIC_VWD_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CLINIC_VWD_IN_HOURS
     * SQLite key: rules_txt_crit_clinic_vwd_in_hours
     * [en] Klinik: Vwd in Stunden
     * [de] Klinik: Vwd in Stunden</pre>
     * @return [en] Klinik: Vwd in Stunden, [de] Klinik: Vwd in Stunden
     */
    public static String getRulesTxtCritClinicVwdInHours() {
        return get(RULES_TXT_CRIT_CLINIC_VWD_IN_HOURS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_COMBAT_DEPARTMENT_DIS
     * SQLite key: rules_txt_crit_combat_department_dis
     * [en] behandelnde Fachabteilung
     * [de] behandelnde Fachabteilung</pre>
     * @return [en] behandelnde Fachabteilung, [de] behandelnde Fachabteilung
     */
    public static String getRulesTxtCritCombatDepartmentDis() {
        return get(RULES_TXT_CRIT_COMBAT_DEPARTMENT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_COMBAT_DEPARTMENT_TOOLTIP_1
     * SQLite key: rules_txt_crit_combat_department_tooltip_1
     * [en] Kodierung der behandelnden Fachabteilung nach §301(Siehe Anlage 1)
     * [de] Kodierung der behandelnden Fachabteilung nach §301(Siehe Anlage 1)</pre>
     * @return [en] Kodierung der behandelnden Fachabteilung nach §301(Siehe Anlage 1), [de] Kodierung der behandelnden Fachabteilung nach §301(Siehe Anlage 1)
     */
    public static String getRulesTxtCritCombatDepartmentTooltip1() {
        return get(RULES_TXT_CRIT_COMBAT_DEPARTMENT_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CW_CATALOG_DIS
     * SQLite key: rules_txt_crit_cw_catalog_dis
     * [en] Kostengewicht Katalog
     * [de] Kostengewicht Katalog</pre>
     * @return [en] Kostengewicht Katalog, [de] Kostengewicht Katalog
     */
    public static String getRulesTxtCritCwCatalogDis() {
        return get(RULES_TXT_CRIT_CW_CATALOG_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CW_CATALOG_TOOLTIP_1
     * SQLite key: rules_txt_crit_cw_catalog_tooltip_1
     * [en] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert). Kostengewicht nach DRG - Katalog
     * [de] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert). Kostengewicht nach DRG - Katalog</pre>
     * @return [en] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert). Kostengewicht nach DRG - Katalog, [de] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert). Kostengewicht nach DRG - Katalog
     */
    public static String getRulesTxtCritCwCatalogTooltip1() {
        return get(RULES_TXT_CRIT_CW_CATALOG_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CW_EFFECTIV_DIS
     * SQLite key: rules_txt_crit_cw_effectiv_dis
     * [en] Kostengewicht effektiv
     * [de] Kostengewicht effektiv</pre>
     * @return [en] Kostengewicht effektiv, [de] Kostengewicht effektiv
     */
    public static String getRulesTxtCritCwEffectivDis() {
        return get(RULES_TXT_CRIT_CW_EFFECTIV_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_CW_EFFECTIV_TOOLTIP_1
     * SQLite key: rules_txt_crit_cw_effectiv_tooltip_1
     * [en] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert)
     * [de] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert)</pre>
     * @return [en] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert), [de] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert)
     */
    public static String getRulesTxtCritCwEffectivTooltip1() {
        return get(RULES_TXT_CRIT_CW_EFFECTIV_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_DEPARTMENT_DIS
     * SQLite key: rules_txt_crit_department_dis
     * [en] Fachabteilungsbewegung
     * [de] Fachabteilungsbewegung</pre>
     * @return [en] Fachabteilungsbewegung, [de] Fachabteilungsbewegung
     */
    public static String getRulesTxtCritDepartmentDis() {
        return get(RULES_TXT_CRIT_DEPARTMENT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_DEPARTMENT_TOOLTIP_1
     * SQLite key: rules_txt_crit_department_tooltip_1
     * [en] Die Fachabteilungen, in denen der Patient behandelt worden ist. z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
     * [de] Die Fachabteilungen, in denen der Patient behandelt worden ist. z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.</pre>
     * @return [en] Die Fachabteilungen, in denen der Patient behandelt worden ist. z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl., [de] Die Fachabteilungen, in denen der Patient behandelt worden ist. z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
     */
    public static String getRulesTxtCritDepartmentTooltip1() {
        return get(RULES_TXT_CRIT_DEPARTMENT_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_DIAG_LOC_DIS
     * SQLite key: rules_txt_crit_diag_loc_dis
     * [en] Diagnose: Lokalisation
     * [de] Diagnose: Lokalisation</pre>
     * @return [en] Diagnose: Lokalisation, [de] Diagnose: Lokalisation
     */
    public static String getRulesTxtCritDiagLocDis() {
        return get(RULES_TXT_CRIT_DIAG_LOC_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_DIAG_TOOLTIP_1
     * SQLite key: rules_txt_crit_diag_tooltip_1
     * [en] Siehe Hauptdiagnose, Nebendiagnose. Eine Diagnose beinhaltet keine weitere Unterteilung, insofern ein Oberbegriff. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     * [de] Siehe Hauptdiagnose, Nebendiagnose. Eine Diagnose beinhaltet keine weitere Unterteilung, insofern ein Oberbegriff. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.</pre>
     * @return [en] Siehe Hauptdiagnose, Nebendiagnose. Eine Diagnose beinhaltet keine weitere Unterteilung, insofern ein Oberbegriff. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code., [de] Siehe Hauptdiagnose, Nebendiagnose. Eine Diagnose beinhaltet keine weitere Unterteilung, insofern ein Oberbegriff. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     */
    public static String getRulesTxtCritDiagTooltip1() {
        return get(RULES_TXT_CRIT_DIAG_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_DIAG_TYPE_DIS
     * SQLite key: rules_txt_crit_diag_type_dis
     * [en] Diagnose: Typ
     * [de] Diagnose: Typ</pre>
     * @return [en] Diagnose: Typ, [de] Diagnose: Typ
     */
    public static String getRulesTxtCritDiagTypeDis() {
        return get(RULES_TXT_CRIT_DIAG_TYPE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_DIAGNOSE_GROUPED_DIS
     * SQLite key: rules_txt_crit_diagnose_grouped_dis
     * [en] Grouperrelevante Diagnose
     * [de] Grouperrelevante Diagnose</pre>
     * @return [en] Grouperrelevante Diagnose, [de] Grouperrelevante Diagnose
     */
    public static String getRulesTxtCritDiagnoseGroupedDis() {
        return get(RULES_TXT_CRIT_DIAGNOSE_GROUPED_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_DIS_TYPE_3_DIS
     * SQLite key: rules_txt_crit_dis_type3_dis
     * [en] Entlassungsgrund3
     * [de] Entlassungsgrund3</pre>
     * @return [en] Entlassungsgrund3, [de] Entlassungsgrund3
     */
    public static String getRulesTxtCritDisType3Dis() {
        return get(RULES_TXT_CRIT_DIS_TYPE_3_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_DIS_TYPE_DIS
     * SQLite key: rules_txt_crit_dis_type_dis
     * [en] Entlassungsgrund12
     * [de] Entlassungsgrund12</pre>
     * @return [en] Entlassungsgrund12, [de] Entlassungsgrund12
     */
    public static String getRulesTxtCritDisTypeDis() {
        return get(RULES_TXT_CRIT_DIS_TYPE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_DISCHARGE_DATE_FULL
     * SQLite key: rules_txt_crit_discharge_date_full
     * [en] Entlassungsdatum_mit_Uhrzeit
     * [de] Entlassungsdatum_mit_Uhrzeit</pre>
     * @return [en] Entlassungsdatum_mit_Uhrzeit, [de] Entlassungsdatum_mit_Uhrzeit
     */
    public static String getRulesTxtCritDischargeDateFull() {
        return get(RULES_TXT_CRIT_DISCHARGE_DATE_FULL).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_DISCHARGE_DATE_FULL_DIS
     * SQLite key: rules_txt_crit_discharge_date_full_dis
     * [en] Entlassungsdatum mit Uhrzeit
     * [de] Entlassungsdatum mit Uhrzeit</pre>
     * @return [en] Entlassungsdatum mit Uhrzeit, [de] Entlassungsdatum mit Uhrzeit
     */
    public static String getRulesTxtCritDischargeDateFullDis() {
        return get(RULES_TXT_CRIT_DISCHARGE_DATE_FULL_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_DRG_TOOLTIP_1
     * SQLite key: rules_txt_crit_drg_tooltip_1
     * [en] Fallpauschale, diagnosebezogene Fallgruppe.
     * [de] Fallpauschale, diagnosebezogene Fallgruppe.</pre>
     * @return [en] Fallpauschale, diagnosebezogene Fallgruppe., [de] Fallpauschale, diagnosebezogene Fallgruppe.
     */
    public static String getRulesTxtCritDrgTooltip1() {
        return get(RULES_TXT_CRIT_DRG_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_DRGPARTITION_DIS
     * SQLite key: rules_txt_crit_drgpartition_dis
     * [en] DRGPartition
     * [de] DRGPartition</pre>
     * @return [en] DRGPartition, [de] DRGPartition
     */
    public static String getRulesTxtCritDrgpartitionDis() {
        return get(RULES_TXT_CRIT_DRGPARTITION_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ENTGELTABRECHNUNG_BIS_DIS
     * SQLite key: rules_txt_crit_entgeltabrechnung_bis_dis
     * [en] Entgeltabrechnung bis
     * [de] Entgeltabrechnung bis</pre>
     * @return [en] Entgeltabrechnung bis, [de] Entgeltabrechnung bis
     */
    public static String getRulesTxtCritEntgeltabrechnungBisDis() {
        return get(RULES_TXT_CRIT_ENTGELTABRECHNUNG_BIS_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ENTGELTABRECHNUNG_BIS_TOOLTIP_1
     * SQLite key: rules_txt_crit_entgeltabrechnung_bis_tooltip_1
     * [en] Der letzte Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.
     * [de] Der letzte Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.</pre>
     * @return [en] Der letzte Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll., [de] Der letzte Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.
     */
    public static String getRulesTxtCritEntgeltabrechnungBisTooltip1() {
        return get(RULES_TXT_CRIT_ENTGELTABRECHNUNG_BIS_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ENTGELTABRECHNUNG_VON_DIS
     * SQLite key: rules_txt_crit_entgeltabrechnung_von_dis
     * [en] Entgeltabrechnung von
     * [de] Entgeltabrechnung von</pre>
     * @return [en] Entgeltabrechnung von, [de] Entgeltabrechnung von
     */
    public static String getRulesTxtCritEntgeltabrechnungVonDis() {
        return get(RULES_TXT_CRIT_ENTGELTABRECHNUNG_VON_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ENTGELTABRECHNUNG_VON_TOOLTIP_1
     * SQLite key: rules_txt_crit_entgeltabrechnung_von_tooltip_1
     * [en] Der erste Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.
     * [de] Der erste Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.</pre>
     * @return [en] Der erste Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll., [de] Der erste Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.
     */
    public static String getRulesTxtCritEntgeltabrechnungVonTooltip1() {
        return get(RULES_TXT_CRIT_ENTGELTABRECHNUNG_VON_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ENTGELTANZAHL_DIS
     * SQLite key: rules_txt_crit_entgeltanzahl_dis
     * [en] Entgeltanzahl je Entgelt
     * [de] Entgeltanzahl je Entgelt</pre>
     * @return [en] Entgeltanzahl je Entgelt, [de] Entgeltanzahl je Entgelt
     */
    public static String getRulesTxtCritEntgeltanzahlDis() {
        return get(RULES_TXT_CRIT_ENTGELTANZAHL_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ENTGELTANZAHL_TOOLTIP_1
     * SQLite key: rules_txt_crit_entgeltanzahl_tooltip_1
     * [en] Wie oft das einzelne Entgelt abgerechnet wird.
     * [de] Wie oft das einzelne Entgelt abgerechnet wird.</pre>
     * @return [en] Wie oft das einzelne Entgelt abgerechnet wird., [de] Wie oft das einzelne Entgelt abgerechnet wird.
     */
    public static String getRulesTxtCritEntgeltanzahlTooltip1() {
        return get(RULES_TXT_CRIT_ENTGELTANZAHL_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ENTGELTART_DIS
     * SQLite key: rules_txt_crit_entgeltart_dis
     * [en] Entgelt
     * [de] Entgelt</pre>
     * @return [en] Entgelt, [de] Entgelt
     */
    public static String getRulesTxtCritEntgeltartDis() {
        return get(RULES_TXT_CRIT_ENTGELTART_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ENTGELTART_TOOLTIP_1
     * SQLite key: rules_txt_crit_entgeltart_tooltip_1
     * [en] Der Entgeltschlüssel, alphanumerisch 8-stellig, z.B. 48000001 für DRG - Systemzuschlag, angegeben wird der Code.
     * [de] Der Entgeltschlüssel, alphanumerisch 8-stellig, z.B. 48000001 für DRG - Systemzuschlag, angegeben wird der Code.</pre>
     * @return [en] Der Entgeltschlüssel, alphanumerisch 8-stellig, z.B. 48000001 für DRG - Systemzuschlag, angegeben wird der Code., [de] Der Entgeltschlüssel, alphanumerisch 8-stellig, z.B. 48000001 für DRG - Systemzuschlag, angegeben wird der Code.
     */
    public static String getRulesTxtCritEntgeltartTooltip1() {
        return get(RULES_TXT_CRIT_ENTGELTART_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ENTGELTEINZELBETRAG_DIS
     * SQLite key: rules_txt_crit_entgelteinzelbetrag_dis
     * [en] Entgelteinzelbetrag
     * [de] Entgelteinzelbetrag</pre>
     * @return [en] Entgelteinzelbetrag, [de] Entgelteinzelbetrag
     */
    public static String getRulesTxtCritEntgelteinzelbetragDis() {
        return get(RULES_TXT_CRIT_ENTGELTEINZELBETRAG_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ENTGELTEINZELBETRAG_TOOLTIP_1
     * SQLite key: rules_txt_crit_entgelteinzelbetrag_tooltip_1
     * [en] Der einzelne Betrag eines Entgeltschlüssels.
     * [de] Der einzelne Betrag eines Entgeltschlüssels.</pre>
     * @return [en] Der einzelne Betrag eines Entgeltschlüssels., [de] Der einzelne Betrag eines Entgeltschlüssels.
     */
    public static String getRulesTxtCritEntgelteinzelbetragTooltip1() {
        return get(RULES_TXT_CRIT_ENTGELTEINZELBETRAG_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ENTGELTSUMMEJEENTGELT_DIS
     * SQLite key: rules_txt_crit_entgeltsummejeentgelt_dis
     * [en] Entgeltsumme je Entgelt
     * [de] Entgeltsumme je Entgelt</pre>
     * @return [en] Entgeltsumme je Entgelt, [de] Entgeltsumme je Entgelt
     */
    public static String getRulesTxtCritEntgeltsummejeentgeltDis() {
        return get(RULES_TXT_CRIT_ENTGELTSUMMEJEENTGELT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ENTGELTSUMMEJEENTGELT_TOOLTIP_1
     * SQLite key: rules_txt_crit_entgeltsummejeentgelt_tooltip_1
     * [en] Die Summe aller Beträge eines Entgeltschlüssels.
     * [de] Die Summe aller Beträge eines Entgeltschlüssels.</pre>
     * @return [en] Die Summe aller Beträge eines Entgeltschlüssels., [de] Die Summe aller Beträge eines Entgeltschlüssels.
     */
    public static String getRulesTxtCritEntgeltsummejeentgeltTooltip1() {
        return get(RULES_TXT_CRIT_ENTGELTSUMMEJEENTGELT_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_EQUAL_PROC_NUMBER_DIS
     * SQLite key: rules_txt_crit_equal_proc_number_dis
     * [en] Anzahl gleicher Prozeduren
     * [de] Anzahl gleicher Prozeduren</pre>
     * @return [en] Anzahl gleicher Prozeduren, [de] Anzahl gleicher Prozeduren
     */
    public static String getRulesTxtCritEqualProcNumberDis() {
        return get(RULES_TXT_CRIT_EQUAL_PROC_NUMBER_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_EQUAL_PROC_NUMBER_TOOLTIP_1
     * SQLite key: rules_txt_crit_equal_proc_number_tooltip_1
     * [en] Für jede Prozedur wird ein Wiederholungswert ermittelt und der minimale Wert, der größer als 1 ist, wird hier eingetragen.
     * [de] Für jede Prozedur wird ein Wiederholungswert ermittelt und der minimale Wert, der größer als 1 ist, wird hier eingetragen.</pre>
     * @return [en] Für jede Prozedur wird ein Wiederholungswert ermittelt und der minimale Wert, der größer als 1 ist, wird hier eingetragen., [de] Für jede Prozedur wird ein Wiederholungswert ermittelt und der minimale Wert, der größer als 1 ist, wird hier eingetragen.
     */
    public static String getRulesTxtCritEqualProcNumberTooltip1() {
        return get(RULES_TXT_CRIT_EQUAL_PROC_NUMBER_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_FEE_SUM_TOOLTIP_1
     * SQLite key: rules_txt_crit_fee_sum_tooltip_1
     * [en] Gesamtbetrag aller Entgelte.
     * [de] Gesamtbetrag aller Entgelte.</pre>
     * @return [en] Gesamtbetrag aller Entgelte., [de] Gesamtbetrag aller Entgelte.
     */
    public static String getRulesTxtCritFeeSumTooltip1() {
        return get(RULES_TXT_CRIT_FEE_SUM_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_FEEGROUP
     * SQLite key: rules_txt_crit_feegroup
     * [en] Entgeltbereich
     * [de] Entgeltbereich</pre>
     * @return [en] Entgeltbereich, [de] Entgeltbereich
     */
    public static String getRulesTxtCritFeegroup() {
        return get(RULES_TXT_CRIT_FEEGROUP).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_HEALTH_ENSURANCE_DIS
     * SQLite key: rules_txt_crit_health_ensurance_dis
     * [en] Krankenkasse
     * [de] Krankenkasse</pre>
     * ATTENTION this value ('Krankenkasse') seems to be also defined under the key PROCESS_TYPE_INSURANCE!
     * @return [en] Krankenkasse, [de] Krankenkasse
     */
    public static String getRulesTxtCritHealthEnsuranceDis() {
        return get(RULES_TXT_CRIT_HEALTH_ENSURANCE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_HEALTH_ENSURANCE_TOOLTIP_1
     * SQLite key: rules_txt_crit_health_ensurance_tooltip_1
     * [en] Kennzeichnung der Krankenkasse. Siehe Institutionskennzeichen IK.
     * [de] Kennzeichnung der Krankenkasse. Siehe Institutionskennzeichen IK.</pre>
     * @return [en] Kennzeichnung der Krankenkasse. Siehe Institutionskennzeichen IK., [de] Kennzeichnung der Krankenkasse. Siehe Institutionskennzeichen IK.
     */
    public static String getRulesTxtCritHealthEnsuranceTooltip1() {
        return get(RULES_TXT_CRIT_HEALTH_ENSURANCE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_HOS_CASE_NUMBER_TOOLTIP_1_1
     * SQLite key: rules_txt_crit_hos_case_number_tooltip_1_1
     * [en] Das krankenhausinterne Kennzeichen des Versicherten.
     * [de] Das krankenhausinterne Kennzeichen des Versicherten.</pre>
     * @return [en] Das krankenhausinterne Kennzeichen des Versicherten., [de] Das krankenhausinterne Kennzeichen des Versicherten.
     */
    public static String getRulesTxtCritHosCaseNumberTooltip11() {
        return get(RULES_TXT_CRIT_HOS_CASE_NUMBER_TOOLTIP_1_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_INSTITUTE_DIS
     * SQLite key: rules_txt_crit_institute_dis
     * [en] Institutionskennzeichen
     * [de] Institutionskennzeichen</pre>
     * @return [en] Institutionskennzeichen, [de] Institutionskennzeichen
     */
    public static String getRulesTxtCritInstituteDis() {
        return get(RULES_TXT_CRIT_INSTITUTE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_INSURANCE_STATUS_DIS
     * SQLite key: rules_txt_crit_insurance_status_dis
     * [en] Versichertenstatus
     * [de] Versichertenstatus</pre>
     * @return [en] Versichertenstatus, [de] Versichertenstatus
     */
    public static String getRulesTxtCritInsuranceStatusDis() {
        return get(RULES_TXT_CRIT_INSURANCE_STATUS_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_INTENSIV_STAY_DIS
     * SQLite key: rules_txt_crit_intensiv_stay_dis
     * [en] Intensivverweildauer
     * [de] Intensivverweildauer</pre>
     * @return [en] Intensivverweildauer, [de] Intensivverweildauer
     */
    public static String getRulesTxtCritIntensivStayDis() {
        return get(RULES_TXT_CRIT_INTENSIV_STAY_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_INTENSIV_STAY_TOOLTIP_1
     * SQLite key: rules_txt_crit_intensiv_stay_tooltip_1
     * [en] Tage, die der Patient auf der Intensivstation verbracht hat.
     * [de] Tage, die der Patient auf der Intensivstation verbracht hat.</pre>
     * @return [en] Tage, die der Patient auf der Intensivstation verbracht hat., [de] Tage, die der Patient auf der Intensivstation verbracht hat.
     */
    public static String getRulesTxtCritIntensivStayTooltip1() {
        return get(RULES_TXT_CRIT_INTENSIV_STAY_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_LABOR_DATE_DIS
     * SQLite key: rules_txt_crit_labor_date_dis
     * [en] Datum der Untersuchung
     * [de] Datum der Untersuchung</pre>
     * @return [en] Datum der Untersuchung, [de] Datum der Untersuchung
     */
    public static String getRulesTxtCritLaborDateDis() {
        return get(RULES_TXT_CRIT_LABOR_DATE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_LABOR_DESCRIPTION_DIS
     * SQLite key: rules_txt_crit_labor_description_dis
     * [en] Labor-Beschreibung
     * [de] Labor-Beschreibung</pre>
     * @return [en] Labor-Beschreibung, [de] Labor-Beschreibung
     */
    public static String getRulesTxtCritLaborDescriptionDis() {
        return get(RULES_TXT_CRIT_LABOR_DESCRIPTION_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_LABOR_TEXT_DIS
     * SQLite key: rules_txt_crit_labor_text_dis
     * [en] Labortext
     * [de] Labortext</pre>
     * @return [en] Labortext, [de] Labortext
     */
    public static String getRulesTxtCritLaborTextDis() {
        return get(RULES_TXT_CRIT_LABOR_TEXT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_LABOR_UNIT_DIS
     * SQLite key: rules_txt_crit_labor_unit_dis
     * [en] Labor-Einheit
     * [de] Labor-Einheit</pre>
     * @return [en] Labor-Einheit, [de] Labor-Einheit
     */
    public static String getRulesTxtCritLaborUnitDis() {
        return get(RULES_TXT_CRIT_LABOR_UNIT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_LOSLESS_24H_DIS
     * SQLite key: rules_txt_crit_losless24h_dis
     * [en] Verweildauer kleiner 24h
     * [de] Verweildauer kleiner 24h</pre>
     * @return [en] Verweildauer kleiner 24h, [de] Verweildauer kleiner 24h
     */
    public static String getRulesTxtCritLosless24hDis() {
        return get(RULES_TXT_CRIT_LOSLESS_24H_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_DIS
     * SQLite key: rules_txt_crit_medicament_atc_code_dis
     * [en] KH Medikament: ATC-Code
     * [de] KH Medikament: ATC-Code</pre>
     * @return [en] KH Medikament: ATC-Code, [de] KH Medikament: ATC-Code
     */
    public static String getRulesTxtCritMedicamentAtcCodeDis() {
        return get(RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_TOOLTIP_2
     * SQLite key: rules_txt_crit_medicament_atc_code_tooltip_2
     * [en] Format: alphanumerisch (Beispiel: B01AX04)
     * [de] Format: alphanumerisch (Beispiel: B01AX04)</pre>
     * ATTENTION this value ('Format: alphanumerisch (Beispiel: B01AX04)') seems to be also defined under the key RULES_TEMP_30_ATCCODE! this value ('Format: alphanumerisch (Beispiel: B01AX04)') seems to be also defined under the key RULES_TEMP_42_ATCCODE!
     * @return [en] Format: alphanumerisch (Beispiel: B01AX04), [de] Format: alphanumerisch (Beispiel: B01AX04)
     */
    public static String getRulesTxtCritMedicamentAtcCodeTooltip2() {
        return get(RULES_TXT_CRIT_MEDICAMENT_ATC_CODE_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_ATC_DIS
     * SQLite key: rules_txt_crit_medicament_full_dosage_atc_dis
     * [en] KH Medikament: Gesamtdosis für ATC
     * [de] KH Medikament: Gesamtdosis für ATC</pre>
     * @return [en] KH Medikament: Gesamtdosis für ATC, [de] KH Medikament: Gesamtdosis für ATC
     */
    public static String getRulesTxtCritMedicamentFullDosageAtcDis() {
        return get(RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_ATC_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_ATC_TOOLTIP_1
     * SQLite key: rules_txt_crit_medicament_full_dosage_atc_tooltip_1
     * [en] Die Summe aller Mengen der Medikamente, bei denen ein ATC - Code eingetragen ist.
     * [de] Die Summe aller Mengen der Medikamente, bei denen ein ATC - Code eingetragen ist.</pre>
     * @return [en] Die Summe aller Mengen der Medikamente, bei denen ein ATC - Code eingetragen ist., [de] Die Summe aller Mengen der Medikamente, bei denen ein ATC - Code eingetragen ist.
     */
    public static String getRulesTxtCritMedicamentFullDosageAtcTooltip1() {
        return get(RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_ATC_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_PZN_DIS
     * SQLite key: rules_txt_crit_medicament_full_dosage_pzn_dis
     * [en] KH Medikament: Gesamtdosis für PZN
     * [de] KH Medikament: Gesamtdosis für PZN</pre>
     * @return [en] KH Medikament: Gesamtdosis für PZN, [de] KH Medikament: Gesamtdosis für PZN
     */
    public static String getRulesTxtCritMedicamentFullDosagePznDis() {
        return get(RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_PZN_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_PZN_TOOLTIP_1
     * SQLite key: rules_txt_crit_medicament_full_dosage_pzn_tooltip_1
     * [en] Die Summe aller Mengen der Medikamente, bei denen ein PZN - Code eingetragen ist.
     * [de] Die Summe aller Mengen der Medikamente, bei denen ein PZN - Code eingetragen ist.</pre>
     * @return [en] Die Summe aller Mengen der Medikamente, bei denen ein PZN - Code eingetragen ist., [de] Die Summe aller Mengen der Medikamente, bei denen ein PZN - Code eingetragen ist.
     */
    public static String getRulesTxtCritMedicamentFullDosagePznTooltip1() {
        return get(RULES_TXT_CRIT_MEDICAMENT_FULL_DOSAGE_PZN_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_ATC_DIS
     * SQLite key: rules_txt_crit_medicament_full_price_atc_dis
     * [en] KH Medikament: Gesamtpreis für ATC
     * [de] KH Medikament: Gesamtpreis für ATC</pre>
     * @return [en] KH Medikament: Gesamtpreis für ATC, [de] KH Medikament: Gesamtpreis für ATC
     */
    public static String getRulesTxtCritMedicamentFullPriceAtcDis() {
        return get(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_ATC_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_ATC_TOOLTIP_1
     * SQLite key: rules_txt_crit_medicament_full_price_atc_tooltip_1
     * [en] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein ATC - Code eingetragen ist.
     * [de] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein ATC - Code eingetragen ist.</pre>
     * @return [en] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein ATC - Code eingetragen ist., [de] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein ATC - Code eingetragen ist.
     */
    public static String getRulesTxtCritMedicamentFullPriceAtcTooltip1() {
        return get(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_ATC_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_DIS
     * SQLite key: rules_txt_crit_medicament_full_price_dis
     * [en] KH Medikament: Gesamtpreis
     * [de] KH Medikament: Gesamtpreis</pre>
     * @return [en] KH Medikament: Gesamtpreis, [de] KH Medikament: Gesamtpreis
     */
    public static String getRulesTxtCritMedicamentFullPriceDis() {
        return get(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_PZN_DIS
     * SQLite key: rules_txt_crit_medicament_full_price_pzn_dis
     * [en] KH Medikament: Gesamtpreis für PZN
     * [de] KH Medikament: Gesamtpreis für PZN</pre>
     * @return [en] KH Medikament: Gesamtpreis für PZN, [de] KH Medikament: Gesamtpreis für PZN
     */
    public static String getRulesTxtCritMedicamentFullPricePznDis() {
        return get(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_PZN_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_PZN_TOOLTIP_1
     * SQLite key: rules_txt_crit_medicament_full_price_pzn_tooltip_1
     * [en] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein PZN - Code eingetragen ist.
     * [de] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein PZN - Code eingetragen ist.</pre>
     * @return [en] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein PZN - Code eingetragen ist., [de] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein PZN - Code eingetragen ist.
     */
    public static String getRulesTxtCritMedicamentFullPricePznTooltip1() {
        return get(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_PZN_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_TOOLTIP_1
     * SQLite key: rules_txt_crit_medicament_full_price_tooltip_1
     * [en] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat.
     * [de] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat.</pre>
     * @return [en] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat., [de] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat.
     */
    public static String getRulesTxtCritMedicamentFullPriceTooltip1() {
        return get(RULES_TXT_CRIT_MEDICAMENT_FULL_PRICE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DATE_DIS
     * SQLite key: rules_txt_crit_medicament_perscript_date_dis
     * [en] KHMedikament: Verordnungsdatum
     * [de] KHMedikament: Verordnungsdatum</pre>
     * @return [en] KHMedikament: Verordnungsdatum, [de] KHMedikament: Verordnungsdatum
     */
    public static String getRulesTxtCritMedicamentPerscriptDateDis() {
        return get(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DATE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DATE_TOOLTIP_1
     * SQLite key: rules_txt_crit_medicament_perscript_date_tooltip_1
     * [en] Datum, an dem ein Arzt das Medikament verordnet hat.
     * [de] Datum, an dem ein Arzt das Medikament verordnet hat.</pre>
     * @return [en] Datum, an dem ein Arzt das Medikament verordnet hat., [de] Datum, an dem ein Arzt das Medikament verordnet hat.
     */
    public static String getRulesTxtCritMedicamentPerscriptDateTooltip1() {
        return get(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DATE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_DIS
     * SQLite key: rules_txt_crit_medicament_perscript_dosage_dis
     * [en] KH Medikament: Dosierung
     * [de] KH Medikament: Dosierung</pre>
     * @return [en] KH Medikament: Dosierung, [de] KH Medikament: Dosierung
     */
    public static String getRulesTxtCritMedicamentPerscriptDosageDis() {
        return get(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_TOOLTIP_1
     * SQLite key: rules_txt_crit_medicament_perscript_dosage_tooltip_1
     * [en] In welcher Dosierung das Medikament verordnet wurde.
     * [de] In welcher Dosierung das Medikament verordnet wurde.</pre>
     * @return [en] In welcher Dosierung das Medikament verordnet wurde., [de] In welcher Dosierung das Medikament verordnet wurde.
     */
    public static String getRulesTxtCritMedicamentPerscriptDosageTooltip1() {
        return get(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_DIS
     * SQLite key: rules_txt_crit_medicament_perscript_dosage_unit_dis
     * [en] KH Medikament: Dosierungseinheit
     * [de] KH Medikament: Dosierungseinheit</pre>
     * @return [en] KH Medikament: Dosierungseinheit, [de] KH Medikament: Dosierungseinheit
     */
    public static String getRulesTxtCritMedicamentPerscriptDosageUnitDis() {
        return get(RULES_TXT_CRIT_MEDICAMENT_PERSCRIPT_DOSAGE_UNIT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_PRICE_DIS
     * SQLite key: rules_txt_crit_medicament_price_dis
     * [en] KH Medikament: Preis
     * [de] KH Medikament: Preis</pre>
     * @return [en] KH Medikament: Preis, [de] KH Medikament: Preis
     */
    public static String getRulesTxtCritMedicamentPriceDis() {
        return get(RULES_TXT_CRIT_MEDICAMENT_PRICE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_PRICE_TOOLTIP_1
     * SQLite key: rules_txt_crit_medicament_price_tooltip_1
     * [en] Der Preis eines Medikamentes.
     * [de] Der Preis eines Medikamentes.</pre>
     * @return [en] Der Preis eines Medikamentes., [de] Der Preis eines Medikamentes.
     */
    public static String getRulesTxtCritMedicamentPriceTooltip1() {
        return get(RULES_TXT_CRIT_MEDICAMENT_PRICE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MEDICAMENT_PZN_CODE_DIS
     * SQLite key: rules_txt_crit_medicament_pzn_code_dis
     * [en] KH Medikament: PZN-Code
     * [de] KH Medikament: PZN-Code</pre>
     * @return [en] KH Medikament: PZN-Code, [de] KH Medikament: PZN-Code
     */
    public static String getRulesTxtCritMedicamentPznCodeDis() {
        return get(RULES_TXT_CRIT_MEDICAMENT_PZN_CODE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MID_LENGTH_OF_STAY_DIS
     * SQLite key: rules_txt_crit_mid_length_of_stay_dis
     * [en] mittlere Verweildauer
     * [de] mittlere Verweildauer</pre>
     * @return [en] mittlere Verweildauer, [de] mittlere Verweildauer
     */
    public static String getRulesTxtCritMidLengthOfStayDis() {
        return get(RULES_TXT_CRIT_MID_LENGTH_OF_STAY_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MOVEMENTS_COUNT_DIS
     * SQLite key: rules_txt_crit_movements_count_dis
     * [en] Anzahl Bewegungen
     * [de] Anzahl Bewegungen</pre>
     * @return [en] Anzahl Bewegungen, [de] Anzahl Bewegungen
     */
    public static String getRulesTxtCritMovementsCountDis() {
        return get(RULES_TXT_CRIT_MOVEMENTS_COUNT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MOVEMENTS_COUNT_TOOLTIP_1
     * SQLite key: rules_txt_crit_movements_count_tooltip_1
     * [en] Ist gleich der Summe der Fachabteilungen, in denen der Patient behandelt worden ist.
     * [de] Ist gleich der Summe der Fachabteilungen, in denen der Patient behandelt worden ist.</pre>
     * @return [en] Ist gleich der Summe der Fachabteilungen, in denen der Patient behandelt worden ist., [de] Ist gleich der Summe der Fachabteilungen, in denen der Patient behandelt worden ist.
     */
    public static String getRulesTxtCritMovementsCountTooltip1() {
        return get(RULES_TXT_CRIT_MOVEMENTS_COUNT_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_MRSA_GENDER_DIS
     * SQLite key: rules_txt_crit_mrsa_gender_dis
     * [en] Geschlecht
     * [de] Geschlecht</pre>
     * @return [en] Geschlecht, [de] Geschlecht
     */
    public static String getRulesTxtCritMrsaGenderDis() {
        return get(RULES_TXT_CRIT_MRSA_GENDER_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_NO_CRIT_TOOLTIP
     * SQLite key: rules_txt_crit_no_crit_tooltip
     * [en] kein Kriterium
     * [de] kein Kriterium</pre>
     * @return [en] kein Kriterium, [de] kein Kriterium
     */
    public static String getRulesTxtCritNoCritTooltip() {
        return get(RULES_TXT_CRIT_NO_CRIT_TOOLTIP).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_NOW_TIME_DIS
     * SQLite key: rules_txt_crit_now_time_dis
     * [en] jetzt
     * [de] jetzt</pre>
     * ATTENTION this value ('Jetzt') seems to be also defined under the key RULES_JETZT!
     * @return [en] jetzt, [de] jetzt
     */
    public static String getRulesTxtCritNowTimeDis() {
        return get(RULES_TXT_CRIT_NOW_TIME_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_NOW_TIME_TOOLTIP_1
     * SQLite key: rules_txt_crit_now_time_tooltip_1
     * [en] Die Systemzeit.
     * [de] Die Systemzeit.</pre>
     * @return [en] Die Systemzeit., [de] Die Systemzeit.
     */
    public static String getRulesTxtCritNowTimeTooltip1() {
        return get(RULES_TXT_CRIT_NOW_TIME_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PATIENT_MASTER_DATA_AGE_DIS
     * SQLite key: rules_txt_crit_patient_master_data_age_dis
     * [en] Versicherter: Alter
     * [de] Versicherter: Alter</pre>
     * @return [en] Versicherter: Alter, [de] Versicherter: Alter
     */
    public static String getRulesTxtCritPatientMasterDataAgeDis() {
        return get(RULES_TXT_CRIT_PATIENT_MASTER_DATA_AGE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PATIENT_MASTER_DATA_CARE_GRADE_DIS
     * SQLite key: rules_txt_crit_patient_master_data_care_grade_dis
     * [en] Versicherter: Pflegestufe
     * [de] Versicherter: Pflegestufe</pre>
     * @return [en] Versicherter: Pflegestufe, [de] Versicherter: Pflegestufe
     */
    public static String getRulesTxtCritPatientMasterDataCareGradeDis() {
        return get(RULES_TXT_CRIT_PATIENT_MASTER_DATA_CARE_GRADE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PATIENT_MASTER_DATA_CARE_STATE_DIS
     * SQLite key: rules_txt_crit_patient_master_data_care_state_dis
     * [en] Versicherter: Versichertenstatus
     * [de] Versicherter: Versichertenstatus</pre>
     * @return [en] Versicherter: Versichertenstatus, [de] Versicherter: Versichertenstatus
     */
    public static String getRulesTxtCritPatientMasterDataCareStateDis() {
        return get(RULES_TXT_CRIT_PATIENT_MASTER_DATA_CARE_STATE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PATIENT_MASTER_DATA_GENDER_DIS
     * SQLite key: rules_txt_crit_patient_master_data_gender_dis
     * [en] Versicherter: Geschlecht
     * [de] Versicherter: Geschlecht</pre>
     * @return [en] Versicherter: Geschlecht, [de] Versicherter: Geschlecht
     */
    public static String getRulesTxtCritPatientMasterDataGenderDis() {
        return get(RULES_TXT_CRIT_PATIENT_MASTER_DATA_GENDER_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PATIENT_MASTER_DATA_ZIPCODE_DIS
     * SQLite key: rules_txt_crit_patient_master_data_zipcode_dis
     * [en] Versicherter: Postleitzahl
     * [de] Versicherter: Postleitzahl</pre>
     * @return [en] Versicherter: Postleitzahl, [de] Versicherter: Postleitzahl
     */
    public static String getRulesTxtCritPatientMasterDataZipcodeDis() {
        return get(RULES_TXT_CRIT_PATIENT_MASTER_DATA_ZIPCODE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PEPP_TOOLTIP_1
     * SQLite key: rules_txt_crit_pepp_tooltip_1
     * [en] Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik
     * [de] Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik</pre>
     * @return [en] Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik, [de] Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik
     */
    public static String getRulesTxtCritPeppTooltip1() {
        return get(RULES_TXT_CRIT_PEPP_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PRINC_DIAG_DIS
     * SQLite key: rules_txt_crit_princ_diag_dis
     * [en] Hauptdiagnose
     * [de] Hauptdiagnose</pre>
     * @return [en] Hauptdiagnose, [de] Hauptdiagnose
     */
    public static String getRulesTxtCritPrincDiagDis() {
        return get(RULES_TXT_CRIT_PRINC_DIAG_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PRINC_DIAG_LOC_DIS
     * SQLite key: rules_txt_crit_princ_diag_loc_dis
     * [en] Hauptdiagnose: Lokalisation
     * [de] Hauptdiagnose: Lokalisation</pre>
     * @return [en] Hauptdiagnose: Lokalisation, [de] Hauptdiagnose: Lokalisation
     */
    public static String getRulesTxtCritPrincDiagLocDis() {
        return get(RULES_TXT_CRIT_PRINC_DIAG_LOC_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PROC_DATE_DIS
     * SQLite key: rules_txt_crit_proc_date_dis
     * [en] OPSDatum
     * [de] OPSDatum</pre>
     * @return [en] OPSDatum, [de] OPSDatum
     */
    public static String getRulesTxtCritProcDateDis() {
        return get(RULES_TXT_CRIT_PROC_DATE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PROC_DATE_TOOLTIP_1
     * SQLite key: rules_txt_crit_proc_date_tooltip_1
     * [en] Datum, an dem die Prozedur durchgeführt worden ist.
     * [de] Datum, an dem die Prozedur durchgeführt worden ist.</pre>
     * @return [en] Datum, an dem die Prozedur durchgeführt worden ist., [de] Datum, an dem die Prozedur durchgeführt worden ist.
     */
    public static String getRulesTxtCritProcDateTooltip1() {
        return get(RULES_TXT_CRIT_PROC_DATE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PROC_LOCALISATION_DIS
     * SQLite key: rules_txt_crit_proc_localisation_dis
     * [en] OPSLokalisation
     * [de] OPSLokalisation</pre>
     * @return [en] OPSLokalisation, [de] OPSLokalisation
     */
    public static String getRulesTxtCritProcLocalisationDis() {
        return get(RULES_TXT_CRIT_PROC_LOCALISATION_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PROC_NUMBER_DIS
     * SQLite key: rules_txt_crit_proc_number_dis
     * [en] Anzahl Prozeduren
     * [de] Anzahl Prozeduren</pre>
     * @return [en] Anzahl Prozeduren, [de] Anzahl Prozeduren
     */
    public static String getRulesTxtCritProcNumberDis() {
        return get(RULES_TXT_CRIT_PROC_NUMBER_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PROC_NUMBER_TOOLTIP_1
     * SQLite key: rules_txt_crit_proc_number_tooltip_1
     * [en] Die Summe aller Prozeduren.
     * [de] Die Summe aller Prozeduren.</pre>
     * @return [en] Die Summe aller Prozeduren., [de] Die Summe aller Prozeduren.
     */
    public static String getRulesTxtCritProcNumberTooltip1() {
        return get(RULES_TXT_CRIT_PROC_NUMBER_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PROC_TOOLTIP_1
     * SQLite key: rules_txt_crit_proc_tooltip_1
     * [en] OPS, Operationen- und Prozedurenschlüssel, maximal 6-stellig, z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.
     * [de] OPS, Operationen- und Prozedurenschlüssel, maximal 6-stellig, z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.</pre>
     * @return [en] OPS, Operationen- und Prozedurenschlüssel, maximal 6-stellig, z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code., [de] OPS, Operationen- und Prozedurenschlüssel, maximal 6-stellig, z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.
     */
    public static String getRulesTxtCritProcTooltip1() {
        return get(RULES_TXT_CRIT_PROC_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PROCEDURE_GROUPED_DIS
     * SQLite key: rules_txt_crit_procedure_grouped_dis
     * [en] Grouperrelevante Prozedur
     * [de] Grouperrelevante Prozedur</pre>
     * @return [en] Grouperrelevante Prozedur, [de] Grouperrelevante Prozedur
     */
    public static String getRulesTxtCritProcedureGroupedDis() {
        return get(RULES_TXT_CRIT_PROCEDURE_GROUPED_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PROCEDURE_GROUPED_TOOLTIP_1
     * SQLite key: rules_txt_crit_procedure_grouped_tooltip_1
     * [en] Prozedur, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.
     * [de] Prozedur, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.</pre>
     * @return [en] Prozedur, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code., [de] Prozedur, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.
     */
    public static String getRulesTxtCritProcedureGroupedTooltip1() {
        return get(RULES_TXT_CRIT_PROCEDURE_GROUPED_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PSYCH_DAYS_INTENSIV
     * SQLite key: rules_txt_crit_psych_days_intensiv
     * [en] Anzahl_Tage_Intensiv
     * [de] Anzahl_Tage_Intensiv</pre>
     * @return [en] Anzahl_Tage_Intensiv, [de] Anzahl_Tage_Intensiv
     */
    public static String getRulesTxtCritPsychDaysIntensiv() {
        return get(RULES_TXT_CRIT_PSYCH_DAYS_INTENSIV).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PSYCH_DAYS_INTENSIV_DIS
     * SQLite key: rules_txt_crit_psych_days_intensiv_dis
     * [en] Anzahl Tage intensiv
     * [de] Anzahl Tage intensiv</pre>
     * @return [en] Anzahl Tage intensiv, [de] Anzahl Tage intensiv
     */
    public static String getRulesTxtCritPsychDaysIntensivDis() {
        return get(RULES_TXT_CRIT_PSYCH_DAYS_INTENSIV_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PSYCH_ONE_2_ONE_ADULTS
     * SQLite key: rules_txt_crit_psych_one_2_one_adults
     * [en] Anzahl_Stunden_eins2eins_Behandlung_Erwachsene
     * [de] Anzahl_Stunden_eins2eins_Behandlung_Erwachsene</pre>
     * @return [en] Anzahl_Stunden_eins2eins_Behandlung_Erwachsene, [de] Anzahl_Stunden_eins2eins_Behandlung_Erwachsene
     */
    public static String getRulesTxtCritPsychOne2OneAdults() {
        return get(RULES_TXT_CRIT_PSYCH_ONE_2_ONE_ADULTS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PSYCH_ONE_2_ONE_ADULTS_TOOLTIP
     * SQLite key: rules_txt_crit_psych_one_2_one_adults_tooltip
     * [en] Anzahl Stunden 1:1 Behandlung Erwachsene
     * [de] Anzahl Stunden 1:1 Behandlung Erwachsene</pre>
     * @return [en] Anzahl Stunden 1:1 Behandlung Erwachsene, [de] Anzahl Stunden 1:1 Behandlung Erwachsene
     */
    public static String getRulesTxtCritPsychOne2OneAdultsTooltip() {
        return get(RULES_TXT_CRIT_PSYCH_ONE_2_ONE_ADULTS_TOOLTIP).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PSYCH_ONE_2_ONE_INFANTS
     * SQLite key: rules_txt_crit_psych_one_2_one_infants
     * [en] Anzahl_Stunden_eins2eins_Behandlung_Kinder
     * [de] Anzahl_Stunden_eins2eins_Behandlung_Kinder</pre>
     * @return [en] Anzahl_Stunden_eins2eins_Behandlung_Kinder, [de] Anzahl_Stunden_eins2eins_Behandlung_Kinder
     */
    public static String getRulesTxtCritPsychOne2OneInfants() {
        return get(RULES_TXT_CRIT_PSYCH_ONE_2_ONE_INFANTS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PSYCH_ONE_2_ONE_INFANTS_TOOLTIP
     * SQLite key: rules_txt_crit_psych_one_2_one_infants_tooltip
     * [en] Anzahl Stunden 1:1 Behandlung Kinder
     * [de] Anzahl Stunden 1:1 Behandlung Kinder</pre>
     * @return [en] Anzahl Stunden 1:1 Behandlung Kinder, [de] Anzahl Stunden 1:1 Behandlung Kinder
     */
    public static String getRulesTxtCritPsychOne2OneInfantsTooltip() {
        return get(RULES_TXT_CRIT_PSYCH_ONE_2_ONE_INFANTS_TOOLTIP).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PSYCH_OPS_NUMBER
     * SQLite key: rules_txt_crit_psych_ops_number
     * [en] Anzahl_Psych_OPS
     * [de] Anzahl_Psych_OPS</pre>
     * @return [en] Anzahl_Psych_OPS, [de] Anzahl_Psych_OPS
     */
    public static String getRulesTxtCritPsychOpsNumber() {
        return get(RULES_TXT_CRIT_PSYCH_OPS_NUMBER).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PSYCH_OPS_NUMBER_TOOLTIP
     * SQLite key: rules_txt_crit_psych_ops_number_tooltip
     * [en] Anzahl Psych-OPS
     * [de] Anzahl Psych-OPS</pre>
     * @return [en] Anzahl Psych-OPS, [de] Anzahl Psych-OPS
     */
    public static String getRulesTxtCritPsychOpsNumberTooltip() {
        return get(RULES_TXT_CRIT_PSYCH_OPS_NUMBER_TOOLTIP).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PSYCH_OPS_TOOLTIP
     * SQLite key: rules_txt_crit_psych_ops_tooltip
     * [en] Psych-OPS
     * [de] Psych-OPS</pre>
     * @return [en] Psych-OPS, [de] Psych-OPS
     */
    public static String getRulesTxtCritPsychOpsTooltip() {
        return get(RULES_TXT_CRIT_PSYCH_OPS_TOOLTIP).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_PSYCHO_STATE_DIS
     * SQLite key: rules_txt_crit_psycho_state_dis
     * [en] Psychostatus
     * [de] Psychostatus</pre>
     * @return [en] Psychostatus, [de] Psychostatus
     */
    public static String getRulesTxtCritPsychoStateDis() {
        return get(RULES_TXT_CRIT_PSYCHO_STATE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_RECEIPT_DEPARTMENT_DIS
     * SQLite key: rules_txt_crit_receipt_department_dis
     * [en] aufnehmende Fachabteilung
     * [de] aufnehmende Fachabteilung</pre>
     * @return [en] aufnehmende Fachabteilung, [de] aufnehmende Fachabteilung
     */
    public static String getRulesTxtCritReceiptDepartmentDis() {
        return get(RULES_TXT_CRIT_RECEIPT_DEPARTMENT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_RECEIPT_DEPARTMENT_TOOLTIP_1
     * SQLite key: rules_txt_crit_receipt_department_tooltip_1
     * [en] Kodierung der aufnehmenden Fachabteilung nach §301(Siehe Anlage 1)
     * [de] Kodierung der aufnehmenden Fachabteilung nach §301(Siehe Anlage 1)</pre>
     * @return [en] Kodierung der aufnehmenden Fachabteilung nach §301(Siehe Anlage 1), [de] Kodierung der aufnehmenden Fachabteilung nach §301(Siehe Anlage 1)
     */
    public static String getRulesTxtCritReceiptDepartmentTooltip1() {
        return get(RULES_TXT_CRIT_RECEIPT_DEPARTMENT_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_RECHNUNG_ART_DIS
     * SQLite key: rules_txt_crit_rechnung_art_dis
     * [en] Rechnungsart
     * [de] Rechnungsart</pre>
     * @return [en] Rechnungsart, [de] Rechnungsart
     */
    public static String getRulesTxtCritRechnungArtDis() {
        return get(RULES_TXT_CRIT_RECHNUNG_ART_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_RECHNUNG_DATUM_DIS
     * SQLite key: rules_txt_crit_rechnung_datum_dis
     * [en] Rechnungsdatum
     * [de] Rechnungsdatum</pre>
     * @return [en] Rechnungsdatum, [de] Rechnungsdatum
     */
    public static String getRulesTxtCritRechnungDatumDis() {
        return get(RULES_TXT_CRIT_RECHNUNG_DATUM_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_RECHNUNG_DATUM_TOOLTIP_1
     * SQLite key: rules_txt_crit_rechnung_datum_tooltip_1
     * [en] Datum, an dem die Rechnung erstellt worden ist.
     * [de] Datum, an dem die Rechnung erstellt worden ist.</pre>
     * @return [en] Datum, an dem die Rechnung erstellt worden ist., [de] Datum, an dem die Rechnung erstellt worden ist.
     */
    public static String getRulesTxtCritRechnungDatumTooltip1() {
        return get(RULES_TXT_CRIT_RECHNUNG_DATUM_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_RECHNUNG_NUMMER_DIS
     * SQLite key: rules_txt_crit_rechnung_nummer_dis
     * [en] Rechnungsnummer
     * [de] Rechnungsnummer</pre>
     * @return [en] Rechnungsnummer, [de] Rechnungsnummer
     */
    public static String getRulesTxtCritRechnungNummerDis() {
        return get(RULES_TXT_CRIT_RECHNUNG_NUMMER_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REDUCTION_CW_DIS
     * SQLite key: rules_txt_crit_reduction_cw_dis
     * [en] CW Abschlag
     * [de] CW Abschlag</pre>
     * @return [en] CW Abschlag, [de] CW Abschlag
     */
    public static String getRulesTxtCritReductionCwDis() {
        return get(RULES_TXT_CRIT_REDUCTION_CW_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REDUCTION_CW_TOOLTIP_1
     * SQLite key: rules_txt_crit_reduction_cw_tooltip_1
     * [en] Ein Unterschreiten der Unteren Grenzverweildauer bewirkt einen Abschlag, bei dem die einer DRG zugeordneten CW-Wert-Abschläge multipliziert mit den Tagen der Unterschreitung von dem CW-Basiswert abgezogen werden.
     * [de] Ein Unterschreiten der Unteren Grenzverweildauer bewirkt einen Abschlag, bei dem die einer DRG zugeordneten CW-Wert-Abschläge multipliziert mit den Tagen der Unterschreitung von dem CW-Basiswert abgezogen werden.</pre>
     * @return [en] Ein Unterschreiten der Unteren Grenzverweildauer bewirkt einen Abschlag, bei dem die einer DRG zugeordneten CW-Wert-Abschläge multipliziert mit den Tagen der Unterschreitung von dem CW-Basiswert abgezogen werden., [de] Ein Unterschreiten der Unteren Grenzverweildauer bewirkt einen Abschlag, bei dem die einer DRG zugeordneten CW-Wert-Abschläge multipliziert mit den Tagen der Unterschreitung von dem CW-Basiswert abgezogen werden.
     */
    public static String getRulesTxtCritReductionCwTooltip1() {
        return get(RULES_TXT_CRIT_REDUCTION_CW_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REDUCTION_DAYS_DIS
     * SQLite key: rules_txt_crit_reduction_days_dis
     * [en] Abschlagstage
     * [de] Abschlagstage</pre>
     * @return [en] Abschlagstage, [de] Abschlagstage
     */
    public static String getRulesTxtCritReductionDaysDis() {
        return get(RULES_TXT_CRIT_REDUCTION_DAYS_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REDUCTION_DAYS_TOOLTIP_1
     * SQLite key: rules_txt_crit_reduction_days_tooltip_1
     * [en] (Untere Grenzverweildauer + 1 ) - Ist-Verweildauer. Im Fallpauschalenkatalog ist immer der erste Abschlagstag angegeben.(Spalte 7)
     * [de] (Untere Grenzverweildauer + 1 ) - Ist-Verweildauer. Im Fallpauschalenkatalog ist immer der erste Abschlagstag angegeben.(Spalte 7)</pre>
     * @return [en] (Untere Grenzverweildauer + 1 ) - Ist-Verweildauer. Im Fallpauschalenkatalog ist immer der erste Abschlagstag angegeben.(Spalte 7), [de] (Untere Grenzverweildauer + 1 ) - Ist-Verweildauer. Im Fallpauschalenkatalog ist immer der erste Abschlagstag angegeben.(Spalte 7)
     */
    public static String getRulesTxtCritReductionDaysTooltip1() {
        return get(RULES_TXT_CRIT_REDUCTION_DAYS_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_RELEASE_DEPARTMENT_DIS
     * SQLite key: rules_txt_crit_release_department_dis
     * [en] entlassende Fachabteilung
     * [de] entlassende Fachabteilung</pre>
     * @return [en] entlassende Fachabteilung, [de] entlassende Fachabteilung
     */
    public static String getRulesTxtCritReleaseDepartmentDis() {
        return get(RULES_TXT_CRIT_RELEASE_DEPARTMENT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_RELEASE_DEPARTMENT_TOOLTIP_1
     * SQLite key: rules_txt_crit_release_department_tooltip_1
     * [en] Kodierung der entlassenden Fachabteilung nach §301(Siehe Anlage 1)
     * [de] Kodierung der entlassenden Fachabteilung nach §301(Siehe Anlage 1)</pre>
     * @return [en] Kodierung der entlassenden Fachabteilung nach §301(Siehe Anlage 1), [de] Kodierung der entlassenden Fachabteilung nach §301(Siehe Anlage 1)
     */
    public static String getRulesTxtCritReleaseDepartmentTooltip1() {
        return get(RULES_TXT_CRIT_RELEASE_DEPARTMENT_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REMEDIES_ALL_PRICE
     * SQLite key: rules_txt_crit_remedies_all_price
     * [en] he_gesamtPreis_alle
     * [de] he_gesamtPreis_alle</pre>
     * @return [en] he_gesamtPreis_alle, [de] he_gesamtPreis_alle
     */
    public static String getRulesTxtCritRemediesAllPrice() {
        return get(RULES_TXT_CRIT_REMEDIES_ALL_PRICE).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REMEDIES_ALL_PRICE_DIS
     * SQLite key: rules_txt_crit_remedies_all_price_dis
     * [en] Heilmittel: Gesamtpreis
     * [de] Heilmittel: Gesamtpreis</pre>
     * @return [en] Heilmittel: Gesamtpreis, [de] Heilmittel: Gesamtpreis
     */
    public static String getRulesTxtCritRemediesAllPriceDis() {
        return get(RULES_TXT_CRIT_REMEDIES_ALL_PRICE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REMEDIES_COUNT
     * SQLite key: rules_txt_crit_remedies_count
     * [en] he_menge
     * [de] he_menge</pre>
     * @return [en] he_menge, [de] he_menge
     */
    public static String getRulesTxtCritRemediesCount() {
        return get(RULES_TXT_CRIT_REMEDIES_COUNT).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REMEDIES_COUNT_DIS
     * SQLite key: rules_txt_crit_remedies_count_dis
     * [en] Heilmittel: Menge
     * [de] Heilmittel: Menge</pre>
     * @return [en] Heilmittel: Menge, [de] Heilmittel: Menge
     */
    public static String getRulesTxtCritRemediesCountDis() {
        return get(RULES_TXT_CRIT_REMEDIES_COUNT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REMEDIES_FULL_COUNT
     * SQLite key: rules_txt_crit_remedies_full_count
     * [en] he_Gesamtmenge
     * [de] he_Gesamtmenge</pre>
     * @return [en] he_Gesamtmenge, [de] he_Gesamtmenge
     */
    public static String getRulesTxtCritRemediesFullCount() {
        return get(RULES_TXT_CRIT_REMEDIES_FULL_COUNT).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REMEDIES_FULL_COUNT_DIS
     * SQLite key: rules_txt_crit_remedies_full_count_dis
     * [en] Heilmittel: Gesamtmenge für Heilmittelpositionsnummer
     * [de] Heilmittel: Gesamtmenge für Heilmittelpositionsnummer</pre>
     * @return [en] Heilmittel: Gesamtmenge für Heilmittelpositionsnummer, [de] Heilmittel: Gesamtmenge für Heilmittelpositionsnummer
     */
    public static String getRulesTxtCritRemediesFullCountDis() {
        return get(RULES_TXT_CRIT_REMEDIES_FULL_COUNT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REMEDIES_FULL_PRICE
     * SQLite key: rules_txt_crit_remedies_full_price
     * [en] he_gesamtPreis
     * [de] he_gesamtPreis</pre>
     * @return [en] he_gesamtPreis, [de] he_gesamtPreis
     */
    public static String getRulesTxtCritRemediesFullPrice() {
        return get(RULES_TXT_CRIT_REMEDIES_FULL_PRICE).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REMEDIES_FULL_PRICE_DIS
     * SQLite key: rules_txt_crit_remedies_full_price_dis
     * [en] Heilmittel: Gesamtpreis für Heilmittelpositionsnummer
     * [de] Heilmittel: Gesamtpreis für Heilmittelpositionsnummer</pre>
     * @return [en] Heilmittel: Gesamtpreis für Heilmittelpositionsnummer, [de] Heilmittel: Gesamtpreis für Heilmittelpositionsnummer
     */
    public static String getRulesTxtCritRemediesFullPriceDis() {
        return get(RULES_TXT_CRIT_REMEDIES_FULL_PRICE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REMEDIES_NUMBER
     * SQLite key: rules_txt_crit_remedies_number
     * [en] he_positionsnummer
     * [de] he_positionsnummer</pre>
     * @return [en] he_positionsnummer, [de] he_positionsnummer
     */
    public static String getRulesTxtCritRemediesNumber() {
        return get(RULES_TXT_CRIT_REMEDIES_NUMBER).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REMEDIES_NUMBER_DIS
     * SQLite key: rules_txt_crit_remedies_number_dis
     * [en] Heilmittel: Heilmittelpositionsnummer
     * [de] Heilmittel: Heilmittelpositionsnummer</pre>
     * @return [en] Heilmittel: Heilmittelpositionsnummer, [de] Heilmittel: Heilmittelpositionsnummer
     */
    public static String getRulesTxtCritRemediesNumberDis() {
        return get(RULES_TXT_CRIT_REMEDIES_NUMBER_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REMEDIES_PRESCRIPTION_DATE
     * SQLite key: rules_txt_crit_remedies_prescription_date
     * [en] he_Verordnungsdatum
     * [de] he_Verordnungsdatum</pre>
     * @return [en] he_Verordnungsdatum, [de] he_Verordnungsdatum
     */
    public static String getRulesTxtCritRemediesPrescriptionDate() {
        return get(RULES_TXT_CRIT_REMEDIES_PRESCRIPTION_DATE).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REMEDIES_PRESCRIPTION_DATE_DIS
     * SQLite key: rules_txt_crit_remedies_prescription_date_dis
     * [en] Heilmittel: Verordnungsdatum
     * [de] Heilmittel: Verordnungsdatum</pre>
     * @return [en] Heilmittel: Verordnungsdatum, [de] Heilmittel: Verordnungsdatum
     */
    public static String getRulesTxtCritRemediesPrescriptionDateDis() {
        return get(RULES_TXT_CRIT_REMEDIES_PRESCRIPTION_DATE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REMEDIES_PRICE
     * SQLite key: rules_txt_crit_remedies_price
     * [en] he_preis
     * [de] he_preis</pre>
     * @return [en] he_preis, [de] he_preis
     */
    public static String getRulesTxtCritRemediesPrice() {
        return get(RULES_TXT_CRIT_REMEDIES_PRICE).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_REMEDIES_PRICE_DIS
     * SQLite key: rules_txt_crit_remedies_price_dis
     * [en] Heilmittel: Einzelpreis
     * [de] Heilmittel: Einzelpreis</pre>
     * @return [en] Heilmittel: Einzelpreis, [de] Heilmittel: Einzelpreis
     */
    public static String getRulesTxtCritRemediesPriceDis() {
        return get(RULES_TXT_CRIT_REMEDIES_PRICE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SDX_NUMBER_DIS
     * SQLite key: rules_txt_crit_sdx_number_dis
     * [en] Anzahl Nebendiagnosen
     * [de] Anzahl Nebendiagnosen</pre>
     * @return [en] Anzahl Nebendiagnosen, [de] Anzahl Nebendiagnosen
     */
    public static String getRulesTxtCritSdxNumberDis() {
        return get(RULES_TXT_CRIT_SDX_NUMBER_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SDX_NUMBER_TOOLTIP_1
     * SQLite key: rules_txt_crit_sdx_number_tooltip_1
     * [en] Die Summe aller Nebendiagnosen.
     * [de] Die Summe aller Nebendiagnosen.</pre>
     * @return [en] Die Summe aller Nebendiagnosen., [de] Die Summe aller Nebendiagnosen.
     */
    public static String getRulesTxtCritSdxNumberTooltip1() {
        return get(RULES_TXT_CRIT_SDX_NUMBER_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEC_DIAG_DIS
     * SQLite key: rules_txt_crit_sec_diag_dis
     * [en] Sek. Diagnose
     * [de] Sek. Diagnose</pre>
     * @return [en] Sek. Diagnose, [de] Sek. Diagnose
     */
    public static String getRulesTxtCritSecDiagDis() {
        return get(RULES_TXT_CRIT_SEC_DIAG_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEC_DIAG_LOC_DIS
     * SQLite key: rules_txt_crit_sec_diag_loc_dis
     * [en] Sek. Diagnose: Lokalisation
     * [de] Sek. Diagnose: Lokalisation</pre>
     * @return [en] Sek. Diagnose: Lokalisation, [de] Sek. Diagnose: Lokalisation
     */
    public static String getRulesTxtCritSecDiagLocDis() {
        return get(RULES_TXT_CRIT_SEC_DIAG_LOC_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEC_DIAG_PRIM_DIS
     * SQLite key: rules_txt_crit_sec_diag_prim_dis
     * [en] Sek. Diagnose: Primär
     * [de] Sek. Diagnose: Primär</pre>
     * @return [en] Sek. Diagnose: Primär, [de] Sek. Diagnose: Primär
     */
    public static String getRulesTxtCritSecDiagPrimDis() {
        return get(RULES_TXT_CRIT_SEC_DIAG_PRIM_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEC_DIAG_PRIM_TOOLTIP_1
     * SQLite key: rules_txt_crit_sec_diag_prim_tooltip_1
     * [en] Die Diagnose, zu der die sekundäre Diagnose in Bezug steht. Siehe Diagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code .
     * [de] Die Diagnose, zu der die sekundäre Diagnose in Bezug steht. Siehe Diagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code .</pre>
     * @return [en] Die Diagnose, zu der die sekundäre Diagnose in Bezug steht. Siehe Diagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code ., [de] Die Diagnose, zu der die sekundäre Diagnose in Bezug steht. Siehe Diagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code .
     */
    public static String getRulesTxtCritSecDiagPrimTooltip1() {
        return get(RULES_TXT_CRIT_SEC_DIAG_PRIM_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEC_DIAG_TOOLTIP_1_1
     * SQLite key: rules_txt_crit_sec_diag_tooltip_1_1
     * [en] Die Sekundär-Diagnose ist in ein Code aus der Kreuz-Stern-Systematik (der Sterncode) oder ein anderer optionaler Kode.
     * [de] Die Sekundär-Diagnose ist in ein Code aus der Kreuz-Stern-Systematik (der Sterncode) oder ein anderer optionaler Kode.</pre>
     * @return [en] Die Sekundär-Diagnose ist in ein Code aus der Kreuz-Stern-Systematik (der Sterncode) oder ein anderer optionaler Kode., [de] Die Sekundär-Diagnose ist in ein Code aus der Kreuz-Stern-Systematik (der Sterncode) oder ein anderer optionaler Kode.
     */
    public static String getRulesTxtCritSecDiagTooltip11() {
        return get(RULES_TXT_CRIT_SEC_DIAG_TOOLTIP_1_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEC_DIAG_TYPE_DIS
     * SQLite key: rules_txt_crit_sec_diag_type_dis
     * [en] Sek. Diagnose: Typ
     * [de] Sek. Diagnose: Typ</pre>
     * @return [en] Sek. Diagnose: Typ, [de] Sek. Diagnose: Typ
     */
    public static String getRulesTxtCritSecDiagTypeDis() {
        return get(RULES_TXT_CRIT_SEC_DIAG_TYPE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_1
     * SQLite key: rules_txt_crit_separation_date_tooltip_1
     * [en] Entlassungsdatum ist der letzte Behandlungstag im Krankenhaus.
     * [de] Entlassungsdatum ist der letzte Behandlungstag im Krankenhaus.</pre>
     * @return [en] Entlassungsdatum ist der letzte Behandlungstag im Krankenhaus., [de] Entlassungsdatum ist der letzte Behandlungstag im Krankenhaus.
     */
    public static String getRulesTxtCritSeparationDateTooltip1() {
        return get(RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2
     * SQLite key: rules_txt_crit_separation_date_tooltip_2
     * [en] Format: YYYYMMDD
     * [de] Format: YYYYMMDD</pre>
     * ATTENTION this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_100_RECHNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_107_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_118_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_130_TAGDERENTBINDUNG_1! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_131_TAGDERENTBINDUNG_2! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_13_HE_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_171_KLINIK_AUFNAHMEDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_180_KLINIK_ENTLASSUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_28_HM_VERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_40_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_52_MVERORDNUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_56_GEBURTSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_69_VERLEGUNGSDATUM! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_83_ENTGELTABRECHNUNGBIS! this value ('Format: YYYYMMDD') seems to be also defined under the key RULES_TEMP_84_ENTGELTABRECHNUNGVON!
     * @return [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     */
    public static String getRulesTxtCritSeparationDateTooltip2() {
        return get(RULES_TXT_CRIT_SEPARATION_DATE_TOOLTIP_2).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEPARATION_DAY_DIS
     * SQLite key: rules_txt_crit_separation_day_dis
     * [en] Entlassungstag
     * [de] Entlassungstag</pre>
     * @return [en] Entlassungstag, [de] Entlassungstag
     */
    public static String getRulesTxtCritSeparationDayDis() {
        return get(RULES_TXT_CRIT_SEPARATION_DAY_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEPARATION_DAY_TIME_DIS
     * SQLite key: rules_txt_crit_separation_day_time_dis
     * [en] Entlassungsuhrzeit
     * [de] Entlassungsuhrzeit</pre>
     * @return [en] Entlassungsuhrzeit, [de] Entlassungsuhrzeit
     */
    public static String getRulesTxtCritSeparationDayTimeDis() {
        return get(RULES_TXT_CRIT_SEPARATION_DAY_TIME_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEPARATION_DAY_TIME_TOOLTIP_1
     * SQLite key: rules_txt_crit_separation_day_time_tooltip_1
     * [en] Uhrzeit, zu der der Patient am letzten Tag des Krankenhausaufenthaltes entlassen worden ist.
     * [de] Uhrzeit, zu der der Patient am letzten Tag des Krankenhausaufenthaltes entlassen worden ist.</pre>
     * @return [en] Uhrzeit, zu der der Patient am letzten Tag des Krankenhausaufenthaltes entlassen worden ist., [de] Uhrzeit, zu der der Patient am letzten Tag des Krankenhausaufenthaltes entlassen worden ist.
     */
    public static String getRulesTxtCritSeparationDayTimeTooltip1() {
        return get(RULES_TXT_CRIT_SEPARATION_DAY_TIME_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEPARATION_DAY_TOOLTIP_1
     * SQLite key: rules_txt_crit_separation_day_tooltip_1
     * [en] Tag der Entlassung aus stationärer Behandlung.
     * [de] Tag der Entlassung aus stationärer Behandlung.</pre>
     * @return [en] Tag der Entlassung aus stationärer Behandlung., [de] Tag der Entlassung aus stationärer Behandlung.
     */
    public static String getRulesTxtCritSeparationDayTooltip1() {
        return get(RULES_TXT_CRIT_SEPARATION_DAY_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEPARATION_MONTH_DIS
     * SQLite key: rules_txt_crit_separation_month_dis
     * [en] Entlassungsmonat
     * [de] Entlassungsmonat</pre>
     * @return [en] Entlassungsmonat, [de] Entlassungsmonat
     */
    public static String getRulesTxtCritSeparationMonthDis() {
        return get(RULES_TXT_CRIT_SEPARATION_MONTH_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEPARATION_MONTH_TOOLTIP_1
     * SQLite key: rules_txt_crit_separation_month_tooltip_1
     * [en] Monat, in den die Entlassung fällt.
     * [de] Monat, in den die Entlassung fällt.</pre>
     * @return [en] Monat, in den die Entlassung fällt., [de] Monat, in den die Entlassung fällt.
     */
    public static String getRulesTxtCritSeparationMonthTooltip1() {
        return get(RULES_TXT_CRIT_SEPARATION_MONTH_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEPARATION_WEEK_DAY_DIS
     * SQLite key: rules_txt_crit_separation_week_day_dis
     * [en] Entlassungswochentag
     * [de] Entlassungswochentag</pre>
     * @return [en] Entlassungswochentag, [de] Entlassungswochentag
     */
    public static String getRulesTxtCritSeparationWeekDayDis() {
        return get(RULES_TXT_CRIT_SEPARATION_WEEK_DAY_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEPARATION_YEAR_DIS
     * SQLite key: rules_txt_crit_separation_year_dis
     * [en] Entlassungsjahr
     * [de] Entlassungsjahr</pre>
     * @return [en] Entlassungsjahr, [de] Entlassungsjahr
     */
    public static String getRulesTxtCritSeparationYearDis() {
        return get(RULES_TXT_CRIT_SEPARATION_YEAR_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SEPARATION_YEAR_TOOLTIP_1
     * SQLite key: rules_txt_crit_separation_year_tooltip_1
     * [en] Jahr, in das die Entlassung fällt.
     * [de] Jahr, in das die Entlassung fällt.</pre>
     * @return [en] Jahr, in das die Entlassung fällt., [de] Jahr, in das die Entlassung fällt.
     */
    public static String getRulesTxtCritSeparationYearTooltip1() {
        return get(RULES_TXT_CRIT_SEPARATION_YEAR_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_FULL_HIMIGROUP_COUNT_DIS
     * SQLite key: rules_txt_crit_sole_full_himigroup_count_dis
     * [en] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelgruppe
     * [de] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelgruppe</pre>
     * @return [en] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelgruppe, [de] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelgruppe
     */
    public static String getRulesTxtCritSoleFullHimigroupCountDis() {
        return get(RULES_TXT_CRIT_SOLE_FULL_HIMIGROUP_COUNT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_FULL_HPN_NUMBER_DAK_DIS
     * SQLite key: rules_txt_crit_sole_full_hpn_number_dak_dis
     * [en] Hilfsmittel: Gesamtmenge für Hilfsmittelpositionsnummer
     * [de] Hilfsmittel: Gesamtmenge für Hilfsmittelpositionsnummer</pre>
     * @return [en] Hilfsmittel: Gesamtmenge für Hilfsmittelpositionsnummer, [de] Hilfsmittel: Gesamtmenge für Hilfsmittelpositionsnummer
     */
    public static String getRulesTxtCritSoleFullHpnNumberDakDis() {
        return get(RULES_TXT_CRIT_SOLE_FULL_HPN_NUMBER_DAK_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_FULL_HPN_PRICE_DAK_DIS
     * SQLite key: rules_txt_crit_sole_full_hpn_price_dak_dis
     * [en] Hilfsmittel: Gesamtpreis für Hilfsmittelpositionsnummer
     * [de] Hilfsmittel: Gesamtpreis für Hilfsmittelpositionsnummer</pre>
     * @return [en] Hilfsmittel: Gesamtpreis für Hilfsmittelpositionsnummer, [de] Hilfsmittel: Gesamtpreis für Hilfsmittelpositionsnummer
     */
    public static String getRulesTxtCritSoleFullHpnPriceDakDis() {
        return get(RULES_TXT_CRIT_SOLE_FULL_HPN_PRICE_DAK_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_FULL_HPN_PRICE_DIS
     * SQLite key: rules_txt_crit_sole_full_hpn_price_dis
     * [en] Heil- und Hilfsmittel: Gesamtpreis für PZN
     * [de] Heil- und Hilfsmittel: Gesamtpreis für PZN</pre>
     * @return [en] Heil- und Hilfsmittel: Gesamtpreis für PZN, [de] Heil- und Hilfsmittel: Gesamtpreis für PZN
     */
    public static String getRulesTxtCritSoleFullHpnPriceDis() {
        return get(RULES_TXT_CRIT_SOLE_FULL_HPN_PRICE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_FULL_PRICE_DAK_DIS
     * SQLite key: rules_txt_crit_sole_full_price_dak_dis
     * [en] Hilfsmittel: Gesamtpreis
     * [de] Hilfsmittel: Gesamtpreis</pre>
     * @return [en] Hilfsmittel: Gesamtpreis, [de] Hilfsmittel: Gesamtpreis
     */
    public static String getRulesTxtCritSoleFullPriceDakDis() {
        return get(RULES_TXT_CRIT_SOLE_FULL_PRICE_DAK_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_FULL_PRICE_DIS
     * SQLite key: rules_txt_crit_sole_full_price_dis
     * [en] Heil- und Hilfsmittel: Gesamtpreis
     * [de] Heil- und Hilfsmittel: Gesamtpreis</pre>
     * @return [en] Heil- und Hilfsmittel: Gesamtpreis, [de] Heil- und Hilfsmittel: Gesamtpreis
     */
    public static String getRulesTxtCritSoleFullPriceDis() {
        return get(RULES_TXT_CRIT_SOLE_FULL_PRICE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_FULL_PZN_NUMBER_DIS
     * SQLite key: rules_txt_crit_sole_full_pzn_number_dis
     * [en] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelnummer
     * [de] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelnummer</pre>
     * @return [en] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelnummer, [de] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelnummer
     */
    public static String getRulesTxtCritSoleFullPznNumberDis() {
        return get(RULES_TXT_CRIT_SOLE_FULL_PZN_NUMBER_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_HIMIGROUP_PRICE_DIS
     * SQLite key: rules_txt_crit_sole_himigroup_price_dis
     * [en] Heil- und Hilfsmittel: Gesamtpreis für Hilfsmittelgruppe
     * [de] Heil- und Hilfsmittel: Gesamtpreis für Hilfsmittelgruppe</pre>
     * @return [en] Heil- und Hilfsmittel: Gesamtpreis für Hilfsmittelgruppe, [de] Heil- und Hilfsmittel: Gesamtpreis für Hilfsmittelgruppe
     */
    public static String getRulesTxtCritSoleHimigroupPriceDis() {
        return get(RULES_TXT_CRIT_SOLE_HIMIGROUP_PRICE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_HIMINUMBER_DIS
     * SQLite key: rules_txt_crit_sole_himinumber_dis
     * [en] Heil- und Hilfsmittel: Hilfsmittelnummer
     * [de] Heil- und Hilfsmittel: Hilfsmittelnummer</pre>
     * @return [en] Heil- und Hilfsmittel: Hilfsmittelnummer, [de] Heil- und Hilfsmittel: Hilfsmittelnummer
     */
    public static String getRulesTxtCritSoleHiminumberDis() {
        return get(RULES_TXT_CRIT_SOLE_HIMINUMBER_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_HPN_DAK_DIS
     * SQLite key: rules_txt_crit_sole_hpn_dak_dis
     * [en] Hilfsmittel: Hilfsmittelpositionsnummer
     * [de] Hilfsmittel: Hilfsmittelpositionsnummer</pre>
     * @return [en] Hilfsmittel: Hilfsmittelpositionsnummer, [de] Hilfsmittel: Hilfsmittelpositionsnummer
     */
    public static String getRulesTxtCritSoleHpnDakDis() {
        return get(RULES_TXT_CRIT_SOLE_HPN_DAK_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_HPN_DIS
     * SQLite key: rules_txt_crit_sole_hpn_dis
     * [en] Heil- und Hilfsmittel: PZN
     * [de] Heil- und Hilfsmittel: PZN</pre>
     * @return [en] Heil- und Hilfsmittel: PZN, [de] Heil- und Hilfsmittel: PZN
     */
    public static String getRulesTxtCritSoleHpnDis() {
        return get(RULES_TXT_CRIT_SOLE_HPN_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_HPN_TOOLTIP_1_2
     * SQLite key: rules_txt_crit_sole_hpn_tooltip_1_2
     * [en]
     * [de]</pre>
     * @return [en], [de]
     */
    public static String getRulesTxtCritSoleHpnTooltip12() {
        return get(RULES_TXT_CRIT_SOLE_HPN_TOOLTIP_1_2).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_NUMBER_DAK_DIS
     * SQLite key: rules_txt_crit_sole_number_dak_dis
     * [en] Hilfsmittel: Menge
     * [de] Hilfsmittel: Menge</pre>
     * @return [en] Hilfsmittel: Menge, [de] Hilfsmittel: Menge
     */
    public static String getRulesTxtCritSoleNumberDakDis() {
        return get(RULES_TXT_CRIT_SOLE_NUMBER_DAK_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_NUMBER_DIS
     * SQLite key: rules_txt_crit_sole_number_dis
     * [en] Heil- und Hilfsmittel: Menge
     * [de] Heil- und Hilfsmittel: Menge</pre>
     * @return [en] Heil- und Hilfsmittel: Menge, [de] Heil- und Hilfsmittel: Menge
     */
    public static String getRulesTxtCritSoleNumberDis() {
        return get(RULES_TXT_CRIT_SOLE_NUMBER_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_PRESCRIPT_DATE_DAK_DIS
     * SQLite key: rules_txt_crit_sole_prescript_date_dak_dis
     * [en] Hilfsmittel: Verordnungsdatum
     * [de] Hilfsmittel: Verordnungsdatum</pre>
     * @return [en] Hilfsmittel: Verordnungsdatum, [de] Hilfsmittel: Verordnungsdatum
     */
    public static String getRulesTxtCritSolePrescriptDateDakDis() {
        return get(RULES_TXT_CRIT_SOLE_PRESCRIPT_DATE_DAK_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_PRESCRIPT_DATE_DIS
     * SQLite key: rules_txt_crit_sole_prescript_date_dis
     * [en] Heil- und Hilfsmittel: Verordnungsdatum
     * [de] Heil- und Hilfsmittel: Verordnungsdatum</pre>
     * @return [en] Heil- und Hilfsmittel: Verordnungsdatum, [de] Heil- und Hilfsmittel: Verordnungsdatum
     */
    public static String getRulesTxtCritSolePrescriptDateDis() {
        return get(RULES_TXT_CRIT_SOLE_PRESCRIPT_DATE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_PRICE_DAK_DIS
     * SQLite key: rules_txt_crit_sole_price_dak_dis
     * [en] Hilfsmittel: Einzelpreis
     * [de] Hilfsmittel: Einzelpreis</pre>
     * @return [en] Hilfsmittel: Einzelpreis, [de] Hilfsmittel: Einzelpreis
     */
    public static String getRulesTxtCritSolePriceDakDis() {
        return get(RULES_TXT_CRIT_SOLE_PRICE_DAK_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_SOLE_PRICE_DIS
     * SQLite key: rules_txt_crit_sole_price_dis
     * [en] Heil- und Hilfsmittel: Einzelpreis
     * [de] Heil- und Hilfsmittel: Einzelpreis</pre>
     * @return [en] Heil- und Hilfsmittel: Einzelpreis, [de] Heil- und Hilfsmittel: Einzelpreis
     */
    public static String getRulesTxtCritSolePriceDis() {
        return get(RULES_TXT_CRIT_SOLE_PRICE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_STATION_TOOLTIP_1
     * SQLite key: rules_txt_crit_station_tooltip_1
     * [en] Der Name der Station.
     * [de] Der Name der Station.</pre>
     * @return [en] Der Name der Station., [de] Der Name der Station.
     */
    public static String getRulesTxtCritStationTooltip1() {
        return get(RULES_TXT_CRIT_STATION_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_TAGE_OHNE_BERECHNUNG_PRO_ENTGELT_DIS
     * SQLite key: rules_txt_crit_tage_ohne_berechnung_pro_entgelt_dis
     * [en] Tage ohne Berechnung je Entgelt
     * [de] Tage ohne Berechnung je Entgelt</pre>
     * @return [en] Tage ohne Berechnung je Entgelt, [de] Tage ohne Berechnung je Entgelt
     */
    public static String getRulesTxtCritTageOhneBerechnungProEntgeltDis() {
        return get(RULES_TXT_CRIT_TAGE_OHNE_BERECHNUNG_PRO_ENTGELT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_TIME_OF_STAY_IN_HOURS_DIS
     * SQLite key: rules_txt_crit_time_of_stay_in_hours_dis
     * [en] Verweildauer in Stunden
     * [de] Verweildauer in Stunden</pre>
     * @return [en] Verweildauer in Stunden, [de] Verweildauer in Stunden
     */
    public static String getRulesTxtCritTimeOfStayInHoursDis() {
        return get(RULES_TXT_CRIT_TIME_OF_STAY_IN_HOURS_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_TIME_OF_STAY_IN_HOURS_TOOLTIP_1
     * SQLite key: rules_txt_crit_time_of_stay_in_hours_tooltip_1
     * [en] Siehe Verweildauer. Hier erfolgt die Angabe in Stunden und nicht in Tagen.
     * [de] Siehe Verweildauer. Hier erfolgt die Angabe in Stunden und nicht in Tagen.</pre>
     * @return [en] Siehe Verweildauer. Hier erfolgt die Angabe in Stunden und nicht in Tagen., [de] Siehe Verweildauer. Hier erfolgt die Angabe in Stunden und nicht in Tagen.
     */
    public static String getRulesTxtCritTimeOfStayInHoursTooltip1() {
        return get(RULES_TXT_CRIT_TIME_OF_STAY_IN_HOURS_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_TOP_LENGTH_OF_STAY_DIS
     * SQLite key: rules_txt_crit_top_length_of_stay_dis
     * [en] obere Grenzverweildauer
     * [de] obere Grenzverweildauer</pre>
     * @return [en] obere Grenzverweildauer, [de] obere Grenzverweildauer
     */
    public static String getRulesTxtCritTopLengthOfStayDis() {
        return get(RULES_TXT_CRIT_TOP_LENGTH_OF_STAY_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_TRANSFER_DATE_DIS
     * SQLite key: rules_txt_crit_transfer_date_dis
     * [en] Verlegungsdatum
     * [de] Verlegungsdatum</pre>
     * @return [en] Verlegungsdatum, [de] Verlegungsdatum
     */
    public static String getRulesTxtCritTransferDateDis() {
        return get(RULES_TXT_CRIT_TRANSFER_DATE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_TRANSFER_DATE_TOOLTIP_1
     * SQLite key: rules_txt_crit_transfer_date_tooltip_1
     * [en] Datum des letzen Tages in der vorhergehenden Fachabteilung .
     * [de] Datum des letzen Tages in der vorhergehenden Fachabteilung .</pre>
     * @return [en] Datum des letzen Tages in der vorhergehenden Fachabteilung ., [de] Datum des letzen Tages in der vorhergehenden Fachabteilung .
     */
    public static String getRulesTxtCritTransferDateTooltip1() {
        return get(RULES_TXT_CRIT_TRANSFER_DATE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_TRANSFER_DAY_TIME_DIS
     * SQLite key: rules_txt_crit_transfer_day_time_dis
     * [en] Verlegungsuhrzeit
     * [de] Verlegungsuhrzeit</pre>
     * @return [en] Verlegungsuhrzeit, [de] Verlegungsuhrzeit
     */
    public static String getRulesTxtCritTransferDayTimeDis() {
        return get(RULES_TXT_CRIT_TRANSFER_DAY_TIME_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_TRANSFER_DAY_TIME_TOOLTIP_1
     * SQLite key: rules_txt_crit_transfer_day_time_tooltip_1
     * [en] Uhrzeit, zu der der Patient in ein anderes Krankenhaus verlegt worden ist.
     * [de] Uhrzeit, zu der der Patient in ein anderes Krankenhaus verlegt worden ist.</pre>
     * @return [en] Uhrzeit, zu der der Patient in ein anderes Krankenhaus verlegt worden ist., [de] Uhrzeit, zu der der Patient in ein anderes Krankenhaus verlegt worden ist.
     */
    public static String getRulesTxtCritTransferDayTimeTooltip1() {
        return get(RULES_TXT_CRIT_TRANSFER_DAY_TIME_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_VACATION_DIS
     * SQLite key: rules_txt_crit_vacation_dis
     * [en] Urlaub
     * [de] Urlaub</pre>
     * @return [en] Urlaub, [de] Urlaub
     */
    public static String getRulesTxtCritVacationDis() {
        return get(RULES_TXT_CRIT_VACATION_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_VOLUNTARY_DAYS_DIS
     * SQLite key: rules_txt_crit_voluntary_days_dis
     * [en] Tage ohne Berechnung
     * [de] Tage ohne Berechnung</pre>
     * @return [en] Tage ohne Berechnung, [de] Tage ohne Berechnung
     */
    public static String getRulesTxtCritVoluntaryDaysDis() {
        return get(RULES_TXT_CRIT_VOLUNTARY_DAYS_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_VOLUNTARY_DAYS_TOOLTIP_1
     * SQLite key: rules_txt_crit_voluntary_days_tooltip_1
     * [en] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen.
     * [de] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen.</pre>
     * @return [en] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen., [de] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen.
     */
    public static String getRulesTxtCritVoluntaryDaysTooltip1() {
        return get(RULES_TXT_CRIT_VOLUNTARY_DAYS_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_VWD_DIS
     * SQLite key: rules_txt_crit_vwd_dis
     * [en] Verweildauer
     * [de] Verweildauer</pre>
     * @return [en] Verweildauer, [de] Verweildauer
     */
    public static String getRulesTxtCritVwdDis() {
        return get(RULES_TXT_CRIT_VWD_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_WEIGHT_DIS
     * SQLite key: rules_txt_crit_weight_dis
     * [en] Gewicht
     * [de] Gewicht</pre>
     * @return [en] Gewicht, [de] Gewicht
     */
    public static String getRulesTxtCritWeightDis() {
        return get(RULES_TXT_CRIT_WEIGHT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_WEIGHT_TOOLTIP_1
     * SQLite key: rules_txt_crit_weight_tooltip_1
     * [en] Das Aufnahmegewicht eines Kindes unter einem Jahr in Gramm.
     * [de] Das Aufnahmegewicht eines Kindes unter einem Jahr in Gramm.</pre>
     * @return [en] Das Aufnahmegewicht eines Kindes unter einem Jahr in Gramm., [de] Das Aufnahmegewicht eines Kindes unter einem Jahr in Gramm.
     */
    public static String getRulesTxtCritWeightTooltip1() {
        return get(RULES_TXT_CRIT_WEIGHT_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ZIP_CODE_DIS
     * SQLite key: rules_txt_crit_zip_code_dis
     * [en] Postleitzahl
     * [de] Postleitzahl</pre>
     * @return [en] Postleitzahl, [de] Postleitzahl
     */
    public static String getRulesTxtCritZipCodeDis() {
        return get(RULES_TXT_CRIT_ZIP_CODE_DIS).value;
    }

    /**
     * <pre>RULES_TXT_CRIT_ZIP_CODE_TOOLTIP_1
     * SQLite key: rules_txt_crit_zip_code_tooltip_1
     * [en] Die Postleitzahl des Wohnortes des Patienten.
     * [de] Die Postleitzahl des Wohnortes des Patienten.</pre>
     * @return [en] Die Postleitzahl des Wohnortes des Patienten., [de] Die Postleitzahl des Wohnortes des Patienten.
     */
    public static String getRulesTxtCritZipCodeTooltip1() {
        return get(RULES_TXT_CRIT_ZIP_CODE_TOOLTIP_1).value;
    }

    /**
     * <pre>RULES_TXT_DOSING
     * SQLite key: rules_txt_dosing
     * [en] Dosierung
     * [de] Dosierung</pre>
     * @return [en] Dosierung, [de] Dosierung
     */
    public static String getRulesTxtDosing() {
        return get(RULES_TXT_DOSING).value;
    }

    /**
     * <pre>RULES_TXT_GROUP_CARE_DATA_DIS
     * SQLite key: rules_txt_group_care_data_dis
     * [en] Pflegedaten
     * [de] Pflegedaten</pre>
     * @return [en] Pflegedaten, [de] Pflegedaten
     */
    public static String getRulesTxtGroupCareDataDis() {
        return get(RULES_TXT_GROUP_CARE_DATA_DIS).value;
    }

    /**
     * <pre>RULES_TXT_GROUP_LABOR_DIS
     * SQLite key: rules_txt_group_labor_dis
     * [en] Labor
     * [de] Labor</pre>
     * @return [en] Labor, [de] Labor
     */
    public static String getRulesTxtGroupLaborDis() {
        return get(RULES_TXT_GROUP_LABOR_DIS).value;
    }

    /**
     * <pre>RULES_TXT_GROUP_MOVEMENT_DIS
     * SQLite key: rules_txt_group_movement_dis
     * [en] Bewegungen
     * [de] Bewegungen</pre>
     * @return [en] Bewegungen, [de] Bewegungen
     */
    public static String getRulesTxtGroupMovementDis() {
        return get(RULES_TXT_GROUP_MOVEMENT_DIS).value;
    }

    /**
     * <pre>RULES_TXT_GROUP_OTHERS_DIS
     * SQLite key: rules_txt_group_others_dis
     * [en] Sonstige
     * [de] Sonstige</pre>
     * @return [en] Sonstige, [de] Sonstige
     */
    public static String getRulesTxtGroupOthersDis() {
        return get(RULES_TXT_GROUP_OTHERS_DIS).value;
    }

    /**
     * <pre>RULES_TXT_GROUP_PATIENT_MASTER_DATA_DIS
     * SQLite key: rules_txt_group_patient_master_data_dis
     * [en] Versicherten Stammdaten
     * [de] Versicherten Stammdaten</pre>
     * @return [en] Versicherten Stammdaten, [de] Versicherten Stammdaten
     */
    public static String getRulesTxtGroupPatientMasterDataDis() {
        return get(RULES_TXT_GROUP_PATIENT_MASTER_DATA_DIS).value;
    }

    /**
     * <pre>RULES_TXT_GROUP_PSYCH_DIS
     * SQLite key: rules_txt_group_psych_dis
     * [en] Psych-Kriterien
     * [de] Psych-Kriterien</pre>
     * @return [en] Psych-Kriterien, [de] Psych-Kriterien
     */
    public static String getRulesTxtGroupPsychDis() {
        return get(RULES_TXT_GROUP_PSYCH_DIS).value;
    }

    /**
     * <pre>RULES_TXT_GROUP_SOLE_DAK_DIS
     * SQLite key: rules_txt_group_sole_dak_dis
     * [en] Hilfsmittel
     * [de] Hilfsmittel</pre>
     * @return [en] Hilfsmittel, [de] Hilfsmittel
     */
    public static String getRulesTxtGroupSoleDakDis() {
        return get(RULES_TXT_GROUP_SOLE_DAK_DIS).value;
    }

    /**
     * <pre>RULES_TXT_HEM_INFOS
     * SQLite key: rules_txt_hem_infos
     * [en] Heilmittel
     * [de] Heilmittel</pre>
     * @return [en] Heilmittel, [de] Heilmittel
     */
    public static String getRulesTxtHemInfos() {
        return get(RULES_TXT_HEM_INFOS).value;
    }

    /**
     * <pre>RULES_TXT_INTERVAL_ADM_DATE
     * SQLite key: rules_txt_interval_adm_date
     * [en] Aufnahmedatum
     * [de] Aufnahmedatum</pre>
     * @return [en] Aufnahmedatum, [de] Aufnahmedatum
     */
    public static String getRulesTxtIntervalAdmDate() {
        return get(RULES_TXT_INTERVAL_ADM_DATE).value;
    }

    /**
     * <pre>RULES_TXT_INTERVAL_CASE
     * SQLite key: rules_txt_interval_case
     * [en] Fall
     * [de] Fall</pre>
     * @return [en] Fall, [de] Fall
     */
    public static String getRulesTxtIntervalCase() {
        return get(RULES_TXT_INTERVAL_CASE).value;
    }

    /**
     * <pre>RULES_TXT_INTERVAL_CUR_CASE
     * SQLite key: rules_txt_interval_cur_case
     * [en] Aktueller Fall
     * [de] Aktueller Fall</pre>
     * @return [en] Aktueller Fall, [de] Aktueller Fall
     */
    public static String getRulesTxtIntervalCurCase() {
        return get(RULES_TXT_INTERVAL_CUR_CASE).value;
    }

    /**
     * <pre>RULES_TXT_INTERVAL_DAYS
     * SQLite key: rules_txt_interval_days
     * [en] Tag(e)
     * [de] Tag(e)</pre>
     * @return [en] Tag(e), [de] Tag(e)
     */
    public static String getRulesTxtIntervalDays() {
        return get(RULES_TXT_INTERVAL_DAYS).value;
    }

    /**
     * <pre>RULES_TXT_INTERVAL_MONTHS
     * SQLite key: rules_txt_interval_months
     * [en] Monat(e)
     * [de] Monat(e)</pre>
     * @return [en] Monat(e), [de] Monat(e)
     */
    public static String getRulesTxtIntervalMonths() {
        return get(RULES_TXT_INTERVAL_MONTHS).value;
    }

    /**
     * <pre>RULES_TXT_INTERVAL_OGVD
     * SQLite key: rules_txt_interval_ogvd
     * [en] OGVD
     * [de] OGVD</pre>
     * @return [en] OGVD, [de] OGVD
     */
    public static String getRulesTxtIntervalOgvd() {
        return get(RULES_TXT_INTERVAL_OGVD).value;
    }

    /**
     * <pre>RULES_TXT_INTERVAL_QUARTERS
     * SQLite key: rules_txt_interval_quarters
     * [en] Quartal(e)
     * [de] Quartal(e)</pre>
     * @return [en] Quartal(e), [de] Quartal(e)
     */
    public static String getRulesTxtIntervalQuarters() {
        return get(RULES_TXT_INTERVAL_QUARTERS).value;
    }

    /**
     * <pre>RULES_TXT_INTERVAL_YEARS
     * SQLite key: rules_txt_interval_years
     * [en] Jahr(e)
     * [de] Jahr(e)</pre>
     * @return [en] Jahr(e), [de] Jahr(e)
     */
    public static String getRulesTxtIntervalYears() {
        return get(RULES_TXT_INTERVAL_YEARS).value;
    }

    /**
     * <pre>RULES_TXT_LABORATORY_VALUE
     * SQLite key: rules_txt_laboratory_value
     * [en] Laborwert
     * [de] Laborwert</pre>
     * @return [en] Laborwert, [de] Laborwert
     */
    public static String getRulesTxtLaboratoryValue() {
        return get(RULES_TXT_LABORATORY_VALUE).value;
    }

    /**
     * <pre>RULES_TXT_LIST_ADD
     * SQLite key: rules_txt_list_add
     * [en] Hinzufügen
     * [de] Hinzufügen</pre>
     * @return [en] Hinzufügen, [de] Hinzufügen
     */
    public static String getRulesTxtListAdd() {
        return get(RULES_TXT_LIST_ADD).value;
    }

    /**
     * <pre>RULES_TXT_LIST_CHANGE
     * SQLite key: rules_txt_list_change
     * [en] Ändern
     * [de] Ändern</pre>
     * @return [en] Ändern, [de] Ändern
     */
    public static String getRulesTxtListChange() {
        return get(RULES_TXT_LIST_CHANGE).value;
    }

    /**
     * <pre>RULES_TXT_LIST_DELETE
     * SQLite key: rules_txt_list_delete
     * [en] Löschen
     * [de] Löschen</pre>
     * @return [en] Löschen, [de] Löschen
     */
    public static String getRulesTxtListDelete() {
        return get(RULES_TXT_LIST_DELETE).value;
    }

    /**
     * <pre>RULES_TXT_LIST_DO_NOTHING
     * SQLite key: rules_txt_list_do_nothing
     * [en] Keine Aktion
     * [de] Keine Aktion</pre>
     * @return [en] Keine Aktion, [de] Keine Aktion
     */
    public static String getRulesTxtListDoNothing() {
        return get(RULES_TXT_LIST_DO_NOTHING).value;
    }

    /**
     * <pre>RULES_TXT_MEDICINE_COSTS
     * SQLite key: rules_txt_medicine_costs
     * [en] Arzneimittel
     * [de] Arzneimittel</pre>
     * @return [en] Arzneimittel, [de] Arzneimittel
     */
    public static String getRulesTxtMedicineCosts() {
        return get(RULES_TXT_MEDICINE_COSTS).value;
    }

    /**
     * <pre>RULES_TXT_NO_INTERVAL
     * SQLite key: rules_txt_no_interval
     * [en] keine Angabe
     * [de] keine Angabe</pre>
     * @return [en] keine Angabe, [de] keine Angabe
     */
    public static String getRulesTxtNoInterval() {
        return get(RULES_TXT_NO_INTERVAL).value;
    }

    /**
     * <pre>RULES_TXT_OP_AND
     * SQLite key: rules_txt_op_and
     * [en] und ( &amp;&amp; )
     * [de] und ( &amp;&amp; )</pre>
     * @return [en] und ( {@literal &}{@literal &} ), [de] und ( {@literal &}{@literal &} )
     */
    public static String getRulesTxtOpAnd() {
        return get(RULES_TXT_OP_AND).value;
    }

    /**
     * <pre>RULES_TXT_OP_CONCATENATE
     * SQLite key: rules_txt_op_concatenate
     * [en] verketten ( | )
     * [de] verketten ( | )</pre>
     * @return [en] verketten ( | ), [de] verketten ( | )
     */
    public static String getRulesTxtOpConcatenate() {
        return get(RULES_TXT_OP_CONCATENATE).value;
    }

    /**
     * <pre>RULES_TXT_OP_DIVIDE
     * SQLite key: rules_txt_op_divide
     * [en] geteilt durch ( / )
     * [de] geteilt durch ( / )</pre>
     * @return [en] geteilt durch ( / ), [de] geteilt durch ( / )
     */
    public static String getRulesTxtOpDivide() {
        return get(RULES_TXT_OP_DIVIDE).value;
    }

    /**
     * <pre>RULES_TXT_OP_EQUAL
     * SQLite key: rules_txt_op_equal
     * [en] gleich ( == )
     * [de] gleich ( == )</pre>
     * @return [en] gleich ( == ), [de] gleich ( == )
     */
    public static String getRulesTxtOpEqual() {
        return get(RULES_TXT_OP_EQUAL).value;
    }

    /**
     * <pre>RULES_TXT_OP_GT
     * SQLite key: rules_txt_op_gt
     * [en] größer ( &amp;gt; )
     * [de] größer ( &amp;gt; )</pre>
     * @return [en] größer ( {@literal &}gt; ), [de] größer ( {@literal &}gt; )
     */
    public static String getRulesTxtOpGt() {
        return get(RULES_TXT_OP_GT).value;
    }

    /**
     * <pre>RULES_TXT_OP_GT_EQUAL
     * SQLite key: rules_txt_op_gt_equal
     * [en] größer gleich ( &amp;gt;= )
     * [de] größer gleich ( &amp;gt;= )</pre>
     * @return [en] größer gleich ( {@literal &}gt;= ), [de] größer gleich ( {@literal &}gt;= )
     */
    public static String getRulesTxtOpGtEqual() {
        return get(RULES_TXT_OP_GT_EQUAL).value;
    }

    /**
     * <pre>RULES_TXT_OP_IN
     * SQLite key: rules_txt_op_in
     * [en] enthalten ( IN  )
     * [de] enthalten ( IN  )</pre>
     * @return [en] enthalten ( IN  ), [de] enthalten ( IN  )
     */
    public static String getRulesTxtOpIn() {
        return get(RULES_TXT_OP_IN).value;
    }

    /**
     * <pre>RULES_TXT_OP_IN_FALL
     * SQLite key: rules_txt_op_in_fall
     * [en] in Fall ( ~ )
     * [de] in Fall ( ~ )</pre>
     * @return [en] in Fall ( ~ ), [de] in Fall ( ~ )
     */
    public static String getRulesTxtOpInFall() {
        return get(RULES_TXT_OP_IN_FALL).value;
    }

    /**
     * <pre>RULES_TXT_OP_IN_TABLE
     * SQLite key: rules_txt_op_in_table
     * [en] in Tabelle ( @ )
     * [de] in Tabelle ( @ )</pre>
     * @return [en] in Tabelle ( @ ), [de] in Tabelle ( @ )
     */
    public static String getRulesTxtOpInTable() {
        return get(RULES_TXT_OP_IN_TABLE).value;
    }

    /**
     * <pre>RULES_TXT_OP_LT
     * SQLite key: rules_txt_op_lt
     * [en] kleiner ( &amp;lt; )
     * [de] kleiner ( &amp;lt; )</pre>
     * @return [en] kleiner ( {@literal &}lt; ), [de] kleiner ( {@literal &}lt; )
     */
    public static String getRulesTxtOpLt() {
        return get(RULES_TXT_OP_LT).value;
    }

    /**
     * <pre>RULES_TXT_OP_LT_EQUAL
     * SQLite key: rules_txt_op_lt_equal
     * [en] kleiner gleich ( &amp;lt;= )
     * [de] kleiner gleich ( &amp;lt;= )</pre>
     * @return [en] kleiner gleich ( {@literal &}lt;= ), [de] kleiner gleich ( {@literal &}lt;= )
     */
    public static String getRulesTxtOpLtEqual() {
        return get(RULES_TXT_OP_LT_EQUAL).value;
    }

    /**
     * <pre>RULES_TXT_OP_MANY_IN
     * SQLite key: rules_txt_op_many_in
     * [en] mehrere in ( ## )
     * [de] mehrere in ( ## )</pre>
     * @return [en] mehrere in ( ## ), [de] mehrere in ( ## )
     */
    public static String getRulesTxtOpManyIn() {
        return get(RULES_TXT_OP_MANY_IN).value;
    }

    /**
     * <pre>RULES_TXT_OP_MANY_IN_TABLE
     * SQLite key: rules_txt_op_many_in_table
     * [en] mehrere in Tabelle ( #@ )
     * [de] mehrere in Tabelle ( #@ )</pre>
     * @return [en] mehrere in Tabelle ( #@ ), [de] mehrere in Tabelle ( #@ )
     */
    public static String getRulesTxtOpManyInTable() {
        return get(RULES_TXT_OP_MANY_IN_TABLE).value;
    }

    /**
     * <pre>RULES_TXT_OP_MINUS
     * SQLite key: rules_txt_op_minus
     * [en] minus ( - )
     * [de] minus ( - )</pre>
     * @return [en] minus ( - ), [de] minus ( - )
     */
    public static String getRulesTxtOpMinus() {
        return get(RULES_TXT_OP_MINUS).value;
    }

    /**
     * <pre>RULES_TXT_OP_MULTIPL
     * SQLite key: rules_txt_op_multipl
     * [en] multipliziert ( * )
     * [de] multipliziert ( * )</pre>
     * @return [en] multipliziert ( * ), [de] multipliziert ( * )
     */
    public static String getRulesTxtOpMultipl() {
        return get(RULES_TXT_OP_MULTIPL).value;
    }

    /**
     * <pre>RULES_TXT_OP_NO_OPERATION
     * SQLite key: rules_txt_op_no_operation
     * [en] keine Operation
     * [de] keine Operation</pre>
     * @return [en] keine Operation, [de] keine Operation
     */
    public static String getRulesTxtOpNoOperation() {
        return get(RULES_TXT_OP_NO_OPERATION).value;
    }

    /**
     * <pre>RULES_TXT_OP_NOT_DOUBLE_IN
     * SQLite key: rules_txt_op_not_double_in
     * [en] nicht doppelt in ( !! )
     * [de] nicht doppelt in ( !! )</pre>
     * @return [en] nicht doppelt in ( !! ), [de] nicht doppelt in ( !! )
     */
    public static String getRulesTxtOpNotDoubleIn() {
        return get(RULES_TXT_OP_NOT_DOUBLE_IN).value;
    }

    /**
     * <pre>RULES_TXT_OP_NOT_DOUBLE_IN_TABLE
     * SQLite key: rules_txt_op_not_double_in_table
     * [en] nicht doppelt in Tabelle ( !! @ )
     * [de] nicht doppelt in Tabelle ( !! @ )</pre>
     * @return [en] nicht doppelt in Tabelle ( !! @ ), [de] nicht doppelt in Tabelle ( !! @ )
     */
    public static String getRulesTxtOpNotDoubleInTable() {
        return get(RULES_TXT_OP_NOT_DOUBLE_IN_TABLE).value;
    }

    /**
     * <pre>RULES_TXT_OP_NOT_EQUAL
     * SQLite key: rules_txt_op_not_equal
     * [en] ungleich ( != )
     * [de] ungleich ( != )</pre>
     * @return [en] ungleich ( != ), [de] ungleich ( != )
     */
    public static String getRulesTxtOpNotEqual() {
        return get(RULES_TXT_OP_NOT_EQUAL).value;
    }

    /**
     * <pre>RULES_TXT_OP_NOT_IN
     * SQLite key: rules_txt_op_not_in
     * [en] keine enthalten ( NOT IN )
     * [de] keine enthalten ( NOT IN )</pre>
     * @return [en] keine enthalten ( NOT IN ), [de] keine enthalten ( NOT IN )
     */
    public static String getRulesTxtOpNotIn() {
        return get(RULES_TXT_OP_NOT_IN).value;
    }

    /**
     * <pre>RULES_TXT_OP_NOT_IN_TABLE
     * SQLite key: rules_txt_op_not_in_table
     * [en] keine enthalten in Tabelle ( NOT IN @ )
     * [de] keine enthalten in Tabelle ( NOT IN @ )</pre>
     * @return [en] keine enthalten in Tabelle ( NOT IN @ ), [de] keine enthalten in Tabelle ( NOT IN @ )
     */
    public static String getRulesTxtOpNotInTable() {
        return get(RULES_TXT_OP_NOT_IN_TABLE).value;
    }

    /**
     * <pre>RULES_TXT_OP_OR
     * SQLite key: rules_txt_op_or
     * [en] oder ( || )
     * [de] oder ( || )</pre>
     * @return [en] oder ( || ), [de] oder ( || )
     */
    public static String getRulesTxtOpOr() {
        return get(RULES_TXT_OP_OR).value;
    }

    /**
     * <pre>RULES_TXT_OP_PLUS
     * SQLite key: rules_txt_op_plus
     * [en] plus ( + )
     * [de] plus ( + )</pre>
     * @return [en] plus ( + ), [de] plus ( + )
     */
    public static String getRulesTxtOpPlus() {
        return get(RULES_TXT_OP_PLUS).value;
    }

    /**
     * <pre>RULES_TXT_PAT_DATA
     * SQLite key: rules_txt_pat_data
     * [en] Patientendaten
     * [de] Patientendaten</pre>
     * @return [en] Patientendaten, [de] Patientendaten
     */
    public static String getRulesTxtPatData() {
        return get(RULES_TXT_PAT_DATA).value;
    }

    /**
     * <pre>RULES_TXT_PCCL_DIS
     * SQLite key: rules_txt_pccl_dis
     * [en] PCCL
     * [de] PCCL</pre>
     * ATTENTION this value ('PCCL') seems to be also defined under the key DIALOG_BATCH_GROUPING_PCCL! this value ('PCCL') seems to be also defined under the key PCCL!
     * @return [en] PCCL, [de] PCCL
     */
    public static String getRulesTxtPcclDis() {
        return get(RULES_TXT_PCCL_DIS).value;
    }

    /**
     * <pre>RULES_TXT_PEPP_READM_SK
     * SQLite key: rules_txt_pepp_readm_sk
     * [en] SK
     * [de] SK</pre>
     * @return [en] SK, [de] SK
     */
    public static String getRulesTxtPeppReadmSk() {
        return get(RULES_TXT_PEPP_READM_SK).value;
    }

    /**
     * <pre>RULES_TXT_PEPP_RESULT
     * SQLite key: rules_txt_pepp_result
     * [en] PEPP-Ergebnis
     * [de] PEPP-Ergebnis</pre>
     * @return [en] PEPP-Ergebnis, [de] PEPP-Ergebnis
     */
    public static String getRulesTxtPeppResult() {
        return get(RULES_TXT_PEPP_RESULT).value;
    }

    /**
     * <pre>RULES_TXT_PROCEDURE
     * SQLite key: rules_txt_procedure
     * [en] Prozedur
     * [de] Prozedur</pre>
     * @return [en] Prozedur, [de] Prozedur
     */
    public static String getRulesTxtProcedure() {
        return get(RULES_TXT_PROCEDURE).value;
    }

    /**
     * <pre>RULES_TXT_REQUEST_DISWARD
     * SQLite key: rules_txt_request_disward
     * [en] Station
     * [de] Station</pre>
     * @return [en] Station, [de] Station
     */
    public static String getRulesTxtRequestDisward() {
        return get(RULES_TXT_REQUEST_DISWARD).value;
    }

    /**
     * <pre>RULES_TXT_RESULT
     * SQLite key: rules_txt_result
     * [en] Ergebnis
     * [de] Ergebnis</pre>
     * ATTENTION this value ('Ergebnis') seems to be also defined under the key RESULT!
     * @return [en] Ergebnis, [de] Ergebnis
     */
    public static String getRulesTxtResult() {
        return get(RULES_TXT_RESULT).value;
    }

    /**
     * <pre>RULES_TXT_SEC_DIAGNOSE
     * SQLite key: rules_txt_sec_diagnose
     * [en] Nebendiagnose
     * [de] Nebendiagnose</pre>
     * @return [en] Nebendiagnose, [de] Nebendiagnose
     */
    public static String getRulesTxtSecDiagnose() {
        return get(RULES_TXT_SEC_DIAGNOSE).value;
    }

    /**
     * <pre>RULES_TXT_UNKNOWN
     * SQLite key: rules_txt_unknown
     * [en] Unbekannt
     * [de] Unbekannt</pre>
     * @return [en] Unbekannt, [de] Unbekannt
     */
    public static String getRulesTxtUnknown() {
        return get(RULES_TXT_UNKNOWN).value;
    }

    /**
     * <pre>RULES_UNTERE_GRENZVERWEILDAUER
     * SQLite key: rules_untere_grenzverweildauer
     * [en] untere_Grenzverweildauer
     * [de] untere_Grenzverweildauer</pre>
     * @return [en] untere_Grenzverweildauer, [de] untere_Grenzverweildauer
     */
    public static String getRulesUntereGrenzverweildauer() {
        return get(RULES_UNTERE_GRENZVERWEILDAUER).value;
    }

    /**
     * <pre>RULES_UNTERSUCHUNGSDATUM
     * SQLite key: rules_untersuchungsdatum
     * [en] Untersuchungsdatum
     * [de] Untersuchungsdatum</pre>
     * @return [en] Untersuchungsdatum, [de] Untersuchungsdatum
     */
    public static String getRulesUntersuchungsdatum() {
        return get(RULES_UNTERSUCHUNGSDATUM).value;
    }

    /**
     * <pre>RULES_VERSICHERTER_ALTER
     * SQLite key: rules_versicherter_alter
     * [en] Versicherter_Alter
     * [de] Versicherter_Alter</pre>
     * @return [en] Versicherter_Alter, [de] Versicherter_Alter
     */
    public static String getRulesVersicherterAlter() {
        return get(RULES_VERSICHERTER_ALTER).value;
    }

    /**
     * <pre>RULES_VERSICHERTER_GESCHLECHT
     * SQLite key: rules_versicherter_geschlecht
     * [en] Versicherter_Geschlecht
     * [de] Versicherter_Geschlecht</pre>
     * @return [en] Versicherter_Geschlecht, [de] Versicherter_Geschlecht
     */
    public static String getRulesVersicherterGeschlecht() {
        return get(RULES_VERSICHERTER_GESCHLECHT).value;
    }

    /**
     * <pre>RULES_VERSICHERTER_PFLEGESTUFE
     * SQLite key: rules_versicherter_pflegestufe
     * [en] Versicherter_Pflegestufe
     * [de] Versicherter_Pflegestufe</pre>
     * @return [en] Versicherter_Pflegestufe, [de] Versicherter_Pflegestufe
     */
    public static String getRulesVersicherterPflegestufe() {
        return get(RULES_VERSICHERTER_PFLEGESTUFE).value;
    }

    /**
     * <pre>RULES_VERSICHERTER_POSTLEITZAHL
     * SQLite key: rules_versicherter_postleitzahl
     * [en] Versicherter_Postleitzahl
     * [de] Versicherter_Postleitzahl</pre>
     * @return [en] Versicherter_Postleitzahl, [de] Versicherter_Postleitzahl
     */
    public static String getRulesVersicherterPostleitzahl() {
        return get(RULES_VERSICHERTER_POSTLEITZAHL).value;
    }

    /**
     * <pre>RULES_VERSICHERTER_VERSICHERTENSTATUS
     * SQLite key: rules_versicherter_versichertenstatus
     * [en] Versicherter_Versichertenstatus
     * [de] Versicherter_Versichertenstatus</pre>
     * @return [en] Versicherter_Versichertenstatus, [de] Versicherter_Versichertenstatus
     */
    public static String getRulesVersicherterVersichertenstatus() {
        return get(RULES_VERSICHERTER_VERSICHERTENSTATUS).value;
    }

    /**
     * <pre>RULES_VERWEILDAUERINSTUNDEN
     * SQLite key: rules_verweildauerinstunden
     * [en] VerweildauerInStunden
     * [de] VerweildauerInStunden</pre>
     * @return [en] VerweildauerInStunden, [de] VerweildauerInStunden
     */
    public static String getRulesVerweildauerinstunden() {
        return get(RULES_VERWEILDAUERINSTUNDEN).value;
    }

    /**
     * <pre>RULES_VPS_CRIT_GROUP
     * SQLite key: rules_vps_crit_group
     * [en] VPS Kriterien
     * [de] VPS Kriterien</pre>
     * @return [en] VPS Kriterien, [de] VPS Kriterien
     */
    public static String getRulesVpsCritGroup() {
        return get(RULES_VPS_CRIT_GROUP).value;
    }

    /**
     * <pre>RULES_VPS_DISCOVERED_AT
     * SQLite key: rules_vps_discovered_at
     * [en] VPS_Festgestelt_am
     * [de] VPS_Festgestelt_am</pre>
     * @return [en] VPS_Festgestelt_am, [de] VPS_Festgestelt_am
     */
    public static String getRulesVpsDiscoveredAt() {
        return get(RULES_VPS_DISCOVERED_AT).value;
    }

    /**
     * <pre>RULES_VPS_DISCOVERED_AT_DIS
     * SQLite key: rules_vps_discovered_at_dis
     * [en] VPS: Festgestelt am
     * [de] VPS: Festgestelt am</pre>
     * @return [en] VPS: Festgestelt am, [de] VPS: Festgestelt am
     */
    public static String getRulesVpsDiscoveredAtDis() {
        return get(RULES_VPS_DISCOVERED_AT_DIS).value;
    }

    /**
     * <pre>RULES_VPS_DISCOVERED_AT_TOOLTIP
     * SQLite key: rules_vps_discovered_at_tooltip
     * [en] VPS: VPS - Fehler wurde festgestellt am
     * [de] VPS: VPS - Fehler wurde festgestellt am</pre>
     * @return [en] VPS: VPS - Fehler wurde festgestellt am, [de] VPS: VPS - Fehler wurde festgestellt am
     */
    public static String getRulesVpsDiscoveredAtTooltip() {
        return get(RULES_VPS_DISCOVERED_AT_TOOLTIP).value;
    }

    /**
     * <pre>RULES_VPS_DISCOVERED_FROM
     * SQLite key: rules_vps_discovered_from
     * [en] VPS_Festgestelt_durch
     * [de] VPS_Festgestelt_durch</pre>
     * @return [en] VPS_Festgestelt_durch, [de] VPS_Festgestelt_durch
     */
    public static String getRulesVpsDiscoveredFrom() {
        return get(RULES_VPS_DISCOVERED_FROM).value;
    }

    /**
     * <pre>RULES_VPS_DISCOVERED_FROM_DIS
     * SQLite key: rules_vps_discovered_from_dis
     * [en] VPS: Festgestelt durch
     * [de] VPS: Festgestelt durch</pre>
     * @return [en] VPS: Festgestelt durch, [de] VPS: Festgestelt durch
     */
    public static String getRulesVpsDiscoveredFromDis() {
        return get(RULES_VPS_DISCOVERED_FROM_DIS).value;
    }

    /**
     * <pre>RULES_VPS_DISCOVERED_FROM_TOOLTIP
     * SQLite key: rules_vps_discovered_from_tooltip
     * [en] VPS: VPS - Fehler wurde festgestellt durch
     * [de] VPS: VPS - Fehler wurde festgestellt durch</pre>
     * @return [en] VPS: VPS - Fehler wurde festgestellt durch, [de] VPS: VPS - Fehler wurde festgestellt durch
     */
    public static String getRulesVpsDiscoveredFromTooltip() {
        return get(RULES_VPS_DISCOVERED_FROM_TOOLTIP).value;
    }

    /**
     * <pre>RULES_VPS_ERR_CODE
     * SQLite key: rules_vps_err_code
     * [en] VPS_Fehlercode
     * [de] VPS_Fehlercode</pre>
     * @return [en] VPS_Fehlercode, [de] VPS_Fehlercode
     */
    public static String getRulesVpsErrCode() {
        return get(RULES_VPS_ERR_CODE).value;
    }

    /**
     * <pre>RULES_VPS_ERR_CODE_DIS
     * SQLite key: rules_vps_err_code_dis
     * [en] VPS: Fehlercode
     * [de] VPS: Fehlercode</pre>
     * @return [en] VPS: Fehlercode, [de] VPS: Fehlercode
     */
    public static String getRulesVpsErrCodeDis() {
        return get(RULES_VPS_ERR_CODE_DIS).value;
    }

    /**
     * <pre>RULES_VPS_ERR_CODE_TOOLTIP
     * SQLite key: rules_vps_err_code_tooltip
     * [en] VPS: Fehlercode aus der Iskv
     * [de] VPS: Fehlercode aus der Iskv</pre>
     * @return [en] VPS: Fehlercode aus der Iskv, [de] VPS: Fehlercode aus der Iskv
     */
    public static String getRulesVpsErrCodeTooltip() {
        return get(RULES_VPS_ERR_CODE_TOOLTIP).value;
    }

    /**
     * <pre>RULES_VPS_ERR_TEXT
     * SQLite key: rules_vps_err_text
     * [en] VPS_Fehlertext
     * [de] VPS_Fehlertext</pre>
     * @return [en] VPS_Fehlertext, [de] VPS_Fehlertext
     */
    public static String getRulesVpsErrText() {
        return get(RULES_VPS_ERR_TEXT).value;
    }

    /**
     * <pre>RULES_VPS_ERR_TEXT_DIS
     * SQLite key: rules_vps_err_text_dis
     * [en] VPS: Fehlertext
     * [de] VPS: Fehlertext</pre>
     * @return [en] VPS: Fehlertext, [de] VPS: Fehlertext
     */
    public static String getRulesVpsErrTextDis() {
        return get(RULES_VPS_ERR_TEXT_DIS).value;
    }

    /**
     * <pre>RULES_VPS_ERR_TEXT_TOOLTIP
     * SQLite key: rules_vps_err_text_tooltip
     * [en] VPS: Fehlertext aus der Iskv
     * [de] VPS: Fehlertext aus der Iskv</pre>
     * @return [en] VPS: Fehlertext aus der Iskv, [de] VPS: Fehlertext aus der Iskv
     */
    public static String getRulesVpsErrTextTooltip() {
        return get(RULES_VPS_ERR_TEXT_TOOLTIP).value;
    }

    /**
     * <pre>RULES_VPS_SEVERITY_LEVEL
     * SQLite key: rules_vps_severity_level
     * [en] VPS_Schweregrad
     * [de] VPS_Schweregrad</pre>
     * @return [en] VPS_Schweregrad, [de] VPS_Schweregrad
     */
    public static String getRulesVpsSeverityLevel() {
        return get(RULES_VPS_SEVERITY_LEVEL).value;
    }

    /**
     * <pre>RULES_VPS_SEVERITY_LEVEL_DIS
     * SQLite key: rules_vps_severity_level_dis
     * [en] VPS: Schweregrad
     * [de] VPS: Schweregrad</pre>
     * @return [en] VPS: Schweregrad, [de] VPS: Schweregrad
     */
    public static String getRulesVpsSeverityLevelDis() {
        return get(RULES_VPS_SEVERITY_LEVEL_DIS).value;
    }

    /**
     * <pre>RULES_VPS_SEVERITY_LEVEL_TOOLTIP
     * SQLite key: rules_vps_severity_level_tooltip
     * [en] VPS: Schweregrad des Fehlers aus der Iskv
     * [de] VPS: Schweregrad des Fehlers aus der Iskv</pre>
     * @return [en] VPS: Schweregrad des Fehlers aus der Iskv, [de] VPS: Schweregrad des Fehlers aus der Iskv
     */
    public static String getRulesVpsSeverityLevelTooltip() {
        return get(RULES_VPS_SEVERITY_LEVEL_TOOLTIP).value;
    }

    /**
     * <pre>RULES_VPS_TEST_OBJECT
     * SQLite key: rules_vps_test_object
     * [en] VPS_Prüfgegenstand
     * [de] VPS_Prüfgegenstand</pre>
     * @return [en] VPS_Prüfgegenstand, [de] VPS_Prüfgegenstand
     */
    public static String getRulesVpsTestObject() {
        return get(RULES_VPS_TEST_OBJECT).value;
    }

    /**
     * <pre>RULES_VPS_TEST_OBJECT_DIS
     * SQLite key: rules_vps_test_object_dis
     * [en] VPS: Prüfgegenstand
     * [de] VPS: Prüfgegenstand</pre>
     * @return [en] VPS: Prüfgegenstand, [de] VPS: Prüfgegenstand
     */
    public static String getRulesVpsTestObjectDis() {
        return get(RULES_VPS_TEST_OBJECT_DIS).value;
    }

    /**
     * <pre>RULES_VPS_TEST_OBJECT_TOOLTIP
     * SQLite key: rules_vps_test_object_tooltip
     * [en] VPS: Prüfgegenstand des Fehlers aus der Iskv
     * [de] VPS: Prüfgegenstand des Fehlers aus der Iskv</pre>
     * @return [en] VPS: Prüfgegenstand des Fehlers aus der Iskv, [de] VPS: Prüfgegenstand des Fehlers aus der Iskv
     */
    public static String getRulesVpsTestObjectTooltip() {
        return get(RULES_VPS_TEST_OBJECT_TOOLTIP).value;
    }

    /**
     * <pre>SAME_RULE_DIFFERENT_MESSAGE
     * SQLite key: same_rule_different_message
     * [en] Same rule different validation result
     * [de] Regel mit gleichem Inhalt,aber unterschiedlichen Validierungsergebnis</pre>
     * @return [en] Same rule different validation result, [de] Regel mit gleichem Inhalt,aber unterschiedlichen Validierungsergebnis
     */
    public static String getSameRuleDifferentMessage() {
        return get(SAME_RULE_DIFFERENT_MESSAGE).value;
    }

    /**
     * <pre>SAME_RULE_FOUND
     * SQLite key: same_rule_found
     * [en] Same rule with Ident is found in Pool
     * [de] Regel mit gleichen Ident und der gleichen Inhalt in dem Pool vorhanden</pre>
     * @return [en] Same rule with Ident is found in Pool, [de] Regel mit gleichen Ident und der gleichen Inhalt in dem Pool vorhanden
     */
    public static String getSameRuleFound() {
        return get(SAME_RULE_FOUND).value;
    }

    /**
     * <pre>SAME_RULE_OTHER_CAPTION
     * SQLite key: same_rule_other_caption
     * [en] Same rule with Ident but other caption is found in Pool
     * [de] Regel mit gleichen Ident und abweichender Bezeichnung in dem Pool vorhanden</pre>
     * @return [en] Same rule with Ident but other caption is found in Pool, [de] Regel mit gleichen Ident und abweichender Bezeichnung in dem Pool vorhanden
     */
    public static String getSameRuleOtherCaption() {
        return get(SAME_RULE_OTHER_CAPTION).value;
    }

    /**
     * <pre>SAME_RULE_OTHER_CATEGORY
     * SQLite key: same_rule_other_category
     * [en] Same rule with Ident but other rule category type is found in Pool
     * [de] Regel mit gleichen Ident und anderer Kategorie in dem Pool vorhanden</pre>
     * @return [en] Same rule with Ident but other rule category type is found in Pool, [de] Regel mit gleichen Ident und anderer Kategorie in dem Pool vorhanden
     */
    public static String getSameRuleOtherCategory() {
        return get(SAME_RULE_OTHER_CATEGORY).value;
    }

    /**
     * <pre>SAME_RULE_OTHER_ERR_TYPE
     * SQLite key: same_rule_other_err_type
     * [en] Same rule with Ident but other rule violation type is found in Pool
     * [de] Regel mit gleichen Ident und anderem Regelverletzungstyp in dem Pool vorhanden</pre>
     * @return [en] Same rule with Ident but other rule violation type is found in Pool, [de] Regel mit gleichen Ident und anderem Regelverletzungstyp in dem Pool vorhanden
     */
    public static String getSameRuleOtherErrType() {
        return get(SAME_RULE_OTHER_ERR_TYPE).value;
    }

    /**
     * <pre>SAME_RULE_OTHER_LOGIC
     * SQLite key: same_rule_other_logic
     * [en] Same rule with Ident but other logic is found in Pool
     * [de] Regel mit gleichen Ident und abweichenden Logik in dem Pool vorhanden</pre>
     * @return [en] Same rule with Ident but other logic is found in Pool, [de] Regel mit gleichen Ident und abweichenden Logik in dem Pool vorhanden
     */
    public static String getSameRuleOtherLogic() {
        return get(SAME_RULE_OTHER_LOGIC).value;
    }

    /**
     * <pre>SAME_RULE_OTHER_NUMBER
     * SQLite key: same_rule_other_number
     * [en] Same rule with Ident but other rule number is found in Pool
     * [de] Regel mit gleichen Ident und anderem Nummer in dem Pool vorhanden</pre>
     * @return [en] Same rule with Ident but other rule number is found in Pool, [de] Regel mit gleichen Ident und anderem Nummer in dem Pool vorhanden
     */
    public static String getSameRuleOtherNumber() {
        return get(SAME_RULE_OTHER_NUMBER).value;
    }

    /**
     * <pre>SAME_RULE_OTHER_RULE_TYPE
     * SQLite key: same_rule_other_rule_type
     * [en] Same rule with Ident but other rule type is found in Pool
     * [de] Regel mit gleichen Ident und anderem Regeltyp in dem Pool vorhanden</pre>
     * @return [en] Same rule with Ident but other rule type is found in Pool, [de] Regel mit gleichen Ident und anderem Regeltyp in dem Pool vorhanden
     */
    public static String getSameRuleOtherRuleType() {
        return get(SAME_RULE_OTHER_RULE_TYPE).value;
    }

    /**
     * <pre>SAME_RULE_OTHER_SUGG_LOGIC
     * SQLite key: same_rule_other_sugg_logic
     * [de] Regel mit gleichen Ident und abweichenden VorschlagsLogik in dem Pool vorhanden</pre>
     * @return [de] Regel mit gleichen Ident und abweichenden VorschlagsLogik in dem Pool vorhanden
     */
    public static String getSameRuleOtherSuggLogic() {
        return get(SAME_RULE_OTHER_SUGG_LOGIC).value;
    }

    /**
     * <pre>SAME_TABLE
     * SQLite key: same_table
     * [en] Same rule table is found in Pool
     * [de] Tabelle mit der gleichen Inhalt in dem Pool vorhanden</pre>
     * @return [en] Same rule table is found in Pool, [de] Tabelle mit der gleichen Inhalt in dem Pool vorhanden
     */
    public static String getSameTable() {
        return get(SAME_TABLE).value;
    }

    /**
     * <pre>SAME_TABLE_OTHER_COMMENT
     * SQLite key: same_table_other_comment
     * [en] Same rule table but other comment is found in Pool
     * [de] Tabelle mit der abweichenden Kommentar in dem Pool vorhanden</pre>
     * @return [en] Same rule table but other comment is found in Pool, [de] Tabelle mit der abweichenden Kommentar in dem Pool vorhanden
     */
    public static String getSameTableOtherComment() {
        return get(SAME_TABLE_OTHER_COMMENT).value;
    }

    /**
     * <pre>SAME_TABLE_OTHER_CONTENT
     * SQLite key: same_table_other_content
     * [en] Same rule table but other content is found in Pool
     * [de] Tabelle mit der abweichenden Inhalt in dem Pool vorhanden</pre>
     * @return [en] Same rule table but other content is found in Pool, [de] Tabelle mit der abweichenden Inhalt in dem Pool vorhanden
     */
    public static String getSameTableOtherContent() {
        return get(SAME_TABLE_OTHER_CONTENT).value;
    }

    /**
     * <pre>SAP_6WEEKSDEADLINE
     * SQLite key: sap_6weeksdeadline
     * [de] Vorgang außerhalb der 6-Wochen-Frist</pre>
     * @return [de] Vorgang außerhalb der 6-Wochen-Frist
     */
    public static String getSap6weeksdeadline() {
        return get(SAP_6WEEKSDEADLINE).value;
    }

    /**
     * <pre>SAP_BILLINGDATE_EMPTY
     * SQLite key: sap_billingdate_empty
     * [de] Rechnungsdatum ist nicht bekannt</pre>
     * @return [de] Rechnungsdatum ist nicht bekannt
     */
    public static String getSapBillingdateEmpty() {
        return get(SAP_BILLINGDATE_EMPTY).value;
    }

    /**
     * <pre>SAP_BILLS
     * SQLite key: sapbills
     * [en] Bills
     * [de] Rechnungen</pre>
     * ATTENTION this value ('bills') seems to be also defined under the key ADD_CASE_BILLS!
     * @return [en] Bills, [de] Rechnungen
     */
    public static String getSapBills() {
        return get(SAP_BILLS).value;
    }

    /**
     * <pre>SAP_BILLS_UPDATE_TOOLTIP
     * SQLite key: sapbills_update_tooltip
     * [en] Update the Bills from SAP
     * [de] Die Rechnung aus SAP aktualisieren</pre>
     * @return [en] Update the Bills from SAP, [de] Die Rechnung aus SAP aktualisieren
     */
    public static String getSapBillsUpdateTooltip() {
        return get(SAP_BILLS_UPDATE_TOOLTIP).value;
    }

    /**
     * <pre>SAP_REFERENCE_TYPE_BILL
     * SQLite key: sap_reference_type_bill
     * [en] Bill
     * [de] Rechnung</pre>
     * @return [en] Bill, [de] Rechnung
     */
    public static String getSapReferenceTypeBill() {
        return get(SAP_REFERENCE_TYPE_BILL).value;
    }

    /**
     * <pre>SAP_REFERENCE_TYPE_CANCELLATION
     * SQLite key: sap_reference_type_cancellation
     * [en] Cancel
     * [de] Storno</pre>
     * ATTENTION this value ('cancel') seems to be also defined under the key CANCEL!
     * @return [en] Cancel, [de] Storno
     */
    public static String getSapReferenceTypeCancellation() {
        return get(SAP_REFERENCE_TYPE_CANCELLATION).value;
    }

    /**
     * <pre>SAVE
     * SQLite key: save
     * [en] save
     * [de] speichern</pre>
     * @return [en] save, [de] speichern
     */
    public static String getSave() {
        return get(SAVE).value;
    }

    /**
     * <pre>SEARCH_ABORTED
     * SQLite key: searchaborted
     * [en] Search was aborted by user
     * [de] Suche wurde vom Benutzer abgebrochen</pre>
     * @return [en] Search was aborted by user, [de] Suche wurde vom Benutzer abgebrochen
     */
    public static String getSearchAborted() {
        return get(SEARCH_ABORTED).value;
    }

    /**
     * <pre>SEARCH_LIST_CHILD_TYPE_BETWEEN
     * SQLite key: searchlistchildtype_between
     * [en] Bereich
     * [de] Bereich</pre>
     * @return [en] Bereich, [de] Bereich
     */
    public static String getSearchListChildTypeBetween() {
        return get(SEARCH_LIST_CHILD_TYPE_BETWEEN).value;
    }

    /**
     * <pre>SECOND_NAME
     * SQLite key: secondname
     * [en] Family Name
     * [de] Nachname</pre>
     * @return [en] Family Name, [de] Nachname
     */
    public static String getSecondName() {
        return get(SECOND_NAME).value;
    }

    /**
     * <pre>SECONDARY_DIAGNOSES
     * SQLite key: secondary_diagnoses
     * [en] Secondary diagnosis (SD)
     * [de] Nebendiagnosen (ND)</pre>
     * @return [en] Secondary diagnosis (SD), [de] Nebendiagnosen (ND)
     */
    public static String getSecondaryDiagnoses() {
        return get(SECONDARY_DIAGNOSES).value;
    }

    public static Translation getSecondaryDiagnosesObj() {
        return get(SECONDARY_DIAGNOSES);
    }

    /**
     * <pre>SELECT
     * SQLite key: select
     * [en] Select
     * [de] Auswählen</pre>
     * @return [en] Select, [de] Auswählen
     */
    public static String getSelect() {
        return get(SELECT).value;
    }

    /**
     * <pre>SERVER
     * SQLite key: server
     * [en] Application Server
     * [de] Anwendungsserver</pre>
     * @return [en] Application Server, [de] Anwendungsserver
     */
    public static String getServer() {
        return get(SERVER).value;
    }

    /**
     * <pre>SERVICE
     * SQLite key: service
     * [en] Service
     * [de] Leistung</pre>
     * @return [en] Service, [de] Leistung
     */
    public static String getService() {
        return get(SERVICE).value;
    }

    /**
     * <pre>SERVICE_CREATE
     * SQLite key: service_create
     * [en] create Service
     * [de] Leistung erstellen</pre>
     * @return [en] create Service, [de] Leistung erstellen
     */
    public static String getServiceCreate() {
        return get(SERVICE_CREATE).value;
    }

    /**
     * <pre>SERVICE_OVERVIEW
     * SQLite key: service_overview
     * [en] Service overview
     * [de] Leistungsübersicht</pre>
     * @return [en] Service overview, [de] Leistungsübersicht
     */
    public static String getServiceOverview() {
        return get(SERVICE_OVERVIEW).value;
    }

    /**
     * <pre>SETTING_CATEGORY_WEB_APP
     * SQLite key: setting_category_webapp
     * [en] Web App
     * [de] Web App</pre>
     * @return [en] Web App, [de] Web App
     */
    public static String getSettingCategoryWebApp() {
        return get(SETTING_CATEGORY_WEB_APP).value;
    }

    /**
     * <pre>SETTING_FREE_CACHE
     * SQLite key: setting_free_cache
     * [en] Free cache
     * [de] Cache leeren</pre>
     * @return [en] Free cache, [de] Cache leeren
     */
    public static String getSettingFreeCache() {
        return get(SETTING_FREE_CACHE).value;
    }

    /**
     * <pre>SETTING_PROTOCOL_FILE
     * SQLite key: setting_protocol_file
     * [en] Protocol file
     * [de] Protokolldatei</pre>
     * @return [en] Protocol file, [de] Protokolldatei
     */
    public static String getSettingProtocolFile() {
        return get(SETTING_PROTOCOL_FILE).value;
    }

    /**
     * <pre>SETTING_SEARCH_LISTS
     * SQLite key: setting_searchlists
     * [en] Search lists
     * [de] Suchlisten</pre>
     * @return [en] Search lists, [de] Suchlisten
     */
    public static String getSettingSearchLists() {
        return get(SETTING_SEARCH_LISTS).value;
    }

    /**
     * <pre>SETTING_SESSION
     * SQLite key: setting_session
     * [en] Sessions
     * [de] Sitzungen</pre>
     * @return [en] Sessions, [de] Sitzungen
     */
    public static String getSettingSession() {
        return get(SETTING_SESSION).value;
    }

    /**
     * <pre>SETTING_SHOW_ALL_REMINDERS
     * SQLite key: setting_showallreminders
     * [en] Show all reminders
     * [de] Die Vorgangsliste zeigt alle Wiedervorlagen</pre>
     * @return [en] Show all reminders, [de] Die Vorgangsliste zeigt alle Wiedervorlagen
     */
    public static String getSettingShowAllReminders() {
        return get(SETTING_SHOW_ALL_REMINDERS).value;
    }

    /**
     * <pre>SETTING_SHOW_ALWAYS_INFO_FOR_EXAMINATE_QUOTA
     * SQLite key: setting_showalwaysinfoforexaminatequota
     * [en] Always show information to examinate quota
     * [de] Zeige immer Information über MD-Prüfquote</pre>
     * @return [en] Always show information to examinate quota, [de] Zeige immer Information über MD-Prüfquote
     */
    public static String getSettingShowAlwaysInfoForExaminateQuota() {
        return get(SETTING_SHOW_ALWAYS_INFO_FOR_EXAMINATE_QUOTA).value;
    }

    /**
     * <pre>SETTING_SHOW_PREVIEW
     * SQLite key: setting_show_preview
     * [en] Show preview of case/workflow
     * [de] Fall-/Vorgangsvorschau anzeigen</pre>
     * @return [en] Show preview of case/workflow, [de] Fall-/Vorgangsvorschau anzeigen
     */
    public static String getSettingShowPreview() {
        return get(SETTING_SHOW_PREVIEW).value;
    }

    /**
     * <pre>SETTING_WORKFLOW_SIGHT
     * SQLite key: setting_workflow_sight
     * [en] Workflow sight
     * [de] Vorgangsansicht</pre>
     * @return [en] Workflow sight, [de] Vorgangsansicht
     */
    public static String getSettingWorkflowSight() {
        return get(SETTING_WORKFLOW_SIGHT).value;
    }

    /**
     * <pre>SF_DF_VALUE
     * SQLite key: sfdfvalue
     * [en] SP/DF-Value
     * [de] ZP/ET-Betrag</pre>
     * @return [en] SP/DF-Value, [de] ZP/ET-Betrag
     */
    public static String getSfDfValue() {
        return get(SF_DF_VALUE).value;
    }

    /**
     * <pre>SOME_FEACHERS_ARE_DEACTIVATED
     * SQLite key: somefeachersaredeactivated
     * [en] Some feachers are deactivated
     * [de] Dadurch sind einige Features, wie die Fallnumererkennung im Dokumentenimport, nicht verfügbar.</pre>
     * @return [en] Some feachers are deactivated, [de] Dadurch sind einige Features, wie die Fallnumererkennung im Dokumentenimport, nicht verfügbar.
     */
    public static String getSomeFeachersAreDeactivated() {
        return get(SOME_FEACHERS_ARE_DEACTIVATED).value;
    }

    /**
     * <pre>START_GROUPING
     * SQLite key: startgrouping
     * [en] perform Grouping
     * [de] Starte Grouping</pre>
     * @return [en] perform Grouping, [de] Starte Grouping
     */
    public static String getStartGrouping() {
        return get(START_GROUPING).value;
    }

    /**
     * <pre>START_GROUPING_TOOLTIP
     * SQLite key: startgroupingtooltip
     * [en] Starts Grouping with these selected cases
     * [de] Startet das Grouping mit diesen ausgewählten Fällen</pre>
     * @return [en] Starts Grouping with these selected cases, [de] Startet das Grouping mit diesen ausgewählten Fällen
     */
    public static String getStartGroupingTooltip() {
        return get(START_GROUPING_TOOLTIP).value;
    }

    /**
     * <pre>START_GROUPING_TOOLTIP_RUNNING
     * SQLite key: startgroupingtooltiprunning
     * [en] Grouping was started with these selected cases
     * [de] Grouping wurde mit den ausgewählten Fällen gestartet</pre>
     * @return [en] Grouping was started with these selected cases, [de] Grouping wurde mit den ausgewählten Fällen gestartet
     */
    public static String getStartGroupingTooltipRunning() {
        return get(START_GROUPING_TOOLTIP_RUNNING).value;
    }

    /**
     * <pre>STATE_BADEN_WUERTTEMBERG
     * SQLite key: state_badenwuerttemberg
     * [en] Baden-Württemberg
     * [de] Baden-Württemberg</pre>
     * @return [en] Baden-Württemberg, [de] Baden-Württemberg
     */
    public static String getStateBadenWuerttemberg() {
        return get(STATE_BADEN_WUERTTEMBERG).value;
    }

    /**
     * <pre>STATE_BAVARIA
     * SQLite key: state_bavaria
     * [en] Free State of Bavaria
     * [de] Freistaat Bayern</pre>
     * @return [en] Free State of Bavaria, [de] Freistaat Bayern
     */
    public static String getStateBavaria() {
        return get(STATE_BAVARIA).value;
    }

    /**
     * <pre>STATE_BERLIN
     * SQLite key: state_berlin
     * [en] Berlin
     * [de] Berlin</pre>
     * @return [en] Berlin, [de] Berlin
     */
    public static String getStateBerlin() {
        return get(STATE_BERLIN).value;
    }

    /**
     * <pre>STATE_BRANDENBURG
     * SQLite key: state_brandenburg
     * [en] Brandenburg
     * [de] Brandenburg</pre>
     * @return [en] Brandenburg, [de] Brandenburg
     */
    public static String getStateBrandenburg() {
        return get(STATE_BRANDENBURG).value;
    }

    /**
     * <pre>STATE_BREMEN
     * SQLite key: state_bremen
     * [en] Free Hanseatic City of Bremen
     * [de] Freie Hansestadt Bremen</pre>
     * @return [en] Free Hanseatic City of Bremen, [de] Freie Hansestadt Bremen
     */
    public static String getStateBremen() {
        return get(STATE_BREMEN).value;
    }

    /**
     * <pre>STATE_FOREIGN_COUNTRY
     * SQLite key: state_foreigncountry
     * [en] Foreign Country
     * [de] Ausland</pre>
     * @return [en] Foreign Country, [de] Ausland
     */
    public static String getStateForeignCountry() {
        return get(STATE_FOREIGN_COUNTRY).value;
    }

    /**
     * <pre>STATE_HAMBURG
     * SQLite key: state_hamburg
     * [en] Free and Hanseatic City of Hamburg
     * [de] Freie und Hansestadt Hamburg</pre>
     * @return [en] Free and Hanseatic City of Hamburg, [de] Freie und Hansestadt Hamburg
     */
    public static String getStateHamburg() {
        return get(STATE_HAMBURG).value;
    }

    /**
     * <pre>STATE_HESSE
     * SQLite key: state_hesse
     * [en] Hesse
     * [de] Hessen</pre>
     * @return [en] Hesse, [de] Hessen
     */
    public static String getStateHesse() {
        return get(STATE_HESSE).value;
    }

    /**
     * <pre>STATE_LOWER_SAXONY
     * SQLite key: state_lowersaxony
     * [en] Lower Saxony
     * [de] Niedersachsen</pre>
     * @return [en] Lower Saxony, [de] Niedersachsen
     */
    public static String getStateLowerSaxony() {
        return get(STATE_LOWER_SAXONY).value;
    }

    /**
     * <pre>STATE_MECKLENBURG_WESTERN_POMERANIA
     * SQLite key: state_mecklenburgwesternpomerania
     * [en] Mecklenburg Western Pomerania
     * [de] Mecklenburg-Vorpommern</pre>
     * @return [en] Mecklenburg Western Pomerania, [de] Mecklenburg-Vorpommern
     */
    public static String getStateMecklenburgWesternPomerania() {
        return get(STATE_MECKLENBURG_WESTERN_POMERANIA).value;
    }

    /**
     * <pre>STATE_NORTH_RHINE_WESTPHALIA
     * SQLite key: state_northrhinewestphalia
     * [en] Northrhine-Westphalia
     * [de] Nordrhein-Westfalen</pre>
     * @return [en] Northrhine-Westphalia, [de] Nordrhein-Westfalen
     */
    public static String getStateNorthRhineWestphalia() {
        return get(STATE_NORTH_RHINE_WESTPHALIA).value;
    }

    /**
     * <pre>STATE_RHINELAND_PALATINATE
     * SQLite key: state_rhinelandpalatinate
     * [en] Rhineland Palatinate
     * [de] Rheinland-Pfalz</pre>
     * @return [en] Rhineland Palatinate, [de] Rheinland-Pfalz
     */
    public static String getStateRhinelandPalatinate() {
        return get(STATE_RHINELAND_PALATINATE).value;
    }

    /**
     * <pre>STATE_SAARLAND
     * SQLite key: state_saarland
     * [en] Saarland
     * [de] Saarland</pre>
     * @return [en] Saarland, [de] Saarland
     */
    public static String getStateSaarland() {
        return get(STATE_SAARLAND).value;
    }

    /**
     * <pre>STATE_SAXONY
     * SQLite key: state_saxony
     * [en] Free State of Saxony
     * [de] Freistaat Sachsen</pre>
     * @return [en] Free State of Saxony, [de] Freistaat Sachsen
     */
    public static String getStateSaxony() {
        return get(STATE_SAXONY).value;
    }

    /**
     * <pre>STATE_SAXONY_ANHALT
     * SQLite key: state_saxonyanhalt
     * [en] Saxony-Anhalt
     * [de] Sachsen-Anhalt</pre>
     * @return [en] Saxony-Anhalt, [de] Sachsen-Anhalt
     */
    public static String getStateSaxonyAnhalt() {
        return get(STATE_SAXONY_ANHALT).value;
    }

    /**
     * <pre>STATE_SCHLESWIG_HOLSTEIN
     * SQLite key: state_schleswigholstein
     * [en] Schleswig-Holstein
     * [de] Schleswig-Holstein</pre>
     * @return [en] Schleswig-Holstein, [de] Schleswig-Holstein
     */
    public static String getStateSchleswigHolstein() {
        return get(STATE_SCHLESWIG_HOLSTEIN).value;
    }

    /**
     * <pre>STATE_THURINGIA
     * SQLite key: state_thuringia
     * [en] Free State of Thuringia
     * [de] Freistaat Thüringen</pre>
     * @return [en] Free State of Thuringia, [de] Freistaat Thüringen
     */
    public static String getStateThuringia() {
        return get(STATE_THURINGIA).value;
    }

    /**
     * <pre>STATIONARY
     * SQLite key: stationary
     * [en] stationary
     * [de] stationär</pre>
     * @return [en] stationary, [de] stationär
     */
    public static String getStationary() {
        return get(STATIONARY).value;
    }

    /**
     * <pre>STATUS
     * SQLite key: status
     * [de] der Anfrage (Anfr.-Status)</pre>
     * @return [de] der Anfrage (Anfr.-Status)
     */
    public static String getStatus() {
        return get(STATUS).value;
    }

    public static Translation getStatusObj() {
        return get(STATUS);
    }

    /**
     * <pre>STEP
     * SQLite key: step
     * [en] Step
     * [de] Schritt</pre>
     * @return [en] Step, [de] Schritt
     */
    public static String getStep() {
        return get(STEP).value;
    }

    /**
     * <pre>SUCCESS
     * SQLite key: success
     * [en] Success
     * [de] Erfolg</pre>
     * @return [en] Success, [de] Erfolg
     */
    public static String getSuccess() {
        return get(SUCCESS).value;
    }

    /**
     * <pre>SUPPL_FEE_DF
     * SQLite key: supplfee_df
     * [en] DF
     * [de] ET</pre>
     * @return [en] DF, [de] ET
     */
    public static String getSupplFeeDF() {
        return get(SUPPL_FEE_DF).value;
    }

    /**
     * <pre>SUPPL_FEE_SF
     * SQLite key: supplfee_sf
     * [en] SF
     * [de] ZE</pre>
     * @return [en] SF, [de] ZE
     */
    public static String getSupplFeeSF() {
        return get(SUPPL_FEE_SF).value;
    }

    /**
     * <pre>SUPPL_FEE_SP
     * SQLite key: supplfee_sp
     * [en] SP
     * [de] ZP</pre>
     * @return [en] SP, [de] ZP
     */
    public static String getSupplFeeSP() {
        return get(SUPPL_FEE_SP).value;
    }

    /**
     * <pre>SUPPL_FEE_VALUE_DRG
     * SQLite key: supplfeevaluedrg
     * [en] SF-Value
     * [de] ZE-Betrag</pre>
     * @return [en] SF-Value, [de] ZE-Betrag
     */
    public static String getSupplFeeValueDRG() {
        return get(SUPPL_FEE_VALUE_DRG).value;
    }

    /**
     * <pre>SUPPL_FEE_VALUE_PEPP
     * SQLite key: supplfeevaluepepp
     * [en] SP-Value
     * [de] ZP-Betrag</pre>
     * @return [en] SP-Value, [de] ZP-Betrag
     */
    public static String getSupplFeeValuePEPP() {
        return get(SUPPL_FEE_VALUE_PEPP).value;
    }

    /**
     * <pre>SUPPLEMENTARY_VALUE
     * SQLite key: supplementaryvalue
     * [en] Supplementary Value
     * [de] ZE-Betrag</pre>
     * @return [en] Supplementary Value, [de] ZE-Betrag
     */
    public static String getSupplementaryValue() {
        return get(SUPPLEMENTARY_VALUE).value;
    }

    /**
     * <pre>SUPPORT
     * SQLite key: support
     * [en] Support
     * [de] Support</pre>
     * @return [en] Support, [de] Support
     */
    public static String getSupport() {
        return get(SUPPORT).value;
    }

    /**
     * <pre>SURCHARGE
     * SQLite key: surcharge
     * [en] Surcharge
     * [de] Zuschlag</pre>
     * ATTENTION this value ('Surcharge') seems to be also defined under the key DRG_CORR_TYPE_SURCHARGE!
     * @return [en] Surcharge, [de] Zuschlag
     */
    public static String getSurcharge() {
        return get(SURCHARGE).value;
    }

    /**
     * <pre>SYSTEM_INFO_RECOMMENDED_JAVA_VERSION_TEXT
     * SQLite key: system_info_recommended_java_version_text
     * [en] (recommended is {0} or higher!)
     * [de] (empfohlen ist {0} oder höher!)</pre>
     * @param pParams placeholder replacements
     * @return [en] (recommended is {0} or higher!), [de] (empfohlen ist {0} oder höher!)
     */
    public static String getSystemInfoRecommendedJavaVersionText(final Object... pParams) {
        return get(SYSTEM_INFO_RECOMMENDED_JAVA_VERSION_TEXT, pParams).value;
    }

    /**
     * <pre>TEMPLATE_AVAILABILITY
     * SQLite key: template_availability
     * [en] Available Templates
     * [de] Verfügbare Vorlagen</pre>
     * @return [en] Available Templates, [de] Verfügbare Vorlagen
     */
    public static String getTemplateAvailability() {
        return get(TEMPLATE_AVAILABILITY).value;
    }

    /**
     * <pre>TEMPLATE_CATEGORY_MAIN
     * SQLite key: template_category_main
     * [en] Main category for a template
     * [de] Hauptkategorie für eine Vorlage</pre>
     * @return [en] Main category for a template, [de] Hauptkategorie für eine Vorlage
     */
    public static String getTemplateCategoryMain() {
        return get(TEMPLATE_CATEGORY_MAIN).value;
    }

    /**
     * <pre>TEMPLATE_CATEGORY_SUB_FIRST
     * SQLite key: template_category_sub_first
     * [en] 1. Subcategory for a template
     * [de] 1. Unterkategorie für eine Vorlage</pre>
     * @return [en] 1. Subcategory for a template, [de] 1. Unterkategorie für eine Vorlage
     */
    public static String getTemplateCategorySubFirst() {
        return get(TEMPLATE_CATEGORY_SUB_FIRST).value;
    }

    /**
     * <pre>TEMPLATE_CATEGORY_SUB_SECOND
     * SQLite key: template_category_sub_second
     * [en] 2. Subcategory for a template
     * [de] 2. Unterkategorie für eine Vorlage</pre>
     * @return [en] 2. Subcategory for a template, [de] 2. Unterkategorie für eine Vorlage
     */
    public static String getTemplateCategorySubSecond() {
        return get(TEMPLATE_CATEGORY_SUB_SECOND).value;
    }

    /**
     * <pre>TEMPLATE_CONFIRMATION
     * SQLite key: template_confirmation
     * [en] Confirmation
     * [de] Bestätigung</pre>
     * ATTENTION this value ('Confirmation') seems to be also defined under the key CONFORMATION!
     * @return [en] Confirmation, [de] Bestätigung
     */
    public static String getTemplateConfirmation() {
        return get(TEMPLATE_CONFIRMATION).value;
    }

    /**
     * <pre>TEMPLATE_CONFIRMATION_DIALOG
     * SQLite key: template_confirmation_dialog
     * [en] confirmation dialog
     * [de] Bestätigungsdialog</pre>
     * @return [en] confirmation dialog, [de] Bestätigungsdialog
     */
    public static String getTemplateConfirmationDialog() {
        return get(TEMPLATE_CONFIRMATION_DIALOG).value;
    }

    /**
     * <pre>TEMPLATE_CONFIRMATION_TEXT
     * SQLite key: template_confirmationtext
     * [en] Would you like to save document {0} to the process {1}?
     * [de] Möchten Sie das Dokument {0} im Vorgang {1} speichern?</pre>
     * @param pParams placeholder replacements
     * @return [en] Would you like to save document {0} to the process {1}?, [de] Möchten Sie das Dokument {0} im Vorgang {1} speichern?
     */
    public static String getTemplateConfirmationText(final Object... pParams) {
        return get(TEMPLATE_CONFIRMATION_TEXT, pParams).value;
    }

    /**
     * <pre>TEMPLATE_ERROR_CONTENT
     * SQLite key: template_error_content
     * [en] you can not generate a document because the main case of this process is null
     * [de] Sie können kein Dokument generieren, da der Hauptfall dieses Vorgangs nicht (mehr) verknüpft ist</pre>
     * @return [en] you can not generate a document because the main case of this process is null, [de] Sie können kein Dokument generieren, da der Hauptfall dieses Vorgangs nicht (mehr) verknüpft ist
     */
    public static String getTemplateErrorContent() {
        return get(TEMPLATE_ERROR_CONTENT).value;
    }

    /**
     * <pre>TEMPLATE_ERROR_HEADER
     * SQLite key: template_error_header
     * [en] MainCase error
     * [de] Hauptfallfehler</pre>
     * @return [en] MainCase error, [de] Hauptfallfehler
     */
    public static String getTemplateErrorHeader() {
        return get(TEMPLATE_ERROR_HEADER).value;
    }

    /**
     * <pre>TEMPLATE_ERROR_TITLE
     * SQLite key: template_error_title
     * [en] Error
     * [de] Fehler</pre>
     * ATTENTION this value ('Error') seems to be also defined under the key DIALOG_BATCH_GROUPING_RULES_ERROR!
     * @return [en] Error, [de] Fehler
     */
    public static String getTemplateErrorTitle() {
        return get(TEMPLATE_ERROR_TITLE).value;
    }

    /**
     * <pre>TEMPLATE_GENERATION
     * SQLite key: template_generation
     * [en] Generate from Template
     * [de] Aus Vorlage erstellen</pre>
     * @return [en] Generate from Template, [de] Aus Vorlage erstellen
     */
    public static String getTemplateGeneration() {
        return get(TEMPLATE_GENERATION).value;
    }

    /**
     * <pre>TEMPLATE_WAIT_NOTIFICATION_TEXT
     * SQLite key: template_wait_notificationtext
     * [en] Word Document will be generated from selected draft {0} and opened afterwards!
     * [de] Word-Dokument wird aus der ausgewählten Vorlage {0} erzeugt und danach geöffnet!</pre>
     * @param pParams placeholder replacements
     * @return [en] Word Document will be generated from selected draft {0} and opened afterwards!, [de] Word-Dokument wird aus der ausgewählten Vorlage {0} erzeugt und danach geöffnet!
     */
    public static String getTemplateWaitNotification_text(final Object... pParams) {
        return get(TEMPLATE_WAIT_NOTIFICATION_TEXT, pParams).value;
    }

    /**
     * <pre>TEMPLATE_WAIT_NOTIFICATION_TITLE
     * SQLite key: template_wait_notificationtitle
     * [en] Word Document will be opened soon!
     * [de] Word-Dokument wird demnächst geöffnet!</pre>
     * @return [en] Word Document will be opened soon!, [de] Word-Dokument wird demnächst geöffnet!
     */
    public static String getTemplateWaitNotification_title() {
        return get(TEMPLATE_WAIT_NOTIFICATION_TITLE).value;
    }

    /**
     * <pre>TEXT_TEMPLATE_ACTION
     * SQLite key: texttemplate_action
     * [en] Action Context
     * [de] Aktion Kontext</pre>
     * @return [en] Action Context, [de] Aktion Kontext
     */
    public static String getTextTemplateAction() {
        return get(TEXT_TEMPLATE_ACTION).value;
    }

    /**
     * <pre>TEXT_TEMPLATE_CASE_REPORT
     * SQLite key: texttemplate_casereport
     * [en] CaseReport Context
     * [de] Fallreport Kontext</pre>
     * @return [en] CaseReport Context, [de] Fallreport Kontext
     */
    public static String getTextTemplateCaseReport() {
        return get(TEXT_TEMPLATE_CASE_REPORT).value;
    }

    /**
     * <pre>TEXT_TEMPLATE_INKA
     * SQLite key: texttemplate_inka
     * [en] Inka-Message Context
     * [de] INKA-Nachricht Kontext</pre>
     * @return [en] Inka-Message Context, [de] INKA-Nachricht Kontext
     */
    public static String getTextTemplateInka() {
        return get(TEXT_TEMPLATE_INKA).value;
    }

    /**
     * <pre>TEXT_TEMPLATE_PROCESS_FINALISATION
     * SQLite key: texttemplate_processfinalisation
     * [en] Process Finalization Context
     * [de] Vorgangsabschluss Kontext</pre>
     * @return [en] Process Finalization Context, [de] Vorgangsabschluss Kontext
     */
    public static String getTextTemplateProcessFinalisation() {
        return get(TEXT_TEMPLATE_PROCESS_FINALISATION).value;
    }

    /**
     * <pre>TEXT_TEMPLATE_REMINDER
     * SQLite key: texttemplate_reminder
     * [en] Reminder Context
     * [de] Wiedervorlage Kontext</pre>
     * @return [en] Reminder Context, [de] Wiedervorlage Kontext
     */
    public static String getTextTemplateReminder() {
        return get(TEXT_TEMPLATE_REMINDER).value;
    }

    /**
     * <pre>TEXT_TEMPLATE_REQUEST
     * SQLite key: texttemplate_request
     * [en] Request Context
     * [de] Anfrage Kontext</pre>
     * @return [en] Request Context, [de] Anfrage Kontext
     */
    public static String getTextTemplateRequest() {
        return get(TEXT_TEMPLATE_REQUEST).value;
    }

    /**
     * <pre>TEXTTEMPLATES
     * SQLite key: texttemplates
     * [en] texttemplates
     * [de] Textbausteine</pre>
     * @return [en] texttemplates, [de] Textbausteine
     */
    public static String getTexttemplates() {
        return get(TEXTTEMPLATES).value;
    }

    /**
     * <pre>TIME_FORMAT
     * SQLite key: timeformat
     * [en] HH:mm
     * [de] HH:mm</pre>
     * @return [en] HH:mm, [de] HH:mm
     */
    public static String getTimeFormat() {
        return get(TIME_FORMAT).value;
    }

    /**
     * <pre>TIME_FORMAT_DEVIDER
     * SQLite key: timeformat_devider
     * [en] :
     * [de] :</pre>
     * @return [en] :, [de] :
     */
    public static String getTimeFormatDevider() {
        return get(TIME_FORMAT_DEVIDER).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_BEF00
     * SQLite key: tp301_informationkey30_bef00
     * [en] Termination of the examination procedure due to agreement in the case dialogue - without data correction
     * [de] Beendigung des Prüfverfahrens aufgrund Einigung im Falldialog – ohne Datenkorrektur</pre>
     * @return [en] Termination of the examination procedure due to agreement in the case dialogue - without data correction, [de] Beendigung des Prüfverfahrens aufgrund Einigung im Falldialog – ohne Datenkorrektur
     */
    public static String getTp301InformationKey30BEF00() {
        return get(TP_301_INFORMATION_KEY_30_BEF00).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_BEK00
     * SQLite key: tp301_informationkey30_bek00
     * [en] Termination of the test procedure due to data correction - MD not necessary
     * [de] Beendigung des Prüfverfahrens aufgrund Datenkorrektur – MD nicht notwendig</pre>
     * @return [en] Termination of the test procedure due to data correction - MD not necessary, [de] Beendigung des Prüfverfahrens aufgrund Datenkorrektur – MD nicht notwendig
     */
    public static String getTp301InformationKey30BEK00() {
        return get(TP_301_INFORMATION_KEY_30_BEK00).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_BEK10
     * SQLite key: tp301_informationkey30_bek10
     * [en] No data correction / addition in pre-trial proceeding and no test complaint by MD because of maximum permissible check quota
     * [de] Im Vorverfahren erfolgte keine Datenkorrektur/Ergänzung und infolge der maximal zulässigen Prüfquote, erfolgt keine Prüfanzeige durch den MD</pre>
     * @return [en] No data correction / addition in pre-trial proceeding and no test complaint by MD because of maximum permissible check quota, [de] Im Vorverfahren erfolgte keine Datenkorrektur/Ergänzung und infolge der maximal zulässigen Prüfquote, erfolgt keine Prüfanzeige durch den MD
     */
    public static String getTp301InformationKey30BEK10() {
        return get(TP_301_INFORMATION_KEY_30_BEK10).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_BEK11
     * SQLite key: tp301_informationkey30_bek11
     * [de] Vorverfahren wurde kein Falldialog durchgeführt und infolge der maximal zulässigen Prüfquote erfolgt keine Prüfanzeige durch den MD (KAIN)</pre>
     * @return [de] Vorverfahren wurde kein Falldialog durchgeführt und infolge der maximal zulässigen Prüfquote erfolgt keine Prüfanzeige durch den MD (KAIN)
     */
    public static String getTp301InformationKey30BEK11() {
        return get(TP_301_INFORMATION_KEY_30_BEK11).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_BEK20
     * SQLite key: tp301_informationkey30_bek20
     * [en] Realized case dialogue without solution in pre-trial proceeding, no test complaint by MD because of maximum permissible check quota
     * [de] Im Vorverfahren wurde ein Falldialog durchgeführt, jedoch keine Einigung erzielt und infolge der maximal zulässigen Prüfquote, erfolgt keine Prüfanzeige durch den MD</pre>
     * @return [en] Realized case dialogue without solution in pre-trial proceeding, no test complaint by MD because of maximum permissible check quota, [de] Im Vorverfahren wurde ein Falldialog durchgeführt, jedoch keine Einigung erzielt und infolge der maximal zulässigen Prüfquote, erfolgt keine Prüfanzeige durch den MD
     */
    public static String getTp301InformationKey30BEK20() {
        return get(TP_301_INFORMATION_KEY_30_BEK20).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH01
     * SQLite key: tp301_informationkey30_ekh01
     * [de] Inhaltliche begründetes Bestreiten der Entscheidung der Krankenkasse gemäß § 9 Abs. 1 Satz 1 und 2 PrüfvV ohne Einleitung des EV (INKA)</pre>
     * @return [de] Inhaltliche begründetes Bestreiten der Entscheidung der Krankenkasse gemäß § 9 Abs. 1 Satz 1 und 2 PrüfvV ohne Einleitung des EV (INKA)
     */
    public static String getTp301InformationKey30EKH01() {
        return get(TP_301_INFORMATION_KEY_30_EKH01).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH02
     * SQLite key: tp301_informationkey30_ekh02
     * [de] Inhaltliche begründetes Bestreiten der Entscheidung der Krankenkasse gemäß § 9 Abs. 1 Satz 1 bis 3 PrüfvV mit gleichzeitiger Einleitung des EV (INKA) Tp301.InformationKey30</pre>
     * @return [de] Inhaltliche begründetes Bestreiten der Entscheidung der Krankenkasse gemäß § 9 Abs. 1 Satz 1 bis 3 PrüfvV mit gleichzeitiger Einleitung des EV (INKA) Tp301.InformationKey30
     */
    public static String getTp301InformationKey30EKH02() {
        return get(TP_301_INFORMATION_KEY_30_EKH02).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH30
     * SQLite key: tp301_informationkey30_ekh30
     * [de] Aufforderung zur Verlängerung des Erörterungsverfahrens (INKA)</pre>
     * @return [de] Aufforderung zur Verlängerung des Erörterungsverfahrens (INKA)
     */
    public static String getTp301InformationKey30EKH30() {
        return get(TP_301_INFORMATION_KEY_30_EKH30).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH31
     * SQLite key: tp301_informationkey30_ekh31
     * [de] Annahme der Aufforderung zur Verlängerung des Erörterungsverfahrens (INKA)</pre>
     * @return [de] Annahme der Aufforderung zur Verlängerung des Erörterungsverfahrens (INKA)
     */
    public static String getTp301InformationKey30EKH31() {
        return get(TP_301_INFORMATION_KEY_30_EKH31).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH32
     * SQLite key: tp301_informationkey30_ekh32
     * [de] Ablehnung der Verlängerung des Erörterungsverfahrens (INKA)</pre>
     * @return [de] Ablehnung der Verlängerung des Erörterungsverfahrens (INKA)
     */
    public static String getTp301InformationKey30EKH32() {
        return get(TP_301_INFORMATION_KEY_30_EKH32).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH33
     * SQLite key: tp301_informationkey30_ekh33
     * [de] Aufforderung mündliches Erörterungsverfahren (INKA)</pre>
     * @return [de] Aufforderung mündliches Erörterungsverfahren (INKA)
     */
    public static String getTp301InformationKey30EKH33() {
        return get(TP_301_INFORMATION_KEY_30_EKH33).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH34
     * SQLite key: tp301_informationkey30_ekh34
     * [de] Zustimmung mündliches Erörterungsverfahren (INKA)</pre>
     * @return [de] Zustimmung mündliches Erörterungsverfahren (INKA)
     */
    public static String getTp301InformationKey30EKH34() {
        return get(TP_301_INFORMATION_KEY_30_EKH34).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH35
     * SQLite key: tp301_informationkey30_ekh35
     * [de] Ablehnung mündliches Erörterungsverfahren (INKA)</pre>
     * @return [de] Ablehnung mündliches Erörterungsverfahren (INKA)
     */
    public static String getTp301InformationKey30EKH35() {
        return get(TP_301_INFORMATION_KEY_30_EKH35).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH41
     * SQLite key: tp301_informationkey30_ekh41
     * [de] Anzeige für eine ausnahmsweise Zulassung nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (INKA)</pre>
     * @return [de] Anzeige für eine ausnahmsweise Zulassung nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (INKA)
     */
    public static String getTp301InformationKey30EKH41() {
        return get(TP_301_INFORMATION_KEY_30_EKH41).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH42
     * SQLite key: tp301_informationkey30_ekh42
     * [de] Ablehnung nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (INKA)</pre>
     * @return [de] Ablehnung nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (INKA)
     */
    public static String getTp301InformationKey30EKH42() {
        return get(TP_301_INFORMATION_KEY_30_EKH42).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH43
     * SQLite key: tp301_informationkey30_ekh43
     * [de] Annahme nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag gemäß § 9 Abs. 7 PrüfvV (INKA)</pre>
     * @return [de] Annahme nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag gemäß § 9 Abs. 7 PrüfvV (INKA)
     */
    public static String getTp301InformationKey30EKH43() {
        return get(TP_301_INFORMATION_KEY_30_EKH43).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH50
     * SQLite key: tp301_informationkey30_ekh50
     * [de] Einigung im Erörterungsverfahren und Beendigung gemäß § 9 Abs. 8 PrüfvV (INKA)</pre>
     * @return [de] Einigung im Erörterungsverfahren und Beendigung gemäß § 9 Abs. 8 PrüfvV (INKA)
     */
    public static String getTp301InformationKey30EKH50() {
        return get(TP_301_INFORMATION_KEY_30_EKH50).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH51
     * SQLite key: tp301_informationkey30_ekh51
     * [de] Einvernehmliche Beendigung des Erörterungsverfahren ohne Einigung gemäß § 9 Abs. 10 PrüfvV (INKA)</pre>
     * @return [de] Einvernehmliche Beendigung des Erörterungsverfahren ohne Einigung gemäß § 9 Abs. 10 PrüfvV (INKA)
     */
    public static String getTp301InformationKey30EKH51() {
        return get(TP_301_INFORMATION_KEY_30_EKH51).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH60
     * SQLite key: tp301_informationkey30_ekh60
     * [de] Abrechnungsstreitigkeit gilt infolge fehlender Erörterung oder fehlender Mitwirkung als erörtert gemäß § 9 Abs. 11 PrüfvV (INKA)</pre>
     * @return [de] Abrechnungsstreitigkeit gilt infolge fehlender Erörterung oder fehlender Mitwirkung als erörtert gemäß § 9 Abs. 11 PrüfvV (INKA)
     */
    public static String getTp301InformationKey30EKH60() {
        return get(TP_301_INFORMATION_KEY_30_EKH60).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKH61
     * SQLite key: tp301_informationkey30_ekh61
     * [de] Es wurde keine Einigung erzielt und das Erörterungsverfahren ist gemäß § 9 Abs. 12 PrüfvV beendet (INKA)</pre>
     * @return [de] Es wurde keine Einigung erzielt und das Erörterungsverfahren ist gemäß § 9 Abs. 12 PrüfvV beendet (INKA)
     */
    public static String getTp301InformationKey30EKH61() {
        return get(TP_301_INFORMATION_KEY_30_EKH61).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK01
     * SQLite key: tp301_informationkey30_ekk01
     * [de] Krankenkasse schließt sich gemäß §9 Abs. 3 Satz 1 PrüfvV der Begründung des Krankenhauses an. Es erfolgt kein Erörterungsverfahren. (KAIN)</pre>
     * @return [de] Krankenkasse schließt sich gemäß §9 Abs. 3 Satz 1 PrüfvV der Begründung des Krankenhauses an. Es erfolgt kein Erörterungsverfahren. (KAIN)
     */
    public static String getTp301InformationKey30EKK01() {
        return get(TP_301_INFORMATION_KEY_30_EKK01).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK02
     * SQLite key: tp301_informationkey30_ekk02
     * [de] Krankenkasse schließt sich der Begründung des Krankenhauses gemäß §9 Abs. 3 Satz 1 PrüfvV an. Das durch das Krankenhaus bereits eingeleitete EV ist beendet. (KAIN)</pre>
     * @return [de] Krankenkasse schließt sich der Begründung des Krankenhauses gemäß §9 Abs. 3 Satz 1 PrüfvV an. Das durch das Krankenhaus bereits eingeleitete EV ist beendet. (KAIN)
     */
    public static String getTp301InformationKey30EKK02() {
        return get(TP_301_INFORMATION_KEY_30_EKK02).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK03
     * SQLite key: tp301_informationkey30_ekk03
     * [de] Krankenkasse schließt sich nicht der Begründung des Krankenhauses gemäß §9 Abs. 4 PrüfvV an, das KH hat das EV bereits eingeleitet. (KAIN)</pre>
     * @return [de] Krankenkasse schließt sich nicht der Begründung des Krankenhauses gemäß §9 Abs. 4 PrüfvV an, das KH hat das EV bereits eingeleitet. (KAIN)
     */
    public static String getTp301InformationKey30EKK03() {
        return get(TP_301_INFORMATION_KEY_30_EKK03).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK04
     * SQLite key: tp301_informationkey30_ekk04
     * [de] Krankenkasse schließt sich nicht der Begründung des Krankenhauses gemäß §9 Abs. 4 Satz 1 PrüfvV an und leitet das EV ein. (KAIN)</pre>
     * @return [de] Krankenkasse schließt sich nicht der Begründung des Krankenhauses gemäß §9 Abs. 4 Satz 1 PrüfvV an und leitet das EV ein. (KAIN)
     */
    public static String getTp301InformationKey30EKK04() {
        return get(TP_301_INFORMATION_KEY_30_EKK04).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK10
     * SQLite key: tp301_informationkey30_ekk10
     * [de] Entscheidung der Krankenkasse wurde nicht fristgemäß bestritten und gilt als erörtert gemäß § 9 Abs. 2 PrüfvV mit Folge der Aufrechnung (KAIN)</pre>
     * @return [de] Entscheidung der Krankenkasse wurde nicht fristgemäß bestritten und gilt als erörtert gemäß § 9 Abs. 2 PrüfvV mit Folge der Aufrechnung (KAIN)
     */
    public static String getTp301InformationKey30EKK10() {
        return get(TP_301_INFORMATION_KEY_30_EKK10).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK30
     * SQLite key: tp301_informationkey30_ekk30
     * [de] Aufforderung zur Verlängerung des Erörterungsverfahrens (KAIN)</pre>
     * @return [de] Aufforderung zur Verlängerung des Erörterungsverfahrens (KAIN)
     */
    public static String getTp301InformationKey30EKK30() {
        return get(TP_301_INFORMATION_KEY_30_EKK30).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK31
     * SQLite key: tp301_informationkey30_ekk31
     * [de] Annahme der Aufforderung zur Verlängerung des Erörterungsverfahrens (KAIN)</pre>
     * @return [de] Annahme der Aufforderung zur Verlängerung des Erörterungsverfahrens (KAIN)
     */
    public static String getTp301InformationKey30EKK31() {
        return get(TP_301_INFORMATION_KEY_30_EKK31).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK32
     * SQLite key: tp301_informationkey30_ekk32
     * [de] Ablehnung der Verlängerung des Erörterungsverfahrens (KAIN)</pre>
     * @return [de] Ablehnung der Verlängerung des Erörterungsverfahrens (KAIN)
     */
    public static String getTp301InformationKey30EKK32() {
        return get(TP_301_INFORMATION_KEY_30_EKK32).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK33
     * SQLite key: tp301_informationkey30_ekk33
     * [de] Aufforderung mündliches Erörterungsverfahren (KAIN)</pre>
     * @return [de] Aufforderung mündliches Erörterungsverfahren (KAIN)
     */
    public static String getTp301InformationKey30EKK33() {
        return get(TP_301_INFORMATION_KEY_30_EKK33).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK34
     * SQLite key: tp301_informationkey30_ekk34
     * [de] Zustimmung mündliches Erörterungsverfahren (KAIN)</pre>
     * @return [de] Zustimmung mündliches Erörterungsverfahren (KAIN)
     */
    public static String getTp301InformationKey30EKK34() {
        return get(TP_301_INFORMATION_KEY_30_EKK34).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK35
     * SQLite key: tp301_informationkey30_ekk35
     * [de] Ablehnung mündliches Erörterungsverfahren (KAIN)</pre>
     * @return [de] Ablehnung mündliches Erörterungsverfahren (KAIN)
     */
    public static String getTp301InformationKey30EKK35() {
        return get(TP_301_INFORMATION_KEY_30_EKK35).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK41
     * SQLite key: tp301_informationkey30_ekk41
     * [de] Anzeige einer Ausnahmsweise Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN)</pre>
     * @return [de] Anzeige einer Ausnahmsweise Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN)
     */
    public static String getTp301InformationKey30EKK41() {
        return get(TP_301_INFORMATION_KEY_30_EKK41).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK42
     * SQLite key: tp301_informationkey30_ekk42
     * [de] Ablehnung Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN)</pre>
     * @return [de] Ablehnung Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN)
     */
    public static String getTp301InformationKey30EKK42() {
        return get(TP_301_INFORMATION_KEY_30_EKK42).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK43
     * SQLite key: tp301_informationkey30_ekk43
     * [de] Annahme Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN)</pre>
     * @return [de] Annahme Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN)
     */
    public static String getTp301InformationKey30EKK43() {
        return get(TP_301_INFORMATION_KEY_30_EKK43).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK50
     * SQLite key: tp301_informationkey30_ekk50
     * [de] Einigung im Erörterungsverfahren und Beendigung gemäß § 9 Abs. 8 PrüfvV (KAIN) Tp301.InformationKey30.EKK51 Einvernehmliche Beendigung des Erörterungsverfahren gemäß § 9 Abs. 10 PrüfvV (KAIN)</pre>
     * @return [de] Einigung im Erörterungsverfahren und Beendigung gemäß § 9 Abs. 8 PrüfvV (KAIN) Tp301.InformationKey30.EKK51 Einvernehmliche Beendigung des Erörterungsverfahren gemäß § 9 Abs. 10 PrüfvV (KAIN)
     */
    public static String getTp301InformationKey30EKK50() {
        return get(TP_301_INFORMATION_KEY_30_EKK50).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK51
     * SQLite key: tp301_informationkey30_ekk51
     * [de] Einvernehmliche Beendigung des Erörterungsverfahren  ohne Einigung gemäß § 9 Abs. 10 PrüfvV (KAIN)</pre>
     * @return [de] Einvernehmliche Beendigung des Erörterungsverfahren  ohne Einigung gemäß § 9 Abs. 10 PrüfvV (KAIN)
     */
    public static String getTp301InformationKey30EKK51() {
        return get(TP_301_INFORMATION_KEY_30_EKK51).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK60
     * SQLite key: tp301_informationkey30_ekk60
     * [de] Abrechnungsstreitigkeit gilt infolge fehlender Erörterung oder fehlender Mitwirkung als erörtert gemäß § 9 Abs. 11 PrüfvV (KAIN)</pre>
     * @return [de] Abrechnungsstreitigkeit gilt infolge fehlender Erörterung oder fehlender Mitwirkung als erörtert gemäß § 9 Abs. 11 PrüfvV (KAIN)
     */
    public static String getTp301InformationKey30EKK60() {
        return get(TP_301_INFORMATION_KEY_30_EKK60).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_EKK61
     * SQLite key: tp301_informationkey30_ekk61
     * [de] Es wurde keine Einigung erzielt und das Erörterungsverfahren ist gemäß § 9 Abs. 12 PrüfvV beendet (KAIN)</pre>
     * @return [de] Es wurde keine Einigung erzielt und das Erörterungsverfahren ist gemäß § 9 Abs. 12 PrüfvV beendet (KAIN)
     */
    public static String getTp301InformationKey30EKK61() {
        return get(TP_301_INFORMATION_KEY_30_EKK61).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FDI01
     * SQLite key: tp301_informationkey30_fdi01
     * [en] Request for case dialog
     * [de] Aufforderung zum Falldialog</pre>
     * ATTENTION this value ('Request for case dialog') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDK01!
     * @return [en] Request for case dialog, [de] Aufforderung zum Falldialog
     */
    public static String getTp301InformationKey30FDI01() {
        return get(TP_301_INFORMATION_KEY_30_FDI01).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FDI02
     * SQLite key: tp301_informationkey30_fdi02
     * [en] Acceptance of the request for the case dialogue
     * [de] Annahme der Aufforderung zum Falldialog</pre>
     * ATTENTION this value ('Acceptance of the request for the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDK02!
     * @return [en] Acceptance of the request for the case dialogue, [de] Annahme der Aufforderung zum Falldialog
     */
    public static String getTp301InformationKey30FDI02() {
        return get(TP_301_INFORMATION_KEY_30_FDI02).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FDI03
     * SQLite key: tp301_informationkey30_fdi03
     * [en] Rejection of a case dialog
     * [de] Ablehnung eines Falldialoges</pre>
     * ATTENTION this value ('Rejection of a case dialog') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDK03!
     * @return [en] Rejection of a case dialog, [de] Ablehnung eines Falldialoges
     */
    public static String getTp301InformationKey30FDI03() {
        return get(TP_301_INFORMATION_KEY_30_FDI03).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FDI11
     * SQLite key: tp301_informationkey30_fdi11
     * [en] Invitation to extend the case dialogue
     * [de] Aufforderung zur Verlängerung des Falldialogs</pre>
     * ATTENTION this value ('Invitation to extend the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDK11!
     * @return [en] Invitation to extend the case dialogue, [de] Aufforderung zur Verlängerung des Falldialogs
     */
    public static String getTp301InformationKey30FDI11() {
        return get(TP_301_INFORMATION_KEY_30_FDI11).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FDI12
     * SQLite key: tp301_informationkey30_fdi12
     * [en] Adoption of the request to extend the case dialogue
     * [de] Annahme der Aufforderung zur Verlängerung des Falldialogs</pre>
     * ATTENTION this value ('Adoption of the request to extend the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDK12!
     * @return [en] Adoption of the request to extend the case dialogue, [de] Annahme der Aufforderung zur Verlängerung des Falldialogs
     */
    public static String getTp301InformationKey30FDI12() {
        return get(TP_301_INFORMATION_KEY_30_FDI12).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FDI13
     * SQLite key: tp301_informationkey30_fdi13
     * [en] Rejection of the extension of the case dialogue
     * [de] Ablehnung der Verlängerung des Falldialoges</pre>
     * ATTENTION this value ('Rejection of the extension of the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDK13!
     * @return [en] Rejection of the extension of the case dialogue, [de] Ablehnung der Verlängerung des Falldialoges
     */
    public static String getTp301InformationKey30FDI13() {
        return get(TP_301_INFORMATION_KEY_30_FDI13).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FDI20
     * SQLite key: tp301_informationkey30_fdi20
     * [en] Declaration on the termination of the case dialogue
     * [de] Erklärung über die Beendigung des Falldialogs</pre>
     * ATTENTION this value ('Declaration on the termination of the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDK20!
     * @return [en] Declaration on the termination of the case dialogue, [de] Erklärung über die Beendigung des Falldialogs
     */
    public static String getTp301InformationKey30FDI20() {
        return get(TP_301_INFORMATION_KEY_30_FDI20).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FDK01
     * SQLite key: tp301_informationkey30_fdk01
     * [en] Request for case dialog
     * [de] Aufforderung zum Falldialog</pre>
     * ATTENTION this value ('Request for case dialog') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDI01!
     * @return [en] Request for case dialog, [de] Aufforderung zum Falldialog
     */
    public static String getTp301InformationKey30FDK01() {
        return get(TP_301_INFORMATION_KEY_30_FDK01).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FDK02
     * SQLite key: tp301_informationkey30_fdk02
     * [en] Acceptance of the request for the case dialogue
     * [de] Annahme der Aufforderung zum Falldialog</pre>
     * ATTENTION this value ('Acceptance of the request for the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDI02!
     * @return [en] Acceptance of the request for the case dialogue, [de] Annahme der Aufforderung zum Falldialog
     */
    public static String getTp301InformationKey30FDK02() {
        return get(TP_301_INFORMATION_KEY_30_FDK02).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FDK03
     * SQLite key: tp301_informationkey30_fdk03
     * [en] Rejection of a case dialog
     * [de] Ablehnung eines Falldialoges</pre>
     * ATTENTION this value ('Rejection of a case dialog') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDI03!
     * @return [en] Rejection of a case dialog, [de] Ablehnung eines Falldialoges
     */
    public static String getTp301InformationKey30FDK03() {
        return get(TP_301_INFORMATION_KEY_30_FDK03).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FDK11
     * SQLite key: tp301_informationkey30_fdk11
     * [en] Invitation to extend the case dialogue
     * [de] Aufforderung zur Verlängerung des Falldialogs</pre>
     * ATTENTION this value ('Invitation to extend the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDI11!
     * @return [en] Invitation to extend the case dialogue, [de] Aufforderung zur Verlängerung des Falldialogs
     */
    public static String getTp301InformationKey30FDK11() {
        return get(TP_301_INFORMATION_KEY_30_FDK11).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FDK12
     * SQLite key: tp301_informationkey30_fdk12
     * [en] Adoption of the request to extend the case dialogue
     * [de] Annahme der Aufforderung zur Verlängerung des Falldialogs</pre>
     * ATTENTION this value ('Adoption of the request to extend the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDI12!
     * @return [en] Adoption of the request to extend the case dialogue, [de] Annahme der Aufforderung zur Verlängerung des Falldialogs
     */
    public static String getTp301InformationKey30FDK12() {
        return get(TP_301_INFORMATION_KEY_30_FDK12).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FDK13
     * SQLite key: tp301_informationkey30_fdk13
     * [en] Rejection of the extension of the case dialogue
     * [de] Ablehnung der Verlängerung des Falldialoges</pre>
     * ATTENTION this value ('Rejection of the extension of the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDI13!
     * @return [en] Rejection of the extension of the case dialogue, [de] Ablehnung der Verlängerung des Falldialoges
     */
    public static String getTp301InformationKey30FDK13() {
        return get(TP_301_INFORMATION_KEY_30_FDK13).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FDK20
     * SQLite key: tp301_informationkey30_fdk20
     * [en] Declaration on the termination of the case dialogue
     * [de] Erklärung über die Beendigung des Falldialogs</pre>
     * ATTENTION this value ('Declaration on the termination of the case dialogue') seems to be also defined under the key TP_301_INFORMATION_KEY_30_FDI20!
     * @return [en] Declaration on the termination of the case dialogue, [de] Erklärung über die Beendigung des Falldialogs
     */
    public static String getTp301InformationKey30FDK20() {
        return get(TP_301_INFORMATION_KEY_30_FDK20).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_FV000
     * SQLite key: tp301_informationkey30_fv000
     * [en] Questions about the condition of certain measures
     * [de] Fragen zur Voraussetzung bestimmter Maßnahmen</pre>
     * @return [en] Questions about the condition of certain measures, [de] Fragen zur Voraussetzung bestimmter Maßnahmen
     */
    public static String getTp301InformationKey30FV000() {
        return get(TP_301_INFORMATION_KEY_30_FV000).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_KL000
     * SQLite key: tp301_informationkey30_kl000
     * [en] Free text with mention of other / further test objects
     * [de] Freitext bei Nennung anderer/weiterer Prüfgegenstände</pre>
     * @return [en] Free text with mention of other / further test objects, [de] Freitext bei Nennung anderer/weiterer Prüfgegenstände
     */
    public static String getTp301InformationKey30KL000() {
        return get(TP_301_INFORMATION_KEY_30_KL000).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_KP000
     * SQLite key: tp301_informationkey30_kp000
     * [en] Coding test
     * [de] Kodierprüfung</pre>
     * @return [en] Coding test, [de] Kodierprüfung
     */
    public static String getTp301InformationKey30KP000() {
        return get(TP_301_INFORMATION_KEY_30_KP000).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDI04
     * SQLite key: tp301_informationkey30_mdi04
     * [de] Einwände gegen Grund oder Höhe des Aufschlages durch das Krankenhaus (INKA)</pre>
     * @return [de] Einwände gegen Grund oder Höhe des Aufschlages durch das Krankenhaus (INKA)
     */
    public static String getTp301InformationKey30MDI04() {
        return get(TP_301_INFORMATION_KEY_30_MDI04).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDI05
     * SQLite key: tp301_informationkey30_mdi05
     * [de] Krankenkasse hat sich nicht innerhalb der Frist nach § 8 Satz 3 geäußert und das Verfahren gilt als beendet und die Krankenhausabrechnung als erörtert (INKA)</pre>
     * @return [de] Krankenkasse hat sich nicht innerhalb der Frist nach § 8 Satz 3 geäußert und das Verfahren gilt als beendet und die Krankenhausabrechnung als erörtert (INKA)
     */
    public static String getTp301InformationKey30MDI05() {
        return get(TP_301_INFORMATION_KEY_30_MDI05).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK01
     * SQLite key: tp301_informationkey30_mdk01
     * [en] Performance decision has no complaint of settlement as a result (without decrease of settlement amount)
     * [de] Leistungsrechtliche Entscheidung hat keine Beanstandung der Abrechnung (ohne Minderung des Abrechnungsbetrages) als Ergebnis</pre>
     * @return [en] Performance decision has no complaint of settlement as a result (without decrease of settlement amount), [de] Leistungsrechtliche Entscheidung hat keine Beanstandung der Abrechnung (ohne Minderung des Abrechnungsbetrages) als Ergebnis
     */
    public static String getTp301InformationKey30MDK01() {
        return get(TP_301_INFORMATION_KEY_30_MDK01).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK02
     * SQLite key: tp301_informationkey30_mdk02
     * [en] Performance decision has complaint of billing as a result (with decrease of settlement amount)
     * [de] Leistungsrechtliche Entscheidung hat Beanstandung der Abrechnung (mit Minderung des Abrechnungsbetrages) als Ergebnis</pre>
     * @return [en] Performance decision has complaint of billing as a result (with decrease of settlement amount), [de] Leistungsrechtliche Entscheidung hat Beanstandung der Abrechnung (mit Minderung des Abrechnungsbetrages) als Ergebnis
     */
    public static String getTp301InformationKey30MDK02() {
        return get(TP_301_INFORMATION_KEY_30_MDK02).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK03
     * SQLite key: tp301_informationkey30_mdk03
     * [en] Performance decision has due to record correction (§7 Abs. 5 PrüfvV) in the MD procedure no complaint of billing as a result (without decrease of settlement amount)
     * [de] Leistungsrechtliche Entscheidung hat aufgrund Datensatzkorrektur (§7 Abs. 5 PrüfvV) im MD-Verfahren, ohne MD Abbruch, keine Beanstandung (ohne Minderung des Abrechnungsbetrages) der Abrechnung als Ergebnis</pre>
     * @return [en] Performance decision has due to record correction (§7 Abs. 5 PrüfvV) in the MD procedure no complaint of billing as a result (without decrease of settlement amount), [de] Leistungsrechtliche Entscheidung hat aufgrund Datensatzkorrektur (§7 Abs. 5 PrüfvV) im MD-Verfahren, ohne MD Abbruch, keine Beanstandung (ohne Minderung des Abrechnungsbetrages) der Abrechnung als Ergebnis
     */
    public static String getTp301InformationKey30MDK03() {
        return get(TP_301_INFORMATION_KEY_30_MDK03).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK04
     * SQLite key: tp301_informationkey30_mdk04
     * [en] Setting of additional charge corresponding § 275c Abs. 3 SGB V by health incurance
     * [de] Festlegung des Aufschlages gemäß § 275c Abs. 3 SGB V durch die Krankenkasse</pre>
     * @return [en] Setting of additional charge corresponding § 275c Abs. 3 SGB V by health incurance, [de] Festlegung des Aufschlages gemäß § 275c Abs. 3 SGB V durch die Krankenkasse
     */
    public static String getTp301InformationKey30MDK04() {
        return get(TP_301_INFORMATION_KEY_30_MDK04).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK06
     * SQLite key: tp301_informationkey30_mdk06
     * [de] Reaktion zu evtl. Einwänden des Krankenhauses (KAIN)</pre>
     * @return [de] Reaktion zu evtl. Einwänden des Krankenhauses (KAIN)
     */
    public static String getTp301InformationKey30MDK06() {
        return get(TP_301_INFORMATION_KEY_30_MDK06).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK07
     * SQLite key: tp301_informationkey30_mdk07
     * [de] Mitteilung über einen unveränderten Aufschlagsbetrag (KAIN)</pre>
     * @return [de] Mitteilung über einen unveränderten Aufschlagsbetrag (KAIN)
     */
    public static String getTp301InformationKey30MDK07() {
        return get(TP_301_INFORMATION_KEY_30_MDK07).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK08
     * SQLite key: tp301_informationkey30_mdk08
     * [de] Mitteilung über einen veränderten Aufschlagsbetrag (KAIN)</pre>
     * @return [de] Mitteilung über einen veränderten Aufschlagsbetrag (KAIN)
     */
    public static String getTp301InformationKey30MDK08() {
        return get(TP_301_INFORMATION_KEY_30_MDK08).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK09
     * SQLite key: tp301_informationkey30_mdk09
     * [de] Mitteilung des Aufschlages mit Grundlage der Berechnung (KAIN)</pre>
     * @return [de] Mitteilung des Aufschlages mit Grundlage der Berechnung (KAIN)
     */
    public static String getTp301InformationKey30MDK09() {
        return get(TP_301_INFORMATION_KEY_30_MDK09).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK10
     * SQLite key: tp301_informationkey30_mdk10
     * [en] No or incomplete documentation to MD resulting in offsetting
     * [de] Keine oder nicht vollständige Unterlagen an MD mit Folge der Aufrechnung</pre>
     * @return [en] No or incomplete documentation to MD resulting in offsetting, [de] Keine oder nicht vollständige Unterlagen an MD mit Folge der Aufrechnung
     */
    public static String getTp301InformationKey30MDK10() {
        return get(TP_301_INFORMATION_KEY_30_MDK10).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK11
     * SQLite key: tp301_informationkey30_mdk11
     * [de] Rücknahme des Aufschlages, keine weitere Geltendmachung (KAIN)</pre>
     * @return [de] Rücknahme des Aufschlages, keine weitere Geltendmachung (KAIN)
     */
    public static String getTp301InformationKey30MDK11() {
        return get(TP_301_INFORMATION_KEY_30_MDK11).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK12
     * SQLite key: tp301_informationkey30_mdk12
     * [en] Information about MD break-off due to data correction with decrease of settlement amount by health insurance, test procedure finished
     * [de] Information durch die Krankenkasse über MD Abbruch wegen Datenkorrektur mit Minderung des Abrechnungsbetrages, Prüfverfahren beendet</pre>
     * @return [en] Information about MD break-off due to data correction with decrease of settlement amount by health insurance, test procedure finished, [de] Information durch die Krankenkasse über MD Abbruch wegen Datenkorrektur mit Minderung des Abrechnungsbetrages, Prüfverfahren beendet
     */
    public static String getTp301InformationKey30MDK12() {
        return get(TP_301_INFORMATION_KEY_30_MDK12).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK13
     * SQLite key: tp301_informationkey30_mdk13
     * [en] Information about MD break-off due to data correction without decrease of settlement amount by health insurance, test procedure finished
     * [de] Information durch die Krankenkasse über MD Abbruch wegen Datenkorrektur ohne Minderung des Abrechnungsbetrages, Prüfverfahren beendet</pre>
     * @return [en] Information about MD break-off due to data correction without decrease of settlement amount by health insurance, test procedure finished, [de] Information durch die Krankenkasse über MD Abbruch wegen Datenkorrektur ohne Minderung des Abrechnungsbetrages, Prüfverfahren beendet
     */
    public static String getTp301InformationKey30MDK13() {
        return get(TP_301_INFORMATION_KEY_30_MDK13).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK14
     * SQLite key: tp301_informationkey30_mdk14
     * [de] Endgültige Anpassung eines bereits geltend gemachten Aufschlages (KAIN)</pre>
     * @return [de] Endgültige Anpassung eines bereits geltend gemachten Aufschlages (KAIN)
     */
    public static String getTp301InformationKey30MDK14() {
        return get(TP_301_INFORMATION_KEY_30_MDK14).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK20
     * SQLite key: tp301_informationkey30_mdk20
     * [de] Datum der leistungsrechtlichen Entscheidung</pre>
     * @return [de] Datum der leistungsrechtlichen Entscheidung
     */
    public static String getTp301InformationKey30MDK20() {
        return get(TP_301_INFORMATION_KEY_30_MDK20).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK30
     * SQLite key: tp301_informationkey30_mdk30
     * [de] Keine fristgemäße Übermittlung der Unterlagen. Die Krankenhausabrechnung gilt als erörtert gemäß § 7 Abs. 2 Satz 10 PrüfvV (KAIN)</pre>
     * @return [de] Keine fristgemäße Übermittlung der Unterlagen. Die Krankenhausabrechnung gilt als erörtert gemäß § 7 Abs. 2 Satz 10 PrüfvV (KAIN)
     */
    public static String getTp301InformationKey30MDK30() {
        return get(TP_301_INFORMATION_KEY_30_MDK30).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_MDK31
     * SQLite key: tp301_informationkey30_mdk31
     * [de] Diese vom MD konkret benannten angeforderten Unterlagen wurden nicht fristgemäß vorgelegt und können nicht im Erörterungsverfahren vorgelegt werden gemäß § 7 Abs. 2 Satz 11 PrüfvV (KAIN)</pre>
     * @return [de] Diese vom MD konkret benannten angeforderten Unterlagen wurden nicht fristgemäß vorgelegt und können nicht im Erörterungsverfahren vorgelegt werden gemäß § 7 Abs. 2 Satz 11 PrüfvV (KAIN)
     */
    public static String getTp301InformationKey30MDK31() {
        return get(TP_301_INFORMATION_KEY_30_MDK31).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_NVI01
     * SQLite key: tp301_informationkey30_nvi01
     * [en] Proposal for a post-procedure, reasoned opinioncase.merging.do.saveAndOpen=Save case and open
     * [de] Vorschlag eines Nachverfahrens, begründete Stellungnahme</pre>
     * @return [en] Proposal for a post-procedure, reasoned opinioncase.merging.do.saveAndOpen=Save case and open, [de] Vorschlag eines Nachverfahrens, begründete Stellungnahme
     */
    public static String getTp301InformationKey30NVI01() {
        return get(TP_301_INFORMATION_KEY_30_NVI01).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_PF000
     * SQLite key: tp301_informationkey30_pf000
     * [en] primary bad allocation
     * [de] primäre Fehlbelegung</pre>
     * @return [en] primary bad allocation, [de] primäre Fehlbelegung
     */
    public static String getTp301InformationKey30PF000() {
        return get(TP_301_INFORMATION_KEY_30_PF000).value;
    }

    /**
     * <pre>TP_301_INFORMATION_KEY_30_SF000
     * SQLite key: tp301_informationkey30_sf000
     * [en] secondary bad allocation
     * [de] sekundäre Fehlbelegung</pre>
     * @return [en] secondary bad allocation, [de] sekundäre Fehlbelegung
     */
    public static String getTp301InformationKey30SF000() {
        return get(TP_301_INFORMATION_KEY_30_SF000).value;
    }

    /**
     * <pre>TRANSFERRING
     * SQLite key: transferring
     * [en] Transferring
     * [de] Verlegung</pre>
     * ATTENTION this value ('Transferring') seems to be also defined under the key ADMISSION_CAUSE_TRANSFERRING! this value ('Transferring') seems to be also defined under the key ICD_TYPE_TRANSFERRING!
     * @return [en] Transferring, [de] Verlegung
     */
    public static String getTransferring() {
        return get(TRANSFERRING).value;
    }

    /**
     * <pre>TREAT
     * SQLite key: treat
     * [en] Treat
     * [de] Behandeln</pre>
     * @return [en] Treat, [de] Behandeln
     */
    public static String getTreat() {
        return get(TREAT).value;
    }

    /**
     * <pre>TREATING_DEPARTMENT
     * SQLite key: treating_department
     * [de] KH interner Kurzname der beh. FAB (beh. FAB (intern))</pre>
     * @return [de] KH interner Kurzname der beh. FAB (beh. FAB (intern))
     */
    public static String getTreatingDepartment() {
        return get(TREATING_DEPARTMENT).value;
    }

    public static Translation getTreatingDepartmentObj() {
        return get(TREATING_DEPARTMENT);
    }

    /**
     * <pre>TREATING_DEPARTMENT_301
     * SQLite key: treating_department301
     * [de] §301-Schlüssel der FAB (beh. FAB §301)</pre>
     * @return [de] §301-Schlüssel der FAB (beh. FAB §301)
     */
    public static String getTreatingDepartment301() {
        return get(TREATING_DEPARTMENT_301).value;
    }

    public static Translation getTreatingDepartment301Obj() {
        return get(TREATING_DEPARTMENT_301);
    }

    /**
     * <pre>TREATING_DEPARTMENT_301_NAME
     * SQLite key: treating_department301_name
     * [de] §301-Name der FAB (beh. FAB)</pre>
     * @return [de] §301-Name der FAB (beh. FAB)
     */
    public static String getTreatingDepartment301Name() {
        return get(TREATING_DEPARTMENT_301_NAME).value;
    }

    public static Translation getTreatingDepartment301NameObj() {
        return get(TREATING_DEPARTMENT_301_NAME);
    }

    /**
     * <pre>TREATING_DEPARTMENT_SHORT
     * SQLite key: treating_department_short
     * [en] Treating Department §. 301 (Treat. 301)
     * [de] Behandelnde FAB nach §. 301 (Behandl. 301)</pre>
     * @return [en] Treating Department §. 301 (Treat. 301), [de] Behandelnde FAB nach §. 301 (Behandl. 301)
     */
    public static String getTreatingDepartmentShort() {
        return get(TREATING_DEPARTMENT_SHORT).value;
    }

    public static Translation getTreatingDepartmentShortObj() {
        return get(TREATING_DEPARTMENT_SHORT);
    }

    /**
     * <pre>TREATMENT
     * SQLite key: treatment
     * [en] Treatment
     * [de] Behandlung</pre>
     * ATTENTION this value ('Treatment') seems to be also defined under the key ACG_INDEX_TYPE_TRT! this value ('Treatment') seems to be also defined under the key ICD_TYPE_TREATMENT!
     * @return [en] Treatment, [de] Behandlung
     */
    public static String getTreatment() {
        return get(TREATMENT).value;
    }

    /**
     * <pre>TYPE_OF_SERVICE
     * SQLite key: typeofservice
     * [en] Type of Service
     * [de] Art der Leistung</pre>
     * @return [en] Type of Service, [de] Art der Leistung
     */
    public static String getTypeOfService() {
        return get(TYPE_OF_SERVICE).value;
    }

    /**
     * <pre>UNBILLED_DAYS
     * SQLite key: unbilleddays
     * [en] Unbilled Days (UBD)
     * [de] Tage ohne Berechnung (TOB)</pre>
     * @return [en] Unbilled Days (UBD), [de] Tage ohne Berechnung (TOB)
     */
    public static String getUnbilledDays() {
        return get(UNBILLED_DAYS).value;
    }

    public static Translation getUnbilledDaysObj() {
        return get(UNBILLED_DAYS);
    }

    /**
     * <pre>UNBILLED_DAYS_FROM
     * SQLite key: unbilleddays_from
     * [en] UBD from
     * [de] TOB von</pre>
     * @return [en] UBD from, [de] TOB von
     */
    public static String getUnbilledDaysFrom() {
        return get(UNBILLED_DAYS_FROM).value;
    }

    /**
     * <pre>UNBILLED_DAYS_TO
     * SQLite key: unbilleddays_to
     * [en] UBD to
     * [de] TOB bis</pre>
     * @return [en] UBD to, [de] TOB bis
     */
    public static String getUnbilledDaysTo() {
        return get(UNBILLED_DAYS_TO).value;
    }

    /**
     * <pre>UPDATED
     * SQLite key: updated
     * [en] updated (last Modification)
     * [de] Zeitpunkt der letzten Bearbeitung (Aktualisiert)</pre>
     * @return [en] updated (last Modification), [de] Zeitpunkt der letzten Bearbeitung (Aktualisiert)
     */
    public static String getUpdated() {
        return get(UPDATED).value;
    }

    public static Translation getUpdatedObj() {
        return get(UPDATED);
    }

    /**
     * <pre>UPDATED_FROM
     * SQLite key: updated_from
     * [en] last Modification from
     * [de] Aktualisiert von</pre>
     * @return [en] last Modification from, [de] Aktualisiert von
     */
    public static String getUpdatedFrom() {
        return get(UPDATED_FROM).value;
    }

    /**
     * <pre>UPDATED_TO
     * SQLite key: updated_to
     * [en] last Modification to
     * [de] Aktualisiert bis</pre>
     * @return [en] last Modification to, [de] Aktualisiert bis
     */
    public static String getUpdatedTo() {
        return get(UPDATED_TO).value;
    }

    /**
     * <pre>USE_TEMPLATE
     * SQLite key: usetemplate
     * [en] Template Usage
     * [de] Vorlange benutzen</pre>
     * @return [en] Template Usage, [de] Vorlange benutzen
     */
    public static String getUseTemplate() {
        return get(USE_TEMPLATE).value;
    }

    /**
     * <pre>USERS
     * SQLite key: users
     * [en] Users
     * [de] Benutzer</pre>
     * @return [en] Users, [de] Benutzer
     */
    public static String getUsers() {
        return get(USERS).value;
    }

    /**
     * <pre>VALIDATION_CASE_ALREADY_SELECTED
     * SQLite key: validation_case_already_selected
     * [de] Leistung wurde schon dem Vorgang zugefügt</pre>
     * @return [de] Leistung wurde schon dem Vorgang zugefügt
     */
    public static String getValidationCaseAlreadySelected() {
        return get(VALIDATION_CASE_ALREADY_SELECTED).value;
    }

    /**
     * <pre>VALIDATION_CASE_NUMBER_FOR_PATIENT_INVALID
     * SQLite key: validation_case_number_for_patient_invalid
     * [de] Leistungsnummer ist für den Patient nicht valide</pre>
     * @return [de] Leistungsnummer ist für den Patient nicht valide
     */
    public static String getValidationCaseNumberForPatientInvalid() {
        return get(VALIDATION_CASE_NUMBER_FOR_PATIENT_INVALID).value;
    }

    /**
     * <pre>VALIDATION_CATALOGDATA_NO_BEGE_EXISTS
     * SQLite key: validation_catalogdata_nobegeexists
     * [en] Catalog entry for this bege does not exists anymore!
     * [de] Die hinterlegte Berufsgenossenschaft wurde in der Zwischenzeit aus dem Katalog entfernt!</pre>
     * @return [en] Catalog entry for this bege does not exists anymore!, [de] Die hinterlegte Berufsgenossenschaft wurde in der Zwischenzeit aus dem Katalog entfernt!
     */
    public static String getValidationCatalogdataNoBegeExists() {
        return get(VALIDATION_CATALOGDATA_NO_BEGE_EXISTS).value;
    }

    /**
     * <pre>VALIDATION_CATALOGDATA_NO_BEGES_FOUND
     * SQLite key: validation_catalogdata_nobegesfound
     * [en] No Beges available in catalogdata!
     * [de] In den Katalogen wurden keine Berufsgenossenschaften hinterlegt!</pre>
     * @return [en] No Beges available in catalogdata!, [de] In den Katalogen wurden keine Berufsgenossenschaften hinterlegt!
     */
    public static String getValidationCatalogdataNoBegesFound() {
        return get(VALIDATION_CATALOGDATA_NO_BEGES_FOUND).value;
    }

    /**
     * <pre>VALIDATION_CATALOGDATA_NO_HOSPITAL_EXISTS
     * SQLite key: validation_catalogdata_nohospitalexists
     * [en] Catalog entry for this hospital does not exists anymore!
     * [de] Das hinterlegte Krankenhaus wurde in der Zwischenzeit aus dem Katalog entfernt!</pre>
     * @return [en] Catalog entry for this hospital does not exists anymore!, [de] Das hinterlegte Krankenhaus wurde in der Zwischenzeit aus dem Katalog entfernt!
     */
    public static String getValidationCatalogdataNoHospitalExists() {
        return get(VALIDATION_CATALOGDATA_NO_HOSPITAL_EXISTS).value;
    }

    /**
     * <pre>VALIDATION_CATALOGDATA_NO_HOSPITALS_FOUND
     * SQLite key: validation_catalogdata_nohospitalsfound
     * [en] No Hospitals available in catalogdata!
     * [de] In den Katalogen wurden keine Krankenhäuser hinterlegt!</pre>
     * @return [en] No Hospitals available in catalogdata!, [de] In den Katalogen wurden keine Krankenhäuser hinterlegt!
     */
    public static String getValidationCatalogdataNoHospitalsFound() {
        return get(VALIDATION_CATALOGDATA_NO_HOSPITALS_FOUND).value;
    }

    /**
     * <pre>VALIDATION_CATALOGDATA_NO_INSURANCES_EXISTS
     * SQLite key: validation_catalogdata_noinsurancesexists
     * [en] Catalog entry for this Insurance does not exists anymore!
     * [de] Die hinterlegte Krankenkasse wurde in der Zwischenzeit aus dem Katalog entfernt!</pre>
     * @return [en] Catalog entry for this Insurance does not exists anymore!, [de] Die hinterlegte Krankenkasse wurde in der Zwischenzeit aus dem Katalog entfernt!
     */
    public static String getValidationCatalogdataNoInsurancesExists() {
        return get(VALIDATION_CATALOGDATA_NO_INSURANCES_EXISTS).value;
    }

    /**
     * <pre>VALIDATION_CATALOGDATA_NO_INSURANCES_FOUND
     * SQLite key: validation_catalogdata_noinsurancesfound
     * [en] No Insurances available in catalogdata!
     * [de] In den Katalogen wurden keine Krankenkassen hinterlegt!</pre>
     * @return [en] No Insurances available in catalogdata!, [de] In den Katalogen wurden keine Krankenkassen hinterlegt!
     */
    public static String getValidationCatalogdataNoInsurancesFound() {
        return get(VALIDATION_CATALOGDATA_NO_INSURANCES_FOUND).value;
    }

    /**
     * <pre>VALIDATION_CATALOGDATA_NO_MDK_EXISTS
     * SQLite key: validation_catalogdata_nomdkexists
     * [en] Catalog entry for this md does not exists anymore!
     * [de] Der hinterlegte medizinische Dienst wurde in der Zwischenzeit aus dem Katalog entfernt!</pre>
     * @return [en] Catalog entry for this md does not exists anymore!, [de] Der hinterlegte medizinische Dienst wurde in der Zwischenzeit aus dem Katalog entfernt!
     */
    public static String getValidationCatalogdataNoMdkExists() {
        return get(VALIDATION_CATALOGDATA_NO_MDK_EXISTS).value;
    }

    /**
     * <pre>VALIDATION_CATALOGDATA_NO_MDKS_FOUND
     * SQLite key: validation_catalogdata_nomdksfound
     * [en] No MDs available in catalogdata!
     * [de] In den Katalogen wurden keine medizinischen Dienste hinterlegt!</pre>
     * @return [en] No MDs available in catalogdata!, [de] In den Katalogen wurden keine medizinischen Dienste hinterlegt!
     */
    public static String getValidationCatalogdataNoMdksFound() {
        return get(VALIDATION_CATALOGDATA_NO_MDKS_FOUND).value;
    }

    /**
     * <pre>VALIDATION_ERROR_CASE_ALREADY_EXISTS
     * SQLite key: validation_error_casealreadyexists
     * [en] A case with casenumber {0} already exists!
     * [de] Ein Fall mit der Nummer {0} wurde bereits hinzugefügt!</pre>
     * @param pParams placeholder replacements
     * @return [en] A case with casenumber {0} already exists!, [de] Ein Fall mit der Nummer {0} wurde bereits hinzugefügt!
     */
    public static String getValidationErrorCaseAlreadyExists(final Object... pParams) {
        return get(VALIDATION_ERROR_CASE_ALREADY_EXISTS, pParams).value;
    }

    /**
     * <pre>VALIDATION_ERROR_ERROR_COUNT
     * SQLite key: validation_error_errorcount
     * [en] Count of Errors {0}:
     * [de] Anzahl der Fehler {0}:</pre>
     * @param pParams placeholder replacements
     * @return [en] Count of Errors {0}:, [de] Anzahl der Fehler {0}:
     */
    public static String getValidationErrorErrorCount(final Object... pParams) {
        return get(VALIDATION_ERROR_ERROR_COUNT, pParams).value;
    }

    /**
     * <pre>VALIDATION_ERROR_INVALID_BILL
     * SQLite key: validation_error_invalidbill
     * [en] Invalid bill number!
     * [de] Rechnungsnummer ist nicht eingegeben!</pre>
     * @return [en] Invalid bill number!, [de] Rechnungsnummer ist nicht eingegeben!
     */
    public static String getValidationErrorInvalidBill() {
        return get(VALIDATION_ERROR_INVALID_BILL).value;
    }

    /**
     * <pre>VALIDATION_ERROR_INVALID_DEPARTMENT
     * SQLite key: validation_error_invaliddepartment
     * [en] Department name is not valid!
     * [de] Bezeichnung der Fachabteilung ist nicht korrekt!</pre>
     * @return [en] Department name is not valid!, [de] Bezeichnung der Fachabteilung ist nicht korrekt!
     */
    public static String getValidationErrorInvalidDepartment() {
        return get(VALIDATION_ERROR_INVALID_DEPARTMENT).value;
    }

    /**
     * <pre>VALIDATION_ERROR_INVALID_DEPARTMENT_INDEX
     * SQLite key: validation_error_invaliddepartmentindex
     * [en] Department name at index {0} is not valid!
     * [de] Bezeichnung der Fachabteilung an Position {0} ist nicht korrekt!</pre>
     * @param pParams placeholder replacements
     * @return [en] Department name at index {0} is not valid!, [de] Bezeichnung der Fachabteilung an Position {0} ist nicht korrekt!
     */
    public static String getValidationErrorInvalidDepartmentIndex(final Object... pParams) {
        return get(VALIDATION_ERROR_INVALID_DEPARTMENT_INDEX, pParams).value;
    }

    /**
     * <pre>VALIDATION_ERROR_INVALID_HOSPITAL_IDENT
     * SQLite key: validation_error_invalidhospitalident
     * [en] Hospitalidentifier is not valid!
     * [de] IKZ des Krankenhauses ist nicht korrekt!</pre>
     * @return [en] Hospitalidentifier is not valid!, [de] IKZ des Krankenhauses ist nicht korrekt!
     */
    public static String getValidationErrorInvalidHospitalIdent() {
        return get(VALIDATION_ERROR_INVALID_HOSPITAL_IDENT).value;
    }

    /**
     * <pre>VALIDATION_ERROR_INVALID_INSURANCE_IDENT
     * SQLite key: validation_error_invalidinsuranceident
     * [en] Insuranceidentifier is not valid!
     * [de] IKZ der Krankenkasse ist nicht korrekt!</pre>
     * @return [en] Insuranceidentifier is not valid!, [de] IKZ der Krankenkasse ist nicht korrekt!
     */
    public static String getValidationErrorInvalidInsuranceIdent() {
        return get(VALIDATION_ERROR_INVALID_INSURANCE_IDENT).value;
    }

    /**
     * <pre>VALIDATION_ERROR_INVALID_MDK_NAME
     * SQLite key: validationerror_invalid_mdkname
     * [en] Mdk Name is not valid!
     * [de] MD-Name ist nicht korrekt!</pre>
     * @return [en] Mdk Name is not valid!, [de] MD-Name ist nicht korrekt!
     */
    public static String getValidationErrorInvalidMdkName() {
        return get(VALIDATION_ERROR_INVALID_MDK_NAME).value;
    }

    /**
     * <pre>VALIDATION_ERROR_NO_ADMISSION_DAY_CASE
     * SQLite key: validation_error_noadmissiondaycase
     * [en] Enter a admission date for the case!
     * [de] Geben Sie ein Aufnahmedatum für den Fall ein!</pre>
     * @return [en] Enter a admission date for the case!, [de] Geben Sie ein Aufnahmedatum für den Fall ein!
     */
    public static String getValidationErrorNoAdmissionDayCase() {
        return get(VALIDATION_ERROR_NO_ADMISSION_DAY_CASE).value;
    }

    /**
     * <pre>VALIDATION_ERROR_NO_ADMISSION_DAY_DEPARTMENT
     * SQLite key: validation_error_noadmissiondaydepartment
     * [en] Enter a admission date for the department!
     * [de] Geben Sie ein Aufnahmedatum für die Fachabteilung ein!</pre>
     * @return [en] Enter a admission date for the department!, [de] Geben Sie ein Aufnahmedatum für die Fachabteilung ein!
     */
    public static String getValidationErrorNoAdmissionDayDepartment() {
        return get(VALIDATION_ERROR_NO_ADMISSION_DAY_DEPARTMENT).value;
    }

    /**
     * <pre>VALIDATION_ERROR_NO_ALTER
     * SQLite key: validation_error_noalter
     * [en] Please enter the patient's age!
     * [de] Geben Sie bitte das Alter des Patienten ein!</pre>
     * @return [en] Please enter the patient's age!, [de] Geben Sie bitte das Alter des Patienten ein!
     */
    public static String getValidationErrorNoAlter() {
        return get(VALIDATION_ERROR_NO_ALTER).value;
    }

    /**
     * <pre>VALIDATION_ERROR_NO_ALTER_BIRTHDATE
     * SQLite key: validation_error_noalter_birthdate
     * [en] Date of birth will be calculated automatically.
     * [de] Das Geburtsdatum wird automatisch berechnet.</pre>
     * @return [en] Date of birth will be calculated automatically., [de] Das Geburtsdatum wird automatisch berechnet.
     */
    public static String getValidationErrorNoAlterBirthdate() {
        return get(VALIDATION_ERROR_NO_ALTER_BIRTHDATE).value;
    }

    /**
     * <pre>VALIDATION_ERROR_NO_CASE_NUMBER
     * SQLite key: validation_error_nocasenumber
     * [en] Enter a valid Casenumber!
     * [de] Geben sie eine gültige Fallnummer ein!</pre>
     * @return [en] Enter a valid Casenumber!, [de] Geben sie eine gültige Fallnummer ein!
     */
    public static String getValidationErrorNoCaseNumber() {
        return get(VALIDATION_ERROR_NO_CASE_NUMBER).value;
    }

    /**
     * <pre>VALIDATION_ERROR_NO_DISCHARGE_DAY_CASE
     * SQLite key: validation_error_nodischargedaycase
     * [en] Enter a discharge date for the case!
     * [de] Geben Sie ein Entlassungsdatum für den Fall ein!</pre>
     * @return [en] Enter a discharge date for the case!, [de] Geben Sie ein Entlassungsdatum für den Fall ein!
     */
    public static String getValidationErrorNoDischargeDayCase() {
        return get(VALIDATION_ERROR_NO_DISCHARGE_DAY_CASE).value;
    }

    /**
     * <pre>VALIDATION_ERROR_NO_DISCHARGE_DAY_DEPARTMENT
     * SQLite key: validation_error_nodischargedaydepartment
     * [en] Enter a discharge date for the department!
     * [de] Geben Sie ein Entlassungsdatum für die Fachabteilung ein!</pre>
     * @return [en] Enter a discharge date for the department!, [de] Geben Sie ein Entlassungsdatum für die Fachabteilung ein!
     */
    public static String getValidationErrorNoDischargeDayDepartment() {
        return get(VALIDATION_ERROR_NO_DISCHARGE_DAY_DEPARTMENT).value;
    }

    /**
     * <pre>VALIDATION_ERROR_NO_DISCHARGE_DAY_DEPARTMENT_INDEX
     * SQLite key: validation_error_nodischargedaydepartmentindex
     * [en] Enter a discharge date for the department at index {0} !
     * [de] Geben Sie ein Entlassungsdatum für die Fachabteilung an Position {0} an!</pre>
     * @param pParams placeholder replacements
     * @return [en] Enter a discharge date for the department at index {0} !, [de] Geben Sie ein Entlassungsdatum für die Fachabteilung an Position {0} an!
     */
    public static String getValidationErrorNoDischargeDayDepartmentIndex(final Object... pParams) {
        return get(VALIDATION_ERROR_NO_DISCHARGE_DAY_DEPARTMENT_INDEX, pParams).value;
    }

    /**
     * <pre>VALIDATION_ERROR_NO_PATIENT_BIRTHDAY
     * SQLite key: validation_error_nopatientbirthday
     * [en] Enter patient birthday!
     * [de] Geben Sie den Geburtstag des Patienten ein!</pre>
     * @return [en] Enter patient birthday!, [de] Geben Sie den Geburtstag des Patienten ein!
     */
    public static String getValidationErrorNoPatientBirthday() {
        return get(VALIDATION_ERROR_NO_PATIENT_BIRTHDAY).value;
    }

    /**
     * <pre>VALIDATION_ERROR_NO_PATIENT_LAST_NAME
     * SQLite key: validation_error_nopatientlastname
     * [en] Enter patient lastname!
     * [de] Geben Sie den Nachnamen des Patienten ein!</pre>
     * @return [en] Enter patient lastname!, [de] Geben Sie den Nachnamen des Patienten ein!
     */
    public static String getValidationErrorNoPatientLastName() {
        return get(VALIDATION_ERROR_NO_PATIENT_LAST_NAME).value;
    }

    /**
     * <pre>VALIDATION_ERROR_NO_PATIENT_NUMBER
     * SQLite key: validation_error_nopatientnumber
     * [en] Enter a patient number!
     * [de] Geben Sie eine Patientennummer ein!</pre>
     * @return [en] Enter a patient number!, [de] Geben Sie eine Patientennummer ein!
     */
    public static String getValidationErrorNoPatientNumber() {
        return get(VALIDATION_ERROR_NO_PATIENT_NUMBER).value;
    }

    /**
     * <pre>VALIDATION_ERROR_OPS_DATE
     * SQLite key: validation_error_opsdate
     * [en] Some procedures do not have a execution date!
     * [de] Einige Prozeduren haben kein Ausführungsdatum!</pre>
     * @return [en] Some procedures do not have a execution date!, [de] Einige Prozeduren haben kein Ausführungsdatum!
     */
    public static String getValidationErrorOpsDate() {
        return get(VALIDATION_ERROR_OPS_DATE).value;
    }

    /**
     * <pre>VALIDATION_ERROR_OPS_DATE_INDEX
     * SQLite key: validation_error_opsdateindex
     * [en] Some procedures at index {0} do not have a execution date!
     * [de] Einige Prozeduren haben kein Ausführungsdatum an Position {0} !</pre>
     * @param pParams placeholder replacements
     * @return [en] Some procedures at index {0} do not have a execution date!, [de] Einige Prozeduren haben kein Ausführungsdatum an Position {0} !
     */
    public static String getValidationErrorOpsDateIndex(final Object... pParams) {
        return get(VALIDATION_ERROR_OPS_DATE_INDEX, pParams).value;
    }

    /**
     * <pre>VALIDATION_ERROR_TIME_FORMAT
     * SQLite key: validation_error_timeformat
     * [en] Wrong time format, use hh:mm!
     * [de] Falsches Zeitformat, benutzen Sie hh:mm!</pre>
     * @return [en] Wrong time format, use hh:mm!, [de] Falsches Zeitformat, benutzen Sie hh:mm!
     */
    public static String getValidationErrorTimeFormat() {
        return get(VALIDATION_ERROR_TIME_FORMAT).value;
    }

    /**
     * <pre>VALIDATION_ERROR_WARNING_COUNT
     * SQLite key: validation_error_warningcount
     * [en] Count of Warnings {0}:
     * [de] Anzahl der Warnungen {0}:</pre>
     * @param pParams placeholder replacements
     * @return [en] Count of Warnings {0}:, [de] Anzahl der Warnungen {0}:
     */
    public static String getValidationErrorWarningCount(final Object... pParams) {
        return get(VALIDATION_ERROR_WARNING_COUNT, pParams).value;
    }

    /**
     * <pre>VALIDATION_MASTERDATA_NO_ACTION_TYPES_FOUND
     * SQLite key: validation_masterdata_noactiontypesfound
     * [en] No Actiontypes available in masterdata!
     * [de] In den Stammdaten wurden keine Aktionstypen hinterlegt!</pre>
     * @return [en] No Actiontypes available in masterdata!, [de] In den Stammdaten wurden keine Aktionstypen hinterlegt!
     */
    public static String getValidationMasterdataNoActionTypesFound() {
        return get(VALIDATION_MASTERDATA_NO_ACTION_TYPES_FOUND).value;
    }

    /**
     * <pre>VALIDATION_MASTERDATA_NO_AUDIT_REASONS_FOUND
     * SQLite key: validation_masterdata_noauditreasonsfound
     * [en] No Auditreasons available in masterdata!
     * [de] In den Stammdaten wurden keine Prüfgründe hinterlegt!</pre>
     * @return [en] No Auditreasons available in masterdata!, [de] In den Stammdaten wurden keine Prüfgründe hinterlegt!
     */
    public static String getValidationMasterdataNoAuditReasonsFound() {
        return get(VALIDATION_MASTERDATA_NO_AUDIT_REASONS_FOUND).value;
    }

    /**
     * <pre>VALIDATION_MASTERDATA_NO_DOCUMENT_TYPES_FOUND
     * SQLite key: validation_masterdata_nodocumenttypesfound
     * [en] No Documenttypes available in masterdata!
     * [de] In den Stammdaten wurden keine passenden Dokumententypen hinterlegt!</pre>
     * @return [en] No Documenttypes available in masterdata!, [de] In den Stammdaten wurden keine passenden Dokumententypen hinterlegt!
     */
    public static String getValidationMasterdataNoDocumentTypesFound() {
        return get(VALIDATION_MASTERDATA_NO_DOCUMENT_TYPES_FOUND).value;
    }

    /**
     * <pre>VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_MAIN_CATEGORY_FOUND
     * SQLite key: validation_masterdata_nodrafttypesformaincategoryfound
     * [en] No Drafttypes for Maincategory available in catalogdata!
     * [de] In den Stammdaten wurden keine Vorlagetypen für die Hauptkategorie hinterlegt!</pre>
     * @return [en] No Drafttypes for Maincategory available in catalogdata!, [de] In den Stammdaten wurden keine Vorlagetypen für die Hauptkategorie hinterlegt!
     */
    public static String getValidationMasterdataNoDraftTypesForMainCategoryFound() {
        return get(VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_MAIN_CATEGORY_FOUND).value;
    }

    /**
     * <pre>VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_SUB_CATEGORY_1_FOUND
     * SQLite key: validation_masterdata_nodrafttypesforsubcategory1found
     * [en] No Drafttypes for 1. Subcategory available in catalogdata!
     * [de] In den Stammdaten wurden keine Vorlagetypen für die 1. Unterkategorie hinterlegt!</pre>
     * @return [en] No Drafttypes for 1. Subcategory available in catalogdata!, [de] In den Stammdaten wurden keine Vorlagetypen für die 1. Unterkategorie hinterlegt!
     */
    public static String getValidationMasterdataNoDraftTypesForSubCategory1Found() {
        return get(VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_SUB_CATEGORY_1_FOUND).value;
    }

    /**
     * <pre>VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_SUB_CATEGORY_2_FOUND
     * SQLite key: validation_masterdata_nodrafttypesforsubcategory2found
     * [en] No Drafttypes for 2. Subcategory available in catalogdata!
     * [de] In den Stammdaten wurden keine Vorlagetypen für die 2. Unterkategorie hinterlegt!</pre>
     * @return [en] No Drafttypes for 2. Subcategory available in catalogdata!, [de] In den Stammdaten wurden keine Vorlagetypen für die 2. Unterkategorie hinterlegt!
     */
    public static String getValidationMasterdataNoDraftTypesForSubCategory2Found() {
        return get(VALIDATION_MASTERDATA_NO_DRAFT_TYPES_FOR_SUB_CATEGORY_2_FOUND).value;
    }

    /**
     * <pre>VALIDATION_MASTERDATA_NO_REMINDER_TYPES_FOUND
     * SQLite key: validation_masterdata_noremindertypesfound
     * [en] No Remindertypes available in masterdata!
     * [de] In den Stammdaten wurden keine Arten der Wiedervorlage hinterlegt!</pre>
     * @return [en] No Remindertypes available in masterdata!, [de] In den Stammdaten wurden keine Arten der Wiedervorlage hinterlegt!
     */
    public static String getValidationMasterdataNoReminderTypesFound() {
        return get(VALIDATION_MASTERDATA_NO_REMINDER_TYPES_FOUND).value;
    }

    /**
     * <pre>VALIDATION_MASTERDATA_NO_REQUEST_STATUS_FOUND
     * SQLite key: validation_masterdata_norequeststatusfound
     * [en] No Requeststatus available in masterdata!
     * [de] In den Stammdaten wurden keine Anfrage-Status hinterlegt!</pre>
     * @return [en] No Requeststatus available in masterdata!, [de] In den Stammdaten wurden keine Anfrage-Status hinterlegt!
     */
    public static String getValidationMasterdataNoRequestStatusFound() {
        return get(VALIDATION_MASTERDATA_NO_REQUEST_STATUS_FOUND).value;
    }

    /**
     * <pre>VALIDATION_MASTERDATA_NO_USERS_FOUND
     * SQLite key: validation_masterdata_nousersfound
     * [en] No Users available in masterdata!
     * [de] In den Stammdaten wurden keine passenden Benutzer hinterlegt!</pre>
     * @return [en] No Users available in masterdata!, [de] In den Stammdaten wurden keine passenden Benutzer hinterlegt!
     */
    public static String getValidationMasterdataNoUsersFound() {
        return get(VALIDATION_MASTERDATA_NO_USERS_FOUND).value;
    }

    /**
     * <pre>VALIDATION_SELECT_CASE_FROM_LIST
     * SQLite key: validation_select_case_from_list
     * [de] Wählen Sie bitte eine Leistungsnummer aus der Liste</pre>
     * @return [de] Wählen Sie bitte eine Leistungsnummer aus der Liste
     */
    public static String getValidationSelectCaseFromList() {
        return get(VALIDATION_SELECT_CASE_FROM_LIST).value;
    }

    /**
     * <pre>VALIDATION_WARNING_COMBINATION_ALLREADY_EXISTS_IDENT_CS_NUMBER
     * SQLite key: validation_warning_combinationallreadyexistsidentcsnumber
     * [en] Combination of Hospitalidentifier and Casenumber allready exists!
     * [de] Diese Kombination von IKZ und Fallnummer existiert bereits! Es wird eine neue Fallversion angelegt.</pre>
     * @return [en] Combination of Hospitalidentifier and Casenumber allready exists!, [de] Diese Kombination von IKZ und Fallnummer existiert bereits! Es wird eine neue Fallversion angelegt.
     */
    public static String getValidationWarningCombinationAllreadyExistsIdentCsNumber() {
        return get(VALIDATION_WARNING_COMBINATION_ALLREADY_EXISTS_IDENT_CS_NUMBER).value;
    }

    /**
     * <pre>VALIDATION_WARNING_DISCHARGE_REASON_12_MATCH_NOT_34
     * SQLite key: validation_warning_dischargereason12matchnot34
     * [en] Discharge reason seems invalid
     * [de] Entlassungsgrund erscheint unplausibel</pre>
     * @return [en] Discharge reason seems invalid, [de] Entlassungsgrund erscheint unplausibel
     */
    public static String getValidationWarningDischargeReason12MatchNot34() {
        return get(VALIDATION_WARNING_DISCHARGE_REASON_12_MATCH_NOT_34).value;
    }

    /**
     * <pre>VALIDATION_WARNING_DISCHARGE_REASON_34_MATCH_NOT_12
     * SQLite key: validation_warning_dischargereason34matchnot12
     * [en] Discharge reason 2 seems invalid
     * [de] Entlassungsgrund2 erscheint unplausibel</pre>
     * @return [en] Discharge reason 2 seems invalid, [de] Entlassungsgrund2 erscheint unplausibel
     */
    public static String getValidationWarningDischargeReason34MatchNot12() {
        return get(VALIDATION_WARNING_DISCHARGE_REASON_34_MATCH_NOT_12).value;
    }

    /**
     * <pre>VALIDATION_WARNING_NO_ORIGIN_HOSPITAL
     * SQLite key: validation_warning_nooriginhospital
     * [en] Admission cause is set as Transfering. There should be an origin hospital!
     * [de] Hinweis: Aufnahmegrund ist eine Verlegung. Es sollte ein einweisendes Krankenhaus angegeben werden!</pre>
     * @return [en] Admission cause is set as Transfering. There should be an origin hospital!, [de] Hinweis: Aufnahmegrund ist eine Verlegung. Es sollte ein einweisendes Krankenhaus angegeben werden!
     */
    public static String getValidationWarningNoOriginHospital() {
        return get(VALIDATION_WARNING_NO_ORIGIN_HOSPITAL).value;
    }

    /**
     * <pre>VALIDATION_WARNING_OPS_DATE
     * SQLite key: validation_warning_opsdate
     * [en] The date of the procedure is outside the stay in the department!
     * [de] Das Datum der Prozedur ist außerhalb der Aufenthaltsdauer in der Abteilung!</pre>
     * @return [en] The date of the procedure is outside the stay in the department!, [de] Das Datum der Prozedur ist außerhalb der Aufenthaltsdauer in der Abteilung!
     */
    public static String getValidationWarningOpsDate() {
        return get(VALIDATION_WARNING_OPS_DATE).value;
    }

    /**
     * <pre>VALIDATION_WARNING_PSEUDO_DEPARTMENT
     * SQLite key: validation_warning_pseudodepartment
     * [en] Pseudo-Department should not have one or more Diagnosis!
     * [de] Pseudo-Fachabteilungen sollten nicht eine oder mehrere Diagnosen haben!</pre>
     * @return [en] Pseudo-Department should not have one or more Diagnosis!, [de] Pseudo-Fachabteilungen sollten nicht eine oder mehrere Diagnosen haben!
     */
    public static String getValidationWarningPseudoDepartment() {
        return get(VALIDATION_WARNING_PSEUDO_DEPARTMENT).value;
    }

    /**
     * <pre>VERSION
     * SQLite key: version
     * [en] Version
     * [de] Version</pre>
     * @return [en] Version, [de] Version
     */
    public static String getVersion() {
        return get(VERSION).value;
    }

    /**
     * <pre>VERSION_ADD_CONFIRM
     * SQLite key: version_add_confirm
     * [en] Do you want to create new version of this case?
     * [de] Wollen Sie eine neue Version von diesem Fall anlegen?</pre>
     * @return [en] Do you want to create new version of this case?, [de] Wollen Sie eine neue Version von diesem Fall anlegen?
     */
    public static String getVersionAddConfirm() {
        return get(VERSION_ADD_CONFIRM).value;
    }

    /**
     * <pre>VERSION_NUMBER
     * SQLite key: versionnumber
     * [en] Versionsnumber (Version)
     * [de] Versionsnummer (Version)</pre>
     * @return [en] Versionsnumber (Version), [de] Versionsnummer (Version)
     */
    public static String getVersionNumber() {
        return get(VERSION_NUMBER).value;
    }

    public static Translation getVersionNumberObj() {
        return get(VERSION_NUMBER);
    }

    /**
     * <pre>VERSION_NUMBER_FROM
     * SQLite key: versionnumber_from
     * [en] Versionsnumber to
     * [de] Versionsnummer von</pre>
     * @return [en] Versionsnumber to, [de] Versionsnummer von
     */
    public static String getVersionNumberFrom() {
        return get(VERSION_NUMBER_FROM).value;
    }

    /**
     * <pre>VERSION_NUMBER_TO
     * SQLite key: versionnumber_to
     * [en] Versionsnumber from
     * [de] Versionsnummer bis</pre>
     * @return [en] Versionsnumber from, [de] Versionsnummer bis
     */
    public static String getVersionNumberTo() {
        return get(VERSION_NUMBER_TO).value;
    }

    /**
     * <pre>VERSION_PARENT_ADD_CASE
     * SQLite key: version_parent_addcase
     * [en] Version created with manual case input
     * [de] Version angelegt bei manueller Falleingabe</pre>
     * @return [en] Version created with manual case input, [de] Version angelegt bei manueller Falleingabe
     */
    public static String getVersionParentAddCase() {
        return get(VERSION_PARENT_ADD_CASE).value;
    }

    /**
     * <pre>VERSION_RISK_TYPE_AUDIT_CASE_DIALOG
     * SQLite key: version_risk_type_auditcasedialog
     * [en] Audit Case Dialog
     * [de] Anfrage Falldialog</pre>
     * @return [en] Audit Case Dialog, [de] Anfrage Falldialog
     */
    public static String getVersionRiskTypeAuditCaseDialog() {
        return get(VERSION_RISK_TYPE_AUDIT_CASE_DIALOG).value;
    }

    /**
     * <pre>VERSION_RISK_TYPE_AUDIT_MD
     * SQLite key: version_risk_type_audit_md
     * [en] Audit MD
     * [de] Anfrage MD</pre>
     * @return [en] Audit MD, [de] Anfrage MD
     */
    public static String getVersionRiskTypeAuditMD() {
        return get(VERSION_RISK_TYPE_AUDIT_MD).value;
    }

    /**
     * <pre>VERSION_RISK_TYPE_BEFORE_BILLING
     * SQLite key: version_risk_type_beforebilling
     * [en] By Billing
     * [de] Bei Abrechnung</pre>
     * @return [en] By Billing, [de] Bei Abrechnung
     */
    public static String getVersionRiskTypeBeforeBilling() {
        return get(VERSION_RISK_TYPE_BEFORE_BILLING).value;
    }

    /**
     * <pre>VERSION_RISK_TYPE_CASE_FINALISATION
     * SQLite key: version_risk_type_casefinalisation
     * [en] Case Finalisation
     * [de] Vorgangsabschluss</pre>
     * @return [en] Case Finalisation, [de] Vorgangsabschluss
     */
    public static String getVersionRiskTypeCaseFinalisation() {
        return get(VERSION_RISK_TYPE_CASE_FINALISATION).value;
    }

    /**
     * <pre>VERSION_RISK_TYPE_NOT_SET
     * SQLite key: version_risk_type_not_set
     * [en] not set
     * [de] Keine Zuordnung</pre>
     * ATTENTION this value ('not set') seems to be also defined under the key REMINDER_DUEDATE_IS_BLANK!
     * @return [en] not set, [de] Keine Zuordnung
     */
    public static String getVersionRiskTypeNotSet() {
        return get(VERSION_RISK_TYPE_NOT_SET).value;
    }

    /**
     * <pre>VERSIONCONTROLL_COMMENT
     * SQLite key: versioncontroll_comment
     * [en] Comment
     * [de] Kommentar</pre>
     * ATTENTION this value ('Comment') seems to be also defined under the key COMMENT!
     * @return [en] Comment, [de] Kommentar
     */
    public static String getVersioncontrollComment() {
        return get(VERSIONCONTROLL_COMMENT).value;
    }

    /**
     * <pre>VERSIONCONTROLL_CREATE_NEW_VERSION
     * SQLite key: versioncontroll_createnewversion
     * [en] create Version
     * [de] Version anlegen</pre>
     * @return [en] create Version, [de] Version anlegen
     */
    public static String getVersioncontrollCreateNewVersion() {
        return get(VERSIONCONTROLL_CREATE_NEW_VERSION).value;
    }

    /**
     * <pre>VERSIONCONTROLL_DETAILS
     * SQLite key: versioncontroll_details
     * [en] Versiondetails
     * [de] Versionseinzelheiten</pre>
     * @return [en] Versiondetails, [de] Versionseinzelheiten
     */
    public static String getVersioncontrollDetails() {
        return get(VERSIONCONTROLL_DETAILS).value;
    }

    /**
     * <pre>VERSIONCONTROLL_ERROR
     * SQLite key: versioncontroll_error
     * [en] Can not delete.
     * [de] Löschen nicht möglich.</pre>
     * @return [en] Can not delete., [de] Löschen nicht möglich.
     */
    public static String getVersioncontrollError() {
        return get(VERSIONCONTROLL_ERROR).value;
    }

    /**
     * <pre>VERSIONCONTROLL_HINT_ENTER_COMMENT
     * SQLite key: versioncontroll_hint_entercomment
     * [en] Please enter a Comment!
     * [de] Bitte Kommentar angeben!</pre>
     * @return [en] Please enter a Comment!, [de] Bitte Kommentar angeben!
     */
    public static String getVersioncontrollHintEnterComment() {
        return get(VERSIONCONTROLL_HINT_ENTER_COMMENT).value;
    }

    /**
     * <pre>VERSIONCONTROLL_HINT_ONE_MUST_REMAIN
     * SQLite key: versioncontroll_hint_onemustremain
     * [en] At least 1 CP-Version must remain.
     * [de] Mind. 1 CP-Version muss existieren.</pre>
     * @return [en] At least 1 CP-Version must remain., [de] Mind. 1 CP-Version muss existieren.
     */
    public static String getVersioncontrollHintOneMustRemain() {
        return get(VERSIONCONTROLL_HINT_ONE_MUST_REMAIN).value;
    }

    /**
     * <pre>VERSIONCONTROLL_HINT_PARENT_VERSION
     * SQLite key: versioncontroll_hint_parentversion
     * [en] Parentversion of:
     * [de] Elternversion von:</pre>
     * @return [en] Parentversion of:, [de] Elternversion von:
     */
    public static String getVersioncontrollHintParentVersion() {
        return get(VERSIONCONTROLL_HINT_PARENT_VERSION).value;
    }

    /**
     * <pre>VERSIONCONTROLL_HINT_SELECT_VERSION
     * SQLite key: versioncontroll_hint_selectversion
     * [en] Please select a Version!
     * [de] Bitte Version auswählen!</pre>
     * @return [en] Please select a Version!, [de] Bitte Version auswählen!
     */
    public static String getVersioncontrollHintSelectVersion() {
        return get(VERSIONCONTROLL_HINT_SELECT_VERSION).value;
    }

    /**
     * <pre>VERSIONCONTROLL_TITLE
     * SQLite key: versioncontroll_title
     * [en] Versionmanagement
     * [de] Versionsverwaltung</pre>
     * @return [en] Versionmanagement, [de] Versionsverwaltung
     */
    public static String getVersioncontrollTitle() {
        return get(VERSIONCONTROLL_TITLE).value;
    }

    /**
     * <pre>VERSIONCONTROLL_VERSION_COMMENT
     * SQLite key: versioncontroll_versioncomment
     * [en] Versioncomment
     * [de] Versionskommentar</pre>
     * @return [en] Versioncomment, [de] Versionskommentar
     */
    public static String getVersioncontrollVersionComment() {
        return get(VERSIONCONTROLL_VERSION_COMMENT).value;
    }

    /**
     * <pre>WARD
     * SQLite key: ward
     * [en] Ward
     * [de] Station</pre>
     * @return [en] Ward, [de] Station
     */
    public static String getWard() {
        return get(WARD).value;
    }

    /**
     * <pre>WARD_GROUPING
     * SQLite key: wardgrouping
     * [en] Ward Grouping
     * [de] Stations Grouping</pre>
     * @return [en] Ward Grouping, [de] Stations Grouping
     */
    public static String getWardGrouping() {
        return get(WARD_GROUPING).value;
    }

    /**
     * <pre>WARNING
     * SQLite key: warning
     * [en] Warning (W)
     * [de] Warnung (W)</pre>
     * @return [en] Warning (W), [de] Warnung (W)
     */
    public static String getWarning() {
        return get(WARNING).value;
    }

    public static Translation getWarningObj() {
        return get(WARNING);
    }

    /**
     * <pre>WEBAPP_OPEN_BTN
     * SQLite key: webapp_open_btn
     * [de] Konfiguration des checkpoint x (Web App )</pre>
     * @return [de] Konfiguration des checkpoint x (Web App )
     */
    public static String getWebappOpenBtn() {
        return get(WEBAPP_OPEN_BTN).value;
    }

    /**
     * <pre>WEBAPP_OPEN_BTN_TOOLTIP
     * SQLite key: webapp_open_btn_tooltip
     * [de] Konfiguration der Stammdaten, Benutzerverwaltung, Listenverwaltung, etc.</pre>
     * @return [de] Konfiguration der Stammdaten, Benutzerverwaltung, Listenverwaltung, etc.
     */
    public static String getWebappOpenBtnTooltip() {
        return get(WEBAPP_OPEN_BTN_TOOLTIP).value;
    }

    /**
     * <pre>WEBAPP_OPEN_MANAGEMENT
     * SQLite key: webapp_open_management
     * [de] Administration des checkpoint x Servers (Wildfly)</pre>
     * @return [de] Administration des checkpoint x Servers (Wildfly)
     */
    public static String getWebappOpenManagement() {
        return get(WEBAPP_OPEN_MANAGEMENT).value;
    }

    /**
     * <pre>WEBAPP_OPEN_MANAGEMENT_TOOLTIP
     * SQLite key: webapp_open_management_tooltip
     * [de] Administration des checkpoint x Servers (Wildfly) - nur für Administratoren</pre>
     * @return [de] Administration des checkpoint x Servers (Wildfly) - nur für Administratoren
     */
    public static String getWebappOpenManagementTooltip() {
        return get(WEBAPP_OPEN_MANAGEMENT_TOOLTIP).value;
    }

    /**
     * <pre>WEIGHT
     * SQLite key: weight
     * [en] Weight
     * [de] Gewicht</pre>
     * @return [en] Weight, [de] Gewicht
     */
    public static String getWeight() {
        return get(WEIGHT).value;
    }

    /**
     * <pre>WIEDERVORLAGE_COMMENT_DIALOG
     * SQLite key: wiedervorlage_comment_dialog
     * [en] Note
     * [de] Hinweis</pre>
     * ATTENTION this value ('Note') seems to be also defined under the key REPORT_DIALOG_HEADER_TEXT!
     * @return [en] Note, [de] Hinweis
     */
    public static String getWiedervorlageCommentDialog() {
        return get(WIEDERVORLAGE_COMMENT_DIALOG).value;
    }

    /**
     * <pre>WIEDERVORLAGE_COMMENT_INFO
     * SQLite key: wiedervorlage_comment_info
     * [en] The maximum number of characters allowed has been exceeded. 255 Chars is allowed
     * [de] Die maximal zulässige Zeichenanzahl wurde überschritten. 255 Zeichnen sind erlaubt</pre>
     * @return [en] The maximum number of characters allowed has been exceeded. 255 Chars is allowed, [de] Die maximal zulässige Zeichenanzahl wurde überschritten. 255 Zeichnen sind erlaubt
     */
    public static String getWiedervorlageCommentInfo() {
        return get(WIEDERVORLAGE_COMMENT_INFO).value;
    }

    /**
     * <pre>WM_REQUESTCREATION_TITLE
     * SQLite key: wm_requestcreation_title
     * [en] Create new request
     * [de] Neue Anfrage erstellen</pre>
     * @return [en] Create new request, [de] Neue Anfrage erstellen
     */
    public static String getWmRequestcreationTitle() {
        return get(WM_REQUESTCREATION_TITLE).value;
    }

    /**
     * <pre>WM_REQUESTTYPE
     * SQLite key: wm_requesttype
     * [en] Requesttype
     * [de] Anfragetyp</pre>
     * @return [en] Requesttype, [de] Anfragetyp
     */
    public static String getWmRequesttype() {
        return get(WM_REQUESTTYPE).value;
    }

    /**
     * <pre>WM_SERVICE_CREATION_TITLE
     * SQLite key: wm_service_creation_title
     * [en] Create new service (Created services)
     * [de] Neue Leistung erstellen (Leistung erstellen)</pre>
     * @return [en] Create new service (Created services), [de] Neue Leistung erstellen (Leistung erstellen)
     */
    public static String getWmServiceCreationTitle() {
        return get(WM_SERVICE_CREATION_TITLE).value;
    }

    public static Translation getWmServiceCreationTitleObj() {
        return get(WM_SERVICE_CREATION_TITLE);
    }

    /**
     * <pre>WORD_TEMPLATES
     * SQLite key: word_templates
     * [en] MS-Word Templates
     * [de] MS-Word Templates</pre>
     * @return [en] MS-Word Templates, [de] MS-Word Templates
     */
    public static String getWordTemplates() {
        return get(WORD_TEMPLATES).value;
    }

    /**
     * <pre>WORKFLOW_CLOSE_AND_CREATE_REMINDER
     * SQLite key: workflow_closeandcreatereminder
     * [en] Reminders - close all and create a new one
     * [de] Alle in der Liste angezeigten Wiedervorlagen abschließen und neu anlegen</pre>
     * @return [en] Reminders - close all and create a new one, [de] Alle in der Liste angezeigten Wiedervorlagen abschließen und neu anlegen
     */
    public static String getWorkflowCloseAndCreateReminder() {
        return get(WORKFLOW_CLOSE_AND_CREATE_REMINDER).value;
    }

    /**
     * <pre>WORKFLOW_CLOSE_AND_CREATE_REMINDER_CLOSE_REMINDER_SUCCESSFULLY
     * SQLite key: workflow_closeandcreatereminder_closereminder_successfully
     * [en] {0}  reminders of art {1} 'were set as closed.
     * [de] {0}  Wiedervorlagen von Art ''''{1}'''' wurden als abgearbeitet gesetzt.</pre>
     * @param pParams placeholder replacements
     * @return [en] {0}  reminders of art {1} 'were set as closed., [de] {0}  Wiedervorlagen von Art ''''{1}'''' wurden als abgearbeitet gesetzt.
     */
    public static String getWorkflowCloseAndCreateReminderCloseReminderSuccessfully(final Object... pParams) {
        return get(WORKFLOW_CLOSE_AND_CREATE_REMINDER_CLOSE_REMINDER_SUCCESSFULLY, pParams).value;
    }

    /**
     * <pre>WORKFLOW_CLOSE_AND_CREATE_REMINDER_CONFIRMATION
     * SQLite key: workflow_closeandcreatereminder_confirmation
     * [de] Alle in der Liste angezeigten Wiedervorlagen werden abgeschlossen.Wollen Sie für diese Vorgänge eine neue Wiedervorlage generieren?</pre>
     * @return [de] Alle in der Liste angezeigten Wiedervorlagen werden abgeschlossen.Wollen Sie für diese Vorgänge eine neue Wiedervorlage generieren?
     */
    public static String getWorkflowCloseAndCreateReminderConfirmation() {
        return get(WORKFLOW_CLOSE_AND_CREATE_REMINDER_CONFIRMATION).value;
    }

    /**
     * <pre>WORKFLOW_CLOSE_AND_CREATE_REMINDER_CREATE_REMINDER_SUCCESSFULLY
     * SQLite key: workflow_closeandcreatereminder_createreminder_successfully
     * [en] {0} new reminders of art {1} 'were created.
     * [de] {0} neue Wiedervorlagen von Art ''''{1}'''' wurden angelegt.</pre>
     * @param pParams placeholder replacements
     * @return [en] {0} new reminders of art {1} 'were created., [de] {0} neue Wiedervorlagen von Art ''''{1}'''' wurden angelegt.
     */
    public static String getWorkflowCloseAndCreateReminderCreateReminderSuccessfully(final Object... pParams) {
        return get(WORKFLOW_CLOSE_AND_CREATE_REMINDER_CREATE_REMINDER_SUCCESSFULLY, pParams).value;
    }

    /**
     * <pre>WORKFLOW_CLOSE_AND_CREATE_REMINDER_NO_FILTER
     * SQLite key: workflow_closeandcreatereminder_nofilter
     * [en] This function can only be used if the 'Reminder type' filter is set.
     * [de] Diese Funktion kann nur genutzt werden, wenn der Filter 'Art der Wiedervorlage' gesetzt ist.</pre>
     * @return [en] This function can only be used if the 'Reminder type' filter is set., [de] Diese Funktion kann nur genutzt werden, wenn der Filter 'Art der Wiedervorlage' gesetzt ist.
     */
    public static String getWorkflowCloseAndCreateReminderNoFilter() {
        return get(WORKFLOW_CLOSE_AND_CREATE_REMINDER_NO_FILTER).value;
    }

    /**
     * <pre>WORKFLOW_CLOSE_AND_CREATE_REMINDER_NOT_UNIQUE
     * SQLite key: workflow_closeandcreatereminder_notunique
     * [en] This function can only be used if the filter 'type of resubmission' is set uniquely (once).
     * [de] Diese Funktion kann nur genutzt werden, wenn der Filter 'Art der Wiedervorlage' eindeutig, mit nur einer Auswahl, gesetzt ist.</pre>
     * @return [en] This function can only be used if the filter 'type of resubmission' is set uniquely (once)., [de] Diese Funktion kann nur genutzt werden, wenn der Filter 'Art der Wiedervorlage' eindeutig, mit nur einer Auswahl, gesetzt ist.
     */
    public static String getWorkflowCloseAndCreateReminderNotUnique() {
        return get(WORKFLOW_CLOSE_AND_CREATE_REMINDER_NOT_UNIQUE).value;
    }

    /**
     * <pre>WORKFLOW_CONTEXT_MENU_CANCEL
     * SQLite key: workflow_contextmenu_cancel
     * [de] Vorgang stornieren</pre>
     * @return [de] Vorgang stornieren
     */
    public static String getWorkflowContextMenuCancel() {
        return get(WORKFLOW_CONTEXT_MENU_CANCEL).value;
    }

    /**
     * <pre>WORKFLOW_CONTEXT_MENU_UNCANCEL
     * SQLite key: workflow_contextmenu_uncancel
     * [de] Stornierung aufheben</pre>
     * ATTENTION this value ('Stornierung aufheben') seems to be also defined under the key WORKING_LIST_CONTEXT_MENU_UNCANCEL!
     * @return [de] Stornierung aufheben
     */
    public static String getWorkflowContextMenuUncancel() {
        return get(WORKFLOW_CONTEXT_MENU_UNCANCEL).value;
    }

    /**
     * <pre>WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_CONFIRM
     * SQLite key: workflow_contextmenu_workflowcancel_confirm
     * [en] Do you really want to cancel the workflow number {0}?
     * [de] Möchten Sie die Vorgangsnummer {0} wirklich stornieren?</pre>
     * @param pParams placeholder replacements
     * @return [en] Do you really want to cancel the workflow number {0}?, [de] Möchten Sie die Vorgangsnummer {0} wirklich stornieren?
     */
    public static String getWorkflowContextMenuWorkflowCancelConfirm(final Object... pParams) {
        return get(WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_CONFIRM, pParams).value;
    }

    /**
     * <pre>WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_ERROR
     * SQLite key: workflow_contextmenu_workflowcancel_error
     * [en] workflow {0} could not be canceled.
     * [de] Vorgangsnummer {0} konnte nicht storniert werden</pre>
     * @param pParams placeholder replacements
     * @return [en] workflow {0} could not be canceled., [de] Vorgangsnummer {0} konnte nicht storniert werden
     */
    public static String getWorkflowContextMenuWorkflowCancelError(final Object... pParams) {
        return get(WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_ERROR, pParams).value;
    }

    /**
     * <pre>WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_SUCCESS
     * SQLite key: workflow_contextmenu_workflowcancel_success
     * [en] workflow  {0} successfully canceled
     * [de] Vorgangsnummer {0} erfolgreich storniert</pre>
     * @param pParams placeholder replacements
     * @return [en] workflow  {0} successfully canceled, [de] Vorgangsnummer {0} erfolgreich storniert
     */
    public static String getWorkflowContextMenuWorkflowCancelSuccess(final Object... pParams) {
        return get(WORKFLOW_CONTEXT_MENU_WORKFLOW_CANCEL_SUCCESS, pParams).value;
    }

    /**
     * <pre>WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_CONFIRM
     * SQLite key: workflow_contextmenu_workflowuncancel_confirm
     * [en] Are you sure you want to cancel the cancellation for workflow number {0}?
     * [de] Möchten Sie die Stornierung für die Vorgangsnummer {0} wirklich aufheben?</pre>
     * @param pParams placeholder replacements
     * @return [en] Are you sure you want to cancel the cancellation for workflow number {0}?, [de] Möchten Sie die Stornierung für die Vorgangsnummer {0} wirklich aufheben?
     */
    public static String getWorkflowContextMenuWorkflowUnCancelConfirm(final Object... pParams) {
        return get(WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_CONFIRM, pParams).value;
    }

    /**
     * <pre>WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_ERROR
     * SQLite key: workflow_contextmenu_workflowuncancel_error
     * [en] The cancellation for workflow number {0} could not be canceled
     * [de] Die Stornierung für Vorgangsnummer {0} konnte nicht aufgehoben werden</pre>
     * @param pParams placeholder replacements
     * @return [en] The cancellation for workflow number {0} could not be canceled, [de] Die Stornierung für Vorgangsnummer {0} konnte nicht aufgehoben werden
     */
    public static String getWorkflowContextMenuWorkflowUnCancelError(final Object... pParams) {
        return get(WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_ERROR, pParams).value;
    }

    /**
     * <pre>WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_SUCCESS
     * SQLite key: workflow_contextmenu_workflowuncancel_success
     * [en] The cancellation for the workflow number {0} is successfully canceled
     * [de] Die Stornierung für die  Vorgangsnummer {0} ist erfolgreich  aufgehoben</pre>
     * @param pParams placeholder replacements
     * @return [en] The cancellation for the workflow number {0} is successfully canceled, [de] Die Stornierung für die  Vorgangsnummer {0} ist erfolgreich  aufgehoben
     */
    public static String getWorkflowContextMenuWorkflowUnCancelSuccess(final Object... pParams) {
        return get(WORKFLOW_CONTEXT_MENU_WORKFLOW_UN_CANCEL_SUCCESS, pParams).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_6_WEEKS_DEADLINE
     * SQLite key: workflow_deadline_6weeksdeadline
     * [en] Deadline initiation bill audit
     * [de] Frist Einleitung Rechnungsprüfung</pre>
     * @return [en] Deadline initiation bill audit, [de] Frist Einleitung Rechnungsprüfung
     */
    public static String getWorkflowDeadline6WeeksDeadline() {
        return get(WORKFLOW_DEADLINE_6_WEEKS_DEADLINE).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_6_WEEKS_DEADLINE_COMMENT
     * SQLite key: workflow_deadline_6weeksdeadlinecomment
     * [en] If the 6-week period is exceeded, then a note should appear when creating a new operation.
     * [de] Wenn die 6-Wochen-Frist überschritten wird, dann soll beim Anlegen einem neuen Vorgang ein Hinweis erscheinen.</pre>
     * @return [en] If the 6-week period is exceeded, then a note should appear when creating a new operation., [de] Wenn die 6-Wochen-Frist überschritten wird, dann soll beim Anlegen einem neuen Vorgang ein Hinweis erscheinen.
     */
    public static String getWorkflowDeadline6WeeksDeadlineComment() {
        return get(WORKFLOW_DEADLINE_6_WEEKS_DEADLINE_COMMENT).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_ANSWER_DEADLINE
     * SQLite key: workflow_deadline_answerdeadline
     * [en] Deadline to give a reply or answer
     * [de] Frist Antwort</pre>
     * @return [en] Deadline to give a reply or answer, [de] Frist Antwort
     */
    public static String getWorkflowDeadlineAnswerDeadline() {
        return get(WORKFLOW_DEADLINE_ANSWER_DEADLINE).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_ANSWER_DEADLINE_COMMENT
     * SQLite key: workflow_deadline_answerdeadlinecomment
     * [en] Deadline to give a reply in Preliminary Proceedings Request type.
     * [de] Frist für eine Antwort in der Prüfanfrage Typ.</pre>
     * @return [en] Deadline to give a reply in Preliminary Proceedings Request type., [de] Frist für eine Antwort in der Prüfanfrage Typ.
     */
    public static String getWorkflowDeadlineAnswerDeadlineComment() {
        return get(WORKFLOW_DEADLINE_ANSWER_DEADLINE_COMMENT).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_BILL_CORRECTION_DEADLINE
     * SQLite key: workflow_deadline_billcorrectiondeadline
     * [en] Deadline for bill correction
     * [de] Frist für einmalige Rechnungskorrektur</pre>
     * @return [en] Deadline for bill correction, [de] Frist für einmalige Rechnungskorrektur
     */
    public static String getWorkflowDeadlineBillCorrectionDeadline() {
        return get(WORKFLOW_DEADLINE_BILL_CORRECTION_DEADLINE).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_BILL_CORRECTION_DEADLINE_COMMENT
     * SQLite key: workflow_deadline_billcorrectiondeadlinecomment
     * [en] Deadline by which a bill of exchange correction from the hospital to which the health insurance can be sent
     * [de] Frist, bis zu der eine Rechnungskorrektur vom Krankenhaus an das Krankenkasse gesendet werden kann</pre>
     * @return [en] Deadline by which a bill of exchange correction from the hospital to which the health insurance can be sent, [de] Frist, bis zu der eine Rechnungskorrektur vom Krankenhaus an das Krankenkasse gesendet werden kann
     */
    public static String getWorkflowDeadlineBillCorrectionDeadlineComment() {
        return get(WORKFLOW_DEADLINE_BILL_CORRECTION_DEADLINE_COMMENT).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_CASE_DIALOG_BILL_CORRECTION_DEADLINE
     * SQLite key: workflow_deadline_casedialogbillcorrectiondeadline
     * [en] Deadline Case dialog Billing correction
     * [de] Frist Falldialog Rechnungskorrektur</pre>
     * @return [en] Deadline Case dialog Billing correction, [de] Frist Falldialog Rechnungskorrektur
     */
    public static String getWorkflowDeadlineCaseDialogBillCorrectionDeadline() {
        return get(WORKFLOW_DEADLINE_CASE_DIALOG_BILL_CORRECTION_DEADLINE).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_CASE_DIALOG_BILL_CORRECTION_DEADLINE_COMMENT
     * SQLite key: workflow_deadline_casedialogbillcorrectiondeadlinecomment
     * [en] If an agreement is reached in the case dialog, the test procedure ends. Any necessary correction of the invoice should be completed within 4 weeks
     * [de] Wird in dem Falldialog eine Einigung erzielt, endet das Prüfverfahren. Eine gegebenenfalls notwendige Korrektur der Rechnung soll innerhalb von 4 Wochen erf</pre>
     * @return [en] If an agreement is reached in the case dialog, the test procedure ends. Any necessary correction of the invoice should be completed within 4 weeks, [de] Wird in dem Falldialog eine Einigung erzielt, endet das Prüfverfahren. Eine gegebenenfalls notwendige Korrektur der Rechnung soll innerhalb von 4 Wochen erf
     */
    public static String getWorkflowDeadlineCaseDialogBillCorrectionDeadlineComment() {
        return get(WORKFLOW_DEADLINE_CASE_DIALOG_BILL_CORRECTION_DEADLINE_COMMENT).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_CONTINUATION_FEE_DEADLINE
     * SQLite key: workflow_deadline_continuationfeedeadline
     * [en] Deadline continuation fee
     * [de] Frist Fortsetzungspauschale</pre>
     * @return [en] Deadline continuation fee, [de] Frist Fortsetzungspauschale
     */
    public static String getWorkflowDeadlineContinuationFeeDeadline() {
        return get(WORKFLOW_DEADLINE_CONTINUATION_FEE_DEADLINE).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_CONTINUATION_FEE_DEADLINE_COMMENT
     * SQLite key: workflow_deadline_continuationfeedeadlinecomment
     * [en] Extension of the deadline, after payment of the continuation fee, up to which the requested documents must be submitted to the MD
     * [de] Verlängerung der Frist, nach Zahlung der Fortsetzungspauschale, bis zu der die angeforderten Unterlagen beim MD eingereicht sein müssen</pre>
     * @return [en] Extension of the deadline, after payment of the continuation fee, up to which the requested documents must be submitted to the MD, [de] Verlängerung der Frist, nach Zahlung der Fortsetzungspauschale, bis zu der die angeforderten Unterlagen beim MD eingereicht sein müssen
     */
    public static String getWorkflowDeadlineContinuationFeeDeadlineComment() {
        return get(WORKFLOW_DEADLINE_CONTINUATION_FEE_DEADLINE_COMMENT).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_DATA_RECORD_CORRECTION_DEADLINE
     * SQLite key: workflow_deadline_datarecordcorrectiondeadline
     * [en] Deadline for dataRecord Correction
     * [de] Frist Datensatzkorrektur</pre>
     * @return [en] Deadline for dataRecord Correction, [de] Frist Datensatzkorrektur
     */
    public static String getWorkflowDeadlineDataRecordCorrectionDeadline() {
        return get(WORKFLOW_DEADLINE_DATA_RECORD_CORRECTION_DEADLINE).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_DATA_RECORD_CORRECTION_DEADLINE_COMMENT
     * SQLite key: workflow_deadline_datarecordcorrectiondeadlinecomment
     * [en] Deadline to correct given data record.
     * [de] Frist zur Korrektur des Datensatzes.</pre>
     * @return [en] Deadline to correct given data record., [de] Frist zur Korrektur des Datensatzes.
     */
    public static String getWorkflowDeadlineDataRecordCorrectionDeadlineComment() {
        return get(WORKFLOW_DEADLINE_DATA_RECORD_CORRECTION_DEADLINE_COMMENT).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_MDK_AUDIT_COMPLETION_DEADLINE
     * SQLite key: workflow_deadline_mdkauditcompletiondeadline
     * [en] Deadline for completion of the MD audit
     * [de] Frist bis zum Abschluss der MD-Prüfung</pre>
     * @return [en] Deadline for completion of the MD audit, [de] Frist bis zum Abschluss der MD-Prüfung
     */
    public static String getWorkflowDeadlineMdkAuditCompletionDeadline() {
        return get(WORKFLOW_DEADLINE_MDK_AUDIT_COMPLETION_DEADLINE).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_MDK_AUDIT_COMPLETION_DEADLINE_COMMENT
     * SQLite key: workflow_deadline_mdkauditcompletiondeadlinecomment
     * [en] Deadline, up to the examination and evaluation by the MD must be completed
     * [de] Frist, bis zu der die Überprüfung und Bewertung durch den MD abgeschlossen sein muss</pre>
     * @return [en] Deadline, up to the examination and evaluation by the MD must be completed, [de] Frist, bis zu der die Überprüfung und Bewertung durch den MD abgeschlossen sein muss
     */
    public static String getWorkflowDeadlineMdkAuditCompletionDeadlineComment() {
        return get(WORKFLOW_DEADLINE_MDK_AUDIT_COMPLETION_DEADLINE_COMMENT).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_MDK_DOCUMENT_DELIVER_DEADLINE
     * SQLite key: workflow_deadline_mdkdocumentdeliverdeadline
     * [en] Deadline for submitting documents
     * [de] Abgabefrist Unterlagen</pre>
     * @return [en] Deadline for submitting documents, [de] Abgabefrist Unterlagen
     */
    public static String getWorkflowDeadlineMdkDocumentDeliverDeadline() {
        return get(WORKFLOW_DEADLINE_MDK_DOCUMENT_DELIVER_DEADLINE).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_MDK_DOCUMENT_DELIVER_DEADLINE_COMMENT
     * SQLite key: workflow_deadline_mdkdocumentdeliverdeadlinecomment
     * [en] The deadline for submitting the documents requested by the MD to the MD
     * [de] Frist, bis zu der die vom MD angeforderten Unterlagen an den MD geliefert werden müssen</pre>
     * @return [en] The deadline for submitting the documents requested by the MD to the MD, [de] Frist, bis zu der die vom MD angeforderten Unterlagen an den MD geliefert werden müssen
     */
    public static String getWorkflowDeadlineMdkDocumentDeliverDeadlineComment() {
        return get(WORKFLOW_DEADLINE_MDK_DOCUMENT_DELIVER_DEADLINE_COMMENT).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_PRELIMINARY_PROCEEDINGS_CLOSED_DEADLINE
     * SQLite key: workflow_deadline_preliminaryproceedingscloseddeadline
     * [en] Deadline pre-trial
     * [de] Frist Vorverfahren-Abschluss</pre>
     * @return [en] Deadline pre-trial, [de] Frist Vorverfahren-Abschluss
     */
    public static String getWorkflowDeadlinePreliminaryProceedingsClosedDeadline() {
        return get(WORKFLOW_DEADLINE_PRELIMINARY_PROCEEDINGS_CLOSED_DEADLINE).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_PRELIMINARY_PROCEEDINGS_CLOSED_DEADLINE_COMMENT
     * SQLite key: workflow_deadline_preliminaryproceedingscloseddeadlinecomment
     * [en] Deadline for completion of the pre-litigation procedure
     * [de] Frist, bis zu dem das Vorverfahren abgeschlosssen sein muss</pre>
     * @return [en] Deadline for completion of the pre-litigation procedure, [de] Frist, bis zu dem das Vorverfahren abgeschlosssen sein muss
     */
    public static String getWorkflowDeadlinePreliminaryProceedingsClosedDeadlineComment() {
        return get(WORKFLOW_DEADLINE_PRELIMINARY_PROCEEDINGS_CLOSED_DEADLINE_COMMENT).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE
     * SQLite key: workflow_deadline_proposalsubsequentproceedingsdeadline
     * [en] ProposalSubsequentProceedingsDeadline
     * [de] Frist Vorschlag Nachverfahren</pre>
     * @return [en] ProposalSubsequentProceedingsDeadline, [de] Frist Vorschlag Nachverfahren
     */
    public static String getWorkflowDeadlineProposalSubsequentProceedingsDeadline() {
        return get(WORKFLOW_DEADLINE_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE_COMMENT
     * SQLite key: workflow_deadline_proposalsubsequentproceedingsdeadlinecomment
     * [en] Extract from § 9 PruefVV 2016: "1 Within 6 weeks after receipt of the notifications according to §8 sentence 1 and 2, the hospital may propose a follow-up procedure based on the data and documents submitted to the end of the MD assessment to the health insurance by: a reasoned opinion on the performance-related decision of the health insurance is made in accordance with §8 sentence 1. 2 The implementation of the supplementary procedure is voluntary."
     * [de] Auszug aus § 9 der PruefVV 2016: "1 Das Krankenhaus kann innerhalb von 6 Wochen nach Zugang der Mitteilungen nach §8 Satz 1 und 2 ein Nachverfahren auf Basis der bis zum Ende der MD-Begutachtung übermittelten Daten und Unterlagen gegenüber der Krankenkasse vorschlagen, indem eine begründete Stellungnahme zur leistungsrechtlichen Entscheidung der Krankenkasse nach §8 Satz 1 abgegeben wird. 2 Die Durchführung des Nachverfahrens ist freiwillig."</pre>
     * @return [en] Extract from § 9 PruefVV 2016: "1 Within 6 weeks after receipt of the notifications according to §8 sentence 1 and 2, the hospital may propose a follow-up procedure based on the data and documents submitted to the end of the MD assessment to the health insurance by: a reasoned opinion on the performance-related decision of the health insurance is made in accordance with §8 sentence 1. 2 The implementation of the supplementary procedure is voluntary.", [de] Auszug aus § 9 der PruefVV 2016: "1 Das Krankenhaus kann innerhalb von 6 Wochen nach Zugang der Mitteilungen nach §8 Satz 1 und 2 ein Nachverfahren auf Basis der bis zum Ende der MD-Begutachtung übermittelten Daten und Unterlagen gegenüber der Krankenkasse vorschlagen, indem eine begründete Stellungnahme zur leistungsrechtlichen Entscheidung der Krankenkasse nach §8 Satz 1 abgegeben wird. 2 Die Durchführung des Nachverfahrens ist freiwillig."
     */
    public static String getWorkflowDeadlineProposalSubsequentProceedingsDeadlineComment() {
        return get(WORKFLOW_DEADLINE_PROPOSAL_SUBSEQUENT_PROCEEDINGS_DEADLINE_COMMENT).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_REVIEW_COMPLETION
     * SQLite key: workflow_deadline_review_completion
     * [de] Abschlußfrist für Erörterungsverfahren</pre>
     * @return [de] Abschlußfrist für Erörterungsverfahren
     */
    public static String getWorkflowDeadlineReviewCompletion() {
        return get(WORKFLOW_DEADLINE_REVIEW_COMPLETION).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_REVIEW_COMPLETION_COMMENT
     * SQLite key: workflow_deadline_review_completion_comment
     * [de] Das  EV  ist,  vorbehaltlich  der  einvernehmlichen  Verlängerung  dieses  Zeitraumes  durch  Krankenhaus und Krankenkasse, binnen 12 Wochen nach Mitteilung der Krankenkasse gemäß  Absatz  4  abzuschließen</pre>
     * @return [de] Das  EV  ist,  vorbehaltlich  der  einvernehmlichen  Verlängerung  dieses  Zeitraumes  durch  Krankenhaus und Krankenkasse, binnen 12 Wochen nach Mitteilung der Krankenkasse gemäß  Absatz  4  abzuschließen
     */
    public static String getWorkflowDeadlineReviewCompletionComment() {
        return get(WORKFLOW_DEADLINE_REVIEW_COMPLETION_COMMENT).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_REVIEW_DOCUMENTS_SEND_ON
     * SQLite key: workflow_deadline_review_documents_send_on
     * [de] Nachsendefrist für Dokumente für Erörterungsverfahren</pre>
     * @return [de] Nachsendefrist für Dokumente für Erörterungsverfahren
     */
    public static String getWorkflowDeadlineReviewDocumentsSendOn() {
        return get(WORKFLOW_DEADLINE_REVIEW_DOCUMENTS_SEND_ON).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_REVIEW_DOCUMENTS_SEND_ON_COMMENT
     * SQLite key: workflow_deadline_review_documents_send_on_comment
     * [de] Grundlage  des  EV  sind  sämtliche  erforderliche  Daten  des  streitbefangenen  Falles,  einschließlich  aller  der  vom  MD  beim  Krankenhaus  erhobenen  Daten,  sowie  die  im  Rahmen  des  EV  übermittelten  Unterlagen  und  vorgetragenen  Argumentationen/Einwendungen.  Die Parteien des Erörterungsverfahrens stellen sicher, dass für die Durchführung des Erörterungsverfahrens  erforderliche  Unterlagen  spätestens  4  Wochen  nach  der  Mitteilung   gemäß Absatz 3 Satz 1 der anderen Partei vorliegen.</pre>
     * @return [de] Grundlage  des  EV  sind  sämtliche  erforderliche  Daten  des  streitbefangenen  Falles,  einschließlich  aller  der  vom  MD  beim  Krankenhaus  erhobenen  Daten,  sowie  die  im  Rahmen  des  EV  übermittelten  Unterlagen  und  vorgetragenen  Argumentationen/Einwendungen.  Die Parteien des Erörterungsverfahrens stellen sicher, dass für die Durchführung des Erörterungsverfahrens  erforderliche  Unterlagen  spätestens  4  Wochen  nach  der  Mitteilung   gemäß Absatz 3 Satz 1 der anderen Partei vorliegen.
     */
    public static String getWorkflowDeadlineReviewDocumentsSendOnComment() {
        return get(WORKFLOW_DEADLINE_REVIEW_DOCUMENTS_SEND_ON_COMMENT).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_REVIEW_INSURANCE_ANSWER
     * SQLite key: workflow_deadline_review_insurance_answer
     * [de] Antwortfrist der Krankenkasse für Erörterungsverfahren</pre>
     * @return [de] Antwortfrist der Krankenkasse für Erörterungsverfahren
     */
    public static String getWorkflowDeadlineReviewInsuranceAnswer() {
        return get(WORKFLOW_DEADLINE_REVIEW_INSURANCE_ANSWER).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_REVIEW_INSURANCE_ANSWER_COMMENT
     * SQLite key: workflow_deadline_review_insurance_answer_comment
     * [de] Schließt sich die Krankenkasse der vom Krankenhaus vorgetragenen Begründung an, teilt sie dies dem Krankenhaus binnen 6 Wochen nach Zugang des Bestreitens nach Absatz 1 mit.</pre>
     * @return [de] Schließt sich die Krankenkasse der vom Krankenhaus vorgetragenen Begründung an, teilt sie dies dem Krankenhaus binnen 6 Wochen nach Zugang des Bestreitens nach Absatz 1 mit.
     */
    public static String getWorkflowDeadlineReviewInsuranceAnswerComment() {
        return get(WORKFLOW_DEADLINE_REVIEW_INSURANCE_ANSWER_COMMENT).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_REVIEW_START
     * SQLite key: workflow_deadline_review_start
     * [de] Frist Einleitung Erörterungsverfahren nach MD-Rüfung</pre>
     * @return [de] Frist Einleitung Erörterungsverfahren nach MD-Rüfung
     */
    public static String getWorkflowDeadlineReviewStart() {
        return get(WORKFLOW_DEADLINE_REVIEW_START).value;
    }

    /**
     * <pre>WORKFLOW_DEADLINE_REVIEW_START_COMMENT
     * SQLite key: workflow_deadline_review_start_comment
     * [de] Ist das Krankenhaus mit der Entscheidung der Krankenkasse nach § 8 nicht einverstanden, hat es diese binnen 6 Wochen nach Zugang der Entscheidung gegenüber der Krankenkasse zu bestreiten.</pre>
     * @return [de] Ist das Krankenhaus mit der Entscheidung der Krankenkasse nach § 8 nicht einverstanden, hat es diese binnen 6 Wochen nach Zugang der Entscheidung gegenüber der Krankenkasse zu bestreiten.
     */
    public static String getWorkflowDeadlineReviewStartComment() {
        return get(WORKFLOW_DEADLINE_REVIEW_START_COMMENT).value;
    }

    /**
     * <pre>WORKFLOW_DOES_NOT_EXIST_WITH_REASON
     * SQLite key: workflowdoesnotexistwithreason
     * [de] Die Vorgang mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.</pre>
     * @param pParams placeholder replacements
     * @return [de] Die Vorgang mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.
     */
    public static String getWorkflowDoesNotExistWithReason(final Object... pParams) {
        return get(WORKFLOW_DOES_NOT_EXIST_WITH_REASON, pParams).value;
    }

    /**
     * <pre>WORKFLOW_LIST
     * SQLite key: workflowlist
     * [en] Workflow List
     * [de] Vorgangsliste</pre>
     * @return [en] Workflow List, [de] Vorgangsliste
     */
    public static String getWorkflowList() {
        return get(WORKFLOW_LIST).value;
    }

    /**
     * <pre>WORKFLOW_MDK_AUDIT_COMPLETION_DEADLINE
     * SQLite key: workflow_mdk_audit_completion_deadline
     * [de] Frist bis zum Abschluss des Vorverfahrens (Frist Vv Abschluss)</pre>
     * @return [de] Frist bis zum Abschluss des Vorverfahrens (Frist Vv Abschluss)
     */
    public static String getWorkflowMdkAuditCompletionDeadline() {
        return get(WORKFLOW_MDK_AUDIT_COMPLETION_DEADLINE).value;
    }

    public static Translation getWorkflowMdkAuditCompletionDeadlineObj() {
        return get(WORKFLOW_MDK_AUDIT_COMPLETION_DEADLINE);
    }

    /**
     * <pre>WORKFLOW_NUMBER
     * SQLite key: workflownumber
     * [en] Process No.
     * [de] Vorgangsnummer (Vorgangsnr.)</pre>
     * ATTENTION this value ('Process No.') seems to be also defined under the key PROCESS_NUMBER!
     * @return [en] Process No., [de] Vorgangsnummer (Vorgangsnr.)
     */
    public static String getWorkflowNumber() {
        return get(WORKFLOW_NUMBER).value;
    }

    public static Translation getWorkflowNumberObj() {
        return get(WORKFLOW_NUMBER);
    }

    /**
     * <pre>WORKFLOW_STATE
     * SQLite key: workflowstate
     * [en] State
     * [de] Status des Vorgangs (Vorgangsstatus)</pre>
     * @return [en] State, [de] Status des Vorgangs (Vorgangsstatus)
     */
    public static String getWorkflowState() {
        return get(WORKFLOW_STATE).value;
    }

    public static Translation getWorkflowStateObj() {
        return get(WORKFLOW_STATE);
    }

    /**
     * <pre>WORKFLOW_STATE_ARCHIVED
     * SQLite key: workflowstate_archived
     * [en] archived
     * [de] archiviert</pre>
     * @return [en] archived, [de] archiviert
     */
    public static String getWorkflowStateArchived() {
        return get(WORKFLOW_STATE_ARCHIVED).value;
    }

    /**
     * <pre>WORKFLOW_STATE_CLOSED
     * SQLite key: workflowstate_closed
     * [en] closed
     * [de] geschlossen</pre>
     * ATTENTION this value ('Closed') seems to be also defined under the key CASE_STATUS_CLOSED! this value ('closed') seems to be also defined under the key PROCESS_STATUS_REMINDER_CLOSED!
     * @return [en] closed, [de] geschlossen
     */
    public static String getWorkflowStateClosed() {
        return get(WORKFLOW_STATE_CLOSED).value;
    }

    /**
     * <pre>WORKFLOW_STATE_DONE
     * SQLite key: workflowstate_done
     * [en] done
     * [de] erledigt</pre>
     * @return [en] done, [de] erledigt
     */
    public static String getWorkflowStateDone() {
        return get(WORKFLOW_STATE_DONE).value;
    }

    /**
     * <pre>WORKFLOW_STATE_OPEN
     * SQLite key: workflowstate_open
     * [en] open
     * [de] offen</pre>
     * ATTENTION this value ('Open') seems to be also defined under the key EVENT_OPERATION_OPEN! this value ('open') seems to be also defined under the key PROCESS_STATUS_REMINDER_OPEN! this value ('open') seems to be also defined under the key REMINDER_UNFINISHED_STATUS!
     * @return [en] open, [de] offen
     */
    public static String getWorkflowStateOpen() {
        return get(WORKFLOW_STATE_OPEN).value;
    }

    /**
     * <pre>WORKFLOW_STATE_PAUSED
     * SQLite key: workflowstate_paused
     * [en] paused
     * [de] pausiert</pre>
     * @return [en] paused, [de] pausiert
     */
    public static String getWorkflowStatePaused() {
        return get(WORKFLOW_STATE_PAUSED).value;
    }

    /**
     * <pre>WORKFLOW_SUBJECT
     * SQLite key: workflowsubject
     * [en] Subject
     * [de] Betreff des Vorgangs (Betreff)</pre>
     * @return [en] Subject, [de] Betreff des Vorgangs (Betreff)
     */
    public static String getWorkflowSubject() {
        return get(WORKFLOW_SUBJECT).value;
    }

    public static Translation getWorkflowSubjectObj() {
        return get(WORKFLOW_SUBJECT);
    }

    /**
     * <pre>WORKFLOW_TYPE
     * SQLite key: workflowtype
     * [en] Type
     * [de] Typ des Vorgangs (Typ)</pre>
     * ATTENTION this value ('Type') seems to be also defined under the key CASE_RESOLVE_RULES_TYPE!
     * @return [en] Type, [de] Typ des Vorgangs (Typ)
     */
    public static String getWorkflowType() {
        return get(WORKFLOW_TYPE).value;
    }

    public static Translation getWorkflowTypeObj() {
        return get(WORKFLOW_TYPE);
    }

    /**
     * <pre>WORKFLOW_TYPE_NO_CASE
     * SQLite key: workflowtype_nocase
     * [en] Not case-related process
     * [de] Nicht fallbezogener Vorgang</pre>
     * @return [en] Not case-related process, [de] Nicht fallbezogener Vorgang
     */
    public static String getWorkflowTypeNoCase() {
        return get(WORKFLOW_TYPE_NO_CASE).value;
    }

    /**
     * <pre>WORKFLOW_TYPE_STATIONARY
     * SQLite key: workflowtype_stationary
     * [en] Inpatient hospital case
     * [de] Stationärer Krankenhausfall</pre>
     * @return [en] Inpatient hospital case, [de] Stationärer Krankenhausfall
     */
    public static String getWorkflowTypeStationary() {
        return get(WORKFLOW_TYPE_STATIONARY).value;
    }

    /**
     * <pre>WORKFLOW_WARNING_NO_CASE
     * SQLite key: workflow_warning_no_case
     * [en] For the workflow number {0} is no hospital case found.Probably it was deleted.
     * [de] Dem Vorgang {0} ist kein Krankenhausfall zugeordnet.Möglicherweise wurde dieser gelöscht.</pre>
     * @param pParams placeholder replacements
     * @return [en] For the workflow number {0} is no hospital case found.Probably it was deleted., [de] Dem Vorgang {0} ist kein Krankenhausfall zugeordnet.Möglicherweise wurde dieser gelöscht.
     */
    public static String getWorkflowWarningNoCase(final Object... pParams) {
        return get(WORKFLOW_WARNING_NO_CASE, pParams).value;
    }

    /**
     * <pre>WORKING_LIST
     * SQLite key: workinglist
     * [en] Working List
     * [de] Arbeitsliste</pre>
     * @return [en] Working List, [de] Arbeitsliste
     */
    public static String getWorkingList() {
        return get(WORKING_LIST).value;
    }

    /**
     * <pre>WORKING_LIST_COLUMNS
     * SQLite key: workinglist_columns
     * [en] Columns
     * [de] Spalten</pre>
     * @return [en] Columns, [de] Spalten
     */
    public static String getWorkingListColumns() {
        return get(WORKING_LIST_COLUMNS).value;
    }

    /**
     * <pre>WORKING_LIST_COLUMNS_AVAILABLE
     * SQLite key: workinglist_columns_available
     * [en] Available Columns
     * [de] Verfügbare Spalten</pre>
     * @return [en] Available Columns, [de] Verfügbare Spalten
     */
    public static String getWorkingListColumnsAvailable() {
        return get(WORKING_LIST_COLUMNS_AVAILABLE).value;
    }

    /**
     * <pre>WORKING_LIST_COLUMNS_SELECTED
     * SQLite key: workinglist_columns_selected
     * [en] Selected Columns
     * [de] Gewählte Spalten</pre>
     * @return [en] Selected Columns, [de] Gewählte Spalten
     */
    public static String getWorkingListColumnsSelected() {
        return get(WORKING_LIST_COLUMNS_SELECTED).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_CANCEL
     * SQLite key: workinglist_contextmenu_cancel
     * [de] Fall stornieren</pre>
     * @return [de] Fall stornieren
     */
    public static String getWorkingListContextMenuCancel() {
        return get(WORKING_LIST_CONTEXT_MENU_CANCEL).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_CONFIRM
     * SQLite key: workinglist_contextmenu_casecancel_confirm
     * [de] Möchten Sie den Fall mit der Nummer {0} wirklich stornieren?</pre>
     * @param pParams placeholder replacements
     * @return [de] Möchten Sie den Fall mit der Nummer {0} wirklich stornieren?
     */
    public static String getWorkingListContextMenuCaseCancelConfirm(final Object... pParams) {
        return get(WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_CONFIRM, pParams).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_ERROR
     * SQLite key: workinglist_contextmenu_casecancel_error
     * [de] Der Fall mit der Nummer {0} konnte nicht storniert werden</pre>
     * @param pParams placeholder replacements
     * @return [de] Der Fall mit der Nummer {0} konnte nicht storniert werden
     */
    public static String getWorkingListContextMenuCaseCancelError(final Object... pParams) {
        return get(WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_ERROR, pParams).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_SUCCESS
     * SQLite key: workinglist_contextmenu_casecancel_success
     * [de] Der Fall mit der Nummer {0} erfolgreich storniert</pre>
     * @param pParams placeholder replacements
     * @return [de] Der Fall mit der Nummer {0} erfolgreich storniert
     */
    public static String getWorkingListContextMenuCaseCancelSuccess(final Object... pParams) {
        return get(WORKING_LIST_CONTEXT_MENU_CASE_CANCEL_SUCCESS, pParams).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_CASE_DELETE_CONFIRM
     * SQLite key: workinglist_contextmenu_casedelete_confirm
     * [en] Do you really want to delete case number {0}?
     * [de] Möchten Sie den Fall mit der Nummer {0} wirklich löschen?</pre>
     * @param pParams placeholder replacements
     * @return [en] Do you really want to delete case number {0}?, [de] Möchten Sie den Fall mit der Nummer {0} wirklich löschen?
     */
    public static String getWorkingListContextMenuCaseDeleteConfirm(final Object... pParams) {
        return get(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_CONFIRM, pParams).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_CASE_DELETE_ERROR
     * SQLite key: workinglist_contextmenu_casedelete_error
     * [en] Case {0} could not be deleted! Try again or check server logs for errors.
     * [de] Fall {0} konnte nicht gelöscht werden! Versuchen Sie es erneut oder prüfen Sie den Fehler im Serverprotokoll.</pre>
     * @param pParams placeholder replacements
     * @return [en] Case {0} could not be deleted! Try again or check server logs for errors., [de] Fall {0} konnte nicht gelöscht werden! Versuchen Sie es erneut oder prüfen Sie den Fehler im Serverprotokoll.
     */
    public static String getWorkingListContextMenuCaseDeleteError(final Object... pParams) {
        return get(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_ERROR, pParams).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_CASE_DELETE_NO_PROCESSES
     * SQLite key: workinglist_contextmenu_casedelete_noprocesses
     * [en] This case is not assigned to any process
     * [de] Der Fall ist keinen Vorgängen zugeordnet</pre>
     * @return [en] This case is not assigned to any process, [de] Der Fall ist keinen Vorgängen zugeordnet
     */
    public static String getWorkingListContextMenuCaseDeleteNoProcesses() {
        return get(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_NO_PROCESSES).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_CASE_DELETE_PROCESSES
     * SQLite key: workinglist_contextmenu_casedelete_processes
     * [en] This case is assigned to the following processes: {0}
     * [de] Der Fall ist folgenden Vorgängen zugeordnet: {0}</pre>
     * @param pParams placeholder replacements
     * @return [en] This case is assigned to the following processes: {0}, [de] Der Fall ist folgenden Vorgängen zugeordnet: {0}
     */
    public static String getWorkingListContextMenuCaseDeleteProcesses(final Object... pParams) {
        return get(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_PROCESSES, pParams).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_CASE_DELETE_SUCCESS
     * SQLite key: workinglist_contextmenu_casedelete_success
     * [en] Case {0} successfully deleted!
     * [de] Der Fall mit der Nummer {0} erfolgreich gelöscht</pre>
     * @param pParams placeholder replacements
     * @return [en] Case {0} successfully deleted!, [de] Der Fall mit der Nummer {0} erfolgreich gelöscht
     */
    public static String getWorkingListContextMenuCaseDeleteSuccess(final Object... pParams) {
        return get(WORKING_LIST_CONTEXT_MENU_CASE_DELETE_SUCCESS, pParams).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_CONFIRM
     * SQLite key: workinglist_contextmenu_caseuncancel_confirm
     * [de] Möchten Sie die Stornierung für den Fall mit der Nummer {0} wirklich aufheben?</pre>
     * @param pParams placeholder replacements
     * @return [de] Möchten Sie die Stornierung für den Fall mit der Nummer {0} wirklich aufheben?
     */
    public static String getWorkingListContextMenuCaseUnCancelConfirm(final Object... pParams) {
        return get(WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_CONFIRM, pParams).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_ERROR
     * SQLite key: workinglist_contextmenu_caseuncancel_error
     * [de] Die Stornierung für den Fall mit der Nummer {0} konnte nicht aufgehoben werden</pre>
     * @param pParams placeholder replacements
     * @return [de] Die Stornierung für den Fall mit der Nummer {0} konnte nicht aufgehoben werden
     */
    public static String getWorkingListContextMenuCaseUnCancelError(final Object... pParams) {
        return get(WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_ERROR, pParams).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_SUCCESS
     * SQLite key: workinglist_contextmenu_caseuncancel_success
     * [de] Die Stornierung für den Fall mit der Nummer {0} ist erfolgreich aufgehoben</pre>
     * @param pParams placeholder replacements
     * @return [de] Die Stornierung für den Fall mit der Nummer {0} ist erfolgreich aufgehoben
     */
    public static String getWorkingListContextMenuCaseUnCancelSuccess(final Object... pParams) {
        return get(WORKING_LIST_CONTEXT_MENU_CASE_UN_CANCEL_SUCCESS, pParams).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_DELETE
     * SQLite key: workinglist_contextmenu_delete
     * [en] Delete case
     * [de] Fall löschen</pre>
     * @return [en] Delete case, [de] Fall löschen
     */
    public static String getWorkingListContextMenuDelete() {
        return get(WORKING_LIST_CONTEXT_MENU_DELETE).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_OPEN
     * SQLite key: workinglist_contextmenu_open
     * [en] Open case
     * [de] Fall öffnen</pre>
     * ATTENTION this value ('Open case') seems to be also defined under the key OPEN_CASE!
     * @return [en] Open case, [de] Fall öffnen
     */
    public static String getWorkingListContextMenuOpen() {
        return get(WORKING_LIST_CONTEXT_MENU_OPEN).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_UNCANCEL
     * SQLite key: workinglist_contextmenu_uncancel
     * [de] Stornierung aufheben</pre>
     * ATTENTION this value ('Stornierung aufheben') seems to be also defined under the key WORKFLOW_CONTEXT_MENU_UNCANCEL!
     * @return [de] Stornierung aufheben
     */
    public static String getWorkingListContextMenuUncancel() {
        return get(WORKING_LIST_CONTEXT_MENU_UNCANCEL).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_UNLOCK
     * SQLite key: workinglist_contextmenu_unlock
     * [en] Unlock case
     * [de] Fall entsperren</pre>
     * @return [en] Unlock case, [de] Fall entsperren
     */
    public static String getWorkingListContextMenuUnlock() {
        return get(WORKING_LIST_CONTEXT_MENU_UNLOCK).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_UNLOCK_ERROR
     * SQLite key: workinglist_contextmenu_unlock_error
     * [en] Case {0} could not be unlocked!
     * [de] Der Fall mit der Nummer {0} konnte nicht entsperrt werden</pre>
     * @param pParams placeholder replacements
     * @return [en] Case {0} could not be unlocked!, [de] Der Fall mit der Nummer {0} konnte nicht entsperrt werden
     */
    public static String getWorkingListContextMenuUnlockError(final Object... pParams) {
        return get(WORKING_LIST_CONTEXT_MENU_UNLOCK_ERROR, pParams).value;
    }

    /**
     * <pre>WORKING_LIST_CONTEXT_MENU_UNLOCK_SUCCESS
     * SQLite key: workinglist_contextmenu_unlock_success
     * [en] Case {0} successfully unlocked!
     * [de] Der Fall mit der Nummer {0} erfolgreich entsperrt</pre>
     * @param pParams placeholder replacements
     * @return [en] Case {0} successfully unlocked!, [de] Der Fall mit der Nummer {0} erfolgreich entsperrt
     */
    public static String getWorkingListContextMenuUnlockSuccess(final Object... pParams) {
        return get(WORKING_LIST_CONTEXT_MENU_UNLOCK_SUCCESS, pParams).value;
    }

    /**
     * <pre>WORKING_LIST_UPDATE
     * SQLite key: workinglist_update
     * [en] update the Working List
     * [de] Arbeitsliste aktualisieren</pre>
     * @return [en] update the Working List, [de] Arbeitsliste aktualisieren
     */
    public static String getWorkingListUpdate() {
        return get(WORKING_LIST_UPDATE).value;
    }

    /**
     * <pre>WORKINGLIST_COLUMN_DIALOG
     * SQLite key: workinglist_column_dialog
     * [en] Column Selection
     * [de] Arbeitsliste konfigurieren</pre>
     * @return [en] Column Selection, [de] Arbeitsliste konfigurieren
     */
    public static String getWorkinglistColumnDialog() {
        return get(WORKINGLIST_COLUMN_DIALOG).value;
    }

    /**
     * <pre>WORKINGLIST_COLUMN_DIALOG_EXPLANATION_LABEL
     * SQLite key: workinglist_column_dialog_explanationlabel
     * [de] Spalten Beschreibung</pre>
     * @return [de] Spalten Beschreibung
     */
    public static String getWorkinglistColumnDialogExplanationLabel() {
        return get(WORKINGLIST_COLUMN_DIALOG_EXPLANATION_LABEL).value;
    }

    /**
     * <pre>WORKINGLIST_FILTER_DIALOG
     * SQLite key: workinglist_filter_dialog
     * [en] Filter Dialog
     * [de] Filter Dialog</pre>
     * @return [en] Filter Dialog, [de] Filter Dialog
     */
    public static String getWorkinglistFilterDialog() {
        return get(WORKINGLIST_FILTER_DIALOG).value;
    }

}

/* Tree view of language keys: 
Acg
   ↪ Age
     ↪ Band
       ↪ 00-04 = [en] 00-04, [de] 00-04
       ↪ 05-11 = [en] 05-11, [de] 05-11
       ↪ 12-17 = [en] 12-17, [de] 12-17
       ↪ 18-34 = [en] 18-34, [de] 18-34
       ↪ 35-44 = [en] 35-44, [de] 35-44
       ↪ 45-54 = [en] 45-54, [de] 45-54
       ↪ 55-64 = [en] 55-64, [de] 55-64
       ↪ 65-69 = [en] 65-69, [de] 65-69
       ↪ 70-74 = [en] 70-74, [de] 70-74
       ↪ 75-79 = [en] 75-79, [de] 75-79
       ↪ 80-84 = [en] 80-84, [de] 80-84
       ↪ 85P = [en] 85+, [de] 85+
   ↪ Index
     ↪ Type
       ↪ BTH = [en] Diagnosis & Drugs (Both), [de] Diagnosen & Medikamente (Beides)
       ↪ ICD = [en] Diagnosis, [de] Diagnosen
       ↪ NP = [en] Not presend, [de] Nicht vorhanden
       ↪ Rx = [en] Drugs (Rx supplements are prescription or prescription medications), [de] Medikamente (Rx-Präparate sind verschreibungspflichtige bzw. rezeptpflichtige Medikamente)
       ↪ TRT = [en] Treatment, [de] Durchgehende Behandlung
Action
   ↪ Added
     ↪ Tooltip = [en] See the details of an Action, [de] Siehe die Details einer Aktion
   ↪ Comment = [de] Text der letzten Aktion (Aktion Text)
   ↪ Create = [en] create Action, [de] Aktion erstellen
   ↪ CreationDate = [en] Action Creation Date (Creation Date), [de] Anlagedatum der Aktion (Anlagedatum)
   ↪ Msg
     ↪ No
       ↪ Create
         ↪ Right = [en] You do not have right to create any action, [de] Sie haben keine Berechtigung, eine Aktion zu erstellen
       ↪ Edit
         ↪ Right = [en] You do not have right to edit any action, [de] Sie haben keine Berechtigung, eine Aktion zu editieren
   ↪ Removed
     ↪ Tooltip = [en] This Action is removed, [de] Diese Aktion wird entfernt
   ↪ Subject = [en] Action, [de] Aktion
     ↪ Latest = [en] Action (Type of the latest action), [de] Typ der letzten Aktion (Aktion)
   ↪ Subjects = [en] Action subjects, [de] Aktionstypen
   ↪ Type = [en] Action type, [de] Aktionstyp
Actual = [en] actual, [de] Aktuell
Add = [en] Add, [de] Hinzufügen
   ↪ Case
     ↪ Add
       ↪ Bill = [en] add bill, [de] Rechnung zufügen
     ↪ Bills = [en] bills, [de] Rechnungen
     ↪ Remove
       ↪ Bill = [en] remove bill, [de] Rechnung entfernen
AddCase
   ↪ AddDepartment = [en] Add Department, [de] Abteilung hinzufügen
   ↪ Cancel
     ↪ Confirmation = [en] Do you really want to quit  Case input?, [de] Wollen Sie die manuelle Falleingabe wirklich beenden?
   ↪ Drg
     ↪ Title = [en] Group Result / Revenue, [de] Grouperergebnis/Erlös
   ↪ EditIcdOpsDescription = [en] Add and edit diagnoses and procedures for the stay in the department, [de] Zum Aufenthalt in der Abteilung Diagnosen und Prozeduren hinzufügen und bearbeiten
   ↪ RemoveDepartment = [en] Remove Department, [de] Abteilung entfernen
   ↪ Search
     ↪ Hospital
       ↪ Optionen = [en] Further hospital search criteria, [de] Krankenhaus - weitere Suchkriterien
     ↪ Insurance
       ↪ Optionen = [en] Further insurance search criteria, [de] Krankenkasse - weitere Suchkriterien
   ↪ Title = [en] Create Case, [de] Falleingabe
     ↪ Extended = [en] Manual case creation: {0} ({1}/{2}), [de] Manuelle Falleingabe: {0} {1}/{2}
AdditionalData = [en] Additional Data, [de] Zusätzliche Daten
Address = [en] Address, [de] Anschrift
   ↪ City = [en] City, [de] Stadt
   ↪ Differ = [en] Differend Address, [de] Abweichende Anschrift
   ↪ MobileNumber = [en] Mobile Number, [de] Mobilnummer
   ↪ PhoneNumber = [en] Telephone Number, [de] Telefonnummer
   ↪ Street = [en] Street, [de] Straße
   ↪ Type
     ↪ Postal = [en] Postal Address, [de] Postanschrift
     ↪ Residential = [en] Residential Address, [de] Wohnanschrift
   ↪ ZipCode = [en] ZIP Code, [de] Postleitzahl (PLZ)
AdmissionByLaw = [en] Admission By Law, [de] GPS (Gesetzlich psych. Stat)
Admission
   ↪ ByLaw
     ↪ Unvoluntary = [en] Unvoluntary, [de] Unfreiwillig
     ↪ Voluntary = [en] Voluntary, [de] Freiwillig
   ↪ Cause
     ↪ AdmissionAfterReha = [en] Admission after prior treatment in a rehabilitation facility, [de] Aufnahme nach vorausgegangener Behandlung in einer Rehaeinrichtung
     ↪ Birth = [en] Birth, [de] Geburt
     ↪ Companion = [en] Companion, [de] Begleitperson
     ↪ Emergency = [en] Emergency, [de] Notfall
     ↪ InstructionByDentist = [en] Admission by dentist, [de] Einweisung durch Zahnarzt
     ↪ InstructionByDoctor = [en] Admission by doctor, [de] Einweisung durch Arzt
     ↪ Transferring = [en] Transferring, [de] Verlegung
     ↪ TransferringFromAnotherHospital = [en] Transferring from another hospital (e.g. corporations), [de] Verlegung (Aufnahme) aus einem anderem Krankenhaus i.R.e. Kooperation
     ↪ TransferringWithin24h = [en] Transferring (treatment duration from transferring hospital is within 24 hours), [de] Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden)
   ↪ Date
     ↪ For
       ↪ 2013 = [en] Admission date is before {0}, [de] Aufnahmedatum des Falles vor {0}
   ↪ Department = [de] KH interner Kurzname der aufn. FAB (aufn. FAB (int.))
     ↪ Short = [en] Admission Department §. 301 (Adm. 301), [de] Aufnehmende FAB nach §. 301 (Aufn. 301)
   ↪ Department301 = [de] §301-Schlüssel der FAB (aufn. FAB §301)
     ↪ Name = [de] §301-Name der FAB (aufn. FAB)
   ↪ Diagnosis = [en] Admission Diagnosis, [de] Aufnahmediagnose
   ↪ Reason2
     ↪ AccidentType_traffic_sport_other = [en] Traffic accident / sports accident / Other accident (for example, § 116 SGB X), [de] Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
     ↪ AccidentType_work_commuting_and_work-relatedDisease = [en] Accident at work / commuting accident / occupational disease (§ 11 Abs . 4 SGB V), [de] Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
     ↪ CostUnitChange_accidentType_traffic_sport_other = [en] Cost unit change - Traffic accident / sports accident / Other accident (for example, § 116 SGB X), [de] Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
     ↪ CostUnitChange_accidentType_work_commuting_and_work-relatedDisease = [en] Cost unit change - accidents at work / commuting accident / occupational disease (§ 11 para 4 SGB V .), [de] Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
     ↪ CostUnitChange_emergencyCase = [en] Cost unit change - Emergency Case, [de] Kostenträgerwechsel - Notfall
     ↪ CostUnitChange_indicationOfExternalViolence = [en] Cost unit change - Recalling the action of external force, [de] Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt
     ↪ CostUnitChange_warInvalidsAndDisabledPeople = [en] Cost unit change - War Cripples affliction / War Victims affliction, [de] Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden
     ↪ CostUnit_regularCase = [en] Cost unit change - Regular case, [de] Kostenträgerwechsel - Normalfall
     ↪ EmergencyCase = [en] Emergency Case, [de] Notfall
     ↪ IndicationOfExternalViolence = [en] Recalling the action of external force, [de] Hinweis auf Einwirkung von äußerer Gewalt
     ↪ IntegratedHealthCare_accidentType_traffic_sport_other = [en] Integrated care - Car Accident / Accident Sport / Other accident (for example, § 116 SGB X), [de] Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
     ↪ IntegratedHealthCare_accidentType_work_commuting_and_work-relatedDisease = [en] Integrated care - accidents at work / commuting accident / occupational disease (§ 11 para 4 SGB V .), [de] Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
     ↪ IntegratedHealthCare_emergencyCase = [en] Integrated care - Emergency Case, [de] Integrierte Versorgung - Notfall
     ↪ IntegratedHealthCare_indicationOfExternalViolence = [en] Integrated care - regard to the action of external force, [de] Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt
     ↪ IntegratedHealthCare_regularCase = [en] Integrated care - Regular case, [de] Integrierte Versorgung - Normalfall
     ↪ IntegratedHealthCare_warInvalidsAndDisabledPeople = [en] Integrated care - War Cripples affliction / War Victims affliction, [de] Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden
     ↪ RegularCase = [en] Regular case, [de] Normalfall
     ↪ WarInvalidsAndDisabledPeople = [en] War Cripples affliction / War Victims affliction, [de] Kriegsbeschädigten-Leiden / BVG-Leiden
   ↪ Reason
     ↪ Birth = [en] Birth, [de] Geburt
     ↪ Free = [en] free, [de] frei
     ↪ HospitalCareInpatient = [en] Hospital care, inpatient, [de] Krankenhausbehandlung, vollstationär
     ↪ HospitalCareInpatientWithExpectedBeforeInpatientTreatment = [en] Hospital care, inpatient with expected before inpatient treatment, [de] Krankenhausbehandlung, vollstationär mit vorausgegangener vorstat. Behandlung
     ↪ HospitalDayPatient = [en] Hospital day patient, [de] Krankenhausbehandlung teilstationär
     ↪ HospitalTreatmentWithoutSubsequentHospitalization = [en] Hospital treatment without subsequent hospitalization, [de] Krankenhausbehandlung ohne anschl. stationäre Behandlung
     ↪ HospitalisationToOrganRemoval = [en] Hospitalisation to organ removal, [de] Stationäre Aufnahme zur Organentnahme
     ↪ MaternityHospital = [en] Maternity hospital, [de] stationäre Entbindung
     ↪ RecoveryDueComplication = [en] Recovery due complication, [de] Wiederaufnahme wg. Komplikation (Fallpauschale)
     ↪ StationEquivalent = [en] Station equivalent treatment, [de] Stationsäquivalente Behandlung
     ↪ Transitional
       ↪ Care = [de] Übergangspflege
   ↪ Weekday = [en] Admission Date Weekday (Adm. Day), [de] Aufnahmedatum Wochentag (Aufn. WT)
AdmissionCause = [en] Admission Cause (Adm.-Cause), [de] Aufnahmeanlass (Anlass)
AdmissionData = [en] Admission Data, [de] Aufnahmedaten
AdmissionDate = [en] Admission Date (Adm.-Date), [de] Aufnahmedatum (Aufn.-Datum)
AdmissionDateFrom = [en] Admission Date from, [de] Aufnahmedatum von
AdmissionDateTo = [en] Admission Date to, [de] Aufnahmedatum bis
AdmissionMode
   ↪ DayCare = [en] Day care (for DRG), [de] Teilstationäre Versorgung(für teilstationäre DRG-Fallpauschale)
   ↪ MainDepartment = [en] MD, [de] HA
   ↪ MainDepartmentChargeDoctor = [en] MD/B-ChargeDoc., [de] HA/B-Hon.Arzt
   ↪ MainDepartmentMidwife = [en] MD/B-Mid., [de] HA/B-Heb.
   ↪ NotRelevant = [en] Not Relevant, [de] Nicht relevant
   ↪ Surgeon = [en] B-Sur., [de] B-Op.
   ↪ SurgeonAnesthetist = [en] B-Sur./B-Anest., [de] B-Op./B-Anäst.
   ↪ SurgeonAnesthetistMidwife = [en] B-Op./B-Anest./B-Mid., [de] B-Op./B-Anäst./B-Heb.
   ↪ SurgeonMidwife = [en] B-Sur./B-Mid., [de] B-Op./B-Heb.
AdmissionReason = [en] Admission Reason (AR12), [de] Aufnahmegrund (Stelle 1 u. 2) (Aufn.-Gr.1.u.2.)
AdmissionReason2 = [en] Admission Reason 2 (AR34), [de] Aufnahmegrund (Stelle 3 u. 4) (Aufn.-Gr.3.u.4.)
AdmissionWeight = [en] Admission Weight (Weight), [de] Aufnahmegewicht (Gewicht)
   ↪ From = [en] Weight from, [de] Gewicht von
   ↪ To = [en] Weight to, [de] Gewicht bis
Age = [en] Age, [de] Alter
   ↪ Days = [en] Days, [de] Tage
   ↪ Years = [en] Years, [de] Jahre
AgeInDays = [en] Age in Days (Age D.), [de] Alter in Tagen (Alter Tage)
   ↪ From = [en] Age D. from, [de] Alter Tage von
   ↪ To = [en] Age D. to, [de] Alter Tage bis
AgeInYears = [en] Age in Years (Age), [de] Alter in Jahren (Alter Jahre)
   ↪ From = [en] Age from, [de] Alter Jahre von
   ↪ To = [en] Age to, [de] Alter Jahre bis
Ambulant = [en] ambulant, [de] ambulant
Antibiogram
   ↪ Result
     ↪ Intermediate = [en] intermediate, [de] intermediär
     ↪ Resistent = [en] resistent, [de] resistent
     ↪ Sensitive = [en] sensibel, [de] sensibel
Antibiotic
   ↪ Amikacin = [en] Amikacin, [de] Amikacin
   ↪ AmpicillinAmoxicillin = [en] Ampicillin/Amoxicillin, [de] Ampicillin/Amoxicillin
   ↪ AmpicillinSulbactam = [en] Ampicillin+Sulbactam, [de] Ampicillin+Sulbactam
   ↪ Aztreonam = [en] Aztreonam, [de] Aztreonam
   ↪ Cefaclor = [en] Cefaclor, [de] Cefaclor
   ↪ Cefazolin = [en] Cefazolin, [de] Cefazolin
   ↪ Cefepim = [en] Cefepim, [de] Cefepim
   ↪ CefotaximCeftriaxon = [en] Cefotaxim/Ceftriaxon, [de] Cefotaxim/Ceftriaxon
   ↪ Cefpodoxim = [en] Cefpodoxim, [de] Cefpodoxim
   ↪ Ceftazidim = [en] Ceftazidim, [de] Ceftazidim
   ↪ CefuroximCefotiam = [en] Cefuroxim/Cefotiam, [de] Cefuroxim/Cefotiam
   ↪ Ciprofloxacin = [en] Ciprofloxacin, [de] Ciprofloxacin
   ↪ Clindamycin = [en] Clindamycin, [de] Clindamycin
   ↪ Daptomycin = [en] Daptomycin, [de] Daptomycin
   ↪ Erythromycin = [en] Erythromycin, [de] Erythromycin
   ↪ Fosfomycin = [en] Fosfomycin+, [de] Fosfomycin+
   ↪ Fucidine = [en] Fucidine+, [de] Fucidine+
   ↪ Gentamicin = [en] Gentamicin, [de] Gentamicin
   ↪ Imipenem = [en] Imipenem, [de] Imipenem
   ↪ Levofloxacin = [en] Levofloxacin, [de] Levofloxacin
   ↪ Linezolid = [en] Linezolid, [de] Linezolid
   ↪ Meropenem = [en] Meropenem, [de] Meropenem
   ↪ Metronidazol = [en] Metronidazol, [de] Metronidazol
   ↪ Moxifloxacin = [en] Moxifloxacin, [de] Moxifloxacin
   ↪ OxacillinFlucloxacill = [en] Oxacillin/Flucloxacill., [de] Oxacillin/Flucloxacill.
   ↪ Penicillin = [en] Penicillin, [de] Penicillin
   ↪ Piperacillin = [en] Piperacillin, [de] Piperacillin
   ↪ PiperacillinTazo = [en] Piperacillin+Tazo., [de] Piperacillin+Tazo.
   ↪ Rifampicin = [en] Rifampicin+, [de] Rifampicin+
   ↪ TetracyclinDoxycyclin = [en] Tetracyclin/Doxycyclin, [de] Tetracyclin/Doxycyclin
   ↪ Tigecyclin = [en] Tigecyclin, [de] Tigecyclin
   ↪ Tobramycin = [en] Tobramycin, [de] Tobramycin
   ↪ TrimethoprimSulfonamid = [en] Trimethoprim+Sulfonamid, [de] Trimethoprim+Sulfonamid
   ↪ Vancomycin = [en] Vancomycin, [de] Vancomycin
Application
   ↪ Default
     ↪ Title = [en] Checkpoint X, [de] Checkpoint X
ArtificialRespiration = [en] Artificial Respiration, [de] Beatmungsstunden
ArtificialVentilation = [en] Artificial Ventilation (in hours) (Vent. Hrs.), [de] Beatmungsstunden (Beatm.-Std.)
   ↪ From = [en] Vent. Hrs. from, [de] Beatm.-Std. von
   ↪ To = [en] Vent. Hrs. to, [de] Beatm.-Std. bis
Audit
   ↪ Address = [en] Address, [de] Anschrift
   ↪ AnsDeadline = [en] Audit Answer Deadline, [de] Frist Antwort
   ↪ AreaCode = [en] Area Code, [de] Postleitzahl
   ↪ AuditReasons = [en] Audit Reasons (Audit Reasons), [de] Prüfgründe (Prüfgründe)
   ↪ CaseDialog = [en] Case Dialog, [de] Falldialog
   ↪ CaseDialogBillCorrDeadlineError = [de] Keinen gültigen Eintrag für die Frist "Rechnungskorrektur Ende Falldialog" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
   ↪ CaseDialogEndDate = [en] End Date, [de] Ende am
   ↪ City = [en] City, [de] Ort
   ↪ Comment = [en] Audit Comment, [de] Ergebnis/Bemerkung
   ↪ DataRecCorrDeadlineError = [en] No valid entry is found for the Data Record Correction Deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Datensatzkorrektur" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
   ↪ DataRecoCorrDeadline = [en] Data Record Correction, [de] Frist Datensatzkorrektur
   ↪ Editor = [en] Editor, [de] Bearbeiter
   ↪ Fax = [en] Fax, [de] Fax
   ↪ Ident = [en] Insurance Ident, [de] IKZ der Krankenkasse (IKZ Krankenkasse)
   ↪ InfoLabel = [en] Insurance Informations, [de] KK Informationen
   ↪ InsuName = [en] Insurance Name, [de] KK Name
   ↪ PreTrial = [en] Pre-trial, [de] Vorverfahren
   ↪ PreTrialEndDate = [en] Pre-trial End Date, [de] Vorverfahren Ende
   ↪ PrelProcAnsDeadlineError = [en] No valid entry is found for the Prel. Proc. Answer deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Antwort" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
   ↪ PrelProcClosedDeadline = [en] Audit Closed Deadline, [de] Frist Vorverfahren Ende
   ↪ PrelProcClosedDeadlineError = [en] No valid entry is found for the Prel. Proc. Closed deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Vorverfahren Ende" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
   ↪ ProcessCreationDate = [en] Process Creation, [de] Einleitung Prüfverfahren
   ↪ ReminderCreate = [en] Reminder Create, [de] Wiedervorlage erzeugen
   ↪ RequestDate = [en] Request Date, [de] Aufforderung am
   ↪ SentOnDate = [en] Sent On, [de] gesendet am
   ↪ Status = [en] Status, [de] Status
   ↪ Telephone = [en] Telephone, [de] Telefon
   ↪ TelephoneAreaCode = [en] Telephone Area Code, [de] Vorwahl
   ↪ UpdateRequestWindow = [en] Update a request (Examination/Pre-trial), [de] Anfrage aktualisieren (Prüfanfrage/Vorverfahren)
   ↪ UserComment = [en] User Comment, [de] Notizen
AuditQuotaResult
   ↪ Actual
     ↪ ExaminationQuota = [en] Actual Examination Quota, [de] Aktuelle Prüfquote
   ↪ Billed
     ↪ Cases = [en] Billed Cases, [de] abgerechnete Fälle
   ↪ Exceeded
     ↪ ExaminationQuota = [en] Examination Quota exceeded, [de] Überschreitung Prüfquote
   ↪ Information = [en] The check rate for the cash register {0} for the quarter {1} / {2} has not yet been reached.Details: Number of inpatient cases: {3}Number of complaints (actual value): {4}Number of complaints (target value) : {5}Quick review rate for the quarter: {6}, [de] Die Prüfquote für die Kasse {0} für das Quartal {1}/{2} wurde noch nicht erreicht.Details:Anzahl abgerechnete vollstationäre Fälle: {3}davon zur Beanstandung eingeleitet (Istwert): {4}Max. zulässige Beanstandungen gemäß Prüfquote (Sollwert): {5}Festgesetzte Prüfquote für dieses Quartal: {6} %
   ↪ Max
     ↪ MD
       ↪ Examinations = [en] Maximal Examinations, [de] MD-Prüfungen maximal
   ↪ MD
     ↪ Examinations = [en] MD-Examinations, [de] MD-Prüfungen
   ↪ Quarter
     ↪ Year
       ↪ MDRequest = [en] Quarter / Year MD-Request, [de] Quartal / Jahr MD-Anfrage
   ↪ Warning = [en] The checkout rate for the cash register {0} for the quarter {1} / {2} has already been reached!The request is marked as "Examination Quota exceeded".Details: Number of inpatient cases: {3}Number of complaints (actual value): { 4}Number of complaints (target value): {5}Stated inspection quota for the quarter: {6}, [de] Die Prüfquote für die Kasse {0} für das Quartal {1}/{2} ist bereits erreicht!Die Anfrage wird mit "Überschreitung Prüfquote" markiert.Details:Anzahl abgerechnete vollstationäre Fälle: {3}davon zur Beanstandung eingeleitet (Istwert): {4}Max. zulässige Beanstandungen gemäß Prüfquote (Sollwert): {5}Festgesetzte Prüfquote für dieses Quartal: {6} %
AuditReasons
   ↪ Error = [en] List of audit reasons is empty. Please configure valid audit reasons!!, [de] Die Liste der Prüfgründe ist leer. Bitte konfigurieren Sie gültige Prüfgründe in den Stammdaten!
AuditType
   ↪ Collection = [en] Collective case check, [de] Sammelprüfung
   ↪ Single = [en] Single case check, [de] Einzelfallprüfung
Authorization
   ↪ Dialog
     ↪ Message = [en] Your active role {0} does not have the necessary permissions to ''''{1}''''., [de] Ihre aktuelle Rolle {0} verfügt nicht über die notwendige Berechtigung um ''''{1}'''' auszuführen.
       ↪ Contact = [en] Please contact your system administrator., [de] Bitte wenden Sie sich an Ihren Systemadministrator.
Baserate = [en] Baserate, [de] Basiswert
Batchprocessing = [en] Batchprocessing, [de] Batchverarbeitung
   ↪ LastProcess = [en] Last batchprocess: {0}, [de] Letzte Batchverarbeitung: {0}
   ↪ Result = [en] Result batchprocessing, [de] Ergebnis Batchverarbeitung
Bege
   ↪ DirectFax = [en] Direct Fax No., [de] Fax direkt
   ↪ DirectPhoneNo = [en] Direct Phone No., [de] Durchwahl
   ↪ Editor = [en] Contact person, [de] Ansprechpartner
   ↪ UpdateRequestWindow = [en] Update a request (Insurance Association), [de] Anfrage aktualisieren (Berufsgenossenschaft)
Bill
   ↪ Correction
     ↪ Deadline = [de] Frist bis zur einmaligen Rechnungskorrektur (MD-Anfrage) (Frist Rech.-Korrektur)
       ↪ Days = [de] Tage bis Rechnungskorrektur MD (Korrektur MD)
       ↪ From = [de] Frist Rech.-Korrektur von
       ↪ To = [de] Frist Rech.-Korrektur bis
   ↪ Date = [en] Bill date, [de] Rechnungsdatum, [de] Fakturadatum
   ↪ FiscalYear = [en] Year, [de] Jahr
   ↪ Kind = [en] Kind, [de] Fakturaart
   ↪ Netvalue = [en] Netvalue, [de] Betrag
   ↪ No = [en] Bill No., [de] Faktura
   ↪ Number = [en] Bill number, [de] Rechnungsnummer
   ↪ Positions = [en] bill positions, [de] Rechnungspositionen
   ↪ Recipient = [en] Recipient, [de] Regulierer
   ↪ RefCurrency = [en] Ref. currency, [de] Währung
   ↪ RefType = [en] Ref. type, [de] Fakturabeleg
   ↪ Status = [en] Status, [de] Status
   ↪ Type = [en] Bill type, [de] Fakturatyp, [de] Rechnungsart
     ↪ Enum
       ↪ 1
         ↪ Warning = [en] first warning, [de] 1. Mahnung
       ↪ 2
         ↪ Warning = [en] second warning, [de] 2. Mahnung
       ↪ Credit
         ↪ Storno = [en] credit/storno bill, [de] Gutschrift/Stornierung
       ↪ Final = [en] final bill, [de] Schlussrechnung
       ↪ Forecast = [en] forecast bill, [de] Vorausberechnung
       ↪ Partial = [en] partial bill, [de] Zwischenrechnung
       ↪ Reminder = [en] reminder bill, [de] Zahlungserinnerung
       ↪ Suppl = [en] supplimentary bill, [de] Nachtragsrechnung
   ↪ Validation
     ↪ Error = [en] Need additional information!, [de] Zusätzliche Informationen sind erforderlich
     ↪ No
       ↪ Fees = [en] Bill has to include fee keys, [de] Eine Rechnung muss mindestens ein Entgelt enthalten
BillOpenItem
   ↪ AccountsReceivableNo = [en] Accounts Receivable No., [de] Debitorennr
   ↪ AmountInLocalCurr = [en] Amount In Local Curr., [de] Betrag
   ↪ CompanyCode = [en] Company code, [de] Buchungskreis
   ↪ CurrencyKey = [en] Currency Key, [de] Währung
   ↪ DebitCreditKey = [en] Debit Credit Key, [de] S/H
   ↪ FiscalYear = [en] Year, [de] Jahr
   ↪ NetValue = [en] Net Value, [de] Gesamt
   ↪ NumberReceipt = [en] Number Receipt, [de] Belegnr
   ↪ ReceiptDateReceipt = [en] Receipt Date, [de] Belegdatum
   ↪ RefNo = [en] Ref. No., [de] Zuordnung
   ↪ TextDesc = [en] Text, [de] Bezeichnung
BillPosition
   ↪ Amount = [en] Amount, [de] Menge
   ↪ BaseAmount = [en] Base Amount, [de] Preis
   ↪ BillNo = [en] Bill No., [de] Faktura
   ↪ NetAmount = [en] Net Amount, [de] Nettowert
   ↪ PositionNo = [en] Position No., [de] Positionsnummer
   ↪ Reference = [en] Reference, [de] Tarifleistung
   ↪ Text = [en] Text, [de] Bezeichnung
BillValidation
   ↪ Invalid
     ↪ Bill
       ↪ Number
         ↪ Length = [en] bill number kann be maximal 10 symbols, [de] Rechnungsnummer darf nicht länger als 10 Zeichen sein
     ↪ Fee
       ↪ Key = [en] one fee key is not valid, [de] Mindestens ein Entgeltschlüssel ist nicht korrekt
         ↪ Length = [en] fee key must have 8 symbols, [de] Entgeltschüssel muss 8 Zeichen haben
     ↪ Insurance
       ↪ Key
         ↪ Length = [en] insurance number has to have 9 symbols, [de] Versicherungsnummer muss 9 Zeichen haben
BillingDate = [en] Billing Date (Bill.-Date), [de] Rechnungsdatum (Rech.-Datum)
   ↪ From = [en] Bill.-Date from, [de] Rech.-Datum von
   ↪ To = [en] Bill.-Date to, [de] Rech.-Datum bis
Billing
   ↪ Quarter = [en] Billing Quarter (Bill. Quarter), [de] Rechnungsquartal (Rech.-Quartal)
Bookmarks = [en] bookmarks, [de] Textmarken
Cancel = [en] cancel, [de] Abbrechen
CancelGrouping = [en] cancel Grouping, [de] Stoppe Grouping
CancelSearch = [en] Cancel Search, [de] Suche abbrechen
CarePercAdult = [en] Total 1:1, [de] Summe 1:1
CarePercInf = [en] Total 1:1(C/T), [de] Summe 1:1(K/J)
Case = [en] Case, [de] Fall
   ↪ Added
     ↪ Tooltip = [en] See the details of a Case, [de] Siehe die Details eines Falles
   ↪ CareCW = [en] CareCW (CW cre.), [de] PflegeCW (CW Pfl.)
     ↪ From = [en] CW cre. from, [de] PflegeCW von
     ↪ To = [en] CW cre. to, [de] PflegeCW bis
   ↪ CareCWmaximal = [en] CareCW maximal (CW cre. max.), [de] PflegeCW maximal (CW Pfl. max.)
     ↪ From = [en] CW cre. max. from, [de] PflegeCW max. von
     ↪ To = [en] CW cre. max. to, [de] PflegeCW max. bis
   ↪ CareCWminimal = [en] CareCW minimal (CW cre. min.), [de] PflegeCW minimal (CW Pfl. min.)
     ↪ From = [en] CW cre. min. from, [de] PflegeCW min. von
     ↪ To = [en] CW cre. min. to, [de] PflegeCW min. bis
   ↪ Create
     ↪ Process = [en] Create process, [de] Vorgang erstellen
   ↪ CwCatalog = [en] Assessment Relation: Main Department (CW Catalog), [de] Bewertungsrelation: Hauptabteilung (CW Katalog)
   ↪ CwEffective = [en] effective CW (CW eff.), [de] Effektiver CW Wert (CW eff.)
     ↪ From = [en] CW eff. from, [de] CW eff. von
     ↪ To = [en] CW eff. to, [de] CW eff. bis
   ↪ CwNegative = [en] Total of all negative CW (CW-), [de] Summe aller negativen CW Werte (CW-)
   ↪ CwPositive = [en] Total of all positive CW (CW+), [de] Summe aller positiven CW Werte (CW+)
   ↪ Data = [en] Case data, [de] Falldaten
   ↪ Day
     ↪ Care = [en] case with day care admission reason, [de] vorstationärer Fall
   ↪ Delete
     ↪ Process = [en] Delete process, [de] Vorgang löschen
   ↪ DeltaCWmaximal = [en] Delta-CW maximal (dCW max), [de] Delta-CW maximal (dCW max.)
     ↪ From = [en] dCW max from, [de] dCW max. von
     ↪ To = [en] dCW max to, [de] dCW max. bis
   ↪ DeltaCWminimal = [en] DeltaCW minimal (dCWmin), [de] Delta-CW minimal (dCW min.)
     ↪ From = [en] dCWmin from, [de] dCW min. von
     ↪ To = [en] dCWmin to, [de] dCW min. bis
   ↪ DeltaRevenueMaximal = [en] Delta-Revenue maximal (dRevenue max.), [de] Delta-Erlös maximal (dErlös max.)
     ↪ From = [en] dRevenue max. from, [de] dErlös max. von
     ↪ To = [en] dRevenue max. to, [de] dErlös max. bis
   ↪ DeltaRevenueMinimal = [en] Delta-Revenue minimal (dRevenue min.), [de] Delta-Erlös minimal (dErlös min.)
     ↪ From = [en] dRevenue min. from, [de] dErlös min. von
     ↪ To = [en] dRevenue min. to, [de] dErlös min. bis
   ↪ Merge
     ↪ Math
       ↪ RevMergCase = [en] Revenue merged case, [de] Erlös Fallzusammenführung
       ↪ RevSumOrgCases = [en] Sum revenue original Cases, [de] Summe Erlöse Originalfälle
     ↪ Tab
       ↪ Section
         ↪ CaseData = [en] Overview case data, [de] Übersicht Falldaten
         ↪ DetectedReasons = [en] Detected reasons, [de] Ermittelte Gründe
   ↪ Merging = [en] Case merging, [de] Fallzusammenführung
     ↪ Case = [en] Merged Case (Mrg. Case), [de] Zusammengeführter Fall (Zusammengef. Fall)
       ↪ Leading = [en] Leading case, [de] Führender Fall
       ↪ Orginal = [en] Original Case (Org.), [de] Original Fall (Org.)
     ↪ Condition
       ↪ Eight
         ↪ Drg = [en] Readmission via complication (RA via complication), [de] Wiederaufnahme wegen Komplikation (WA wg. Komplikation)
         ↪ Pepp = [en] 1.Fall letztes Jahr vor Umstieg (1.Fall letztes Jahr vor Umstieg), [de] 1.Fall letztes Jahr vor Umstieg (1.Fall letztes Jahr vor Umstieg)
       ↪ Five
         ↪ Drg = [en] First DRG Partition  M or A (Part. M or A), [de] Erste DRG Partition M oder A (Part. M oder A)
         ↪ Pepp = [en] Both same PEPP (Both same PEPP), [de] Beide in bewerteter PEPP (Beide in bewert. PEPP)
       ↪ Four
         ↪ Drg = [en] Same MDC**Same MDC, [de] Gleiche MDC (Gleiche MDC)
         ↪ Pepp = [en] Same SK (Same SK), [de] Gleiche SK (Gleiche SK)
       ↪ Nine
         ↪ Drg = [en] Summary**Summary, [de] Zusammenfassung (Zusammenfassung)
         ↪ Pepp = [en] Summary (Summary), [de] Zusammenfassung (Zusammenfassung)
       ↪ One
         ↪ Drg = [en] Within High (Within High trim point), [de] Innerhalb oberer Grenzverweildauer (Innerhalb OGVD)
         ↪ Pepp = [en] Within 21 Days (Within 21 D.), [de] Innerhalb 21 Tage (Innerhalb 21 T.)
       ↪ Seven
         ↪ Drg = [en] Catalog-Exception (Cat.-Exception), [de] Katalog-Ausnahme (Kat.-Ausnahme)
         ↪ Pepp = [en] 1.Fall aus vorletztem Jahr (1.Fall aus vorletztem Jahr), [de] 1.Fall aus vorletztem Jahr (1.Fall aus vorletztem Jahr)
       ↪ Six
         ↪ Drg = [en] Second DRG Partition O (Second a. Part. O), [de] Zweite DRG Partition O (Zweite a. Part. O)
         ↪ Pepp = [en] Both day-/fullpatient (Both day-/fullpatient), [de] Beide teil- bzw. vollstationär (Beide teil- bzw. vollstat.)
       ↪ Ten
         ↪ Drg = [en] New case (New case), [de] Neuer Fall (Neuer Fall)
         ↪ Pepp = [en] New case (New case), [de] Neuer Fall (Neuer Fall)
       ↪ Three
         ↪ Drg = [en] Same ADRG (Same ADRG), [de] Gleiche ADRG (Gleiche ADRG)
         ↪ Pepp = [en] Same year (Same year), [de] Gleiches Jahr (Gleiches Jahr)
       ↪ Two
         ↪ Drg = [en] Within 30 Days (Within 30 D.), [de] Innerhalb 30 Tage (Innerhalb 30 T.)
         ↪ Pepp = [en] Within 120 Days (Within 120 D.), [de] Innerhalb 120 Tage (Innerhalb 120 T.)
     ↪ Do
       ↪ Merge = [en] Merge case, [de] Fallzusammenführung simulieren
       ↪ MergeAndSave = [en] Merge case & save, [de] Fall zusammenführen & speichern
       ↪ Save = [en] Save case, [de] Fall speichern
       ↪ SaveAndOpen = [en] Save case and open, [de] Fall speichern und öffnen
     ↪ Id = [en] Merging ID (Mrg. ID), [de] Zusammenführungs ID (Zusf. ID)
     ↪ Job
       ↪ Completed = [en] Completed, [de] Erfolgreich
       ↪ Failed = [en] Failed, [de] Gescheitert
       ↪ Initializing = [en] Initializing, [de] Wird initialisiert
       ↪ Started = [en] Determine cases to merge, [de] Zusammenführbare Fälle werden ermittelt
       ↪ Starting = [en] Starting case merging, [de] Fallzusammenführung wird gestartet
       ↪ Stopped = [en] Stopped, [de] Angehalten
       ↪ Stopping = [en] Stopping case merging, [de] Fallzusammenführung wird beendet
     ↪ Start
       ↪ Process = [en] Determine cases, [de] Fälle ermitteln
     ↪ Stop
       ↪ Process = [en] Stop, [de] Stop
     ↪ Table
       ↪ Placeholder = [en] No merged cases determined, [de] Keine zusammenführbaren Fälle ermittelt
     ↪ Warning
       ↪ Grouped = [en] Apparently, not all cases are grouped with model: {0}!Cases that are not grouped are ignored!Continue?, [de] Nicht alle Fälle scheinen mit dem Groupermodel: {0} eine Fallpauschale zu haben!Fälle ohne Fallpauschale werden bei der Ermittlung von zusammenführbaren Fällen ignoriert!Trotzdem fortfahren?
   ↪ Numeric1 = [de] Zahl 1
   ↪ Numeric10 = [de] Zahl 10
   ↪ Numeric2 = [de] Zahl 2
   ↪ Numeric3 = [de] Zahl 3
   ↪ Numeric4 = [de] Zahl 4
   ↪ Numeric5 = [de] Zahl 5
   ↪ Numeric6 = [de] Zahl 6
   ↪ Numeric7 = [de] Zahl 7
   ↪ Numeric8 = [de] Zahl 8
   ↪ Numeric9 = [de] Zahl 9
   ↪ Open
     ↪ Process = [en] Open process, [de] Vorgang öffnen
   ↪ Removed
     ↪ Tooltip = [en] This case is Removed, [de] Dieser Fall wird entfernt
   ↪ Resolved = [en] Case resolved, [de] Fall abgeschlossen
   ↪ Simulaton
     ↪ Actions = [en] Actions, [de] Aktionen
   ↪ String1 = [de] Text 1
   ↪ String10 = [de] Text 10
   ↪ String2 = [de] Text 2
   ↪ String3 = [de] Text 3
   ↪ String4 = [de] Text 4
   ↪ String5 = [de] Text 5
   ↪ String6 = [de] Text 6
   ↪ String7 = [de] Text 7
   ↪ String8 = [de] Text 8
   ↪ String9 = [de] Text 9
CaseDetails = [en] Case Details, [de] Fall Einzelheiten
   ↪ Date1 = [en] Date 1, [de] Datum 1
   ↪ Date2 = [en] Date 2, [de] Datum 2
   ↪ Date3 = [en] Date 3, [de] Datum 3
   ↪ Date4 = [en] Date 4, [de] Datum 4
   ↪ Date5 = [en] Date 5, [de] Datum 5
   ↪ Double1 = [en] Double 1, [de] Gleitkommazahl 1
   ↪ Double2 = [en] Double 2, [de] Gleitkommazahl 2
   ↪ Double3 = [en] Double 3, [de] Gleitkommazahl 3
   ↪ Double4 = [en] Double 4, [de] Gleitkommazahl 4
   ↪ Double5 = [en] Double 5, [de] Gleitkommazahl 5
   ↪ Int1 = [en] Int 1, [de] Int 1
   ↪ Int10 = [en] Int 10, [de] Int 10
   ↪ Int2 = [en] Int 2, [de] Int 2
   ↪ Int3 = [en] Int 3, [de] Int 3
   ↪ Int4 = [en] Int 4, [de] Int 4
   ↪ Int5 = [en] Int 5, [de] Int 5
   ↪ Int6 = [en] Int 6, [de] Int 6
   ↪ Int7 = [en] Int 7, [de] Int 7
   ↪ Int8 = [en] Int 8, [de] Int 8
   ↪ Int9 = [en] Int 9, [de] Int 9
   ↪ String1 = [en] String 1, [de] String 1
   ↪ String10 = [en] String 10, [de] String 10
   ↪ String2 = [en] String 2, [de] String 2
   ↪ String3 = [en] String 3, [de] String 3
   ↪ String4 = [en] String 4, [de] String 4
   ↪ String5 = [en] String 5, [de] String 5
   ↪ String6 = [en] String 6, [de] String 6
   ↪ String7 = [en] String 7, [de] String 7
   ↪ String8 = [en] String 8, [de] String 8
   ↪ String9 = [en] String 9, [de] String 9
CaseDetailsCancelReason
   ↪ CaseMerge = [en] Case merging, [de] Fallzusammenführung
   ↪ Kis = [en] KIS, [de] KIS
   ↪ User = [en] manual cancellation, [de] manuelle Stornierung
CaseDoesNotExist = [en] Case does not exist, [de] Der Fall wurde nicht gefunden
CaseDoesNotExistWithReason = [en] Case with ID {0} does not exist. Maybe this case was already deleted by another user meantime., [de] Der Fall mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.
CaseFileFinalisation = [en] Case File Finalisation, [de] Fallabschluss
CaseIsLocked = [en] Case {0} was already opened by {1} since {2}, [de] Der Fall {0} wird bereits von {1} seit {2} Uhr bearbeitet
CaseLocked = [en] Locked (L), [de] Gesperrt (G)
CaseManagement = [en] Case Management, [de] Fall Management
   ↪ Warning
     ↪ ChangeLocalisation = [en] Changing the localisation will result in the creation of an new Icd! Are you sure?, [de] Das Ändern der Lokalisation führt zu der Erzeugung einer neuen ICD! Sind Sie sich sicher?
     ↪ SelectDepartment = [en] Choose a Department!, [de] Wählen Sie eine Fachabteilung/(Station)!
CaseNumber = [en] Case Number (Case Number), [de] Fallnummer (Fallnummer)
CaseResolve
   ↪ CCL = [en] CCL, [de] CCL
   ↪ CW = [en] CW, [de] CW
     ↪ Eff = [en] eff. CW, [de] eff. CW
   ↪ CWCatalog = [en] CW-Catalog, [de] CW-Katalog
   ↪ Date = [en] Date, [de] Datum
   ↪ DRG = [en] DRG, [de] DRG
   ↪ EstimatedRules = [en] Estimated Rules, [de] Prüfregelanschläge
   ↪ GroupResultCode = [en] R, [de] R
   ↪ ICD = [en] ICD, [de] ICD
     ↪ UncorrectedCW = [en] unc. CW, [de] unkorr. CW
   ↪ ICD-Text = [en] ICD-Text, [de] ICD-Text
   ↪ Kind = [en] Kind, [de] Art
   ↪ Localisation = [en] Localisation (Loc.), [de] Lokalisation (Lok.)
   ↪ Md = [en] MD, [de] HD
   ↪ OPS = [en] OPS, [de] OPS
   ↪ OPS-TEXT = [en] OPS-Text, [de] OPS-Text
   ↪ Rules = [en] Rules, [de] Regeln
     ↪ Categorie = [en] Categorie, [de] Kategorie
     ↪ DeltaCharge = [en] dCharge, [de] dEntgelt
     ↪ DeltaCostWeight = [en] dCW, [de] dCW
     ↪ Description = [en] Description, [de] Bezeichnung
     ↪ DRGSimulation = [en] DRG Simulation (DRG Sim.), [de] DRG Simulation (DRG Sim.)
     ↪ Id = [en] Identifier, [de] Nummer
     ↪ PEPPSimulation = [en] PEPP (PEPP Sim.), [de] PEPP Simulation (PEPP Sim.)
     ↪ Proposal = [en] Proposal, [de] Vorschlag
     ↪ Relation = [en] Relation, [de] Bezug
     ↪ Type = [en] Type, [de] Type
   ↪ SecundaryICD = [en] sec. ICD, [de] s. ICD
   ↪ SupplementaryCharge = [en] SC, [de] Zusatz-/ergänz. Tagesentgelte
   ↪ SupplementaryValue = [en] SC-Value, [de] ZE-Betrag
   ↪ UsedForGrouping = [en] G, [de] G
CaseStatus = [en] Case Status (Status), [de] Fallstatus (Status)
   ↪ Closed = [en] Closed, [de] Geschlossen
   ↪ InProgress = [en] In Progress, [de] In Bearbeitung
   ↪ New = [en] New, [de] Neu
   ↪ NewVersion = [en] New Version, [de] Neue Version
   ↪ SapClosed = [en] SAP closed, [de] SAP geschlossen
   ↪ Standard = [en] Standard, [de] Standard
   ↪ Suggestion = [en] Suggestion, [de] Vorschlag
CaseType = [en] Case Type (Case Type), [de] Abrechnungsart (Abrechnungsart)
   ↪ AmbuOP = [en] Ambu OP, [de] Ambu OP
   ↪ DRG = [en] DRG, [de] DRG
   ↪ OTHER = [en] Other, [de] Andere
   ↪ PEPP = [en] PEPP, [de] PEPP
   ↪ PIA = [en] PIA, [de] PIA
   ↪ PreAdmissionTerminators = [en] pre-admission terminators, [de] vorstat. Abbrecher
   ↪ PSY = [en] Psychosomatic, [de] Psychosomatik
Casecreation
   ↪ Failed = [en] Case creation failed!, [de] Fall konnte nicht angelegt werden!
   ↪ Success = [en] Case successfully created!, [de] Fall wurde erfolgreich angelegt!
Casefee = [en] Case Fees, [de] Entgelte
   ↪ Count = [en] Count, [de] Anzahl
   ↪ Daysoff = [en] Days without Calculation, [de] Tage ohne Berechnung
   ↪ From = [en] Billing from, [de] Abrechnung von
   ↪ Info = [en] Case fees of {0}, [de] Entgelte von {0}
   ↪ Kind = [en] Kind, [de] Art
   ↪ Sum = [en] Total, [de] Summe
   ↪ To = [en] Billing to, [de] Abrechnung bis
   ↪ Value = [en] Value, [de] Betrag
Caselist
   ↪ Csv
     ↪ Export
       ↪ Diag = [en] Caselist is exporting as CSV, [de] Fallliste wird als CSV exportiert
   ↪ Excel
     ↪ Export
       ↪ Diag = [en] Caselist is exporting as Excel, [de] Fallliste wird als Excel exportiert
Cases = [en] Cases, [de] Fälle
Catalog = [en] Catalog, [de] Katalog
   ↪ Aop
     ↪ Catalog = [en] AOP-Katalog, [de] AOP-Katalog
     ↪ Category = [en] Kategorie, [de] Kategorie
       ↪ Description
         ↪ 1 = [en] Leistungen, die in der Regel ambulant erbracht werden können, [de] Leistungen, die in der Regel ambulant erbracht werden können
         ↪ 2 = [en] Leistungen, bei denen sowohl eine ambulante, als auch stationäre Durchführung möglich ist, [de] Leistungen, bei denen sowohl eine ambulante, als auch stationäre Durchführung möglich ist
     ↪ Sheet = [en] Abschnitt, [de] Abschnitt
   ↪ Download
     ↪ Baserates = [en] Baserates, [de] Baserates
     ↪ Catalogs = [en] Catalogs, [de] Kataloge
     ↪ Core_data = [en] Core data, [de] Stammdaten
     ↪ DailyFee = [en] Daily Fees, [de] Tagesentgelte
     ↪ Departments = [en] Departments, [de] Abteilungen
     ↪ Doctors = [en] Doctors, [de] Ärzte
     ↪ DrgFee = [en] DRG Supp. Fees, [de] DRG Zusatzentgelte
     ↪ Hospitals = [en] Hospitals, [de] Krankenhäuser
     ↪ Insurance_companys = [en] Insurances, [de] Krankenkassen
     ↪ PeppFee = [en] PEPP Supp. Fees, [de] PEPP Zusatzentgelte
     ↪ Progress
       ↪ Catalog_downloaded = [en] {0} was downloaded, [de] {0} wurde heruntergeladen
       ↪ Catalog_dropped = [en] {0} was dropped, [de] {0} wurde gelöscht
       ↪ Catalog_will_download = [en] Will download {0}, [de] Lade {0} herunter
       ↪ Catalog_will_drop = [en] Will drop {0}, [de] Lösche {0}
       ↪ Download_finished = [en] Download has finished..., [de] Herunterladen wurde beendet...
       ↪ Download_started = [en] Download has started..., [de] Herunterladen wurde gestartet...
       ↪ Priming = [en] Priming..., [de] Vorbereiten...
       ↪ Synchronization_finished = [en] Synchronization with server was finished, [de] Synchronisation mit Server abgeschlossen
       ↪ Synchronization_started = [en] Check if client is up to date..., [de] Prüfe, ob der Client auf dem neuesten Stand ist...
     ↪ Title = [en] CPX is loading..., [de] checkpoint x wird geladen...
     ↪ Window_title = [en] Loading catalogs and core data, [de] Kataloge und Stammdaten laden
   ↪ Drg
     ↪ Care
       ↪ Desc = [en] {0} Day(s), equals {1}, [de] {0} Tag(e), entspr. {1}
       ↪ Title = [en] Cost weight (Care), [de] Kostengewicht (Pflege)
     ↪ Costweight = [en] Cost weight (DRG), [de] Kostengewicht (DRG)
     ↪ EffCw = [en] eff. CW {0}, [de] eff. CW {0}
     ↪ FirstDayDeduction = [en] 1. day of deduction, [de] 1. Tag mit Abschlag
     ↪ FirstDaySurcharge = [en] 1. day of surcharge, [de] 1. Tag zusätzliches Entgelt
     ↪ Los = [en] Average length of stay, [de] Mittlere Verweildauer
     ↪ Mdc = [en] MDC {0}, [de] MDC {0}
     ↪ Nego
       ↪ Desc = [en] Negotiated Fee per day {0}{1}, {2} day(s), [de] Vereinbartes Entgeld pro Tag {0}{1}, {2} Tag(e)
       ↪ Revenue = [en] Negotiated Fee per day {0}{1}, {2} day(s) ({3}{4}), [de] Vereinbartes Entgeld pro Tag {0}{1}, {2} Tag(e) ({3}{4})
       ↪ Title = [en] Negotiated Fee, [de] Tagesgleiches Entgelt
     ↪ UnkCw = [en] unc. CW {0}, [de] unkorr. CW {0}
   ↪ Icd
     ↪ Error = [en] [ICD Catalog {0} : Has no value], [de] [ICD Katalog {0} : Hat keinen Bezeichner]
   ↪ Mdc
     ↪ Pre = [en] PRE-MDC, [de] PRÄ-MDC
   ↪ Menu
     ↪ No_update_changes_found = [en] no changes at {0}, [de] Keine Änderungen um {0} Uhr
     ↪ No_updates_found = [en] Catalogs have not been changed, [de] Kataloge wurden nicht geändert
     ↪ Update = [en] Update catalogs, [de] Kataloge aktualisieren
     ↪ Update_changes_found = [en] {0} changes at {1}, [de] {0} Änderungen um {1}
   ↪ Ops
     ↪ Error = [en] [OPS Catalog {0} : Has no value], [de] [OPS Katalog {0} : Hat keinen Bezeichner]
   ↪ Pepp
     ↪ Sc = [en] SK {0}, [de] SK {0}
   ↪ Sk
     ↪ Pre = [en] Error-PEPP and other PEPP, [de] Fehler-PEPP und sonstige PEPP
   ↪ Update
     ↪ Notification = [en] The server has an update of catalog data available!, [de] Auf dem Server steht ein Update der Katalogdaten zur Verfügung!
CatalogDialog
   ↪ Confirm = [en] Confirm, [de] Bestätigen
   ↪ Diagnoses = [en] Diagnoses, [de] Diagnosen
   ↪ Procedures = [en] Procedures, [de] Prozeduren
   ↪ Remove = [en] Remove, [de] Löschen
   ↪ RemoveAll = [en] Remove all, [de] Alle löschen
   ↪ Search = [en] Search..., [de] Suchen...
Characters = [en] Characters, [de] Zeichen
Checkresult
   ↪ Result = [en] Result checkresult, [de] Ergebnis Fallprüfung
Client
   ↪ Error
     ↪ Configuration = [en] Client user configuration file seems to be corrupted:, [de] Die Konfigurationsdatei des Client-Benutzers scheint beschädigt zu sein:
Comment = [en] Comment, [de] Kommentar
CommonCaseData = [en] Common Case Data, [de] Allgemeine Falldaten
Confirmation
   ↪ Default
     ↪ Text = [en] Do you really want to do this action?, [de] Wollen sie diese Aktion wirklich durchführen?
   ↪ No = [en] No, [de] Nein
   ↪ Yes = [en] Yes, [de] Ja
Conformation = [en] Confirmation, [de] Bestätigung
ContextMenu
   ↪ Openpatient = [en] open health status, [de] Gesundheitszustand öffnen
Continue = [en] Continue, [de] Weiter
CountCases = [en] Count Cases, [de] Anzahl Fälle
CountProc = [en] Count of procedures (∑ OPS), [de] Anzahl der Prozeduren (Anz. OPS)
   ↪ From = [en] ∑ OPS from, [de] Anz. OPS von
   ↪ To = [en] ∑ OPS to, [de] Anz. OPS bis
CountSD = [en] Count of secondary diagnoses (∑ SD), [de] Anzahl der Nebendiagnosen (Anz. ND)
   ↪ From = [en] ∑ SD from, [de] Anz. ND von
   ↪ To = [en] ∑ SD to, [de] Anz. ND bis
Country = [en] Country, [de] Staat
   ↪ Austria = [en] Austria, [de] Österreich
   ↪ England = [en] England, [de] England
   ↪ France = [en] France, [de] Frankreich
   ↪ Germany = [en] Germany, [de] Deutschland
   ↪ Switzerland = [en] Switzerland, [de] Schweiz
CourtFileNumber = [en] court file number, [de] Aktenzeichen (Gericht) (Akt.-Z. (Gericht))
Create = [en] Create, [de] Anlegen
CreatedFrom = [en] from {0}, [de] von {0}
CreatedOn = [en] Created on {0}, [de] Angelegt am {0}
CreationDate = [en] Creation Date (Creation Date), [de] Anlagedatum des Falles (Anlagedatum)
   ↪ Document = [en] Creation Date, [de] Anlagedatum
   ↪ From = [en] Creation Date from, [de] Anlagedatum von
   ↪ To = [en] Creation Date to, [de] Anlagedatum bis
Currency
   ↪ Symbol = [en] €, [de] €
Cw = [en] CW, [de] CW
DailyFee = [en] Daily Fee, [de] Tagesentgelt
   ↪ Math
     ↪ Pepp = [en] CW ({0}) X ({1}) Days X Baserate ({2}) from {3} to {4}, [de] CW ({0}) X ({1}) Tage X Baserate ({2}) von {3} bis {4}
DailyFeeValue = [en] DF-Value, [de] ET-Betrag
Data
   ↪ Record
     ↪ Correction
       ↪ Deadline = [de] Frist bis zur Datenkorrektur im Vorverfahren (Frist Dat.-Korrektur)
         ↪ Days = [de] Tage bis Datenkorrektur Vorverfahren (Datenkorrektur)
         ↪ From = [de] Frist Dat.-Korrektur von
         ↪ To = [de] Frist Dat.-Korrektur bis
DateFormat = [en] yyyy-MM-dd, [de] dd.MM.yyyy
   ↪ Devider = [en] -, [de] .
DateOfAccident = [en] Date of Accident, [de] Unfalldatum
DateOfAdmission = [en] Admission Date, [de] Aufnahmetag
DateOfBirth = [en] Date of Birth (Birth), [de] Geburtsdatum (Geb.-Datum)
   ↪ From = [en] Birth from, [de] Geb.-Datum von
   ↪ To = [en] Birth to, [de] Geb.-Datum bis
DateTimeFormat = [en] yyyy-MM-dd HH:mm:ss, [de] dd.MM.yyyy HH:mm:ss
Dates = [en] Dates, [de] Datumsangaben
DayCare = [en] DayCare, [de] Teilstationär
Day
   ↪ Friday = [en] Friday (Fr), [de] Freitag (Fr)
   ↪ Monday = [en] Monday (Mo), [de] Montag (Mo)
   ↪ Saturday = [en] Saturday (Sa), [de] Samstag (Sa)
   ↪ Sunday = [en] Sunday (Su), [de] Sonntag (So)
   ↪ Thursday = [en] Thursday (Th), [de] Donnerstag (Do)
   ↪ Tuesday = [en] Tuesday (Tu), [de] Dienstag (Di)
   ↪ Wednesday = [en] Wednesday (We), [de] Mittwoch (Mi)
Days
   ↪ Calculated = [en] Days calculated, [de] Berechnete Abwesenheit
   ↪ Simul
     ↪ No
       ↪ Deduction
         ↪ Care = [en] without deduction care, [de] ohne Pflege
     ↪ With
       ↪ Deduction
         ↪ Care = [en] with deduction care, [de] mit Pflege
   ↪ Simulated = [en] Days simulated, [de] Simulationstage
   ↪ Stay = [en] Days' stay, [de] Belegtage
     ↪ Pepp = [de] Berechnungstage
DaysIntensiv = [en] Days intensiv, [de] Tage Intensiv
DaysSurcharge = [en] Days Surcharge, [de] Zuschlagstage
DaysUnbilled
   ↪ Comment
     ↪ Dialog = [de] Hinweis
   ↪ Dialog = [en] Unbilled days may not exceed the Length Of Stay(LOS), [de] Anzahl Tage der Abwesenheit darf nicht größer als die Anzahl der Belegtage sein.
     ↪ Confirm = [en] Information, [de] Information
Deadlines
   ↪ Error = [en] List of deadlines is empty. Please configure valid deadlines!!, [de] Die Liste der Fristen ist leer. Bitte konfigurieren Sie gültige Fristen in den Stammdaten!
DeatailCaseData = [en] Detailed case data, [de] Detailed case data
Deduction = [en] Deduction, [de] Abschlag
Delete = [en] Delete, [de] Löschen
   ↪ Document = [en] Do you really want to delete the document?, [de] Wollen Sie das Dokument wirklich löschen?
   ↪ Error
     ↪ Case
       ↪ MainCase = [en] Can not delete service with main case., [de] Löschen einer Leistung mit einem Hauptfall ist nicht möglich.
   ↪ Reminder = [en] Do you really want to delete the reminder?, [de] Wollen Sie die Wiedervorlage wirklich löschen?
   ↪ Service = [en] Do you really want to delete the service?, [de] Wollen Sie die Leistung wirklich entfernen?
DepartmentGrouping = [en] Department Grouping, [de] Abteilungs-Grouping
Department
   ↪ MainDiagnosis = [en] Department MD (DMD), [de] Fachabteilungs-Hauptdiagnose (FAB-HD)
     ↪ Error = [en] No DMD was set, [de] Es wurde keine BHD gesetzt
       ↪ Index = [en] No DMD was set on Position {0}, [de] Es wurde keine BHD an der Position {0} gesetzt
     ↪ Tooltip = [en] DMD for department: {0}, [de] BHD für FAB: {0}
   ↪ Title = [en] Department, [de] Abteilung § 301*
   ↪ Type
     ↪ MainDepartment = [en] MD, [de] HA
     ↪ SlipDepartment = [en] SD, [de] BA
     ↪ SpecialInstitution = [en] SI, [de] BE
   ↪ Validation
     ↪ Error = [en] Additional information required, [de] Zusätzliche Informationen sind erforderlich
     ↪ Icd
       ↪ Count
         ↪ Error = [en] One or more diagnoses required, [de] Es sind eine oder mehr Diagnosen erforderlich
Departments = [en] Departments, [de] Abteilungen
   ↪ Ward
     ↪ DateFormat = [en] dd/MM/yyyy HH:mm, [de] dd.MM.yyyy HH:mm
Description = [en] Description, [de] Beschreibung
DetailCaseData = [de] Detail Falldaten
DetailedViewMainLabel = [en] Details about selected event, [de] Details zum ausgewählten Ereignis
DfValue
   ↪ Tooltip = [en] {0} ({1} x {2}) x {3} from {4} to {5}, [de] {0} ({1} x {2}) x {3} von {4} bis {5}
Diagnosis = [en] Diagnosis, [de] Diagnose
   ↪ RefType
     ↪ AdditionalFrom = [en] Additional diagnose from, [de] Zusatzdiagnose von
     ↪ AdditionalTo = [en] Additional diagnose to selected ICD, [de] Zusatzdiagnose zu gewählter ICD
     ↪ AsteriskFrom = [en] Asterisk diagnose from, [de] Sterndiagnose von
     ↪ DaggerFrom = [en] Dagger diagnose from, [de] Kreuzdiagnose von
Dialog
   ↪ Batch
     ↪ Grouping = [en] Batch-Results, [de] Batch-Ergebnisse
       ↪ Cmieff = [en] CMI eff., [de] CMI eff.
         ↪ Tooltip = [en] Sum of CW of all cases, after correction with catalog data, [de] Summe aller Case weights aller gegroupten Fälle nach Berücksichtigung aller Zu- oder Abschläge
       ↪ Cwdiffneg = [en] CW-Difference negativ, [de] CW-Differenz negativ
         ↪ Tooltip = [en] Sum of max negativ dCW of all cases, computed with rules (Role:{0}), [de] Summe über alle Fälle: Durch die Prüfregeln ermittelter maximaler negativer dCW eines Falles (Rolle:{0})
       ↪ Cwdiffpos = [en] CW-Difference positiv, [de] CW-Differenz positiv
         ↪ Tooltip = [en] Sum of max positiv dCW of all cases, computed with rules (Role:{0}), [de] Summe über alle Fälle: Durch die Prüfregeln ermittelter maximaler positiver dCW eines Falles (Rolle:{0})
       ↪ Dayprecare = [en] Day/Pre-Care, [de] teil/vorstationäre
         ↪ Tooltip = [en] Count of pre-care cases, [de] Anzahl der Fälle, die nicht vollstationär aufgenommen wurden
       ↪ Daysextern = [en] Days extern, [de] Belegungstage ausserhalb
         ↪ Tooltip = [en] Sum of days, which are not considered due to legal regulations, [de] entsprechen den Tagen außerhalb der Gültigkeit des KHEntgG, also z.B. BPflV
       ↪ Drgresult = [en] Drg-Result, [de] DRG-Ergebnis
       ↪ Errordrgpepp = [en] Error DRG/PEPP, [de] Fehler DRG/PEPP
         ↪ Tooltip = [en] Count of cases, with error DRG or PEPP, [de] Anzahl der Fälle, für die ein Fehler DRG oder PEPP  ermittelt wurde
       ↪ Groupedcases = [en] grouped Cases, [de] gegroupte Fälle
         ↪ Tooltip = [en] gegroupte Fälle, [de] gegroupte Fälle
       ↪ Intensivcare = [en] Intensivcare, [de] Intensivtage
         ↪ Tooltip = [en] Intensivcare, [de] Intensivtage
       ↪ Korrogvd = [en] corr. HTP, [de] korr. OGVD
         ↪ Tooltip = [en] Count of cases, which CW differs from catalog value due to a higher HTP, [de] Anzahl der Fälle, deren CW auf Grund Überschreitung der OGVD vom Fallpauschalenkatalogwert abweicht
       ↪ Korrtrans = [en] korr. Trans., [de] korr. Verl.
         ↪ Tooltip = [en] Count of cases, which CW differs from catalog value due to lower MTP on admission- or discharge reason "Transferring", [de] Anzahl der Fälle, deren CW auf Grund einer Unterschreitung der MVD bei Aufnahme- oder Entlassungsgrund „Verlegung“ vom Fallpauschalenkatalogwert abweicht
       ↪ Korrugvd = [en] corr. LTP, [de] korr. UGVD
         ↪ Tooltip = [en] Count of cases, which CW differs from catalog value due to a lower LTP, [de] Anzahl der Fälle, deren CW auf Grund Unterschreitung der UGVD vom Fallpauschalenkatalogwert abweicht
       ↪ Los = [en] LOS, [de] VWD
         ↪ Tooltip = [en] Average LOS for all grouped cases, [de] Durchschnittliche Verweildauer aller gegroupten Fälle
       ↪ Ndi = [en] NDI, [de] NDI
         ↪ Tooltip = [en] Secondary-Diagnosis-Index (average count of secondary diagnosis/case), [de] Neben-Diagnosen-Index (durchschnittliche Anzahl von Nebendiagnosen/Fall)
       ↪ Ninerdiag = [en] #.9 Diag., [de] #.9 Diag.
         ↪ Tooltip = [en] Count of secondary diagnosis, which are coded with end digit of 9, [de] Anzahl der Nebendiagnosen in dem Datensatz, die mit der unspezifischen Endziffer 9 verschlüsselt wurden
       ↪ Nursingdays = [en] Nursingdays, [de] Pflegetage
         ↪ Tooltip = [en] Sum of LOS from all cases, [de] Summe der Verweildauertage aller gegroupten Fälle
       ↪ Pccl = [en] PCCL, [de] PCCL
         ↪ Tooltip = [en] Average PCCL-value of all cases, [de] Durchschnittlicher patientenbezogener  klinischer Komplexitätsgrad aller gegroupten Fälle
       ↪ Rules
         ↪ Checkresults = [en] Checkresult, [de] Prüfergebnis
         ↪ Clues = [en] Clues, [de] Hinweise
         ↪ Error = [en] Error, [de] Fehler
         ↪ Typ = [en] Typ, [de] Typ
         ↪ Warning = [en] Warning, [de] Warnung
       ↪ Totalcases = [en] Total Cases, [de] Fallanzahl ges.
         ↪ Tooltip = [en] Total of all cases in Database (including cases, for which no DRG/PEPP could be computed), [de] Anzahl aller Fälle in der Datenbank (mit teil- und vorstationären Fällen, denen eine DRG/PEPP zugewiesen werden konnte)
       ↪ Unkcmi = [en] unk. CMI, [de] unkorr. CMI
         ↪ Tooltip = [en] Average CW of all cases before correction with catalog data, [de] Durchschnittliches Kostengewicht (CW) aller gegroupten Fälle vor Korrektur durch Zu- oder Abschläge (Werte des Fallpauschalenkatalogs)
   ↪ Question
     ↪ Delete = [en] Do you really want to drop {0} ?, [de] Wollen Sie {0} wirklich löschen?
Difference = [en] Difference, [de] Differenz
   ↪ Currency = [en] Difference {0}, [de] Differenz {0}
   ↪ Days = [en] Difference days, [de] Differenz Tage
Dir
   ↪ Open
     ↪ In
       ↪ Explorer
         ↪ Text = [en] Click to select directory in Windows Explorer, [de] Klicken um den Ordner im Windows Explorer zu öffnen
Discharge = [en] Discharge, [de] Entlassung
   ↪ Date
     ↪ Before
       ↪ Admission
         ↪ Date = [en] Discharge date is set before the admission date, [de] Entlassungsdatum ist vor dem Aufnahmedatum gesetzt
   ↪ Department = [en] Discharge Department, [de] KH interner Kurzname der entl. FAB (entl. FAB (int.))
     ↪ Short = [en] Discharge Department §. 301 (Dis. 301), [de] Entlassene FAB nach §. 301 (Entl. 301)
   ↪ Department301 = [de] §301-Schlüssel der FAB (entl. FAB §301)
     ↪ Name = [de] §301-Name der FAB (entl. FAB)
   ↪ Reason2
     ↪ AbleToWork = [en] able to work, [de] arbeitsfähig entlassen
       ↪ NeedRespirationWeaning = [de] arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung
       ↪ NoNeedRespirationWeaning = [de] arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung
     ↪ AbleToWorkVentilated
       ↪ NoPrescription = [de] arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung
       ↪ NoSpecified = [de] arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV
     ↪ NotSpecified = [en] not specified, [de] keine Angabe
     ↪ UnableToWork = [en] unable to work, [de] arbeitsunfähig entlassen
   ↪ Reason
     ↪ CaseStatementsWhenSwitchingBetweenInpatientAndDaycareTreatment = [en] Case statements (internal transfer) when switching between in-patient and day-care treatment, [de] Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung
     ↪ ChangesInResponsibilitiesOfPayers = [en] Changes in responsibilities of payers, [de] Zuständigkeitswechsel des Kostenträger
     ↪ CompletedTreatmentAgainstMedicalAdvice = [en] completed treatment against medical advice, [de] Behandlung gegen ärztlichen Rat beendet
     ↪ CompletedTreatmentAgainstMedicalAdviceInpatientTreatment = [en] completed treatment against medical advice, inpatient treatment, [de] Behandlung gegen ärztlichen Rat beendet, nachstationäre Behandlung
     ↪ CompletedTreatmentForOtherReasons = [en] completed treatment for other reasons, [de] Behandlung aus sonstigen Gründen beendet
     ↪ CompletedTreatmentForOtherReasonsInpatientTreatment = [en] completed treatment for other reasons, inpatient treatment, [de] Behandlung aus sonstigen Gründen beendet, nachstationäre Behandlung
     ↪ CompletedTreatmentRegularly = [en] completed treatment regularly, [de] Behandlung regulär beendet
     ↪ CompletedWithTransferInTemporaryCare = [de] Behandlung regulär beendet, Überleitung in die Übergangspflege
     ↪ Death = [en] Death, [de] Tod
     ↪ DismissalAndSubsequentRecovery = [en] Dismissal and subsequent recovery, [de] Entlassung mit nachfolgender Wiederaufnahme
     ↪ DismissalAtTheEndOfRecordingInThePreviousYear = [en] Dismissal at the end of recording in the previous year, [de] Entlassung zum Jahresende bei Aufnahme im Vorjahr
     ↪ DismissalBeforeResumingWithReclassification = [en] Dismissal before resuming with reclassification, [de] Entlassung vor Wiederaufnahme mit Neueinstufung
     ↪ DismissalBeforeResumingWithReclassificationForComplication = [en] Dismissal before resuming with reclassification for complication, [de] Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation
     ↪ DismissalEndStationEquivalent = [en] Dismissal from  station equivalent treatment (Department 0004), [de] Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung – für Pseudofachabteilung 0004)
     ↪ DismissalForStartStationEquivalent = [en] Dismissal into station equivalent treatment, [de] Beginn eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung)
     ↪ DismissalInA_Hospice = [en] Dismissal in a hospice, [de] Entlassung in ein Hospiz
     ↪ DismissalInA_NursingFacility = [en] Dismissal in a nursing facility, [de] Entlassung in eine Pflegeeinrichtung
     ↪ DismissalInA_RehabilitationFacility = [en] Dismissal in a rehabilitation facility, [de] Entlassung in eine Rehabilitationseinrichtung
     ↪ DismissalTransferWithBreathing
       ↪ 1 = [en] Transfer of a ventilated patient to an organized residential unit, [de] Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit
       ↪ 2 = [en] Treatment ended normally, transferring a ventilated patient to a residential unit, [de] Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit
     ↪ ExternalInstallationForPsychiatricTreatment = [en] External installation for psychiatric treatment, [de] Externe Verlegung zur psychiatrischen Behandlung
     ↪ ExternalTransferToAnotherHospitalAndSubsequentRedeploymentOrInternalInstallationWithAlternatingBetweenTheScopes = [en] external transfer to another hospital and subsequent redeployment or internal installation with alternating between the scopes of BPflV and KHEntgG and subsequent relocation, [de] externe Verlegung in ein anderes Krankenhaus und nachfolgende Rückverlegung oder interne Verlegung mit Wechsel zwischen den Geltungsbereichen der BPflV und des KHEntgG und nachfolgende Rückverlegung
     ↪ InternalInstallationWithAlternatingBetweenTheScopes = [en] Internal installation with alternating between the scopes, [de] interne Verlegung mit Wechsel zwischen den Geltungsbereichen
     ↪ InternalRelocation = [en] Internal relocation, [de] Interne Verlegung
     ↪ LayingToAnotherHospitalCooperation = [en] Laying to another hospital cooperation, [de] Verlegung in ein anderes Krankenhaus i.R.e. Kooperation
     ↪ Relocation = [en] relocation, [de] Rückverlegung
     ↪ StartExternalStayWithAbsenceThroughMidnight = [en] Start external stay with absence through midnight, [de] Beginn externer Aufenthalt mit Abwesenheit über Mitternacht
     ↪ TerminationExternalStayWithAbsenceThroughMidnight = [en] Termination external stay with absence through midnight, [de] Beendigung externer Aufenthalt mit Abwesenheit über Mitternacht
     ↪ TransferToAnotherHospital = [en] Transfer to another hospital, [de] Verlegung in ein anderes Krankenhaus
     ↪ TreatmentTerminateRegularlyProvidedInpatientTreatment = [en] Treatment terminate regularly provided inpatient treatment, [de] Behandlung regulär beendet, nachstationäre Behandlung vorgesehen
   ↪ Weekday = [en] Discharge Date Weekday (Dis. Day), [de] Entlassungsdatum Wochentag (Entl. WT)
DischargeDate = [en] Date of Discharge (Dis.-Date), [de] Entlassungsdatum (Entl.-Datum)
   ↪ From = [en] Dis.-Date from, [de] Entl.-Datum von
   ↪ To = [en] Dis.-Date to, [de] Entl.-Datum bis
DischargeReason = [en] Discharge Reason (DR12), [de] Entlassungsgrund (Stelle 1 u. 2) (Entl.-Gr.1.u.2.)
DischargeReason2 = [en] Discharge Reason 2, [de] Entlassungsgrund (Stelle 3) (Entl.-Gr.3)
Doctor
   ↪ Ident = [en] Doctor Identifier, [de] Doctor Identifier
   ↪ Indent = [de] IKZ einweis. Arzt (IKZ einweis. Arzt)
Document = [en] Document, [de] Dokument
   ↪ Add = [en] Add Document, [de] Dokument hinzufügen
   ↪ Added
     ↪ Tooltip = [en] Open this Document, [de] Öffnen Sie dieses Dokument
   ↪ Create = [en] add Document, [de] Dokument hinzufügen
   ↪ Date = [de] Dokumentendatum
   ↪ Location = [en] location, [de] Ort
   ↪ Name = [en] Document name, [de] Dokumentenname
   ↪ Path = [en] Document path, [de] Dokumentenpfad
   ↪ Removed
     ↪ Tooltip = [en] This Document is removed, [de] Dieses Dokument wird entfernt
   ↪ Size = [en] Document size, [de] Dokumentgröße
   ↪ Type = [en] Document type, [de] Dokumententyp
   ↪ Types = [de] Dokumententypen
DocumentType
   ↪ MdkReport = [en] MD Report, [de] MD-Gutachten
Documentation = [en] Documentation, [de] Dokumentation
   ↪ Case
     ↪ Evaluation = [en] Case evaluation, [de] Fallbeurteilung
       ↪ Text = [en] Notes can be placed here for the case evaluation.These notes will be shown in the case report., [de] Hier können Bemerkungen zu der Beurteilung des Falls angegeben werden.Diese werden automatisch in einen neuen Fallreport übernommen.
   ↪ Full
     ↪ Risk = [en] Estimated Full Risk in Percent, [de] Risiko in % (ges.) (Risiko in % (ges.))
     ↪ Waste = [en] Estimated Full Waste in Euro, [de] Verlustvol. in € (ges.) (Verlustvol. in € (ges.))
   ↪ Menu
     ↪ IsActive = [en] Is active, [de] Ist Aktiv
     ↪ SetActive = [en] Set active, [de] Auf Aktiv setzen
   ↪ No
     ↪ Risk
       ↪ Content = [en] No Risk Area Selected, [de] kein Risikobereich ausgewählt
   ↪ Risk = [en] Estimated Risk in Percent, [de] Risiko in % (Risiko in %)
     ↪ Area = [en] Risk Areas, [de] Risikobereiche
     ↪ Description
       ↪ Text1 = [en] Hier können Sie die Risiken und Verlustvolumen der eventuellen MD -Anfrage/-Kürzung abgeben., [de] Hier können Sie die Risiken und Verlustvolumen der eventuellen MD-Anfrage/-Kürzung angeben.
       ↪ Text2 = [en] Die auf dem Basis der Regelverletzungen geschätzte Werte sind in den grauen Felder vorgegeben., [de] Die auf der Basis der Regelverletzungen geschätzten Werte sind in den grauen Felder vorgegeben.
     ↪ From
       ↪ Rules = [en] From Rules, [de] Aus Regelverletzungen
     ↪ Full
       ↪ Risk = [en] Full Risk, [de] Gesamtrisiko
     ↪ Set = [en] Risks set, [de] Risiken gesetzt
   ↪ Type
     ↪ Review = [en] Case review, [de] Fallbeurteilung
     ↪ Risk
       ↪ Review = [en] Risk review, [de] Risikobeurteilung
   ↪ Waste = [en] Estimated Waste in Euro, [de] Verlustvol. in € (Verlustvol. in €)
Draft
   ↪ Types = [en] Draft types, [de] Vorlagen
DRG = [en] DRG, [de] Diagnosebezogene Fallgruppen (DRG)
   ↪ And
     ↪ Pepp
       ↪ Column = [de] DRG/PEPP (DRG/PEPP)
   ↪ Case
     ↪ Day
       ↪ Care = [en] DRG case with day care admission reason, [de] Teil- oder vorstationärer DRG - Fall
   ↪ Catalog = [en] DRG catalog, [de] DRG Katalog
   ↪ Code = [en] DRG-Code, [de] DRG-Code
   ↪ Column = [de] DRG (DRG)
   ↪ CorrType
     ↪ Deduction = [en] Deduction, [de] Abzug
     ↪ DeductionTransfer = [en] Deduction Transfer, [de] Abzug Verlegung
     ↪ DeductionTransferAdmission = [en] Deduction Admission Transfer, [de] Abzug Aufnahme Verlegung
     ↪ DeductionTransferDischarge = [en] Deduction Discharge Transfer, [de] Abzug Entlassung Verlegung
     ↪ No = [en] No, [de] Nein
     ↪ Surcharge = [en] Surcharge, [de] Zuschlag
   ↪ Data = [en] DRG-Data, [de] DRG-Daten
   ↪ Extern = [en] DRG KIS, [de] DRG KIS
   ↪ Local = [en] DRG CPX, [de] DRG CPX
   ↪ Shortcut = [en] DRG, [de] DRG
   ↪ Text = [en] DRG-Text, [de] DRG-Text
DrgPartition
   ↪ Medical = [en] medical, [de] medizinisch
   ↪ Other = [en] other, [de] andere
   ↪ Surgical = [en] surgical, [de] operative
Duration
   ↪ Declaration = [en] Declaration, [de] Angabe
   ↪ From = [en] from, [de] von
   ↪ Time = [en] time, [de] Uhrzeit
   ↪ To = [en] to, [de] Ablauf bis
Edit = [en] Edit, [de] Bearbeiten
Error = [en] Error (E), [de] Fehler (F)
   ↪ CouldNotDelete = [en] Could not delete item!, [de] Das ausgewählte Element konnte nicht gelöscht werden!
   ↪ Version
     ↪ CouldNotCreate = [en] A new version could not be created!, [de] Es konnte keine neue Version angelegt werden!
     ↪ CouldNotRemove = [en] this version could not be removed!, [de] Die Version konnte nicht entfernt werden!
ErrorOccured = [en] Error occured, please try again, [de] Ein Fehler ist aufgetreten, versuchen Sie es bitte erneut
Event
   ↪ Name
     ↪ Action = [en] Action, [de] Aktion
     ↪ Case = [en] Case, [de] Fall
     ↪ Document = [en] Document, [de] Dokument
     ↪ Inka = [en] INKA Message, [de] INKA-Nachricht
     ↪ Kain = [en] KAIN Message, [de] KAIN-Nachricht
     ↪ Patient = [en] Patient, [de] Patient
     ↪ Process = [en] Process, [de] Vorgang
     ↪ ProcessFinalisation = [en] Process Finalisation, [de] Vorgangsabschluss
     ↪ Reminder = [en] Reminder, [de] Wiedervorlage
     ↪ Request = [en] Request, [de] Anfrage
   ↪ Operation
     ↪ ChangeAssignedUser = [en] Change assigned user, [de] Bearbeiter ändern
     ↪ Create = [en] Create, [de] Anlegen
     ↪ CreateItem = [en] Create {0}, [de] {0} anlegen
     ↪ Edit = [en] Change, [de] Ändern
     ↪ EditItem = [en] Change {0}, [de] {0} editieren
     ↪ Open = [en] Open, [de] Öffnen
     ↪ OpenItem = [en] Open {0}, [de] {0} öffnen
     ↪ Remove = [en] Remove, [de] Entfernen
     ↪ RemoveItem = [en] Remove {0}, [de] {0} entfernen
   ↪ Removed = [en] {0} was removed, [de] {0} wurde gelöscht
EventType = [en] Event type, [de] Ereignistyp
   ↪ Action
     ↪ Added = [en] Action of type {0} is generated (Added actions), [de] Aktion angelegt: Typ: {0} (Aktion angelegt)
     ↪ Changed = [en] Action of type {0} is changed (Changed actions), [de] Aktion geändert: Typ: {0} (Aktion geändert)
     ↪ Removed = [en] Action {0} was removed (Removed actions), [de] Aktion gelöscht: Typ: {0} (Aktion gelöscht)
   ↪ Case
     ↪ Added = [en] Case of type {0} is added: Case number: {1} (Added cases), [de] Fall hinzugefügt: Typ: {0}, Fallnummer: {1} (Fall hinzugefügt)
     ↪ Removed = [en] case with number {1} has been removed (Removed cases), [de] Fall entfernt: Fallnummer: {1} (Fall entfernt)
   ↪ Document
     ↪ Added = [en] Document added: type {0}, file name {1} (Added documents), [de] Dokument hinzugefügt: Typ: {0}, Dateiname: {1} (Dokumente hinzugefügt)
     ↪ Removed = [en] document of type {0} with document name {1} has been removed (Removed documents), [de] Dokument entfernt: Typ: {0}, Dateinamen: {1} (Dokument entfernt)
   ↪ Inka
     ↪ Cancelled = [en] INKA message cancelled (INKA message cancelled), [de] INKA Nachricht storniert (INKA Nachricht storniert)
     ↪ Sent = [en] INKA message sent (INKA message sent), [de] INKA Nachricht gesendet (INKA Nachricht gesendet)
     ↪ Stored = [en] INKA message stored (INKA message stored), [de] INKA Nachricht gespeichert (INKA Nachricht gespeichert)
     ↪ Updated = [en] INKA message updated (INKA message updated), [de] INKA Nachricht aktualisiert (INKA Nachricht aktualisiert)
   ↪ Kain
     ↪ Received = [en] KAIN message received (KAIN message received), [de] KAIN Nachricht eingegangen (KAIN Nachricht eingegangen)
   ↪ Process
     ↪ Closed = [en] Process closed (Closed processes), [de] Vorgang abgeschlossen (Vorgang abgeschlossen)
     ↪ Continued = [de] Vorgang fortgesetzt (Vorgang fortgesetzt)
     ↪ Paused = [de] Vorgang pausiert (Vorgang pausiert)
     ↪ Reopened = [en] Process reopened (Process reopened), [de] Vorgang erneut geöffnet (Vorgang erneut geöffnet)
     ↪ Subject
       ↪ Changed = [en] Process subject changed (Changed process-subjects), [de] Vorgangsart geändert (Vorgangsart geändert)
         ↪ Description = [en] Process subject changed from: {0} to: {1}, [de] Vorgangsart geändert von {0} auf {1}
       ↪ Delete
         ↪ Description = [de] Vorgangstyp {0} entfernt
       ↪ Set
         ↪ Description = [en] {1} set as process-subject, [de] {1} als Vorgangstyp gesetzt
     ↪ User
       ↪ Changed = [en] Process user changed (Changed process-users), [de] Vorgangs-Bearbeiter geändert (Vorgangs-Bearbeiter geändert)
         ↪ Description = [en] Process user changed from: {0} to: {1}, [de] Vorgangs-Bearbeiter geändert von {0} auf {1}
       ↪ Delete
         ↪ Description = [de] Bearbeiter {0} entfernt
       ↪ Set
         ↪ Description = [en] {1} set as process-user, [de] {1} als Bearbeiter gesetzt
   ↪ Reminder
     ↪ Assigned = [en] Reminder assigned (Assigned reminders), [de] Wiedervorlage zugewiesen (Wiedervorlage zugewiesen)
     ↪ Changed = [en] Reminder changed: type {0}, due date: {1}, assigned to: {2}, status: {3} (Changed reminders), [de] Wiedervorlage geändert:  Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3} (Wiedervorlage geändert)
     ↪ Created = [en] Reminder created: type {0}, due date: {1}, assigned to: {2}, status: {3} (Created reminders), [de] Wiedervorlage angelegt: Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3} (Wiedervorlage angelegt)
     ↪ Expires = [en] Reminder Expired: type {0}, due date: {1}, assigned to: {2}, status: {3} (Expired reminders), [de] Wiedervorlage abgelaufen: Typ: {0}, Fälligkeitsdatum: {1}, zugewiesen an: {2}, Status: {3} (Wiedervorlage abgelaufen)
     ↪ Removed = [en] Reminder {0} was removed (Removed reminders), [de] Wiedervorlage gelöscht: Typ: {0} (Wiedervorlage gelöscht)
   ↪ Request
     ↪ Created = [en] Request added: type {0}, Institution name: {1}, {2} (Created requests), [de] Anfrage angelegt: Typ: {0}, Institutionsname {1}, {2} (Anfrage angelegt)
     ↪ Removed = [en] Request removed: Typ {0} (Removed requests), [de] Anfrage gelöscht: Typ: {0} (Anfrage gelöscht)
     ↪ Updated = [en] Request changed: Typ {0}, Institutionsname: {1}, {2} (Changed requests), [de] Anfrage geändert: Typ: {0}, Institutionsname {1}, {2} (Anfrage geändert)
Exception = [en] Exception, [de] Ausnahme
Exit = [en] Exit, [de] Beenden
Export
   ↪ Type
     ↪ CSV = [en] CSV (comma-separated values), [de] CSV (Kommagetrennte Werte)
     ↪ EXCEL = [en] Excel (Microsoft Excel), [de] Excel (Microsoft Excel)
     ↪ XML = [de] Xml (Xml-Format)
ExternVersions = [en] HIS-Versions, [de] KIS-Versionen
ExternalOccupancy = [en] External Occupancy, [de] Belegabteilung
Failed = [en] Failed, [de] Fehlgeschlagen
Fall
   ↪ Main
     ↪ Fehler = [de] Basis Fall nicht vorhanden
Fax = [en] Fax, [de] Fax
FeeCode
   ↪ Validation = [de] Ungültiger Entgelteintrag. Bitte geben Sie einen gültigen Eintrag ein!
FeeGroup = [en] Fee Group, [de] Entgeltbereich
   ↪ Appendix3 = [en] Appendix 3, [de] Anlage 3
   ↪ Appendix3WithoutFinalInvoice = [en] Appendix 3 without final invoice, [de] Anlage 3 ohne Schlussrechnung
   ↪ Appendix3WithoutFinalInvoiceAndWithoutDischarge = [en] Appendix 3 without final invoice and without Discharge, [de] Anlage 3 ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ BeforeInpatient = [en] before inpatient, [de] vorstationär
   ↪ BeforeInpatientAloneWithFinalInvoice = [en] Before stationary (alone) (with final invoice), [de] vorstationär mit Schlussrechnung
   ↪ BeforeInpatientWithoutFinalInvoice = [en] before inpatient without final invoice, [de] vorstationär ohne Schlussrechnung
   ↪ BeforeInpatientWithoutFinalInvoiceAndWithoutDischarge = [en] before inpatient without final invoice and without Discharge, [de] vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ BPFLV = [en] BPflV, [de] BPflV
   ↪ BPFLV_WithoutFinalInvoice = [en] BPflV without final invoice, [de] BPflV ohne Schlussrechnung
   ↪ BPFLV_WithoutFinalInvoiceAndWithoutDischarge = [en] BPflV without final invoice and without Discharge, [de] BPflV ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ DAK_InternalCharges = [en] DAK internal charges, [de] DAK-interne Entgelte
   ↪ DAK_InternalChargesWithoutFinalInvoice = [en] DAK internal charges without final invoice, [de] DAK-interne Entgelte ohne Schlussrechnung
   ↪ DAK_InternalChargesWithoutFinalInvoiceAndWithoutDischarge = [en] DAK internal charges without final invoice and without Discharge, [de] DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ DMP = [en] DMP, [de] DMP
   ↪ DMP_WithoutFinalInvoice = [en] DMP without final invoice, [de] DMP ohne Schlussrechnung
   ↪ DMP_WithoutFinalInvoiceAndWithoutDischarge = [en] DMP without final invoice and without Discharge, [de] DMP ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ DRG = [en] DRG, [de] DRG
   ↪ DRG_WithoutFinalInvoice = [en] DRG without final invoice, [de] DRG ohne Schlussrechnung
   ↪ DRG_WithoutFinalInvoiceAndWithoutDischarge = [en] DRG without final invoice and without Discharge, [de] DRG ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ HospitalIndividualPEPP_Annex1bInpatientAnd2bPartialInpatientWithFinalInvoice = [en] Hospital Individual PEPP Annex 1b (inpatient) and 2b (partial inpatient) (with final invoice), [de] Krankenhausindividuelle PEPP Anlage 1b (vollst) und 2b (teilstat) (mit Schlussrechnung)
   ↪ IV_FullInpatientAndDayPatientWithFinalInvoice = [en] IV full inpatient and day patient (with final invoice), [de] IV vollstat und teilstat (mit Schlussrechnung)
   ↪ IV_IntegratedCare = [en] IV (integrated care), [de] IV (integrierte Versorgung)
   ↪ IV_IntegratedCareWithoutFinalInvoice = [en] IV (integrated care) without final invoice, [de] IV (integrierte Versorgung) ohne Schlussrechnung
   ↪ IV_IntegratedCareWithoutFinalInvoiceAndWithoutDischarge = [en] IV (integrated care) without final invoice and without Discharge, [de] IV (integrierte Versorgung) ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ ModelProjects = [en] Model projects, [de] Modellvorhaben
   ↪ ModelProjectsWithFinalInvoice = [en] Model projects (with final invoice), [de] Modellvorhaben (mit Schlussrechnung)
   ↪ ModelProjectsWithoutFinalInvoice = [en] Model projects without final invoice, [de] Modellvorhaben ohne Schlussrechnung
   ↪ ModelProjectsWithoutFinalInvoiceAndWithoutDischarge = [en] Model projects without final invoice and without Discharge, [de] Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ NUB = [en] NUB, [de] NUB
   ↪ NUB_WithoutFinalInvoice = [en] NUB without final invoice, [de] NUB ohne Schlussrechnung
   ↪ NUB_WithoutFinalInvoiceAndWithoutDischarge = [en] NUB without final invoice and without Discharge, [de] NUB ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ PartialPaymentWithoutFinalInvoiceWithDismissal = [en] Partial payment (without final invoice / with dismissal), [de] Teilzahlung (ohne Schlussrechnung / mit ENTL)
   ↪ PartialPaymentWithoutFinalInvoiceWithoutDismissal = [en] Partial payment (without final invoice / without dismissal), [de] Teilzahlung (ohne Schlussrechnung / ohne ENTL)
   ↪ PEPP_Annex1aInpatientAnd2aPartialInpatientWithFinalInvoice = [en] PEPP Annex 1a (inpatient) and 2a (partial inpatient) (with final invoice), [de] PEPP Anlage 1a (vollstat) und 2a (teilstat) (mit Schlussrechnung)
   ↪ SeparateCharges = [en] separate charges, [de] gesonderte Entgelte
   ↪ SeparateChargesWithoutFinalInvoice = [en] separate charges without final invoice, [de] gesonderte Entgelte ohne Schlussrechnung
   ↪ SeparateChargesWithoutFinalInvoiceAndWithoutDischarge = [en] separate charges without final invoice and without Discharge, [de] gesonderte Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ SpecialFacilitiesWithoutFinalInvoice = [en] Special facilities without final invoice, [de] Besondere Einrichtungen ohne Schlussrechnung
   ↪ SpecialInstitutions = [en] Special institutions, [de] Besondere Einrichtungen
   ↪ SpecialInstitutionsWithoutFinalInvoiceAndWithoutDischarge = [en] Special institutions without final invoice and without Discharge, [de] Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige
Fee
   ↪ Placeholder = [en] no fees added, [de] Keine Entgelte zugefügt
File = [en] File, [de] Datei
   ↪ Add = [en] Add file, [de] Datei hinzufügen
   ↪ AlreadyExists = [en] File {0} already exists, [de] Datei {0} ist bereits vorhanden
   ↪ Archive
     ↪ Error
       ↪ Can
         ↪ Not
           ↪ Access = [en] File {0} could not be archived, because there was a security error: {1}, [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil ein Zugriffsproblem aufgetreten ist: {1}
           ↪ Write = [en] File {0} could not be archived, because you did not have writing permissions: {1}, [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil die Schreibrechte fehlen: {1}
       ↪ Parent
         ↪ Is
           ↪ File = [en] File {0} could not be archived, because a file was selected: {1}, [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, da eine Datei als Verzeichnis ausgewählt wurde: {1}
         ↪ Not
           ↪ Found = [en] File {0} could not be archived, because the directory: {1} could not be created, [de] Die Datei {0} kann nicht ins Archivverzeichnis verschoben werden, weil das Verzeichnis nicht angelegt werden konnte: {1}
   ↪ DontExists = [en] File do not exist, [de] Datei nicht vorhanden
   ↪ Import
     ↪ Errors = [de] Import der Datei: {0} wurde mit Fehler(n) abgeschlossen!!
     ↪ Success = [de] Import der Datei: {0} war erfolgreich!
   ↪ Open = [en] Open file, [de] Datei öffnen
     ↪ In
       ↪ Explorer
         ↪ Text = [en] Click to select file in Windows Explorer, [de] Klicken um die Datei im Windows Explorer zu öffnen
   ↪ Save = [en] Save file, [de] Datei speichern
FileNumber
   ↪ Edit
     ↪ Tooltip = [de] Um {0} zu bearbeiten, klicken Sie hier.
   ↪ Save
     ↪ Tooltip = [de] Zum Abspeicheren drücken Sie die Enter Taste
Filter = [en] Filter, [de] Filter
   ↪ Cases
     ↪ Cancel = [en] All canceled cases, [de] Alle stornierte Fälle
       ↪ Not = [en] All not canceled cases, [de] Alle nicht stornierte Fälle
     ↪ Lock = [en] All locked cases, [de] Alle gesperrte Fälle
     ↪ Unlock = [de] Alle nicht gesperrte Fälle
   ↪ More = [en] more, [de] weitere
   ↪ No = [en] no filter, [de] Kein Filter
   ↪ Prio = [en] All with Prio, [de] Alle mit Priorität
     ↪ No = [en] All without Prio, [de] Alle ohne Priorität
   ↪ Process
     ↪ Cancel = [en] All canceled processes, [de] Alle stornierte Vorgänge
       ↪ Not = [en] All not canceled processes, [de] Alle nicht stornierte Vorgänge
     ↪ Lock = [en] All locked processes, [de] Alle gesperrte Vorgänge
     ↪ Unlock = [en] All unlocked processes, [de] Alle nicht gesperrte Vorgänge
   ↪ Remeinder
     ↪ Close = [en] All finished, [de] Alle abgearbeiteten
     ↪ Open = [en] All opened, [de] Alle offenen
FilterAbove = [en] {0} filter(s) above, [de] {0} Filter weiter oben
FilterBelow = [en] {0} filter(s) below, [de] {0} Filter weiter unten
FirstName = [en] First Name, [de] Vorname
Flowrate
   ↪ Status
     ↪ Text = [en] Case details per second: {0}, [de] Falldetails pro Sekunde: {0}
       ↪ Patient = [en] Patients per second: {0}, [de] Patienten pro Sekunde: {0}
Functions = [en] Functions, [de] Funktionen
Gender = [en] Gender, [de] Geschlecht (Geschl.)
   ↪ Diverse = [en] diverse, [de] divers
   ↪ Female = [en] female, [de] weiblich
   ↪ Male = [en] male, [de] männlich
   ↪ Salutation
     ↪ Diverse = [en] Mr./Ms., [de] Herr/Frau
     ↪ Female = [en] Ms., [de] Frau
     ↪ Male = [en] Mr., [de] Herr
     ↪ Undefined = [en] Mr./Ms., [de] Herr/Frau
     ↪ Unknown = [en] Mr./Ms., [de] Herr/Frau
   ↪ Undefined = [en] undefined, [de] unbestimmt
   ↪ Unknown = [en] unknown, [de] unbekannt
General = [en] General, [de] Allgemein
Germ
   ↪ Growth
     ↪ AfterEnrichment = [en] after enrichment, [de] nach Anreicherung
     ↪ Isolated = [en] isolated, [de] ganz vereinzelt
     ↪ Moderately = [en] moderately, [de] mäßig viel
     ↪ NoInformation = [en] no information, [de] keine Information
     ↪ None = [en] none, [de] nicht nachgewiesen
     ↪ Plenty = [en] plenty, [de] reichlich
     ↪ Scattered = [en] scattered, [de] vereinzelt
GroupRelevantCode
   ↪ ForDRG_PEPP_MappingUsedExceptToSatisfyTheTemporalAndOrLogicConditionWithinAnOPD_Construct = [en] For the DRG / PEPP mapping used, except to satisfy the temporal and / or logic condition within an OPD construct, [de] Für die DRG/PEPP-Zuordnung verwendet, ausgenommen zur Erfüllung der zeitlichen und/oder logischen Bedingung innerhalb eines OPD-Konstrukts
   ↪ NotUsedForDRG_PEPP_Assignment = [en] Not used for the DRG / PEPP - assignment, [de] Nicht für die DRG/PEPP-Zuordnung verwendet
   ↪ UsedToMeetTheLogicalAndTemporalConditionOfOPD_Construct = [en] used to meet the logical and temporal condition of OPD construct, [de] verwendet zur Erfüllung der logischen und zeitlichen Bedingung eines OPD-Konstrukts
   ↪ UsingBothOPD_ByA_ConstructAsAlsoOtherwise = [en] Using both OPD by a construct as also otherwise (i.e., 1 + 2), [de] Verwendung sowohl durch ein OPD-Konstrukt wie auch anderweitig (also 1+2)
GroupResult
   ↪ Code
     ↪ Valid
       ↪ AgeConflict = [en] age conflict, [de] Alterskonflikt
       ↪ Duplicate = [en] duplicate, [de] Duplikat
       ↪ GenderConflict = [en] gender conflict, [de] Geschlechtskonflikt
       ↪ Invalid = [en] invalid Code, [de] Ungültiger Code
       ↪ Valid = [en] valid Code, [de] Gültiger Code
   ↪ NoResult = [en] There are no Grouperresults!, [de] Es liegen noch keine Grouperergebnisse vor!
   ↪ Pdx
     ↪ Improper_pdx_code = [en] Invalid main diagnosis, [de] Unzulässige Hauptdiagnose
     ↪ Invalid_pdx_code = [en] Invalid ICD-10-GM-Code as the main diagnosis, [de] Ungültiger ICD-10-GM-Kode als Hauptdiagnose
     ↪ Valid_pdx_code = [en] Valid main diagnosis, [de] Gültige Hauptdiagnose
     ↪ Vwxy_pdx_code = [en] V-,W-,X-,Y-Code as the main diagnosis, [de] V-,W-,X-,Y-Kode als Hauptdiagnose
Grouper
   ↪ Einstellungen
     ↪ Confirm = [en] The currently set modeler model is for the year {0} . Created cases are rooted with this grouper model!  nDo you want to continue with this setting?, [de] Das aktuell eingestellte Groupermodell ist für das Jahr {0} Die angelegten Fälle werden mit diesem Groupermodell gegroupt!Wollen Sie mit dieser Einstellung fortfahren?
   ↪ Error
     ↪ Ungroupable = [en] Case is not groupable, Plese check the data!, [de] Fall ist nicht gruppierbar, Prüfen Sie die Daten!
   ↪ MdcOrSk
     ↪ InfantDayCare = [en] Child and Adolescent Psychiatry, part stationary (TKJ), [de] Kinder- und Jugendpsychiatrie, teilstationär (TKJ)
     ↪ InfantInpatientCare = [en] Child and adolescent psychiatry, inpatient (PKJ), [de] Kinder- und Jugendpsychiatrie, vollstationär (PKJ)
     ↪ Mdc01 = [en] Diseases and disorders of the eye (01), [de] Krankheiten und Störungen des Nervensystems (01)
     ↪ Mdc02 = [en] Diseases and disorders of the ear (02), [de] Krankheiten und Störungen des Auges (02)
     ↪ Mdc03 = [en] Diseases of the nose, mouth and neck (03), [de] Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO) (03)
     ↪ Mdc04 = [en] Diseases and disorders of the respiratory system (04), [de] Krankheiten und Störungen der Atmungsorgane (04)
     ↪ Mdc05 = [en] Diseases and disorders of the circulatory system (05), [de] Krankheiten und Störungen des Kreislaufsystems (05)
     ↪ Mdc06 = [en] Diseases and disorders of the digestive organs (06), [de] Krankheiten und Störungen der Verdauungsorgane (06)
     ↪ Mdc07 = [en] Diseases and disorders of hepato biliary system and pancreas (07), [de] Krankheiten und Störungen an hepatobiliärem System und Pankreas (07)
     ↪ Mdc08 = [en] Diseases and disorders of the musculoskeletal system and connective tissue (08), [de] Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe (08)
     ↪ Mdc09 = [en] Diseases and disorders of the skin, subcutaneous tissue and breast (09), [de] Krankheiten und Störungen an Haut, Unterhaut und Mamma (09)
     ↪ Mdc10 = [en] Endocrine, nutritional and metabolic diseases (10), [de] Endokrine, Ernährungs- und Stoffwechselkrankheiten (10)
     ↪ Mdc11 = [en] Diseases and disorders of the urinary organs (11), [de] Krankheiten und Störungen der Harnorgane (11)
     ↪ Mdc12 = [en] Diseases and disorders of the male reproductive system (12), [de] Krankheiten und Störungen der männlichen Geschlechtsorgane (12)
     ↪ Mdc13 = [en] Diseases and disorders of the female reproductive organs (13), [de] Krankheiten und Störungen der weiblichen Geschlechtsorgane (13)
     ↪ Mdc14 = [en] Pregnancy, childbirth and postpartum (14), [de] Schwangerschaft, Geburt und Wochenbett (14)
     ↪ Mdc15 = [en] newborn (15), [de] Neugeborene (15)
     ↪ Mdc16 = [en] Diseases of the blood, the blood-forming organs and the immune system (16), [de] Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems (16)
     ↪ Mdc17 = [en] Hematologic and solid neoplasms (17), [de] Hämatologische und solide Neubildungen (17)
     ↪ Mdc18A = [en] HIV (18A), [de] HIV (18A)
     ↪ Mdc18B = [en] Infectious and parasitic diseases (18B), [de] Infektiöse und parasitäre Krankheiten (18B)
     ↪ Mdc19 = [en] Mental diseases and disorders (19), [de] Psychische Krankheiten und Störungen (19)
     ↪ Mdc20 = [en] Alcohol and drug use, and alcohol and drug -induced mental disorders (20), [de] Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen (20)
     ↪ Mdc21A = [en] Poly trauma (21A), [de] Polytrauma (21A)
     ↪ Mdc21B = [en] Injury, poisoning and toxic effects of drugs and medicines (21B), [de] Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten (21B)
     ↪ Mdc22 = [en] burns (22), [de] Verbrennungen (22)
     ↪ Mdc23 = [en] Factors influencing health, and other health care utilization (23), [de] Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens (23)
     ↪ Mdc24 = [en] Other DRGs (24), [de] Sonstige DRGs (24)
     ↪ Mdc25 = [en] Semi-stationary paediatric diagnostics and treatment (25), [de] Teilstationäre pädiatrische Diagnostik und Behandlung (25)
     ↪ MdcPre = [en] Diseases and disorders of the nervous system (PRE), [de] Sonderfälle (Beatmungsfälle, Transplantationen u. ä.)
     ↪ PsychoDayCare = [en] Psychiatry, day patient (TPY), [de] Psychiatrie, teilstationär (TPY)
     ↪ PsychoInpatientCare = [en] Psychiatry, inpatient (PSY), [de] Psychiatrie, vollstationär (PSY)
     ↪ PsychosomaticDayCare = [en] Psychosomatics, day patient (TPO), [de] Psychosomatik, teilstationär (TPO)
     ↪ PsychosomaticInpatientCare = [en] Psychosomatics, inpatient (PSO), [de] Psychosomatik, vollstationär (PSO)
   ↪ Ops
     ↪ ResType
       ↪ NorInvalidDate = [en] NonOR procedure with conflict OPS date, [de] NonOR-Prozedur mit Konflikt OPS-Datum
       ↪ NorInvalidLoc = [en] NonOR procedure with conflict subsidiary risk label, [de] NonOR-Prozedur mit Konflikt Zusatzkennzeichen
       ↪ NorInvalidLocAndDate = [en] NonOR procedure with conflict subsidiary risk label and OPS date, [de] NonOR-Prozedur mit Konflikt Zusatzkennzeichen und OPS-Datum
       ↪ NorOps = [en] NonOR procedure, [de] NonOR-Prozedur
       ↪ OrInvalidDate = [en] OR procedure with conflict OPS date, [de] OR-Prozedur mit Konflikt OPS-Datum
       ↪ OrInvalidLoc = [en] OR procedure with conflict subsidiary risk label, [de] OR-Prozedur mit Konflikt Zusatzkennzeichen
       ↪ OrInvalidLocAndDate = [en] OR procedure with conflict subsidiary risk label and OPS date, [de] OR-Prozedur mit Konflikt Zusatzkennzeichen und OPS-Datum
       ↪ OrOps = [en] OR procedure, [de] OR-Prozedur
       ↪ Srg = [en] SRG (neither OR nor NonOR procedure), [de] SRG (weder OR noch NonOR-Prozedur)
       ↪ SrgInvalidDate = [en] SRG with conflict OPS date, [de] SRG mit Konflikt OPS-Datum
       ↪ SrgInvalidLoc = [en] SRG with conflict subsidiary risk label, [de] SRG mit Konflikt Zusatzkennzeichen
       ↪ SrgInvalidLocAndDate = [en] SRG with conflict subsidiary risk label and OPS date, [de] SRG mit Konflikt Zusatzkennzeichen und OPS-Datum
   ↪ Status
     ↪ GstOk = [en] Gst Ok, [de] Normale Gruppierung
     ↪ InacceptablePrincipalIcd = [en] Inacceptable Principal Icd, [de] Diagnose-Code als Hauptdiagnose nicht zulässig
     ↪ InvalidAdmDisReasonMode = [en] Invalid Admission Reason Mode, [de] Ungültiger Entlassungsgrund, Aufnahmeanlass oder Aufnahmegrund
     ↪ InvalidAge = [en] Invalid Age, [de] Ungültiges Alter
     ↪ InvalidCase = [en] Invalid Case, [de] Ungültiger Fall
     ↪ InvalidGender = [en] Invalid Gender, [de] Ungültiges Geschlecht
     ↪ InvalidLos = [en] Invalid LOS, [de] Ungültige Verweildauer
     ↪ InvalidPrincipalIcd = [en] Invalid Principal Icd, [de] Ungültige oder fehlende Hauptdiagnose
     ↪ InvalidWeight = [en] Invalid Weight, [de] Ungültiges Aufnahmegewicht
HealthInsurance = [en] Health Insurance, [de] Krankenkasse
Help = [en] Help, [de] Hilfe
HisVersion = [en] HIS-Version, [de] KIS-Version
History
   ↪ Action
     ↪ Created = [en] Action {0} created (Created actions), [de] Aktion {0} angelegt (Aktion angelegt)
   ↪ Section = [en] History, [de] Historie
   ↪ Upcoming
     ↪ Events = [en] UPCOMING EVENTS WILL COME HERE!!, [de] Nächste Arbeitsschritte
Holiday = [en] Holiday, [de] Urlaub
Hospital = [en] Hospital, [de] Krankenhaus
HospitalIdent = [en] Hospital Identifier, [de] IKZ des Krankenhauses (IKZ Krankenhaus)
HospitalIdentifier = [en] Hospital, [de] Krankenhaus IKZ (Krankenhaus)
HospitalName = [en] Hospital Name, [de] Krankenhausname
Hospitalization = [en] Hospitalization, [de] Einweisung
   ↪ Diagnosis = [en] Hospitalization Diagnosis, [de] Einweisungsdiagnose
HoursOfMechanicalVentilation = [en] Hours of Mechanical Ventilation, [de] Beatmungsdauer
Icd
   ↪ Placeholder = [en] No diagnoses added, [de] Keine Diagnosen hinzugefügt
   ↪ RefType
     ↪ Addition = [en] Addition, [de] Zusatz
     ↪ AdditionTo = [en] AdditionTo, [de] Zusatz zu
     ↪ Cross = [en] Cross, [de] Kreuz
     ↪ Star = [en] Star, [de] Stern
IcdType
   ↪ Admission = [en] Admission, [de] Aufnahme
   ↪ AfterInpatient = [en] After inpatient, [de] Nachstationäre
   ↪ BeforeInpatient = [en] Before inpatient, [de] Vorstationäre
   ↪ Billing = [en] Billing, [de] Abrechnungs-
   ↪ Care = [en] Care, [de] Pflege
   ↪ DepartmentAdmission = [en] Department Admission, [de] Fachabteilung Aufnahme
   ↪ DepartmentDischarge = [en] Department Discharge, [de] Fachabteilung Entlassung
   ↪ DepartmentTreatment = [en] Department Treatment, [de] Fachabteilung Behandlung
   ↪ Discharge = [en] Discharge, [de] Entlassung
   ↪ DischargeAmbulant = [en] Discharge - ambulant, [de] Entlassung - ambulant
   ↪ DRG = [en] DRG, [de] DRG
   ↪ Hospitalization = [en] Hospitalization, [de] Einweisung
   ↪ Postoperative = [en] Postoperative, [de] Postoperativ
   ↪ Preoperative = [en] Preoperative, [de] Präoperativ
   ↪ Risk = [en] Risk, [de] Risiko
   ↪ Transferring = [en] Transferring, [de] Verlegung
   ↪ Treatment = [en] Treatment, [de] Behandlung
   ↪ Work = [en] Work, [de] Arbeits
ICDCatalog = [en] ICD Catalog, [de] ICD Katalog
ICDCode = [en] Main diagnosis (MD), [de] Hauptdiagnose (HD)
IdentClass
   ↪ ID10 = [en] health insurance, [de] Krankenversicherungsträger
   ↪ ID11 = [en] pension insurance, [de] Rentenversicherungsträger
   ↪ ID12 = [en] Accident insurance institutions, [de] Unfallversicherungsträger
   ↪ ID13 = [en] Welfare agency, [de] Sozialhilfeträger
   ↪ ID14 = [en] Federal agency for work, [de] Bundesagentur für Arbeit
   ↪ ID15 = [en] Pension offices and Orthopedic Supplies Set, [de] Versorgungsämter und Orthopädische Versorgungsstellen
   ↪ ID16 = [en] private health insurance, [de] Private Krankenversicherungen
   ↪ ID17 = [en] health authorities, [de] Gesundheitsämter
   ↪ ID18 = [en] Care funds of the health insurance, [de] Pflegekassen der Krankenversicherungsträger
   ↪ ID19 = [en] Support the Community's tasks and medical service of health insurance (MD) and the Medical Service Social (MDS), [de] Träger der Gemeinschaftsaufgaben und Medizinischer Dienst der Krankenversicherung (MD) sowie Medizinischer Dienst der Sozialversicherung (MDS)
   ↪ ID20 = [en] Panel physician associations and doctors incl. Selbstabrechnender doctors (as evaluators doctors), [de] Kassenärztliche Vereinigungen und Ärzte einschl. selbstabrechnender Ärzte (z.B. Gutachterärzte)
   ↪ ID21 = [en] Kassen dental associations and dentists incl. Selbstabrechnender dentists (as consultant), [de] Kassenzahnärztliche Vereinigungen und Zahnärzte einschl. selbstabrechnender Zahnärzte (z.B. Gutachter)
   ↪ ID22 = [en] Private medical clearing centers, [de] Privatärztliche Verrechnungsstellen
   ↪ ID26 = [en] Hospitals, hospital pharmacies, [de] Krankenhäuser, Krankenhausapotheken
   ↪ ID27 = [en] Polyclinics, Integrated care, practice clinics, [de] Polikliniken, Integrierte Versorgung, Praxiskliniken
   ↪ ID29 = [en] Medical and technical laboratories, X-ray and Dental Technology, Institute of Pathology, Radiation and Hygiene Institute, [de] Medizinische und technische Labore, Röntgen- und Zahntechnik, Institut für Pathologie, Strahlen- und Hygieneinstitute
   ↪ ID30 = [en] pharmacies, [de] Apotheken
   ↪ ID31 = [en] Optometrists, Ophthalmologists (point of service provision, for example, contact lenses), [de] Augenoptiker, Augenärzte (als Erbringer von Leistungen, z.B. Kontaktlinsen)
   ↪ ID32 = [en] Audiologist, otolaryngologists (point of service provision, for example, hearing aids), [de] Hörgeräte-Akustiker, HNO-Ärzte (als Erbringer von Leistungen, z.B. Hörgeräteversorgung)
   ↪ ID33 = [en] Orthopedic technician, bandages, medical supply stores, medical and hospital supplies, Stomafachhandel Aids, [de] Orthopädiemechaniker, Bandagisten, Sanitätshäuser, Arzt- und Krankenhausbedarf, Stomafachhandel, Hilfsmittel
   ↪ ID34 = [en] Orthopädieschuhmacher, orthopedists (point of service provision, as deposits), [de] Orthopädieschuhmacher, Orthopäden (als Erbringer von Leistungen, z.B. Einlagen)
   ↪ ID35 = [en] Wigs (hairdressers), [de] Perückenmacher (Friseure)
   ↪ ID39 = [en] Podiatrists, med. Chiropodists, [de] Podologen, med. Fußpfleger
   ↪ ID40 = [en] Speech therapist, speech therapy therapist, special education, [de] Logopäden, Sprachheilbehandler, Sonderschullehrer
   ↪ ID42 = [en] See schools, [de] Sehschulen
   ↪ ID43 = [en] Med. Spa therapists, masseurs, practices for physical therapy, orthopedic surgeons (point of service provision, for example, massages), spas, Kurpacker, [de] Med. Bademeister, Masseure, Praxen für physikalische Therapie, Orthopäden (als Erbringer von Leistungen, z.B. Massagen), Kurbäder, Kurpacker
   ↪ ID44 = [en] Physiotherapists, practices for physiotherapy, sports clubs, antenatal exercises, Rehabilitationssport-, Herzsport- and disabled sports groups, functional training groups, gyms, riding therapy, [de] Krankengymnasten, Physiotherapeuten, Praxen für Physiotherapie, Sportvereine, Schwangerschaftsgymnastik, Rehabilitationssport-, Herzsport- und Behindertensportgruppen, Funktionstrainingsgruppen, Sportstudios, Reittherapie
   ↪ ID45 = [en] midwives, [de] Hebammen
   ↪ ID46 = [en] Sick and elderly carers, housekeepers, hospice nurse, power and industrial auxiliary ring, [de] Kranken- und Altenpfleger, Haushaltshilfen, Hauspfleger, Maschinen- und Betriebshilfsring
   ↪ ID47 = [en] health resorts, [de] Kurverwaltungen
   ↪ ID48 = [en] Employment and addiction therapists design and child therapy, occupational therapy, expressive therapy, [de] Beschäftigungs- und Suchttherapeuten, Gestaltungs- und Kindertherapie, Ergotherapie, Künstlerische Therapie
   ↪ ID49 = [en] Other therapeutic assistants, psychologists, psychotherapists, teaching aids, sociotherapy, Breakfast conveyor, special education, mobility manager, sign language interpreters, eurythmy therapists, social pediatric centers, after-care service PEKIP, [de] Sonstige therapeutische Hilfspersonen, Psychologen, Psychotherapeuten, Unterrichtshilfen, Soziotherapie, Frühfördereinrichtung, Sonderpädagogen, Mobilitätstrainer, Gebärdensprachdolmetscher, Heileurythmisten, Sozialpädiatrische Zentren, Nachsorgeeinrichtungen, PEKIP
   ↪ ID50 = [en] Charitable organizations, diaconal and social centers, community nurses, support groups, parishes, municipalities (care services, health, social care and nursing stations), [de] Caritative Organisationen, Diakonie- und Sozialstationen, Gemeindeschwestern, Selbsthilfegruppen, Kirchengemeinden, Stadtverwaltungen (Pflegedienste, Kranken-, Sozial- und Schwesternstationen)
   ↪ ID51 = [en] Care homes, day and respite care, special education centers, centers Sozialtherapeutische, [de] Alten- und Pflegeheime, Tages- und Kurzzeitpflege, Sonderschulheime, Sozialtherapeutische Zentren
   ↪ ID52 = [en] Contract homes without medical institutions, [de] Vertragshäuser ohne medizinische Einrichtungen
   ↪ ID53 = [en] Facilities for vocational rehabilitation measures, [de] Einrichtungen für Maßnahmen der beruflichen Rehabilitation
   ↪ ID54 = [en] Outpatient and mobile rehabilitation facilities, [de] Ambulante und mobile Rehabilitationseinrichtungen
   ↪ ID57 = [en] Stationary prevention and rehabilitation facilities, [de] Stationäre Vorsorge- und Rehabilitationseinrichtungen
   ↪ ID59 = [en] Other providers of services i. P of the SGB, [de] Sonstige Erbringer von Leistungen i. S. des SGB
   ↪ ID60 = [en] Ambulance companies, doctors and providers in the emergency medical care, [de] Krankentransportunternehmen, Ärzte als Leistungserbringer in der notfallärztlichen Versorgung
   ↪ ID65 = [en] Undertakers, [de] Bestattungsunternehmen
   ↪ ID66 = [en] Clearinghouses, data centers, accounting inspection, [de] Abrechnungsstellen, Rechenzentren, Rechnungsprüfstellen
   ↪ ID89 = [en] Group indicator grouping several IK, [de] Gruppenkennzeichen zur Zusammenfassung mehrerer IK
   ↪ ID93 = [en] aid agencies, [de] Beihilfestellen
   ↪ ID94 = [en] Care funds outside the statutory health insurance, [de] Pflegekassen außerhalb der gesetzlichen Krankenversicherung
   ↪ ID95 = [en] Health insurance outside the statutory health insurance, [de] Krankenversicherungsträger außerhalb der gesetzlichen Krankenversicherung
   ↪ ID96 = [en] Authorities of the federal and state governments, courts, [de] Behörden des Bundes und der Länder, Gerichte
   ↪ ID97 = [en] Reserved for internal administrative-free use in the institutions, [de] Reserviert zur verwaltungsinternen freien Verwendung bei den Institutionen
IdentNumber = [en] Ident. Number, [de] IK-Nummer
InformSupport = [en] Inform Support, [de] Support informieren
Information = [en] Information (I), [de] Information (I)
InitiationTestProcesses = [en] Initiation test processes, [de] Einleitung Prüfverfahren (Einleitung Prüfv.)
   ↪ From = [en] Initiation test processes from, [de] Einleitung Prüfv. von
   ↪ To = [en] Initiation test processes to, [de] Einleitung Prüfv. bis
Input
   ↪ Date
     ↪ Error = [en] {0} no correct date, [de] {0} ist kein korrektes Datum
     ↪ From = [en] From date, [de] Von Datum
     ↪ To = [en] To date, [de] Bis Datum
   ↪ Number
     ↪ From = [en] From, [de] Von
     ↪ To = [en] To, [de] Bis
   ↪ Time
     ↪ Error = [en] {0} no correct time, [de] {0} ist keine korrekte Zeit
     ↪ From = [en] From time, [de] Von Uhrzeit
     ↪ To = [en] To time, [de] Bis Uhrzeit
Ins
   ↪ Short = [en] Insurance (Insurance Group), [de] Kasse (Versicherungs-/Krankenkassengruppen)
     ↪ AOK = [en] AOK, [de] AOK
     ↪ Barmer = [en] Barmer, [de] Barmer
     ↪ BG = [en] BG, [de] BG
     ↪ BKK = [en] BKK, [de] BKK
     ↪ DAK = [en] DAK, [de] DAK
     ↪ GEK = [en] GEK, [de] GEK
     ↪ HaMue = [en] HaMü, [de] HaMü
     ↪ HEK = [en] HEK, [de] HEK
     ↪ HZK = [en] HZK, [de] HZK
     ↪ IKK = [en] IKK, [de] IKK
     ↪ KEH = [en] KEH, [de] KEH
     ↪ KKH = [en] KKH, [de] KKH
     ↪ Knappschaft = [en] Knappschaft, [de] Knappschaft
     ↪ SBK = [en] SBK, [de] SBK
     ↪ Sozialamt = [en] Sozialamt, [de] Sozialamt
     ↪ TKK = [en] TKK, [de] TK
   ↪ Status
     ↪ FamilyInsurance = [en] family insurance, [de] Familienversichert
     ↪ RetireesAndDependents = [en] Retirees and dependents, [de] Rentner und Angehörige
     ↪ SelfInsured = [en] self insured, [de] Selber versichert
Insurance = [en] Insurance, [de] Versicherung
   ↪ Bill
     ↪ Recived = [en] Insurance Recived Bill Date, [de] Eingang Rech.-datum  Kasse (Eingang Rech.-datum Kasse)
       ↪ From = [de] Eingang Rech.-datum Kasse von
       ↪ To = [de] Eingang Rech.-datum Kasse bis
   ↪ Company = [en] Insurance Company (Insurance Comp.), [de] Versicherung (Versicherung)
   ↪ Data = [en] Insurance Data, [de] Versicherungsdaten
   ↪ Fehler = [de] IKZ der Versicherung nicht vorhanden
   ↪ Ident = [en] Insurance Identifier, [de] IKZ der Versicherung (Versicherung)
   ↪ Insuree = [en] Insuree, [de] Versicherungsnehmer
   ↪ Name = [en] Insurance name, [de] Versicherungsname (Vers.-Name)
   ↪ Number = [en] Insurance Number, [de] Versicherten-Nummer (Vers.-Nr.)
     ↪ Fehler = [de] Versichertennummer des Patienten bei der Versicherung  nicht vorhanden
   ↪ Status = [en] Insurance Status, [de] Versicherungsstatus
   ↪ Type = [en] Insurancetype, [de] Art der Kasse
   ↪ ValidFromTo = [en] Valid From-To, [de] Gültig von/bis
InsuranceAssociation = [en] Insurance Association, [de] Berufsgenossenschaft
   ↪ Name = [en] Assoc. Name, [de] BG-Name
Insurances = [en] Insurances, [de] Versicherungen
IsNotSupported = [en] is not supported:, [de] wird nicht unterstützt (Minimum benötigt:
ItemLocked = [en] Locked (Lock), [de] Gesperrt (Sperre)
Job
   ↪ Lock
     ↪ Error
       ↪ Database = [en] Database is locked by {0} because of {1} since {2}!, [de] Datenbank ist gesperrt durch {0} wegen {1} seit {2} Uhr!
       ↪ OpenCases = [en] Please close open case or cases to proceed!, [de] Bitte den Fall oder die Fälle schließen um fortzufahren!
   ↪ Status
     ↪ Completed = [en] completed, [de] Erfolgreich
     ↪ Failed = [en] failed, [de] Gescheitert
     ↪ Started = [en] execute Task, [de] Wird durchgeführt
     ↪ Starting = [en] start Task, [de] Wird gestartet
     ↪ Stopped = [en] stopped, [de] Angehalten
     ↪ Stopping = [en] cancel Task, [de] Wird beendet
   ↪ Stauts
     ↪ Initializing = [en] initializing, [de] Wird initialisiert
Jobs = [en] Jobs, [de] Jobs
Lab
   ↪ Data = [en] Laboratory data, [de] Labordaten
     ↪ Analysis = [en] Analysis (Analysis), [de] Analyse (Analyse)
     ↪ AnalysisDate = [en] Analysis Date (Analysis Date), [de] Datum Analyse (Datum Analyse)
     ↪ Benchmark = [en] Benchmark (Benchmark), [de] Bewertung (Bewertung)
     ↪ Category = [en] Category (Category), [de] Kategorie (Kategorie)
     ↪ Comment = [en] Comment (Comment), [de] Kommentar (Kommentar)
     ↪ Description = [en] Description (Description), [de] Beschreibung (Beschreibung)
     ↪ Group = [en] Group (Group), [de] Gruppe (Gruppe)
     ↪ KisExternKey = [en] KIS-External (KIS-External), [de] KIS-Extern (KIS-Extern)
     ↪ LabDate = [en] Document Date (Document Date), [de] Dokumenten-Datum (Dokumenten-Datum)
     ↪ LockDel = [en] LockDel (LockDel), [de] LockDel (LockDel)
     ↪ MaxLimit = [en] Max Limit (Max Limit), [de] Max-Limit (Max-Limit)
     ↪ Method = [en] Method (Method), [de] Methode (Methode)
     ↪ MinLimit = [en] Min Limit (Min Limit), [de] Min-Limit (Min-Limit)
     ↪ Position = [en] Pos. (Pos.), [de] Pos. (Pos.)
     ↪ Range = [en] Normal Value (Normal Value), [de] Normalwert (Normalwert)
     ↪ Text = [en] Result value (Result value), [de] Wert/Text (Wert/Text)
     ↪ Unit = [en] Unit (Unit), [de] Einheit (Einheit)
     ↪ Value = [en] result value (result value), [de] Ergebniswert (Ergebniswert)
     ↪ Value2 = [en] result value 2 (result value 2), [de] Ergebniswert2 (Ergebniswert2)
Language = [en] Language, [de] Sprache
LawerFileNumber = [en] lawer filen number, [de] Aktenzeichen (RA) (Akt.-Z. (RA))
LengthOfStay = [en] Length of Stay (LoS), [de] Verweildauer (VWD)
LengthOfStayFrom = [en] LoS from (LoS), [de] Verweildauer von (VWD)
LengthOfStayTo = [en] LoS to (LoS), [de] Verweildauer bis (VWD)
Level
   ↪ All = [en] Alle Meldungen werden ungefiltert ausgegeben, [de] Alle Meldungen werden ungefiltert ausgegeben
   ↪ Config = [en] Informationen zur Konfiguration, [de] Informationen zur Konfiguration
   ↪ Debug = [en] allgemeines Debugging (Auffinden von Fehlern), [de] allgemeines Debugging (Auffinden von Fehlern)
   ↪ Error = [en] Fehler (Ausnahme wurde abgefangen. Bearbeitung wurde alternativ fortgesetzt), [de] Fehler (Ausnahme wurde abgefangen. Bearbeitung wurde alternativ fortgesetzt)
   ↪ Fatal = [en] Kritischer Fehler, Programmabbruch, [de] Kritischer Fehler, Programmabbruch
   ↪ Finest = [en] Ausgabe feinster Informationen, [de] Ausgabe feinster Informationen
   ↪ Info = [en] allgemeine Informationen, [de] allgemeine Informationen
   ↪ Off = [en] Logging ist deaktiviert, [de] Logging ist deaktiviert
   ↪ Trace = [en] ausführlicheres Debugging, Kommentare, [de] ausführlicheres Debugging, Kommentare
   ↪ Warning = [en] Auftreten einer unerwarteten Situation, [de] Auftreten einer unerwarteten Situation
LocalVersions = [en] CP-Versions, [de] CPX-Versionen
Localisation
   ↪ Bilateral = [en] both sides (b), [de] beidseitig (b)
   ↪ Left = [en] left (l), [de] links (l)
   ↪ Right = [en] right (r), [de] rechts (r)
Lock
   ↪ Case
     ↪ Entry
       ↪ Message = [en] Hospital case {0} is already opened by user {1} since {2}!, [de] Der Fall {0} ist seit {2} Uhr bereits von Nutzer {1} geöffnet!
   ↪ Process
     ↪ Entry
       ↪ Message = [en] Process {0} is already opened by user {1} since {2}!, [de] Der Vorgang {0} ist seit {2} Uhr bereits von Nutzer {1} geöffnet!
Login
   ↪ Database = [en] Database, [de] Datenbank
   ↪ Error
     ↪ Message = [en] Error happened when I tried to connect configuration service.Please check these possible reasons:, [de] Ein Fehler ist aufgetreten . Bitte überprüfen Sie diese möglichen Gründe:
       ↪ Configuration = [en] The configuration file is not available, [de] Die Konfigurationsdatei ist nicht verfügbar
         ↪ Invalid = [en] The configuration file is faulty, [de] Die Konfigurationsdatei ist fehlerhaft
       ↪ Server = [en] No connection to Checkpoint X Server possible, [de] Keine Verbindung zum Checkpoint X Server möglich
   ↪ Exit = [en] Exit, [de] Beenden
   ↪ Failed
     ↪ AccountExpired = [en] Account has been expired or becomes valid in the future, [de] Benutzerkonto ist entweder abgelaufen oder noch nicht gültig
     ↪ AccountInvalid = [en] Account is not valid anymore, [de] Benutzerkonto ist nicht mehr gültig
     ↪ ClientIdDoesNotMatch = [en] Passed Client ID {0} does not match with with session Client ID, [de] Übergebene Client ID {0} stimmt nicht mit der Client ID in der Session überein
     ↪ ClientIdMissing = [en] No Client ID passed, [de] Es wurde keine Client ID angegeben
     ↪ DatabaseDoesNotExist = [en] Database {0} does not exist, [de] Datenbank {0} existiert nicht
     ↪ DatabaseIsNotAvailable = [en] Database {0} is not available: {1}, [de] Datenbank {0} ist nicht verfügbar: {1}
     ↪ Database
       ↪ NoRight = [en] Role ''''{0}'''' has no permission for database {1}, [de] Die Rolle ''''{0}'''' hat keine Berechtigung für die Datenbank {1}
         ↪ Other
           ↪ Role = [en] You can use this database with your role ''''{0}''''., [de] Mit Ihrer Rolle ''''{0}'''' können Sie mit dieser Datenbank arbeiten.
             ↪ 1 = [en] Do you want to continue with this role?, [de] Wollen Sie mit dieser Rolle die Anmeldung fortsetzen?
     ↪ NoDatabaseSelected = [en] No database selected, [de] Es wurde keine Datenbank angegeben
     ↪ No
       ↪ License = [en] There's no CPX license installed, [de] Es wurde keine checkpoint x-Lizenz gefunden
       ↪ Valid
         ↪ License = [en] CPX License is expired. The License was valid till {0}, [de] checkpoint x-Lizenz ist abgelaufen. Die Lizenz war gültig bis {0}
     ↪ PasswordInvalid = [en] Password invalid, [de] Passwort ungültig
     ↪ PasswordMissing = [en] No password passed, [de] Es wurde kein Passwort angegeben
     ↪ UsernameInvalid = [en] Name invalid, [de] Name ungültig
     ↪ UsernameMissing = [en] No user name passed, [de] Es wurde kein Benutzername angegeben
   ↪ Login = [en] Login, [de] Einloggen
   ↪ Password = [en] Password, [de] Passwort
   ↪ StartTeamviewer = [en] Start Teamviewer, [de] Starte Teamviewer
   ↪ SupportAndContact = [en] Support & Contact Details, [de] Support & Kontaktdaten
   ↪ User = [en] User, [de] Benutzer
LOS = [en] LoS, [de] VWD
LosAlteration = [en] Los Alteration?, [de] Tage simuliert (Tage sim.)
   ↪ From = [en] Los Alteration from, [de] Tage sim. von
   ↪ To = [en] Los Alteration to, [de] Tage sim. bis
LumpSum = [en] Lump Sum, [de] Pauschale
MainAuditReason = [en] Main audit reason, [de] Hauptprüfgrund
MainDepartment = [en] Main Department, [de] Hauptabteilung
MainDiagnosis
   ↪ Error = [de] Eine Stern- oder Zusatzdiagnose kann nicht als Hauptdiagnose gesetzt werden.
Md
   ↪ Audit
     ↪ Quota = [en] MD auditquotas, [de] MD Prüfquote
   ↪ Masterdata = [en] MD masterdata, [de] MD Stammdaten
MDC = [en] MDC, [de] Hauptdiagnosegruppe/Strukturkategorie (MDC/SK)
Mdk
   ↪ Address = [en] Address, [de] Anschrift
   ↪ AddressValidate = [en] Invalid Address. Please provide valid entry., [de] Ungültige Adresse. Bitte geben Sie einen gültigen Eintrag an.
   ↪ AreaCode = [en] Area Code, [de] Postleitzahl
   ↪ AuditCompletionDeadline = [en] Mdk Audit Completion Deadline, [de] Frist Abschluss MD-Prüfung
   ↪ Audit
     ↪ Completion
       ↪ Deadline
         ↪ Days = [de] Tage bis Abschluss Vorverfahren (Abschluss Vorverf.)
         ↪ From = [de] Frist Vv Abschluss von
         ↪ To = [de] Frist Vv Abschluss bis
   ↪ AuditCompletionDeadlineError = [en] No valid entry is found for the audit completion deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Abschluss MD-Prüfung" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
   ↪ AuditReasons = [en] Audit Reasons (Audit Reasons), [de] Prüfgründe (Prüfgründe)
   ↪ BillCorrectionDeadline = [en] Bill Correction Deadline, [de] Frist einmalige Rechnungskorrektur
   ↪ BillCorrectionDeadlineError = [en] No valid entry is found for the bill correction deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Einmalige Rechnungskorrektur" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
   ↪ Comment = [en] Mdk Comment, [de] MD-Ergebnis/Bemerkung
   ↪ ContinuationFeeDeadlineError = [en] No valid entry is found for the continuation fee deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Fortsetzungpauschale gezahlt" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
   ↪ ContinuationFeePaid = [en] Continuation Fee Paid, [de] Fortsetzungspauschale gezahlt
   ↪ CreateRequestWindow = [en] Create a request, [de] Anfrage anlegen
   ↪ DeadlineForSubmission = [en] Deadline For Submission, [de] Abgabefrist bis
   ↪ Department = [en] Mdk Department, [de] MD-Dienststelle
   ↪ DepartmentValidate = [en] Invalid MD Department. Please provide valid entry., [de] Ungültige MD-Dienststelle. Bitte geben Sie einen gültigen Eintrag an.
   ↪ DocumentDeliverAndContinuationFeeDeadlinesError = [en] No valid entry is found for the document deliver and continuation fee deadlines in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Abgabefrist Unterlagen" und "Fortsetzungpauschale gezahlt" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
   ↪ Document
     ↪ Deliver
       ↪ Deadline = [de] Frist bis zum Versenden der Unterlagen an den MD (Frist Versand)
         ↪ Days = [de] Tage bis Versand MD-Unterlagen (Unterlagen MD)
         ↪ From = [de] Frist Versand von
         ↪ To = [de] Frist Versand bis
   ↪ DocumentDeliverDeadlineError = [en] No valid entry is found for the document deliver deadline in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Abgabefrist Unterlagen" in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
   ↪ DocumentDelivered = [en] Document Delivered at, [de] gesendet am
   ↪ DocumentRequest = [en] Document Request at, [de] angefordert am
   ↪ Documents = [en] MD Documents, [de] MD-Unterlagen
   ↪ Editor = [en] Editor, [de] Bearbeiter
   ↪ Email = [en] Email Address, [de] Mail-Adresse
   ↪ EmptyMdkDataDialog = [en] Either request was created without selecting any MD or selected MD was deleted after creating this MD request. Please select required MD., [de] Entweder wurde eine Anfrage angelegt ohne einen MD auszuwählen oder der ausgewählte MD wurde nach dem Anlegen dieser MD-Anfrage gelöscht. Bitte benötigten MD auswählen.
   ↪ ExtendedAuditReasons = [en] Extended Audit Reasons, [de] Erweiterte Prüfgründe
   ↪ Fax = [en] Fax, [de] Fax
   ↪ FaxValidate = [en] Invalid Fax No. Please provide valid entry., [de] Ungültige Faxnummer. Bitte geben Sie einen gültigen Eintrag an.
   ↪ Informations = [en] MD Informations, [de] MD-Informationen
   ↪ MailAddressValidate = [en] Invalid Email-address. Please provide valid entry., [de] Ungültige Mail-Adresse. Bitte geben Sie einen gültigen Eintrag an.
   ↪ Name = [en] MD Name, [de] MD-Name
   ↪ NameValidate = [en] Invalid MD Name. Please provide valid entry., [de] Ungültiger MD-Name. Bitte geben Sie einen gültigen Eintrag an.
   ↪ PhoneNoValidate = [en] Invalid Telephone No. Please provide valid entry., [de] Ungültige Telefonnummer. Bitte geben Sie einen gültigen Eintrag an.
   ↪ PhonePrefixValidate = [en] Invalid Telephone-prefix. Please provide valid entry., [de] Ungültige Vorwahl. Bitte geben Sie einen gültigen Eintrag an.
   ↪ ProcessStartDate = [en] Process Start Date, [de] Einleitung Prüfverfahren Kasse
   ↪ ProposalSubsequentProceedingsDeadline = [en] No valid entry is found for the Proposal Subsequent Proceedings Deadline  in the master data. Please provide a valid configuration. In the Statutory deadlines section in the System Administration. Alternatively, you can manually enter a date for the deadline., [de] Keinen gültigen Eintrag für die Frist "Frist Vorschlag Nachverfahren"  in den Stammdaten gefunden. Bitte gültige Konfiguration bereitstellen. Im Bereich Gesetzliche Fristen in der Systemadministration. Alternativ können Sie manuell ein Datum für die Frist eintragen.
   ↪ ReportCreationDate = [en] Report Creation Date, [de] Gutachtendatum
   ↪ ReportCreationDateEqual = [en] Report Creation Date, [de] Gutachtendatum
   ↪ ReportCreationDateFrom = [en] Report Creation Date from, [de] Gutachtendatum von
   ↪ ReportCreationDateTo = [en] Report Creation Date to, [de] Gutachtendatum bis
   ↪ ReportCreationQuarter = [en] Report Creation Quarter, [de] Gutachten-Quartal
   ↪ ReportReceiveDate = [en] Report Receive Date, [de] Eingang Gutachten
   ↪ StartAudit = [en] Mdk Start Audit, [de] Einleitung MD-Prüfung
   ↪ StartAuditEqual = [en] Mdk Start Audit, [de] Einl. MD-Prüfung
   ↪ StartAuditExtended = [en] Mdk Start Audit Extended, [de] Einleitung erweiterte MD-Prüfung
   ↪ StartAuditExtendedEqual = [en] Mdk Start Audit Extended, [de] Einl. erw. MD-Prüfung
   ↪ StartAuditExtendedFrom = [en] Mdk Start Audit Extended from, [de] Einl. erw. MD-Prüfung von
   ↪ StartAuditExtendedTo = [en] Mdk Start Audit Extended to, [de] Einl. erw. MD-Prüfung bis
   ↪ StartAuditFrom = [en] Mdk Start Audit from, [de] Einl. MD-Prüfung von
   ↪ StartAuditQuarter = [en] Quartal Einleitung MD-Prüfung, [de] Quartal Einleitung MD-Prüfung
   ↪ StartAuditTo = [en] Mdk Start Audit to, [de] Einl. MD-Prüfung bis
   ↪ Status = [en] Request State, [de] Status der Anfrage (Anfrage-Status)
   ↪ SubsequentProceeding = [en] subsequent Proceeding, [de] Fort bezahlt am
   ↪ Subsequent
     ↪ Proceeding
       ↪ Date = [en] subsequent proceeding date, [de] Nachverfahren (Nachverfahren)
         ↪ Form = [en] Nsubsequent proceeding date from, [de] Nachverfahren von
         ↪ To = [en] subsequent proceeding date to, [de] Nachverfahren bis
   ↪ Telephone = [en] Telephone, [de] Telefon
   ↪ TelephoneAreaCode = [en] Telephone Area Code, [de] Vorwahl
   ↪ UpdateRequestWindow = [en] Update a request (MD), [de] Anfrage aktualisieren (MD)
   ↪ UserComment = [en] User Comment, [de] Eigene Notizen
   ↪ ZipCodeValidate = [en] Invalid Zipcode. Please provide valid entry., [de] Ungültige Postleitzahl. Bitte geben Sie einen gültigen Eintrag an.
Menu
   ↪ Batch
     ↪ Grouping = [en] Batchgrouping, [de] Batchgroupen
       ↪ DetailsFilter = [en] Case version filter, [de] Fallversionen
         ↪ ActualBoth = [en] current case versions (incl. KIS), [de] aktuelle Fallversionen (inkl. KIS)
         ↪ ActualLocal = [en] current local case versions, [de] lokale aktuelle Fallversionen
         ↪ All = [en] all case versions, [de] Alle Fallversionen
         ↪ Tooltip = [de] Es können alle Fälle der KIS-Version gegroupt werden. Die bestehende Checkpoint DRG-Version bleibt unberührt. Alle Fallversionen zu groupen kann sehr lange dauern!
       ↪ DoForActualRoleOnly = [en] Save Results for current Role, [de] Ergebnisse für aktuelle Rolle speichern
         ↪ Tooltip = [de] Die Prüfregelergebnisse werden nur für die eigene Rolle gespeichert.Für Benutzer mit einer anderen Rolle sind die Prüfregelergebnisse nicht sichtbar.
       ↪ DoHistoryCases = [en] check with history, [de] fallübergreifend
         ↪ Tooltip = [en] use rules for check of history cases for patient, [de] Es werden fallübergreifende Regeln an die Fälle abgewendet
       ↪ DoRules = [en] with automatic Case Check, [de] mit automatischer Fallprüfung
         ↪ Tooltip = [de] Alle Fälle werden mit den aktivierten Regeln des entsprechenden Jahres geprüft.
       ↪ DoRulesSimulate = [en] with automatic Case Correction, [de] mit automatischer Fallkorrektur
         ↪ Tooltip = [de] Bei den angeschlagenen Regeln werden die Regelempfehlungen ausgewertet und eine eventuelle Erlösdifferenz, CW-positiv und CW–negativ zusammengefasst, ausgegeben.
       ↪ DoSimulate = [en] DRG/PEPP Simulation, [de] DRG/PEPP Simulation
         ↪ Tooltip = [de] Für jede Nebendiagnose des Falles wird eine DRG/PEPP Simulation durchgeführt,indem diese als Hauptdiagnose ausgewählt wird.
       ↪ Grouped = [en] Only Cases without DRG/PEPP, [de] Nur Fälle ohne DRG/PEPP
         ↪ Tooltip = [de] Es werden nur Fälle gegroupt,die noch kein DRG- bzw. PEPP-Ergebnis enthalten.
       ↪ LastResults = [en] Last Results, [de] Letzte Ergebnisse
       ↪ MedAndRemedies = [en] GK Check, [de] GK Prüfung
         ↪ Tooltip = [de] Bei der Regelauswertung werden auch die Regeln angewendet, die Medikamenten-,Heil- und Hilfsmittelkriterien beinhalten.
       ↪ Settings = [en] Settings, [de] Einstellungen
       ↪ Start = [en] Start, [de] Ermitteln
       ↪ SupplementaryFee = [en] Distribute Fee, [de] Zusatzentgelte verteilen
         ↪ Tooltip = [de] Die Zusatzentgelte werden entsprechend der OPS-Codes zugeordnet
       ↪ UsedRules = [en] Rules to use, [de] Regelauswahl
     ↪ Info
       ↪ Grouped = [en] cases to group: {0}, [de] Fallversionen zu groupen: {0}
   ↪ Change = [en] change, [de] Wechseln
   ↪ Close = [en] close, [de] Schließen
   ↪ Database
     ↪ Change = [en] Change database, [de] Datenbank wechseln...
       ↪ Validation
         ↪ Db
           ↪ Same = [en] Choose a different database, [de] Bitte eine unterschiedliche Datenbank wählen
           ↪ Selection = [en] Choose a database, [de] Bitte eine Datenbank wählen
     ↪ Statustext = [en] Database: {0}, [de] Datenbank: {0}
   ↪ Grouper
     ↪ Settings = [en] Grouper Settings, [de] Grouper Einstellungen
     ↪ Statustext = [en] Grouper: {0}, [de] Grouper: {0}
   ↪ Role
     ↪ Change = [en] Change the active role of the user..., [de] Aktive Rolle ändern...
       ↪ Validation
         ↪ Selection = [en] Please choose a role, [de] Bitte eine Rolle wählen
   ↪ Search
     ↪ Filter = [en] Searchfilter, [de] Suchfilter
   ↪ Server
     ↪ Statustext = [en] Server: {0}:{1}, [de] Server: {0}:{1}
   ↪ User
     ↪ Change = [en] Change user, [de] Benutzer wechseln...
       ↪ Profile
         ↪ Image = [en] Change profile image, [de] Profilbild ändern
       ↪ Validation
         ↪ Db
           ↪ Selection = [en] Choose a database, [de] Bitte eine Datenbank wählen
     ↪ Login
       ↪ Statustext = [en] logged in since {0}, [de] eingeloggt seit {0} Uhr
     ↪ Name
       ↪ Statustext = [en] Name: {0}, [de] Name: {0}
     ↪ Role
       ↪ Statustext = [en] Role: {0}, [de] Rolle: {0}
     ↪ Statustext = [en] Username: {0}, [de] Benutzername: {0}
   ↪ Wizard
     ↪ Back = [en] Back, [de] Zurück
     ↪ Next = [en] Next, [de] Weiter
Message
   ↪ Case
     ↪ Date
       ↪ Not
         ↪ Valid = [en] The admision year  {0} is not supporten by Grouper any more, [de] Das Aufnahmejahr {0} wird nicht mehr vom Grouper unterstützt
     ↪ Has
       ↪ No
         ↪ Discharge
           ↪ Date = [en] The case does not have a discharge date, [de] Der Fall hat kein Entlassungsdatum
     ↪ Not
       ↪ Grouped = [en] The case was not grouped with the model '{0}', [de] Der Fall wurde mit dem Groupermodel {0} noch nicht gegroupt
Midwife = [en] Midwife, [de] Hebamme
ModeOfAdmission = [en] Mode of Admission, [de] Erbringungsart
   ↪ Department = [en] Departmenttype, [de] Abteilungstyp
ModificationDate = [en] Modification Date, [de] Änderungsdatum
ModifiedFrom = [en] from {0}, [de] von {0}
ModifiedOn = [en] Modified on {0}, [de] Geändert am {0}
MsExcelNotFound = [en] Microsoft Excel was not found!, [de] Microsoft Excel wurde nicht gefunden!
MsExcelVersion = [en] The Microsoft Excel Version, [de] Die Microsoft Excel Version
MsOfficeDisabled = [en] Ms Office was deactivated, it is out of use now!, [de] Die Verwendung von Microsoft Office wurde deaktiviert!
MsOfficeNotFound = [en] Microsoft Office was not found!, [de] Es wurde keine Office-Installation gefunden
MsOfficeVersion = [en] The Microsoft Office Version, [de] Die Microsoft Office Version
MsOutlookNotFound = [en] Microsoft Outlook was nou found!, [de] Microsoft Outlook wurde nicht gefunden!
MsOutlookVersion = [en] The Microsoft Outlook Version, [de] Die Microsoft Outlook Version
MsWordNotFound = [en] Microsoft Word was not found!, [de] Microsoft Word wurde nicht gefunden!
MsWordVersion = [en] The Microsoft Word Version, [de] Die Microsoft Word Version
Msg
   ↪ Cache
     ↪ Already
       ↪ Clear = [en] Cache ist bereits geleert, [de] Cache ist bereits geleert
   ↪ Clear
     ↪ Cache = [en] Cache wurde erfolgreich geleert!Entfernte Einträge:, [de] Cache wurde erfolgreich geleert!Entfernte Einträge:
   ↪ No
     ↪ Right
       ↪ Blank = [en] You do not have right to {0} any {1}, [de] Sie haben keine Berechtigung, eine {0} zu {1}
       ↪ Other
         ↪ Blank = [en] You do not have right to {0} any {1} from another user, [de] Sie haben keine Berechtigung, eine {0} anderer Nutzer zu {1}
Negotiable = [en] Negotiable, [de] Verhandelbar
New
   ↪ Rule = [en] nnew rule, [de] neue Regel
     ↪ Table = [en] new rule table, [de] neue Regeltabelle
     ↪ Type = [en] new rule type, [de] neuer Regeltyp
No
   ↪ Admission
     ↪ Cause
       ↪ Found = [en] Admission cause is not set, [de] Aufnahmeanlass ist nicht gesetzt
     ↪ Date
       ↪ Found = [en] Admission date is not set, [de] Aufnahmedatum des Falles ist nicht gesetzt
     ↪ Mode
       ↪ Found = [en] Admission mode is not set, [de] Erbringungsart des DRG - Falles wurde ist nicht gesetzt
     ↪ Reason34
       ↪ Found = [en] Admission reason 34 is not set, [de] Aufnahmegrund 34 ist nicht gesetzt
     ↪ Reason
       ↪ Found = [en] Admission reason 12 is not set, [de] Aufnahmegrund 12 ist nicht gesetzt
   ↪ Case
     ↪ Details
       ↪ Found = [en] Case details is not found, [de] Falleigenschaften des Falles sind nicht vorhanden
   ↪ Category = [en] No category, [de] Keine Kategorie
   ↪ Deparment
     ↪ Admmision
       ↪ Date = [en] Admission date of the not admission department is not set, [de] Aufnahmedatum der nicht aufnehmenden Bewegung ist nicht gesetzt
   ↪ Department
     ↪ Coded = [en] There are no departments in case coded, [de] Im Fall sind keine Bewegungen gesetzt
     ↪ Discharge
       ↪ Date = [en] Discharge date of the not discharge department is not set, [de] Entlassungsdatum der nicht entlassenden Bewegung ist nicht gesetzt
   ↪ Discharge
     ↪ Date
       ↪ Found = [en] Discharge date is not set, [de] Entlassungsdatum des Falles ist nicht gesetzt
     ↪ Reason3
       ↪ Found = [en] Discharge reason 3 is not set, [de] Entlassungsgrund 3 des Falles ist nicht gesetzt
     ↪ Reason
       ↪ Found = [en] Discharge reason 12 is not set, [de] Entlassungsgrund 12 des Falles ist nicht gesetzt
   ↪ Hospital
     ↪ Case = [en] Hospital case is null, [de] es wurde kein Fall an Grouper übergeben
   ↪ Rule
     ↪ Type
       ↪ Found
         ↪ 4
           ↪ Rule = [de] in der XML - Regel ist Regeltype definiert, der micht in DB gefunden ist und micht importiert wurde
             ↪ Validation = [en] Rules type is not fount in the import file. It will be created by import, [de] In der zu importierenden Datei ist der Regeltyp nicht vorhanden. Dieser wird beim Import angelegt
   ↪ Rules
     ↪ 4
       ↪ Import
         ↪ Found = [en] There are no rules in import file, [de] die Datei beinhaltet keine Regeln
   ↪ Table
     ↪ Found = [en] rule table is not found and can not be imported from file, [de] Die in der Regellogik benutzte Tabelle ist nicht in der XML und nicht in DB gefunden
       ↪ Validation = [de] Die in der Regellogik benutzte Tabelle ist  der XML nicht vorhanden
     ↪ In
       ↪ Xml
         ↪ But
           ↪ In
             ↪ Db
               ↪ Found = [en] rule table is not found in xml but in Pool, [de] Die in der Regellogik benutzte Tabelle ist nicht in der XML gefunden, aber in DB vorhanden
NoCaseResolves = [en] No Case Resolves, [de] Keine Prüfregelanschläge
NoSearchResults = [en] No search results, [de] keine Suchergebnisse
Not
   ↪ Defined
     ↪ Case
       ↪ Type = [en] Undefined type of the hospital case, [de] Typ des Falles ist unbekannt(DRG oder PEPP)
Number = [en] Number {0}, [de] Nummer {0}
NumberFormat
   ↪ Decimal = [en] ., [de] ,
OpenCase = [en] Open case, [de] Fall öffnen
OpenCases = [en] Open cases, [de] Geöffnete Fälle
OpenProcesses = [en] Open processes, [de] Geöffnete Vorgänge
Ops
   ↪ Placeholder = [en] No procedures added, [de] Keine Prozeduren hinzugefügt
OPSCode = [en] Procedure, [de] Prozedur
   ↪ Validation = [en] Invalid OPS code. Please enter a valid entry!, [de] Ungültiger OPS Code. Bitte geben Sie einen gültigen Eintrag ein!
Organ
   ↪ Body = [en] Body, [de] ganzer Körper
   ↪ Breathing = [en] Breathing, [de] Atmung
   ↪ Cardiovascula = [en] Cardiovascula, [de] Herz-Kreislauf
   ↪ Endocrine = [en] Endocrine, [de] Endokrin
   ↪ Ent = [en] Ent, [de] HNO
   ↪ Eyes = [en] Eyes, [de] Augen
   ↪ Gastrointestinal = [en] Gastrointestinal, [de] Gastrointestinal
   ↪ Gynecology = [en] Gynecology, [de] Gynäkologie
   ↪ Hematology = [en] Hematology, [de] Hämatologie
   ↪ Kidney = [en] Kidney, [de] Niere
   ↪ Musculoskeletal = [en] Musculoskeletal, [de] Muskel-Skelett
   ↪ Neurology = [en] Neurology, [de] Neurologie
   ↪ Psychosocial = [en] Psychosocial, [de] Psychosozial
   ↪ Skin = [en] Skin, [de] Haut
   ↪ Teeth = [en] Teeth, [de] Zähne
   ↪ UrinaryOrgans = [en] UrinaryOrgans, [de] Genital/Harnorgane
OriginHospital = [en] Origin Hospital Identifier, [de] IKZ einweis. KH (IKZ einweis. KH)
Patient = [en] Patient, [de] Patient
   ↪ Ignored = [en] Patient numbers ({0})  in the first step are ignored because this case is assigned to other patient, PatientNumber ({1}), [de] Patienten-Daten (Patienten-Nummer {0}) im ersten Schritt, werden ignoriert, da dieser Fall einem anderen Patienten zugeordnet ist, Patienten-Nummer ({1})
PatientCases = [en] Patient cases, [de] Patientenfälle
PatientData = [en] Patient Data, [de] Patientendaten
PatientDetails = [en] Patient Details, [de] Patient Einzelheiten
PatientFirstName = [en] First Name, [de] Vorname
PatientFullName = [en] Family name, Forename, [de] Name, Vorname
PatientLastName = [en] Last Name, [de] Nachname
PatientName = [en] Family name and forename of Patient (Patient), [de] Patientenname (Patient)
PatientNumber = [en] Patient Number (Pat.No.), [de] Patientennummer (Pat.-Nr.)
PatientSexFemale = [en] Female, [de] weiblich
PatientSexMale = [en] Male, [de] männlich
PatientSexUndefined = [de] unbestimmt
PatientSexUnknown = [en] Unknown, [de] unbekannt
PatientWeightMeasureGram = [en] Gram, [de] Gramm
PayClass = [en] PayClass, [de] Vergütungsklasse
PayGrade = [en] PayGrade, [de] Vergütungsstufe
PCCL = [en] PCCL, [de] PCCL
PEPP = [en] PEPP (PEPP), [de] PEPP (PEPP)
   ↪ Catalog = [en] PEPP catalog, [de] PEPP Katalog
     ↪ Layout = [en] Costweight full {0} for {1} days, equals {2} per day, [de] Kostengewicht gesamt {0} für {1} Tage, entspr. {2} pro Tag
   ↪ Column = [de] PEPP (PEPP)
   ↪ PayType
     ↪ CompensationClass = [en] Compensation Class, [de] Vergütungsklasse
     ↪ CompensationLevel = [en] Compensation Level, [de] Vergütungsstufe
   ↪ Text = [en] PEPP-Text, [de] PEPP-Text
PIA = [en] PIA, [de] PIA
PlaceOfReg
   ↪ BeforeBilling = [en] Before Billing, [de] Bei Rechnungsstellung
   ↪ Request = [en] Request, [de] Bei Anfrage
   ↪ RequestExtension = [en] Request Extension, [de] Anfrageerweiterung
   ↪ RequestFinalisation = [en] Request Finalisation, [de] Vorgangsabschluss
PleaseWait = [en] Please wait..., [de] Bitte warten...
Preliminar
   ↪ Proceedins
     ↪ Answer
       ↪ Deadline = [de] Frist bis zur Antwort des Vorverfahrens, der Prüfanfrage (Frist Antwort)
         ↪ Days = [de] Tage bis Antwort Vorverfahren, Antwort Vorverf. (Antwort)
         ↪ From = [de] Frist Antwort von
         ↪ To = [de] Frist Antwort bis
     ↪ Closed
       ↪ Deadline = [de] Frist bis Abschluss der MD-Prüfung (Frist MD-Abschl.)
         ↪ Days = [de] Tage bis Abschluss MD-Prüfung (Abschluss MD)
         ↪ From = [de] Frist MD-Abschl. von
         ↪ To = [de] Frist MD-Abschl. bis
Priority
   ↪ High = [en] high Priority, [de] hohe Priorität (Prio)
Proceed = [en] Do you want to proceed? (Proceed?), [de] Wollen sie fortfahren? (Fortfahren?)
Process
   ↪ Baserate
     ↪ Pepp = [en] Used baserates for IKZ {0}, [de] Verwendete Basiswert für IKZ {0}
       ↪ ValidFrom = [en] valid From, [de] Gültig von
       ↪ Validto = [en] valid to, [de] Gültig bis
       ↪ Value = [en] value, [de] Wert
     ↪ Tooltip = [en] Baserates of {0} with admission date {1}., [de] Baserates ermittelt von {0} mit dem Aufnahmedatum {1}
   ↪ Closed
     ↪ Tooltip = [en] See Details of this Process, [de] Siehe Details zu diesem Vorgang
   ↪ Completion = [en] Complete process, [de] Vorgang abschließen
     ↪ Final
       ↪ Values = [en] Values final, [de] Werte final
     ↪ Finalisation = [en] Date of finalisation, [de] Datum Abschluss
     ↪ Inital
       ↪ Values = [en] Values initial, [de] Werte initial
   ↪ Confirm = [en] Open process {0}?, [de] Vorgang {0} öffnen?
   ↪ Create
     ↪ Button = [en] Create Process new, [de] Vorgang neu anlegen
   ↪ Creation
     ↪ Title = [en] Create a new Process, [de] Neuen Vorgang erstellen
   ↪ Date = [en] Date, [de] Datum
   ↪ Deadline
     ↪ Expired = [de] Frist abgelaufen
     ↪ Open = [de] Frist offen
   ↪ Error
     ↪ Core_data = [en] One or more List(s) of core data could not be loaded for the process date {0} !No valid period of time found is set, [de] Eine oder mehrere Liste(n) mit Stammdaten konnte(n) für das Vorgangsdatum {0} nicht geladen werden.Keine gültige Zeitspanne konfiguert.
     ↪ Open = [en] Process can not be opened!, [de] Vorgang konnte nicht geöffnet werden!
   ↪ Final = [en] Final, [de] Final
     ↪ Audit
       ↪ Reasons = [en] Audit Reasons by Case Finalisation, [de] Prüfgründe des Vorgangabschlusses (Prüfgr. des Vorgangabschl.)
   ↪ Finalisation = [en] Process finalisation, [de] Vorgangsabschluss
     ↪ Closing
       ↪ Date = [en] closing date, [de] Abschlussdatum (Abschlussdatum)
         ↪ From = [en] closing date from, [de] Abschlussdatum von
         ↪ To = [en] closing date to, [de] Abschlussdatum bis
     ↪ Cw
       ↪ Care
         ↪ Diff = [en] Care CW diff (Care CW diff), [de] Pflege CW Diff (Pfl. CW Diff)
           ↪ From = [en] Care CW diff to, [de] Pfl. CW Diff von
           ↪ To = [en] Care CW diff to, [de] Pfl. CW Diff bis
         ↪ Final = [en] Care CW final (Care CW final), [de] Pflege CW Final (Pfl. CW Final)
           ↪ From = [en] Care CW final to, [de] Pfl. CW Final von
           ↪ To = [en] Care CW final from, [de] Pfl. CW Final bis
         ↪ Initial = [en] Care CW initial (initial), [de] Pflege CW Initial (Pfl. CW Initial)
           ↪ From = [en] Care CW initial from, [de] Pfl. CW Initial von
           ↪ To = [en] Care CW initial to, [de] Pfl. CW Initial bis
       ↪ Diff = [en] CW diff (CW diff), [de] CW Diff (CW Diff)
         ↪ From = [en] CW diff from, [de] CW Diff von
         ↪ To = [en] CW diff to, [de] CW Diff bis
       ↪ Final = [en] CW final (CW final), [de] CW Final (CW Final)
         ↪ From = [en] CW final from, [de] CW Final von
         ↪ To = [en] CW final to, [de] CW Final bis
       ↪ Initial = [en] CW initial (initial), [de] CW Initial (CW Initial)
         ↪ From = [en] CW initial from, [de] CW Initial von
         ↪ To = [en] CW initial to, [de] CW Initial bis
     ↪ Drg
       ↪ Final = [en] DRG final (DRG final), [de] DRG Final (DRG Final)
       ↪ Initial = [en] DRG initial (DRG initial), [de] DRG Initial (DRG Initial)
     ↪ Error
       ↪ NoMainReviewCause = [en] No main audit reason is set., [de] Es wurde kein Hauptprüfgrund angegeben.
     ↪ Los
       ↪ Diff = [en] Los diff (Los diff), [de] VWD Diff (VWD Diff)
         ↪ From = [en] Los diff from, [de] VWD Diff von
         ↪ To = [en] Los diff to, [de] VWD Diff bis
       ↪ Final = [en] Los final (Los Final), [de] VWD Final (VWD Final)
         ↪ From = [en] Los final from, [de] VWD Final von
         ↪ To = [en] Los final to, [de] VWD Final bis
       ↪ Initial = [en] Los initial (Los initial), [de] VWD Initial (VWD Initial)
         ↪ From = [en] Los initial from, [de] VWD Initial von
         ↪ To = [en] Los initial to, [de] VWD Initial bis
     ↪ MainCase
       ↪ Storno = [en] Process is closed without comparison because base case is canceled, [de] Vorgang wird ohne Vergleich geschlossen, da der Basisfall storniert ist.
     ↪ NoRight = [en] No authorization for process completion, [de] Keine Berechtingung zum Vorgangabschloss.
     ↪ Penalty
       ↪ Fee = [de] Strafzahlung (Strafzahlung)
         ↪ From = [de] Strafzahlung von
         ↪ To = [de] Strafzahlung bis
     ↪ Proceed = [en] Is the process still to be completed?, [de] Soll der Vorgang trotzdem abgeschlossen werden?
     ↪ Readonly
       ↪ Message = [en] Process completion opens in read-only mode, [de] Vorgangsabschluss wird im schreibgeschützten Modus geöffnet.
       ↪ Reason = [en] The reason for this: {0}, [de] Der Grund dafür: {0}
     ↪ Result = [en] process result, [de] Vorgangsergebnis
       ↪ Delta = [en] Res. Delta (Result delta), [de] Ergebnis Delta (Erg. Delta)
         ↪ From = [en] Res. delta from, [de] Erg. Delta von
         ↪ To = [en] Res. delta to, [de] Erg. Delta bis
       ↪ Delte = [en] Result Delta, [de] Result Delta
     ↪ Results = [en] Process results, [de] Vorgangsergebnisse
     ↪ Revenue
       ↪ Diff = [en] Revenue diff, [de] Erlös Diff
         ↪ From = [en] Revenue Diff from, [de] Erlös Diff von
         ↪ To = [en] Revenue Diff to, [de] Erlös Diff bis
       ↪ Final = [en] Revenue Final, [de] Erlös Final
         ↪ From = [en] Revenue Final from, [de] Erlös Final von
         ↪ To = [en] Revenue Final to, [de] Erlös Final bis
       ↪ Init = [en] Revenue Initial, [de] Erlös Initial
         ↪ From = [en] Revenue Initial from, [de] Erlös Initial von
         ↪ To = [en] Revenue Initial to, [de] Erlös Initial bis
       ↪ Initial = [en] Revenue Initial, [de] Erlös Initial
     ↪ Risk = [en] risk, [de] Risiko
     ↪ Saved
       ↪ Money = [en] Saved money (Saved money in €), [de] Verlustvolumnen in € (Verlustvol.)
         ↪ From = [en] Saved money from, [de] Verlustvol. von
         ↪ To = [en] Saved money to, [de] Verlustvol. bis
     ↪ Supplfee
       ↪ Diff = [en] Supplfee diff (Supplfee), [de] ZE Diff (ZE Diff)
         ↪ From = [en] Supplfee diff from, [de] ZE Diff von
         ↪ To = [en] Supplfee diff to, [de] ZE Diff bis
       ↪ Final = [en] Supplfee final (Supplfee final), [de] ZE Final (ZE Final)
         ↪ From = [en] Supplfee final from, [de] ZE Final von
         ↪ To = [en] Supplfee final to, [de] ZE Final bis
       ↪ Initial = [en] Supplfee initial (Supplfee initial), [de] ZE Initial (ZE Initial)
         ↪ From = [en] Supplfee initial from, [de] ZE Initial von
         ↪ To = [en] Supplfee initial to, [de] ZE Initial bis
     ↪ Version
       ↪ Comparison
         ↪ Notallowed = [de] Vergleich der Version(en) ist nicht möglich, da der Basisfall storniert ist.
       ↪ Select = [en] Version selection for process finalisation (Select Version), [de] Versionen für Fallabschluss auswählen (Version auswählen)
   ↪ Initial = [en] Initial, [de] Initial
   ↪ Inka
     ↪ Key = [de] INKA Sclüssel (INKA Schl.)
   ↪ Kain
     ↪ Date
       ↪ Benefit
         ↪ Law
           ↪ Decision = [de] KAIN Datum der Entscheidung (Entsch. Datum)
             ↪ From = [de] Entsch. Datum von
             ↪ To = [de] Entsch. Datum bis
     ↪ Key = [de] KAIN Schlüssel (KAIN Schl.)
   ↪ List
     ↪ DateFormat = [en] dd/MM/yyyy HH:mm:ss, [de] dd.MM.yyyy HH:mm:ss
   ↪ MainCase
     ↪ Error = [en] MainCase of the process is null. Please add main case to this process!!, [de] Hauptfall des Vorgangs ist nicht gesetzt. Bitte fügen Sie einen Hauptfall zu diesem Vorgang hinzu!
   ↪ ModificationUser = [en] last Issuer of process (change of), [de] Letzter Bearbeiter des Vorganges (Änderung von)
     ↪ Last = [de] Letzter Bearbeiter des Vorganges (Änderung von)
   ↪ Number = [en] Process No., [de] Vorgangs-Nr.
   ↪ Review
     ↪ Completion
       ↪ Deadline
         ↪ Date = [de] Frist bis zu dem Abschluß des Erörterungsverfahrens (EV Abschlußfrist)
           ↪ From = [de] EV Abschlußfrist von
           ↪ To = [de] EV Abschlußfrist bis
         ↪ Days = [de] Tage bis Abschluß EV (EV Abschluß)
     ↪ Deadline
       ↪ Answer
         ↪ Insurance
           ↪ Date = [de] Frist für die Krankenasse eine Antwort zu EV zu geben (EV Antwortfrist KK)
             ↪ From = [de] EV Antwortfrist KK von
             ↪ To = [de] EV Antwortfrist KK bis
           ↪ Days = [de] Tage für Antwort der KK (EV Antwort KK)
       ↪ Date = [de] Frist bis zu dem Start des Erörterungsverfahrens (EV Frist bis)
         ↪ From = [de] EV Frist bis von
         ↪ To = [de] EV Frist bis bis
       ↪ Days = [de] Tage bis zu Ende des Fristes für Starten EV (EV Start)
       ↪ Extended
         ↪ Date = [de] Verlängerte Frist für das Starten des Erörterungsverfahrens (EV Fristverl.)
           ↪ From = [de] EV Fristverl. von
           ↪ To = [de] EV Fristverl. bis
         ↪ Days = [de] Tage bis zum Ende des verlängerten Fristes für Starten EV (EV Startverl.)
       ↪ Send
         ↪ On
           ↪ Date = [de] Nachsendefrist der angefordenten Dokumenten bei EV bis (EV Nachsendefrist)
             ↪ From = [de] EV Nachsendefrist von
             ↪ To = [de] EV Nachsendefrist bis
           ↪ Days = [de] Tage für Nachsenden der Unterlagen EV (EV Unterlagen)
   ↪ Select
     ↪ Task = [en] Select next task, [de] Nächste Aufgabe wählen
   ↪ Status
     ↪ Close = [en] Close process, [de] Vorgang schließen
     ↪ Closed = [en] Process is closed, [de] Vorgang wurde geschlossen
     ↪ Open = [en] Process is open, [de] Vorgang wird bearbeitet
     ↪ Reminder = [en] Status of Reminder (WV Status), [de] Status der Wiedervorlage (WV Status)
       ↪ Closed = [en] closed, [de] abgearbeitet
       ↪ Open = [en] open, [de] offen
     ↪ Reopen = [en] Reopen process, [de] Vorgang neu öffnen
     ↪ Reopened = [en] Process is reopened, [de] Vorgang wurde wieder geöffnet
   ↪ SubjectChanged
     ↪ Tooltip = [en] See Details of this Process, [de] Siehe Details zu diesem Vorgang
   ↪ Topic = [en] Process Topic, [de] Vorgangsart (Vorgangsart)
   ↪ Topics = [en] Process topics, [de] Vorgangsarten
   ↪ User = [en] User assigned the task for editing (Editor), [de] Vorgangsbearbeiter (Bearbeiter)
   ↪ UserChanged
     ↪ Tooltip = [en] See Details of this Process, [de] Siehe Details zu diesem Vorgang
ProcessDoesNotExist = [en] Process does not exist, [de] Der Vorgang wurde nicht gefunden
ProcessDoesNotExistWithReason = [en] Process with ID {0} does not exist. Maybe this process was already deleted by another user meantime., [de] Der Vorgang mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.
ProcessEditing = [en] Process editing..., [de] Vorgangsbearbeitung...
ProcessPreview
   ↪ Answer = [en] Preliminary Proceedings Answer Deadline, [de] Frist Vorverfahren Antwort
   ↪ AuditCompletion = [en] MD Audit Completion Deadline, [de] Frist Abschluss der MD-Prüfung
   ↪ AuditReasons = [en] Audit Resons, [de] Prüfgründe (Prüfgründe)
   ↪ BillCorr = [en] MD Bill Correction Deadline, [de] Frist MD-Rechnungskorrektur
   ↪ CaseNo = [en] Case No., [de] Fallnummer
   ↪ Closed = [en] Preliminary Proceedings Closed Deadline, [de] Frist Vorverfahren-Abschluss
   ↪ DataRecCorrection = [en] Data Record Correction Deadline, [de] Frist Datensatzkorrektur
   ↪ Deadlines = [en] Deadlines, [de] Fristen
   ↪ DocDeliver = [en] MD Document Deliver Deadline, [de] Abgabefrist Unterlagen
   ↪ ProcessStatus = [en] Status, [de] Status
   ↪ ProcessTopic = [en] Process Topic, [de] Vorgangsart
   ↪ RequestType = [en] Request type, [de] Anfragetyp
ProcessStartDate = [en] Process start date (Start date), [de] Anlagedatum des Vorganges (Vorgangsdatum)
   ↪ From = [en] Start date from, [de] Anlagedatum von
   ↪ To = [en] Start date to, [de] Anlagedatum bis
ProcessType
   ↪ Hospital = [de] Krankenhaus
   ↪ Insurance = [de] Krankenkasse
Processes = [en] Processes, [de] Vorgänge
   ↪ Availablity = [en] List of available Processes, [de] Liste der verfügbaren Vorgänge
     ↪ Dialog = [en] Available Processes, [de] Vorhandene Vorgänge
Processlist
   ↪ Csv
     ↪ Export
       ↪ Diag = [en] Processlist is exporting as CSVdocumentation.menu.isActive=Is active:, [de] Vorgangliste wird als CSV exportiert
   ↪ Excel
     ↪ Export
       ↪ Diag = [en] Processlist is exporting as Excel, [de] Vorgangliste wird als Excel exportiert
PromptTextfieldText = [en] Search events, [de] Suchtext eingeben
PSY = [en] Psychosomatic, [de] Psychosomatik
Quarter
   ↪ 1 = [en] Q1, [de] Q1
   ↪ 2 = [en] Q2, [de] Q2
   ↪ 3 = [en] Q3, [de] Q3
   ↪ 4 = [en] Q4, [de] Q4
QuotaList = [en] Quota List, [de] Prüfquotenliste
Readmission = [en] Readmission, [de] Wiederaufnahme
Readonly
   ↪ Doc
     ↪ Item
       ↪ Aop = [en] AOP, [de] AOP
         ↪ File
           ↪ Name = [en] AOP-Katalog_, [de] AOP-Katalog_
       ↪ Dkr
         ↪ Drg = [en] Deutsche Kodierrichtlinien DRG, [de] Deutsche Kodierrichtlinien DRG
           ↪ File
             ↪ Name = [en] Deutsche_Kodierrichtlinien_Version_, [de] Deutsche_Kodierrichtlinien_Version_
         ↪ Pepp = [en] Deutsche Kodierrichtlinien PEPP, [de] Deutsche Kodierrichtlinien PEPP
           ↪ File
             ↪ Name = [en] DKR-Psych_Version_, [de] DKR-Psych_Version_
       ↪ Help = [en] Handbuch, [de] Handbuch
         ↪ File
           ↪ Name = [en] hilfefunktion_cpx, [de] hilfefunktion_cpx
       ↪ Md
         ↪ Recomendation = [en] MD Empfehlungen, [de] MD Empfehlungen
           ↪ File
             ↪ Name = [en] MD_Kodierempfehlungen, [de] MD_Kodierempfehlungen
       ↪ Ward
         ↪ Compecating
           ↪ Therapy = [en] Stationsersetzende Behandlungsmethoden, [de] Stationsersetzende Behandlungsmethoden
             ↪ File
               ↪ Name = [en] Stationsersetzende_Behandlungsmethoden, [de] Stationsersetzende_Behandlungsmethoden
Reminder
   ↪ Assigned
     ↪ Tooltip = [en] See the details of a Reminder, [de] Siehe die Details einer Wiedervorlage
   ↪ Changed
     ↪ Tooltip = [en] See the details of a Reminder, [de] Siehe die Details einer Wiedervorlage
   ↪ Comment = [en] REM Comment, [de] WV Kommentar (WV Kommentar)
   ↪ Create = [en] create Reminder, [de] Wiedervorlage erstellen
   ↪ Created
     ↪ Tooltip = [en] See the details of a Reminder, [de] Siehe die Details einer Wiedervorlage
   ↪ CreationDate = [en] REM created, [de] WV angelegt
   ↪ Duedate
     ↪ IsBlank = [en] not set, [de] nicht gesetzt
   ↪ Expired
     ↪ Tooltip = [en] See the details of a Reminder, [de] Siehe die Details einer Wiedervorlage
   ↪ Finished = [en] Reminder has been Finished (Finished reminders), [de] abgearbeitet (Wiedervorlage abgearbeitet)
   ↪ FinishedDate = [en] Finished Date, [de] Abgearbeitet am
   ↪ FinishedStatus = [en] finished, [de] abgearbeitet
   ↪ HighPriority = [en] high Priority, [de] hohe Priorität
   ↪ Latest = [en] latest open Reminder (latest Reminder), [de] Fälligkeitsdatum der offenen Wiedervorlage (WV Fälligkeit)
     ↪ From = [en] Reminder from, [de] Fällig von
     ↪ To = [en] Reminder to, [de] Fällig bis
   ↪ Mode
     ↪ Show
       ↪ All = [en] All reminders, [de] alle Wiedervorlagen
       ↪ Closed = [en] Closed reminders, [de] abgearbeitete Wiedervorlagen
       ↪ Open = [en] Open reminders, [de] offene Wiedervorlagen
   ↪ Receiver = [en] REM Receiver, [de] WV Empfänger (WV Empfänger)
   ↪ Removed
     ↪ Tooltip = [en] See the details of a Reminder, [de] Siehe die Details einer Wiedervorlage
   ↪ Sender = [en] REM Sender, [de] WV Sender
   ↪ Subject = [en] Reminder, [de] WV Art (WV Art)
   ↪ Subjects = [en] Reminders, [de] Wiedervorlagearten (WV Arten)
   ↪ Type = [en] REM type, [de] Art der Wiedervorlage
   ↪ UnfinishedStatus = [en] open, [de] offen
   ↪ UpdateHeader = [en] Update Reminder, [de] Wiedervorlage aktualisieren
   ↪ User
     ↪ IsBlank = [en] not assigned, [de] nicht zugewiesen
   ↪ Validation
     ↪ Error
       ↪ NoValidReceiver = [en] WV Empfänger nicht vorhanden, [de] WV Empfänger nicht vorhanden
     ↪ Warning
       ↪ NoReceiver = [en] Kein WV Empfänger eingetragen, [de] Kein WV Empfänger eingetragen
ReminderSubject
   ↪ WaitingForMdkReport = [en] Waiting for MD report, [de] Warten auf MD-Gutachten
Reminders = [en] Reminders, [de] Wiedervorlagen
Rename = [en] Rename, [de] Umbenennen
Report
   ↪ Cancelled = [en] Report Generation is Cancelled, [de] Berichtsgenerierung wird abgebrochen
   ↪ Dialog
     ↪ ContentText = [en] Report is Generating, [de] Report wird generiert
     ↪ HeaderText = [en] Note, [de] Hinweis
   ↪ Failed = [en] Report Generation is Failed, [de] Berichtsgenerierung ist fehlgeschlagen
   ↪ FileChooser
     ↪ Tile = [en] Create PDF documentation, [de] PDF-Dokumentation erstellen
   ↪ Generate = [en] Create report, [de] Report erstellen
   ↪ Open = [en] Show report, [de] Report anzeigen
   ↪ SaveAndOpen = [en] Save report, [de] Report speichern
Request
   ↪ Added
     ↪ Tooltip = [en] Update this Request, [de] Aktualisieren Sie diese Anfrage
   ↪ Create = [en] create Request, [de] Anfrage erstellen
   ↪ CreationDate = [en] Request Creation Date (Creation Date), [de] Anlagedatum der Anfrage (Anlagedatum)
   ↪ Status = [en] Request State, [de] Status der Anfrage (Anfr.-Status)
RequestReportDate = [en] Report date, [de] Gutachtendatum (Guta.-Datum)
RequestReportDateFrom = [en] Report date from, [de] Gutachtendatum von
RequestReportDateTo = [en] Report date to, [de] Gutachtendatum bis
RequestType = [de] Anfragetyp
   ↪ EV = [de] Erörterungsverfahren
   ↪ Examination = [en] Examination/Pre-trial Request, [de] Prüfanfrage/Vorverfahren
   ↪ Insurance = [en] Insurance, [de] Versicherung
   ↪ InsuranceAssociation = [en] Insurance Association, [de] Berufsgenossenschaft
   ↪ Mdk = [en] MD, [de] Medizinischer Dienst
   ↪ Other = [en] Other, [de] Sonstiges
Result = [en] Ergebnis, [de] Ergebnis
Revenue = [en] Revenue, [de] Erlös
   ↪ Math
     ↪ Drg
       ↪ Care = [en] care CW {0} x Care-Baserate {1}, [de] PflegeCW {0} x Pflege-Baserate {1}
         ↪ Grade = [en] Care-Baserate {0} from {1} to {2}: {3} Days = {4}, [de] Pflege-Baserate {0}{1} von {2} bis {3}: {4} Tage
           ↪ Layout = [de] Pflege-Erlös: bei PflegeCW {0} (CW pro Tag {1} x {2} Tag(e))
           ↪ LayoutCare-Revenue = [en] for CareCW {0} (CW in day {1} x {2} days), [de] for CareCW {0} (CW in day {1} x {2} days)
         ↪ Layout = [en] Care-Revenue: (Care-Baserate {0}{1} x CareCW {2}) x CareDay(s) {3}, [de] Pflege-Erlös: (Pflege-Baserate {0}{1} x PflegeCW {2}) x Pflegetage {3}
       ↪ Case = [en] eff. CW {0} x Drg-Baserate {1}, [de] eff. CW {0} x DRG-Baserate {1}
       ↪ Catalog
         ↪ Layout = [en] Catalog-Revenue: DRG-Baserate {0}{1} x CatalogCW {2}, [de] Katalog-Erlös: DRG-Baserate {0}{1} x KatalogCW {2}
       ↪ Corr
         ↪ Deduction
           ↪ Layout = [en] Deduction: (DRG-Baserate {0}{1} x corr.CW {2}) x corr.Day(s) {3}, [de] Abschlag: (DRG-Baserate {0}{1} x korr.CW {2}) x korr.Tag(e) {3}
         ↪ Surcharge
           ↪ Layout = [en] Surcharge: (DRG-Baserate {0}{1} x corr.CW {2}) x corr.Day(s) {3}, [de] Zuschlag: (DRG-Baserate {0}{1} x korr.CW {2}) x korr.Tag(e) {3}
       ↪ Day
         ↪ Fee = [en] Day Fee {0}{1} x Day(s) {2}, [de] Entgelt-Erlös: Tagesentgelt {0}{1} x Tag(e) {2}
     ↪ Pepp
       ↪ Cwday = [en] CW in day({0}), [de] CW pro Tag({0})
       ↪ Gt2015 = [en] Compensation-Grade:  {0} (revenue=  CW in day({1}) x Baserate from {3} to {4} ({4})X  ({5}) Days, [de] Vergütungsklasse:{0}, Erlös= CW pro Tag ({1}) x Baserate von {2} bis {3}({4}) X ({5}) Tage
       ↪ Lt2015 = [en] Compensation-Level: {0} (revenue=  CW in day({1}) x Baserate from {2} to {3} ({4})X  ({5}) Days, [de] Vergütungsstufe:{0}, Erlös=CW pro Tag ({1}) x Baserate von {2} bis {3} ({4}) X ({5}) Tage
   ↪ Pepp = [de] PEPP-Erlös
     ↪ DailyDay = [de] ET-Erlös
     ↪ Supplfee = [de] ZP-Erlös
Review
   ↪ After
     ↪ Md = [de] Erörterungsverfahren nach MD-Prüfung
   ↪ Answered
     ↪ Date = [de] geantwortet am
   ↪ Audit
     ↪ Reasons = [de] Prüfgründe
   ↪ Comment = [de] Kommentar
   ↪ Completed
     ↪ Date = [de] abgeschloßen am
   ↪ Completion = [de] Abschluß EV
     ↪ Deadline
       ↪ Date = [de] Abschlußfrist bis
   ↪ Deadline
     ↪ Answer
       ↪ Insurance
         ↪ Date = [de] Antwortfrist KK
     ↪ Date = [de] EV Frist bis
     ↪ Extended
       ↪ Date = [de] EV Fristverlängerung
     ↪ Send
       ↪ On
         ↪ Date = [de] Nachsendefrist bis
   ↪ Expertise
     ↪ Date = [de] Gutachtendatum
     ↪ In
       ↪ Date = [de] Eingang Gutachten
   ↪ Insurance
     ↪ Name = [de] Versicherungsname
     ↪ Number = [de] IKZ der Versicherung
     ↪ Worker = [de] Bearbeiter
   ↪ Md
     ↪ Name = [de] MD-Name
     ↪ Worker = [de] Bearbeiter
   ↪ Reminder = [de] Wiedervorlage
   ↪ Request
     ↪ Status = [de] Status der Anfrage
   ↪ Send
     ↪ On
       ↪ Documents = [de] Nachsenden der Dokumenten EV
   ↪ Sent
     ↪ Date = [de] gesendet am
   ↪ Start
     ↪ Audit
       ↪ Insurance = [de] Einleitung Prüfverfahren Kasse
       ↪ Md = [de] Einleitung MD-Prüfung
     ↪ Date = [de] eingeleitet
   ↪ UpdateRequestWindow = [de] Anfrage aktualisieren (Erörterungsverfahren)
RiskArea = [en] Riskarea (R.A), [de] Prüfbereich (Prüfbr.)
   ↪ CaseMerge = [en] Case merging, [de] Fallzusammenführung
   ↪ DrgPepp = [en] DRG/PEPP, [de] DRG/PEPP
   ↪ MainDiagnoses = [en] Main diagnoses, [de] Hauptdiagnose
   ↪ Other = [en] Other, [de] Sonstiges
   ↪ OtherFeeSurcharge = [en] Other Fees and Surcharges, [de] Sonstige Entgelte und Zuschläge
   ↪ PrimaryMisalloc = [en] Primary misallocation, [de] Primäre Fehlbelegung
   ↪ Procedures = [en] Procedures, [de] Prozeduren
   ↪ SecondaryDiagnosis = [en] Secondary diagnosis, [de] Nebendiagnosen
   ↪ SecondaryMisalloc = [en] Secondary misallocation (Length of stay), [de] Sekundäre Fehlbelegung (VWD)
Risk
   ↪ Editor
     ↪ Risk
       ↪ Audit
         ↪ Value = [en] Audit-Risk (A.-R.), [de] Anfrage-Risiko (Anfr.-R.)
       ↪ Waste
         ↪ Default
           ↪ Value = [en] Deficit-Value (D.-V.), [de] Verlustwert (Verl.-W.)
         ↪ Value = [en] Deficit-Risk (D.-R.), [de] Verlust-Risiko (Verl.-R.)
   ↪ Percent
     ↪ Total = [en] Risk in %, [de] Risiko in %
       ↪ Equal = [en] Risk in %, [de] Risiko in %
       ↪ From = [en] Risk in % from, [de] Risiko in % von
       ↪ To = [en] Risk in % to, [de] Risiko in % bis
   ↪ PlaceOfReg = [en] Place of risk registration, [de] Ort der Risikoerfassung
   ↪ Value
     ↪ Total = [en] Risk in €, [de] Risiko in €
       ↪ Equal = [en] Risk in €, [de] Risiko in €
       ↪ From = [en] Risk in € from, [de] Risiko in € von
       ↪ To = [en] Risk in € to, [de] Risiko in € bis
Roles = [en] Roles, [de] Rollen
RowNum = [en] Row Number (Row), [de] Zeilennummer (Zeile)
   ↪ From = [en] Row Number von, [de] Zeilennummer von
   ↪ To = [en] Row Number bis, [de] Zeilennummer bis
Rule
   ↪ Calculation = [en] Calculation, [de] Berechnung
   ↪ Check
     ↪ Code
       ↪ Error = [en] Error on validation of code {0}, [de] Fehler beim Prüfung des Codes {0}
   ↪ Codes
     ↪ 4
       ↪ Year
         ↪ Not
           ↪ Valid = [en] Values {0} for the year {1} are not valid, [de] Die Werte {0} für das Jahr {1} müssen angepasst werden
   ↪ Column
     ↪ Caption = [en] caption (caption), [de] Bezeichnung (Bezeichnung)
     ↪ Category = [en] category (category), [de] Kategorie (Kategorie)
     ↪ Ident = [en] ident number (ident number), [de] Identnummer (Identnummer)
     ↪ Message = [en] rule error (!), [de] Regelfehler (!)
     ↪ Number = [en] rule number (rule number), [de] Regelnummer (Regelnummer)
     ↪ Relevace = [de] Relevanz (Relevanz)
     ↪ Rule
       ↪ Not
         ↪ Selected = [de] Irrelevant (Irrelevant)
       ↪ Selected = [de] Relevant (Relevant)
     ↪ Status = [en] Error type (Error type), [de] Fehlerart (Fehlerart)
     ↪ Suggestion = [en] suggestion (suggestion), [de] Vorschlag (Vorschlag)
     ↪ Type = [en] type (type), [de] Typ (Typ)
   ↪ Delta
     ↪ Revenue = [en] Delta revenue, [de] Erlös Delta
   ↪ Estimated = [en] Estimated, [de] Geschätztes
   ↪ Filter
     ↪ Button
       ↪ Text = [de] Regelfilter
     ↪ Dialog
       ↪ AllRulesSelection = [de] Alle selektieren
       ↪ ErrorRules = [de] Fehler
       ↪ InformationRules = [de] Information
       ↪ Pool = [de] Regelpool
       ↪ PoolYear = [de] Jahr
       ↪ ResetButton = [de] Zurücksetzen
       ↪ RuleCategory = [de] Kategorie
       ↪ RuleDescription = [de] Bezeichnung
       ↪ RuleErrorStatus = [de] Status
       ↪ RuleIdent = [de] Ident-Nummer
       ↪ RuleNumber = [de] Nummer
       ↪ RuleSuggestion = [de] Vorschlag
       ↪ RuleType = [de] Typ
       ↪ WarningRules = [de] Warnung
   ↪ Has
     ↪ Errors = [en] rule has a validation error, [de] Regel hat Validierungsfehler
   ↪ Message
     ↪ Catalog
       ↪ Transfer
         ↪ Dialog
           ↪ Warning = [en] There are still errors regarding the catalog transfer from {0} to {1} present in this rule.If this rule is saved, these errors will not be shown again!Save anyway?, [de] In der Regel befinden sich noch potenzielle Fehler aus der Prüfung mit den Überleitungstabellen {0} zu {1}.Durch den Speicher-Vorgang akzeptieren Sie diese Fehler und im weiteren werden diese nicht mehr angezeigt!Trotzdem speichern?
   ↪ No
     ↪ Content
       ↪ Found = [en] Rule has no content, [de] Regel hat kein Rumpf
   ↪ Result = [en] Rules result, [de] Ergebnis der Regel
   ↪ Sugg
     ↪ Condition
       ↪ Not
         ↪ Complete = [en] Suggestion term is not complete, no value set in the WHEN - condition, [de] Der Wert ist in WENN-Bedingung nicht gesetzt, Vorschlagsterm ist nicht vollständig
     ↪ Term
       ↪ Not
         ↪ Complete = [en] Suggestion term is not complete, no value set, [de] Vorschlasterm ist nicht vollständig
   ↪ Table
     ↪ Codes
       ↪ Not
         ↪ Valid = [en] The rule table {0} contains invalide codes {1}, [de] Die Tabelle {0} enthält nicht valide Code(s) {1}
     ↪ Comment
       ↪ Tooltip = [en] "Comment to the table content", [de] "Notiz zu Tabellennihalt"
     ↪ Content = [en] Table content, [de] Tabelleninhalt
     ↪ Has
       ↪ Errors = [en] rule table has a validation error, [de] Regeltable hat Validierungsfehler
     ↪ Message
       ↪ Catalog
         ↪ Transfer
           ↪ Dialog
             ↪ Warning = [en] There are still errors regarding the catalog transfer from {0} to {1} present in this rule table.If this rule table is saved, these errors will not be shown again!Save anyway?, [de] In der Regeltabelle befinden sich noch potenzielle Fehler aus der Prüfung mit den Überleitungstabellen {0} zu {1}.Durch den Speicher-Vorgang akzeptieren Sie diese Fehler und im weiteren werden diese nicht mehr angezeigt!Trotzdem speichern?
     ↪ Note = [en] Table comment, [de] Tabellennotiz
   ↪ Term
     ↪ Not
       ↪ Complete = [en] Rule term is not complete, [de] Regelterm ist nicht vollständig
   ↪ Type
     ↪ Found
       ↪ In
         ↪ Db = [en] rule type foung in database, [de] Regeltyp gefunden in DB
     ↪ Imported = [en] rule type imported, [de] Regeltyp importiert
     ↪ Not
       ↪ Found = [en] rule type is not found, [de] Regeltyp is nicht gefunden
     ↪ Other
       ↪ Display
         ↪ Text = [de] Regeltyp is nicht gefunden
   ↪ Validation
     ↪ Check
       ↪ Catalog
         ↪ Transfer
           ↪ Table = [en] check with transfer tables, [de] gegen den Überleitungstabellen prüfen
     ↪ Code
       ↪ Error = [en] eror in code, [de] Fehler in Code
     ↪ No
       ↪ Value = [en] no value found, [de] kein Wert gefunden
     ↪ Rule
       ↪ No
         ↪ Content = [en] rule is empty, [de] die Regel hat keine Inhalt
       ↪ Not
         ↪ Valid = [en] rules syntax is erroneous, [de] Regelsyntax ist fehlerhaft
       ↪ Without
         ↪ Tables = [en] tables for rule not found, [de] Regeltabellen für die Regel sind nicht vorhanden
     ↪ Sugg
       ↪ Check
         ↪ Both = [en] check suggestion and condition, [de] Regelvorschlag und Bedignung prüfen
       ↪ No
         ↪ Value = [en] suggestion is not complete, [de] Regelvorschlag ist nicht vollständig
     ↪ Value
       ↪ Not
         ↪ In
           ↪ Catalog = [en] Code value is not fount in catalog, [de] der Wert ist nicht im Katalog
     ↪ Year
       ↪ Not
         ↪ Valid = [en] rule year is not valid, [de] Das Jahr ist nicht gültig
   ↪ Wl = [en] Rule Editor Working List, [de] Rule Editor Working List
RuleList = [en] Rule List, [de] Regelliste
Rules
   ↪ 01
     ↪ Bpflv = [en] 01 - BPflV, [de] 01 - BPflV
   ↪ 02
     ↪ Drg
       ↪ Anlage
         ↪ 1 = [en] 02 - DRG Anlage 1, [de] 02 - DRG Anlage 1
   ↪ 03
     ↪ Nub = [en] 03 - NUB, [de] 03 - NUB
   ↪ 04
     ↪ Sonstige
       ↪ Entgelte
         ↪ Anlage = [en] 04 - Sonstige Entgelte Anlage, [de] 04 - Sonstige Entgelte Anlage
   ↪ 05
     ↪ Andere
       ↪ Sonstige
         ↪ Entgelte
           ↪ Besondere
             ↪ Einrichtungen = [en] 05 - andere Sonstige Entgelte / Besondere Einrichtungen, [de] 05 - andere Sonstige Entgelte / Besondere Einrichtungen
   ↪ 06
     ↪ Vorstationaer = [en] 06 - vorstationär, [de] 06 - vorstationär
   ↪ 07
     ↪ Dak
       ↪ Interne
         ↪ Entgelte = [en] 07 - DAK-interne Entgelte, [de] 07 - DAK-interne Entgelte
   ↪ 08
     ↪ Iv = [en] 08 - IV, [de] 08 - IV
   ↪ 09
     ↪ Modellvorhaben = [en] 09 - Modellvorhaben, [de] 09 - Modellvorhaben
   ↪ 0
     ↪ Unbekannt = [en] 0 - unbekannt, [de] 0 - unbekannt
   ↪ 10
     ↪ Dmp = [en] 10 - DMP, [de] 10 - DMP
   ↪ 11
     ↪ Gesonderte
       ↪ Entgelte
         ↪ Aus
           ↪ Den
             ↪ Jahren
               ↪ 20032004 = [en] 11 - gesonderte Entgelte aus den Jahren 2003/2004, [de] 11 - gesonderte Entgelte aus den Jahren 2003/2004
   ↪ 12
     ↪ Bpflv
       ↪ Ohne
         ↪ Schlussrechnung = [en] 12 - BPflV ohne Schlussrechnung, [de] 12 - BPflV ohne Schlussrechnung
   ↪ 13
     ↪ Drg
       ↪ Anlage
         ↪ 1
           ↪ Ohne
             ↪ Schlussrechnung = [en] 13 - DRG Anlage 1 ohne Schlussrechnung, [de] 13 - DRG Anlage 1 ohne Schlussrechnung
   ↪ 14
     ↪ Nub
       ↪ Ohne
         ↪ Schlussrechnung = [en] 14 - NUB ohne Schlussrechnung, [de] 14 - NUB ohne Schlussrechnung
   ↪ 15
     ↪ Sonstige
       ↪ Entgelte
         ↪ Anlage
           ↪ Ohne
             ↪ Schlussrechnung = [en] 15 - Sonstige Entgelte Anlage ohne Schlussrechnung, [de] 15 - Sonstige Entgelte Anlage ohne Schlussrechnung
   ↪ 16
     ↪ Andere
       ↪ Sonstige
         ↪ Entgelte
           ↪ Besondere
             ↪ Einrichtungen
               ↪ Ohne
                 ↪ Schlussrechnung = [en] 16 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung, [de] 16 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung
   ↪ 17
     ↪ Vorstationaer
       ↪ Ohne
         ↪ Schlussrechnung = [en] 17 - vorstationär ohne Schlussrechnung, [de] 17 - vorstationär ohne Schlussrechnung
   ↪ 18
     ↪ Dak
       ↪ Interne
         ↪ Entgelte
           ↪ Ohne
             ↪ Schlussrechnung = [en] 18 - DAK-interne Entgelte ohne Schlussrechnung, [de] 18 - DAK-interne Entgelte ohne Schlussrechnung
   ↪ 19
     ↪ Iv
       ↪ Ohne
         ↪ Schlussrechnung = [en] 19 - IV ohne Schlussrechnung, [de] 19 - IV ohne Schlussrechnung
   ↪ 1
     ↪ Maennlich = [en] 1 - männlich, [de] 1 - männlich
     ↪ Pflegestufe
       ↪ 1 = [en] 1 - Pflegestufe 1, [de] 1 - Pflegestufe 1
   ↪ 20
     ↪ Modellvorhaben
       ↪ Ohne
         ↪ Schlussrechnung = [en] 20 - Modellvorhaben ohne Schlussrechnung, [de] 20 - Modellvorhaben ohne Schlussrechnung
   ↪ 21
     ↪ Dmp
       ↪ Ohne
         ↪ Schlussrechnung = [en] 21 - DMP ohne Schlussrechnung, [de] 21 - DMP ohne Schlussrechnung
   ↪ 22
     ↪ Gesonderte
       ↪ Entgelte
         ↪ Aus
           ↪ Den
             ↪ Jahren
               ↪ 20032004
                 ↪ Ohne
                   ↪ Schlussrechnung = [en] 22 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung, [de] 22 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung
   ↪ 23
     ↪ Bpflv
       ↪ Ohne
         ↪ Schlussrechnung
           ↪ Und
             ↪ Ohne
               ↪ Entlassungsanzeige = [en] 23 - BPflV ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 23 - BPflV ohne Schlussrechnung und ohne Entlassungsanzeige
     ↪ Pflegehilfsmittel = [en] 23 - Pflegehilfsmittel, [de] 23 - Pflegehilfsmittel
   ↪ 24
     ↪ Drg
       ↪ Anlage
         ↪ 1
           ↪ Ohne
             ↪ Schlussrechnung
               ↪ Und
                 ↪ Ohne
                   ↪ Entlassungsanzeige = [en] 24 - DRG Anlage 1 ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 24 - DRG Anlage 1 ohne Schlussrechnung und ohne Entlassungsanzeige
     ↪ Pflegehilfsmittel
       ↪ Mit
         ↪ Leihweiser
           ↪ Ueberlassung = [en] 24 - Pflegehilfsmittel mit leihweiser Überlassung, [de] 24 - Pflegehilfsmittel mit leihweiser Überlassung
     ↪ Zum
       ↪ Verbrauch
         ↪ Bestimmte
           ↪ Pflegehilfsmittel = [en] 24 - zum Verbrauch bestimmte Pflegehilfsmittel, [de] 24 - zum Verbrauch bestimmte Pflegehilfsmittel
   ↪ 25
     ↪ Nub
       ↪ Ohne
         ↪ Schlussrechnung
           ↪ Und
             ↪ Ohne
               ↪ Entlassungsanzeige = [en] 25 - NUB ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 25 - NUB ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ 26
     ↪ Sonstige
       ↪ Entgelte
         ↪ Anlage
           ↪ Ohne
             ↪ Schlussrechnung
               ↪ Und
                 ↪ Ohne
                   ↪ Entlassungsanzeige = [en] 26 - Sonstige Entgelte Anlage ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 26 - Sonstige Entgelte Anlage ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ 27
     ↪ Andere
       ↪ Sonstige
         ↪ Entgelte
           ↪ Besondere
             ↪ Einrichtungen
               ↪ Ohne
                 ↪ Schlussrechnung
                   ↪ Und
                     ↪ Ohne
                       ↪ Entlassungsanzeige = [en] 27 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 27 - andere Sonstige Entgelte / Besondere Einrichtungen ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ 28
     ↪ Vorstationaer
       ↪ Ohne
         ↪ Schlussrechnung
           ↪ Und
             ↪ Ohne
               ↪ Entlassungsanzeige = [en] 28 - vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 28 - vorstationär ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ 29
     ↪ Dak
       ↪ Interne
         ↪ Entgelte
           ↪ Ohne
             ↪ Schlussrechnung
               ↪ Und
                 ↪ Ohne
                   ↪ Entlassungsanzeige = [en] 29 - DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 29 - DAK-interne Entgelte ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ 2
     ↪ Pflegestufe
       ↪ 2 = [en] 2 - Pflegestufe 2, [de] 2 - Pflegestufe 2
     ↪ Weiblich = [en] 2 - weiblich, [de] 2 - weiblich
   ↪ 30
     ↪ Iv
       ↪ Ohne
         ↪ Schlussrechnung
           ↪ Und
             ↪ Ohne
               ↪ Entlassungsanzeige = [en] 30 - IV ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 30 - IV ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ 31
     ↪ Modellvorhaben
       ↪ Ohne
         ↪ Schlussrechnung
           ↪ Und
             ↪ Ohne
               ↪ Entlassungsanzeige = [en] 31 - Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 31 - Modellvorhaben ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ 32
     ↪ Dmp
       ↪ Ohne
         ↪ Schlussrechnung
           ↪ Und
             ↪ Ohne
               ↪ Entlassungsanzeige = [en] 32 - DMP ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 32 - DMP ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ 33
     ↪ Gesonderte
       ↪ Entgelte
         ↪ Aus
           ↪ Den
             ↪ Jahren
               ↪ 20032004
                 ↪ Ohne
                   ↪ Schlussrechnung
                     ↪ Und
                       ↪ Ohne
                         ↪ Entlassungsanzeige = [en] 33 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung und ohne Entlassungsanzeige, [de] 33 - gesonderte Entgelte aus den Jahren 2003/2004 ohne Schlussrechnung und ohne Entlassungsanzeige
   ↪ 3
     ↪ Pflegestufe
       ↪ 3 = [en] 3 - Pflegestufe 3, [de] 3 - Pflegestufe 3
     ↪ Unbestimmt = [en] 3 - unbestimmt, [de] 3 - unbestimmt
   ↪ 4
     ↪ Diverse = [en] 4 - diverse, [de] 4 - divers
     ↪ Haertefall
       ↪ Pflegestufe
         ↪ 3 = [en] 4 - Härtefall (Pflegestufe 3+), [de] 4 - Härtefall (Pflegestufe 3+)
   ↪ 70
     ↪ Pflegesachleistung = [en] 70 - Pflegesachleistung, [de] 70 - Pflegesachleistung
   ↪ 71
     ↪ Pflegegeld = [en] 71 - Pflegegeld, [de] 71 - Pflegegeld
   ↪ 72
     ↪ Haeuslicher
       ↪ Beratungseinsatz = [en] 72 - häuslicher Beratungseinsatz, [de] 72 - häuslicher Beratungseinsatz
   ↪ 73
     ↪ Pflege
       ↪ Bei
         ↪ Verhinderung
           ↪ Der
             ↪ Pflegeperson = [en] 73 - Pflege bei Verhinderung der Pflegeperson, [de] 73 - Pflege bei Verhinderung der Pflegeperson
   ↪ 74
     ↪ Massnahmen
       ↪ Im
         ↪ Wohnumfeld = [en] 74 - Maßnahmen im Wohnumfeld, [de] 74 - Maßnahmen im Wohnumfeld
   ↪ 75
     ↪ Teilstationaere
       ↪ Pflege
         ↪ Tages
           ↪ Nachtpflege = [en] 75 - Teilstationäre Pflege (Tages-/ Nachtpflege), [de] 75 - Teilstationäre Pflege (Tages-/ Nachtpflege)
   ↪ 76
     ↪ Kurzzeitpflege = [en] 76 - Kurzzeitpflege, [de] 76 - Kurzzeitpflege
   ↪ 77
     ↪ Vollstationre
       ↪ Pflege = [en] 77 - Vollstationre Pflege, [de] 77 - Vollstationre Pflege
   ↪ 78
     ↪ Vollstationre
       ↪ Pflege
         ↪ Mit
           ↪ Zuschuss = [en] 78 - Vollstationre Pflege mit Zuschuß, [de] 78 - Vollstationre Pflege mit Zuschuß
   ↪ 79
     ↪ Vollstationre
       ↪ Pflege
         ↪ In
           ↪ Behinderteneinrichtung = [en] 79 - Vollstationre Pflege in Behinderteneinrichtung, [de] 79 - Vollstationre Pflege in Behinderteneinrichtung
   ↪ 7a
     ↪ Bereungsleistung
       ↪ Bis
         ↪ 30
           ↪ 06
             ↪ 2008 = [en] 7A - Bereungsleistung bis 30.06.2008, [de] 7A - Bereungsleistung bis 30.06.2008
   ↪ 7b
     ↪ Stundenweise
       ↪ Ersatzpflege = [en] 7B - stundenweise Ersatzpflege, [de] 7B - stundenweise Ersatzpflege
   ↪ 7c
     ↪ Bereungsleistung
       ↪ Maximalbetrag = [en] 7C - Bereungsleistung Maximalbetrag, [de] 7C - Bereungsleistung Maximalbetrag
   ↪ 7d
     ↪ Bereungsleistung
       ↪ Grundbetrag = [en] 7D - Bereungsleistung Grundbetrag, [de] 7D - Bereungsleistung Grundbetrag
   ↪ 7e
     ↪ Bonuszahlung
       ↪ An
         ↪ Vollstationaere
           ↪ Pflegeeinrichtungen
             ↪ Bei
               ↪ Rueckstufung = [en] 7E - Bonuszahlung an vollstationäre Pflegeeinrichtungen bei Rückstufung, [de] 7E - Bonuszahlung an vollstationäre Pflegeeinrichtungen bei Rückstufung
   ↪ 7f
     ↪ Kurzzeitpflege
       ↪ Fuer
         ↪ Kinder
           ↪ In
             ↪ Nichtvertragseinrichtungen = [en] 7F - Kurzzeitpflege für Kinder in Nichtvertragseinrichtungen, [de] 7F - Kurzzeitpflege für Kinder in Nichtvertragseinrichtungen
   ↪ 7g
     ↪ Erstberatung = [en] 7G - Erstberatung, [de] 7G - Erstberatung
   ↪ 7h
     ↪ Folgeberatung = [en] 7H - Folgeberatung, [de] 7H - Folgeberatung
   ↪ 7p
     ↪ Bewilligung
       ↪ Pflegegeld = [en] 7P - Bewilligung Pflegegeld, [de] 7P - Bewilligung Pflegegeld
   ↪ 7s
     ↪ Bewilligung
       ↪ Pflegesachleistung = [en] 7S - Bewilligung Pflegesachleistung, [de] 7S - Bewilligung Pflegesachleistung
   ↪ 9
     ↪ Unbekannt = [en] 9 - unbekannt, [de] 9 - unbekannt
   ↪ Alterinjahren = [en] AlterInJahren, [de] AlterInJahren
   ↪ Alterintagen = [en] AlterInTagen, [de] AlterInTagen
   ↪ Anzahlabteilungen = [en] AnzahlAbteilungen, [de] AnzahlAbteilungen
   ↪ Anzahlnebendiagnosen = [en] AnzahlNebendiagnosen, [de] AnzahlNebendiagnosen
   ↪ Anzahlprozeduren = [en] AnzahlProzeduren, [de] AnzahlProzeduren
   ↪ Atccode = [en] ATCCode, [de] ATCCode
   ↪ Aufenthaltkleiner24h = [en] AufenthaltKleiner24h, [de] AufenthaltKleiner24h
   ↪ Aufnahmediagnosetype = [en] AufnahmediagnoseType, [de] AufnahmediagnoseType
   ↪ Aufnehmendefachabteilung = [en] AufnehmendeFachabteilung, [de] AufnehmendeFachabteilung
   ↪ Behandelndefachabteilung = [en] BehandelndeFachabteilung, [de] BehandelndeFachabteilung
   ↪ Case
     ↪ Case
       ↪ Days = [en] Pflegetage, [de] Pflegetage
     ↪ Dates = [en] Falldaten, [de] Falldaten
     ↪ Discharge
       ↪ Date = [en] Entlassungsdatum, [de] Entlassungsdatum
     ↪ Spec = [en] Abteilung, [de] Abteilung
   ↪ Checkresult
     ↪ Typ
       ↪ Ops = [en] OPS, [de] OPS
   ↪ Col
     ↪ Adrg = [en] ADRG, [de] ADRG
     ↪ Casenr = [en] Fallnummer, [de] Fallnummer
     ↪ Opdatum = [en] Datum, [de] Datum
   ↪ Crit
     ↪ Acg
       ↪ Adg
         ↪ Codes = [en] acg_ADG_Code, [de] acg_ADG_Code
           ↪ Dis = [en] ACG: ADG-Code, [de] ACG: ADG-Code
           ↪ Tooltip = [en] 32 nicht exkluxive Gruppen. Eine ADG ist eine Morbiditätsgruppe, die Schwere und Dauer des Zustandes des Patienten beschreibt. Aggregierte diagnostischen Gruppen. Die Bausteine des ACG-Systems. Jeder ADG-Code ist eine Gruppierung von Diagnose-Codes, die ähnlich im Hinblick auf die Schwere und Wahrscheinlichkeit der Persistenz der Gesundheitszustand im Laufe der Zeit sind., [de] 32 nicht exkluxive Gruppen. Eine ADG ist eine Morbiditätsgruppe, die Schwere und Dauer des Zustandes des Patienten beschreibt. Aggregierte diagnostischen Gruppen. Die Bausteine des ACG-Systems. Jeder ADG-Code ist eine Gruppierung von Diagnose-Codes, die ähnlich im Hinblick auf die Schwere und Wahrscheinlichkeit der Persistenz der Gesundheitszustand im Laufe der Zeit sind.
             ↪ 1 = [en] Format: Alphanumerisch (Beispiel 29), [de] Format: Alphanumerisch (Beispiel 29)
         ↪ Vector = [en] acg_ADG_Vektor, [de] acg_ADG_Vektor
           ↪ Dis = [en] ACG: ADG-Vektor, [de] ACG: ADG-Vektor
           ↪ Tooltip = [en] Ein Vektor von Nullen und Einsen, um anzuzeigen, welchem ADG-Code dieser Patienten zuzuornden ist. Eine "1" in der fünften Position zeigt, dass der Patient ADG 5 zugewiesen wurde. Hinweis: ADG15 und ASG19 sind nicht mehr in Gebrauch und somit sollte immer Null sein., [de] Ein Vektor von Nullen und Einsen, um anzuzeigen, welchem ADG-Code dieser Patienten zuzuornden ist. Eine "1" in der fünften Position zeigt, dass der Patient ADG 5 zugewiesen wurde. Hinweis: ADG15 und ASG19 sind nicht mehr in Gebrauch und somit sollte immer Null sein.
             ↪ 1 = [en] Format: Alphanumerisch (Beispiel ADG0000000000100000000000001000000000), [de] Format: Alphanumerisch (Beispiel ADG0000000000100000000000001000000000)
       ↪ Age = [en] acg_alter, [de] acg_alter
         ↪ Band = [en] acg_altersgruppe, [de] acg_altersgruppe
           ↪ Dis = [en] ACG: Altersgruppe, [de] ACG: Altersgruppe
           ↪ Tooltip
             ↪ 10 = [en] 70-74, [de] 70-74
             ↪ 11 = [en] 75-79, [de] 75-79
             ↪ 12 = [en] 80-84, [de] 80-84
             ↪ 13 = [en] 85+, [de] 85+
             ↪ 2 = [en] &lt;0, [de] &lt;0
             ↪ 3 = [en] 00-04, [de] 00-04
             ↪ 4 = [en] 05-11, [de] 05-11
             ↪ 5 = [en] 12-17, [de] 12-17
             ↪ 6 = [en] 18-34, [de] 18-34
             ↪ 7 = [en] 35-44, [de] 35-44
             ↪ 8 = [en] 45-54, [de] 45-54
             ↪ 9 = [en] 55-69, [de] 55-69
         ↪ Dis = [en] ACG: Alter, [de] ACG: Alter
         ↪ Tooltip = [en] Alter aus den ACG Daten, [de] Alter aus den ACG Daten
           ↪ 1 = [en] Format: ganze Zahl (Beispiel 25), [de] Format: ganze Zahl (Beispiel 25)
       ↪ Arthritis
         ↪ Condition = [en] acg_Arthritis_vorhanden, [de] acg_Arthritis_vorhanden
           ↪ Dis = [en] ACG: Arthritis vorhanden, [de] ACG: Arthritis vorhanden
       ↪ Asthma
         ↪ Condition = [en] acg_Asthma_vorhanden, [de] acg_Asthma_vorhanden
           ↪ Dis = [en] ACG: Asthma vorhanden, [de] ACG: Asthma vorhanden
       ↪ Chronic
         ↪ Condition
           ↪ Count = [en] acg_Anzahl_chronischer_Erkrankungen, [de] acg_Anzahl_chronischer_Erkrankungen
             ↪ Dis = [en] ACG: Anzahl chronischer Erkrankungen, [de] ACG: Anzahl chronischer Erkrankungen
             ↪ Tooltip = [en] Anzahl chronischer Erkrankungen (Basis EDC-Gruppe): Ein Zählimpuls von ADGs die Triggerdiagnoses enthalten, die einen chronischen Zustand mit bedeutenden erwarteten Dauer- und Resoruceanforderungen anzeigen., [de] Anzahl chronischer Erkrankungen (Basis EDC-Gruppe): Ein Zählimpuls von ADGs die Triggerdiagnoses enthalten, die einen chronischen Zustand mit bedeutenden erwarteten Dauer- und Resoruceanforderungen anzeigen.
       ↪ Code = [en] acg_Code, [de] acg_Code
         ↪ Dis = [en] ACG: ACG-Code, [de] ACG: ACG-Code
         ↪ Tooltip = [en] Ermittelter ACG-Code für diesen Patienten. Der ACG-Code wird für jeden einzelnen Patienten zugewiesen. ACGs weisen Personen eindeutige, gegenseitig exklusive Morbiditätskategorien zu, basierend auf einem Erkrankungsmodell und auf dem erwarteten Ressourcenbedarf., [de] Ermittelter ACG-Code für diesen Patienten. Der ACG-Code wird für jeden einzelnen Patienten zugewiesen. ACGs weisen Personen eindeutige, gegenseitig exklusive Morbiditätskategorien zu, basierend auf einem Erkrankungsmodell und auf dem erwarteten Ressourcenbedarf.
           ↪ 1 = [en] Format: Alphanumerisch Beispiel(4100), [de] Format: Alphanumerisch Beispiel(4100)
       ↪ Condition
         ↪ Tooltip
           ↪ 2 = [en] NP - Zustand nicht vorhanden, [de] NP - Zustand nicht vorhanden
           ↪ 3 = [en] BTH - Erkrankung identifiziert durch ICD-und ATC-Codes, [de] BTH - Erkrankung identifiziert durch ICD-und ATC-Codes
           ↪ 5 = [en] RX - Erkrankung identifiziert durch ATC-Codes, [de] RX - Erkrankung identifiziert durch ATC-Codes
       ↪ Cost
         ↪ Band
           ↪ Tooltip
             ↪ 10 = [en] 9 - 98-99 Perzentile, [de] 9 - 98-99 Perzentile
             ↪ 2 = [en] 1 - 1-1 Perzentile, [de] 1 - 1-1 Perzentile
             ↪ 3 = [en] 2 - 11-25 Perzentile, [de] 2 - 11-25 Perzentile
             ↪ 4 = [en] 3 - 26-50 Perzentile, [de] 3 - 26-50 Perzentile
             ↪ 5 = [en] 4 - 51-75 Perzentile, [de] 4 - 51-75 Perzentile
             ↪ 6 = [en] 5 - 76-90 Perzentile, [de] 5 - 76-90 Perzentile
             ↪ 7 = [en] 6 - 91-93 Perzentile, [de] 6 - 91-93 Perzentile
             ↪ 8 = [en] 7 - 94-95 Perzentile, [de] 7 - 94-95 Perzentile
             ↪ 9 = [en] 8 - 96-97 Perzentile, [de] 8 - 96-97 Perzentile
         ↪ Tooltip
           ↪ 1 = [en] Format: Fließkommazahl Beispiel(125000,00), [de] Format: Fließkommazahl Beispiel(125000,00)
       ↪ Cri
         ↪ Tooltip
           ↪ 1 = [en] Format: Fließkommazahl (Beispiel 0,639023466), [de] Format: Fließkommazahl (Beispiel 0,639023466)
       ↪ Depression = [en] acg_Depression_vorhanden, [de] acg_Depression_vorhanden
         ↪ Dis = [en] ACG: Depression vorhanden, [de] ACG: Depression vorhanden
       ↪ Diabetes = [en] acg_Diabetes_vorhanden, [de] acg_Diabetes_vorhanden
         ↪ Dis = [en] ACG: Diabetes vorhanden, [de] ACG: Diabetes vorhanden
       ↪ Edc = [en] acg_EDC_Code, [de] acg_EDC_Code
         ↪ Dis = [en] ACG: EDC-Code, [de] ACG: EDC-Code
         ↪ Tooltip = [en] Zugeordnete EDC-Code (Expanded Diagnosis Cluster): EDC gruppieren verschiedene Krankheiten und Zustände ausschließlich auf der Basis von ICD-10-Codes und stellen einen klinischen Zusammenhang zum Case-Mix her. Alle ermittelten EDC-Codes für diesen Patienten. Die EDC Taxonomie identifiziert Patienten mit bestimmten Krankheiten oder Symptomen, [de] Zugeordnete EDC-Code (Expanded Diagnosis Cluster): EDC gruppieren verschiedene Krankheiten und Zustände ausschließlich auf der Basis von ICD-10-Codes und stellen einen klinischen Zusammenhang zum Case-Mix her. Alle ermittelten EDC-Codes für diesen Patienten. Die EDC Taxonomie identifiziert Patienten mit bestimmten Krankheiten oder Symptomen
           ↪ 1 = [en] Format: Alphanumerisch (Beispiel MUS06), [de] Format: Alphanumerisch (Beispiel MUS06)
       ↪ Frailty
         ↪ Flag = [en] acg_Gebrechlichkeits-Indikator, [de] acg_Gebrechlichkeits-Indikator
           ↪ Dis = [en] ACG: Gebrechlichkeits-Indikator, [de] ACG: Gebrechlichkeits-Indikator
           ↪ Tooltip = [en] Kennzeichen für jedes der 11 Cluster, die für diagnostische diskreten Bedingungen im Einklang mit Gebrechlichkeit stehen (z.B . Mangelernährung, Demenz, Inkontinenz, Schwierigkeiten beim Gehen), [de] Kennzeichen für jedes der 11 Cluster, die für diagnostische diskreten Bedingungen im Einklang mit Gebrechlichkeit stehen (z.B . Mangelernährung, Demenz, Inkontinenz, Schwierigkeiten beim Gehen)
             ↪ 1 = [en] Format: Alphanumerisch (Beispiel N), [de] Format: Alphanumerisch (Beispiel N)
       ↪ Heart
         ↪ Fc
           ↪ Condition = [en] acg_Herzinsuffizienz_vorhanden, [de] acg_Herzinsuffizienz_vorhanden
             ↪ Dis = [en] ACG: Herzinsuffizienz vorhanden, [de] ACG: Herzinsuffizienz vorhanden
       ↪ Hos
         ↪ Dominant
           ↪ Count = [en] acg_ADGAnzahlTop, [de] acg_ADGAnzahlTop
             ↪ Dis = [en] ACG: Anzahl ADGs mit hoher KRH-Wahrscheinlichkeit, [de] ACG: Anzahl ADGs mit hoher KRH-Wahrscheinlichkeit
             ↪ Tooltip = [en] Anzahl ADGs mit hoher (&gt;50%) Wahrscheinlichkeit einer künftigen Krankenhausaufnahme., [de] Anzahl ADGs mit hoher (&gt;50%) Wahrscheinlichkeit einer künftigen Krankenhausaufnahme.
       ↪ Hyperlipidemia = [en] acg_Fettstoffwechselstörungen_vorhanden, [de] acg_Fettstoffwechselstörungen_vorhanden
         ↪ Dis = [en] ACG: Fettstoffwechselstörungen vorhanden, [de] ACG: Fettstoffwechselstörungen vorhanden
       ↪ Hypertension = [en] acg_Bluthochdruck_vorhanden, [de] acg_Bluthochdruck_vorhanden
         ↪ Dis = [en] ACG: Bluthochdruck vorhanden, [de] ACG: Bluthochdruck vorhanden
       ↪ Ischemic
         ↪ Heart
           ↪ Dc = [en] acg_koronare_Herzkrankheit_vorhanden, [de] acg_koronare_Herzkrankheit_vorhanden
             ↪ Dis = [en] ACG: Koronare Herzkrankheit vorhanden, [de] ACG: Koronare Herzkrankheit vorhanden
       ↪ Low
         ↪ Back
           ↪ Pain = [en] acg_Rückenbeschwerden_vorhanden, [de] acg_Rückenbeschwerden_vorhanden
             ↪ Dis = [en] ACG: Rückenbeschwerden vorhanden, [de] ACG: Rückenbeschwerden vorhanden
       ↪ Major
         ↪ Adg
           ↪ Count = [en] acg_HauptADGsAnzahl, [de] acg_HauptADGsAnzahl
             ↪ Dis = [en] ACG: Anzahl Haupt ADGs, [de] ACG: Anzahl Haupt ADGs
             ↪ Tooltip = [en] Anzahl der Haupt-ADGs,  welche diesem Patienten zugeordnet sind. Ein Haupt-ADG ist ein ADG  mit erheblichen Auswirkungen auf den gleichzeitigen oder zukünftigen Ressourcenverbrauch. Es gibt separate Haupt-ADGs für Kinder und Erwachsene, [de] Anzahl der Haupt-ADGs,  welche diesem Patienten zugeordnet sind. Ein Haupt-ADG ist ein ADG  mit erheblichen Auswirkungen auf den gleichzeitigen oder zukünftigen Ressourcenverbrauch. Es gibt separate Haupt-ADGs für Kinder und Erwachsene
         ↪ Rxmg = [en] acg_HRxMG_Codes, [de] acg_HRxMG_Codes
           ↪ Dis
             ↪ 1 = [en] ACG: MEDCs auf Basis der Medikamente, [de] ACG: MEDCs auf Basis der Medikamente
           ↪ Tooltip = [en] Hauptgruppen Morbiditäts Codes, Medikamten-Basis: Basis-Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten., [de] Hauptgruppen Morbiditäts Codes, Medikamten-Basis: Basis-Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten.
             ↪ 1 = [en] Format: Alphanumerisch (Beispiel 12), [de] Format: Alphanumerisch (Beispiel 12)
       ↪ Medc = [en] acg_MEDC_Code, [de] acg_MEDC_Code
         ↪ Dis = [en] ACG: MEDC-Code, [de] ACG: MEDC-Code
         ↪ Tooltip = [en] Haupt-Diagnosen-Cluster erweitert. Alle der MEDC-Codes für diesen Patienten. Die EDC Taxonomie gliedert sich in breite klinische Kategorien, genannt MEDCs., [de] Haupt-Diagnosen-Cluster erweitert. Alle der MEDC-Codes für diesen Patienten. Die EDC Taxonomie gliedert sich in breite klinische Kategorien, genannt MEDCs.
           ↪ 1 = [en] Format: Alphanumerisch (Beispiel MUS), [de] Format: Alphanumerisch (Beispiel MUS)
       ↪ Ob
         ↪ Pul
           ↪ Disease
             ↪ Condition = [en] acg_chronische_obstruktive_Lungenerkrankung_vorhanden, [de] acg_chronische_obstruktive_Lungenerkrankung_vorhanden
               ↪ Dis = [en] ACG: chronische obstruktive Lungenerkrankung vorhanden, [de] ACG: chronische obstruktive Lungenerkrankung vorhanden
       ↪ Pharma
         ↪ Cost = [en] acg_Medi_Kosten, [de] acg_Medi_Kosten
           ↪ Band = [en] acg_Medi_KostGruppe, [de] acg_Medi_KostGruppe
             ↪ Dis = [en] ACG: Med Kosten Gruppe, [de] ACG: Med Kosten Gruppe
             ↪ Tooltip
               ↪ 1
                 ↪ 1 = [en] 0 - 0 Medikamentenkosten, [de] 0 - 0 Medikamentenkosten
           ↪ Dis = [en] ACG: Kosten für Medikamente, [de] ACG: Kosten für Medikamente
           ↪ Tooltip = [en] Gesamte Medikamentenkosten während des Zeitraums, [de] Gesamte Medikamentenkosten während des Zeitraums
       ↪ Pregnant = [en] acg_schwangerschaft, [de] acg_schwangerschaft
         ↪ Dis = [en] ACG: Schwangerschaft, [de] ACG: Schwangerschaft
         ↪ Tooltip
           ↪ 3 = [en] 1 - Patientin war schwanger während Beobachtungszeitraum, [de] 1 - Patientin war schwanger während Beobachtungszeitraum
       ↪ Pregnanttooltip
         ↪ 2 = [en] 0 - Patientin war nicht schwanger während Beobachtungszeitraum, [de] 0 - Patientin war nicht schwanger während Beobachtungszeitraum
       ↪ Probability
         ↪ High
           ↪ Pc = [en] acg_MediTop, [de] acg_MediTop
             ↪ Dis = [en] ACG: Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten, [de] ACG: Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten
             ↪ Tooltip = [en] Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Apothekenkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Arzneimittelkosten  verursacht, im Jahr, welches der Beorbachtungsperiode folgt, [de] Wahrscheinlichkeit für hohe zukünftige Medikamentenkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Apothekenkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Arzneimittelkosten  verursacht, im Jahr, welches der Beorbachtungsperiode folgt
               ↪ 1 = [en] Format: Fließkommazahl (Beispiel 0,01), [de] Format: Fließkommazahl (Beispiel 0,01)
           ↪ Tc = [en] acg_GesamtTop5, [de] acg_GesamtTop5
             ↪ Dis = [en] ACG: Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten, [de] ACG: Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten
             ↪ Tooltip = [en] Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Gesamtkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Gesamtkosten (einschließlich Apothekenkosten) verursacht, im Jahr, welches der Beobachtungsperiode folgt, [de] Wahrscheinlichkeit für zukünftigen Hochkostenfall Gesamtkosten (top 5%). ACG vorbestimmte Wahrscheinlichkeit für Gesamtkosten. Die Wahrscheinlichkeit, daß dieser Patient hohe Gesamtkosten (einschließlich Apothekenkosten) verursacht, im Jahr, welches der Beobachtungsperiode folgt
       ↪ Renal
         ↪ Fc = [en] acg_Niereninsuffizienz_vorhanden, [de] acg_Niereninsuffizienz_vorhanden
           ↪ Dis = [en] ACG: Niereninsuffizienz vorhanden, [de] ACG: Niereninsuffizienz vorhanden
       ↪ Rescaled
         ↪ Pharma
           ↪ Cri = [en] acg_MediKostenIndexGewichtet, [de] acg_MediKostenIndexGewichtet
             ↪ Dis = [en] ACG: Index Medikamentenkosten, gewichtet, [de] ACG: Index Medikamentenkosten, gewichtet
             ↪ Tooltip = [en] Kostenindex für zukünftige Medikamentenkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1,0, [de] Kostenindex für zukünftige Medikamentenkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1,0
         ↪ Total
           ↪ Cri = [en] acg_GesamtkostenIndexGewichtet, [de] acg_GesamtkostenIndexGewichtet
             ↪ Dis = [en] ACG: Index aller Kosten, gewichtet, [de] ACG: Index aller Kosten, gewichtet
             ↪ Tooltip = [en] Kostenindex für zukünftige Gesamkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1, Untergruppeanalysen stellen Vergleiche zu den lokalen Normen zur Verfügung, [de] Kostenindex für zukünftige Gesamkosten auf der Basis skalierter nationaler Vergleichsdaten, Mittelwert = 1, Untergruppeanalysen stellen Vergleiche zu den lokalen Normen zur Verfügung
       ↪ Rub = [en] acg_RUB, [de] acg_RUB
         ↪ Dis = [en] ACG: RUB, [de] ACG: RUB
         ↪ Tooltip
           ↪ 1 = [en] 0 - Keine oder nur ungültige Dx, [de] 0 - Keine oder nur ungültige Dx
           ↪ 2 = [en] 1 - Gesund, kein Verbrauch, [de] 1 - Gesund, kein Verbrauch
           ↪ 3 = [en] 2 - Geringer Verbrauch, [de] 2 - Geringer Verbrauch
           ↪ 4 = [en] 3 - Mittlerer Verbrauch, [de] 3 - Mittlerer Verbrauch
           ↪ 5 = [en] 4 - Erhöhter Verbrauch, [de] 4 - Erhöhter Verbrauch
           ↪ 6 = [en] 5 - Sehr hoher Verbrauch, [de] 5 - Sehr hoher Verbrauch
       ↪ Rxmg = [en] acg_RxMG_Code, [de] acg_RxMG_Code
         ↪ Dis
           ↪ 1 = [en] ACG: EDCs auf Basis der Medikamente, [de] ACG: EDCs auf Basis der Medikamente
         ↪ Tooltip = [en] Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten, [de] Morbiditätsgruppen-Codes auf Basis der Medikamentenkosten: Arzneimittel-Morbidity-Group-Codes - alle der Rx-MG-Codes für diesen Patienten
       ↪ Sex = [en] acg_geschlecht, [de] acg_geschlecht
         ↪ Dis = [en] ACG: Geschlecht, [de] ACG: Geschlecht
         ↪ Tooltip
           ↪ 1 = [en] Format: ganze Zahl (Beispiel 1), [de] Format: ganze Zahl (Beispiel 1)
       ↪ Total
         ↪ Cost = [en] acg_Gesamtkosten, [de] acg_Gesamtkosten
           ↪ Band = [en] acg_Gesamt_KostGruppe, [de] acg_Gesamt_KostGruppe
             ↪ Dis = [en] ACG: Gesamt Kosten Gruppe, [de] ACG: Gesamt Kosten Gruppe
             ↪ Tooltip
               ↪ 1
                 ↪ 1 = [en] 0 - 0 Gesamtkosten, [de] 0 - 0 Gesamtkosten
           ↪ Dis = [en] ACG: Gesamtkosten, [de] ACG: Gesamtkosten
           ↪ Tooltip = [en] Gesamtkosten incl. Medikamentenkosten, [de] Gesamtkosten incl. Medikamentenkosten
       ↪ Unscaled
         ↪ Pharma
           ↪ Cri = [en] acg_MediKostenIndexUngewichtet, [de] acg_MediKostenIndexUngewichtet
             ↪ Dis = [en] ACG: Index Medikamentenkosten, ungewichtet, [de] ACG: Index Medikamentenkosten, ungewichtet
             ↪ Tooltip = [en] Kostenindex für zukünftige Medikamentenkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG vorbestimmtes Modell PRI für ApothekeN-Kosten. Die geschätzten Arzneimittelkosten für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0), wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalysen stellen Vergleiche zu den nationalen Normen zur Verfügung)., [de] Kostenindex für zukünftige Medikamentenkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG vorbestimmtes Modell PRI für ApothekeN-Kosten. Die geschätzten Arzneimittelkosten für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0), wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalysen stellen Vergleiche zu den nationalen Normen zur Verfügung).
         ↪ Total
           ↪ Cri = [en] acg_GesamtkostenIndexUngewichtet, [de] acg_GesamtkostenIndexUngewichtet
             ↪ Dis = [en] ACG: Index aller Kosten, ungewichtet, [de] ACG: Index aller Kosten, ungewichtet
             ↪ Tooltip = [en] Kostenindex für zukünftige Gesamkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG P.M. Index (PRI) für ACG P.M. für Voraussage Gesamtkosten. Die geschätzten Gesamtkosten (einschließlich Apothekenkosten) für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0) wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalyse stellen Vergleiche zu den nationalen Normen zur Verfügung., [de] Kostenindex für zukünftige Gesamkosten auf der Basis unskalierter nationaler Vergleichsdaten. (ACG P.M. Index (PRI) für ACG P.M. für Voraussage Gesamtkosten. Die geschätzten Gesamtkosten (einschließlich Apothekenkosten) für diesen Patienten für das Jahr, welches der Beobachtungsperiode folgt. Begründet auf einer nationalen Bezugsdatenbank (mit einem Mittel von 1.0) wird der vorausgesagte Wert als relatives Gewicht ausgedrückt. Bevölkerung oder Untergruppeanalyse stellen Vergleiche zu den nationalen Normen zur Verfügung.
     ↪ Adm1
       ↪ Type
         ↪ Tooltip
           ↪ 10 = [en] 08 - Stationäre Aufnahme zur Organentnahme, [de] 08 - Stationäre Aufnahme zur Organentnahme
           ↪ 11 = [en] 10 - Stationsäquivalente Behandlung, [de] 10 - Stationsäquivalente Behandlung
           ↪ 12 = [de] 11 - Übergangspflege
           ↪ 3 = [en] 01 - Krankenhausbehandlung, vollstationär, [de] 01 - Krankenhausbehandlung, vollstationär
           ↪ 4 = [en] 02 - Krankenhausbehandlung, vollstationär mit voraus. vorstat. Behandlung, [de] 02 - Krankenhausbehandlung, vollstationär mit voraus. vorstat. Behandlung
           ↪ 5 = [en] 03 - Krankenhausbehandlung teilstationär, [de] 03 - Krankenhausbehandlung teilstationär
           ↪ 6 = [en] 04 - Krankenhausbehandlung ohne anschl. stationäre Behandlung, [de] 04 - Krankenhausbehandlung ohne anschl. stationäre Behandlung
           ↪ 7 = [en] 05 - stationäre Entbindung, [de] 05 - stationäre Entbindung
           ↪ 8 = [en] 06 - Geburt, [de] 06 - Geburt
           ↪ 9 = [en] 07 - Wiederaufnahme wg. Komplikation (Fallpauschale), [de] 07 - Wiederaufnahme wg. Komplikation (Fallpauschale)
     ↪ Adm2
       ↪ Type
         ↪ Tooltip
           ↪ 10 = [en] 22 - Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V), [de] 22 - Kostenträgerwechsel - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
           ↪ 11 = [en] 23 - Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X), [de] 23 - Kostenträgerwechsel - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
           ↪ 12 = [en] 24 - Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt, [de] 24 - Kostenträgerwechsel - Hinweis auf Einwirkung von äußerer Gewalt
           ↪ 13 = [en] 26 - Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden, [de] 26 - Kostenträgerwechsel - Kriegsbeschädigten-Leiden / BVG-Leiden
           ↪ 14 = [en] 27 - Kostenträgerwechsel - Notfall, [de] 27 - Kostenträgerwechsel - Notfall
           ↪ 15 = [en] 41 - Integrierte Versorgung - Normalfall, [de] 41 - Integrierte Versorgung - Normalfall
           ↪ 16 = [en] 42 - Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V), [de] 42 - Integrierte Versorgung - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
           ↪ 17 = [en] 43 - Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X), [de] 43 - Integrierte Versorgung - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
           ↪ 18 = [en] 44 - Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt, [de] 44 - Integrierte Versorgung - Hinweis auf Einwirkung von äußerer Gewalt
           ↪ 19 = [en] 46 - Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden, [de] 46 - Integrierte Versorgung - Kriegsbeschädigten-Leiden / BVG-Leiden
           ↪ 20 = [en] 47 - Integrierte Versorgung - Notfall, [de] 47 - Integrierte Versorgung - Notfall
           ↪ 3 = [en] 01 - Normalfall, [de] 01 - Normalfall
           ↪ 4 = [en] 02 - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V), [de] 02 - Arbeitsunfall / Wegeunfall / Berufskrankheit (§ 11 Abs. 4 SGB V)
           ↪ 5 = [en] 03 - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X), [de] 03 - Verkehrsunfall / Sportunfall / Sonstiger Unfall (z.B. § 116 SGB X)
           ↪ 6 = [en] 04 - Hinweis auf Einwirkung von äußerer Gewalt, [de] 04 - Hinweis auf Einwirkung von äußerer Gewalt
           ↪ 7 = [en] 06 - Kriegsbeschädigten-Leiden / BVG-Leiden, [de] 06 - Kriegsbeschädigten-Leiden / BVG-Leiden
           ↪ 8 = [en] 07 - Notfall, [de] 07 - Notfall
           ↪ 9 = [en] 21 - Kostenträgerwechsel - Normalfall, [de] 21 - Kostenträgerwechsel - Normalfall
     ↪ Adm
       ↪ Cause
         ↪ Tooltip
           ↪ 10 = [en] B - Begleitperson, [de] B - Begleitperson
           ↪ 11 = [en] A - Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden), [de] A - Verlegung (mit Behandlungsdauer im verlegenden Krankenhaus bis zu 24 Stunden)
           ↪ 3 = [en] E - Einweisung durch Arzt, [de] E - Einweisung durch Arzt
           ↪ 4 = [en] Z - Einweisung durch Zahnarzt, [de] Z - Einweisung durch Zahnarzt
           ↪ 5 = [en] N - Notfall, [de] N - Notfall
           ↪ 6 = [en] R - Aufnahme nach vorausgehender Behandlung in einer Rehaeinrichtung, [de] R - Aufnahme nach vorausgehender Behandlung in einer Rehaeinrichtung
           ↪ 8 = [en] K - Verlegung (Aufnahme) aus einem anderen Krankenhaus i.R.e. Kooperation, [de] K - Verlegung (Aufnahme) aus einem anderen Krankenhaus i.R.e. Kooperation
           ↪ 9 = [en] G - Geburt, [de] G - Geburt
     ↪ Admission
       ↪ Week
         ↪ Day
           ↪ Tooltip
             ↪ 3 = [en] Mo(1) - Montag, [de] Mo(1) - Montag
             ↪ 4 = [en] Di(2) - Dinstag, [de] Di(2) - Dinstag
             ↪ 5 = [en] Mi(3) - Mittwoch, [de] Mi(3) - Mittwoch
             ↪ 6 = [en] Do(4) - Donnerstag, [de] Do(4) - Donnerstag
             ↪ 7 = [en] Fr(5) - Freitag, [de] Fr(5) - Freitag
             ↪ 8 = [en] Sa(6) - Samstag, [de] Sa(6) - Samstag
             ↪ 9 = [en] So(0) - Sonntag, [de] So(0) - Sonntag
     ↪ Ambu
       ↪ Care
         ↪ Care
           ↪ Level = [en] ambu_Pflegestufe, [de] ambu_Pflegestufe
             ↪ Dis = [en] Pflegedaten: Pflegestufe, [de] Pflegedaten: Pflegestufe
         ↪ Provided
           ↪ From = [en] ambu_Pflegeleistung_von, [de] ambu_Pflegeleistung_von
             ↪ Dis = [en] Pflegedaten: Pflegeleistung von, [de] Pflegedaten: Pflegeleistung von
             ↪ Tooltip = [en] Der erste Tag der aufgebrachten Leistung, [de] Der erste Tag der aufgebrachten Leistung
           ↪ To = [en] ambu_Pflegeleistung_bis, [de] ambu_Pflegeleistung_bis
             ↪ Dis = [en] Pflegedaten: Pflegeleistung bis, [de] Pflegedaten: Pflegeleistung bis
             ↪ Tooltip = [en] Der letzte Tag der aufgebrachten Leistung, [de] Der letzte Tag der aufgebrachten Leistung
     ↪ Aux
       ↪ Diag
         ↪ Type
           ↪ Tooltip
             ↪ 3 = [en] 0 - nicht gesetzt, [de] 0 - nicht gesetzt
             ↪ 4 = [en] 1 - Kreuzdiagnose, [de] 1 - Kreuzdiagnose
             ↪ 5 = [en] 2 - Sterndiagnose, [de] 2 - Sterndiagnose
             ↪ 6 = [en] 3 - Zusatzdiagnose, [de] 3 - Zusatzdiagnose
     ↪ Care
       ↪ State
         ↪ Tooltip
           ↪ 10 = [en] Pflegegrad 4, [de] Pflegegrad 4
           ↪ 11 = [en] Pflegegrad 5, [de] Pflegegrad 5
           ↪ 7 = [en] Pflegegrad 1, [de] Pflegegrad 1
           ↪ 8 = [en] Pflegegrad 2, [de] Pflegegrad 2
           ↪ 9 = [en] Pflegegrad 3, [de] Pflegegrad 3
     ↪ Clinic
       ↪ Case
         ↪ Costs
           ↪ Tooltip = [en] Gesamtkosten enes Falls, [de] Gesamtkosten enes Falls
     ↪ Dis
       ↪ Type3
         ↪ Tooltip
           ↪ 3 = [en] 1 - arbeitsfähig, [de] 1 - arbeitsfähig
           ↪ 4 = [en] 2 - nicht arbeitsfähig, [de] 2 - nicht arbeitsfähig
           ↪ 5 = [en] 9 - keine Angabe, [de] 9 - keine Angabe
           ↪ 6 = [en] 3 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung, [de] 3 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; keine Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung
           ↪ 7 = [en] 4 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung, [de] 4 - arbeitsfähig: keine Angabe; invasiv beatmet i.S. B-BEP-Abschlagsvereinbarung; Verordnung einer Anschlussversorgung zur Beatmungsentwöhnung
           ↪ 8 = [en] 5 - arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung, [de] 5 - arbeitsfähig: keine Angabe; invasiv beatmet; B-BEP-Abschlagsvereinbarung nicht anwendbar; keine Verordnung
           ↪ 9 = [en] 6 - arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV, [de] 6 - arbeitsfähig: keine Angabe; invasiv beatmet; Anwendung §3 Abs. 6 FPV
       ↪ Type
         ↪ Tooltip
           ↪ 10 = [en] 08 - Verlegung in ein anderes Krankenhaus i.R.e. Kooperation, [de] 08 - Verlegung in ein anderes Krankenhaus i.R.e. Kooperation
           ↪ 11 = [en] 09 - Entlassung in eine Rehabilitationseinrichtung, [de] 09 - Entlassung in eine Rehabilitationseinrichtung
           ↪ 12 = [en] 10 - Entlassung in eine Pflegeeinrichtung, [de] 10 - Entlassung in eine Pflegeeinrichtung
           ↪ 13 = [en] 11 - Entlassung in ein Hospiz, [de] 11 - Entlassung in ein Hospiz
           ↪ 14 = [en] 12 - Interne Verlegung, [de] 12 - Interne Verlegung
           ↪ 15 = [en] 13 - Externe Verlegung zur psychiatrischen Behandlung, [de] 13 - Externe Verlegung zur psychiatrischen Behandlung
           ↪ 16 = [en] 14 - Behandlung aus sonstigen Gründen beendet, nachstationäre Beh., [de] 14 - Behandlung aus sonstigen Gründen beendet, nachstationäre Beh.
           ↪ 17 = [en] 15 - Behandlung gegen ärztlichen Rat beendet, nachstationäre Beh., [de] 15 - Behandlung gegen ärztlichen Rat beendet, nachstationäre Beh.
           ↪ 18 = [en] 17 - interne Verlegung mit Wechsel zwischen den Geltungsbereichen, [de] 17 - interne Verlegung mit Wechsel zwischen den Geltungsbereichen
           ↪ 19 = [en] 18 - Rückverlegung, [de] 18 - Rückverlegung
           ↪ 20 = [en] 19 - Entlassung vor Wiederaufnahme mit Neueinstufung, [de] 19 - Entlassung vor Wiederaufnahme mit Neueinstufung
           ↪ 21 = [en] 20 - Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation, [de] 20 - Entlassung vor Wiederaufnahme mit Neueinstufung wegen Komplikation
           ↪ 22 = [en] 21 - Entlassung mit nachfolgender Wiederaufnahme, [de] 21 - Entlassung mit nachfolgender Wiederaufnahme
           ↪ 23 = [en] 22 - Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung, [de] 22 - Fallabschluss (interne Verlegung) bei Wechsel zwischen voll- und teilstat. Behandlung
           ↪ 26 = [en] 23 - Beginn eines externen Aufenthalts mit Abwesenheit ücber Mitternacht (BPflV-Bereich - für verlegende Fachabteilung), [de] 23 - Beginn eines externen Aufenthalts mit Abwesenheit ücber Mitternacht (BPflV-Bereich - für verlegende Fachabteilung)
           ↪ 27 = [en] 24 - Beendigung eines externen Aufenthalts mit Abwesenheit über Mitternacht (BPflVBereich - für Pseudo-Fachabteilung 0003), [de] 24 - Beendigung eines externen Aufenthalts mit Abwesenheit über Mitternacht (BPflVBereich - für Pseudo-Fachabteilung 0003)
           ↪ 28 = [en] 25 - Entlassung zum Jahresende bei Aufnahme im Vorjahr, [de] 25 - Entlassung zum Jahresende bei Aufnahme im Vorjahr
           ↪ 29 = [en] 26 - Beginn  eines  Zeitraumes  ohne  direkten Patientenkontakt  (stationsäquivalente Behandlung) (für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018), [de] 26 - Beginn  eines  Zeitraumes  ohne  direkten Patientenkontakt  (stationsäquivalente Behandlung) (für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)
           ↪ 3 = [en] 01 - Behandlung regulär beendet, [de] 01 - Behandlung regulär beendet
           ↪ 30 = [en] 27 - Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung für Pseudofachabteilung 0004(für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018), [de] 27 - Beendigung eines Zeitraumes ohne direkten Patientenkontakt (stationsäquivalente Behandlung für Pseudofachabteilung 0004(für Zwecke der Abrechnung -PEPP, §4 PEPPV 2018)
           ↪ 31 = [en] 28 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit, [de] 28 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine organisierte Wohneinheit
           ↪ 32 = [en] 29 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit, [de] 29 - Behandlung regulär beendet, Verlegung eines beatmeten Patienten in eine Weaningeinheit
           ↪ 33 = [en] 30 - Behandlung regulär beendet, Überleitung in die Übergangspflege, [de] 30 - Behandlung regulär beendet, Überleitung in die Übergangspflege
           ↪ 4 = [en] 02 - Behandlung regulär beendet, nachstationäre Behandlung vorgesehen, [de] 02 - Behandlung regulär beendet, nachstationäre Behandlung vorgesehen
           ↪ 5 = [en] 03 - Behandlung aus sonstigen Gründen beendet, [de] 03 - Behandlung aus sonstigen Gründen beendet
           ↪ 6 = [en] 04 - Behandlung gegen ärztlichen Rat beendet, [de] 04 - Behandlung gegen ärztlichen Rat beendet
           ↪ 7 = [en] 05 - Zuständigkeitswechsel des Kostenträger, [de] 05 - Zuständigkeitswechsel des Kostenträger
           ↪ 8 = [en] 06 - Verlegung in ein anderes Krankenhaus, [de] 06 - Verlegung in ein anderes Krankenhaus
           ↪ 9 = [en] 07 - Tod, [de] 07 - Tod
     ↪ Drgpartition
       ↪ Tooltip
         ↪ 3 = [en] O - operative Behandlung, [de] O - operative Behandlung
         ↪ 4 = [en] A - eine nichtoperative, jedoch invasive Behandlung, [de] A - eine nichtoperative, jedoch invasive Behandlung
         ↪ 5 = [en] M - eine rein medizinische Behandlung ohne Eingriffe., [de] M - eine rein medizinische Behandlung ohne Eingriffe.
     ↪ Insurance
       ↪ Status
         ↪ Tooltip
           ↪ 2 = [en] 0 - kein, [de] 0 - kein
           ↪ 3 = [en] 1 - selbst versichert, [de] 1 - selbst versichert
           ↪ 4 = [en] 3 - familienversichert, [de] 3 - familienversichert
           ↪ 5 = [en] 5 - Rentner & Angehörige, [de] 5 - Rentner & Angehörige
     ↪ Losless24h
       ↪ Tooltip
         ↪ 3 = [en] 0 - Verweildauer &gt;= 24, [de] 0 - Verweildauer &gt;= 24
         ↪ 4 = [en] 1 - Verweildauer &lt; 24, [de] 1 - Verweildauer &lt; 24
     ↪ Mdc
       ↪ Tooltip
         ↪ 10 = [en] 08 - Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe, [de] 08 - Krankheiten und Störungen an Muskel-Skelett-System und Bindegewebe
         ↪ 11 = [en] 09 - Krankheiten und Störungen an Haut, Unterhaut und Mamma, [de] 09 - Krankheiten und Störungen an Haut, Unterhaut und Mamma
         ↪ 12 = [en] 10 - Endokrine, Ernährungs- und Stoffwechselkrankheiten, [de] 10 - Endokrine, Ernährungs- und Stoffwechselkrankheiten
         ↪ 13 = [en] 11 - Krankheiten und Störungen der Harnorgane, [de] 11 - Krankheiten und Störungen der Harnorgane
         ↪ 14 = [en] 12 - Krankheiten und Störungen der männlichen Geschlechtsorgane, [de] 12 - Krankheiten und Störungen der männlichen Geschlechtsorgane
         ↪ 15 = [en] 13 - Krankheiten und Störungen der weiblichen Geschlechtsorgane, [de] 13 - Krankheiten und Störungen der weiblichen Geschlechtsorgane
         ↪ 16 = [en] 14 - Schwangerschaft, Geburt und Wochenbett, [de] 14 - Schwangerschaft, Geburt und Wochenbett
         ↪ 17 = [en] 15 - Neugeborene, [de] 15 - Neugeborene
         ↪ 18 = [en] 16 - Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems, [de] 16 - Krankheiten des Blutes, der blutbildenden Organe und des Immunsystems
         ↪ 19 = [en] 17 - Hämatologische und solide Neubildungen, [de] 17 - Hämatologische und solide Neubildungen
         ↪ 2 = [en] 00 - unbekannt, [de] 00 - unbekannt
         ↪ 20 = [en] 18A - HIV, [de] 18A - HIV
         ↪ 21 = [en] 18B - Infektiöse und parasitäre Erkrankungen, [de] 18B - Infektiöse und parasitäre Erkrankungen
         ↪ 22 = [en] 19 - Psychische Krankheiten, [de] 19 - Psychische Krankheiten
         ↪ 23 = [en] 20 - Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen, [de] 20 - Alkohol- und Drogengebrauch und alkohol- und drogeninduzierte psychische Störungen
         ↪ 24 = [en] 21A - Polytrauma, [de] 21A - Polytrauma
         ↪ 25 = [en] 21B - Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten, [de] 21B - Verletzungen, Vergiftungen und toxische Wirkungen von Drogen und Medikamenten
         ↪ 26 = [en] 22 - Verbrennungen, [de] 22 - Verbrennungen
         ↪ 27 = [en] 23 - Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens, [de] 23 - Faktoren, die den Gesundheitszustand beeinflussen, und andere Inanspruchnahme des Gesundheitswesens
         ↪ 28 = [en] PRE - PRÄ - MDC, [de] 24 - Sonstige DRGs
         ↪ 29 = [de] 25 - Teilstationäre pädiatrische Diagnostik und Behandlung
         ↪ 3 = [en] 01 - Krankheiten und Störungen des Nervensystems, [de] 01 - Krankheiten und Störungen des Nervensystems
         ↪ 30 = [de] PRE - PRÄ - MDC
         ↪ 4 = [en] 02 - Krankheiten und Störungen des Auges, [de] 02 - Krankheiten und Störungen des Auges
         ↪ 5 = [en] 03 - Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO), [de] 03 - Krankheiten und Störungen des Ohres, der Nase, des Mundes und des Halses (HNO)
         ↪ 6 = [en] 04 - Krankheiten und Störungen der Atmungsorgane, [de] 04 - Krankheiten und Störungen der Atmungsorgane
         ↪ 7 = [en] 05 - Krankheiten und Störungen des Kreislaufsystems, [de] 05 - Krankheiten und Störungen des Kreislaufsystems
         ↪ 8 = [en] 06 - Krankheiten und Störungen der Verdauungsorgane, [de] 06 - Krankheiten und Störungen der Verdauungsorgane
         ↪ 9 = [en] 07 - Krankheiten und Störungen an hepatobiliärem System und Pankreas, [de] 07 - Krankheiten und Störungen an hepatobiliärem System und Pankreas
     ↪ Medicament
       ↪ Perscript
         ↪ Dosage
           ↪ Unit
             ↪ Tooltip
               ↪ 10 = [en] E., [de] E.
               ↪ 11 = [en] µmol, [de] µmol
               ↪ 12 = [en] FIP.-E., [de] FIP.-E.
               ↪ 13 = [en] Mio.I.E., [de] Mio.I.E.
               ↪ 14 = [en] BE, [de] BE
               ↪ 15 = [en] Vol.-%, [de] Vol.-%
               ↪ 16 = [en] Gew.-%, [de] Gew.-%
               ↪ 17 = [en] %V/V, mmol, [de] %V/V, mmol
               ↪ 18 = [en] Mio E., [de] Mio E.
               ↪ 19 = [en] ng, [de] ng
               ↪ 20 = [en] MSE, [de] MSE
               ↪ 21 = [en] mg (MW), [de] mg (MW)
               ↪ 22 = [en] g (MW), [de] g (MW)
               ↪ 23 = [en] Sprühstoß, [de] Sprühstoß
               ↪ 24 = [en] Aerosolstoß, [de] Aerosolstoß
               ↪ 25 = [en] cm¢2, [de] cm¢2
               ↪ 26 = [en] µl, [de] µl
               ↪ 27 = [en] Ph.Eur.-E., [de] Ph.Eur.-E.
               ↪ 28 = [en] nl, [de] nl
               ↪ 29 = [en] pg, [de] pg
               ↪ 3 = [en] mg, [de] mg
               ↪ 31 = [en] Keime, [de] Keime
               ↪ 32 = [en] Mio.-Keime, [de] Mio.-Keime
               ↪ 33 = [en] mPa*s, [de] mPa*s
               ↪ 4 = [en] ml, [de] ml
               ↪ 5 = [en] g, [de] g
               ↪ 6 = [en] l, [de] l
               ↪ 7 = [en] µg, [de] µg
               ↪ 8 = [en] I.E., [de] I.E.
               ↪ 9 = [en] %, [de] %
     ↪ Mrsa
       ↪ Age
         ↪ Tooltip
           ↪ 1 = [en] Alter aus der Satzart 100 im Berichtsjahr, [de] Alter aus der Satzart 100 im Berichtsjahr
           ↪ 2 = [en] Format: ganze Zahl, bis zu 3stellig, [de] Format: ganze Zahl, bis zu 3stellig
       ↪ Agg
         ↪ Tooltip
           ↪ 1 = [en] Vom BVA festgelegte Alters- und Geschlechtsgruppen, [de] Vom BVA festgelegte Alters- und Geschlechtsgruppen
           ↪ 2 = [en] Format: 1-bis 2-stellig, ganze Zahl (Beispiel 23), [de] Format: 1-bis 2-stellig, ganze Zahl (Beispiel 23)
       ↪ Ambulant
         ↪ Diag
           ↪ Qualification
             ↪ Tooltip
               ↪ 2 = [en] A - ausgeschlossene Doagnose, [de] A - ausgeschlossene Doagnose
               ↪ 3 = [en] G - gesicherte Diagnose, [de] G - gesicherte Diagnose
               ↪ 4 = [en] V - Verdachtsdiagnose, [de] V - Verdachtsdiagnose
               ↪ 5 = [en] Z - Zustand nach der betreffenden Diagnose, [de] Z - Zustand nach der betreffenden Diagnose
               ↪ 6 = [en] 0 - sonstige, [de] 0 - sonstige
           ↪ Quater
             ↪ Tooltip_2 = [en] 1 - 1. Quartal, [de] 1 - 1. Quartal
             ↪ Tooltip_3 = [en] 2 - 2. Quartal, [de] 2 - 2. Quartal
             ↪ Tooltip_4 = [en] 3 - 3. Quartal, [de] 3 - 3. Quartal
             ↪ Tooltip_5 = [en] 4 - 4. Quartal, [de] 4 - 4. Quartal
         ↪ Disease
           ↪ Number
             ↪ Tooltip = [en] Krankheitsgruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden, [de] Krankheitsgruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden
         ↪ Dxg
           ↪ Tooltip = [en] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden, [de] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden
         ↪ Hmg
           ↪ Rel
             ↪ Dxg
               ↪ Tooltip = [en] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden, die auch zu einer HMG führt, [de] Diagnosengruppe, die durch eine ICD von einem niedergelassenen Arzt kodiert worden, die auch zu einer HMG führt
       ↪ Blood
         ↪ Purification
           ↪ Expendure
             ↪ Tooltip
               ↪ 1 = [en] Summe aller Ausgaben für Sachkosten bei extrakorporaler Blutreinigung zu einem Versicherten (SA 700), [de] Summe aller Ausgaben für Sachkosten bei extrakorporaler Blutreinigung zu einem Versicherten (SA 700)
       ↪ Dantist
         ↪ Expendure
           ↪ Tooltip
             ↪ 1 = [en] Summe aller Ausgaben für Zahnärzte zu einem Versicherten (SA 700), [de] Summe aller Ausgaben für Zahnärzte zu einem Versicherten (SA 700)
       ↪ Ddd
         ↪ Tooltip = [en] Daily Defined Dosis zu einem Medikament anhand PZN bzw. ATC, [de] Daily Defined Dosis zu einem Medikament anhand PZN bzw. ATC
       ↪ Dead
         ↪ Tooltip
           ↪ 3 = [en] 1 - verstorben, [de] 1 - verstorben
           ↪ 4 = [en] 0 - sonst, [de] 0 - sonst
       ↪ Diag
         ↪ Ambulant
           ↪ Hmg
             ↪ Rel
               ↪ Tooltip
                 ↪ 1
                   ↪ 3 = [en] 1 - vorhanden, [de] 1 - vorhanden
                   ↪ 4 = [en] 0 - nicht vorhanden, [de] 0 - nicht vorhanden
           ↪ Tooltip
             ↪ 1 = [en] Diagnosen, die von einem niedergelassenen Arzt kodiert worden sind aus der Satzart 600. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code, [de] Diagnosen, die von einem niedergelassenen Arzt kodiert worden sind aus der Satzart 600. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
         ↪ Hosp
           ↪ Tooltip
             ↪ 1 = [en] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code, [de] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500. Verschlüsselung erfolgt nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
       ↪ Dmp
         ↪ Days
           ↪ Tooltip
             ↪ 1 = [en] DMP-Tage aus Satzart 10, [de] DMP-Tage aus Satzart 10
             ↪ 2 = [en] Anzahl der DMP-Versichertentage des Versicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV, [de] Anzahl der DMP-Versichertentage des Versicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV
       ↪ Doc
         ↪ Expendure
           ↪ Tooltip
             ↪ 1 = [en] Summe aller Ausgaben für Ärzte zu einem Versicherten (SA 700), [de] Summe aller Ausgaben für Ärzte zu einem Versicherten (SA 700)
       ↪ Drugstore
         ↪ Expendure
           ↪ Tooltip
             ↪ 1 = [en] Summe aller Ausgaben für Apotheken zu einem Versicherten (SA 700), [de] Summe aller Ausgaben für Apotheken zu einem Versicherten (SA 700)
       ↪ Dxg
         ↪ Tooltip
           ↪ 1 = [en] Grundlage der Klassifikation ist die Gruppierung von ICD-Diagnosen zu klinisch homogenen diagnostischen Gruppen - den DxGruppen (DxG)., [de] Grundlage der Klassifikation ist die Gruppierung von ICD-Diagnosen zu klinisch homogenen diagnostischen Gruppen - den DxGruppen (DxG).
           ↪ 2 = [en] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 464), [de] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 464)
       ↪ Emg
         ↪ Tooltip
           ↪ 1 = [en] Vom BVA festgelegte Erwerbsminderungsgruppen, [de] Vom BVA festgelegte Erwerbsminderungsgruppen
           ↪ 2 = [en] Format: 1-stellig, ganze Zahl (Beispiel: 3), [de] Format: 1-stellig, ganze Zahl (Beispiel: 3)
       ↪ Format
         ↪ Money
           ↪ Tooltip = [en] Format: bis zu 7stellige Zahl mit 2 Nachkommastellen (Beispiel: 5895,25), [de] Format: bis zu 7stellige Zahl mit 2 Nachkommastellen (Beispiel: 5895,25)
       ↪ Full
         ↪ Expendure
           ↪ Tooltip
             ↪ 1 = [en] Summe aller Ausgaben zu einem Versicherten (SA 700), [de] Summe aller Ausgaben zu einem Versicherten (SA 700)
         ↪ Revenue
           ↪ Tooltip
             ↪ 1 = [en] Summe aller Erlöse aus den HMGs, AGGs, EMGs, [de] Summe aller Erlöse aus den HMGs, AGGs, EMGs
       ↪ Hmg
         ↪ Number
           ↪ Tooltip
             ↪ 1 = [en] Anzahl aller ermittelten HMGs unter Berücksichtigung der Hierarchisierung, [de] Anzahl aller ermittelten HMGs unter Berücksichtigung der Hierarchisierung
             ↪ 2 = [en] Format: ganze Zahl, bis zu 3stellig (Beispiel: 25), [de] Format: ganze Zahl, bis zu 3stellig (Beispiel: 25)
         ↪ Tooltip
           ↪ 2 = [en] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 72), [de] Format: bis zu 3-stellig, ganze Zahl (Beispiel: 72)
       ↪ Hosp
         ↪ Disease
           ↪ Number
             ↪ Tooltip = [en] Krankheitsgruppe,  die anhand einer ICD von einem Krankenhaus kodiert worden ist, [de] Krankheitsgruppe,  die anhand einer ICD von einem Krankenhaus kodiert worden ist
         ↪ Dxg
           ↪ 
             ↪ Tooltip = [en] Diagnosegruppe, die anhand einer ICD von einem Krankenhaus kodiert worden sind, [de] Diagnosegruppe, die anhand einer ICD von einem Krankenhaus kodiert worden sind
         ↪ Expendure
           ↪ Tooltip
             ↪ 1 = [en] Summe aller Ausgaben für KH zu einem Versicherten (SA 700), [de] Summe aller Ausgaben für KH zu einem Versicherten (SA 700)
         ↪ Hmg
           ↪ Rel
             ↪ Dxg
               ↪ Tooltip = [en] Diagnosengruppe, die durch eine ICD von einem Krankenhaus kodiert worden ist, die auch zu einer HMG führt, [de] Diagnosengruppe, die durch eine ICD von einem Krankenhaus kodiert worden ist, die auch zu einer HMG führt
       ↪ Insurance
         ↪ Days
           ↪ Tooltip
             ↪ 1 = [en] Versichertentage aus Satzart 100, [de] Versichertentage aus Satzart 100
             ↪ 2 = [en] Versichertentage des Ver-sicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV, [de] Versichertentage des Ver-sicherten im Berichtsjahr gem. § 3 Abs. 3 RSAV
       ↪ Medgroup
         ↪ Tooltip
           ↪ 1 = [en] 80 RSA relevante Krankheiten, die Von Bundesversicherungsamt definiert wurden. 3799 ICD-10 Codes wurden den Krankheiten zugeordnet (24_Anhang_4 der BVA Festlegungen), [de] 80 RSA relevante Krankheiten, die Von Bundesversicherungsamt definiert wurden. 3799 ICD-10 Codes wurden den Krankheiten zugeordnet (24_Anhang_4 der BVA Festlegungen)
           ↪ 2 = [en] Format: 1 bis 2stellig, ganze Zahl (Beispiel: 18), [de] Format: 1 bis 2stellig, ganze Zahl (Beispiel: 18)
       ↪ Other
         ↪ Services
           ↪ Expendure
             ↪ Tooltip
               ↪ 1 = [en] Summe aller Ausgaben für Heil- und Hilfsmittel zu einem Versicherten (SA 700), [de] Summe aller Ausgaben für Heil- und Hilfsmittel zu einem Versicherten (SA 700)
       ↪ Pucknumber
         ↪ Tooltip = [en] Anzahl der Packungen zu einem Medikament, [de] Anzahl der Packungen zu einem Medikament
       ↪ Pzncode
         ↪ Tooltip
           ↪ 2 = [en] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können., [de] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können.
       ↪ Pzndosage
         ↪ Tooltip
           ↪ 2 = [en] Format: Fließkommazahl (Beispiel: 2.5), [de] Format: Fließkommazahl (Beispiel: 2.5)
       ↪ Reduction
         ↪ Earning
           ↪ Capacity
             ↪ Tooltip = [en] Anzahl der EMR-Versichertentage im Berichtsjahr, [de] Anzahl der EMR-Versichertentage im Berichtsjahr
       ↪ Supererogation
         ↪ Dmp
           ↪ Expendure
             ↪ Tooltip
               ↪ 1 = [en] Summe aller Ausgaben für Mehrleistungen DMP zu einem Versicherten (SA 700), [de] Summe aller Ausgaben für Mehrleistungen DMP zu einem Versicherten (SA 700)
     ↪ Pccl
       ↪ Tooltip
         ↪ 10 = [en] 6 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016, [de] 6 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016
         ↪ 2 = [en] 0 - keine Komplikationen und Komorbiditäten (CC), [de] 0 - keine Komplikationen und Komorbiditäten (CC)
         ↪ 3 = [en] 1 - leichte Komplikationen und Komorbiditäten (CC), [de] 1 - leichte Komplikationen und Komorbiditäten (CC)
         ↪ 4 = [en] 2 - mäßig schwere Komplikationen und Komorbiditäten (CC), [de] 2 - mäßig schwere Komplikationen und Komorbiditäten (CC)
         ↪ 5 = [en] 3 - schwere Komplikationen und Komorbiditäten (CC), [de] 3 - schwere Komplikationen und Komorbiditäten (CC)
         ↪ 6 = [en] 4 - äußerst schwere Komplikationen und Komorbiditäten (CC), [de] 4 - äußerst schwere Komplikationen und Komorbiditäten (CC)
         ↪ 9 = [en] 5 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016, [de] 5 - schwerste Komplikationen und Komorbiditäten (CC) ab 2016
     ↪ Princ
       ↪ Diag
         ↪ Loc
           ↪ Tooltip
             ↪ 3 = [en] R(1) - Rechts, [de] R(1) - Rechts
             ↪ 4 = [en] L(2) - Links, [de] L(2) - Links
             ↪ 5 = [en] B(3) - Beidseitig, [de] B(3) - Beidseitig
     ↪ Psycho
       ↪ State
         ↪ Tooltip
           ↪ 2 = [en] 1 - freiwillig, [de] 1 - freiwillig
           ↪ 3 = [en] 2 - unfreiwillig, [de] 2 - unfreiwillig
     ↪ Rechnung
       ↪ Art
         ↪ Tooltip
           ↪ 3 = [en] 11 - Zwischenrechnung, [de] 11 - Zwischenrechnung
           ↪ 4 = [en] 12 - Schlußrechnung, [de] 12 - Schlußrechnung
           ↪ 5 = [en] 13 - Nachtragsrechnung, [de] 13 - Nachtragsrechnung
     ↪ Sk
       ↪ Tooltip
         ↪ 1 = [en] 'PRE' - Prä-Strukturkategorie (PEPP P001Z-PF02Z), [de] 'PRE' - Prä-Strukturkategorie (PEPP P001Z-PF02Z)
         ↪ 2 = [en] 'TKJ' - Kinder- und Jugendpsychiatrie, teilstationär (PEPP TK04Z-TK99Z), [de] 'TKJ' - Kinder- und Jugendpsychiatrie, teilstationär (PEPP TK04Z-TK99Z)
         ↪ 3 = [en] 'TPO' - Psychosomatik, teilstationär (PEPP TP20Z-TP99Z), [de] 'TPO' - Psychosomatik, teilstationär (PEPP TP20Z-TP99Z)
         ↪ 4 = [en] 'TPY' - Psychiatrie, teilstationär (PEPP TA02Z-TA99Z), [de] 'TPY' - Psychiatrie, teilstationär (PEPP TA02Z-TA99Z)
         ↪ 5 = [en] 'PKJ' - Kinder- und Jugendpsychiatrie, vollstationär (PEPP PK01Z-PK99Z), [de] 'PKJ' - Kinder- und Jugendpsychiatrie, vollstationär (PEPP PK01Z-PK99Z)
         ↪ 6 = [en] 'PSO' - Psychosomatik, vollstationär (PEPP PP00Z-PP99Z), [de] 'PSO' - Psychosomatik, vollstationär (PEPP PP00Z-PP99Z)
         ↪ 7 = [en] 'PSY' - Psychiatrie, vollstationär (PEPP PA01A-PA99Z), [de] 'PSY' - Psychiatrie, vollstationär (PEPP PA01A-PA99Z)
   ↪ Diagnoselokalisation = [en] DiagnoseLokalisation, [de] DiagnoseLokalisation
   ↪ Diagnosetype = [en] DiagnoseType, [de] DiagnoseType
   ↪ Dosierungseinheit = [en] Dosierungseinheit, [de] Dosierungseinheit
   ↪ Drg = [en] DRG, [de] DRG
     ↪ Mdc = [en] MDC, [de] MDC
   ↪ DsaPrimSecListModel
     ↪ Diagnose = [en] Diagnose, [de] Diagnose
   ↪ Einweisenderarzt = [en] EinweisenderArzt, [de] EinweisenderArzt
   ↪ Einweisendeskrankenhaus = [en] EinweisendesKrankenhaus, [de] EinweisendesKrankenhaus
   ↪ Entgeltabrechnungbis = [en] EntgeltabrechnungBis, [de] EntgeltabrechnungBis
   ↪ Entgeltabrechnungvon = [en] EntgeltabrechnungVon, [de] EntgeltabrechnungVon
   ↪ Entgeltanzahljeentgelt = [en] EntgeltanzahlJeEntgelt, [de] EntgeltanzahlJeEntgelt
   ↪ Entgeltsumme = [en] EntgeltSumme, [de] EntgeltSumme
   ↪ Entgeltsummejeentgelt = [en] EntgeltsummeJeEntgelt, [de] EntgeltsummeJeEntgelt
   ↪ Entlassendefachabteilung = [en] EntlassendeFachabteilung, [de] EntlassendeFachabteilung
   ↪ Gender
     ↪ Masculine = [en] m, [de] m
   ↪ Gesamtatcdosierung = [en] GesamtATCDosierung, [de] GesamtATCDosierung
   ↪ Gesamtatcpreis = [en] GesamtATCPreis, [de] GesamtATCPreis
   ↪ Gesamtmpreis = [en] GesamtMPreis, [de] GesamtMPreis
   ↪ Gesamtpzndosierung = [en] GesamtPZNDosierung, [de] GesamtPZNDosierung
   ↪ Gesamtpznpreis = [en] GesamtPZNPreis, [de] GesamtPZNPreis
   ↪ Gk
     ↪ Rsa
       ↪ Agg = [en] GK_RSA_AGG, [de] GK_RSA_AGG
       ↪ Alter = [en] GK_RSA_Alter, [de] GK_RSA_Alter
       ↪ Ambulantedxg = [en] GK_RSA_AmbulanteDxG, [de] GK_RSA_AmbulanteDxG
       ↪ Ambulantehmgrelevantedxg = [en] GK_RSA_AmbulanteHMGRelevanteDxG, [de] GK_RSA_AmbulanteHMGRelevanteDxG
       ↪ Ambulantekrankheitsnummer = [en] GK_RSA_AmbulanteKrankheitsnummer, [de] GK_RSA_AmbulanteKrankheitsnummer
       ↪ Apothekenausgaben = [en] GK_RSA_ApothekenAusgaben, [de] GK_RSA_ApothekenAusgaben
       ↪ Arztausgaben = [en] GK_RSA_ArztAusgaben, [de] GK_RSA_ArztAusgaben
       ↪ Atccode = [en] GK_RSA_ATCCode, [de] GK_RSA_ATCCode
       ↪ Ausgabengesamt = [en] GK_RSA_AusgabenGesamt, [de] GK_RSA_AusgabenGesamt
       ↪ Ddd = [en] GK_RSA_DDD, [de] GK_RSA_DDD
       ↪ Diagnoseambulant = [en] GK_RSA_DiagnoseAmbulant, [de] GK_RSA_DiagnoseAmbulant
       ↪ Diagnoseambulanthmgrelevant = [en] GK_RSA_DiagnoseAmbulantHMGRelevant, [de] GK_RSA_DiagnoseAmbulantHMGRelevant
       ↪ Diagnosestationaer = [en] GK_RSA_DiagnoseStationaer, [de] GK_RSA_DiagnoseStationaer
       ↪ Diagnosestationaerhmgrelevant = [en] GK_RSA_DiagnoseStationaerHMGRelevant, [de] GK_RSA_DiagnoseStationaerHMGRelevant
       ↪ Dmptage = [en] GK_RSA_DMPTage, [de] GK_RSA_DMPTage
       ↪ Dxg = [en] GK_RSA_DxG, [de] GK_RSA_DxG
       ↪ Elrloesgesamt = [en] GK_RSA_ElrloesGesamt, [de] GK_RSA_ElrloesGesamt
       ↪ Emg = [en] GK_RSA_EMG, [de] GK_RSA_EMG
       ↪ Erwerbsminderungstage = [en] GK_RSA_Erwerbsminderungstage, [de] GK_RSA_Erwerbsminderungstage
       ↪ Extblutreinigungausgaben = [en] GK_RSA_ExtBlutreinigungAusgaben, [de] GK_RSA_ExtBlutreinigungAusgaben
       ↪ Geschlecht = [en] GK_RSA_Geschlecht, [de] GK_RSA_Geschlecht
       ↪ Hauptdiagnosestationaer = [en] GK_RSA_HauptdiagnoseStationaer, [de] GK_RSA_HauptdiagnoseStationaer
       ↪ Hmg = [en] GK_RSA_HMG, [de] GK_RSA_HMG
       ↪ Hmganzahl = [en] GK_RSA_HMGAnzahl, [de] GK_RSA_HMGAnzahl
       ↪ Khausgaben = [en] GK_RSA_KHAusgaben, [de] GK_RSA_KHAusgaben
       ↪ Krankheitsgruppe = [en] GK_RSA_Krankheitsgruppe, [de] GK_RSA_Krankheitsgruppe
       ↪ Mehrleistungdmp = [en] GK_RSA_MehrleistungDMP, [de] GK_RSA_MehrleistungDMP
       ↪ Nebendiagnosestationaer = [en] GK_RSA_NebendiagnoseStationaer, [de] GK_RSA_NebendiagnoseStationaer
       ↪ Packunganzahl = [en] GK_RSA_PackungAnzahl, [de] GK_RSA_PackungAnzahl
       ↪ Pzncode = [en] GK_RSA_PZNCode, [de] GK_RSA_PZNCode
       ↪ Pzngesamtdosis = [en] GK_RSA_PZNGesamtdosis, [de] GK_RSA_PZNGesamtdosis
       ↪ Qualifizierungdiagnosenambulant = [en] GK_RSA_QualifizierungDiagnosenAmbulant, [de] GK_RSA_QualifizierungDiagnosenAmbulant
       ↪ Quartaldiagnosenambulant = [en] GK_RSA_QuartalDiagnosenAmbulant, [de] GK_RSA_QuartalDiagnosenAmbulant
       ↪ Soleasugaben = [en] GK_RSA_SoLeAsugaben, [de] GK_RSA_SoLeAsugaben
       ↪ Stationaeredxg = [en] GK_RSA_StationaereDxG, [de] GK_RSA_StationaereDxG
       ↪ Stationaerehmgrelevantedxg = [en] GK_RSA_StationaereHMGRelevanteDxG, [de] GK_RSA_StationaereHMGRelevanteDxG
       ↪ Stationaerekrankheitsnummer = [en] GK_RSA_StationaereKrankheitsnummer, [de] GK_RSA_StationaereKrankheitsnummer
       ↪ Versichertentage = [en] GK_RSA_Versichertentage, [de] GK_RSA_Versichertentage
       ↪ Verstorben = [en] GK_RSA_Verstorben, [de] GK_RSA_Verstorben
       ↪ Zahnarztausgaben = [en] GK_RSA_ZahnarztAusgaben, [de] GK_RSA_ZahnarztAusgaben
   ↪ GKCostsNode
     ↪ Costs = [en] Kosten, [de] Kosten
   ↪ GKMedicineNode
     ↪ Medicine = [en] Medikamente, [de] Medikamente
   ↪ GKSoLeNode
     ↪ OtherServices = [en] Heil- und Hilfsmittel, [de] Heil- und Hilfsmittel
   ↪ Gleichenprozedurenanzahl = [en] GleichenProzedurenAnzahl, [de] GleichenProzedurenAnzahl
   ↪ Group
     ↪ Acg
       ↪ Disease
         ↪ Groups
           ↪ Dis = [en] Krankheitsgruppen, [de] Krankheitsgruppen
     ↪ Coding
       ↪ Data
         ↪ Hosp
           ↪ Data
             ↪ Dis = [en] Kodierung, [de] Kodierung
     ↪ Diag
       ↪ Groups
         ↪ Mrsa
           ↪ Tooltip = [en] Diagnosengruppen, [de] Diagnosengruppen
     ↪ Drgs
       ↪ Data
         ↪ Hosp
           ↪ Data
             ↪ Dis = [en] DRG-Ergebnis, [de] DRG-Ergebnis
             ↪ Tooltip = [en] DRG-Ergebnisse, [de] DRG-Ergebnisse
     ↪ Expendure
       ↪ Mrsa
         ↪ Dis = [en] Ausgaben, [de] Ausgaben
     ↪ Fees
       ↪ Data
         ↪ Hosp
           ↪ Data
             ↪ Tooltip = [en] Entgelte, [de] Entgelte
       ↪ Tooltip
         ↪ 10 = [en] Entgeltliste: Entgeltabrechnung bis, [de] Entgeltliste: Entgeltabrechnung bis
         ↪ 11 = [en] Entgeltliste: Entgeltanzahl je Entgelt, [de] Entgeltliste: Entgeltanzahl je Entgelt
         ↪ 13 = [en] Grouperrelevant: Diagnose, [de] Grouperrelevant: Diagnose
         ↪ 14 = [en] Grouperrelevant: Prozedur, [de] Grouperrelevant: Prozedur
         ↪ 22 = [en] Summe der Entgelte, [de] Summe der Entgelte
         ↪ 23 = [en] Zuschlags_CW, [de] Zuschlags_CW
         ↪ 3 = [en] Abschlags_CW, [de] Abschlags_CW
         ↪ 7 = [en] Entgeltliste: Entgeltart, [de] Entgeltliste: Entgeltart
         ↪ 8 = [en] Entgeltliste: Entgelteinzelbetrag, [de] Entgeltliste: Entgelteinzelbetrag
         ↪ 9 = [en] Entgeltliste: Entgeltabrechnung von, [de] Entgeltliste: Entgeltabrechnung von
     ↪ Insurant
       ↪ Mrsa
         ↪ Dis = [en] Versichertendaten, [de] Versichertendaten
     ↪ Others
       ↪ Tooltip
         ↪ 2 = [en] Zeitangabe 'Jetzt', [de] Zeitangabe 'Jetzt'
     ↪ Pepps
       ↪ Data
         ↪ Hosp
           ↪ Data
             ↪ Tooltip = [en] PEPP-Ergebnisse, [de] PEPP-Ergebnisse
     ↪ Revenue
       ↪ Mrsa
         ↪ Dis = [en] Erlöse, [de] Erlöse
   ↪ Grouperrelevantediagnose = [en] GrouperrelevanteDiagnose, [de] GrouperrelevanteDiagnose
   ↪ Grouperrelevanteprozedur = [en] GrouperrelevanteProzedur, [de] GrouperrelevanteProzedur
   ↪ Hauptdiagnoselokalisation = [en] HauptdiagnoseLokalisation, [de] HauptdiagnoseLokalisation
   ↪ Hm
     ↪ Gesamtmenge = [en] hm_gesamtmenge, [de] hm_gesamtmenge
     ↪ Gesamtpreis = [en] hm_gesamtpreis, [de] hm_gesamtpreis
       ↪ Alle = [en] hm_gesamtPreis_alle, [de] hm_gesamtPreis_alle
     ↪ Menge = [en] hm_menge, [de] hm_menge
     ↪ Positionsnummer = [en] hm_positionsnummer, [de] hm_positionsnummer
     ↪ Preis = [en] hm_preis, [de] hm_preis
     ↪ Verordnungsdatum = [en] hm_verordnungsdatum, [de] hm_verordnungsdatum
   ↪ Icd
     ↪ Bedingung
       ↪ Gekennzeichnet
         ↪ Durch
           ↪ Diagnose
             ↪ Code
               ↪ Auspraegung
                 ↪ Chronische
                   ↪ Erkrankung = [en] rueckenbeschwerde=ICD - Bedingung gekennzeichnet durch Diagnose Code Ausprägung chronische Erkrankung:Rückenbeschwerden, [de] rueckenbeschwerde=ICD - Bedingung gekennzeichnet durch Diagnose Code Ausprägung chronische Erkrankung:Rückenbeschwerden
   ↪ Jetzt = [en] Jetzt, [de] Jetzt
   ↪ Klinik
     ↪ Adrg = [en] Klinik_ADRG, [de] Klinik_ADRG
     ↪ Aufnahmedatum = [en] Klinik_Aufnahmedatum, [de] Klinik_Aufnahmedatum
     ↪ Aufnahmegrund = [en] Klinik_Aufnahmegrund, [de] Klinik_Aufnahmegrund
     ↪ Aufnahmeuhrzeit = [en] Klinik_Aufnahmeuhrzeit, [de] Klinik_Aufnahmeuhrzeit
     ↪ Beatmungsstunden = [en] Klinik_Beatmungsstunden, [de] Klinik_Beatmungsstunden
     ↪ Drg = [en] Klinik_DRG, [de] Klinik_DRG
     ↪ Entgeltanzahl = [en] Klinik_Entgeltanzahl, [de] Klinik_Entgeltanzahl
     ↪ Entgeltart = [en] Klinik_Entgeltart, [de] Klinik_Entgeltart
     ↪ Entgeltbereich = [en] Klinik_Entgeltbereich, [de] Klinik_Entgeltbereich
     ↪ Entgeltbetrag = [en] Klinik_Entgeltbetrag, [de] Klinik_Entgeltbetrag
     ↪ Entlassungsdatum = [en] Klinik_Entlassungsdatum, [de] Klinik_Entlassungsdatum
     ↪ Entlassungsgrund = [en] Klinik_Entlassungsgrund, [de] Klinik_Entlassungsgrund
     ↪ Entlassungsuhrzeit = [en] Klinik_Entlassungsuhrzeit, [de] Klinik_Entlassungsuhrzeit
     ↪ Fallanzahl = [en] Klinik_Fallanzahl, [de] Klinik_Fallanzahl
     ↪ Fallkosten = [en] Klinik_Fallkosten, [de] Klinik_Fallkosten
     ↪ Hauptdiagnose = [en] Klinik_Hauptdiagnose, [de] Klinik_Hauptdiagnose
     ↪ Ikz = [en] Klinik_IKZ, [de] Klinik_IKZ
     ↪ Nebendiagnose = [en] Klinik_Nebendiagnose, [de] Klinik_Nebendiagnose
     ↪ Ogvd = [en] Klinik_oGVD, [de] Klinik_oGVD
     ↪ Partition = [en] Klinik_Partition, [de] Klinik_Partition
     ↪ Pepp = [en] Klinik_PEPP, [de] Klinik_PEPP
     ↪ Prozedur = [en] Klinik_Prozedur, [de] Klinik_Prozedur
     ↪ Sk = [en] Klinik_SK, [de] Klinik_SK
     ↪ Ugvd = [en] Klinik_uGVD, [de] Klinik_uGVD
     ↪ Verweildauer = [en] Klinik_Verweildauer, [de] Klinik_Verweildauer
     ↪ Vwd
       ↪ Stunden = [en] Klinik_Vwd_Stunden, [de] Klinik_Vwd_Stunden
   ↪ Kostengewicht
     ↪ Effektiv = [en] Kostengewicht_effektiv, [de] Kostengewicht_effektiv
     ↪ Katalog = [en] Kostengewicht_Katalog, [de] Kostengewicht_Katalog
   ↪ Laborbeschreibung = [en] Laborbeschreibung, [de] Laborbeschreibung
   ↪ Laboreinheit = [en] Laboreinheit, [de] Laboreinheit
   ↪ Menu
     ↪ Master
       ↪ Dates = [en] Stammdaten, [de] Stammdaten
   ↪ Mittlere
     ↪ Verweildauer = [en] mittlere_Verweildauer, [de] mittlere_Verweildauer
   ↪ Mpreis = [en] MPreis, [de] MPreis
   ↪ Mverordnungsdatum = [en] MVerordnungsdatum, [de] MVerordnungsdatum
   ↪ Nebendiagnoselokalisation = [en] NebendiagnoseLokalisation, [de] NebendiagnoseLokalisation
   ↪ Nebendiagnosetype = [en] NebendiagnoseType, [de] NebendiagnoseType
   ↪ Obere
     ↪ Grenzverweildauer = [en] obere_Grenzverweildauer, [de] obere_Grenzverweildauer
   ↪ Pepp
     ↪ Grouperstate = [en] PEPP, [de] PEPP
   ↪ Pflegecwtag = [en] PflegeCWTag, [de] PflegeCWTag
   ↪ Pflegetage = [en] Pflegetage, [de] Pflegetage
   ↪ Pflegetagedrg = [en] PflegetageDRG, [de] PflegetageDRG
   ↪ Pruefdatum1
     ↪ Aufnahmedatum = [en] Prüfdatum1 (Aufnahmedatum), [de] Prüfdatum1 (Aufnahmedatum)
   ↪ Pruefdatum2
     ↪ Entlassungsdatum = [en] Prüfdatum2 (Entlassungsdatum), [de] Prüfdatum2 (Entlassungsdatum)
   ↪ Pzncode = [en] PZNCode, [de] PZNCode
   ↪ Sekdiagnose = [en] SekDiagnose, [de] SekDiagnose
   ↪ Sekdiagnoselokalisation = [en] SekDiagnoseLokalisation, [de] SekDiagnoseLokalisation
   ↪ Sekdiagnoseprim = [en] SekDiagnosePrim, [de] SekDiagnosePrim
   ↪ Sekdiagnosetype = [en] SekDiagnoseType, [de] SekDiagnoseType
   ↪ Supergroup
     ↪ Acg
       ↪ Tooltip = [en] ACG, [de] ACG
     ↪ Ambu
       ↪ Data
         ↪ Tooltip = [en] ambulante Daten, [de] ambulante Daten
     ↪ Data
       ↪ Case
         ↪ Tooltip = [en] Krankenhausdaten, [de] Krankenhausdaten
     ↪ Gk
       ↪ Rsa
         ↪ Dis = [en] GK RSA Prüfung, [de] GK RSA Prüfung
     ↪ Hosp
       ↪ Case
         ↪ Tooltip = [en] Krankenhaus-Einzellfall, [de] Krankenhaus-Einzellfall
     ↪ Mrsa
       ↪ Dis = [en] Morbi RSA, [de] Morbi RSA
   ↪ Tagderentbindung1 = [en] TagDerEntbindung1, [de] TagDerEntbindung1
   ↪ Tagderentbindung2 = [en] TagDerEntbindung2, [de] TagDerEntbindung2
   ↪ Tageohneberechnung = [en] TageOhneBerechnung, [de] TageOhneBerechnung
   ↪ Tageohneberechnungproentgelt = [en] TageOhneBerechnungProEntgelt, [de] TageOhneBerechnungProEntgelt
   ↪ Temp
     ↪ 100
       ↪ Rechnungsdatum = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     ↪ 101
       ↪ Entgeltsumme = [en] Format: Währung (Beispiel: 2200.55), [de] Format: Währung (Beispiel: 2200.55)
     ↪ 102
       ↪ Tageohneberechnungproentgelt = [en] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen. Erfasst am DRG - Entgeltschlüssel für den §301 Datensatz., [de] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen. Erfasst am DRG - Entgeltschlüssel für den §301 Datensatz.
     ↪ 103
       ↪ Tageohneberechnungproentgelt = [en] Format: Ganzzahlig (Beispiel 3), [de] Format: Ganzzahlig (Beispiel 3)
     ↪ 104
       ↪ Untere
         ↪ Grenzverweildauer = [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     ↪ 105
       ↪ Zuschlagstage = [en] Format: Ganzzahlig (Beispiel 5), [de] Format: Ganzzahlig (Beispiel 5)
     ↪ 106
       ↪ Aufnahmedatum = [en] Die Uhrzeit der Aufnahme wird nicht berücksichtigt, [de] Die Uhrzeit der Aufnahme wird nicht berücksichtigt
     ↪ 107
       ↪ Aufnahmedatum = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     ↪ 108
       ↪ Aufnahmedatum
         ↪ Mit
           ↪ Uhrzeit = [en] Die Uhrzeit der Aufnahme wird mitberücksichtigt, [de] Die Uhrzeit der Aufnahme wird mitberücksichtigt
     ↪ 109
       ↪ Aufnahmedatum
         ↪ Mit
           ↪ Uhrzeit = [en] Format: YYYYMMDD HH:mm, [de] Format: YYYYMMDD HH:mm
     ↪ 10
       ↪ He
         ↪ Menge = [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat., [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.
     ↪ 110
       ↪ Aufnahmejahr = [en] Format: YYYY, [de] Format: YYYY
     ↪ 111
       ↪ Aufnahmemonat = [en] Format: MM, [de] Format: MM
     ↪ 112
       ↪ Aufnahmetag = [en] Format: DD, [de] Format: DD
     ↪ 113
       ↪ Aufnahmeuhrzeit = [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten, [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     ↪ 114
       ↪ Beatmungsdauer = [en] Format: Ganzzahlig (Beispiel 30), [de] Format: Ganzzahlig (Beispiel 30)
     ↪ 115
       ↪ Einweisenderarzt = [en] Format: 9-stellig numerisch (Beispiel: 123456789), [de] Format: 9-stellig numerisch (Beispiel: 123456789)
     ↪ 116
       ↪ Einweisendeskrankenhaus = [en] Format: 9-stellig numerisch (Beispiel: 123456789), [de] Format: 9-stellig numerisch (Beispiel: 123456789)
     ↪ 117
       ↪ Entlassungsdatum = [en] Die Uhrzeit der Entlassung wird nicht berücksichtigt, [de] Die Uhrzeit der Entlassung wird nicht berücksichtigt
     ↪ 118
       ↪ Entlassungsdatum = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     ↪ 119
       ↪ Entlassungsdatum
         ↪ Mit
           ↪ Uhrzeit = [en] Die Uhrzeit der Entlassung wird mitberücksichtigt, [de] Die Uhrzeit der Entlassung wird mitberücksichtigt
     ↪ 11
       ↪ He
         ↪ Menge = [en] Format: numerisch (Beispiel: 5), [de] Format: numerisch (Beispiel: 5)
     ↪ 120
       ↪ Entlassungsdatum
         ↪ Mit
           ↪ Uhrzeit = [en] Format: YYYYMMDD HH:mm, [de] Format: YYYYMMDD HH:mm
     ↪ 121
       ↪ Entlassungsjahr = [en] Format: YYYY, [de] Format: YYYY
     ↪ 122
       ↪ Entlassungsmonat = [en] Format: MM, [de] Format: MM
     ↪ 123
       ↪ Entlassungstag = [en] Format: DD, [de] Format: DD
     ↪ 124
       ↪ Entlassungsuhrzeit = [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten, [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     ↪ 125
       ↪ Fallnummer = [en] Fallnummer dient mit dem IK des Krankenhauses zur eindeutigen Bestimmung des Behandlungsfalls. Mit der Vergabe des KH-internen Kennzeichens muß die eindeutige Identifikation des Behandlungsfalls sichergestellt sein. Es ist in der Regel die fortlaufend vergebene Aufnahmenummer., [de] Fallnummer dient mit dem IKZ des Krankenhauses zur eindeutigen Bestimmung des Behandlungsfalls. Mit der Vergabe des KH-internen Kennzeichens muß die eindeutige Identifikation des Behandlungsfalls sichergestellt sein. Es ist in der Regel die fortlaufend vergebene Aufnahmenummer.
     ↪ 126
       ↪ Institutionskennzeichen = [en] Alle Einrichtungen, die Leistungen nach dem Sozialgesetzbuch (SGB) erbringen, erhalten auf Antrag ein IK. Systematik einer IK: die ersten 2 Ziffern kennzeichnen die Art der Einrichtung, die Ziffern 3 und 4 kennzeichnen das Bundesland der Einrichtung, die Ziffer 5 bis 8 werden fortlaufend vergeben, die Ziffer 9 dient als Prüfziffer., [de] Alle Einrichtungen, die Leistungen nach dem Sozialgesetzbuch (SGB) erbringen, erhalten auf Antrag ein IK. Systematik einer IK: die ersten 2 Ziffern kennzeichnen die Art der Einrichtung, die Ziffern 3 und 4 kennzeichnen das Bundesland der Einrichtung, die Ziffer 5 bis 8 werden fortlaufend vergeben, die Ziffer 9 dient als Prüfziffer.
     ↪ 127
       ↪ Institutionskennzeichen = [en] Format: 9-stellig numerisch (Beispiel: 123456789), [de] Format: 9-stellig numerisch (Beispiel: 123456789)
     ↪ 128
       ↪ Intensivverweildauer = [en] Format: Ganzzahlig (Beispiel 5), [de] Format: Ganzzahlig (Beispiel 5)
     ↪ 129
       ↪ Krankenkasse = [en] Format: 9-stellig numerisch (Beispiel: 123456789), [de] Format: 9-stellig numerisch (Beispiel: 123456789)
     ↪ 12
       ↪ He
         ↪ Verordnungsdatum = [en] Datum, an dem das Hilfsmittel verordnet wurde., [de] Datum, an dem das Hilfsmittel verordnet wurde.
     ↪ 130
       ↪ Tagderentbindung1 = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     ↪ 131
       ↪ Tagderentbindung2 = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     ↪ 132
       ↪ Tageohneberechnung = [en] Format: Format: Ganzzahlig (Beispiel 3), [de] Format: Format: Ganzzahlig (Beispiel 3)
     ↪ 133
       ↪ Urlaub = [en] Eine Beurlaubung liegt vor, wenn ein Patient mit Zustimmung des behandelnden Krankenhausarztes die Krankenhausbehandlung zeitlich befristet unterbricht, die stationäre Behandlung jedoch noch nicht abgeschlossen ist. Wird ein Patient beurlaubt, sind die vollständigen Urlaubstage, d. h. nicht der Tag des Urlaubsantritts bzw. - Endes, in der Rechnung auszuweisen. Vollständige Urlaubstage fließen nicht in die Berechnung der Verweildauer ein. Die Abrechnung erfolgt über die Entgeltgruppe 43., [de] Eine Beurlaubung liegt vor, wenn ein Patient mit Zustimmung des behandelnden Krankenhausarztes die Krankenhausbehandlung zeitlich befristet unterbricht, die stationäre Behandlung jedoch noch nicht abgeschlossen ist. Wird ein Patient beurlaubt, sind die vollständigen Urlaubstage, d. h. nicht der Tag des Urlaubsantritts bzw. - Endes, in der Rechnung auszuweisen. Vollständige Urlaubstage fließen nicht in die Berechnung der Verweildauer ein. Die Abrechnung erfolgt über die Entgeltgruppe 43.
     ↪ 134
       ↪ Urlaub = [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     ↪ 135
       ↪ Verweildauer = [en] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus., [de] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     ↪ 136
       ↪ Verweildauer = [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     ↪ 137
       ↪ Verweildauerinstunden = [en] Format: Ganzzahlig (Beispiel 50), [de] Format: Ganzzahlig (Beispiel 50)
     ↪ 138
       ↪ Gleichenprozedurenanzahl = [en] Format: Ganzzahlig (Beispiel 4), [de] Format: Ganzzahlig (Beispiel 4)
     ↪ 139
       ↪ Anzahlnebendiagnosen = [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     ↪ 13
       ↪ He
         ↪ Verordnungsdatum = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     ↪ 140
       ↪ Anzahlprozeduren = [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     ↪ 141
       ↪ Aufnahmediagnose = [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     ↪ 142
       ↪ Diagnose = [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     ↪ 143
       ↪ Hauptdiagnose = [en] Die Diagnose, welche nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code., [de] Die Diagnose, welche nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     ↪ 144
       ↪ Hauptdiagnose = [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     ↪ 145
       ↪ Nebendiagnose = [en] Eine Krankheit oder Beschwerde, die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code., [de] Eine Krankheit oder Beschwerde, die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     ↪ 146
       ↪ Nebendiagnose = [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     ↪ 147
       ↪ Opsdatum = [en] Format: YYYYMMDD; nur in Verbindung mit einem Prozedurenkode sinnvoll, [de] Format: YYYYMMDD; nur in Verbindung mit einem Prozedurenkode sinnvoll
     ↪ 148
       ↪ Prozedur = [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)
     ↪ 149
       ↪ Sekdiagnose = [en] z.B. N08.3* Glomeruläre Krankheiten bei Diabetes mellitus oder U81! Bakterien mit Multiresistenz gegen Antibiotika, [de] z.B. N08.3* Glomeruläre Krankheiten bei Diabetes mellitus oder U81! Bakterien mit Multiresistenz gegen Antibiotika
     ↪ 14
       ↪ Hm
         ↪ Preis = [en] Die Kosten des Hilfsmittels., [de] Die Kosten des Hilfsmittels.
     ↪ 150
       ↪ Sekdiagnose = [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     ↪ 151
       ↪ Sekdiagnoseprim = [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     ↪ 152
       ↪ Klinik
         ↪ Hauptdiagnose = [en] Klinische Daten: Siehe Hauptdiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code., [de] Klinische Daten: Siehe Hauptdiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     ↪ 153
       ↪ Klinik
         ↪ Hauptdiagnose = [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     ↪ 154
       ↪ Klinik
         ↪ Nebendiagnose = [en] Klinische Daten: Siehe Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code., [de] Klinische Daten: Siehe Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     ↪ 155
       ↪ Klinik
         ↪ Nebendiagnose = [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     ↪ 156
       ↪ Klinik
         ↪ Prozedur = [en] Klinische Daten: Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code., [de] Klinische Daten: Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.
     ↪ 157
       ↪ Klinik
         ↪ Prozedur = [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)
     ↪ 158
       ↪ Klinik
         ↪ Adrg = [en] Klinische Daten: Basis - DRG: DRG ohne letzte Stelle (für Schweregrad)., [de] Klinische Daten: Basis - DRG: DRG ohne letzte Stelle (für Schweregrad).
     ↪ 159
       ↪ Klinik
         ↪ Adrg = [en] Format: Alphanumerisch (Beispiele: A11 oder B75), [de] Format: Alphanumerisch (Beispiele: A11 oder B75)
     ↪ 15
       ↪ Hm
         ↪ Preis = [en] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75), [de] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)
     ↪ 160
       ↪ Klinik
         ↪ Drg = [en] Format: Alphanumerisch (Beispiele: A11B oder B75A), [de] Format: Alphanumerisch (Beispiele: A11B oder B75A)
     ↪ 161
       ↪ Klinik
         ↪ Ogvd = [en] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig., [de] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.
     ↪ 162
       ↪ Klinik
         ↪ Ogvd = [en] Format: Ganzzahlig (Beispiel 15), [de] Format: Ganzzahlig (Beispiel 15)
     ↪ 163
       ↪ Klinik
         ↪ Ugvd = [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     ↪ 164
       ↪ Klinik
         ↪ Pepp = [en] Klinische Daten:Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik, [de] Klinische Daten:Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik
     ↪ 165
       ↪ Klinik
         ↪ Pepp = [en] Format: Aplhanumerisch (Beispiele P003B, TK04Z), [de] Format: Aplhanumerisch (Beispiele P003B, TK04Z)
     ↪ 166
       ↪ Klinik
         ↪ Entgeltanzahl = [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     ↪ 167
       ↪ Klinik
         ↪ Entgeltart = [en] Format: alphanumerisch 8-stellig (Beispiel: 48000001), [de] Format: alphanumerisch 8-stellig (Beispiel: 48000001)
     ↪ 168
       ↪ Fall
         ↪ Numeric10 = [de] Fall.Numeric10
       ↪ Klinik
         ↪ Entgeltbetrag = [en] Format: Währung (Beispiel: 57.52), [de] Format: Währung (Beispiel: 57.52)
     ↪ 169
       ↪ Fall
         ↪ Numeric6 = [de] Fall.Numeric6
       ↪ Klinik
         ↪ Aufnahmedatum = [en] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird., [de] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     ↪ 16
       ↪ Hm
         ↪ Gesamtmenge = [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist., [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.
     ↪ 170
       ↪ Fall
         ↪ Numeric7 = [de] Fall.Numeric7
       ↪ Klinik
         ↪ Aufnahmedatum = [en] Die Uhrzeit der Aufnahme wird nicht berücksichtigt, [de] Die Uhrzeit der Aufnahme wird nicht berücksichtigt
     ↪ 171
       ↪ Fall
         ↪ Numeric8 = [de] Fall.Numeric8
       ↪ Klinik
         ↪ Aufnahmedatum = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     ↪ 172
       ↪ Fall
         ↪ Numeric9 = [de] Fall.Numeric9
       ↪ Klinik
         ↪ Aufnahmedatum
           ↪ Mit
             ↪ Uhrzeit = [en] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird., [de] Klinische Daten: Aufnahmedatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     ↪ 173
       ↪ Fall
         ↪ String10 = [de] Fall.String10
       ↪ Klinik
         ↪ Aufnahmedatum
           ↪ Mit
             ↪ Uhrzeit = [en] Die Uhrzeit der Aufnahme wird mitberücksichtigt, [de] Die Uhrzeit der Aufnahme wird mitberücksichtigt
     ↪ 174
       ↪ Fall
         ↪ String6 = [de] Fall.String6
       ↪ Klinik
         ↪ Aufnahmedatum
           ↪ Mit
             ↪ Uhrzeit = [en] Format: YYYYMMDD HH:mm, [de] Format: YYYYMMDD HH:mm
     ↪ 175
       ↪ Fall
         ↪ String7 = [de] Fall.String7
       ↪ Klinik
         ↪ Aufnahmeuhrzeit = [en] Klinische Daten: Aufnahmeuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird., [de] Klinische Daten: Aufnahmeuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     ↪ 176
       ↪ Fall
         ↪ String8 = [de] Fall.String8
       ↪ Klinik
         ↪ Aufnahmeuhrzeit = [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten, [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     ↪ 177
       ↪ Fall
         ↪ String9 = [de] Fall.String9
       ↪ Klinik
         ↪ Beatmungsstunden = [en] Format: Ganzzahlig (Beispiel 30), [de] Format: Ganzzahlig (Beispiel 30)
     ↪ 178
       ↪ Klinik
         ↪ Entlassungsdatum = [en] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird., [de] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     ↪ 179
       ↪ Klinik
         ↪ Entlassungsdatum = [en] Die Uhrzeit der Entlassung wird nicht berücksichtigt, [de] Die Uhrzeit der Entlassung wird nicht berücksichtigt
     ↪ 17
       ↪ Hm
         ↪ Gesamtmenge = [en] Format: numerisch (Beispiel: 5), [de] Format: numerisch (Beispiel: 5)
     ↪ 180
       ↪ Klinik
         ↪ Entlassungsdatum = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     ↪ 181
       ↪ Klinik
         ↪ Entlassungsdatum
           ↪ Mit
             ↪ Uhrzeit = [en] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird., [de] Klinische Daten: Entlassungsdatum eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     ↪ 182
       ↪ Klinik
         ↪ Entlassungsdatum
           ↪ Mit
             ↪ Uhrzeit = [en] Die Uhrzeit der Entlassung wird mitberücksichtigt, [de] Die Uhrzeit der Entlassung wird mitberücksichtigt
     ↪ 183
       ↪ Klinik
         ↪ Entlassungsdatum
           ↪ Mit
             ↪ Uhrzeit = [en] Format: YYYYMMDD HH:mm, [de] Format: YYYYMMDD HH:mm
     ↪ 184
       ↪ Klinik
         ↪ Entlassungsuhrzeit = [en] Klinische Daten: Entlassungsuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird., [de] Klinische Daten: Entlassungsuhrzeit eines Krankenhausaufenthaltes des Patienten, wobei der aktuelle Fall dabei nicht beachtet wird.
     ↪ 185
       ↪ Klinik
         ↪ Entlassungsuhrzeit = [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten, [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     ↪ 186
       ↪ Klinik
         ↪ Fallanzahl = [en] Klinische Daten: Die Summe der Fälle eines Patienten., [de] Klinische Daten: Die Summe der Fälle eines Patienten.
     ↪ 187
       ↪ Klinik
         ↪ Fallanzahl = [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     ↪ 188
       ↪ Klinik
         ↪ Fallkosten = [en] Klinische Daten: Gesamtkosten enes Falls, [de] Klinische Daten: Gesamtkosten enes Falls
     ↪ 189
       ↪ Klinik
         ↪ Ikz = [en] Klinische Daten: Institutionskennzeichen. Siehe Institutionskennzeichen IK., [de] Klinische Daten: Institutionskennzeichen. Siehe Institutionskennzeichen IK.
     ↪ 18
       ↪ Hm
         ↪ Gesamtpreis
           ↪ Alle = [en] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat., [de] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.
     ↪ 190
       ↪ Klinik
         ↪ Ikz = [en] Format: 9-stellig numerisch (Beispiel: 123456789), [de] Format: 9-stellig numerisch (Beispiel: 123456789)
     ↪ 191
       ↪ Klinik
         ↪ Verweildauer = [en] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus., [de] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     ↪ 192
       ↪ Klinik
         ↪ Verweildauer = [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     ↪ 193
       ↪ Klinik
         ↪ Vwd
           ↪ Stunden = [en] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus., [de] Maßgeblich für die Ermittlung der Verweildauer in Tagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes ohne den Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     ↪ 194
       ↪ Klinik
         ↪ Vwd
           ↪ Stunden = [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     ↪ 195
       ↪ Arzneimittel = [en] GK RSA:Anzahl der Packungen, [de] GK RSA:Anzahl der Packungen
     ↪ 196
       ↪ Arzneimittel = [en] GK RSA:ATC-Code, [de] GK RSA:ATC-Code
     ↪ 197
       ↪ Arzneimittel = [en] GK RSA:DDD, [de] GK RSA:DDD
     ↪ 198
       ↪ Arzneimittel = [en] GK RSA:PZN-Code, [de] GK RSA:PZN-Code
     ↪ 199
       ↪ Arzneimittel = [en] GK RSA:PZN-Gesamtdosis, [de] GK RSA:PZN-Gesamtdosis
     ↪ 19
       ↪ Hm
         ↪ Gesamtpreis
           ↪ Alle = [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
     ↪ 1
       ↪ He
         ↪ Preis = [en] Die Kosten des Hilfsmittels., [de] Die Kosten des Hilfsmittels.
     ↪ 200
       ↪ Gk
         ↪ Rsa
           ↪ Packunganzahl = [en] GK RSA:Anzahl der Packungen, [de] GK RSA:Anzahl der Packungen
     ↪ 201
       ↪ Gk
         ↪ Rsa
           ↪ Atccode = [en] GK RSA:ATC-Code, [de] GK RSA:ATC-Code
     ↪ 202
       ↪ Gk
         ↪ Rsa
           ↪ Atccode = [en] Wird mit der Satzart 400 übermittelt. Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Angegeben werden die von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATCs. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04, [de] Wird mit der Satzart 400 übermittelt. Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Angegeben werden die von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATCs. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04
     ↪ 203
       ↪ Gk
         ↪ Rsa
           ↪ Ddd = [en] GK RSA:DDD, [de] GK RSA:DDD
     ↪ 204
       ↪ Gk
         ↪ Rsa
           ↪ Pzncode = [en] GK RSA:PZN-Code, [de] GK RSA:PZN-Code
     ↪ 205
       ↪ Gk
         ↪ Rsa
           ↪ Pzncode = [en] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918., [de] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918.
     ↪ 206
       ↪ Gk
         ↪ Rsa
           ↪ Pzngesamtdosis = [en] GK RSA:PZN-Gesamtdosis, [de] GK RSA:PZN-Gesamtdosis
     ↪ 207
       ↪ Gk
         ↪ Rsa
           ↪ Pzngesamtdosis = [en] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können. Ist mit Hilfe der Tabelle des WiDO zu ermitteln. Die Summe aller Mengen der Medikamente, bei denen ein PZN ? Code eingetragen ist., [de] Angegeben werden die PZN, die einem von Bundesversicherungsamt für die Zuordnung in eine Diagnosegruppe (DxG) verantwortlichen ATC-Code zugeordnet werden können. Ist mit Hilfe der Tabelle des WiDO zu ermitteln. Die Summe aller Mengen der Medikamente, bei denen ein PZN ? Code eingetragen ist.
     ↪ 208
       ↪ Ausgaben = [en] GK RSA:Ausgaben für Apotheken, [de] GK RSA:Ausgaben für Apotheken
     ↪ 209
       ↪ Ausgaben = [en] GK RSA:Ausgaben für Heil- und Hilfsmittel, [de] GK RSA:Ausgaben für Heil- und Hilfsmittel
     ↪ 20
       ↪ Hm
         ↪ Gesamtpreis = [en] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist., [de] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.
     ↪ 210
       ↪ Ausgaben = [en] GK RSA:Ausgaben für KH, [de] GK RSA:Ausgaben für KH
     ↪ 211
       ↪ Ausgaben = [en] GK RSA:Ausgaben für Zahnärzte, [de] GK RSA:Ausgaben für Zahnärzte
     ↪ 212
       ↪ Ausgaben = [en] GK RSA:Ausgaben für Ärzte, [de] GK RSA:Ausgaben für Ärzte
     ↪ 213
       ↪ Ausgaben = [en] GK RSA:Ausgaben gesamt, [de] GK RSA:Ausgaben gesamt
     ↪ 214
       ↪ Ausgaben = [en] GK RSA:Mehrleistungen DMP, [de] GK RSA:Mehrleistungen DMP
     ↪ 215
       ↪ Ausgaben = [en] GK RSA:Sachkosten bei extrakorporaler Blutreinigung, [de] GK RSA:Sachkosten bei extrakorporaler Blutreinigung
     ↪ 216
       ↪ Gk
         ↪ Rsa
           ↪ Apothekenausgaben = [en] GK RSA:Ausgaben für Apotheken, [de] GK RSA:Ausgaben für Apotheken
     ↪ 217
       ↪ Gk
         ↪ Rsa
           ↪ Soleasugaben = [en] GK RSA:Ausgaben für Heil- und Hilfsmittel, [de] GK RSA:Ausgaben für Heil- und Hilfsmittel
     ↪ 218
       ↪ Gk
         ↪ Rsa
           ↪ Khausgaben = [en] GK RSA:Ausgaben für KH, [de] GK RSA:Ausgaben für KH
     ↪ 219
       ↪ Gk
         ↪ Rsa
           ↪ Zahnarztausgaben = [en] GK RSA:Ausgaben für Zahnärzte, [de] GK RSA:Ausgaben für Zahnärzte
     ↪ 21
       ↪ Hm
         ↪ Gesamtpreis = [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
     ↪ 220
       ↪ Gk
         ↪ Rsa
           ↪ Arztausgaben = [en] GK RSA:Ausgaben für Ärzte, [de] GK RSA:Ausgaben für Ärzte
     ↪ 221
       ↪ Gk
         ↪ Rsa
           ↪ Ausgabengesamt = [en] GK RSA:Ausgaben gesamt, [de] GK RSA:Ausgaben gesamt
     ↪ 222
       ↪ Gk
         ↪ Rsa
           ↪ Mehrleistungdmp = [en] GK RSA:Mehrleistungen DMP, [de] GK RSA:Mehrleistungen DMP
     ↪ 223
       ↪ Gk
         ↪ Rsa
           ↪ Extblutreinigungausgaben = [en] GK RSA:Sachkosten bei extrakorporaler Blutreinigung, [de] GK RSA:Sachkosten bei extrakorporaler Blutreinigung
     ↪ 224
       ↪ Versichertendaten = [en] GK RSA:Alter, [de] GK RSA:Alter
     ↪ 225
       ↪ Versichertendaten = [en] GK RSA:DMP-Tage, [de] GK RSA:DMP-Tage
     ↪ 226
       ↪ Versichertendaten = [en] GK RSA:Erwerbsminderungstage, [de] GK RSA:Erwerbsminderungstage
     ↪ 227
       ↪ Versichertendaten = [en] GK RSA:Geschlecht, [de] GK RSA:Geschlecht
     ↪ 228
       ↪ Versichertendaten = [en] GK RSA:Versichertentage, [de] GK RSA:Versichertentage
     ↪ 229
       ↪ Versichertendaten = [en] GK RSA:Verstorben, [de] GK RSA:Verstorben
     ↪ 22
       ↪ Hm
         ↪ Positionsnummer = [en] Pharmazentralnummer für Hilfsmittel, [de] Pharmazentralnummer für Hilfsmittel
     ↪ 230
       ↪ Gk
         ↪ Rsa
           ↪ Alter = [en] GK RSA:Alter, [de] GK RSA:Alter
     ↪ 231
       ↪ Gk
         ↪ Rsa
           ↪ Dmptage = [en] GK RSA:DMP-Tage, [de] GK RSA:DMP-Tage
     ↪ 232
       ↪ Gk
         ↪ Rsa
           ↪ Erwerbsminderungstage = [en] GK RSA:Erwerbsminderungstage, [de] GK RSA:Erwerbsminderungstage
     ↪ 233
       ↪ Gk
         ↪ Rsa
           ↪ Geschlecht = [en] GK RSA:Geschlecht, [de] GK RSA:Geschlecht
     ↪ 234
       ↪ Gk
         ↪ Rsa
           ↪ Versichertentage = [en] GK RSA:Versichertentage, [de] GK RSA:Versichertentage
     ↪ 235
       ↪ Gk
         ↪ Rsa
           ↪ Verstorben = [en] GK RSA:Verstorben, [de] GK RSA:Verstorben
     ↪ 236
       ↪ Erloese = [en] GK RSA:AGG, [de] GK RSA:AGG
     ↪ 237
       ↪ Erloese = [en] GK RSA:Anzahl der HMGs, [de] GK RSA:Anzahl der HMGs
     ↪ 238
       ↪ Erloese = [en] GK RSA:EMG, [de] GK RSA:EMG
     ↪ 239
       ↪ Erloese = [en] GK RSA:Gesamterlöse aus dem RSA, [de] GK RSA:Gesamterlöse aus dem RSA
     ↪ 23
       ↪ Hm
         ↪ Menge = [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat., [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.
     ↪ 240
       ↪ Erloese = [en] GK RSA:HMG, [de] GK RSA:HMG
     ↪ 241
       ↪ Gk
         ↪ Rsa
           ↪ Agg = [en] GK RSA:AGG, [de] GK RSA:AGG
     ↪ 242
       ↪ Gk
         ↪ Rsa
           ↪ Hmganzahl = [en] GK RSA:Anzahl der HMGs, [de] GK RSA:Anzahl der HMGs
     ↪ 243
       ↪ Gk
         ↪ Rsa
           ↪ Emg = [en] GK RSA:EMG, [de] GK RSA:EMG
     ↪ 244
       ↪ Gk
         ↪ Rsa
           ↪ Elrloesgesamt = [en] GK RSA:Gesamterlöse aus dem RSA, [de] GK RSA:Gesamterlöse aus dem RSA
     ↪ 245
       ↪ Gk
         ↪ Rsa
           ↪ Hmg = [en] GK RSA:HMG, [de] GK RSA:HMG
     ↪ 246
       ↪ Gk
         ↪ Rsa
           ↪ Hmg = [en] Das Klassifikationssystem unterscheidet 106 zuschlagsfähige hierarchisierte Morbiditätsgruppen (HMG), die jeweils aus mindestens einer DxGruppe (DxG) zusammengesetzt sind, die ihrerseits mindestens einen ICD-Code umfassen. Alle HMG, die ihnen zugeordneten DxG und ICD-Codes sowie die für die Zuordnung definierten Altersgrenzen, das jeweils zulässige Geschlecht sowie die Zusatzkennzeichen des Deutschen Instituts für Medizinische Dokumentation und Information (DIMDI) nach §§ 295 und 301 SGB V werden in Anlage 1 dokumentiert., [de] Das Klassifikationssystem unterscheidet 106 zuschlagsfähige hierarchisierte Morbiditätsgruppen (HMG), die jeweils aus mindestens einer DxGruppe (DxG) zusammengesetzt sind, die ihrerseits mindestens einen ICD-Code umfassen. Alle HMG, die ihnen zugeordneten DxG und ICD-Codes sowie die für die Zuordnung definierten Altersgrenzen, das jeweils zulässige Geschlecht sowie die Zusatzkennzeichen des Deutschen Instituts für Medizinische Dokumentation und Information (DIMDI) nach §§ 295 und 301 SGB V werden in Anlage 1 dokumentiert.
     ↪ 247
       ↪ Diagnosengruppen = [en] GK RSA:ambulante Diagnosen, [de] GK RSA:ambulante Diagnosen
     ↪ 248
       ↪ Diagnosengruppen = [en] GK RSA:Ambulante Diagnosen Leistungsquartal, [de] GK RSA:Ambulante Diagnosen Leistungsquartal
     ↪ 249
       ↪ Diagnosengruppen = [en] GK RSA:Ambulante Diagnosen Qualifizierung, [de] GK RSA:Ambulante Diagnosen Qualifizierung
     ↪ 24
       ↪ Hm
         ↪ Menge = [en] Format: numerisch (Beispiel: 5), [de] Format: numerisch (Beispiel: 5)
     ↪ 250
       ↪ Diagnosengruppen = [en] GK RSA:Ambulante DxG, [de] GK RSA:Ambulante DxG
     ↪ 251
       ↪ Diagnosengruppen = [en] GK RSA:ambulante HMG relevante Diagnosen, [de] GK RSA:ambulante HMG relevante Diagnosen
     ↪ 252
       ↪ Diagnosengruppen = [en] GK RSA:Ambulante HMG relevante DxG, [de] GK RSA:Ambulante HMG relevante DxG
     ↪ 253
       ↪ Diagnosengruppen = [en] GK RSA:Ambulante Krankheitsnummer, [de] GK RSA:Ambulante Krankheitsnummer
     ↪ 254
       ↪ Diagnosengruppen = [en] GK RSA:DxG, [de] GK RSA:DxG
     ↪ 255
       ↪ Diagnosengruppen = [en] GK RSA:Krankheitsgruppe, [de] GK RSA:Krankheitsgruppe
     ↪ 256
       ↪ Diagnosengruppen = [en] GK RSA:Stationäre DxG, [de] GK RSA:Stationäre DxG
     ↪ 257
       ↪ Diagnosengruppen = [en] GK RSA:stationäre Diagnosen, [de] GK RSA:stationäre Diagnosen
     ↪ 258
       ↪ Diagnosengruppen = [en] GK RSA:Stationäre HMG relevante DxG, [de] GK RSA:Stationäre HMG relevante DxG
     ↪ 259
       ↪ Diagnosengruppen = [en] GK RSA:Stationäre Krankheitsnummer, [de] GK RSA:Stationäre Krankheitsnummer
     ↪ 25
       ↪ Hm
         ↪ Menge = [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat., [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat.
     ↪ 260
       ↪ Diagnosengruppen = [en] GK RSA:stationäre Hauptdiagnosen, [de] GK RSA:stationäre Hauptdiagnosen
     ↪ 261
       ↪ Diagnosengruppen = [en] GK RSA:stationäre HMG relevante Diagnosen, [de] GK RSA:stationäre HMG relevante Diagnosen
     ↪ 262
       ↪ Diagnosengruppen = [en] GK RSA:stationäre Nebendiagnose, [de] GK RSA:stationäre Nebendiagnose
     ↪ 263
       ↪ Gk
         ↪ Rsa
           ↪ Diagnoseambulant = [en] GK RSA:ambulante Diagnosen, [de] GK RSA:ambulante Diagnosen
     ↪ 264
       ↪ Gk
         ↪ Rsa
           ↪ Quartaldiagnosenambulant = [en] GK RSA:Ambulante Diagnosen Leistungsquartal, [de] GK RSA:Ambulante Diagnosen Leistungsquartal
     ↪ 265
       ↪ Gk
         ↪ Rsa
           ↪ Qualifizierungdiagnosenambulant = [en] GK RSA:Ambulante Diagnosen Qualifizierung, [de] GK RSA:Ambulante Diagnosen Qualifizierung
     ↪ 266
       ↪ Gk
         ↪ Rsa
           ↪ Ambulantedxg = [en] GK RSA:Ambulante DxG, [de] GK RSA:Ambulante DxG
     ↪ 267
       ↪ Gk
         ↪ Rsa
           ↪ Diagnoseambulanthmgrelevant = [en] GK RSA:ambulante HMG relevante Diagnosen, [de] GK RSA:ambulante HMG relevante Diagnosen
     ↪ 268
       ↪ Gk
         ↪ Rsa
           ↪ Ambulantehmgrelevantedxg = [en] GK RSA:Ambulante HMG relevante DxG, [de] GK RSA:Ambulante HMG relevante DxG
     ↪ 269
       ↪ Gk
         ↪ Rsa
           ↪ Ambulantekrankheitsnummer = [en] GK RSA:Ambulante Krankheitsnummer, [de] GK RSA:Ambulante Krankheitsnummer
     ↪ 26
       ↪ Hm
         ↪ Menge = [en] Format: numerisch (Beispiel: 5), [de] Format: numerisch (Beispiel: 5)
     ↪ 270
       ↪ Gk
         ↪ Rsa
           ↪ Dxg = [en] GK RSA:DxG, [de] GK RSA:DxG
     ↪ 271
       ↪ Gk
         ↪ Rsa
           ↪ Krankheitsgruppe = [en] GK RSA:Krankheitsgruppe, [de] GK RSA:Krankheitsgruppe
     ↪ 272
       ↪ Gk
         ↪ Rsa
           ↪ Diagnosestationaer = [en] GK RSA:stationäre Diagnosen, [de] GK RSA:stationäre Diagnosen
     ↪ 273
       ↪ Gk
         ↪ Rsa
           ↪ Stationaeredxg = [en] GK RSA:Stationäre DxG, [de] GK RSA:Stationäre DxG
     ↪ 274
       ↪ Gk
         ↪ Rsa
           ↪ Hauptdiagnosestationaer = [en] GK RSA:stationäre Hauptdiagnosen, [de] GK RSA:stationäre Hauptdiagnosen
     ↪ 275
       ↪ Gk
         ↪ Rsa
           ↪ Hauptdiagnosestationaer = [en] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code., [de] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die nach Analyse als diejenige festgestellt wurde, die hauptursächlich für die Veranlassung des stationären Aufenthaltes des Patienten verantwortlich ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     ↪ 276
       ↪ Gk
         ↪ Rsa
           ↪ Diagnosestationaerhmgrelevant = [en] GK RSA:stationäre HMG relevante Diagnosen, [de] GK RSA:stationäre HMG relevante Diagnosen
     ↪ 277
       ↪ Gk
         ↪ Rsa
           ↪ Stationaerehmgrelevantedxg = [en] GK RSA:Stationäre HMG relevante DxG, [de] GK RSA:Stationäre HMG relevante DxG
     ↪ 278
       ↪ Gk
         ↪ Rsa
           ↪ Stationaerekrankheitsnummer = [en] GK RSA:Stationäre Krankheitsnummer, [de] GK RSA:Stationäre Krankheitsnummer
     ↪ 279
       ↪ Gk
         ↪ Rsa
           ↪ Nebendiagnosestationaer = [en] GK RSA:stationäre Nebendiagnose, [de] GK RSA:stationäre Nebendiagnose
     ↪ 27
       ↪ Hm
         ↪ Verordnungsdatum = [en] Datum, an dem das Hilfsmittel verordnet wurde., [de] Datum, an dem das Hilfsmittel verordnet wurde.
     ↪ 280
       ↪ Gk
         ↪ Rsa
           ↪ Nebendiagnosestationaer = [en] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code, [de] Diagnosen, die von einem Krankenhaus kodiert worden sind aus der Satzart 500 und die entweder gleichzeitig mit der Hauptdiagnose besteht oder sich während des Krankenhausaufenthaltes entwickelt. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
     ↪ 281
       ↪ Versicherter
         ↪ Alter = [en] Format: Ganzzahlig (Beispiel 5), [de] Format: Ganzzahlig (Beispiel 5)
     ↪ 282
       ↪ Versicherter
         ↪ Postleitzahl = [en] Format: Ganzzahlig (Beispiel 10245) 5-stellig, [de] Format: Ganzzahlig (Beispiel 10245) 5-stellig
     ↪ 28
       ↪ Hm
         ↪ Verordnungsdatum = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     ↪ 29
       ↪ Atccode = [en] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04, [de] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04
     ↪ 2
       ↪ He
         ↪ Preis = [en] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75), [de] Format: Währung(Ohne das Währungszeichen) (Beispiel: 25.75)
     ↪ 30
       ↪ Atccode = [en] Format: alphanumerisch (Beispiel: B01AX04), [de] Format: alphanumerisch (Beispiel: B01AX04)
     ↪ 31
       ↪ Dosierung = [en] Format: Fließkommazahl (Beispiel: 2.5), [de] Format: Fließkommazahl (Beispiel: 2.5)
     ↪ 32
       ↪ Gesamtatcdosierung = [en] Format: Fließkommazahl (Beispiel: 2.5), [de] Format: Fließkommazahl (Beispiel: 2.5)
     ↪ 33
       ↪ Gesamtpzndosierung = [en] Format: Fließkommazahl (Beispiel: 2.5), [de] Format: Fließkommazahl (Beispiel: 2.5)
     ↪ 34
       ↪ Gesamtmpreis = [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     ↪ 35
       ↪ Gesamtatcpreis = [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     ↪ 36
       ↪ Gesamtpznpreis = [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     ↪ 37
       ↪ Mpreis = [en] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)
     ↪ 38
       ↪ Pzncode = [en] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918, [de] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918
     ↪ 39
       ↪ Pzncode = [en] Format: numerisch (Beispiel: 4114918), [de] Format: numerisch (Beispiel: 4114918)
     ↪ 3
       ↪ He
         ↪ Gesamtmenge = [en] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist., [de] Die Summe aller Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen ein $PATT1$ eingetragen ist.
     ↪ 40
       ↪ Mverordnungsdatum = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     ↪ 41
       ↪ Atccode = [en] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04, [de] Ist die Klassifikation eines Wirkstoffes nach dem anatomisch-therapeutisch-chemischen Klassifikationscode der WHO. Der Wirkstoff selbst ist in einer 7-stelligen Ebene angegeben, die Indikationsgebiete besitzen einen dreistelligen Code, Wirkstoffgruppen einen fünfstelligen Code. z.B. Chondroitinsulfat B, Wirkungsgruppe: Antianthritikum, Klassifikation: ATC-Code: B01AX04
     ↪ 42
       ↪ Atccode = [en] Format: alphanumerisch (Beispiel: B01AX04), [de] Format: alphanumerisch (Beispiel: B01AX04)
     ↪ 43
       ↪ Dosierung = [en] Format: Fließkommazahl (Beispiel: 2.5), [de] Format: Fließkommazahl (Beispiel: 2.5)
     ↪ 44
       ↪ Gesamtatcdosierung = [en] Format: Fließkommazahl (Beispiel: 2.5), [de] Format: Fließkommazahl (Beispiel: 2.5)
     ↪ 45
       ↪ Gesamtpzndosierung = [en] Format: Fließkommazahl (Beispiel: 2.5), [de] Format: Fließkommazahl (Beispiel: 2.5)
     ↪ 46
       ↪ Gesamtmpreis = [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     ↪ 47
       ↪ Gesamtatcpreis = [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     ↪ 48
       ↪ Gesamtpznpreis = [en] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne Währungszeichen) (Beispiel: 25.75)
     ↪ 49
       ↪ Mpreis = [en] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75), [de] Format: Währung(Ohne Währungszeichen) (Beispiel: 25.75)
     ↪ 4
       ↪ He
         ↪ Gesamtmenge = [en] Format: numerisch (Beispiel: 5), [de] Format: numerisch (Beispiel: 5)
     ↪ 50
       ↪ Pzncode = [en] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918, [de] Die Pharmazentralnummern, die von der Informationsstelle für Arzneispezialitäten (IFA GmbH) zugeteilt werden, können als Strichcode auf den Verpackungen der Artikel aufgebracht werden. Das Erstellen einer strichcodierten PZN erfolgt nach dem Code 39, der in der internationalen Norm ISO/IEC 16388 spezifiziert ist. PZN - Code bezeichnet eindeutig eine Arzneimittelpackung nach Wirkstoff, Wirkstärke, Arzneiform und Inhalt (Stückzahl) z.B. Aspirin Complex, 20 Stück Granulat, N2, PZN - Code: 4114918
     ↪ 51
       ↪ Pzncode = [en] Format: numerisch (Beispiel: 4114918), [de] Format: numerisch (Beispiel: 4114918)
     ↪ 52
       ↪ Fall
         ↪ Numeric10 = [en] Fall.Numeric10, [de] Fall.Numeric10
       ↪ Mverordnungsdatum = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     ↪ 53
       ↪ Fall
         ↪ Numeric6 = [en] Fall.Numeric6, [de] Fall.Numeric6
       ↪ Jetzt = [en] Format: hh:mm:ss, [de] Format: hh:mm:ss
     ↪ 54
       ↪ Alterinjahren = [en] Format: Ganzzahlig (Beispiel 50), [de] Format: Ganzzahlig (Beispiel 50)
       ↪ Fall
         ↪ Numeric7 = [en] Fall.Numeric7, [de] Fall.Numeric7
     ↪ 55
       ↪ Alterintagen = [en] Format: Ganzzahlig (Beispiel 5), [de] Format: Ganzzahlig (Beispiel 5)
       ↪ Fall
         ↪ Numeric8 = [en] Fall.Numeric8, [de] Fall.Numeric8
     ↪ 56
       ↪ Fall
         ↪ Numeric9 = [en] Fall.Numeric9, [de] Fall.Numeric9
       ↪ Geburtsdatum = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     ↪ 57
       ↪ Fall
         ↪ String10 = [en] Fall.String10, [de] Fall.String10
       ↪ Gewicht = [en] Format: Ganzzahlig (Beispiel 2500), [de] Format: Ganzzahlig (Beispiel 2500)
     ↪ 58
       ↪ Fall
         ↪ String6 = [en] Fall.String6, [de] Fall.String6
       ↪ Postleitzahl = [en] Format: Ganzzahlig (Beispiel 10245) 5-stellig, [de] Format: Ganzzahlig (Beispiel 10245) 5-stellig
     ↪ 59
       ↪ Fall
         ↪ String7 = [en] Fall.String7, [de] Fall.String7
       ↪ Wohnort = [en] Format: bis zu 255 Zeichen alphanumerisch (Beispiel: Berlin), [de] Format: bis zu 255 Zeichen alphanumerisch (Beispiel: Berlin)
     ↪ 5
       ↪ He
         ↪ Gesamtpreis
           ↪ Alle = [en] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat., [de] Die Summe aller Preise Hilfsmitteln, die der Patient verordnet bekommen hat.
     ↪ 60
       ↪ Anzahlabteilungen = [en] Format: Ganzzahlig (Beispiel 5), [de] Format: Ganzzahlig (Beispiel 5)
       ↪ Fall
         ↪ String8 = [en] Fall.String8, [de] Fall.String8
     ↪ 61
       ↪ Aufnehmendefachabteilung = [en] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl., [de] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
       ↪ Fall
         ↪ String9 = [en] Fall.String9, [de] Fall.String9
     ↪ 62
       ↪ Aufnehmendefachabteilung = [en] Format: Ganzzahlig (Beispiel 1500), [de] Format: Ganzzahlig (Beispiel 1500)
       ↪ Drgerloes = [en] Erloes(DRG), [de] Erloes(DRG)
     ↪ 63
       ↪ Behandelndefachabteilung = [en] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl., [de] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
       ↪ Drgerloes = [en] Erlös des DRG - Falles ohne Berücksichtigung der Zusatzentgelten und Pflegeaufwendungen(ab 2020), [de] Erlös des DRG - Falles ohne Berücksichtigung der Zusatzentgelten und Pflegeaufwendungen(ab 2020)
     ↪ 64
       ↪ Behandelndefachabteilung = [en] Format: Ganzzahlig (Beispiel 1500), [de] Format: Ganzzahlig (Beispiel 1500)
       ↪ Fallerloes = [en] Gesamterloes(DRG), [de] Gesamterloes(DRG)
     ↪ 65
       ↪ Entlassendefachabteilung = [en] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl., [de] z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
       ↪ Fallerloes = [en] Gesamterlös des DRG - Falles mit Pflegeaufwendungen(ab 2020) ohne Berücksichtigung der Zusatzentgelten, [de] Gesamterlös des DRG - Falles mit Pflegeaufwendungen(ab 2020) ohne Berücksichtigung der Zusatzentgelten
     ↪ 66
       ↪ Entlassendefachabteilung = [en] Format: Ganzzahlig (Beispiel 1500), [de] Format: Ganzzahlig (Beispiel 1500)
     ↪ 67
       ↪ Abteilung = [en] Format: Ganzzahlig (Beispiel 1500), [de] Format: Ganzzahlig (Beispiel 1500)
     ↪ 68
       ↪ Station = [en] Format: alphanumerisch (Beispiel: 7B), [de] Format: alphanumerisch (Beispiel: 7B)
     ↪ 69
       ↪ Verlegungsdatum = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
     ↪ 6
       ↪ He
         ↪ Gesamtpreis
           ↪ Alle = [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
     ↪ 70
       ↪ Verlegungsuhrzeit = [en] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten, [de] Format: HH:MM, 2-Stellen Stunden, 2-Stellen Minuten
     ↪ 71
       ↪ Entgelte = [en] Rechnung: Rechnungsart, [de] Rechnung: Rechnungsart
     ↪ 72
       ↪ Entgelte = [en] Rechnung: Rechnungsdatum, [de] Rechnung: Rechnungsdatum
     ↪ 73
       ↪ Entgelte = [en] Rechnung: Rechnungsnummer, [de] Rechnung: Rechnungsnummer
     ↪ 74
       ↪ Abschlagstage = [en] Format: Ganzzahlig (Beispiel: 5), [de] Format: Ganzzahlig (Beispiel: 5)
     ↪ 75
       ↪ Adrg = [en] Format: Alphanumerisch (Beispiele: A11 oder B75), [de] Format: Alphanumerisch (Beispiele: A11 oder B75)
     ↪ 76
       ↪ Pflegetage = [en] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus., [de] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     ↪ 77
       ↪ Pflegetage = [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     ↪ 78
       ↪ Basisfallwert = [en] Format: Währung (Beispiel 2100,40), [de] Format: Währung (Beispiel 2100,40)
       ↪ Pflegecwtag = [en] Pflege CW/Tag, [de] Pflege CW/Tag
     ↪ 79
       ↪ Abschlags
         ↪ Cw = [en] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53), [de] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)
       ↪ Pflegecwtag = [en] Pflegeerlös Bewertungsrelation/Tag, [de] Pflegeerlös Bewertungsrelation/Tag
     ↪ 7
       ↪ He
         ↪ Gesamtpreis = [en] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist., [de] Die Summe aller Preise der Hilfsmitteln, die der Patient verordnet bekommen hat und bei denen $PATT1$ eingetragen ist.
     ↪ 80
       ↪ Drgpflegeerloes = [en] PflegeErloes(DRG), [de] PflegeErloes(DRG)
       ↪ Zuschlags
         ↪ Cw = [en] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53), [de] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)
     ↪ 81
       ↪ Drg = [en] Format: Alphanumerisch (Beispiele: A11B oder B75A), [de] Format: Alphanumerisch (Beispiele: A11B oder B75A)
       ↪ Drgpflegeerloes = [en] Pflegeerlös eines DRG - Falles ab 2020, [de] Pflegeerlös eines DRG - Falles ab 2020
     ↪ 82
       ↪ Entgelt = [en] Format: alphanumerisch 8-stellig (Beispiel: 48000001), [de] Format: alphanumerisch 8-stellig (Beispiel: 48000001)
       ↪ Pflegetage = [en] Pflegetage (PEPP), [de] Pflegetage (PEPP)
     ↪ 83
       ↪ Entgeltabrechnungbis = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
       ↪ Pflegetage = [en] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus., [de] Maßgeblich für die Ermittlung der Anzahl der Pflegetagen ist die Zahl der Belegungstage. Belegungstage sind der Aufnahmetag zur voll- oder teilstationären Behandlung sowie jeder weitere Tag des Krankenhausaufenthaltes und der Verlegungs- oder Entlassungstag aus dem Krankenhaus.
     ↪ 84
       ↪ Entgeltabrechnungvon = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
       ↪ Pflegetage = [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
     ↪ 85
       ↪ Entgeltanzahljeentgelt = [en] Format: Ganzzahlig (Beispiel 2), [de] Format: Ganzzahlig (Beispiel 2)
       ↪ Pflegetagedrg = [en] Pflegetage(DRG), [de] Pflegetage(DRG)
     ↪ 86
       ↪ Entgelteinzelbetrag = [en] Format: Währung (Beispiel: 57.52), [de] Format: Währung (Beispiel: 57.52)
       ↪ Pflegetagedrg = [en] Pflegetage(DRG) ab 2020, [de] Pflegetage(DRG) ab 2020
     ↪ 87
       ↪ Entgeltsummejeentgelt = [en] Format: Währung (Beispiel: 635.60), [de] Format: Währung (Beispiel: 635.60)
     ↪ 88
       ↪ Grouperrelevantediagnose = [en] Diagnose, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Diagnose, Hauptdiagnose, Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code., [de] Diagnose, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Diagnose, Hauptdiagnose, Nebendiagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
     ↪ 89
       ↪ Grouperrelevantediagnose = [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
     ↪ 8
       ↪ He
         ↪ Gesamtpreis = [en] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75), [de] Format: Währung (Ohne das Währungszeichen) (Beispiel: 25.75)
     ↪ 90
       ↪ Grouperrelevanteprozedur = [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: 5-340.1)
     ↪ 91
       ↪ Kostengewicht
         ↪ Effektiv = [en] Kostengewicht für DRG - Fälle (DRG + Erbringungsart) + Zuschlags_CW oder - Abschlags_CW ., [de] Kostengewicht für DRG - Fälle (DRG + Erbringungsart) + Zuschlags_CW oder - Abschlags_CW .
     ↪ 92
       ↪ Kostengewicht
         ↪ Effektiv = [en] Kostengewicht für PEPP - Fälle: Die Gesamt-Bewertungsrelation, die sich aus der Verweildauer und den einzelnen Vergütungsstufen ergeben., [de] Kostengewicht für PEPP - Fälle: Die Gesamt-Bewertungsrelation, die sich aus der Verweildauer und den einzelnen Vergütungsstufen ergeben.
     ↪ 93
       ↪ Kostengewicht
         ↪ Effektiv = [en] Format: Fließkommazahl (Beispiele: 0.202 oder 2.531), [de] Format: Fließkommazahl (Beispiele: 0.202 oder 2.531)
     ↪ 94
       ↪ Kostengewicht
         ↪ Katalog = [en] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53), [de] Format: Fließkommazahl (Beispiele: 0.2 oder 2.53)
     ↪ 95
       ↪ Mittlere
         ↪ Verweildauer = [en] Sie gibt die Liegezeit an, bei der bei Unterschreitung und gleichzeitiger Verlegung aus einem anderen Krankenhaus und/oder in ein anderes Krankenhaus pro Tag ein Abschlag vom Relativgewicht ermittelt werden muss (Ausnahmen laut Fallpauschalenkatalog beachten). Mit dieser Regelung soll berücksichtigt werden, dass bei einer gemeinsamen Behandlung eines Patienten durch zwei oder mehrere Krankenhäuser die einzelnen Erlöse (DRG) gemindert werden müssen., [de] Sie gibt die Liegezeit an, bei der bei Unterschreitung und gleichzeitiger Verlegung aus einem anderen Krankenhaus und/oder in ein anderes Krankenhaus pro Tag ein Abschlag vom Relativgewicht ermittelt werden muss (Ausnahmen laut Fallpauschalenkatalog beachten). Mit dieser Regelung soll berücksichtigt werden, dass bei einer gemeinsamen Behandlung eines Patienten durch zwei oder mehrere Krankenhäuser die einzelnen Erlöse (DRG) gemindert werden müssen.
     ↪ 96
       ↪ Mittlere
         ↪ Verweildauer = [en] Format: Ganzzahlig (Beispiel 5), [de] Format: Ganzzahlig (Beispiel 5)
     ↪ 97
       ↪ Obere
         ↪ Grenzverweildauer = [en] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig., [de] Die obere Grenzverweildauer legt fest, bis zu welcher Aufenthaltsdauer im Krankenhaus eine Pauschalvergütung erfolgt. Wird diese Dauer im Einzelfall überschritten, werden Zuschläge berechnet. Ob diese die entsprechenden zusätzlichen Kosten decken, ist einzelfallabhängig.
     ↪ 98
       ↪ Obere
         ↪ Grenzverweildauer = [en] Format: Ganzzahlig (Beispiel 15), [de] Format: Ganzzahlig (Beispiel 15)
     ↪ 99
       ↪ Pepp = [en] Format: Aplhanumerisch (Beispiele P003B, TK04Z), [de] Format: Aplhanumerisch (Beispiele P003B, TK04Z)
     ↪ 9
       ↪ He
         ↪ Positionsnummer = [en] Pharmazentralnummer für Hilfsmittel, [de] Pharmazentralnummer für Hilfsmittel
   ↪ Txt
     ↪ Adm
       ↪ Weekday = [en] Aufnahmewochentag, [de] Aufnahmewochentag
     ↪ Admission
       ↪ Type
         ↪ 4
           ↪ Long = [en] V - Verlegung, [de] V - Verlegung
     ↪ Age
       ↪ In
         ↪ Years = [en] Alter in Jahren, [de] Alter in Jahren
     ↪ Case
       ↪ Criteria = [en] Fallkriterien, [de] Fallkriterien
     ↪ Complaint
       ↪ Suggestion = [en] Vorschlag, [de] Vorschlag
     ↪ Crit
       ↪ Accouchement
         ↪ Date
           ↪ 1
             ↪ Dis = [en] Tag der Entbindung1, [de] Tag der Entbindung1
             ↪ Tooltip
               ↪ 1 = [en] Tag der Geburt des Kindes (des ersten Kindes bei Mehrlingen)., [de] Tag der Geburt des Kindes (des ersten Kindes bei Mehrlingen).
           ↪ 2
             ↪ Dis = [en] Tag der Entbindung2, [de] Tag der Entbindung2
             ↪ Tooltip
               ↪ 1 = [en] Tag der Geburt des letzten Kindes bei Mehrlingsgeburten., [de] Tag der Geburt des letzten Kindes bei Mehrlingsgeburten.
       ↪ Adm2
         ↪ Type
           ↪ Dis = [en] Aufnahmegrund2, [de] Aufnahmegrund2
       ↪ Adm
         ↪ Cause
           ↪ Dis = [en] Aufnahmeanlass, [de] Aufnahmeanlass
         ↪ Date
           ↪ Full = [en] Aufnahmedatum_mit_Uhrzeit, [de] Aufnahmedatum_mit_Uhrzeit
             ↪ Dis = [en] Aufnahmedatum mit Uhrzeit, [de] Aufnahmedatum mit Uhrzeit
         ↪ Type
           ↪ Dis = [en] Aufnahmegrund1, [de] Aufnahmegrund1
       ↪ Admission
         ↪ Date
           ↪ Tooltip
             ↪ 1 = [en] Aufnahmedatum ist der erste Behandlungstag  im Krankenhaus., [de] Aufnahmedatum ist der erste Behandlungstag  im Krankenhaus.
         ↪ Day
           ↪ Dis = [en] Aufnahmetag, [de] Aufnahmetag
           ↪ Time
             ↪ Dis = [en] Aufnahmeuhrzeit, [de] Aufnahmeuhrzeit
             ↪ Tooltip
               ↪ 1 = [en] Uhrzeit, zu der der Patient am ersten Behandlungstag aufgenommen worden ist., [de] Uhrzeit, zu der der Patient am ersten Behandlungstag aufgenommen worden ist.
           ↪ Tooltip
             ↪ 1 = [en] Tag der stationären Aufnahme., [de] Tag der stationären Aufnahme.
         ↪ Diag
           ↪ Dis = [en] Aufnahmediagnose, [de] Aufnahmediagnose
           ↪ Tooltip
             ↪ 1 = [en] Die Diagnose, aufgrund derer ein Patient in ein Krankenhaus aufgenommen worden ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code, [de] Die Diagnose, aufgrund derer ein Patient in ein Krankenhaus aufgenommen worden ist. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code
           ↪ Type
             ↪ Dis = [en] Aufnahmediagnose: Typ, [de] Aufnahmediagnose: Typ
         ↪ Doc
           ↪ Dis = [en] Einweisender Arzt, [de] Einweisender Arzt
           ↪ Tooltip
             ↪ 1 = [en] Kennzeichnung des einweisenden Arztes. Siehe Institutionskennzeichen IK., [de] Kennzeichnung des einweisenden Arztes. Siehe Institutionskennzeichen IK.
         ↪ Hospital
           ↪ Dis = [en] Einweisendes Krankenhaus, [de] Einweisendes Krankenhaus
           ↪ Tooltip
             ↪ 1 = [en] Kennzeichnung des einweisenden Krankenhauses. Siehe Institutionskennzeichen IK., [de] Kennzeichnung des einweisenden Krankenhauses. Siehe Institutionskennzeichen IK.
         ↪ Jear
           ↪ Dis = [en] Aufnahmejahr, [de] Aufnahmejahr
           ↪ Tooltip
             ↪ 1 = [en] Jahr, in das der erste Behandlungstag fällt., [de] Jahr, in das der erste Behandlungstag fällt.
         ↪ Month
           ↪ Dis = [en] Aufnahmemonat, [de] Aufnahmemonat
           ↪ Tooltip
             ↪ 1 = [en] Monat, in den der erste Behandlungstag fällt., [de] Monat, in den der erste Behandlungstag fällt.
       ↪ Adrg
         ↪ Tooltip
           ↪ 1 = [en] Basis - DRG: (Adjacent Diagnosis Related Group) DRG ohne letzte Stelle (für Schweregrad)., [de] Basis - DRG: (Adjacent Diagnosis Related Group) DRG ohne letzte Stelle (für Schweregrad).
       ↪ Age
         ↪ Days
           ↪ Dis = [en] Alter in Tagen, [de] Alter in Tagen
           ↪ Tooltip
             ↪ 1 = [en] Das Alter in Tagen (nur für Alter &lt; 1 Jahr), [de] Das Alter in Tagen (nur für Alter &lt; 1 Jahr)
         ↪ Years
           ↪ Tooltip
             ↪ 1 = [en] Das tatsächliche Alter des Patienten., [de] Das tatsächliche Alter des Patienten.
             ↪ 2 = [en] Format: Ganzzahlig (Beispiel 50), [de] Format: Ganzzahlig (Beispiel 50)
       ↪ Aux
         ↪ Diag
           ↪ Loc
             ↪ Dis = [en] Nebendiagnose: Lokalisation, [de] Nebendiagnose: Lokalisation
           ↪ Type
             ↪ Dis = [en] Nebendiagnose: Typ, [de] Nebendiagnose: Typ
       ↪ Base
         ↪ Value
           ↪ Dis = [en] Basisfallwert, [de] Basisfallwert
           ↪ Tooltip
             ↪ 1 = [en] (auch: Baserate) der Betrag, der bei der Berechnung der DRG - Entgelte für die Krankenhausbehandlung zugrunde gelegt wird., [de] (auch: Baserate) der Betrag, der bei der Berechnung der DRG - Entgelte für die Krankenhausbehandlung zugrunde gelegt wird.
       ↪ Birthday
         ↪ Dis = [en] Geburtsdatum, [de] Geburtsdatum
         ↪ Tooltip
           ↪ 1 = [en] Das Geburtsdatum des Patienten., [de] Das Geburtsdatum des Patienten.
       ↪ Bonus
         ↪ Cw
           ↪ Dis = [en] CW Zuschlag, [de] CW Zuschlag
           ↪ Tooltip
             ↪ 1 = [en] Ein Überschreiten der Oberen Grenzverweildauer bewirkt einen Zuschlag, bei dem die einer DRG zugeordneten CW-Wert-Zuschläge multipliziert mit den Tagen der Überschreitung dem CW-Basiswert hinzugezählt werden., [de] Ein Überschreiten der Oberen Grenzverweildauer bewirkt einen Zuschlag, bei dem die einer DRG zugeordneten CW-Wert-Zuschläge multipliziert mit den Tagen der Überschreitung dem CW-Basiswert hinzugezählt werden.
         ↪ Days
           ↪ Dis = [en] Zuschlagstage, [de] Zuschlagstage
           ↪ Tooltip
             ↪ 1 = [en] Ist-Verweildauer - Obere Grenzverweildauer + 1. Im Fallpauschalenkatalog ist immer der erste Zuschlagstag angegeben (Spalte 9)., [de] Ist-Verweildauer - Obere Grenzverweildauer + 1. Im Fallpauschalenkatalog ist immer der erste Zuschlagstag angegeben (Spalte 9).
       ↪ Bottom
         ↪ Length
           ↪ Of
             ↪ Stay
               ↪ Dis = [en] untere Grenzverweildauer, [de] untere Grenzverweildauer
               ↪ Tooltip
                 ↪ 1 = [en] Laut DRG - Katalog festgelegte untere Grenzverweildauer für die ermittelte DRG. Bei Unterschreitung der unteren Grenzverweildauer wird (wiederum nach DRG - Katalog) ein Abschlag je Tag vom DRG - Entgelt abgezogen., [de] Laut DRG - Katalog festgelegte untere Grenzverweildauer für die ermittelte DRG. Bei Unterschreitung der unteren Grenzverweildauer wird (wiederum nach DRG - Katalog) ein Abschlag je Tag vom DRG - Entgelt abgezogen.
       ↪ Breathing
         ↪ Dis = [en] Beatmungsdauer, [de] Beatmungsdauer
         ↪ Tooltip
           ↪ 1 = [en] Summe der Stunden, in denen der Patient künstlich beatmet worden ist., [de] Summe der Stunden, in denen der Patient künstlich beatmet worden ist.
       ↪ Care
         ↪ Days
           ↪ Dis = [en] Anzahl der Pflegetagen, [de] Anzahl der Pflegetagen
         ↪ State
           ↪ Dis = [en] Pflegestatus, [de] Pflegestatus
       ↪ Case
         ↪ Auxdiagnosis
           ↪ Tooltip
             ↪ 2 = [en] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0), [de] Format: alphanumerisch mit Sonderzeichen (Beispiel: R56.0)
         ↪ Cost = [en] Fallkosten, [de] Fallkosten
         ↪ Numeric1
           ↪ Dis = [en] Fall.Numeric01, [de] Fall.Numeric01
         ↪ Numeric2
           ↪ Dis = [en] Fall.Numeric02, [de] Fall.Numeric02
         ↪ Numeric3
           ↪ Dis = [en] Fall.Numeric03, [de] Fall.Numeric03
         ↪ Numeric4
           ↪ Dis = [en] Fall.Numeric04, [de] Fall.Numeric04
         ↪ Numeric5
           ↪ Dis = [en] Fall.Numeric05, [de] Fall.Numeric05
           ↪ Tooltip = [en] Optional herstellbares numerisches Kriterium, [de] Optional herstellbares numerisches Kriterium
         ↪ Str1
           ↪ Dis = [en] Fall.String01, [de] Fall.String01
         ↪ Str2
           ↪ Dis = [en] Fall.String02, [de] Fall.String02
         ↪ Str3
           ↪ Dis = [en] Fall.String03, [de] Fall.String03
         ↪ Str4
           ↪ Dis = [en] Fall.String04, [de] Fall.String04
           ↪ Tooltip = [en] Optional herstellbares alphanumerisches Kriterium, [de] Optional herstellbares alphanumerisches Kriterium
         ↪ Str5
           ↪ Dis = [en] Fall.String05, [de] Fall.String05
       ↪ City
         ↪ Dis = [en] Wohnort, [de] Wohnort
         ↪ Tooltip
           ↪ 1 = [en] Name des Wohnortes des Patienten., [de] Name des Wohnortes des Patienten.
       ↪ Clinic
         ↪ Adm
           ↪ Date
             ↪ Dis = [en] Klinik: Aufnahmedatum, [de] Klinik: Aufnahmedatum
             ↪ Full = [en] Klinik_Aufnahmedatum_mit_Uhrzeit, [de] Klinik_Aufnahmedatum_mit_Uhrzeit
               ↪ Dis = [en] Klinik: Aufnahmedatum mit Uhrzeit, [de] Klinik: Aufnahmedatum mit Uhrzeit
           ↪ Reason
             ↪ Dis = [en] Klinik: Aufnahmegrund, [de] Klinik: Aufnahmegrund
           ↪ Time
             ↪ Dis = [en] Klinik: Aufnahmeuhrzeit, [de] Klinik: Aufnahmeuhrzeit
         ↪ Adrg
           ↪ Dis = [en] Klinik: ADRG, [de] Klinik: ADRG
         ↪ Aux
           ↪ Diag
             ↪ Dis = [en] Klinik: Nebendiagnose, [de] Klinik: Nebendiagnose
         ↪ Breathing
           ↪ Dis = [en] Klinik: Beatmungsstunden, [de] Klinik: Beatmungsstunden
         ↪ Case
           ↪ Cost = [en] Klinik: Fallkosten, [de] Klinik: Fallkosten
           ↪ Drg
             ↪ Tooltip
               ↪ 1 = [en] Klinische Daten: Fallpauschale., [de] Klinische Daten: Fallpauschale.
           ↪ Number
             ↪ Dis = [en] Klinik: Fallanzahl, [de] Klinik: Fallanzahl
         ↪ Dis
           ↪ Date
             ↪ Full = [en] Klinik_Entlassungsdatum_mit_Uhrzeit, [de] Klinik_Entlassungsdatum_mit_Uhrzeit
               ↪ Dis = [en] Klinik: Entlassungsdatum mit Uhrzeit, [de] Klinik: Entlassungsdatum mit Uhrzeit
           ↪ Reason
             ↪ Dis = [en] Klinik: Entlassungsgrund, [de] Klinik: Entlassungsgrund
         ↪ Disch
           ↪ Date
             ↪ Dis = [en] Klinik: Entlassungsdatum, [de] Klinik: Entlassungsdatum
           ↪ Time
             ↪ Dis = [en] Klinik: Entlassungsuhrzeit, [de] Klinik: Entlassungsuhrzeit
         ↪ Drg
           ↪ Dis = [en] Klinik: DRG, [de] Klinik: DRG
           ↪ Partition
             ↪ Dis = [en] Klinik: DRG Partition, [de] Klinik: DRG Partition
         ↪ Fee
           ↪ Count
             ↪ Dis = [en] Klinik: Anzahl Entgelte, [de] Klinik: Anzahl Entgelte
           ↪ Type
             ↪ Dis = [en] Klinik: Entgeltart, [de] Klinik: Entgeltart
           ↪ Value
             ↪ Dis = [en] Klinik: Entgeltbetrag, [de] Klinik: Entgeltbetrag
         ↪ Feegroup = [en] Klinik: Entgeltbereich, [de] Klinik: Entgeltbereich
         ↪ Ikz
           ↪ Dis = [en] Klinik: IKZ, [de] Klinik: IKZ
         ↪ Main
           ↪ Diag
             ↪ Dis = [en] Klinik: Hauptdiagnose, [de] Klinik: Hauptdiagnose
         ↪ Ogvd = [en] Klinik: OGVD, [de] Klinik: OGVD
         ↪ Pepp
           ↪ Dis = [en] Klinik: PEPP, [de] Klinik: PEPP
         ↪ Procedure
           ↪ Dis = [en] Klinik: Prozedur, [de] Klinik: Prozedur
         ↪ Sk
           ↪ Dis = [en] Klinik: SK, [de] Klinik: SK
         ↪ Ugvd = [en] Klinik: uGVD, [de] Klinik: uGVD
         ↪ Vwd
           ↪ Dis = [en] Klinik: Verweildauer, [de] Klinik: Verweildauer
           ↪ In
             ↪ Hours = [en] Klinik: Vwd in Stunden, [de] Klinik: Vwd in Stunden
       ↪ Combat
         ↪ Department
           ↪ Dis = [en] behandelnde Fachabteilung, [de] behandelnde Fachabteilung
           ↪ Tooltip
             ↪ 1 = [en] Kodierung der behandelnden Fachabteilung nach §301(Siehe Anlage 1), [de] Kodierung der behandelnden Fachabteilung nach §301(Siehe Anlage 1)
       ↪ Cw
         ↪ Catalog
           ↪ Dis = [en] Kostengewicht Katalog, [de] Kostengewicht Katalog
           ↪ Tooltip
             ↪ 1 = [en] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert). Kostengewicht nach DRG - Katalog, [de] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert). Kostengewicht nach DRG - Katalog
         ↪ Effectiv
           ↪ Dis = [en] Kostengewicht effektiv, [de] Kostengewicht effektiv
           ↪ Tooltip
             ↪ 1 = [en] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert), [de] ( Kostengewicht auch: Relativgewicht, Costweight, CW-Wert)
       ↪ Department
         ↪ Dis = [en] Fachabteilungsbewegung, [de] Fachabteilungsbewegung
         ↪ Tooltip
           ↪ 1 = [en] Die Fachabteilungen, in denen der Patient behandelt worden ist. z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl., [de] Die Fachabteilungen, in denen der Patient behandelt worden ist. z.B. 1500 - allgemeine Chirurgie, angegeben wird nur die Zahl.
       ↪ Diag
         ↪ Loc
           ↪ Dis = [en] Diagnose: Lokalisation, [de] Diagnose: Lokalisation
         ↪ Tooltip
           ↪ 1 = [en] Siehe Hauptdiagnose, Nebendiagnose. Eine Diagnose beinhaltet keine weitere Unterteilung, insofern ein Oberbegriff. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code., [de] Siehe Hauptdiagnose, Nebendiagnose. Eine Diagnose beinhaltet keine weitere Unterteilung, insofern ein Oberbegriff. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code.
         ↪ Type
           ↪ Dis = [en] Diagnose: Typ, [de] Diagnose: Typ
       ↪ Diagnose
         ↪ Grouped
           ↪ Dis = [en] Grouperrelevante Diagnose, [de] Grouperrelevante Diagnose
       ↪ Dis
         ↪ Type3
           ↪ Dis = [en] Entlassungsgrund3, [de] Entlassungsgrund3
         ↪ Type
           ↪ Dis = [en] Entlassungsgrund12, [de] Entlassungsgrund12
       ↪ Discharge
         ↪ Date
           ↪ Full = [en] Entlassungsdatum_mit_Uhrzeit, [de] Entlassungsdatum_mit_Uhrzeit
             ↪ Dis = [en] Entlassungsdatum mit Uhrzeit, [de] Entlassungsdatum mit Uhrzeit
       ↪ Drg
         ↪ Tooltip
           ↪ 1 = [en] Fallpauschale, diagnosebezogene Fallgruppe., [de] Fallpauschale, diagnosebezogene Fallgruppe.
       ↪ Drgpartition
         ↪ Dis = [en] DRGPartition, [de] DRGPartition
       ↪ Entgeltabrechnung
         ↪ Bis
           ↪ Dis = [en] Entgeltabrechnung bis, [de] Entgeltabrechnung bis
           ↪ Tooltip
             ↪ 1 = [en] Der letzte Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll., [de] Der letzte Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.
         ↪ Von
           ↪ Dis = [en] Entgeltabrechnung von, [de] Entgeltabrechnung von
           ↪ Tooltip
             ↪ 1 = [en] Der erste Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll., [de] Der erste Tag des Abrechnungszeitraumes für einen bestimmten Entgeltschlüssel. Dieser ist nur in Verbindung mit einem Entgeltschlüssel sinnvoll.
       ↪ Entgeltanzahl
         ↪ Dis = [en] Entgeltanzahl je Entgelt, [de] Entgeltanzahl je Entgelt
         ↪ Tooltip
           ↪ 1 = [en] Wie oft das einzelne Entgelt abgerechnet wird., [de] Wie oft das einzelne Entgelt abgerechnet wird.
       ↪ Entgeltart
         ↪ Dis = [en] Entgelt, [de] Entgelt
         ↪ Tooltip
           ↪ 1 = [en] Der Entgeltschlüssel, alphanumerisch 8-stellig, z.B. 48000001 für DRG - Systemzuschlag, angegeben wird der Code., [de] Der Entgeltschlüssel, alphanumerisch 8-stellig, z.B. 48000001 für DRG - Systemzuschlag, angegeben wird der Code.
       ↪ Entgelteinzelbetrag
         ↪ Dis = [en] Entgelteinzelbetrag, [de] Entgelteinzelbetrag
         ↪ Tooltip
           ↪ 1 = [en] Der einzelne Betrag eines Entgeltschlüssels., [de] Der einzelne Betrag eines Entgeltschlüssels.
       ↪ Entgeltsummejeentgelt
         ↪ Dis = [en] Entgeltsumme je Entgelt, [de] Entgeltsumme je Entgelt
         ↪ Tooltip
           ↪ 1 = [en] Die Summe aller Beträge eines Entgeltschlüssels., [de] Die Summe aller Beträge eines Entgeltschlüssels.
       ↪ Equal
         ↪ Proc
           ↪ Number
             ↪ Dis = [en] Anzahl gleicher Prozeduren, [de] Anzahl gleicher Prozeduren
             ↪ Tooltip
               ↪ 1 = [en] Für jede Prozedur wird ein Wiederholungswert ermittelt und der minimale Wert, der größer als 1 ist, wird hier eingetragen., [de] Für jede Prozedur wird ein Wiederholungswert ermittelt und der minimale Wert, der größer als 1 ist, wird hier eingetragen.
       ↪ Fee
         ↪ Sum
           ↪ Tooltip
             ↪ 1 = [en] Gesamtbetrag aller Entgelte., [de] Gesamtbetrag aller Entgelte.
       ↪ Feegroup = [en] Entgeltbereich, [de] Entgeltbereich
       ↪ Health
         ↪ Ensurance
           ↪ Dis = [en] Krankenkasse, [de] Krankenkasse
           ↪ Tooltip
             ↪ 1 = [en] Kennzeichnung der Krankenkasse. Siehe Institutionskennzeichen IK., [de] Kennzeichnung der Krankenkasse. Siehe Institutionskennzeichen IK.
       ↪ Hos
         ↪ Case
           ↪ Number
             ↪ Tooltip
               ↪ 1
                 ↪ 1 = [en] Das krankenhausinterne Kennzeichen des Versicherten., [de] Das krankenhausinterne Kennzeichen des Versicherten.
       ↪ Institute
         ↪ Dis = [en] Institutionskennzeichen, [de] Institutionskennzeichen
       ↪ Insurance
         ↪ Status
           ↪ Dis = [en] Versichertenstatus, [de] Versichertenstatus
       ↪ Intensiv
         ↪ Stay
           ↪ Dis = [en] Intensivverweildauer, [de] Intensivverweildauer
           ↪ Tooltip
             ↪ 1 = [en] Tage, die der Patient auf der Intensivstation verbracht hat., [de] Tage, die der Patient auf der Intensivstation verbracht hat.
       ↪ Labor
         ↪ Date
           ↪ Dis = [en] Datum der Untersuchung, [de] Datum der Untersuchung
         ↪ Description
           ↪ Dis = [en] Labor-Beschreibung, [de] Labor-Beschreibung
         ↪ Text
           ↪ Dis = [en] Labortext, [de] Labortext
         ↪ Unit
           ↪ Dis = [en] Labor-Einheit, [de] Labor-Einheit
       ↪ Losless24h
         ↪ Dis = [en] Verweildauer kleiner 24h, [de] Verweildauer kleiner 24h
       ↪ Medicament
         ↪ Atc
           ↪ Code
             ↪ Dis = [en] KH Medikament: ATC-Code, [de] KH Medikament: ATC-Code
             ↪ Tooltip
               ↪ 2 = [en] Format: alphanumerisch (Beispiel: B01AX04), [de] Format: alphanumerisch (Beispiel: B01AX04)
         ↪ Full
           ↪ Dosage
             ↪ Atc
               ↪ Dis = [en] KH Medikament: Gesamtdosis für ATC, [de] KH Medikament: Gesamtdosis für ATC
               ↪ Tooltip
                 ↪ 1 = [en] Die Summe aller Mengen der Medikamente, bei denen ein ATC - Code eingetragen ist., [de] Die Summe aller Mengen der Medikamente, bei denen ein ATC - Code eingetragen ist.
             ↪ Pzn
               ↪ Dis = [en] KH Medikament: Gesamtdosis für PZN, [de] KH Medikament: Gesamtdosis für PZN
               ↪ Tooltip
                 ↪ 1 = [en] Die Summe aller Mengen der Medikamente, bei denen ein PZN - Code eingetragen ist., [de] Die Summe aller Mengen der Medikamente, bei denen ein PZN - Code eingetragen ist.
           ↪ Price
             ↪ Atc
               ↪ Dis = [en] KH Medikament: Gesamtpreis für ATC, [de] KH Medikament: Gesamtpreis für ATC
               ↪ Tooltip
                 ↪ 1 = [en] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein ATC - Code eingetragen ist., [de] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein ATC - Code eingetragen ist.
             ↪ Dis = [en] KH Medikament: Gesamtpreis, [de] KH Medikament: Gesamtpreis
             ↪ Pzn
               ↪ Dis = [en] KH Medikament: Gesamtpreis für PZN, [de] KH Medikament: Gesamtpreis für PZN
               ↪ Tooltip
                 ↪ 1 = [en] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein PZN - Code eingetragen ist., [de] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat und bei denen ein PZN - Code eingetragen ist.
             ↪ Tooltip
               ↪ 1 = [en] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat., [de] Die Summe aller Preise der Medikamente, die der Patient verordnet bekommen hat.
         ↪ Perscript
           ↪ Date
             ↪ Dis = [en] KHMedikament: Verordnungsdatum, [de] KHMedikament: Verordnungsdatum
             ↪ Tooltip
               ↪ 1 = [en] Datum, an dem ein Arzt das Medikament verordnet hat., [de] Datum, an dem ein Arzt das Medikament verordnet hat.
           ↪ Dosage
             ↪ Dis = [en] KH Medikament: Dosierung, [de] KH Medikament: Dosierung
             ↪ Tooltip
               ↪ 1 = [en] In welcher Dosierung das Medikament verordnet wurde., [de] In welcher Dosierung das Medikament verordnet wurde.
             ↪ Unit
               ↪ Dis = [en] KH Medikament: Dosierungseinheit, [de] KH Medikament: Dosierungseinheit
         ↪ Price
           ↪ Dis = [en] KH Medikament: Preis, [de] KH Medikament: Preis
           ↪ Tooltip
             ↪ 1 = [en] Der Preis eines Medikamentes., [de] Der Preis eines Medikamentes.
         ↪ Pzn
           ↪ Code
             ↪ Dis = [en] KH Medikament: PZN-Code, [de] KH Medikament: PZN-Code
       ↪ Mid
         ↪ Length
           ↪ Of
             ↪ Stay
               ↪ Dis = [en] mittlere Verweildauer, [de] mittlere Verweildauer
       ↪ Movements
         ↪ Count
           ↪ Dis = [en] Anzahl Bewegungen, [de] Anzahl Bewegungen
           ↪ Tooltip
             ↪ 1 = [en] Ist gleich der Summe der Fachabteilungen, in denen der Patient behandelt worden ist., [de] Ist gleich der Summe der Fachabteilungen, in denen der Patient behandelt worden ist.
       ↪ Mrsa
         ↪ Gender
           ↪ Dis = [en] Geschlecht, [de] Geschlecht
       ↪ No
         ↪ Crit
           ↪ Tooltip = [en] kein Kriterium, [de] kein Kriterium
       ↪ Now
         ↪ Time
           ↪ Dis = [en] jetzt, [de] jetzt
           ↪ Tooltip
             ↪ 1 = [en] Die Systemzeit., [de] Die Systemzeit.
       ↪ Patient
         ↪ Master
           ↪ Data
             ↪ Age
               ↪ Dis = [en] Versicherter: Alter, [de] Versicherter: Alter
             ↪ Care
               ↪ Grade
                 ↪ Dis = [en] Versicherter: Pflegestufe, [de] Versicherter: Pflegestufe
               ↪ State
                 ↪ Dis = [en] Versicherter: Versichertenstatus, [de] Versicherter: Versichertenstatus
             ↪ Gender
               ↪ Dis = [en] Versicherter: Geschlecht, [de] Versicherter: Geschlecht
             ↪ Zipcode
               ↪ Dis = [en] Versicherter: Postleitzahl, [de] Versicherter: Postleitzahl
       ↪ Pepp
         ↪ Tooltip
           ↪ 1 = [en] Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik, [de] Behandlungsepisodenbezogene Fallgruppe der pauschalierenden Entgeltsystem für Psychiatrie und Psychosomatik
       ↪ Princ
         ↪ Diag
           ↪ Dis = [en] Hauptdiagnose, [de] Hauptdiagnose
           ↪ Loc
             ↪ Dis = [en] Hauptdiagnose: Lokalisation, [de] Hauptdiagnose: Lokalisation
       ↪ Proc
         ↪ Date
           ↪ Dis = [en] OPSDatum, [de] OPSDatum
           ↪ Tooltip
             ↪ 1 = [en] Datum, an dem die Prozedur durchgeführt worden ist., [de] Datum, an dem die Prozedur durchgeführt worden ist.
         ↪ Localisation
           ↪ Dis = [en] OPSLokalisation, [de] OPSLokalisation
         ↪ Number
           ↪ Dis = [en] Anzahl Prozeduren, [de] Anzahl Prozeduren
           ↪ Tooltip
             ↪ 1 = [en] Die Summe aller Prozeduren., [de] Die Summe aller Prozeduren.
         ↪ Tooltip
           ↪ 1 = [en] OPS, Operationen- und Prozedurenschlüssel, maximal 6-stellig, z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code., [de] OPS, Operationen- und Prozedurenschlüssel, maximal 6-stellig, z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.
       ↪ Procedure
         ↪ Grouped
           ↪ Dis = [en] Grouperrelevante Prozedur, [de] Grouperrelevante Prozedur
           ↪ Tooltip
             ↪ 1 = [en] Prozedur, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code., [de] Prozedur, die beim Groupen Einfluss auf die Berechnung des CW - Wertes hat. Siehe Prozedur. z.B. 5-340.1 Explorative Thorakotomie, angegeben wird der Code.
       ↪ Psych
         ↪ Days
           ↪ Intensiv = [en] Anzahl_Tage_Intensiv, [de] Anzahl_Tage_Intensiv
             ↪ Dis = [en] Anzahl Tage intensiv, [de] Anzahl Tage intensiv
         ↪ One
           ↪ 2
             ↪ One
               ↪ Adults = [en] Anzahl_Stunden_eins2eins_Behandlung_Erwachsene, [de] Anzahl_Stunden_eins2eins_Behandlung_Erwachsene
                 ↪ Tooltip = [en] Anzahl Stunden 1:1 Behandlung Erwachsene, [de] Anzahl Stunden 1:1 Behandlung Erwachsene
               ↪ Infants = [en] Anzahl_Stunden_eins2eins_Behandlung_Kinder, [de] Anzahl_Stunden_eins2eins_Behandlung_Kinder
                 ↪ Tooltip = [en] Anzahl Stunden 1:1 Behandlung Kinder, [de] Anzahl Stunden 1:1 Behandlung Kinder
         ↪ Ops
           ↪ Number = [en] Anzahl_Psych_OPS, [de] Anzahl_Psych_OPS
             ↪ Tooltip = [en] Anzahl Psych-OPS, [de] Anzahl Psych-OPS
           ↪ Tooltip = [en] Psych-OPS, [de] Psych-OPS
       ↪ Psycho
         ↪ State
           ↪ Dis = [en] Psychostatus, [de] Psychostatus
       ↪ Receipt
         ↪ Department
           ↪ Dis = [en] aufnehmende Fachabteilung, [de] aufnehmende Fachabteilung
           ↪ Tooltip
             ↪ 1 = [en] Kodierung der aufnehmenden Fachabteilung nach §301(Siehe Anlage 1), [de] Kodierung der aufnehmenden Fachabteilung nach §301(Siehe Anlage 1)
       ↪ Rechnung
         ↪ Art
           ↪ Dis = [en] Rechnungsart, [de] Rechnungsart
         ↪ Datum
           ↪ Dis = [en] Rechnungsdatum, [de] Rechnungsdatum
           ↪ Tooltip
             ↪ 1 = [en] Datum, an dem die Rechnung erstellt worden ist., [de] Datum, an dem die Rechnung erstellt worden ist.
         ↪ Nummer
           ↪ Dis = [en] Rechnungsnummer, [de] Rechnungsnummer
       ↪ Reduction
         ↪ Cw
           ↪ Dis = [en] CW Abschlag, [de] CW Abschlag
           ↪ Tooltip
             ↪ 1 = [en] Ein Unterschreiten der Unteren Grenzverweildauer bewirkt einen Abschlag, bei dem die einer DRG zugeordneten CW-Wert-Abschläge multipliziert mit den Tagen der Unterschreitung von dem CW-Basiswert abgezogen werden., [de] Ein Unterschreiten der Unteren Grenzverweildauer bewirkt einen Abschlag, bei dem die einer DRG zugeordneten CW-Wert-Abschläge multipliziert mit den Tagen der Unterschreitung von dem CW-Basiswert abgezogen werden.
         ↪ Days
           ↪ Dis = [en] Abschlagstage, [de] Abschlagstage
           ↪ Tooltip
             ↪ 1 = [en] (Untere Grenzverweildauer + 1 ) - Ist-Verweildauer. Im Fallpauschalenkatalog ist immer der erste Abschlagstag angegeben.(Spalte 7), [de] (Untere Grenzverweildauer + 1 ) - Ist-Verweildauer. Im Fallpauschalenkatalog ist immer der erste Abschlagstag angegeben.(Spalte 7)
       ↪ Release
         ↪ Department
           ↪ Dis = [en] entlassende Fachabteilung, [de] entlassende Fachabteilung
           ↪ Tooltip
             ↪ 1 = [en] Kodierung der entlassenden Fachabteilung nach §301(Siehe Anlage 1), [de] Kodierung der entlassenden Fachabteilung nach §301(Siehe Anlage 1)
       ↪ Remedies
         ↪ All
           ↪ Price = [en] he_gesamtPreis_alle, [de] he_gesamtPreis_alle
             ↪ Dis = [en] Heilmittel: Gesamtpreis, [de] Heilmittel: Gesamtpreis
         ↪ Count = [en] he_menge, [de] he_menge
           ↪ Dis = [en] Heilmittel: Menge, [de] Heilmittel: Menge
         ↪ Full
           ↪ Count = [en] he_Gesamtmenge, [de] he_Gesamtmenge
             ↪ Dis = [en] Heilmittel: Gesamtmenge für Heilmittelpositionsnummer, [de] Heilmittel: Gesamtmenge für Heilmittelpositionsnummer
           ↪ Price = [en] he_gesamtPreis, [de] he_gesamtPreis
             ↪ Dis = [en] Heilmittel: Gesamtpreis für Heilmittelpositionsnummer, [de] Heilmittel: Gesamtpreis für Heilmittelpositionsnummer
         ↪ Number = [en] he_positionsnummer, [de] he_positionsnummer
           ↪ Dis = [en] Heilmittel: Heilmittelpositionsnummer, [de] Heilmittel: Heilmittelpositionsnummer
         ↪ Prescription
           ↪ Date = [en] he_Verordnungsdatum, [de] he_Verordnungsdatum
             ↪ Dis = [en] Heilmittel: Verordnungsdatum, [de] Heilmittel: Verordnungsdatum
         ↪ Price = [en] he_preis, [de] he_preis
           ↪ Dis = [en] Heilmittel: Einzelpreis, [de] Heilmittel: Einzelpreis
       ↪ Sdx
         ↪ Number
           ↪ Dis = [en] Anzahl Nebendiagnosen, [de] Anzahl Nebendiagnosen
           ↪ Tooltip
             ↪ 1 = [en] Die Summe aller Nebendiagnosen., [de] Die Summe aller Nebendiagnosen.
       ↪ Sec
         ↪ Diag
           ↪ Dis = [en] Sek. Diagnose, [de] Sek. Diagnose
           ↪ Loc
             ↪ Dis = [en] Sek. Diagnose: Lokalisation, [de] Sek. Diagnose: Lokalisation
           ↪ Prim
             ↪ Dis = [en] Sek. Diagnose: Primär, [de] Sek. Diagnose: Primär
             ↪ Tooltip
               ↪ 1 = [en] Die Diagnose, zu der die sekundäre Diagnose in Bezug steht. Siehe Diagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code ., [de] Die Diagnose, zu der die sekundäre Diagnose in Bezug steht. Siehe Diagnose. Verschlüsselung nach ICD-10 (Diagnoseschlüssel-Katalog) z.B. R56.0 Fieberkrämpfe, angegeben wird aber nur der Code .
           ↪ Tooltip
             ↪ 1
               ↪ 1 = [en] Die Sekundär-Diagnose ist in ein Code aus der Kreuz-Stern-Systematik (der Sterncode) oder ein anderer optionaler Kode., [de] Die Sekundär-Diagnose ist in ein Code aus der Kreuz-Stern-Systematik (der Sterncode) oder ein anderer optionaler Kode.
           ↪ Type
             ↪ Dis = [en] Sek. Diagnose: Typ, [de] Sek. Diagnose: Typ
       ↪ Separation
         ↪ Date
           ↪ Tooltip
             ↪ 1 = [en] Entlassungsdatum ist der letzte Behandlungstag im Krankenhaus., [de] Entlassungsdatum ist der letzte Behandlungstag im Krankenhaus.
             ↪ 2 = [en] Format: YYYYMMDD, [de] Format: YYYYMMDD
         ↪ Day
           ↪ Dis = [en] Entlassungstag, [de] Entlassungstag
           ↪ Time
             ↪ Dis = [en] Entlassungsuhrzeit, [de] Entlassungsuhrzeit
             ↪ Tooltip
               ↪ 1 = [en] Uhrzeit, zu der der Patient am letzten Tag des Krankenhausaufenthaltes entlassen worden ist., [de] Uhrzeit, zu der der Patient am letzten Tag des Krankenhausaufenthaltes entlassen worden ist.
           ↪ Tooltip
             ↪ 1 = [en] Tag der Entlassung aus stationärer Behandlung., [de] Tag der Entlassung aus stationärer Behandlung.
         ↪ Month
           ↪ Dis = [en] Entlassungsmonat, [de] Entlassungsmonat
           ↪ Tooltip
             ↪ 1 = [en] Monat, in den die Entlassung fällt., [de] Monat, in den die Entlassung fällt.
         ↪ Week
           ↪ Day
             ↪ Dis = [en] Entlassungswochentag, [de] Entlassungswochentag
         ↪ Year
           ↪ Dis = [en] Entlassungsjahr, [de] Entlassungsjahr
           ↪ Tooltip
             ↪ 1 = [en] Jahr, in das die Entlassung fällt., [de] Jahr, in das die Entlassung fällt.
       ↪ Sole
         ↪ Full
           ↪ Himigroup
             ↪ Count
               ↪ Dis = [en] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelgruppe, [de] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelgruppe
           ↪ Hpn
             ↪ Number
               ↪ Dak
                 ↪ Dis = [en] Hilfsmittel: Gesamtmenge für Hilfsmittelpositionsnummer, [de] Hilfsmittel: Gesamtmenge für Hilfsmittelpositionsnummer
             ↪ Price
               ↪ Dak
                 ↪ Dis = [en] Hilfsmittel: Gesamtpreis für Hilfsmittelpositionsnummer, [de] Hilfsmittel: Gesamtpreis für Hilfsmittelpositionsnummer
               ↪ Dis = [en] Heil- und Hilfsmittel: Gesamtpreis für PZN, [de] Heil- und Hilfsmittel: Gesamtpreis für PZN
           ↪ Price
             ↪ Dak
               ↪ Dis = [en] Hilfsmittel: Gesamtpreis, [de] Hilfsmittel: Gesamtpreis
             ↪ Dis = [en] Heil- und Hilfsmittel: Gesamtpreis, [de] Heil- und Hilfsmittel: Gesamtpreis
           ↪ Pzn
             ↪ Number
               ↪ Dis = [en] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelnummer, [de] Heil- und Hilfsmittel: Gesamtmenge für Hilfsmittelnummer
         ↪ Himigroup
           ↪ Price
             ↪ Dis = [en] Heil- und Hilfsmittel: Gesamtpreis für Hilfsmittelgruppe, [de] Heil- und Hilfsmittel: Gesamtpreis für Hilfsmittelgruppe
         ↪ Himinumber
           ↪ Dis = [en] Heil- und Hilfsmittel: Hilfsmittelnummer, [de] Heil- und Hilfsmittel: Hilfsmittelnummer
         ↪ Hpn
           ↪ Dak
             ↪ Dis = [en] Hilfsmittel: Hilfsmittelpositionsnummer, [de] Hilfsmittel: Hilfsmittelpositionsnummer
           ↪ Dis = [en] Heil- und Hilfsmittel: PZN, [de] Heil- und Hilfsmittel: PZN
           ↪ Tooltip
             ↪ 1
               ↪ 2 = [en], [de]
         ↪ Number
           ↪ Dak
             ↪ Dis = [en] Hilfsmittel: Menge, [de] Hilfsmittel: Menge
           ↪ Dis = [en] Heil- und Hilfsmittel: Menge, [de] Heil- und Hilfsmittel: Menge
         ↪ Prescript
           ↪ Date
             ↪ Dak
               ↪ Dis = [en] Hilfsmittel: Verordnungsdatum, [de] Hilfsmittel: Verordnungsdatum
             ↪ Dis = [en] Heil- und Hilfsmittel: Verordnungsdatum, [de] Heil- und Hilfsmittel: Verordnungsdatum
         ↪ Price
           ↪ Dak
             ↪ Dis = [en] Hilfsmittel: Einzelpreis, [de] Hilfsmittel: Einzelpreis
           ↪ Dis = [en] Heil- und Hilfsmittel: Einzelpreis, [de] Heil- und Hilfsmittel: Einzelpreis
       ↪ Station
         ↪ Tooltip
           ↪ 1 = [en] Der Name der Station., [de] Der Name der Station.
       ↪ Tage
         ↪ Ohne
           ↪ Berechnung
             ↪ Pro
               ↪ Entgelt
                 ↪ Dis = [en] Tage ohne Berechnung je Entgelt, [de] Tage ohne Berechnung je Entgelt
       ↪ Time
         ↪ Of
           ↪ Stay
             ↪ In
               ↪ Hours
                 ↪ Dis = [en] Verweildauer in Stunden, [de] Verweildauer in Stunden
                 ↪ Tooltip
                   ↪ 1 = [en] Siehe Verweildauer. Hier erfolgt die Angabe in Stunden und nicht in Tagen., [de] Siehe Verweildauer. Hier erfolgt die Angabe in Stunden und nicht in Tagen.
       ↪ Top
         ↪ Length
           ↪ Of
             ↪ Stay
               ↪ Dis = [en] obere Grenzverweildauer, [de] obere Grenzverweildauer
       ↪ Transfer
         ↪ Date
           ↪ Dis = [en] Verlegungsdatum, [de] Verlegungsdatum
           ↪ Tooltip
             ↪ 1 = [en] Datum des letzen Tages in der vorhergehenden Fachabteilung ., [de] Datum des letzen Tages in der vorhergehenden Fachabteilung .
         ↪ Day
           ↪ Time
             ↪ Dis = [en] Verlegungsuhrzeit, [de] Verlegungsuhrzeit
             ↪ Tooltip
               ↪ 1 = [en] Uhrzeit, zu der der Patient in ein anderes Krankenhaus verlegt worden ist., [de] Uhrzeit, zu der der Patient in ein anderes Krankenhaus verlegt worden ist.
       ↪ Vacation
         ↪ Dis = [en] Urlaub, [de] Urlaub
       ↪ Voluntary
         ↪ Days
           ↪ Dis = [en] Tage ohne Berechnung, [de] Tage ohne Berechnung
           ↪ Tooltip
             ↪ 1 = [en] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen., [de] Tage, die in Einigung mit der Krankenkasse von der DRG - Verweildauer abgezogen werden, ohne die Falldokumentation zu ändern. Durch die Kürzungen der Verweildauer kommt es meistens zu einer Minderung von DRG - Zuschlägen.
       ↪ Vwd
         ↪ Dis = [en] Verweildauer, [de] Verweildauer
       ↪ Weight
         ↪ Dis = [en] Gewicht, [de] Gewicht
         ↪ Tooltip
           ↪ 1 = [en] Das Aufnahmegewicht eines Kindes unter einem Jahr in Gramm., [de] Das Aufnahmegewicht eines Kindes unter einem Jahr in Gramm.
       ↪ Zip
         ↪ Code
           ↪ Dis = [en] Postleitzahl, [de] Postleitzahl
           ↪ Tooltip
             ↪ 1 = [en] Die Postleitzahl des Wohnortes des Patienten., [de] Die Postleitzahl des Wohnortes des Patienten.
     ↪ Dosing = [en] Dosierung, [de] Dosierung
     ↪ Group
       ↪ Care
         ↪ Data
           ↪ Dis = [en] Pflegedaten, [de] Pflegedaten
       ↪ Labor
         ↪ Dis = [en] Labor, [de] Labor
       ↪ Movement
         ↪ Dis = [en] Bewegungen, [de] Bewegungen
       ↪ Others
         ↪ Dis = [en] Sonstige, [de] Sonstige
       ↪ Patient
         ↪ Master
           ↪ Data
             ↪ Dis = [en] Versicherten Stammdaten, [de] Versicherten Stammdaten
       ↪ Psych
         ↪ Dis = [en] Psych-Kriterien, [de] Psych-Kriterien
       ↪ Sole
         ↪ Dak
           ↪ Dis = [en] Hilfsmittel, [de] Hilfsmittel
     ↪ Hem
       ↪ Infos = [en] Heilmittel, [de] Heilmittel
     ↪ Interval
       ↪ Adm
         ↪ Date = [en] Aufnahmedatum, [de] Aufnahmedatum
       ↪ Case = [en] Fall, [de] Fall
       ↪ Cur
         ↪ Case = [en] Aktueller Fall, [de] Aktueller Fall
       ↪ Days = [en] Tag(e), [de] Tag(e)
       ↪ Months = [en] Monat(e), [de] Monat(e)
       ↪ Ogvd = [en] OGVD, [de] OGVD
       ↪ Quarters = [en] Quartal(e), [de] Quartal(e)
       ↪ Years = [en] Jahr(e), [de] Jahr(e)
     ↪ Laboratory
       ↪ Value = [en] Laborwert, [de] Laborwert
     ↪ List
       ↪ Add = [en] Hinzufügen, [de] Hinzufügen
       ↪ Change = [en] Ändern, [de] Ändern
       ↪ Delete = [en] Löschen, [de] Löschen
       ↪ Do
         ↪ Nothing = [en] Keine Aktion, [de] Keine Aktion
     ↪ Medicine
       ↪ Costs = [en] Arzneimittel, [de] Arzneimittel
     ↪ No
       ↪ Interval = [en] keine Angabe, [de] keine Angabe
     ↪ Op
       ↪ And = [en] und ( && ), [de] und ( && )
       ↪ Concatenate = [en] verketten ( | ), [de] verketten ( | )
       ↪ Divide = [en] geteilt durch ( / ), [de] geteilt durch ( / )
       ↪ Equal = [en] gleich ( == ), [de] gleich ( == )
       ↪ Gt = [en] größer ( &gt; ), [de] größer ( &gt; )
         ↪ Equal = [en] größer gleich ( &gt;= ), [de] größer gleich ( &gt;= )
       ↪ In = [en] enthalten ( IN  ), [de] enthalten ( IN  )
         ↪ Fall = [en] in Fall ( ~ ), [de] in Fall ( ~ )
         ↪ Table = [en] in Tabelle ( @ ), [de] in Tabelle ( @ )
       ↪ Lt = [en] kleiner ( &lt; ), [de] kleiner ( &lt; )
         ↪ Equal = [en] kleiner gleich ( &lt;= ), [de] kleiner gleich ( &lt;= )
       ↪ Many
         ↪ In = [en] mehrere in ( ## ), [de] mehrere in ( ## )
           ↪ Table = [en] mehrere in Tabelle ( #@ ), [de] mehrere in Tabelle ( #@ )
       ↪ Minus = [en] minus ( - ), [de] minus ( - )
       ↪ Multipl = [en] multipliziert ( * ), [de] multipliziert ( * )
       ↪ No
         ↪ Operation = [en] keine Operation, [de] keine Operation
       ↪ Not
         ↪ Double
           ↪ In = [en] nicht doppelt in ( !! ), [de] nicht doppelt in ( !! )
             ↪ Table = [en] nicht doppelt in Tabelle ( !! @ ), [de] nicht doppelt in Tabelle ( !! @ )
         ↪ Equal = [en] ungleich ( != ), [de] ungleich ( != )
         ↪ In = [en] keine enthalten ( NOT IN ), [de] keine enthalten ( NOT IN )
           ↪ Table = [en] keine enthalten in Tabelle ( NOT IN @ ), [de] keine enthalten in Tabelle ( NOT IN @ )
       ↪ Or = [en] oder ( || ), [de] oder ( || )
       ↪ Plus = [en] plus ( + ), [de] plus ( + )
     ↪ Pat
       ↪ Data = [en] Patientendaten, [de] Patientendaten
     ↪ Pccl
       ↪ Dis = [en] PCCL, [de] PCCL
     ↪ Pepp
       ↪ Readm
         ↪ Sk = [en] SK, [de] SK
       ↪ Result = [en] PEPP-Ergebnis, [de] PEPP-Ergebnis
     ↪ Procedure = [en] Prozedur, [de] Prozedur
     ↪ Request
       ↪ Disward = [en] Station, [de] Station
     ↪ Result = [en] Ergebnis, [de] Ergebnis
     ↪ Sec
       ↪ Diagnose = [en] Nebendiagnose, [de] Nebendiagnose
     ↪ Unknown = [en] Unbekannt, [de] Unbekannt
   ↪ Untere
     ↪ Grenzverweildauer = [en] untere_Grenzverweildauer, [de] untere_Grenzverweildauer
   ↪ Untersuchungsdatum = [en] Untersuchungsdatum, [de] Untersuchungsdatum
   ↪ Versicherter
     ↪ Alter = [en] Versicherter_Alter, [de] Versicherter_Alter
     ↪ Geschlecht = [en] Versicherter_Geschlecht, [de] Versicherter_Geschlecht
     ↪ Pflegestufe = [en] Versicherter_Pflegestufe, [de] Versicherter_Pflegestufe
     ↪ Postleitzahl = [en] Versicherter_Postleitzahl, [de] Versicherter_Postleitzahl
     ↪ Versichertenstatus = [en] Versicherter_Versichertenstatus, [de] Versicherter_Versichertenstatus
   ↪ Verweildauerinstunden = [en] VerweildauerInStunden, [de] VerweildauerInStunden
   ↪ Vps
     ↪ Crit
       ↪ Group = [en] VPS Kriterien, [de] VPS Kriterien
     ↪ Discovered
       ↪ At = [en] VPS_Festgestelt_am, [de] VPS_Festgestelt_am
         ↪ Dis = [en] VPS: Festgestelt am, [de] VPS: Festgestelt am
         ↪ Tooltip = [en] VPS: VPS - Fehler wurde festgestellt am, [de] VPS: VPS - Fehler wurde festgestellt am
       ↪ From = [en] VPS_Festgestelt_durch, [de] VPS_Festgestelt_durch
         ↪ Dis = [en] VPS: Festgestelt durch, [de] VPS: Festgestelt durch
         ↪ Tooltip = [en] VPS: VPS - Fehler wurde festgestellt durch, [de] VPS: VPS - Fehler wurde festgestellt durch
     ↪ Err
       ↪ Code = [en] VPS_Fehlercode, [de] VPS_Fehlercode
         ↪ Dis = [en] VPS: Fehlercode, [de] VPS: Fehlercode
         ↪ Tooltip = [en] VPS: Fehlercode aus der Iskv, [de] VPS: Fehlercode aus der Iskv
       ↪ Text = [en] VPS_Fehlertext, [de] VPS_Fehlertext
         ↪ Dis = [en] VPS: Fehlertext, [de] VPS: Fehlertext
         ↪ Tooltip = [en] VPS: Fehlertext aus der Iskv, [de] VPS: Fehlertext aus der Iskv
     ↪ Severity
       ↪ Level = [en] VPS_Schweregrad, [de] VPS_Schweregrad
         ↪ Dis = [en] VPS: Schweregrad, [de] VPS: Schweregrad
         ↪ Tooltip = [en] VPS: Schweregrad des Fehlers aus der Iskv, [de] VPS: Schweregrad des Fehlers aus der Iskv
     ↪ Test
       ↪ Object = [en] VPS_Prüfgegenstand, [de] VPS_Prüfgegenstand
         ↪ Dis = [en] VPS: Prüfgegenstand, [de] VPS: Prüfgegenstand
         ↪ Tooltip = [en] VPS: Prüfgegenstand des Fehlers aus der Iskv, [de] VPS: Prüfgegenstand des Fehlers aus der Iskv
Same
   ↪ Rule
     ↪ Different
       ↪ Message = [en] Same rule different validation result, [de] Regel mit gleichem Inhalt,aber unterschiedlichen Validierungsergebnis
     ↪ Found = [en] Same rule with Ident is found in Pool, [de] Regel mit gleichen Ident und der gleichen Inhalt in dem Pool vorhanden
     ↪ Other
       ↪ Caption = [en] Same rule with Ident but other caption is found in Pool, [de] Regel mit gleichen Ident und abweichender Bezeichnung in dem Pool vorhanden
       ↪ Category = [en] Same rule with Ident but other rule category type is found in Pool, [de] Regel mit gleichen Ident und anderer Kategorie in dem Pool vorhanden
       ↪ Err
         ↪ Type = [en] Same rule with Ident but other rule violation type is found in Pool, [de] Regel mit gleichen Ident und anderem Regelverletzungstyp in dem Pool vorhanden
       ↪ Logic = [en] Same rule with Ident but other logic is found in Pool, [de] Regel mit gleichen Ident und abweichenden Logik in dem Pool vorhanden
       ↪ Number = [en] Same rule with Ident but other rule number is found in Pool, [de] Regel mit gleichen Ident und anderem Nummer in dem Pool vorhanden
       ↪ Rule
         ↪ Type = [en] Same rule with Ident but other rule type is found in Pool, [de] Regel mit gleichen Ident und anderem Regeltyp in dem Pool vorhanden
       ↪ Sugg
         ↪ Logic = [de] Regel mit gleichen Ident und abweichenden VorschlagsLogik in dem Pool vorhanden
   ↪ Table = [en] Same rule table is found in Pool, [de] Tabelle mit der gleichen Inhalt in dem Pool vorhanden
     ↪ Other
       ↪ Comment = [en] Same rule table but other comment is found in Pool, [de] Tabelle mit der abweichenden Kommentar in dem Pool vorhanden
       ↪ Content = [en] Same rule table but other content is found in Pool, [de] Tabelle mit der abweichenden Inhalt in dem Pool vorhanden
Sap
   ↪ 6weeksdeadline = [de] Vorgang außerhalb der 6-Wochen-Frist
   ↪ Billingdate
     ↪ Empty = [de] Rechnungsdatum ist nicht bekannt
   ↪ Reference
     ↪ Type
       ↪ Bill = [en] Bill, [de] Rechnung
       ↪ Cancellation = [en] Cancel, [de] Storno
SapBills = [en] Bills, [de] Rechnungen
   ↪ Update
     ↪ Tooltip = [en] Update the Bills from SAP, [de] Die Rechnung aus SAP aktualisieren
Save = [en] save, [de] speichern
SearchAborted = [en] Search was aborted by user, [de] Suche wurde vom Benutzer abgebrochen
SearchListChildType
   ↪ Between = [en] Bereich, [de] Bereich
SecondName = [en] Family Name, [de] Nachname
Secondary
   ↪ Diagnoses = [en] Secondary diagnosis (SD), [de] Nebendiagnosen (ND)
Select = [en] Select, [de] Auswählen
Server = [en] Application Server, [de] Anwendungsserver
Service = [en] Service, [de] Leistung
   ↪ Create = [en] create Service, [de] Leistung erstellen
   ↪ Overview = [en] Service overview, [de] Leistungsübersicht
Setting
   ↪ Category
     ↪ WebApp = [en] Web App, [de] Web App
   ↪ Free
     ↪ Cache = [en] Free cache, [de] Cache leeren
   ↪ Protocol
     ↪ File = [en] Protocol file, [de] Protokolldatei
   ↪ SearchLists = [en] Search lists, [de] Suchlisten
   ↪ Session = [en] Sessions, [de] Sitzungen
   ↪ ShowAllReminders = [en] Show all reminders, [de] Die Vorgangsliste zeigt alle Wiedervorlagen
   ↪ ShowAlwaysInfoForExaminateQuota = [en] Always show information to examinate quota, [de] Zeige immer Information über MD-Prüfquote
   ↪ Show
     ↪ Preview = [en] Show preview of case/workflow, [de] Fall-/Vorgangsvorschau anzeigen
   ↪ Workflow
     ↪ Sight = [en] Workflow sight, [de] Vorgangsansicht
SfDfValue = [en] SP/DF-Value, [de] ZP/ET-Betrag
SomeFeachersAreDeactivated = [en] Some feachers are deactivated, [de] Dadurch sind einige Features, wie die Fallnumererkennung im Dokumentenimport, nicht verfügbar.
StartGrouping = [en] perform Grouping, [de] Starte Grouping
StartGroupingTooltip = [en] Starts Grouping with these selected cases, [de] Startet das Grouping mit diesen ausgewählten Fällen
StartGroupingTooltipRunning = [en] Grouping was started with these selected cases, [de] Grouping wurde mit den ausgewählten Fällen gestartet
State
   ↪ BadenWuerttemberg = [en] Baden-Württemberg, [de] Baden-Württemberg
   ↪ Bavaria = [en] Free State of Bavaria, [de] Freistaat Bayern
   ↪ Berlin = [en] Berlin, [de] Berlin
   ↪ Brandenburg = [en] Brandenburg, [de] Brandenburg
   ↪ Bremen = [en] Free Hanseatic City of Bremen, [de] Freie Hansestadt Bremen
   ↪ ForeignCountry = [en] Foreign Country, [de] Ausland
   ↪ Hamburg = [en] Free and Hanseatic City of Hamburg, [de] Freie und Hansestadt Hamburg
   ↪ Hesse = [en] Hesse, [de] Hessen
   ↪ LowerSaxony = [en] Lower Saxony, [de] Niedersachsen
   ↪ MecklenburgWesternPomerania = [en] Mecklenburg Western Pomerania, [de] Mecklenburg-Vorpommern
   ↪ NorthRhineWestphalia = [en] Northrhine-Westphalia, [de] Nordrhein-Westfalen
   ↪ RhinelandPalatinate = [en] Rhineland Palatinate, [de] Rheinland-Pfalz
   ↪ Saarland = [en] Saarland, [de] Saarland
   ↪ Saxony = [en] Free State of Saxony, [de] Freistaat Sachsen
   ↪ SaxonyAnhalt = [en] Saxony-Anhalt, [de] Sachsen-Anhalt
   ↪ SchleswigHolstein = [en] Schleswig-Holstein, [de] Schleswig-Holstein
   ↪ Thuringia = [en] Free State of Thuringia, [de] Freistaat Thüringen
Stationary = [en] stationary, [de] stationär
Status = [de] der Anfrage (Anfr.-Status)
Step = [en] Step, [de] Schritt
Success = [en] Success, [de] Erfolg
SupplFee
   ↪ DF = [en] DF, [de] ET
   ↪ SF = [en] SF, [de] ZE
   ↪ SP = [en] SP, [de] ZP
SupplFeeValueDRG = [en] SF-Value, [de] ZE-Betrag
SupplFeeValuePEPP = [en] SP-Value, [de] ZP-Betrag
SupplementaryValue = [en] Supplementary Value, [de] ZE-Betrag
Support = [en] Support, [de] Support
Surcharge = [en] Surcharge, [de] Zuschlag
System
   ↪ Info
     ↪ Recommended
       ↪ Java
         ↪ Version
           ↪ Text = [en] (recommended is {0} or higher!), [de] (empfohlen ist {0} oder höher!)
Template
   ↪ Availability = [en] Available Templates, [de] Verfügbare Vorlagen
   ↪ Category
     ↪ Main = [en] Main category for a template, [de] Hauptkategorie für eine Vorlage
     ↪ Sub
       ↪ First = [en] 1. Subcategory for a template, [de] 1. Unterkategorie für eine Vorlage
       ↪ Second = [en] 2. Subcategory for a template, [de] 2. Unterkategorie für eine Vorlage
   ↪ Confirmation = [en] Confirmation, [de] Bestätigung
     ↪ Dialog = [en] confirmation dialog, [de] Bestätigungsdialog
   ↪ ConfirmationText = [en] Would you like to save document {0} to the process {1}?, [de] Möchten Sie das Dokument {0} im Vorgang {1} speichern?
   ↪ Error
     ↪ Content = [en] you can not generate a document because the main case of this process is null, [de] Sie können kein Dokument generieren, da der Hauptfall dieses Vorgangs nicht (mehr) verknüpft ist
     ↪ Header = [en] MainCase error, [de] Hauptfallfehler
     ↪ Title = [en] Error, [de] Fehler
   ↪ Generation = [en] Generate from Template, [de] Aus Vorlage erstellen
   ↪ Wait
     ↪ Notification_text = [en] Word Document will be generated from selected draft {0} and opened afterwards!, [de] Word-Dokument wird aus der ausgewählten Vorlage {0} erzeugt und danach geöffnet!
     ↪ Notification_title = [en] Word Document will be opened soon!, [de] Word-Dokument wird demnächst geöffnet!
TextTemplate
   ↪ Action = [en] Action Context, [de] Aktion Kontext
   ↪ CaseReport = [en] CaseReport Context, [de] Fallreport Kontext
   ↪ Inka = [en] Inka-Message Context, [de] INKA-Nachricht Kontext
   ↪ ProcessFinalisation = [en] Process Finalization Context, [de] Vorgangsabschluss Kontext
   ↪ Reminder = [en] Reminder Context, [de] Wiedervorlage Kontext
   ↪ Request = [en] Request Context, [de] Anfrage Kontext
Texttemplates = [en] texttemplates, [de] Textbausteine
TimeFormat = [en] HH:mm, [de] HH:mm
   ↪ Devider = [en] :, [de] :
Tp301
   ↪ InformationKey30
     ↪ BEF00 = [en] Termination of the examination procedure due to agreement in the case dialogue - without data correction, [de] Beendigung des Prüfverfahrens aufgrund Einigung im Falldialog – ohne Datenkorrektur
     ↪ BEK00 = [en] Termination of the test procedure due to data correction - MD not necessary, [de] Beendigung des Prüfverfahrens aufgrund Datenkorrektur – MD nicht notwendig
     ↪ BEK10 = [en] No data correction / addition in pre-trial proceeding and no test complaint by MD because of maximum permissible check quota, [de] Im Vorverfahren erfolgte keine Datenkorrektur/Ergänzung und infolge der maximal zulässigen Prüfquote, erfolgt keine Prüfanzeige durch den MD
     ↪ BEK11 = [de] Vorverfahren wurde kein Falldialog durchgeführt und infolge der maximal zulässigen Prüfquote erfolgt keine Prüfanzeige durch den MD (KAIN)
     ↪ BEK20 = [en] Realized case dialogue without solution in pre-trial proceeding, no test complaint by MD because of maximum permissible check quota, [de] Im Vorverfahren wurde ein Falldialog durchgeführt, jedoch keine Einigung erzielt und infolge der maximal zulässigen Prüfquote, erfolgt keine Prüfanzeige durch den MD
     ↪ EKH01 = [de] Inhaltliche begründetes Bestreiten der Entscheidung der Krankenkasse gemäß § 9 Abs. 1 Satz 1 und 2 PrüfvV ohne Einleitung des EV (INKA)
     ↪ EKH02 = [de] Inhaltliche begründetes Bestreiten der Entscheidung der Krankenkasse gemäß § 9 Abs. 1 Satz 1 bis 3 PrüfvV mit gleichzeitiger Einleitung des EV (INKA) Tp301.InformationKey30
     ↪ EKH30 = [de] Aufforderung zur Verlängerung des Erörterungsverfahrens (INKA)
     ↪ EKH31 = [de] Annahme der Aufforderung zur Verlängerung des Erörterungsverfahrens (INKA)
     ↪ EKH32 = [de] Ablehnung der Verlängerung des Erörterungsverfahrens (INKA)
     ↪ EKH33 = [de] Aufforderung mündliches Erörterungsverfahren (INKA)
     ↪ EKH34 = [de] Zustimmung mündliches Erörterungsverfahren (INKA)
     ↪ EKH35 = [de] Ablehnung mündliches Erörterungsverfahren (INKA)
     ↪ EKH41 = [de] Anzeige für eine ausnahmsweise Zulassung nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (INKA)
     ↪ EKH42 = [de] Ablehnung nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (INKA)
     ↪ EKH43 = [de] Annahme nicht fristgerecht geltend gemachter Einwendungen oder Tatsachenvortrag gemäß § 9 Abs. 7 PrüfvV (INKA)
     ↪ EKH50 = [de] Einigung im Erörterungsverfahren und Beendigung gemäß § 9 Abs. 8 PrüfvV (INKA)
     ↪ EKH51 = [de] Einvernehmliche Beendigung des Erörterungsverfahren ohne Einigung gemäß § 9 Abs. 10 PrüfvV (INKA)
     ↪ EKH60 = [de] Abrechnungsstreitigkeit gilt infolge fehlender Erörterung oder fehlender Mitwirkung als erörtert gemäß § 9 Abs. 11 PrüfvV (INKA)
     ↪ EKH61 = [de] Es wurde keine Einigung erzielt und das Erörterungsverfahren ist gemäß § 9 Abs. 12 PrüfvV beendet (INKA)
     ↪ EKK01 = [de] Krankenkasse schließt sich gemäß §9 Abs. 3 Satz 1 PrüfvV der Begründung des Krankenhauses an. Es erfolgt kein Erörterungsverfahren. (KAIN)
     ↪ EKK02 = [de] Krankenkasse schließt sich der Begründung des Krankenhauses gemäß §9 Abs. 3 Satz 1 PrüfvV an. Das durch das Krankenhaus bereits eingeleitete EV ist beendet. (KAIN)
     ↪ EKK03 = [de] Krankenkasse schließt sich nicht der Begründung des Krankenhauses gemäß §9 Abs. 4 PrüfvV an, das KH hat das EV bereits eingeleitet. (KAIN)
     ↪ EKK04 = [de] Krankenkasse schließt sich nicht der Begründung des Krankenhauses gemäß §9 Abs. 4 Satz 1 PrüfvV an und leitet das EV ein. (KAIN)
     ↪ EKK10 = [de] Entscheidung der Krankenkasse wurde nicht fristgemäß bestritten und gilt als erörtert gemäß § 9 Abs. 2 PrüfvV mit Folge der Aufrechnung (KAIN)
     ↪ EKK30 = [de] Aufforderung zur Verlängerung des Erörterungsverfahrens (KAIN)
     ↪ EKK31 = [de] Annahme der Aufforderung zur Verlängerung des Erörterungsverfahrens (KAIN)
     ↪ EKK32 = [de] Ablehnung der Verlängerung des Erörterungsverfahrens (KAIN)
     ↪ EKK33 = [de] Aufforderung mündliches Erörterungsverfahren (KAIN)
     ↪ EKK34 = [de] Zustimmung mündliches Erörterungsverfahren (KAIN)
     ↪ EKK35 = [de] Ablehnung mündliches Erörterungsverfahren (KAIN)
     ↪ EKK41 = [de] Anzeige einer Ausnahmsweise Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN)
     ↪ EKK42 = [de] Ablehnung Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN)
     ↪ EKK43 = [de] Annahme Zulassung nicht fristgerecht geltend gemachter Einwende oder Tatsachenvorträge unter Angabe der besonderen Gründe gemäß § 9 Abs. 7 PrüfvV (KAIN)
     ↪ EKK50 = [de] Einigung im Erörterungsverfahren und Beendigung gemäß § 9 Abs. 8 PrüfvV (KAIN) Tp301.InformationKey30.EKK51 Einvernehmliche Beendigung des Erörterungsverfahren gemäß § 9 Abs. 10 PrüfvV (KAIN)
     ↪ EKK51 = [de] Einvernehmliche Beendigung des Erörterungsverfahren  ohne Einigung gemäß § 9 Abs. 10 PrüfvV (KAIN)
     ↪ EKK60 = [de] Abrechnungsstreitigkeit gilt infolge fehlender Erörterung oder fehlender Mitwirkung als erörtert gemäß § 9 Abs. 11 PrüfvV (KAIN)
     ↪ EKK61 = [de] Es wurde keine Einigung erzielt und das Erörterungsverfahren ist gemäß § 9 Abs. 12 PrüfvV beendet (KAIN)
     ↪ FDI01 = [en] Request for case dialog, [de] Aufforderung zum Falldialog
     ↪ FDI02 = [en] Acceptance of the request for the case dialogue, [de] Annahme der Aufforderung zum Falldialog
     ↪ FDI03 = [en] Rejection of a case dialog, [de] Ablehnung eines Falldialoges
     ↪ FDI11 = [en] Invitation to extend the case dialogue, [de] Aufforderung zur Verlängerung des Falldialogs
     ↪ FDI12 = [en] Adoption of the request to extend the case dialogue, [de] Annahme der Aufforderung zur Verlängerung des Falldialogs
     ↪ FDI13 = [en] Rejection of the extension of the case dialogue, [de] Ablehnung der Verlängerung des Falldialoges
     ↪ FDI20 = [en] Declaration on the termination of the case dialogue, [de] Erklärung über die Beendigung des Falldialogs
     ↪ FDK01 = [en] Request for case dialog, [de] Aufforderung zum Falldialog
     ↪ FDK02 = [en] Acceptance of the request for the case dialogue, [de] Annahme der Aufforderung zum Falldialog
     ↪ FDK03 = [en] Rejection of a case dialog, [de] Ablehnung eines Falldialoges
     ↪ FDK11 = [en] Invitation to extend the case dialogue, [de] Aufforderung zur Verlängerung des Falldialogs
     ↪ FDK12 = [en] Adoption of the request to extend the case dialogue, [de] Annahme der Aufforderung zur Verlängerung des Falldialogs
     ↪ FDK13 = [en] Rejection of the extension of the case dialogue, [de] Ablehnung der Verlängerung des Falldialoges
     ↪ FDK20 = [en] Declaration on the termination of the case dialogue, [de] Erklärung über die Beendigung des Falldialogs
     ↪ FV000 = [en] Questions about the condition of certain measures, [de] Fragen zur Voraussetzung bestimmter Maßnahmen
     ↪ KL000 = [en] Free text with mention of other / further test objects, [de] Freitext bei Nennung anderer/weiterer Prüfgegenstände
     ↪ KP000 = [en] Coding test, [de] Kodierprüfung
     ↪ MDI04 = [de] Einwände gegen Grund oder Höhe des Aufschlages durch das Krankenhaus (INKA)
     ↪ MDI05 = [de] Krankenkasse hat sich nicht innerhalb der Frist nach § 8 Satz 3 geäußert und das Verfahren gilt als beendet und die Krankenhausabrechnung als erörtert (INKA)
     ↪ MDK01 = [en] Performance decision has no complaint of settlement as a result (without decrease of settlement amount), [de] Leistungsrechtliche Entscheidung hat keine Beanstandung der Abrechnung (ohne Minderung des Abrechnungsbetrages) als Ergebnis
     ↪ MDK02 = [en] Performance decision has complaint of billing as a result (with decrease of settlement amount), [de] Leistungsrechtliche Entscheidung hat Beanstandung der Abrechnung (mit Minderung des Abrechnungsbetrages) als Ergebnis
     ↪ MDK03 = [en] Performance decision has due to record correction (§7 Abs. 5 PrüfvV) in the MD procedure no complaint of billing as a result (without decrease of settlement amount), [de] Leistungsrechtliche Entscheidung hat aufgrund Datensatzkorrektur (§7 Abs. 5 PrüfvV) im MD-Verfahren, ohne MD Abbruch, keine Beanstandung (ohne Minderung des Abrechnungsbetrages) der Abrechnung als Ergebnis
     ↪ MDK04 = [en] Setting of additional charge corresponding § 275c Abs. 3 SGB V by health incurance, [de] Festlegung des Aufschlages gemäß § 275c Abs. 3 SGB V durch die Krankenkasse
     ↪ MDK06 = [de] Reaktion zu evtl. Einwänden des Krankenhauses (KAIN)
     ↪ MDK07 = [de] Mitteilung über einen unveränderten Aufschlagsbetrag (KAIN)
     ↪ MDK08 = [de] Mitteilung über einen veränderten Aufschlagsbetrag (KAIN)
     ↪ MDK09 = [de] Mitteilung des Aufschlages mit Grundlage der Berechnung (KAIN)
     ↪ MDK10 = [en] No or incomplete documentation to MD resulting in offsetting, [de] Keine oder nicht vollständige Unterlagen an MD mit Folge der Aufrechnung
     ↪ MDK11 = [de] Rücknahme des Aufschlages, keine weitere Geltendmachung (KAIN)
     ↪ MDK12 = [en] Information about MD break-off due to data correction with decrease of settlement amount by health insurance, test procedure finished, [de] Information durch die Krankenkasse über MD Abbruch wegen Datenkorrektur mit Minderung des Abrechnungsbetrages, Prüfverfahren beendet
     ↪ MDK13 = [en] Information about MD break-off due to data correction without decrease of settlement amount by health insurance, test procedure finished, [de] Information durch die Krankenkasse über MD Abbruch wegen Datenkorrektur ohne Minderung des Abrechnungsbetrages, Prüfverfahren beendet
     ↪ MDK14 = [de] Endgültige Anpassung eines bereits geltend gemachten Aufschlages (KAIN)
     ↪ MDK20 = [de] Datum der leistungsrechtlichen Entscheidung
     ↪ MDK30 = [de] Keine fristgemäße Übermittlung der Unterlagen. Die Krankenhausabrechnung gilt als erörtert gemäß § 7 Abs. 2 Satz 10 PrüfvV (KAIN)
     ↪ MDK31 = [de] Diese vom MD konkret benannten angeforderten Unterlagen wurden nicht fristgemäß vorgelegt und können nicht im Erörterungsverfahren vorgelegt werden gemäß § 7 Abs. 2 Satz 11 PrüfvV (KAIN)
     ↪ NVI01 = [en] Proposal for a post-procedure, reasoned opinioncase.merging.do.saveAndOpen=Save case and open, [de] Vorschlag eines Nachverfahrens, begründete Stellungnahme
     ↪ PF000 = [en] primary bad allocation, [de] primäre Fehlbelegung
     ↪ SF000 = [en] secondary bad allocation, [de] sekundäre Fehlbelegung
Transferring = [en] Transferring, [de] Verlegung
Treat = [en] Treat, [de] Behandeln
Treating
   ↪ Department = [de] KH interner Kurzname der beh. FAB (beh. FAB (intern))
     ↪ Short = [en] Treating Department §. 301 (Treat. 301), [de] Behandelnde FAB nach §. 301 (Behandl. 301)
   ↪ Department301 = [de] §301-Schlüssel der FAB (beh. FAB §301)
     ↪ Name = [de] §301-Name der FAB (beh. FAB)
Treatment = [en] Treatment, [de] Behandlung
TypeOfService = [en] Type of Service, [de] Art der Leistung
UnbilledDays = [en] Unbilled Days (UBD), [de] Tage ohne Berechnung (TOB)
   ↪ From = [en] UBD from, [de] TOB von
   ↪ To = [en] UBD to, [de] TOB bis
Updated = [en] updated (last Modification), [de] Zeitpunkt der letzten Bearbeitung (Aktualisiert)
   ↪ From = [en] last Modification from, [de] Aktualisiert von
   ↪ To = [en] last Modification to, [de] Aktualisiert bis
UseTemplate = [en] Template Usage, [de] Vorlange benutzen
Users = [en] Users, [de] Benutzer
Validation
   ↪ Case
     ↪ Already
       ↪ Selected = [de] Leistung wurde schon dem Vorgang zugefügt
     ↪ Number
       ↪ For
         ↪ Patient
           ↪ Invalid = [de] Leistungsnummer ist für den Patient nicht valide
   ↪ Catalogdata
     ↪ NoBegeExists = [en] Catalog entry for this bege does not exists anymore!, [de] Die hinterlegte Berufsgenossenschaft wurde in der Zwischenzeit aus dem Katalog entfernt!
     ↪ NoBegesFound = [en] No Beges available in catalogdata!, [de] In den Katalogen wurden keine Berufsgenossenschaften hinterlegt!
     ↪ NoHospitalExists = [en] Catalog entry for this hospital does not exists anymore!, [de] Das hinterlegte Krankenhaus wurde in der Zwischenzeit aus dem Katalog entfernt!
     ↪ NoHospitalsFound = [en] No Hospitals available in catalogdata!, [de] In den Katalogen wurden keine Krankenhäuser hinterlegt!
     ↪ NoInsurancesExists = [en] Catalog entry for this Insurance does not exists anymore!, [de] Die hinterlegte Krankenkasse wurde in der Zwischenzeit aus dem Katalog entfernt!
     ↪ NoInsurancesFound = [en] No Insurances available in catalogdata!, [de] In den Katalogen wurden keine Krankenkassen hinterlegt!
     ↪ NoMdkExists = [en] Catalog entry for this md does not exists anymore!, [de] Der hinterlegte medizinische Dienst wurde in der Zwischenzeit aus dem Katalog entfernt!
     ↪ NoMdksFound = [en] No MDs available in catalogdata!, [de] In den Katalogen wurden keine medizinischen Dienste hinterlegt!
   ↪ Error
     ↪ CaseAlreadyExists = [en] A case with casenumber {0} already exists!, [de] Ein Fall mit der Nummer {0} wurde bereits hinzugefügt!
     ↪ ErrorCount = [en] Count of Errors {0}:, [de] Anzahl der Fehler {0}:
     ↪ InvalidBill = [en] Invalid bill number!, [de] Rechnungsnummer ist nicht eingegeben!
     ↪ InvalidDepartment = [en] Department name is not valid!, [de] Bezeichnung der Fachabteilung ist nicht korrekt!
     ↪ InvalidDepartmentIndex = [en] Department name at index {0} is not valid!, [de] Bezeichnung der Fachabteilung an Position {0} ist nicht korrekt!
     ↪ InvalidHospitalIdent = [en] Hospitalidentifier is not valid!, [de] IKZ des Krankenhauses ist nicht korrekt!
     ↪ InvalidInsuranceIdent = [en] Insuranceidentifier is not valid!, [de] IKZ der Krankenkasse ist nicht korrekt!
     ↪ NoAdmissionDayCase = [en] Enter a admission date for the case!, [de] Geben Sie ein Aufnahmedatum für den Fall ein!
     ↪ NoAdmissionDayDepartment = [en] Enter a admission date for the department!, [de] Geben Sie ein Aufnahmedatum für die Fachabteilung ein!
     ↪ NoAlter = [en] Please enter the patient's age!, [de] Geben Sie bitte das Alter des Patienten ein!
       ↪ Birthdate = [en] Date of birth will be calculated automatically., [de] Das Geburtsdatum wird automatisch berechnet.
     ↪ NoCaseNumber = [en] Enter a valid Casenumber!, [de] Geben sie eine gültige Fallnummer ein!
     ↪ NoDischargeDayCase = [en] Enter a discharge date for the case!, [de] Geben Sie ein Entlassungsdatum für den Fall ein!
     ↪ NoDischargeDayDepartment = [en] Enter a discharge date for the department!, [de] Geben Sie ein Entlassungsdatum für die Fachabteilung ein!
     ↪ NoDischargeDayDepartmentIndex = [en] Enter a discharge date for the department at index {0} !, [de] Geben Sie ein Entlassungsdatum für die Fachabteilung an Position {0} an!
     ↪ NoPatientBirthday = [en] Enter patient birthday!, [de] Geben Sie den Geburtstag des Patienten ein!
     ↪ NoPatientLastName = [en] Enter patient lastname!, [de] Geben Sie den Nachnamen des Patienten ein!
     ↪ NoPatientNumber = [en] Enter a patient number!, [de] Geben Sie eine Patientennummer ein!
     ↪ OpsDate = [en] Some procedures do not have a execution date!, [de] Einige Prozeduren haben kein Ausführungsdatum!
     ↪ OpsDateIndex = [en] Some procedures at index {0} do not have a execution date!, [de] Einige Prozeduren haben kein Ausführungsdatum an Position {0} !
     ↪ TimeFormat = [en] Wrong time format, use hh:mm!, [de] Falsches Zeitformat, benutzen Sie hh:mm!
     ↪ WarningCount = [en] Count of Warnings {0}:, [de] Anzahl der Warnungen {0}:
   ↪ Masterdata
     ↪ NoActionTypesFound = [en] No Actiontypes available in masterdata!, [de] In den Stammdaten wurden keine Aktionstypen hinterlegt!
     ↪ NoAuditReasonsFound = [en] No Auditreasons available in masterdata!, [de] In den Stammdaten wurden keine Prüfgründe hinterlegt!
     ↪ NoDocumentTypesFound = [en] No Documenttypes available in masterdata!, [de] In den Stammdaten wurden keine passenden Dokumententypen hinterlegt!
     ↪ NoDraftTypesForMainCategoryFound = [en] No Drafttypes for Maincategory available in catalogdata!, [de] In den Stammdaten wurden keine Vorlagetypen für die Hauptkategorie hinterlegt!
     ↪ NoDraftTypesForSubCategory1Found = [en] No Drafttypes for 1. Subcategory available in catalogdata!, [de] In den Stammdaten wurden keine Vorlagetypen für die 1. Unterkategorie hinterlegt!
     ↪ NoDraftTypesForSubCategory2Found = [en] No Drafttypes for 2. Subcategory available in catalogdata!, [de] In den Stammdaten wurden keine Vorlagetypen für die 2. Unterkategorie hinterlegt!
     ↪ NoReminderTypesFound = [en] No Remindertypes available in masterdata!, [de] In den Stammdaten wurden keine Arten der Wiedervorlage hinterlegt!
     ↪ NoRequestStatusFound = [en] No Requeststatus available in masterdata!, [de] In den Stammdaten wurden keine Anfrage-Status hinterlegt!
     ↪ NoUsersFound = [en] No Users available in masterdata!, [de] In den Stammdaten wurden keine passenden Benutzer hinterlegt!
   ↪ Select
     ↪ Case
       ↪ From
         ↪ List = [de] Wählen Sie bitte eine Leistungsnummer aus der Liste
   ↪ Warning
     ↪ CombinationAllreadyExistsIdentCsNumber = [en] Combination of Hospitalidentifier and Casenumber allready exists!, [de] Diese Kombination von IKZ und Fallnummer existiert bereits! Es wird eine neue Fallversion angelegt.
     ↪ DischargeReason12MatchNot34 = [en] Discharge reason seems invalid, [de] Entlassungsgrund erscheint unplausibel
     ↪ DischargeReason34MatchNot12 = [en] Discharge reason 2 seems invalid, [de] Entlassungsgrund2 erscheint unplausibel
     ↪ NoOriginHospital = [en] Admission cause is set as Transfering. There should be an origin hospital!, [de] Hinweis: Aufnahmegrund ist eine Verlegung. Es sollte ein einweisendes Krankenhaus angegeben werden!
     ↪ OpsDate = [en] The date of the procedure is outside the stay in the department!, [de] Das Datum der Prozedur ist außerhalb der Aufenthaltsdauer in der Abteilung!
     ↪ PseudoDepartment = [en] Pseudo-Department should not have one or more Diagnosis!, [de] Pseudo-Fachabteilungen sollten nicht eine oder mehrere Diagnosen haben!
ValidationError
   ↪ Invalid
     ↪ MdkName = [en] Mdk Name is not valid!, [de] MD-Name ist nicht korrekt!
Version = [en] Version, [de] Version
   ↪ Add
     ↪ Confirm = [en] Do you want to create new version of this case?, [de] Wollen Sie eine neue Version von diesem Fall anlegen?
   ↪ Parent
     ↪ AddCase = [en] Version created with manual case input, [de] Version angelegt bei manueller Falleingabe
   ↪ Risk
     ↪ Type
       ↪ AuditCaseDialog = [en] Audit Case Dialog, [de] Anfrage Falldialog
       ↪ Audit
         ↪ MD = [en] Audit MD, [de] Anfrage MD
       ↪ BeforeBilling = [en] By Billing, [de] Bei Abrechnung
       ↪ CaseFinalisation = [en] Case Finalisation, [de] Vorgangsabschluss
       ↪ Not
         ↪ Set = [en] not set, [de] Keine Zuordnung
VersionNumber = [en] Versionsnumber (Version), [de] Versionsnummer (Version)
   ↪ From = [en] Versionsnumber to, [de] Versionsnummer von
   ↪ To = [en] Versionsnumber from, [de] Versionsnummer bis
Versioncontroll
   ↪ Comment = [en] Comment, [de] Kommentar
   ↪ CreateNewVersion = [en] create Version, [de] Version anlegen
   ↪ Details = [en] Versiondetails, [de] Versionseinzelheiten
   ↪ Error = [en] Can not delete., [de] Löschen nicht möglich.
   ↪ Hint
     ↪ EnterComment = [en] Please enter a Comment!, [de] Bitte Kommentar angeben!
     ↪ OneMustRemain = [en] At least 1 CP-Version must remain., [de] Mind. 1 CP-Version muss existieren.
     ↪ ParentVersion = [en] Parentversion of:, [de] Elternversion von:
     ↪ SelectVersion = [en] Please select a Version!, [de] Bitte Version auswählen!
   ↪ Title = [en] Versionmanagement, [de] Versionsverwaltung
   ↪ VersionComment = [en] Versioncomment, [de] Versionskommentar
Ward = [en] Ward, [de] Station
WardGrouping = [en] Ward Grouping, [de] Stations Grouping
Warning = [en] Warning (W), [de] Warnung (W)
Webapp
   ↪ Open
     ↪ Btn = [de] Konfiguration des checkpoint x (Web App )
       ↪ Tooltip = [de] Konfiguration der Stammdaten, Benutzerverwaltung, Listenverwaltung, etc.
     ↪ Management = [de] Administration des checkpoint x Servers (Wildfly)
       ↪ Tooltip = [de] Administration des checkpoint x Servers (Wildfly) - nur für Administratoren
Weight = [en] Weight, [de] Gewicht
Wiedervorlage
   ↪ Comment
     ↪ Dialog = [en] Note, [de] Hinweis
     ↪ Info = [en] The maximum number of characters allowed has been exceeded. 255 Chars is allowed, [de] Die maximal zulässige Zeichenanzahl wurde überschritten. 255 Zeichnen sind erlaubt
Wm
   ↪ Requestcreation
     ↪ Title = [en] Create new request, [de] Neue Anfrage erstellen
   ↪ Requesttype = [en] Requesttype, [de] Anfragetyp
   ↪ Service
     ↪ Creation
       ↪ Title = [en] Create new service (Created services), [de] Neue Leistung erstellen (Leistung erstellen)
Word
   ↪ Templates = [en] MS-Word Templates, [de] MS-Word Templates
Workflow
   ↪ CloseAndCreateReminder = [en] Reminders - close all and create a new one, [de] Alle in der Liste angezeigten Wiedervorlagen abschließen und neu anlegen
     ↪ CloseReminder
       ↪ Successfully = [en] {0}  reminders of art {1} 'were set as closed., [de] {0}  Wiedervorlagen von Art ''''{1}'''' wurden als abgearbeitet gesetzt.
     ↪ Confirmation = [de] Alle in der Liste angezeigten Wiedervorlagen werden abgeschlossen.Wollen Sie für diese Vorgänge eine neue Wiedervorlage generieren?
     ↪ CreateReminder
       ↪ Successfully = [en] {0} new reminders of art {1} 'were created., [de] {0} neue Wiedervorlagen von Art ''''{1}'''' wurden angelegt.
     ↪ NoFilter = [en] This function can only be used if the 'Reminder type' filter is set., [de] Diese Funktion kann nur genutzt werden, wenn der Filter 'Art der Wiedervorlage' gesetzt ist.
     ↪ NotUnique = [en] This function can only be used if the filter 'type of resubmission' is set uniquely (once)., [de] Diese Funktion kann nur genutzt werden, wenn der Filter 'Art der Wiedervorlage' eindeutig, mit nur einer Auswahl, gesetzt ist.
   ↪ ContextMenu
     ↪ Cancel = [de] Vorgang stornieren
     ↪ Uncancel = [de] Stornierung aufheben
     ↪ WorkflowCancel
       ↪ Confirm = [en] Do you really want to cancel the workflow number {0}?, [de] Möchten Sie die Vorgangsnummer {0} wirklich stornieren?
       ↪ Error = [en] workflow {0} could not be canceled., [de] Vorgangsnummer {0} konnte nicht storniert werden
       ↪ Success = [en] workflow  {0} successfully canceled, [de] Vorgangsnummer {0} erfolgreich storniert
     ↪ WorkflowUnCancel
       ↪ Confirm = [en] Are you sure you want to cancel the cancellation for workflow number {0}?, [de] Möchten Sie die Stornierung für die Vorgangsnummer {0} wirklich aufheben?
       ↪ Error = [en] The cancellation for workflow number {0} could not be canceled, [de] Die Stornierung für Vorgangsnummer {0} konnte nicht aufgehoben werden
       ↪ Success = [en] The cancellation for the workflow number {0} is successfully canceled, [de] Die Stornierung für die  Vorgangsnummer {0} ist erfolgreich  aufgehoben
   ↪ Deadline
     ↪ 6WeeksDeadline = [en] Deadline initiation bill audit, [de] Frist Einleitung Rechnungsprüfung
     ↪ 6WeeksDeadlineComment = [en] If the 6-week period is exceeded, then a note should appear when creating a new operation., [de] Wenn die 6-Wochen-Frist überschritten wird, dann soll beim Anlegen einem neuen Vorgang ein Hinweis erscheinen.
     ↪ AnswerDeadline = [en] Deadline to give a reply or answer, [de] Frist Antwort
     ↪ AnswerDeadlineComment = [en] Deadline to give a reply in Preliminary Proceedings Request type., [de] Frist für eine Antwort in der Prüfanfrage Typ.
     ↪ BillCorrectionDeadline = [en] Deadline for bill correction, [de] Frist für einmalige Rechnungskorrektur
     ↪ BillCorrectionDeadlineComment = [en] Deadline by which a bill of exchange correction from the hospital to which the health insurance can be sent, [de] Frist, bis zu der eine Rechnungskorrektur vom Krankenhaus an das Krankenkasse gesendet werden kann
     ↪ CaseDialogBillCorrectionDeadline = [en] Deadline Case dialog Billing correction, [de] Frist Falldialog Rechnungskorrektur
     ↪ CaseDialogBillCorrectionDeadlineComment = [en] If an agreement is reached in the case dialog, the test procedure ends. Any necessary correction of the invoice should be completed within 4 weeks, [de] Wird in dem Falldialog eine Einigung erzielt, endet das Prüfverfahren. Eine gegebenenfalls notwendige Korrektur der Rechnung soll innerhalb von 4 Wochen erf
     ↪ ContinuationFeeDeadline = [en] Deadline continuation fee, [de] Frist Fortsetzungspauschale
     ↪ ContinuationFeeDeadlineComment = [en] Extension of the deadline, after payment of the continuation fee, up to which the requested documents must be submitted to the MD, [de] Verlängerung der Frist, nach Zahlung der Fortsetzungspauschale, bis zu der die angeforderten Unterlagen beim MD eingereicht sein müssen
     ↪ DataRecordCorrectionDeadline = [en] Deadline for dataRecord Correction, [de] Frist Datensatzkorrektur
     ↪ DataRecordCorrectionDeadlineComment = [en] Deadline to correct given data record., [de] Frist zur Korrektur des Datensatzes.
     ↪ MdkAuditCompletionDeadline = [en] Deadline for completion of the MD audit, [de] Frist bis zum Abschluss der MD-Prüfung
     ↪ MdkAuditCompletionDeadlineComment = [en] Deadline, up to the examination and evaluation by the MD must be completed, [de] Frist, bis zu der die Überprüfung und Bewertung durch den MD abgeschlossen sein muss
     ↪ MdkDocumentDeliverDeadline = [en] Deadline for submitting documents, [de] Abgabefrist Unterlagen
     ↪ MdkDocumentDeliverDeadlineComment = [en] The deadline for submitting the documents requested by the MD to the MD, [de] Frist, bis zu der die vom MD angeforderten Unterlagen an den MD geliefert werden müssen
     ↪ PreliminaryProceedingsClosedDeadline = [en] Deadline pre-trial, [de] Frist Vorverfahren-Abschluss
     ↪ PreliminaryProceedingsClosedDeadlineComment = [en] Deadline for completion of the pre-litigation procedure, [de] Frist, bis zu dem das Vorverfahren abgeschlosssen sein muss
     ↪ ProposalSubsequentProceedingsDeadline = [en] ProposalSubsequentProceedingsDeadline, [de] Frist Vorschlag Nachverfahren
     ↪ ProposalSubsequentProceedingsDeadlineComment = [en] Extract from § 9 PruefVV 2016: "1 Within 6 weeks after receipt of the notifications according to §8 sentence 1 and 2, the hospital may propose a follow-up procedure based on the data and documents submitted to the end of the MD assessment to the health insurance by: a reasoned opinion on the performance-related decision of the health insurance is made in accordance with §8 sentence 1. 2 The implementation of the supplementary procedure is voluntary.", [de] Auszug aus § 9 der PruefVV 2016: "1 Das Krankenhaus kann innerhalb von 6 Wochen nach Zugang der Mitteilungen nach §8 Satz 1 und 2 ein Nachverfahren auf Basis der bis zum Ende der MD-Begutachtung übermittelten Daten und Unterlagen gegenüber der Krankenkasse vorschlagen, indem eine begründete Stellungnahme zur leistungsrechtlichen Entscheidung der Krankenkasse nach §8 Satz 1 abgegeben wird. 2 Die Durchführung des Nachverfahrens ist freiwillig."
     ↪ Review
       ↪ Completion = [de] Abschlußfrist für Erörterungsverfahren
         ↪ Comment = [de] Das  EV  ist,  vorbehaltlich  der  einvernehmlichen  Verlängerung  dieses  Zeitraumes  durch  Krankenhaus und Krankenkasse, binnen 12 Wochen nach Mitteilung der Krankenkasse gemäß  Absatz  4  abzuschließen
       ↪ Documents
         ↪ Send
           ↪ On = [de] Nachsendefrist für Dokumente für Erörterungsverfahren
             ↪ Comment = [de] Grundlage  des  EV  sind  sämtliche  erforderliche  Daten  des  streitbefangenen  Falles,  einschließlich  aller  der  vom  MD  beim  Krankenhaus  erhobenen  Daten,  sowie  die  im  Rahmen  des  EV  übermittelten  Unterlagen  und  vorgetragenen  Argumentationen/Einwendungen.  Die Parteien des Erörterungsverfahrens stellen sicher, dass für die Durchführung des Erörterungsverfahrens  erforderliche  Unterlagen  spätestens  4  Wochen  nach  der  Mitteilung   gemäß Absatz 3 Satz 1 der anderen Partei vorliegen.
       ↪ Insurance
         ↪ Answer = [de] Antwortfrist der Krankenkasse für Erörterungsverfahren
           ↪ Comment = [de] Schließt sich die Krankenkasse der vom Krankenhaus vorgetragenen Begründung an, teilt sie dies dem Krankenhaus binnen 6 Wochen nach Zugang des Bestreitens nach Absatz 1 mit.
       ↪ Start = [de] Frist Einleitung Erörterungsverfahren nach MD-Rüfung
         ↪ Comment = [de] Ist das Krankenhaus mit der Entscheidung der Krankenkasse nach § 8 nicht einverstanden, hat es diese binnen 6 Wochen nach Zugang der Entscheidung gegenüber der Krankenkasse zu bestreiten.
   ↪ Mdk
     ↪ Audit
       ↪ Completion
         ↪ Deadline = [de] Frist bis zum Abschluss des Vorverfahrens (Frist Vv Abschluss)
   ↪ Warning
     ↪ No
       ↪ Case = [en] For the workflow number {0} is no hospital case found.Probably it was deleted., [de] Dem Vorgang {0} ist kein Krankenhausfall zugeordnet.Möglicherweise wurde dieser gelöscht.
WorkflowDoesNotExistWithReason = [de] Die Vorgang mit der ID {0} wurde nicht gefunden. Möglicherweise wurde er zwischenzeitlich von einem anderen Benutzer gelöscht.
WorkflowList = [en] Workflow List, [de] Vorgangsliste
WorkflowNumber = [en] Process No., [de] Vorgangsnummer (Vorgangsnr.)
WorkflowState = [en] State, [de] Status des Vorgangs (Vorgangsstatus)
   ↪ Archived = [en] archived, [de] archiviert
   ↪ Closed = [en] closed, [de] geschlossen
   ↪ Done = [en] done, [de] erledigt
   ↪ Open = [en] open, [de] offen
   ↪ Paused = [en] paused, [de] pausiert
WorkflowSubject = [en] Subject, [de] Betreff des Vorgangs (Betreff)
WorkflowType = [en] Type, [de] Typ des Vorgangs (Typ)
   ↪ NoCase = [en] Not case-related process, [de] Nicht fallbezogener Vorgang
   ↪ Stationary = [en] Inpatient hospital case, [de] Stationärer Krankenhausfall
WorkingList = [en] Working List, [de] Arbeitsliste
   ↪ Columns = [en] Columns, [de] Spalten
     ↪ Available = [en] Available Columns, [de] Verfügbare Spalten
     ↪ Selected = [en] Selected Columns, [de] Gewählte Spalten
   ↪ ContextMenu
     ↪ Cancel = [de] Fall stornieren
     ↪ CaseCancel
       ↪ Confirm = [de] Möchten Sie den Fall mit der Nummer {0} wirklich stornieren?
       ↪ Error = [de] Der Fall mit der Nummer {0} konnte nicht storniert werden
       ↪ Success = [de] Der Fall mit der Nummer {0} erfolgreich storniert
     ↪ CaseDelete
       ↪ Confirm = [en] Do you really want to delete case number {0}?, [de] Möchten Sie den Fall mit der Nummer {0} wirklich löschen?
       ↪ Error = [en] Case {0} could not be deleted! Try again or check server logs for errors., [de] Fall {0} konnte nicht gelöscht werden! Versuchen Sie es erneut oder prüfen Sie den Fehler im Serverprotokoll.
       ↪ NoProcesses = [en] This case is not assigned to any process, [de] Der Fall ist keinen Vorgängen zugeordnet
       ↪ Processes = [en] This case is assigned to the following processes: {0}, [de] Der Fall ist folgenden Vorgängen zugeordnet: {0}
       ↪ Success = [en] Case {0} successfully deleted!, [de] Der Fall mit der Nummer {0} erfolgreich gelöscht
     ↪ CaseUnCancel
       ↪ Confirm = [de] Möchten Sie die Stornierung für den Fall mit der Nummer {0} wirklich aufheben?
       ↪ Error = [de] Die Stornierung für den Fall mit der Nummer {0} konnte nicht aufgehoben werden
       ↪ Success = [de] Die Stornierung für den Fall mit der Nummer {0} ist erfolgreich aufgehoben
     ↪ Delete = [en] Delete case, [de] Fall löschen
     ↪ Open = [en] Open case, [de] Fall öffnen
     ↪ Uncancel = [de] Stornierung aufheben
     ↪ Unlock = [en] Unlock case, [de] Fall entsperren
       ↪ Error = [en] Case {0} could not be unlocked!, [de] Der Fall mit der Nummer {0} konnte nicht entsperrt werden
       ↪ Success = [en] Case {0} successfully unlocked!, [de] Der Fall mit der Nummer {0} erfolgreich entsperrt
   ↪ Update = [en] update the Working List, [de] Arbeitsliste aktualisieren
   ↪ Column
     ↪ Dialog = [en] Column Selection, [de] Arbeitsliste konfigurieren
       ↪ ExplanationLabel = [de] Spalten Beschreibung
   ↪ Filter
     ↪ Dialog = [en] Filter Dialog, [de] Filter Dialog
*/